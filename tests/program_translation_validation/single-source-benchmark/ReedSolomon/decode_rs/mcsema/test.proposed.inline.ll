; ModuleID = 'mcsema/test.proposed.ll'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"

%union.anon = type { i64 }
%seg_400388__init_type = type <{ [23 x i8] }>
%seg_4003a0__text_type = type <{ [354 x i8] }>
%seg_400504__fini_type = type <{ [9 x i8] }>
%seg_400510__rodata_type = type <{ [4 x i8] }>
%seg_400514__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400548__eh_frame_type = type <{ [208 x i8] }>
%seg_601018__data_type = type <{ [16 x i8] }>
%__bss_start_type = type <{ [8 x i8] }>
%seg_400514__fini_type = type <{ [9 x i8] }>
%seg_400520__rodata_type = type <{ [4 x i8] }>
%seg_400524__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400558__eh_frame_type = type <{ [208 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque
%struct.anon.2 = type { i8, i8 }

@switch.table = private unnamed_addr constant [4 x i32] [i32 2048, i32 3072, i32 0, i32 1024]
@DR0 = external global i64, align 8
@DR1 = external global i64, align 8
@DR2 = external global i64, align 8
@DR3 = external global i64, align 8
@DR4 = external global i64, align 8
@DR5 = external global i64, align 8
@DR6 = external global i64, align 8
@DR7 = external global i64, align 8
@gCR0 = external global %union.anon, align 1
@gCR1 = external global %union.anon, align 1
@gCR2 = external global %union.anon, align 1
@gCR3 = external global %union.anon, align 1
@gCR4 = external global %union.anon, align 1
@gCR8 = external global %union.anon, align 1
@seg_400388__init = internal constant %seg_400388__init_type <{ [23 x i8] c"H\83\EC\08H\8B\05e\0C \00H\85\C0t\02\FF\D0H\83\C4\08\C3" }>
@seg_4003a0__text = internal constant %seg_4003a0__text_type <{ [354 x i8] c"1\EDI\89\D1^H\89\E2H\83\E4\F0PTI\C7\C0\00\05@\00H\C7\C1\90\04@\00H\C7\C7\88\04@\00\FF\15&\0C \00\F4\0F\1FD\00\00\F3\C3f.\0F\1F\84\00\00\00\00\00\0F\1F@\00U\B8(\10`\00H=(\10`\00H\89\E5t\17\B8\00\00\00\00H\85\C0t\0D]\BF(\10`\00\FF\E0\0F\1FD\00\00]\C3f\0F\1FD\00\00\BE(\10`\00UH\81\EE(\10`\00H\89\E5H\C1\FE\03H\89\F0H\C1\E8?H\01\C6H\D1\FEt\15\B8\00\00\00\00H\85\C0t\0B]\BF(\10`\00\FF\E0\0F\1F\00]\C3f\0F\1FD\00\00\80=\D1\0B \00\00u\17UH\89\E5\E8~\FF\FF\FF\C6\05\BF\0B \00\01]\C3\0F\1FD\00\00\F3\C3\0F\1F@\00f.\0F\1F\84\00\00\00\00\00UH\89\E5]\EB\89\90U\C3f\0F\1FD\00\00AWAVI\89\D7AUATL\8D%\9E\09 \00UH\8D-\9E\09 \00SA\89\FDI\89\F6L)\E5H\83\EC\08H\C1\FD\03\E8\C7\FE\FF\FFH\85\EDt 1\DB\0F\1F\84\00\00\00\00\00L\89\FAL\89\F6D\89\EFA\FF\14\DCH\83\C3\01H9\DDu\EAH\83\C4\08[]A\5CA]A^A_\C3\90f.\0F\1F\84\00\00\00\00\00\F3\C3" }>
@seg_400504__fini = internal constant %seg_400504__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400510__rodata = internal constant %seg_400510__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400514__eh_frame_hdr = internal constant %seg_400514__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00\8C\FE\FF\FFL\00\00\00\BC\FE\FF\FFx\00\00\00t\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400548__eh_frame = internal constant %seg_400548__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\008\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00<\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\E0\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@seg_601018__data = internal global %seg_601018__data_type zeroinitializer
@__bss_start = global %__bss_start_type zeroinitializer
@0 = internal global i1 false
@seg_400514__fini = internal constant %seg_400514__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400520__rodata = internal constant %seg_400520__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400524__eh_frame_hdr = internal constant %seg_400524__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00|\FE\FF\FFL\00\00\00\AC\FE\FF\FFx\00\00\00d\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400558__eh_frame = internal constant %seg_400558__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\00(\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00,\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\D0\FE\FF\FF\0B\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>

declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare i32 @__remill_fpu_exception_test_and_clear(i32, i32)

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #0

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #0

; Function Attrs: nounwind readnone
declare i32 @llvm.ctpop.i32(i32) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.bswap.i64(i64) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.cttz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.cttz.i64(i64, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.ctlz.i64(i64, i1) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #0

; Function Attrs: nounwind readnone
declare double @llvm.nearbyint.f64(double) #1

; Function Attrs: nounwind readnone
declare double @llvm.fabs.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.nearbyint.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.fabs.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare double @llvm.trunc.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.trunc.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare float @llvm.nearbyint.f32(float) #1

; Function Attrs: nounwind readnone
declare float @llvm.fabs.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.nearbyint.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.fabs.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare float @llvm.trunc.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.trunc.v4f32(<4 x float>) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #0

declare double @atan(double) local_unnamed_addr

declare double @cos(double) local_unnamed_addr

declare double @sin(double) local_unnamed_addr

declare double @sqrt(double) local_unnamed_addr

declare double @tan(double) local_unnamed_addr

declare extern_weak x86_64_sysvcc i64 @abort()

declare extern_weak x86_64_sysvcc i64 @abs(i64)

declare extern_weak x86_64_sysvcc i64 @asin(i64)

declare extern_weak x86_64_sysvcc i64 @atof(i64)

declare extern_weak x86_64_sysvcc i64 @atoi(i64)

declare extern_weak x86_64_sysvcc i64 @atol(i64)

declare extern_weak x86_64_sysvcc i64 @calloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @clock()

declare extern_weak x86_64_sysvcc i64 @cosf(i64)

declare extern_weak x86_64_sysvcc i64 @exit(i64)

declare extern_weak x86_64_sysvcc i64 @exp(i64)

declare extern_weak x86_64_sysvcc i64 @fflush(i64)

declare extern_weak x86_64_sysvcc i64 @floor(i64)

declare extern_weak x86_64_sysvcc i64 @fprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @fputs(i64, i64)

declare extern_weak x86_64_sysvcc i64 @free(i64)

declare extern_weak x86_64_sysvcc i64 @fwrite(i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @getchar()

declare extern_weak x86_64_sysvcc i64 @gettimeofday(i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_fscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_scanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_sscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @log(i64)

declare extern_weak x86_64_sysvcc i64 @lrand48()

declare extern_weak x86_64_sysvcc i64 @malloc(i64)

declare extern_weak x86_64_sysvcc i64 @memalign(i64, i64)

declare extern_weak x86_64_sysvcc i64 @memcpy(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @memset(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @perror(i64)

declare extern_weak x86_64_sysvcc i64 @posix_memalign(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @pow(i64, i64)

declare extern_weak x86_64_sysvcc i64 @printf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @putchar(i64)

declare extern_weak x86_64_sysvcc i64 @puts(i64)

declare extern_weak x86_64_sysvcc i64 @rand()

declare extern_weak x86_64_sysvcc i64 @random()

declare extern_weak x86_64_sysvcc i64 @realloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @seed48(i64)

declare extern_weak x86_64_sysvcc i64 @sinf(i64)

declare extern_weak x86_64_sysvcc i64 @sprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @srand(i64)

declare extern_weak x86_64_sysvcc i64 @strcat(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcmp(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcpy(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strdup(i64)

declare extern_weak x86_64_sysvcc i64 @strlen(i64)

declare extern_weak x86_64_sysvcc i64 @strncmp(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @strtoll(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @time(i64)

declare extern_weak x86_64_sysvcc i64 @ungetc(i64, i64)

declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare %struct.Memory* @ext_sqrt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_atan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_cos(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_tan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_sin(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

; Function Attrs: alwaysinline
define %struct.Memory* @decode_rs(%struct.State* noalias, i64, %struct.Memory* noalias) #2 {
entry:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %MEMORY = alloca %struct.Memory*, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8
  %loadMem_400940 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0
  %PC.i = bitcast %union.anon* %6 to i64*
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 15
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0
  %RBP.i = bitcast %union.anon* %9 to i64*
  %10 = load i64, i64* %RBP.i
  %11 = load i64, i64* %PC.i
  %12 = add i64 %11, 1
  store i64 %12, i64* %PC.i
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, -8
  %16 = inttoptr i64 %15 to i64*
  store i64 %10, i64* %16
  store i64 %15, i64* %13, align 8
  store %struct.Memory* %loadMem_400940, %struct.Memory** %MEMORY
  %loadMem_400941 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18 = getelementptr inbounds %struct.GPR, %struct.GPR* %17, i32 0, i32 33
  %19 = getelementptr inbounds %struct.Reg, %struct.Reg* %18, i32 0, i32 0
  %PC.i177 = bitcast %union.anon* %19 to i64*
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21 = getelementptr inbounds %struct.GPR, %struct.GPR* %20, i32 0, i32 13
  %22 = getelementptr inbounds %struct.Reg, %struct.Reg* %21, i32 0, i32 0
  %RSP.i178 = bitcast %union.anon* %22 to i64*
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 15
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0
  %RBP.i179 = bitcast %union.anon* %25 to i64*
  %26 = load i64, i64* %RSP.i178
  %27 = load i64, i64* %PC.i177
  %28 = add i64 %27, 3
  store i64 %28, i64* %PC.i177
  store i64 %26, i64* %RBP.i179, align 8
  store %struct.Memory* %loadMem_400941, %struct.Memory** %MEMORY
  %loadMem_400944 = load %struct.Memory*, %struct.Memory** %MEMORY
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30 = getelementptr inbounds %struct.GPR, %struct.GPR* %29, i32 0, i32 33
  %31 = getelementptr inbounds %struct.Reg, %struct.Reg* %30, i32 0, i32 0
  %PC.i205 = bitcast %union.anon* %31 to i64*
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33 = getelementptr inbounds %struct.GPR, %struct.GPR* %32, i32 0, i32 13
  %34 = getelementptr inbounds %struct.Reg, %struct.Reg* %33, i32 0, i32 0
  %RSP.i206 = bitcast %union.anon* %34 to i64*
  %35 = load i64, i64* %RSP.i206
  %36 = load i64, i64* %PC.i205
  %37 = add i64 %36, 7
  store i64 %37, i64* %PC.i205
  %38 = sub i64 %35, 2608
  store i64 %38, i64* %RSP.i206, align 8
  %39 = icmp ult i64 %35, 2608
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %40, i8* %41, align 1
  %42 = trunc i64 %38 to i32
  %43 = and i32 %42, 255
  %44 = call i32 @llvm.ctpop.i32(i32 %43)
  %45 = trunc i32 %44 to i8
  %46 = and i8 %45, 1
  %47 = xor i8 %46, 1
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %47, i8* %48, align 1
  %49 = xor i64 2608, %35
  %50 = xor i64 %49, %38
  %51 = lshr i64 %50, 4
  %52 = trunc i64 %51 to i8
  %53 = and i8 %52, 1
  %54 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %53, i8* %54, align 1
  %55 = icmp eq i64 %38, 0
  %56 = zext i1 %55 to i8
  %57 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %56, i8* %57, align 1
  %58 = lshr i64 %38, 63
  %59 = trunc i64 %58 to i8
  %60 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %59, i8* %60, align 1
  %61 = lshr i64 %35, 63
  %62 = xor i64 %58, %61
  %63 = add i64 %62, %61
  %64 = icmp eq i64 %63, 2
  %65 = zext i1 %64 to i8
  %66 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %65, i8* %66, align 1
  store %struct.Memory* %loadMem_400944, %struct.Memory** %MEMORY
  %loadMem_40094b = load %struct.Memory*, %struct.Memory** %MEMORY
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %68 = getelementptr inbounds %struct.GPR, %struct.GPR* %67, i32 0, i32 33
  %69 = getelementptr inbounds %struct.Reg, %struct.Reg* %68, i32 0, i32 0
  %PC.i253 = bitcast %union.anon* %69 to i64*
  %70 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %71 = getelementptr inbounds %struct.GPR, %struct.GPR* %70, i32 0, i32 15
  %72 = getelementptr inbounds %struct.Reg, %struct.Reg* %71, i32 0, i32 0
  %RBP.i254 = bitcast %union.anon* %72 to i64*
  %73 = load i64, i64* %RBP.i254
  %74 = sub i64 %73, 1492
  %75 = load i64, i64* %PC.i253
  %76 = add i64 %75, 10
  store i64 %76, i64* %PC.i253
  %77 = inttoptr i64 %74 to i32*
  store i32 0, i32* %77
  store %struct.Memory* %loadMem_40094b, %struct.Memory** %MEMORY
  %loadMem_400955 = load %struct.Memory*, %struct.Memory** %MEMORY
  %78 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %79 = getelementptr inbounds %struct.GPR, %struct.GPR* %78, i32 0, i32 33
  %80 = getelementptr inbounds %struct.Reg, %struct.Reg* %79, i32 0, i32 0
  %PC.i368 = bitcast %union.anon* %80 to i64*
  %81 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %82 = getelementptr inbounds %struct.GPR, %struct.GPR* %81, i32 0, i32 15
  %83 = getelementptr inbounds %struct.Reg, %struct.Reg* %82, i32 0, i32 0
  %RBP.i369 = bitcast %union.anon* %83 to i64*
  %84 = load i64, i64* %RBP.i369
  %85 = sub i64 %84, 1496
  %86 = load i64, i64* %PC.i368
  %87 = add i64 %86, 10
  store i64 %87, i64* %PC.i368
  %88 = inttoptr i64 %85 to i32*
  store i32 0, i32* %88
  store %struct.Memory* %loadMem_400955, %struct.Memory** %MEMORY
  %loadMem_40095f = load %struct.Memory*, %struct.Memory** %MEMORY
  %89 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %90 = getelementptr inbounds %struct.GPR, %struct.GPR* %89, i32 0, i32 33
  %91 = getelementptr inbounds %struct.Reg, %struct.Reg* %90, i32 0, i32 0
  %PC.i546 = bitcast %union.anon* %91 to i64*
  %92 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %93 = getelementptr inbounds %struct.GPR, %struct.GPR* %92, i32 0, i32 15
  %94 = getelementptr inbounds %struct.Reg, %struct.Reg* %93, i32 0, i32 0
  %RBP.i547 = bitcast %union.anon* %94 to i64*
  %95 = load i64, i64* %RBP.i547
  %96 = sub i64 %95, 4
  %97 = load i64, i64* %PC.i546
  %98 = add i64 %97, 7
  store i64 %98, i64* %PC.i546
  %99 = inttoptr i64 %96 to i32*
  store i32 1, i32* %99
  store %struct.Memory* %loadMem_40095f, %struct.Memory** %MEMORY
  br label %block_.L_400966

block_.L_400966:                                  ; preds = %block_.L_400a1a, %entry
  %loadMem_400966 = load %struct.Memory*, %struct.Memory** %MEMORY
  %100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %101 = getelementptr inbounds %struct.GPR, %struct.GPR* %100, i32 0, i32 33
  %102 = getelementptr inbounds %struct.Reg, %struct.Reg* %101, i32 0, i32 0
  %PC.i898 = bitcast %union.anon* %102 to i64*
  %103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %104 = getelementptr inbounds %struct.GPR, %struct.GPR* %103, i32 0, i32 15
  %105 = getelementptr inbounds %struct.Reg, %struct.Reg* %104, i32 0, i32 0
  %RBP.i899 = bitcast %union.anon* %105 to i64*
  %106 = load i64, i64* %RBP.i899
  %107 = sub i64 %106, 4
  %108 = load i64, i64* %PC.i898
  %109 = add i64 %108, 4
  store i64 %109, i64* %PC.i898
  %110 = inttoptr i64 %107 to i32*
  %111 = load i32, i32* %110
  %112 = sub i32 %111, 16
  %113 = icmp ult i32 %111, 16
  %114 = zext i1 %113 to i8
  %115 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %114, i8* %115, align 1
  %116 = and i32 %112, 255
  %117 = call i32 @llvm.ctpop.i32(i32 %116)
  %118 = trunc i32 %117 to i8
  %119 = and i8 %118, 1
  %120 = xor i8 %119, 1
  %121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %120, i8* %121, align 1
  %122 = xor i32 %111, 16
  %123 = xor i32 %122, %112
  %124 = lshr i32 %123, 4
  %125 = trunc i32 %124 to i8
  %126 = and i8 %125, 1
  %127 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %126, i8* %127, align 1
  %128 = icmp eq i32 %112, 0
  %129 = zext i1 %128 to i8
  %130 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %129, i8* %130, align 1
  %131 = lshr i32 %112, 31
  %132 = trunc i32 %131 to i8
  %133 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %132, i8* %133, align 1
  %134 = lshr i32 %111, 31
  %135 = xor i32 %131, %134
  %136 = add i32 %135, %134
  %137 = icmp eq i32 %136, 2
  %138 = zext i1 %137 to i8
  %139 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %138, i8* %139, align 1
  store %struct.Memory* %loadMem_400966, %struct.Memory** %MEMORY
  %loadMem_40096a = load %struct.Memory*, %struct.Memory** %MEMORY
  %140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %141 = getelementptr inbounds %struct.GPR, %struct.GPR* %140, i32 0, i32 33
  %142 = getelementptr inbounds %struct.Reg, %struct.Reg* %141, i32 0, i32 0
  %PC.i1163 = bitcast %union.anon* %142 to i64*
  %143 = load i64, i64* %PC.i1163
  %144 = add i64 %143, 220
  %145 = load i64, i64* %PC.i1163
  %146 = add i64 %145, 6
  %147 = load i64, i64* %PC.i1163
  %148 = add i64 %147, 6
  store i64 %148, i64* %PC.i1163
  %149 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %150 = load i8, i8* %149, align 1
  %151 = icmp eq i8 %150, 0
  %152 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %153 = load i8, i8* %152, align 1
  %154 = icmp ne i8 %153, 0
  %155 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %156 = load i8, i8* %155, align 1
  %157 = icmp ne i8 %156, 0
  %158 = xor i1 %154, %157
  %159 = xor i1 %158, true
  %160 = and i1 %151, %159
  %161 = zext i1 %160 to i8
  store i8 %161, i8* %BRANCH_TAKEN, align 1
  %162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %163 = select i1 %160, i64 %144, i64 %146
  store i64 %163, i64* %162, align 8
  store %struct.Memory* %loadMem_40096a, %struct.Memory** %MEMORY
  %loadBr_40096a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40096a = icmp eq i8 %loadBr_40096a, 1
  br i1 %cmpBr_40096a, label %block_.L_400a46, label %block_400970

block_400970:                                     ; preds = %block_.L_400966
  %loadMem_400970 = load %struct.Memory*, %struct.Memory** %MEMORY
  %164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %165 = getelementptr inbounds %struct.GPR, %struct.GPR* %164, i32 0, i32 33
  %166 = getelementptr inbounds %struct.Reg, %struct.Reg* %165, i32 0, i32 0
  %PC.i1507 = bitcast %union.anon* %166 to i64*
  %167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %168 = getelementptr inbounds %struct.GPR, %struct.GPR* %167, i32 0, i32 1
  %169 = getelementptr inbounds %struct.Reg, %struct.Reg* %168, i32 0, i32 0
  %RAX.i1508 = bitcast %union.anon* %169 to i64*
  %170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %171 = getelementptr inbounds %struct.GPR, %struct.GPR* %170, i32 0, i32 15
  %172 = getelementptr inbounds %struct.Reg, %struct.Reg* %171, i32 0, i32 0
  %RBP.i1509 = bitcast %union.anon* %172 to i64*
  %173 = load i64, i64* %RBP.i1509
  %174 = sub i64 %173, 4
  %175 = load i64, i64* %PC.i1507
  %176 = add i64 %175, 4
  store i64 %176, i64* %PC.i1507
  %177 = inttoptr i64 %174 to i32*
  %178 = load i32, i32* %177
  %179 = sext i32 %178 to i64
  store i64 %179, i64* %RAX.i1508, align 8
  store %struct.Memory* %loadMem_400970, %struct.Memory** %MEMORY
  %loadMem_400974 = load %struct.Memory*, %struct.Memory** %MEMORY
  %180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %181 = getelementptr inbounds %struct.GPR, %struct.GPR* %180, i32 0, i32 33
  %182 = getelementptr inbounds %struct.Reg, %struct.Reg* %181, i32 0, i32 0
  %PC.i2040 = bitcast %union.anon* %182 to i64*
  %183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %184 = getelementptr inbounds %struct.GPR, %struct.GPR* %183, i32 0, i32 1
  %185 = getelementptr inbounds %struct.Reg, %struct.Reg* %184, i32 0, i32 0
  %RAX.i2041 = bitcast %union.anon* %185 to i64*
  %186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %187 = getelementptr inbounds %struct.GPR, %struct.GPR* %186, i32 0, i32 15
  %188 = getelementptr inbounds %struct.Reg, %struct.Reg* %187, i32 0, i32 0
  %RBP.i2042 = bitcast %union.anon* %188 to i64*
  %189 = load i64, i64* %RBP.i2042
  %190 = load i64, i64* %RAX.i2041
  %191 = mul i64 %190, 4
  %192 = add i64 %189, -1488
  %193 = add i64 %192, %191
  %194 = load i64, i64* %PC.i2040
  %195 = add i64 %194, 11
  store i64 %195, i64* %PC.i2040
  %196 = inttoptr i64 %193 to i32*
  store i32 0, i32* %196
  store %struct.Memory* %loadMem_400974, %struct.Memory** %MEMORY
  %loadMem_40097f = load %struct.Memory*, %struct.Memory** %MEMORY
  %197 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %198 = getelementptr inbounds %struct.GPR, %struct.GPR* %197, i32 0, i32 33
  %199 = getelementptr inbounds %struct.Reg, %struct.Reg* %198, i32 0, i32 0
  %PC.i2079 = bitcast %union.anon* %199 to i64*
  %200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %201 = getelementptr inbounds %struct.GPR, %struct.GPR* %200, i32 0, i32 15
  %202 = getelementptr inbounds %struct.Reg, %struct.Reg* %201, i32 0, i32 0
  %RBP.i2080 = bitcast %union.anon* %202 to i64*
  %203 = load i64, i64* %RBP.i2080
  %204 = sub i64 %203, 8
  %205 = load i64, i64* %PC.i2079
  %206 = add i64 %205, 7
  store i64 %206, i64* %PC.i2079
  %207 = inttoptr i64 %204 to i32*
  store i32 0, i32* %207
  store %struct.Memory* %loadMem_40097f, %struct.Memory** %MEMORY
  br label %block_.L_400986

block_.L_400986:                                  ; preds = %block_.L_4009f0, %block_400970
  %loadMem_400986 = load %struct.Memory*, %struct.Memory** %MEMORY
  %208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %209 = getelementptr inbounds %struct.GPR, %struct.GPR* %208, i32 0, i32 33
  %210 = getelementptr inbounds %struct.Reg, %struct.Reg* %209, i32 0, i32 0
  %PC.i2077 = bitcast %union.anon* %210 to i64*
  %211 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %212 = getelementptr inbounds %struct.GPR, %struct.GPR* %211, i32 0, i32 15
  %213 = getelementptr inbounds %struct.Reg, %struct.Reg* %212, i32 0, i32 0
  %RBP.i2078 = bitcast %union.anon* %213 to i64*
  %214 = load i64, i64* %RBP.i2078
  %215 = sub i64 %214, 8
  %216 = load i64, i64* %PC.i2077
  %217 = add i64 %216, 7
  store i64 %217, i64* %PC.i2077
  %218 = inttoptr i64 %215 to i32*
  %219 = load i32, i32* %218
  %220 = sub i32 %219, 255
  %221 = icmp ult i32 %219, 255
  %222 = zext i1 %221 to i8
  %223 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %222, i8* %223, align 1
  %224 = and i32 %220, 255
  %225 = call i32 @llvm.ctpop.i32(i32 %224)
  %226 = trunc i32 %225 to i8
  %227 = and i8 %226, 1
  %228 = xor i8 %227, 1
  %229 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %228, i8* %229, align 1
  %230 = xor i32 %219, 255
  %231 = xor i32 %230, %220
  %232 = lshr i32 %231, 4
  %233 = trunc i32 %232 to i8
  %234 = and i8 %233, 1
  %235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %234, i8* %235, align 1
  %236 = icmp eq i32 %220, 0
  %237 = zext i1 %236 to i8
  %238 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %237, i8* %238, align 1
  %239 = lshr i32 %220, 31
  %240 = trunc i32 %239 to i8
  %241 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %240, i8* %241, align 1
  %242 = lshr i32 %219, 31
  %243 = xor i32 %239, %242
  %244 = add i32 %243, %242
  %245 = icmp eq i32 %244, 2
  %246 = zext i1 %245 to i8
  %247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %246, i8* %247, align 1
  store %struct.Memory* %loadMem_400986, %struct.Memory** %MEMORY
  %loadMem_40098d = load %struct.Memory*, %struct.Memory** %MEMORY
  %248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %249 = getelementptr inbounds %struct.GPR, %struct.GPR* %248, i32 0, i32 33
  %250 = getelementptr inbounds %struct.Reg, %struct.Reg* %249, i32 0, i32 0
  %PC.i2076 = bitcast %union.anon* %250 to i64*
  %251 = load i64, i64* %PC.i2076
  %252 = add i64 %251, 113
  %253 = load i64, i64* %PC.i2076
  %254 = add i64 %253, 6
  %255 = load i64, i64* %PC.i2076
  %256 = add i64 %255, 6
  store i64 %256, i64* %PC.i2076
  %257 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %258 = load i8, i8* %257, align 1
  %259 = icmp ne i8 %258, 0
  %260 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %261 = load i8, i8* %260, align 1
  %262 = icmp ne i8 %261, 0
  %263 = xor i1 %259, %262
  %264 = xor i1 %263, true
  %265 = zext i1 %264 to i8
  store i8 %265, i8* %BRANCH_TAKEN, align 1
  %266 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %267 = select i1 %263, i64 %254, i64 %252
  store i64 %267, i64* %266, align 8
  store %struct.Memory* %loadMem_40098d, %struct.Memory** %MEMORY
  %loadBr_40098d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40098d = icmp eq i8 %loadBr_40098d, 1
  br i1 %cmpBr_40098d, label %block_.L_4009fe, label %block_400993

block_400993:                                     ; preds = %block_.L_400986
  %loadMem_400993 = load %struct.Memory*, %struct.Memory** %MEMORY
  %268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %269 = getelementptr inbounds %struct.GPR, %struct.GPR* %268, i32 0, i32 33
  %270 = getelementptr inbounds %struct.Reg, %struct.Reg* %269, i32 0, i32 0
  %PC.i2073 = bitcast %union.anon* %270 to i64*
  %271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %272 = getelementptr inbounds %struct.GPR, %struct.GPR* %271, i32 0, i32 1
  %273 = getelementptr inbounds %struct.Reg, %struct.Reg* %272, i32 0, i32 0
  %RAX.i2074 = bitcast %union.anon* %273 to i64*
  %274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %275 = getelementptr inbounds %struct.GPR, %struct.GPR* %274, i32 0, i32 15
  %276 = getelementptr inbounds %struct.Reg, %struct.Reg* %275, i32 0, i32 0
  %RBP.i2075 = bitcast %union.anon* %276 to i64*
  %277 = load i64, i64* %RBP.i2075
  %278 = sub i64 %277, 8
  %279 = load i64, i64* %PC.i2073
  %280 = add i64 %279, 4
  store i64 %280, i64* %PC.i2073
  %281 = inttoptr i64 %278 to i32*
  %282 = load i32, i32* %281
  %283 = sext i32 %282 to i64
  store i64 %283, i64* %RAX.i2074, align 8
  store %struct.Memory* %loadMem_400993, %struct.Memory** %MEMORY
  %loadMem_400997 = load %struct.Memory*, %struct.Memory** %MEMORY
  %284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %285 = getelementptr inbounds %struct.GPR, %struct.GPR* %284, i32 0, i32 33
  %286 = getelementptr inbounds %struct.Reg, %struct.Reg* %285, i32 0, i32 0
  %PC.i2071 = bitcast %union.anon* %286 to i64*
  %287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %288 = getelementptr inbounds %struct.GPR, %struct.GPR* %287, i32 0, i32 1
  %289 = getelementptr inbounds %struct.Reg, %struct.Reg* %288, i32 0, i32 0
  %RAX.i2072 = bitcast %union.anon* %289 to i64*
  %290 = load i64, i64* %RAX.i2072
  %291 = mul i64 %290, 4
  %292 = add i64 %291, 6303872
  %293 = load i64, i64* %PC.i2071
  %294 = add i64 %293, 8
  store i64 %294, i64* %PC.i2071
  %295 = inttoptr i64 %292 to i32*
  %296 = load i32, i32* %295
  %297 = sub i32 %296, -1
  %298 = icmp ult i32 %296, -1
  %299 = zext i1 %298 to i8
  %300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %299, i8* %300, align 1
  %301 = and i32 %297, 255
  %302 = call i32 @llvm.ctpop.i32(i32 %301)
  %303 = trunc i32 %302 to i8
  %304 = and i8 %303, 1
  %305 = xor i8 %304, 1
  %306 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %305, i8* %306, align 1
  %307 = xor i32 %296, -1
  %308 = xor i32 %307, %297
  %309 = lshr i32 %308, 4
  %310 = trunc i32 %309 to i8
  %311 = and i8 %310, 1
  %312 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %311, i8* %312, align 1
  %313 = icmp eq i32 %297, 0
  %314 = zext i1 %313 to i8
  %315 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %314, i8* %315, align 1
  %316 = lshr i32 %297, 31
  %317 = trunc i32 %316 to i8
  %318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %317, i8* %318, align 1
  %319 = lshr i32 %296, 31
  %320 = xor i32 %319, 1
  %321 = xor i32 %316, %319
  %322 = add i32 %321, %320
  %323 = icmp eq i32 %322, 2
  %324 = zext i1 %323 to i8
  %325 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %324, i8* %325, align 1
  store %struct.Memory* %loadMem_400997, %struct.Memory** %MEMORY
  %loadMem_40099f = load %struct.Memory*, %struct.Memory** %MEMORY
  %326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %327 = getelementptr inbounds %struct.GPR, %struct.GPR* %326, i32 0, i32 33
  %328 = getelementptr inbounds %struct.Reg, %struct.Reg* %327, i32 0, i32 0
  %PC.i2070 = bitcast %union.anon* %328 to i64*
  %329 = load i64, i64* %PC.i2070
  %330 = add i64 %329, 76
  %331 = load i64, i64* %PC.i2070
  %332 = add i64 %331, 6
  %333 = load i64, i64* %PC.i2070
  %334 = add i64 %333, 6
  store i64 %334, i64* %PC.i2070
  %335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %336 = load i8, i8* %335, align 1
  store i8 %336, i8* %BRANCH_TAKEN, align 1
  %337 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %338 = icmp ne i8 %336, 0
  %339 = select i1 %338, i64 %330, i64 %332
  store i64 %339, i64* %337, align 8
  store %struct.Memory* %loadMem_40099f, %struct.Memory** %MEMORY
  %loadBr_40099f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40099f = icmp eq i8 %loadBr_40099f, 1
  br i1 %cmpBr_40099f, label %block_.L_4009eb, label %block_4009a5

block_4009a5:                                     ; preds = %block_400993
  %loadMem_4009a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %341 = getelementptr inbounds %struct.GPR, %struct.GPR* %340, i32 0, i32 33
  %342 = getelementptr inbounds %struct.Reg, %struct.Reg* %341, i32 0, i32 0
  %PC.i2068 = bitcast %union.anon* %342 to i64*
  %343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %344 = getelementptr inbounds %struct.GPR, %struct.GPR* %343, i32 0, i32 1
  %345 = getelementptr inbounds %struct.Reg, %struct.Reg* %344, i32 0, i32 0
  %RAX.i2069 = bitcast %union.anon* %345 to i64*
  %346 = load i64, i64* %PC.i2068
  %347 = add i64 %346, 5
  store i64 %347, i64* %PC.i2068
  store i64 255, i64* %RAX.i2069, align 8
  store %struct.Memory* %loadMem_4009a5, %struct.Memory** %MEMORY
  %loadMem_4009aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %349 = getelementptr inbounds %struct.GPR, %struct.GPR* %348, i32 0, i32 33
  %350 = getelementptr inbounds %struct.Reg, %struct.Reg* %349, i32 0, i32 0
  %PC.i2065 = bitcast %union.anon* %350 to i64*
  %351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %352 = getelementptr inbounds %struct.GPR, %struct.GPR* %351, i32 0, i32 5
  %353 = getelementptr inbounds %struct.Reg, %struct.Reg* %352, i32 0, i32 0
  %RCX.i2066 = bitcast %union.anon* %353 to i64*
  %354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %355 = getelementptr inbounds %struct.GPR, %struct.GPR* %354, i32 0, i32 15
  %356 = getelementptr inbounds %struct.Reg, %struct.Reg* %355, i32 0, i32 0
  %RBP.i2067 = bitcast %union.anon* %356 to i64*
  %357 = load i64, i64* %RBP.i2067
  %358 = sub i64 %357, 8
  %359 = load i64, i64* %PC.i2065
  %360 = add i64 %359, 4
  store i64 %360, i64* %PC.i2065
  %361 = inttoptr i64 %358 to i32*
  %362 = load i32, i32* %361
  %363 = sext i32 %362 to i64
  store i64 %363, i64* %RCX.i2066, align 8
  store %struct.Memory* %loadMem_4009aa, %struct.Memory** %MEMORY
  %loadMem_4009ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %365 = getelementptr inbounds %struct.GPR, %struct.GPR* %364, i32 0, i32 33
  %366 = getelementptr inbounds %struct.Reg, %struct.Reg* %365, i32 0, i32 0
  %PC.i2062 = bitcast %union.anon* %366 to i64*
  %367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %368 = getelementptr inbounds %struct.GPR, %struct.GPR* %367, i32 0, i32 5
  %369 = getelementptr inbounds %struct.Reg, %struct.Reg* %368, i32 0, i32 0
  %RCX.i2063 = bitcast %union.anon* %369 to i64*
  %370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %371 = getelementptr inbounds %struct.GPR, %struct.GPR* %370, i32 0, i32 7
  %372 = getelementptr inbounds %struct.Reg, %struct.Reg* %371, i32 0, i32 0
  %RDX.i2064 = bitcast %union.anon* %372 to i64*
  %373 = load i64, i64* %RCX.i2063
  %374 = mul i64 %373, 4
  %375 = add i64 %374, 6303872
  %376 = load i64, i64* %PC.i2062
  %377 = add i64 %376, 7
  store i64 %377, i64* %PC.i2062
  %378 = inttoptr i64 %375 to i32*
  %379 = load i32, i32* %378
  %380 = zext i32 %379 to i64
  store i64 %380, i64* %RDX.i2064, align 8
  store %struct.Memory* %loadMem_4009ae, %struct.Memory** %MEMORY
  %loadMem_4009b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %382 = getelementptr inbounds %struct.GPR, %struct.GPR* %381, i32 0, i32 33
  %383 = getelementptr inbounds %struct.Reg, %struct.Reg* %382, i32 0, i32 0
  %PC.i2059 = bitcast %union.anon* %383 to i64*
  %384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %385 = getelementptr inbounds %struct.GPR, %struct.GPR* %384, i32 0, i32 9
  %386 = getelementptr inbounds %struct.Reg, %struct.Reg* %385, i32 0, i32 0
  %RSI.i2060 = bitcast %union.anon* %386 to i64*
  %387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %388 = getelementptr inbounds %struct.GPR, %struct.GPR* %387, i32 0, i32 15
  %389 = getelementptr inbounds %struct.Reg, %struct.Reg* %388, i32 0, i32 0
  %RBP.i2061 = bitcast %union.anon* %389 to i64*
  %390 = load i64, i64* %RBP.i2061
  %391 = sub i64 %390, 4
  %392 = load i64, i64* %PC.i2059
  %393 = add i64 %392, 3
  store i64 %393, i64* %PC.i2059
  %394 = inttoptr i64 %391 to i32*
  %395 = load i32, i32* %394
  %396 = zext i32 %395 to i64
  store i64 %396, i64* %RSI.i2060, align 8
  store %struct.Memory* %loadMem_4009b5, %struct.Memory** %MEMORY
  %loadMem_4009b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %398 = getelementptr inbounds %struct.GPR, %struct.GPR* %397, i32 0, i32 33
  %399 = getelementptr inbounds %struct.Reg, %struct.Reg* %398, i32 0, i32 0
  %PC.i2056 = bitcast %union.anon* %399 to i64*
  %400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %401 = getelementptr inbounds %struct.GPR, %struct.GPR* %400, i32 0, i32 9
  %402 = getelementptr inbounds %struct.Reg, %struct.Reg* %401, i32 0, i32 0
  %RSI.i2057 = bitcast %union.anon* %402 to i64*
  %403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %404 = getelementptr inbounds %struct.GPR, %struct.GPR* %403, i32 0, i32 15
  %405 = getelementptr inbounds %struct.Reg, %struct.Reg* %404, i32 0, i32 0
  %RBP.i2058 = bitcast %union.anon* %405 to i64*
  %406 = load i64, i64* %RSI.i2057
  %407 = load i64, i64* %RBP.i2058
  %408 = sub i64 %407, 8
  %409 = load i64, i64* %PC.i2056
  %410 = add i64 %409, 4
  store i64 %410, i64* %PC.i2056
  %411 = inttoptr i64 %408 to i32*
  %412 = load i32, i32* %411
  %413 = shl i64 %406, 32
  %414 = ashr exact i64 %413, 32
  %415 = sext i32 %412 to i64
  %416 = mul i64 %415, %414
  %417 = trunc i64 %416 to i32
  %418 = and i64 %416, 4294967295
  store i64 %418, i64* %RSI.i2057, align 8
  %419 = shl i64 %416, 32
  %420 = ashr exact i64 %419, 32
  %421 = icmp ne i64 %420, %416
  %422 = zext i1 %421 to i8
  %423 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %422, i8* %423, align 1
  %424 = and i32 %417, 255
  %425 = call i32 @llvm.ctpop.i32(i32 %424)
  %426 = trunc i32 %425 to i8
  %427 = and i8 %426, 1
  %428 = xor i8 %427, 1
  %429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %428, i8* %429, align 1
  %430 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %430, align 1
  %431 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %431, align 1
  %432 = lshr i32 %417, 31
  %433 = trunc i32 %432 to i8
  %434 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %433, i8* %434, align 1
  %435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %422, i8* %435, align 1
  store %struct.Memory* %loadMem_4009b8, %struct.Memory** %MEMORY
  %loadMem_4009bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %437 = getelementptr inbounds %struct.GPR, %struct.GPR* %436, i32 0, i32 33
  %438 = getelementptr inbounds %struct.Reg, %struct.Reg* %437, i32 0, i32 0
  %PC.i2053 = bitcast %union.anon* %438 to i64*
  %439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %440 = getelementptr inbounds %struct.GPR, %struct.GPR* %439, i32 0, i32 9
  %441 = getelementptr inbounds %struct.Reg, %struct.Reg* %440, i32 0, i32 0
  %ESI.i2054 = bitcast %union.anon* %441 to i32*
  %442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %443 = getelementptr inbounds %struct.GPR, %struct.GPR* %442, i32 0, i32 7
  %444 = getelementptr inbounds %struct.Reg, %struct.Reg* %443, i32 0, i32 0
  %RDX.i2055 = bitcast %union.anon* %444 to i64*
  %445 = load i64, i64* %RDX.i2055
  %446 = load i32, i32* %ESI.i2054
  %447 = zext i32 %446 to i64
  %448 = load i64, i64* %PC.i2053
  %449 = add i64 %448, 2
  store i64 %449, i64* %PC.i2053
  %450 = trunc i64 %445 to i32
  %451 = add i32 %446, %450
  %452 = zext i32 %451 to i64
  store i64 %452, i64* %RDX.i2055, align 8
  %453 = icmp ult i32 %451, %450
  %454 = icmp ult i32 %451, %446
  %455 = or i1 %453, %454
  %456 = zext i1 %455 to i8
  %457 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %456, i8* %457, align 1
  %458 = and i32 %451, 255
  %459 = call i32 @llvm.ctpop.i32(i32 %458)
  %460 = trunc i32 %459 to i8
  %461 = and i8 %460, 1
  %462 = xor i8 %461, 1
  %463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %462, i8* %463, align 1
  %464 = xor i64 %447, %445
  %465 = trunc i64 %464 to i32
  %466 = xor i32 %465, %451
  %467 = lshr i32 %466, 4
  %468 = trunc i32 %467 to i8
  %469 = and i8 %468, 1
  %470 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %469, i8* %470, align 1
  %471 = icmp eq i32 %451, 0
  %472 = zext i1 %471 to i8
  %473 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %472, i8* %473, align 1
  %474 = lshr i32 %451, 31
  %475 = trunc i32 %474 to i8
  %476 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %475, i8* %476, align 1
  %477 = lshr i32 %450, 31
  %478 = lshr i32 %446, 31
  %479 = xor i32 %474, %477
  %480 = xor i32 %474, %478
  %481 = add i32 %479, %480
  %482 = icmp eq i32 %481, 2
  %483 = zext i1 %482 to i8
  %484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %483, i8* %484, align 1
  store %struct.Memory* %loadMem_4009bc, %struct.Memory** %MEMORY
  %loadMem_4009be = load %struct.Memory*, %struct.Memory** %MEMORY
  %485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %486 = getelementptr inbounds %struct.GPR, %struct.GPR* %485, i32 0, i32 33
  %487 = getelementptr inbounds %struct.Reg, %struct.Reg* %486, i32 0, i32 0
  %PC.i2050 = bitcast %union.anon* %487 to i64*
  %488 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %489 = getelementptr inbounds %struct.GPR, %struct.GPR* %488, i32 0, i32 1
  %490 = getelementptr inbounds %struct.Reg, %struct.Reg* %489, i32 0, i32 0
  %EAX.i2051 = bitcast %union.anon* %490 to i32*
  %491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %492 = getelementptr inbounds %struct.GPR, %struct.GPR* %491, i32 0, i32 15
  %493 = getelementptr inbounds %struct.Reg, %struct.Reg* %492, i32 0, i32 0
  %RBP.i2052 = bitcast %union.anon* %493 to i64*
  %494 = load i64, i64* %RBP.i2052
  %495 = sub i64 %494, 2692
  %496 = load i32, i32* %EAX.i2051
  %497 = zext i32 %496 to i64
  %498 = load i64, i64* %PC.i2050
  %499 = add i64 %498, 6
  store i64 %499, i64* %PC.i2050
  %500 = inttoptr i64 %495 to i32*
  store i32 %496, i32* %500
  store %struct.Memory* %loadMem_4009be, %struct.Memory** %MEMORY
  %loadMem_4009c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %502 = getelementptr inbounds %struct.GPR, %struct.GPR* %501, i32 0, i32 33
  %503 = getelementptr inbounds %struct.Reg, %struct.Reg* %502, i32 0, i32 0
  %PC.i2047 = bitcast %union.anon* %503 to i64*
  %504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %505 = getelementptr inbounds %struct.GPR, %struct.GPR* %504, i32 0, i32 7
  %506 = getelementptr inbounds %struct.Reg, %struct.Reg* %505, i32 0, i32 0
  %EDX.i2048 = bitcast %union.anon* %506 to i32*
  %507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %508 = getelementptr inbounds %struct.GPR, %struct.GPR* %507, i32 0, i32 1
  %509 = getelementptr inbounds %struct.Reg, %struct.Reg* %508, i32 0, i32 0
  %RAX.i2049 = bitcast %union.anon* %509 to i64*
  %510 = load i32, i32* %EDX.i2048
  %511 = zext i32 %510 to i64
  %512 = load i64, i64* %PC.i2047
  %513 = add i64 %512, 2
  store i64 %513, i64* %PC.i2047
  %514 = and i64 %511, 4294967295
  store i64 %514, i64* %RAX.i2049, align 8
  store %struct.Memory* %loadMem_4009c4, %struct.Memory** %MEMORY
  %loadMem_4009c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %516 = getelementptr inbounds %struct.GPR, %struct.GPR* %515, i32 0, i32 33
  %517 = getelementptr inbounds %struct.Reg, %struct.Reg* %516, i32 0, i32 0
  %PC.i2046 = bitcast %union.anon* %517 to i64*
  %518 = load i64, i64* %PC.i2046
  %519 = add i64 %518, 1
  store i64 %519, i64* %PC.i2046
  %520 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %521 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %522 = bitcast %union.anon* %521 to i32*
  %523 = load i32, i32* %522, align 8
  %524 = sext i32 %523 to i64
  %525 = lshr i64 %524, 32
  store i64 %525, i64* %520, align 8
  store %struct.Memory* %loadMem_4009c6, %struct.Memory** %MEMORY
  %loadMem_4009c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %527 = getelementptr inbounds %struct.GPR, %struct.GPR* %526, i32 0, i32 33
  %528 = getelementptr inbounds %struct.Reg, %struct.Reg* %527, i32 0, i32 0
  %PC.i2043 = bitcast %union.anon* %528 to i64*
  %529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %530 = getelementptr inbounds %struct.GPR, %struct.GPR* %529, i32 0, i32 9
  %531 = getelementptr inbounds %struct.Reg, %struct.Reg* %530, i32 0, i32 0
  %RSI.i2044 = bitcast %union.anon* %531 to i64*
  %532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %533 = getelementptr inbounds %struct.GPR, %struct.GPR* %532, i32 0, i32 15
  %534 = getelementptr inbounds %struct.Reg, %struct.Reg* %533, i32 0, i32 0
  %RBP.i2045 = bitcast %union.anon* %534 to i64*
  %535 = load i64, i64* %RBP.i2045
  %536 = sub i64 %535, 2692
  %537 = load i64, i64* %PC.i2043
  %538 = add i64 %537, 6
  store i64 %538, i64* %PC.i2043
  %539 = inttoptr i64 %536 to i32*
  %540 = load i32, i32* %539
  %541 = zext i32 %540 to i64
  store i64 %541, i64* %RSI.i2044, align 8
  store %struct.Memory* %loadMem_4009c7, %struct.Memory** %MEMORY
  %loadMem_4009cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %543 = getelementptr inbounds %struct.GPR, %struct.GPR* %542, i32 0, i32 33
  %544 = getelementptr inbounds %struct.Reg, %struct.Reg* %543, i32 0, i32 0
  %PC.i2037 = bitcast %union.anon* %544 to i64*
  %545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %546 = getelementptr inbounds %struct.GPR, %struct.GPR* %545, i32 0, i32 9
  %547 = getelementptr inbounds %struct.Reg, %struct.Reg* %546, i32 0, i32 0
  %ESI.i2038 = bitcast %union.anon* %547 to i32*
  %548 = load i32, i32* %ESI.i2038
  %549 = zext i32 %548 to i64
  %550 = load i64, i64* %PC.i2037
  %551 = add i64 %550, 2
  store i64 %551, i64* %PC.i2037
  %552 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %553 = bitcast %union.anon* %552 to i32*
  %554 = load i32, i32* %553, align 8
  %555 = zext i32 %554 to i64
  %556 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %557 = bitcast %union.anon* %556 to i32*
  %558 = load i32, i32* %557, align 8
  %559 = zext i32 %558 to i64
  %560 = shl i64 %549, 32
  %561 = ashr exact i64 %560, 32
  %562 = shl i64 %559, 32
  %563 = or i64 %562, %555
  %564 = sdiv i64 %563, %561
  %565 = shl i64 %564, 32
  %566 = ashr exact i64 %565, 32
  %567 = icmp eq i64 %564, %566
  br i1 %567, label %572, label %568

; <label>:568:                                    ; preds = %block_4009a5
  %569 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %570 = load i64, i64* %569, align 8
  %571 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %570, %struct.Memory* %loadMem_4009cd)
  br label %routine_idivl__esi.exit2039

; <label>:572:                                    ; preds = %block_4009a5
  %573 = srem i64 %563, %561
  %574 = getelementptr inbounds %union.anon, %union.anon* %552, i64 0, i32 0
  %575 = and i64 %564, 4294967295
  store i64 %575, i64* %574, align 8
  %576 = getelementptr inbounds %union.anon, %union.anon* %556, i64 0, i32 0
  %577 = and i64 %573, 4294967295
  store i64 %577, i64* %576, align 8
  %578 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %578, align 1
  %579 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %579, align 1
  %580 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %580, align 1
  %581 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %581, align 1
  %582 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %582, align 1
  %583 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %583, align 1
  br label %routine_idivl__esi.exit2039

routine_idivl__esi.exit2039:                      ; preds = %568, %572
  %584 = phi %struct.Memory* [ %571, %568 ], [ %loadMem_4009cd, %572 ]
  store %struct.Memory* %584, %struct.Memory** %MEMORY
  %loadMem_4009cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %586 = getelementptr inbounds %struct.GPR, %struct.GPR* %585, i32 0, i32 33
  %587 = getelementptr inbounds %struct.Reg, %struct.Reg* %586, i32 0, i32 0
  %PC.i2034 = bitcast %union.anon* %587 to i64*
  %588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %589 = getelementptr inbounds %struct.GPR, %struct.GPR* %588, i32 0, i32 7
  %590 = getelementptr inbounds %struct.Reg, %struct.Reg* %589, i32 0, i32 0
  %EDX.i2035 = bitcast %union.anon* %590 to i32*
  %591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %592 = getelementptr inbounds %struct.GPR, %struct.GPR* %591, i32 0, i32 5
  %593 = getelementptr inbounds %struct.Reg, %struct.Reg* %592, i32 0, i32 0
  %RCX.i2036 = bitcast %union.anon* %593 to i64*
  %594 = load i32, i32* %EDX.i2035
  %595 = zext i32 %594 to i64
  %596 = load i64, i64* %PC.i2034
  %597 = add i64 %596, 3
  store i64 %597, i64* %PC.i2034
  %598 = shl i64 %595, 32
  %599 = ashr exact i64 %598, 32
  store i64 %599, i64* %RCX.i2036, align 8
  store %struct.Memory* %loadMem_4009cf, %struct.Memory** %MEMORY
  %loadMem_4009d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %601 = getelementptr inbounds %struct.GPR, %struct.GPR* %600, i32 0, i32 33
  %602 = getelementptr inbounds %struct.Reg, %struct.Reg* %601, i32 0, i32 0
  %PC.i2031 = bitcast %union.anon* %602 to i64*
  %603 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %604 = getelementptr inbounds %struct.GPR, %struct.GPR* %603, i32 0, i32 5
  %605 = getelementptr inbounds %struct.Reg, %struct.Reg* %604, i32 0, i32 0
  %RCX.i2032 = bitcast %union.anon* %605 to i64*
  %606 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %607 = getelementptr inbounds %struct.GPR, %struct.GPR* %606, i32 0, i32 7
  %608 = getelementptr inbounds %struct.Reg, %struct.Reg* %607, i32 0, i32 0
  %RDX.i2033 = bitcast %union.anon* %608 to i64*
  %609 = load i64, i64* %RCX.i2032
  %610 = mul i64 %609, 4
  %611 = add i64 %610, 6305920
  %612 = load i64, i64* %PC.i2031
  %613 = add i64 %612, 7
  store i64 %613, i64* %PC.i2031
  %614 = inttoptr i64 %611 to i32*
  %615 = load i32, i32* %614
  %616 = zext i32 %615 to i64
  store i64 %616, i64* %RDX.i2033, align 8
  store %struct.Memory* %loadMem_4009d2, %struct.Memory** %MEMORY
  %loadMem_4009d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %618 = getelementptr inbounds %struct.GPR, %struct.GPR* %617, i32 0, i32 33
  %619 = getelementptr inbounds %struct.Reg, %struct.Reg* %618, i32 0, i32 0
  %PC.i2028 = bitcast %union.anon* %619 to i64*
  %620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %621 = getelementptr inbounds %struct.GPR, %struct.GPR* %620, i32 0, i32 5
  %622 = getelementptr inbounds %struct.Reg, %struct.Reg* %621, i32 0, i32 0
  %RCX.i2029 = bitcast %union.anon* %622 to i64*
  %623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %624 = getelementptr inbounds %struct.GPR, %struct.GPR* %623, i32 0, i32 15
  %625 = getelementptr inbounds %struct.Reg, %struct.Reg* %624, i32 0, i32 0
  %RBP.i2030 = bitcast %union.anon* %625 to i64*
  %626 = load i64, i64* %RBP.i2030
  %627 = sub i64 %626, 4
  %628 = load i64, i64* %PC.i2028
  %629 = add i64 %628, 4
  store i64 %629, i64* %PC.i2028
  %630 = inttoptr i64 %627 to i32*
  %631 = load i32, i32* %630
  %632 = sext i32 %631 to i64
  store i64 %632, i64* %RCX.i2029, align 8
  store %struct.Memory* %loadMem_4009d9, %struct.Memory** %MEMORY
  %loadMem_4009dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %634 = getelementptr inbounds %struct.GPR, %struct.GPR* %633, i32 0, i32 33
  %635 = getelementptr inbounds %struct.Reg, %struct.Reg* %634, i32 0, i32 0
  %PC.i2024 = bitcast %union.anon* %635 to i64*
  %636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %637 = getelementptr inbounds %struct.GPR, %struct.GPR* %636, i32 0, i32 5
  %638 = getelementptr inbounds %struct.Reg, %struct.Reg* %637, i32 0, i32 0
  %RCX.i2025 = bitcast %union.anon* %638 to i64*
  %639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %640 = getelementptr inbounds %struct.GPR, %struct.GPR* %639, i32 0, i32 7
  %641 = getelementptr inbounds %struct.Reg, %struct.Reg* %640, i32 0, i32 0
  %RDX.i2026 = bitcast %union.anon* %641 to i64*
  %642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %643 = getelementptr inbounds %struct.GPR, %struct.GPR* %642, i32 0, i32 15
  %644 = getelementptr inbounds %struct.Reg, %struct.Reg* %643, i32 0, i32 0
  %RBP.i2027 = bitcast %union.anon* %644 to i64*
  %645 = load i64, i64* %RDX.i2026
  %646 = load i64, i64* %RBP.i2027
  %647 = load i64, i64* %RCX.i2025
  %648 = mul i64 %647, 4
  %649 = add i64 %646, -1488
  %650 = add i64 %649, %648
  %651 = load i64, i64* %PC.i2024
  %652 = add i64 %651, 7
  store i64 %652, i64* %PC.i2024
  %653 = trunc i64 %645 to i32
  %654 = inttoptr i64 %650 to i32*
  %655 = load i32, i32* %654
  %656 = xor i32 %655, %653
  %657 = zext i32 %656 to i64
  store i64 %657, i64* %RDX.i2026, align 8
  %658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %658, align 1
  %659 = and i32 %656, 255
  %660 = call i32 @llvm.ctpop.i32(i32 %659)
  %661 = trunc i32 %660 to i8
  %662 = and i8 %661, 1
  %663 = xor i8 %662, 1
  %664 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %663, i8* %664, align 1
  %665 = icmp eq i32 %656, 0
  %666 = zext i1 %665 to i8
  %667 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %666, i8* %667, align 1
  %668 = lshr i32 %656, 31
  %669 = trunc i32 %668 to i8
  %670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %669, i8* %670, align 1
  %671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %671, align 1
  %672 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %672, align 1
  store %struct.Memory* %loadMem_4009dd, %struct.Memory** %MEMORY
  %loadMem_4009e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %674 = getelementptr inbounds %struct.GPR, %struct.GPR* %673, i32 0, i32 33
  %675 = getelementptr inbounds %struct.Reg, %struct.Reg* %674, i32 0, i32 0
  %PC.i2020 = bitcast %union.anon* %675 to i64*
  %676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %677 = getelementptr inbounds %struct.GPR, %struct.GPR* %676, i32 0, i32 7
  %678 = getelementptr inbounds %struct.Reg, %struct.Reg* %677, i32 0, i32 0
  %EDX.i2021 = bitcast %union.anon* %678 to i32*
  %679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %680 = getelementptr inbounds %struct.GPR, %struct.GPR* %679, i32 0, i32 5
  %681 = getelementptr inbounds %struct.Reg, %struct.Reg* %680, i32 0, i32 0
  %RCX.i2022 = bitcast %union.anon* %681 to i64*
  %682 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %683 = getelementptr inbounds %struct.GPR, %struct.GPR* %682, i32 0, i32 15
  %684 = getelementptr inbounds %struct.Reg, %struct.Reg* %683, i32 0, i32 0
  %RBP.i2023 = bitcast %union.anon* %684 to i64*
  %685 = load i64, i64* %RBP.i2023
  %686 = load i64, i64* %RCX.i2022
  %687 = mul i64 %686, 4
  %688 = add i64 %685, -1488
  %689 = add i64 %688, %687
  %690 = load i32, i32* %EDX.i2021
  %691 = zext i32 %690 to i64
  %692 = load i64, i64* %PC.i2020
  %693 = add i64 %692, 7
  store i64 %693, i64* %PC.i2020
  %694 = inttoptr i64 %689 to i32*
  store i32 %690, i32* %694
  store %struct.Memory* %loadMem_4009e4, %struct.Memory** %MEMORY
  br label %block_.L_4009eb

block_.L_4009eb:                                  ; preds = %routine_idivl__esi.exit2039, %block_400993
  %loadMem_4009eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %696 = getelementptr inbounds %struct.GPR, %struct.GPR* %695, i32 0, i32 33
  %697 = getelementptr inbounds %struct.Reg, %struct.Reg* %696, i32 0, i32 0
  %PC.i2019 = bitcast %union.anon* %697 to i64*
  %698 = load i64, i64* %PC.i2019
  %699 = add i64 %698, 5
  %700 = load i64, i64* %PC.i2019
  %701 = add i64 %700, 5
  store i64 %701, i64* %PC.i2019
  %702 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %699, i64* %702, align 8
  store %struct.Memory* %loadMem_4009eb, %struct.Memory** %MEMORY
  br label %block_.L_4009f0

block_.L_4009f0:                                  ; preds = %block_.L_4009eb
  %loadMem_4009f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %704 = getelementptr inbounds %struct.GPR, %struct.GPR* %703, i32 0, i32 33
  %705 = getelementptr inbounds %struct.Reg, %struct.Reg* %704, i32 0, i32 0
  %PC.i2016 = bitcast %union.anon* %705 to i64*
  %706 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %707 = getelementptr inbounds %struct.GPR, %struct.GPR* %706, i32 0, i32 1
  %708 = getelementptr inbounds %struct.Reg, %struct.Reg* %707, i32 0, i32 0
  %RAX.i2017 = bitcast %union.anon* %708 to i64*
  %709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %710 = getelementptr inbounds %struct.GPR, %struct.GPR* %709, i32 0, i32 15
  %711 = getelementptr inbounds %struct.Reg, %struct.Reg* %710, i32 0, i32 0
  %RBP.i2018 = bitcast %union.anon* %711 to i64*
  %712 = load i64, i64* %RBP.i2018
  %713 = sub i64 %712, 8
  %714 = load i64, i64* %PC.i2016
  %715 = add i64 %714, 3
  store i64 %715, i64* %PC.i2016
  %716 = inttoptr i64 %713 to i32*
  %717 = load i32, i32* %716
  %718 = zext i32 %717 to i64
  store i64 %718, i64* %RAX.i2017, align 8
  store %struct.Memory* %loadMem_4009f0, %struct.Memory** %MEMORY
  %loadMem_4009f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %720 = getelementptr inbounds %struct.GPR, %struct.GPR* %719, i32 0, i32 33
  %721 = getelementptr inbounds %struct.Reg, %struct.Reg* %720, i32 0, i32 0
  %PC.i2014 = bitcast %union.anon* %721 to i64*
  %722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %723 = getelementptr inbounds %struct.GPR, %struct.GPR* %722, i32 0, i32 1
  %724 = getelementptr inbounds %struct.Reg, %struct.Reg* %723, i32 0, i32 0
  %RAX.i2015 = bitcast %union.anon* %724 to i64*
  %725 = load i64, i64* %RAX.i2015
  %726 = load i64, i64* %PC.i2014
  %727 = add i64 %726, 3
  store i64 %727, i64* %PC.i2014
  %728 = trunc i64 %725 to i32
  %729 = add i32 1, %728
  %730 = zext i32 %729 to i64
  store i64 %730, i64* %RAX.i2015, align 8
  %731 = icmp ult i32 %729, %728
  %732 = icmp ult i32 %729, 1
  %733 = or i1 %731, %732
  %734 = zext i1 %733 to i8
  %735 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %734, i8* %735, align 1
  %736 = and i32 %729, 255
  %737 = call i32 @llvm.ctpop.i32(i32 %736)
  %738 = trunc i32 %737 to i8
  %739 = and i8 %738, 1
  %740 = xor i8 %739, 1
  %741 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %740, i8* %741, align 1
  %742 = xor i64 1, %725
  %743 = trunc i64 %742 to i32
  %744 = xor i32 %743, %729
  %745 = lshr i32 %744, 4
  %746 = trunc i32 %745 to i8
  %747 = and i8 %746, 1
  %748 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %747, i8* %748, align 1
  %749 = icmp eq i32 %729, 0
  %750 = zext i1 %749 to i8
  %751 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %750, i8* %751, align 1
  %752 = lshr i32 %729, 31
  %753 = trunc i32 %752 to i8
  %754 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %753, i8* %754, align 1
  %755 = lshr i32 %728, 31
  %756 = xor i32 %752, %755
  %757 = add i32 %756, %752
  %758 = icmp eq i32 %757, 2
  %759 = zext i1 %758 to i8
  %760 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %759, i8* %760, align 1
  store %struct.Memory* %loadMem_4009f3, %struct.Memory** %MEMORY
  %loadMem_4009f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %762 = getelementptr inbounds %struct.GPR, %struct.GPR* %761, i32 0, i32 33
  %763 = getelementptr inbounds %struct.Reg, %struct.Reg* %762, i32 0, i32 0
  %PC.i2011 = bitcast %union.anon* %763 to i64*
  %764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %765 = getelementptr inbounds %struct.GPR, %struct.GPR* %764, i32 0, i32 1
  %766 = getelementptr inbounds %struct.Reg, %struct.Reg* %765, i32 0, i32 0
  %EAX.i2012 = bitcast %union.anon* %766 to i32*
  %767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %768 = getelementptr inbounds %struct.GPR, %struct.GPR* %767, i32 0, i32 15
  %769 = getelementptr inbounds %struct.Reg, %struct.Reg* %768, i32 0, i32 0
  %RBP.i2013 = bitcast %union.anon* %769 to i64*
  %770 = load i64, i64* %RBP.i2013
  %771 = sub i64 %770, 8
  %772 = load i32, i32* %EAX.i2012
  %773 = zext i32 %772 to i64
  %774 = load i64, i64* %PC.i2011
  %775 = add i64 %774, 3
  store i64 %775, i64* %PC.i2011
  %776 = inttoptr i64 %771 to i32*
  store i32 %772, i32* %776
  store %struct.Memory* %loadMem_4009f6, %struct.Memory** %MEMORY
  %loadMem_4009f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %778 = getelementptr inbounds %struct.GPR, %struct.GPR* %777, i32 0, i32 33
  %779 = getelementptr inbounds %struct.Reg, %struct.Reg* %778, i32 0, i32 0
  %PC.i2010 = bitcast %union.anon* %779 to i64*
  %780 = load i64, i64* %PC.i2010
  %781 = add i64 %780, -115
  %782 = load i64, i64* %PC.i2010
  %783 = add i64 %782, 5
  store i64 %783, i64* %PC.i2010
  %784 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %781, i64* %784, align 8
  store %struct.Memory* %loadMem_4009f9, %struct.Memory** %MEMORY
  br label %block_.L_400986

block_.L_4009fe:                                  ; preds = %block_.L_400986
  %loadMem_4009fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %786 = getelementptr inbounds %struct.GPR, %struct.GPR* %785, i32 0, i32 33
  %787 = getelementptr inbounds %struct.Reg, %struct.Reg* %786, i32 0, i32 0
  %PC.i2007 = bitcast %union.anon* %787 to i64*
  %788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %789 = getelementptr inbounds %struct.GPR, %struct.GPR* %788, i32 0, i32 1
  %790 = getelementptr inbounds %struct.Reg, %struct.Reg* %789, i32 0, i32 0
  %RAX.i2008 = bitcast %union.anon* %790 to i64*
  %791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %792 = getelementptr inbounds %struct.GPR, %struct.GPR* %791, i32 0, i32 15
  %793 = getelementptr inbounds %struct.Reg, %struct.Reg* %792, i32 0, i32 0
  %RBP.i2009 = bitcast %union.anon* %793 to i64*
  %794 = load i64, i64* %RBP.i2009
  %795 = sub i64 %794, 4
  %796 = load i64, i64* %PC.i2007
  %797 = add i64 %796, 4
  store i64 %797, i64* %PC.i2007
  %798 = inttoptr i64 %795 to i32*
  %799 = load i32, i32* %798
  %800 = sext i32 %799 to i64
  store i64 %800, i64* %RAX.i2008, align 8
  store %struct.Memory* %loadMem_4009fe, %struct.Memory** %MEMORY
  %loadMem_400a02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %802 = getelementptr inbounds %struct.GPR, %struct.GPR* %801, i32 0, i32 33
  %803 = getelementptr inbounds %struct.Reg, %struct.Reg* %802, i32 0, i32 0
  %PC.i2004 = bitcast %union.anon* %803 to i64*
  %804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %805 = getelementptr inbounds %struct.GPR, %struct.GPR* %804, i32 0, i32 1
  %806 = getelementptr inbounds %struct.Reg, %struct.Reg* %805, i32 0, i32 0
  %RAX.i2005 = bitcast %union.anon* %806 to i64*
  %807 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %808 = getelementptr inbounds %struct.GPR, %struct.GPR* %807, i32 0, i32 15
  %809 = getelementptr inbounds %struct.Reg, %struct.Reg* %808, i32 0, i32 0
  %RBP.i2006 = bitcast %union.anon* %809 to i64*
  %810 = load i64, i64* %RBP.i2006
  %811 = load i64, i64* %RAX.i2005
  %812 = mul i64 %811, 4
  %813 = add i64 %810, -1488
  %814 = add i64 %813, %812
  %815 = load i64, i64* %PC.i2004
  %816 = add i64 %815, 8
  store i64 %816, i64* %PC.i2004
  %817 = inttoptr i64 %814 to i32*
  %818 = load i32, i32* %817
  %819 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %819, align 1
  %820 = and i32 %818, 255
  %821 = call i32 @llvm.ctpop.i32(i32 %820)
  %822 = trunc i32 %821 to i8
  %823 = and i8 %822, 1
  %824 = xor i8 %823, 1
  %825 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %824, i8* %825, align 1
  %826 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %826, align 1
  %827 = icmp eq i32 %818, 0
  %828 = zext i1 %827 to i8
  %829 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %828, i8* %829, align 1
  %830 = lshr i32 %818, 31
  %831 = trunc i32 %830 to i8
  %832 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %831, i8* %832, align 1
  %833 = lshr i32 %818, 31
  %834 = xor i32 %830, %833
  %835 = add i32 %834, %833
  %836 = icmp eq i32 %835, 2
  %837 = zext i1 %836 to i8
  %838 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %837, i8* %838, align 1
  store %struct.Memory* %loadMem_400a02, %struct.Memory** %MEMORY
  %loadMem_400a0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %840 = getelementptr inbounds %struct.GPR, %struct.GPR* %839, i32 0, i32 33
  %841 = getelementptr inbounds %struct.Reg, %struct.Reg* %840, i32 0, i32 0
  %PC.i2003 = bitcast %union.anon* %841 to i64*
  %842 = load i64, i64* %PC.i2003
  %843 = add i64 %842, 16
  %844 = load i64, i64* %PC.i2003
  %845 = add i64 %844, 6
  %846 = load i64, i64* %PC.i2003
  %847 = add i64 %846, 6
  store i64 %847, i64* %PC.i2003
  %848 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %849 = load i8, i8* %848, align 1
  store i8 %849, i8* %BRANCH_TAKEN, align 1
  %850 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %851 = icmp ne i8 %849, 0
  %852 = select i1 %851, i64 %843, i64 %845
  store i64 %852, i64* %850, align 8
  store %struct.Memory* %loadMem_400a0a, %struct.Memory** %MEMORY
  %loadBr_400a0a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400a0a = icmp eq i8 %loadBr_400a0a, 1
  br i1 %cmpBr_400a0a, label %block_.L_400a1a, label %block_400a10

block_400a10:                                     ; preds = %block_.L_4009fe
  %loadMem_400a10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %854 = getelementptr inbounds %struct.GPR, %struct.GPR* %853, i32 0, i32 33
  %855 = getelementptr inbounds %struct.Reg, %struct.Reg* %854, i32 0, i32 0
  %PC.i2001 = bitcast %union.anon* %855 to i64*
  %856 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %857 = getelementptr inbounds %struct.GPR, %struct.GPR* %856, i32 0, i32 15
  %858 = getelementptr inbounds %struct.Reg, %struct.Reg* %857, i32 0, i32 0
  %RBP.i2002 = bitcast %union.anon* %858 to i64*
  %859 = load i64, i64* %RBP.i2002
  %860 = sub i64 %859, 1496
  %861 = load i64, i64* %PC.i2001
  %862 = add i64 %861, 10
  store i64 %862, i64* %PC.i2001
  %863 = inttoptr i64 %860 to i32*
  store i32 1, i32* %863
  store %struct.Memory* %loadMem_400a10, %struct.Memory** %MEMORY
  br label %block_.L_400a1a

block_.L_400a1a:                                  ; preds = %block_400a10, %block_.L_4009fe
  %loadMem_400a1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %865 = getelementptr inbounds %struct.GPR, %struct.GPR* %864, i32 0, i32 33
  %866 = getelementptr inbounds %struct.Reg, %struct.Reg* %865, i32 0, i32 0
  %PC.i1998 = bitcast %union.anon* %866 to i64*
  %867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %868 = getelementptr inbounds %struct.GPR, %struct.GPR* %867, i32 0, i32 1
  %869 = getelementptr inbounds %struct.Reg, %struct.Reg* %868, i32 0, i32 0
  %RAX.i1999 = bitcast %union.anon* %869 to i64*
  %870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %871 = getelementptr inbounds %struct.GPR, %struct.GPR* %870, i32 0, i32 15
  %872 = getelementptr inbounds %struct.Reg, %struct.Reg* %871, i32 0, i32 0
  %RBP.i2000 = bitcast %union.anon* %872 to i64*
  %873 = load i64, i64* %RBP.i2000
  %874 = sub i64 %873, 4
  %875 = load i64, i64* %PC.i1998
  %876 = add i64 %875, 4
  store i64 %876, i64* %PC.i1998
  %877 = inttoptr i64 %874 to i32*
  %878 = load i32, i32* %877
  %879 = sext i32 %878 to i64
  store i64 %879, i64* %RAX.i1999, align 8
  store %struct.Memory* %loadMem_400a1a, %struct.Memory** %MEMORY
  %loadMem_400a1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %881 = getelementptr inbounds %struct.GPR, %struct.GPR* %880, i32 0, i32 33
  %882 = getelementptr inbounds %struct.Reg, %struct.Reg* %881, i32 0, i32 0
  %PC.i1995 = bitcast %union.anon* %882 to i64*
  %883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %884 = getelementptr inbounds %struct.GPR, %struct.GPR* %883, i32 0, i32 1
  %885 = getelementptr inbounds %struct.Reg, %struct.Reg* %884, i32 0, i32 0
  %RAX.i1996 = bitcast %union.anon* %885 to i64*
  %886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %887 = getelementptr inbounds %struct.GPR, %struct.GPR* %886, i32 0, i32 15
  %888 = getelementptr inbounds %struct.Reg, %struct.Reg* %887, i32 0, i32 0
  %RBP.i1997 = bitcast %union.anon* %888 to i64*
  %889 = load i64, i64* %RBP.i1997
  %890 = load i64, i64* %RAX.i1996
  %891 = mul i64 %890, 4
  %892 = add i64 %889, -1488
  %893 = add i64 %892, %891
  %894 = load i64, i64* %PC.i1995
  %895 = add i64 %894, 8
  store i64 %895, i64* %PC.i1995
  %896 = inttoptr i64 %893 to i32*
  %897 = load i32, i32* %896
  %898 = sext i32 %897 to i64
  store i64 %898, i64* %RAX.i1996, align 8
  store %struct.Memory* %loadMem_400a1e, %struct.Memory** %MEMORY
  %loadMem_400a26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %900 = getelementptr inbounds %struct.GPR, %struct.GPR* %899, i32 0, i32 33
  %901 = getelementptr inbounds %struct.Reg, %struct.Reg* %900, i32 0, i32 0
  %PC.i1992 = bitcast %union.anon* %901 to i64*
  %902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %903 = getelementptr inbounds %struct.GPR, %struct.GPR* %902, i32 0, i32 1
  %904 = getelementptr inbounds %struct.Reg, %struct.Reg* %903, i32 0, i32 0
  %RAX.i1993 = bitcast %union.anon* %904 to i64*
  %905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %906 = getelementptr inbounds %struct.GPR, %struct.GPR* %905, i32 0, i32 5
  %907 = getelementptr inbounds %struct.Reg, %struct.Reg* %906, i32 0, i32 0
  %RCX.i1994 = bitcast %union.anon* %907 to i64*
  %908 = load i64, i64* %RAX.i1993
  %909 = mul i64 %908, 4
  %910 = add i64 %909, 6304896
  %911 = load i64, i64* %PC.i1992
  %912 = add i64 %911, 7
  store i64 %912, i64* %PC.i1992
  %913 = inttoptr i64 %910 to i32*
  %914 = load i32, i32* %913
  %915 = zext i32 %914 to i64
  store i64 %915, i64* %RCX.i1994, align 8
  store %struct.Memory* %loadMem_400a26, %struct.Memory** %MEMORY
  %loadMem_400a2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %916 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %917 = getelementptr inbounds %struct.GPR, %struct.GPR* %916, i32 0, i32 33
  %918 = getelementptr inbounds %struct.Reg, %struct.Reg* %917, i32 0, i32 0
  %PC.i1989 = bitcast %union.anon* %918 to i64*
  %919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %920 = getelementptr inbounds %struct.GPR, %struct.GPR* %919, i32 0, i32 1
  %921 = getelementptr inbounds %struct.Reg, %struct.Reg* %920, i32 0, i32 0
  %RAX.i1990 = bitcast %union.anon* %921 to i64*
  %922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %923 = getelementptr inbounds %struct.GPR, %struct.GPR* %922, i32 0, i32 15
  %924 = getelementptr inbounds %struct.Reg, %struct.Reg* %923, i32 0, i32 0
  %RBP.i1991 = bitcast %union.anon* %924 to i64*
  %925 = load i64, i64* %RBP.i1991
  %926 = sub i64 %925, 4
  %927 = load i64, i64* %PC.i1989
  %928 = add i64 %927, 4
  store i64 %928, i64* %PC.i1989
  %929 = inttoptr i64 %926 to i32*
  %930 = load i32, i32* %929
  %931 = sext i32 %930 to i64
  store i64 %931, i64* %RAX.i1990, align 8
  store %struct.Memory* %loadMem_400a2d, %struct.Memory** %MEMORY
  %loadMem_400a31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %933 = getelementptr inbounds %struct.GPR, %struct.GPR* %932, i32 0, i32 33
  %934 = getelementptr inbounds %struct.Reg, %struct.Reg* %933, i32 0, i32 0
  %PC.i1985 = bitcast %union.anon* %934 to i64*
  %935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %936 = getelementptr inbounds %struct.GPR, %struct.GPR* %935, i32 0, i32 5
  %937 = getelementptr inbounds %struct.Reg, %struct.Reg* %936, i32 0, i32 0
  %ECX.i1986 = bitcast %union.anon* %937 to i32*
  %938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %939 = getelementptr inbounds %struct.GPR, %struct.GPR* %938, i32 0, i32 1
  %940 = getelementptr inbounds %struct.Reg, %struct.Reg* %939, i32 0, i32 0
  %RAX.i1987 = bitcast %union.anon* %940 to i64*
  %941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %942 = getelementptr inbounds %struct.GPR, %struct.GPR* %941, i32 0, i32 15
  %943 = getelementptr inbounds %struct.Reg, %struct.Reg* %942, i32 0, i32 0
  %RBP.i1988 = bitcast %union.anon* %943 to i64*
  %944 = load i64, i64* %RBP.i1988
  %945 = load i64, i64* %RAX.i1987
  %946 = mul i64 %945, 4
  %947 = add i64 %944, -1488
  %948 = add i64 %947, %946
  %949 = load i32, i32* %ECX.i1986
  %950 = zext i32 %949 to i64
  %951 = load i64, i64* %PC.i1985
  %952 = add i64 %951, 7
  store i64 %952, i64* %PC.i1985
  %953 = inttoptr i64 %948 to i32*
  store i32 %949, i32* %953
  store %struct.Memory* %loadMem_400a31, %struct.Memory** %MEMORY
  %loadMem_400a38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %955 = getelementptr inbounds %struct.GPR, %struct.GPR* %954, i32 0, i32 33
  %956 = getelementptr inbounds %struct.Reg, %struct.Reg* %955, i32 0, i32 0
  %PC.i1982 = bitcast %union.anon* %956 to i64*
  %957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %958 = getelementptr inbounds %struct.GPR, %struct.GPR* %957, i32 0, i32 1
  %959 = getelementptr inbounds %struct.Reg, %struct.Reg* %958, i32 0, i32 0
  %RAX.i1983 = bitcast %union.anon* %959 to i64*
  %960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %961 = getelementptr inbounds %struct.GPR, %struct.GPR* %960, i32 0, i32 15
  %962 = getelementptr inbounds %struct.Reg, %struct.Reg* %961, i32 0, i32 0
  %RBP.i1984 = bitcast %union.anon* %962 to i64*
  %963 = load i64, i64* %RBP.i1984
  %964 = sub i64 %963, 4
  %965 = load i64, i64* %PC.i1982
  %966 = add i64 %965, 3
  store i64 %966, i64* %PC.i1982
  %967 = inttoptr i64 %964 to i32*
  %968 = load i32, i32* %967
  %969 = zext i32 %968 to i64
  store i64 %969, i64* %RAX.i1983, align 8
  store %struct.Memory* %loadMem_400a38, %struct.Memory** %MEMORY
  %loadMem_400a3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %971 = getelementptr inbounds %struct.GPR, %struct.GPR* %970, i32 0, i32 33
  %972 = getelementptr inbounds %struct.Reg, %struct.Reg* %971, i32 0, i32 0
  %PC.i1980 = bitcast %union.anon* %972 to i64*
  %973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %974 = getelementptr inbounds %struct.GPR, %struct.GPR* %973, i32 0, i32 1
  %975 = getelementptr inbounds %struct.Reg, %struct.Reg* %974, i32 0, i32 0
  %RAX.i1981 = bitcast %union.anon* %975 to i64*
  %976 = load i64, i64* %RAX.i1981
  %977 = load i64, i64* %PC.i1980
  %978 = add i64 %977, 3
  store i64 %978, i64* %PC.i1980
  %979 = trunc i64 %976 to i32
  %980 = add i32 1, %979
  %981 = zext i32 %980 to i64
  store i64 %981, i64* %RAX.i1981, align 8
  %982 = icmp ult i32 %980, %979
  %983 = icmp ult i32 %980, 1
  %984 = or i1 %982, %983
  %985 = zext i1 %984 to i8
  %986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %985, i8* %986, align 1
  %987 = and i32 %980, 255
  %988 = call i32 @llvm.ctpop.i32(i32 %987)
  %989 = trunc i32 %988 to i8
  %990 = and i8 %989, 1
  %991 = xor i8 %990, 1
  %992 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %991, i8* %992, align 1
  %993 = xor i64 1, %976
  %994 = trunc i64 %993 to i32
  %995 = xor i32 %994, %980
  %996 = lshr i32 %995, 4
  %997 = trunc i32 %996 to i8
  %998 = and i8 %997, 1
  %999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %998, i8* %999, align 1
  %1000 = icmp eq i32 %980, 0
  %1001 = zext i1 %1000 to i8
  %1002 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1001, i8* %1002, align 1
  %1003 = lshr i32 %980, 31
  %1004 = trunc i32 %1003 to i8
  %1005 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1004, i8* %1005, align 1
  %1006 = lshr i32 %979, 31
  %1007 = xor i32 %1003, %1006
  %1008 = add i32 %1007, %1003
  %1009 = icmp eq i32 %1008, 2
  %1010 = zext i1 %1009 to i8
  %1011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1010, i8* %1011, align 1
  store %struct.Memory* %loadMem_400a3b, %struct.Memory** %MEMORY
  %loadMem_400a3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1013 = getelementptr inbounds %struct.GPR, %struct.GPR* %1012, i32 0, i32 33
  %1014 = getelementptr inbounds %struct.Reg, %struct.Reg* %1013, i32 0, i32 0
  %PC.i1977 = bitcast %union.anon* %1014 to i64*
  %1015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1016 = getelementptr inbounds %struct.GPR, %struct.GPR* %1015, i32 0, i32 1
  %1017 = getelementptr inbounds %struct.Reg, %struct.Reg* %1016, i32 0, i32 0
  %EAX.i1978 = bitcast %union.anon* %1017 to i32*
  %1018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1019 = getelementptr inbounds %struct.GPR, %struct.GPR* %1018, i32 0, i32 15
  %1020 = getelementptr inbounds %struct.Reg, %struct.Reg* %1019, i32 0, i32 0
  %RBP.i1979 = bitcast %union.anon* %1020 to i64*
  %1021 = load i64, i64* %RBP.i1979
  %1022 = sub i64 %1021, 4
  %1023 = load i32, i32* %EAX.i1978
  %1024 = zext i32 %1023 to i64
  %1025 = load i64, i64* %PC.i1977
  %1026 = add i64 %1025, 3
  store i64 %1026, i64* %PC.i1977
  %1027 = inttoptr i64 %1022 to i32*
  store i32 %1023, i32* %1027
  store %struct.Memory* %loadMem_400a3e, %struct.Memory** %MEMORY
  %loadMem_400a41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1029 = getelementptr inbounds %struct.GPR, %struct.GPR* %1028, i32 0, i32 33
  %1030 = getelementptr inbounds %struct.Reg, %struct.Reg* %1029, i32 0, i32 0
  %PC.i1976 = bitcast %union.anon* %1030 to i64*
  %1031 = load i64, i64* %PC.i1976
  %1032 = add i64 %1031, -219
  %1033 = load i64, i64* %PC.i1976
  %1034 = add i64 %1033, 5
  store i64 %1034, i64* %PC.i1976
  %1035 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1032, i64* %1035, align 8
  store %struct.Memory* %loadMem_400a41, %struct.Memory** %MEMORY
  br label %block_.L_400966

block_.L_400a46:                                  ; preds = %block_.L_400966
  %loadMem_400a46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1036 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1037 = getelementptr inbounds %struct.GPR, %struct.GPR* %1036, i32 0, i32 33
  %1038 = getelementptr inbounds %struct.Reg, %struct.Reg* %1037, i32 0, i32 0
  %PC.i1974 = bitcast %union.anon* %1038 to i64*
  %1039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1040 = getelementptr inbounds %struct.GPR, %struct.GPR* %1039, i32 0, i32 15
  %1041 = getelementptr inbounds %struct.Reg, %struct.Reg* %1040, i32 0, i32 0
  %RBP.i1975 = bitcast %union.anon* %1041 to i64*
  %1042 = load i64, i64* %RBP.i1975
  %1043 = sub i64 %1042, 1496
  %1044 = load i64, i64* %PC.i1974
  %1045 = add i64 %1044, 7
  store i64 %1045, i64* %PC.i1974
  %1046 = inttoptr i64 %1043 to i32*
  %1047 = load i32, i32* %1046
  %1048 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1048, align 1
  %1049 = and i32 %1047, 255
  %1050 = call i32 @llvm.ctpop.i32(i32 %1049)
  %1051 = trunc i32 %1050 to i8
  %1052 = and i8 %1051, 1
  %1053 = xor i8 %1052, 1
  %1054 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1053, i8* %1054, align 1
  %1055 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1055, align 1
  %1056 = icmp eq i32 %1047, 0
  %1057 = zext i1 %1056 to i8
  %1058 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1057, i8* %1058, align 1
  %1059 = lshr i32 %1047, 31
  %1060 = trunc i32 %1059 to i8
  %1061 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1060, i8* %1061, align 1
  %1062 = lshr i32 %1047, 31
  %1063 = xor i32 %1059, %1062
  %1064 = add i32 %1063, %1062
  %1065 = icmp eq i32 %1064, 2
  %1066 = zext i1 %1065 to i8
  %1067 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1066, i8* %1067, align 1
  store %struct.Memory* %loadMem_400a46, %struct.Memory** %MEMORY
  %loadMem_400a4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %1068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1069 = getelementptr inbounds %struct.GPR, %struct.GPR* %1068, i32 0, i32 33
  %1070 = getelementptr inbounds %struct.Reg, %struct.Reg* %1069, i32 0, i32 0
  %PC.i1973 = bitcast %union.anon* %1070 to i64*
  %1071 = load i64, i64* %PC.i1973
  %1072 = add i64 %1071, 3504
  %1073 = load i64, i64* %PC.i1973
  %1074 = add i64 %1073, 6
  %1075 = load i64, i64* %PC.i1973
  %1076 = add i64 %1075, 6
  store i64 %1076, i64* %PC.i1973
  %1077 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1078 = load i8, i8* %1077, align 1
  store i8 %1078, i8* %BRANCH_TAKEN, align 1
  %1079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1080 = icmp ne i8 %1078, 0
  %1081 = select i1 %1080, i64 %1072, i64 %1074
  store i64 %1081, i64* %1079, align 8
  store %struct.Memory* %loadMem_400a4d, %struct.Memory** %MEMORY
  %loadBr_400a4d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400a4d = icmp eq i8 %loadBr_400a4d, 1
  br i1 %cmpBr_400a4d, label %block_.L_4017fd, label %block_400a53

block_400a53:                                     ; preds = %block_.L_400a46
  %loadMem_400a53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1083 = getelementptr inbounds %struct.GPR, %struct.GPR* %1082, i32 0, i32 33
  %1084 = getelementptr inbounds %struct.Reg, %struct.Reg* %1083, i32 0, i32 0
  %PC.i1971 = bitcast %union.anon* %1084 to i64*
  %1085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1086 = getelementptr inbounds %struct.GPR, %struct.GPR* %1085, i32 0, i32 15
  %1087 = getelementptr inbounds %struct.Reg, %struct.Reg* %1086, i32 0, i32 0
  %RBP.i1972 = bitcast %union.anon* %1087 to i64*
  %1088 = load i64, i64* %RBP.i1972
  %1089 = sub i64 %1088, 1248
  %1090 = load i64, i64* %PC.i1971
  %1091 = add i64 %1090, 10
  store i64 %1091, i64* %PC.i1971
  %1092 = inttoptr i64 %1089 to i32*
  store i32 0, i32* %1092
  store %struct.Memory* %loadMem_400a53, %struct.Memory** %MEMORY
  %loadMem_400a5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %1093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1094 = getelementptr inbounds %struct.GPR, %struct.GPR* %1093, i32 0, i32 33
  %1095 = getelementptr inbounds %struct.Reg, %struct.Reg* %1094, i32 0, i32 0
  %PC.i1968 = bitcast %union.anon* %1095 to i64*
  %1096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1097 = getelementptr inbounds %struct.GPR, %struct.GPR* %1096, i32 0, i32 1
  %1098 = getelementptr inbounds %struct.Reg, %struct.Reg* %1097, i32 0, i32 0
  %RAX.i1969 = bitcast %union.anon* %1098 to i64*
  %1099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1100 = getelementptr inbounds %struct.GPR, %struct.GPR* %1099, i32 0, i32 15
  %1101 = getelementptr inbounds %struct.Reg, %struct.Reg* %1100, i32 0, i32 0
  %RBP.i1970 = bitcast %union.anon* %1101 to i64*
  %1102 = load i64, i64* %RBP.i1970
  %1103 = sub i64 %1102, 1484
  %1104 = load i64, i64* %PC.i1968
  %1105 = add i64 %1104, 6
  store i64 %1105, i64* %PC.i1968
  %1106 = inttoptr i64 %1103 to i32*
  %1107 = load i32, i32* %1106
  %1108 = zext i32 %1107 to i64
  store i64 %1108, i64* %RAX.i1969, align 8
  store %struct.Memory* %loadMem_400a5d, %struct.Memory** %MEMORY
  %loadMem_400a63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1110 = getelementptr inbounds %struct.GPR, %struct.GPR* %1109, i32 0, i32 33
  %1111 = getelementptr inbounds %struct.Reg, %struct.Reg* %1110, i32 0, i32 0
  %PC.i1965 = bitcast %union.anon* %1111 to i64*
  %1112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1113 = getelementptr inbounds %struct.GPR, %struct.GPR* %1112, i32 0, i32 1
  %1114 = getelementptr inbounds %struct.Reg, %struct.Reg* %1113, i32 0, i32 0
  %EAX.i1966 = bitcast %union.anon* %1114 to i32*
  %1115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1116 = getelementptr inbounds %struct.GPR, %struct.GPR* %1115, i32 0, i32 15
  %1117 = getelementptr inbounds %struct.Reg, %struct.Reg* %1116, i32 0, i32 0
  %RBP.i1967 = bitcast %union.anon* %1117 to i64*
  %1118 = load i64, i64* %RBP.i1967
  %1119 = sub i64 %1118, 1244
  %1120 = load i32, i32* %EAX.i1966
  %1121 = zext i32 %1120 to i64
  %1122 = load i64, i64* %PC.i1965
  %1123 = add i64 %1122, 6
  store i64 %1123, i64* %PC.i1965
  %1124 = inttoptr i64 %1119 to i32*
  store i32 %1120, i32* %1124
  store %struct.Memory* %loadMem_400a63, %struct.Memory** %MEMORY
  %loadMem_400a69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1126 = getelementptr inbounds %struct.GPR, %struct.GPR* %1125, i32 0, i32 33
  %1127 = getelementptr inbounds %struct.Reg, %struct.Reg* %1126, i32 0, i32 0
  %PC.i1963 = bitcast %union.anon* %1127 to i64*
  %1128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1129 = getelementptr inbounds %struct.GPR, %struct.GPR* %1128, i32 0, i32 15
  %1130 = getelementptr inbounds %struct.Reg, %struct.Reg* %1129, i32 0, i32 0
  %RBP.i1964 = bitcast %union.anon* %1130 to i64*
  %1131 = load i64, i64* %RBP.i1964
  %1132 = sub i64 %1131, 1168
  %1133 = load i64, i64* %PC.i1963
  %1134 = add i64 %1133, 10
  store i64 %1134, i64* %PC.i1963
  %1135 = inttoptr i64 %1132 to i32*
  store i32 0, i32* %1135
  store %struct.Memory* %loadMem_400a69, %struct.Memory** %MEMORY
  %loadMem_400a73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1136 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1137 = getelementptr inbounds %struct.GPR, %struct.GPR* %1136, i32 0, i32 33
  %1138 = getelementptr inbounds %struct.Reg, %struct.Reg* %1137, i32 0, i32 0
  %PC.i1961 = bitcast %union.anon* %1138 to i64*
  %1139 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1140 = getelementptr inbounds %struct.GPR, %struct.GPR* %1139, i32 0, i32 15
  %1141 = getelementptr inbounds %struct.Reg, %struct.Reg* %1140, i32 0, i32 0
  %RBP.i1962 = bitcast %union.anon* %1141 to i64*
  %1142 = load i64, i64* %RBP.i1962
  %1143 = sub i64 %1142, 1104
  %1144 = load i64, i64* %PC.i1961
  %1145 = add i64 %1144, 10
  store i64 %1145, i64* %PC.i1961
  %1146 = inttoptr i64 %1143 to i32*
  store i32 1, i32* %1146
  store %struct.Memory* %loadMem_400a73, %struct.Memory** %MEMORY
  %loadMem_400a7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %1147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1148 = getelementptr inbounds %struct.GPR, %struct.GPR* %1147, i32 0, i32 33
  %1149 = getelementptr inbounds %struct.Reg, %struct.Reg* %1148, i32 0, i32 0
  %PC.i1959 = bitcast %union.anon* %1149 to i64*
  %1150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1151 = getelementptr inbounds %struct.GPR, %struct.GPR* %1150, i32 0, i32 15
  %1152 = getelementptr inbounds %struct.Reg, %struct.Reg* %1151, i32 0, i32 0
  %RBP.i1960 = bitcast %union.anon* %1152 to i64*
  %1153 = load i64, i64* %RBP.i1960
  %1154 = sub i64 %1153, 4
  %1155 = load i64, i64* %PC.i1959
  %1156 = add i64 %1155, 7
  store i64 %1156, i64* %PC.i1959
  %1157 = inttoptr i64 %1154 to i32*
  store i32 1, i32* %1157
  store %struct.Memory* %loadMem_400a7d, %struct.Memory** %MEMORY
  br label %block_.L_400a84

block_.L_400a84:                                  ; preds = %block_400a8e, %block_400a53
  %loadMem_400a84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1159 = getelementptr inbounds %struct.GPR, %struct.GPR* %1158, i32 0, i32 33
  %1160 = getelementptr inbounds %struct.Reg, %struct.Reg* %1159, i32 0, i32 0
  %PC.i1957 = bitcast %union.anon* %1160 to i64*
  %1161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1162 = getelementptr inbounds %struct.GPR, %struct.GPR* %1161, i32 0, i32 15
  %1163 = getelementptr inbounds %struct.Reg, %struct.Reg* %1162, i32 0, i32 0
  %RBP.i1958 = bitcast %union.anon* %1163 to i64*
  %1164 = load i64, i64* %RBP.i1958
  %1165 = sub i64 %1164, 4
  %1166 = load i64, i64* %PC.i1957
  %1167 = add i64 %1166, 4
  store i64 %1167, i64* %PC.i1957
  %1168 = inttoptr i64 %1165 to i32*
  %1169 = load i32, i32* %1168
  %1170 = sub i32 %1169, 16
  %1171 = icmp ult i32 %1169, 16
  %1172 = zext i1 %1171 to i8
  %1173 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1172, i8* %1173, align 1
  %1174 = and i32 %1170, 255
  %1175 = call i32 @llvm.ctpop.i32(i32 %1174)
  %1176 = trunc i32 %1175 to i8
  %1177 = and i8 %1176, 1
  %1178 = xor i8 %1177, 1
  %1179 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1178, i8* %1179, align 1
  %1180 = xor i32 %1169, 16
  %1181 = xor i32 %1180, %1170
  %1182 = lshr i32 %1181, 4
  %1183 = trunc i32 %1182 to i8
  %1184 = and i8 %1183, 1
  %1185 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1184, i8* %1185, align 1
  %1186 = icmp eq i32 %1170, 0
  %1187 = zext i1 %1186 to i8
  %1188 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1187, i8* %1188, align 1
  %1189 = lshr i32 %1170, 31
  %1190 = trunc i32 %1189 to i8
  %1191 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1190, i8* %1191, align 1
  %1192 = lshr i32 %1169, 31
  %1193 = xor i32 %1189, %1192
  %1194 = add i32 %1193, %1192
  %1195 = icmp eq i32 %1194, 2
  %1196 = zext i1 %1195 to i8
  %1197 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1196, i8* %1197, align 1
  store %struct.Memory* %loadMem_400a84, %struct.Memory** %MEMORY
  %loadMem_400a88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1199 = getelementptr inbounds %struct.GPR, %struct.GPR* %1198, i32 0, i32 33
  %1200 = getelementptr inbounds %struct.Reg, %struct.Reg* %1199, i32 0, i32 0
  %PC.i1956 = bitcast %union.anon* %1200 to i64*
  %1201 = load i64, i64* %PC.i1956
  %1202 = add i64 %1201, 50
  %1203 = load i64, i64* %PC.i1956
  %1204 = add i64 %1203, 6
  %1205 = load i64, i64* %PC.i1956
  %1206 = add i64 %1205, 6
  store i64 %1206, i64* %PC.i1956
  %1207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1208 = load i8, i8* %1207, align 1
  %1209 = icmp ne i8 %1208, 0
  %1210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1211 = load i8, i8* %1210, align 1
  %1212 = icmp ne i8 %1211, 0
  %1213 = xor i1 %1209, %1212
  %1214 = xor i1 %1213, true
  %1215 = zext i1 %1214 to i8
  store i8 %1215, i8* %BRANCH_TAKEN, align 1
  %1216 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1217 = select i1 %1213, i64 %1204, i64 %1202
  store i64 %1217, i64* %1216, align 8
  store %struct.Memory* %loadMem_400a88, %struct.Memory** %MEMORY
  %loadBr_400a88 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400a88 = icmp eq i8 %loadBr_400a88, 1
  br i1 %cmpBr_400a88, label %block_.L_400aba, label %block_400a8e

block_400a8e:                                     ; preds = %block_.L_400a84
  %loadMem_400a8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1219 = getelementptr inbounds %struct.GPR, %struct.GPR* %1218, i32 0, i32 33
  %1220 = getelementptr inbounds %struct.Reg, %struct.Reg* %1219, i32 0, i32 0
  %PC.i1953 = bitcast %union.anon* %1220 to i64*
  %1221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1222 = getelementptr inbounds %struct.GPR, %struct.GPR* %1221, i32 0, i32 1
  %1223 = getelementptr inbounds %struct.Reg, %struct.Reg* %1222, i32 0, i32 0
  %RAX.i1954 = bitcast %union.anon* %1223 to i64*
  %1224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1225 = getelementptr inbounds %struct.GPR, %struct.GPR* %1224, i32 0, i32 15
  %1226 = getelementptr inbounds %struct.Reg, %struct.Reg* %1225, i32 0, i32 0
  %RBP.i1955 = bitcast %union.anon* %1226 to i64*
  %1227 = load i64, i64* %RBP.i1955
  %1228 = sub i64 %1227, 4
  %1229 = load i64, i64* %PC.i1953
  %1230 = add i64 %1229, 4
  store i64 %1230, i64* %PC.i1953
  %1231 = inttoptr i64 %1228 to i32*
  %1232 = load i32, i32* %1231
  %1233 = sext i32 %1232 to i64
  store i64 %1233, i64* %RAX.i1954, align 8
  store %struct.Memory* %loadMem_400a8e, %struct.Memory** %MEMORY
  %loadMem_400a92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1235 = getelementptr inbounds %struct.GPR, %struct.GPR* %1234, i32 0, i32 33
  %1236 = getelementptr inbounds %struct.Reg, %struct.Reg* %1235, i32 0, i32 0
  %PC.i1950 = bitcast %union.anon* %1236 to i64*
  %1237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1238 = getelementptr inbounds %struct.GPR, %struct.GPR* %1237, i32 0, i32 1
  %1239 = getelementptr inbounds %struct.Reg, %struct.Reg* %1238, i32 0, i32 0
  %RAX.i1951 = bitcast %union.anon* %1239 to i64*
  %1240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1241 = getelementptr inbounds %struct.GPR, %struct.GPR* %1240, i32 0, i32 15
  %1242 = getelementptr inbounds %struct.Reg, %struct.Reg* %1241, i32 0, i32 0
  %RBP.i1952 = bitcast %union.anon* %1242 to i64*
  %1243 = load i64, i64* %RBP.i1952
  %1244 = load i64, i64* %RAX.i1951
  %1245 = mul i64 %1244, 4
  %1246 = add i64 %1243, -1168
  %1247 = add i64 %1246, %1245
  %1248 = load i64, i64* %PC.i1950
  %1249 = add i64 %1248, 11
  store i64 %1249, i64* %PC.i1950
  %1250 = inttoptr i64 %1247 to i32*
  store i32 -1, i32* %1250
  store %struct.Memory* %loadMem_400a92, %struct.Memory** %MEMORY
  %loadMem_400a9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %1251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1252 = getelementptr inbounds %struct.GPR, %struct.GPR* %1251, i32 0, i32 33
  %1253 = getelementptr inbounds %struct.Reg, %struct.Reg* %1252, i32 0, i32 0
  %PC.i1947 = bitcast %union.anon* %1253 to i64*
  %1254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1255 = getelementptr inbounds %struct.GPR, %struct.GPR* %1254, i32 0, i32 1
  %1256 = getelementptr inbounds %struct.Reg, %struct.Reg* %1255, i32 0, i32 0
  %RAX.i1948 = bitcast %union.anon* %1256 to i64*
  %1257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1258 = getelementptr inbounds %struct.GPR, %struct.GPR* %1257, i32 0, i32 15
  %1259 = getelementptr inbounds %struct.Reg, %struct.Reg* %1258, i32 0, i32 0
  %RBP.i1949 = bitcast %union.anon* %1259 to i64*
  %1260 = load i64, i64* %RBP.i1949
  %1261 = sub i64 %1260, 4
  %1262 = load i64, i64* %PC.i1947
  %1263 = add i64 %1262, 4
  store i64 %1263, i64* %PC.i1947
  %1264 = inttoptr i64 %1261 to i32*
  %1265 = load i32, i32* %1264
  %1266 = sext i32 %1265 to i64
  store i64 %1266, i64* %RAX.i1948, align 8
  store %struct.Memory* %loadMem_400a9d, %struct.Memory** %MEMORY
  %loadMem_400aa1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1268 = getelementptr inbounds %struct.GPR, %struct.GPR* %1267, i32 0, i32 33
  %1269 = getelementptr inbounds %struct.Reg, %struct.Reg* %1268, i32 0, i32 0
  %PC.i1944 = bitcast %union.anon* %1269 to i64*
  %1270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1271 = getelementptr inbounds %struct.GPR, %struct.GPR* %1270, i32 0, i32 1
  %1272 = getelementptr inbounds %struct.Reg, %struct.Reg* %1271, i32 0, i32 0
  %RAX.i1945 = bitcast %union.anon* %1272 to i64*
  %1273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1274 = getelementptr inbounds %struct.GPR, %struct.GPR* %1273, i32 0, i32 15
  %1275 = getelementptr inbounds %struct.Reg, %struct.Reg* %1274, i32 0, i32 0
  %RBP.i1946 = bitcast %union.anon* %1275 to i64*
  %1276 = load i64, i64* %RBP.i1946
  %1277 = load i64, i64* %RAX.i1945
  %1278 = mul i64 %1277, 4
  %1279 = add i64 %1276, -1104
  %1280 = add i64 %1279, %1278
  %1281 = load i64, i64* %PC.i1944
  %1282 = add i64 %1281, 11
  store i64 %1282, i64* %PC.i1944
  %1283 = inttoptr i64 %1280 to i32*
  store i32 0, i32* %1283
  store %struct.Memory* %loadMem_400aa1, %struct.Memory** %MEMORY
  %loadMem_400aac = load %struct.Memory*, %struct.Memory** %MEMORY
  %1284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1285 = getelementptr inbounds %struct.GPR, %struct.GPR* %1284, i32 0, i32 33
  %1286 = getelementptr inbounds %struct.Reg, %struct.Reg* %1285, i32 0, i32 0
  %PC.i1941 = bitcast %union.anon* %1286 to i64*
  %1287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1288 = getelementptr inbounds %struct.GPR, %struct.GPR* %1287, i32 0, i32 1
  %1289 = getelementptr inbounds %struct.Reg, %struct.Reg* %1288, i32 0, i32 0
  %RAX.i1942 = bitcast %union.anon* %1289 to i64*
  %1290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1291 = getelementptr inbounds %struct.GPR, %struct.GPR* %1290, i32 0, i32 15
  %1292 = getelementptr inbounds %struct.Reg, %struct.Reg* %1291, i32 0, i32 0
  %RBP.i1943 = bitcast %union.anon* %1292 to i64*
  %1293 = load i64, i64* %RBP.i1943
  %1294 = sub i64 %1293, 4
  %1295 = load i64, i64* %PC.i1941
  %1296 = add i64 %1295, 3
  store i64 %1296, i64* %PC.i1941
  %1297 = inttoptr i64 %1294 to i32*
  %1298 = load i32, i32* %1297
  %1299 = zext i32 %1298 to i64
  store i64 %1299, i64* %RAX.i1942, align 8
  store %struct.Memory* %loadMem_400aac, %struct.Memory** %MEMORY
  %loadMem_400aaf = load %struct.Memory*, %struct.Memory** %MEMORY
  %1300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1301 = getelementptr inbounds %struct.GPR, %struct.GPR* %1300, i32 0, i32 33
  %1302 = getelementptr inbounds %struct.Reg, %struct.Reg* %1301, i32 0, i32 0
  %PC.i1939 = bitcast %union.anon* %1302 to i64*
  %1303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1304 = getelementptr inbounds %struct.GPR, %struct.GPR* %1303, i32 0, i32 1
  %1305 = getelementptr inbounds %struct.Reg, %struct.Reg* %1304, i32 0, i32 0
  %RAX.i1940 = bitcast %union.anon* %1305 to i64*
  %1306 = load i64, i64* %RAX.i1940
  %1307 = load i64, i64* %PC.i1939
  %1308 = add i64 %1307, 3
  store i64 %1308, i64* %PC.i1939
  %1309 = trunc i64 %1306 to i32
  %1310 = add i32 1, %1309
  %1311 = zext i32 %1310 to i64
  store i64 %1311, i64* %RAX.i1940, align 8
  %1312 = icmp ult i32 %1310, %1309
  %1313 = icmp ult i32 %1310, 1
  %1314 = or i1 %1312, %1313
  %1315 = zext i1 %1314 to i8
  %1316 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1315, i8* %1316, align 1
  %1317 = and i32 %1310, 255
  %1318 = call i32 @llvm.ctpop.i32(i32 %1317)
  %1319 = trunc i32 %1318 to i8
  %1320 = and i8 %1319, 1
  %1321 = xor i8 %1320, 1
  %1322 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1321, i8* %1322, align 1
  %1323 = xor i64 1, %1306
  %1324 = trunc i64 %1323 to i32
  %1325 = xor i32 %1324, %1310
  %1326 = lshr i32 %1325, 4
  %1327 = trunc i32 %1326 to i8
  %1328 = and i8 %1327, 1
  %1329 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1328, i8* %1329, align 1
  %1330 = icmp eq i32 %1310, 0
  %1331 = zext i1 %1330 to i8
  %1332 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1331, i8* %1332, align 1
  %1333 = lshr i32 %1310, 31
  %1334 = trunc i32 %1333 to i8
  %1335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1334, i8* %1335, align 1
  %1336 = lshr i32 %1309, 31
  %1337 = xor i32 %1333, %1336
  %1338 = add i32 %1337, %1333
  %1339 = icmp eq i32 %1338, 2
  %1340 = zext i1 %1339 to i8
  %1341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1340, i8* %1341, align 1
  store %struct.Memory* %loadMem_400aaf, %struct.Memory** %MEMORY
  %loadMem_400ab2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1343 = getelementptr inbounds %struct.GPR, %struct.GPR* %1342, i32 0, i32 33
  %1344 = getelementptr inbounds %struct.Reg, %struct.Reg* %1343, i32 0, i32 0
  %PC.i1936 = bitcast %union.anon* %1344 to i64*
  %1345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1346 = getelementptr inbounds %struct.GPR, %struct.GPR* %1345, i32 0, i32 1
  %1347 = getelementptr inbounds %struct.Reg, %struct.Reg* %1346, i32 0, i32 0
  %EAX.i1937 = bitcast %union.anon* %1347 to i32*
  %1348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1349 = getelementptr inbounds %struct.GPR, %struct.GPR* %1348, i32 0, i32 15
  %1350 = getelementptr inbounds %struct.Reg, %struct.Reg* %1349, i32 0, i32 0
  %RBP.i1938 = bitcast %union.anon* %1350 to i64*
  %1351 = load i64, i64* %RBP.i1938
  %1352 = sub i64 %1351, 4
  %1353 = load i32, i32* %EAX.i1937
  %1354 = zext i32 %1353 to i64
  %1355 = load i64, i64* %PC.i1936
  %1356 = add i64 %1355, 3
  store i64 %1356, i64* %PC.i1936
  %1357 = inttoptr i64 %1352 to i32*
  store i32 %1353, i32* %1357
  store %struct.Memory* %loadMem_400ab2, %struct.Memory** %MEMORY
  %loadMem_400ab5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1359 = getelementptr inbounds %struct.GPR, %struct.GPR* %1358, i32 0, i32 33
  %1360 = getelementptr inbounds %struct.Reg, %struct.Reg* %1359, i32 0, i32 0
  %PC.i1935 = bitcast %union.anon* %1360 to i64*
  %1361 = load i64, i64* %PC.i1935
  %1362 = add i64 %1361, -49
  %1363 = load i64, i64* %PC.i1935
  %1364 = add i64 %1363, 5
  store i64 %1364, i64* %PC.i1935
  %1365 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1362, i64* %1365, align 8
  store %struct.Memory* %loadMem_400ab5, %struct.Memory** %MEMORY
  br label %block_.L_400a84

block_.L_400aba:                                  ; preds = %block_.L_400a84
  %loadMem_400aba = load %struct.Memory*, %struct.Memory** %MEMORY
  %1366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1367 = getelementptr inbounds %struct.GPR, %struct.GPR* %1366, i32 0, i32 33
  %1368 = getelementptr inbounds %struct.Reg, %struct.Reg* %1367, i32 0, i32 0
  %PC.i1933 = bitcast %union.anon* %1368 to i64*
  %1369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1370 = getelementptr inbounds %struct.GPR, %struct.GPR* %1369, i32 0, i32 15
  %1371 = getelementptr inbounds %struct.Reg, %struct.Reg* %1370, i32 0, i32 0
  %RBP.i1934 = bitcast %union.anon* %1371 to i64*
  %1372 = load i64, i64* %RBP.i1934
  %1373 = sub i64 %1372, 1328
  %1374 = load i64, i64* %PC.i1933
  %1375 = add i64 %1374, 10
  store i64 %1375, i64* %PC.i1933
  %1376 = inttoptr i64 %1373 to i32*
  store i32 0, i32* %1376
  store %struct.Memory* %loadMem_400aba, %struct.Memory** %MEMORY
  %loadMem_400ac4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1378 = getelementptr inbounds %struct.GPR, %struct.GPR* %1377, i32 0, i32 33
  %1379 = getelementptr inbounds %struct.Reg, %struct.Reg* %1378, i32 0, i32 0
  %PC.i1931 = bitcast %union.anon* %1379 to i64*
  %1380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1381 = getelementptr inbounds %struct.GPR, %struct.GPR* %1380, i32 0, i32 15
  %1382 = getelementptr inbounds %struct.Reg, %struct.Reg* %1381, i32 0, i32 0
  %RBP.i1932 = bitcast %union.anon* %1382 to i64*
  %1383 = load i64, i64* %RBP.i1932
  %1384 = sub i64 %1383, 1324
  %1385 = load i64, i64* %PC.i1931
  %1386 = add i64 %1385, 10
  store i64 %1386, i64* %PC.i1931
  %1387 = inttoptr i64 %1384 to i32*
  store i32 0, i32* %1387
  store %struct.Memory* %loadMem_400ac4, %struct.Memory** %MEMORY
  %loadMem_400ace = load %struct.Memory*, %struct.Memory** %MEMORY
  %1388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1389 = getelementptr inbounds %struct.GPR, %struct.GPR* %1388, i32 0, i32 33
  %1390 = getelementptr inbounds %struct.Reg, %struct.Reg* %1389, i32 0, i32 0
  %PC.i1929 = bitcast %union.anon* %1390 to i64*
  %1391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1392 = getelementptr inbounds %struct.GPR, %struct.GPR* %1391, i32 0, i32 15
  %1393 = getelementptr inbounds %struct.Reg, %struct.Reg* %1392, i32 0, i32 0
  %RBP.i1930 = bitcast %union.anon* %1393 to i64*
  %1394 = load i64, i64* %RBP.i1930
  %1395 = sub i64 %1394, 1408
  %1396 = load i64, i64* %PC.i1929
  %1397 = add i64 %1396, 10
  store i64 %1397, i64* %PC.i1929
  %1398 = inttoptr i64 %1395 to i32*
  store i32 -1, i32* %1398
  store %struct.Memory* %loadMem_400ace, %struct.Memory** %MEMORY
  %loadMem_400ad8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1400 = getelementptr inbounds %struct.GPR, %struct.GPR* %1399, i32 0, i32 33
  %1401 = getelementptr inbounds %struct.Reg, %struct.Reg* %1400, i32 0, i32 0
  %PC.i1927 = bitcast %union.anon* %1401 to i64*
  %1402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1403 = getelementptr inbounds %struct.GPR, %struct.GPR* %1402, i32 0, i32 15
  %1404 = getelementptr inbounds %struct.Reg, %struct.Reg* %1403, i32 0, i32 0
  %RBP.i1928 = bitcast %union.anon* %1404 to i64*
  %1405 = load i64, i64* %RBP.i1928
  %1406 = sub i64 %1405, 1404
  %1407 = load i64, i64* %PC.i1927
  %1408 = add i64 %1407, 10
  store i64 %1408, i64* %PC.i1927
  %1409 = inttoptr i64 %1406 to i32*
  store i32 0, i32* %1409
  store %struct.Memory* %loadMem_400ad8, %struct.Memory** %MEMORY
  %loadMem_400ae2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1411 = getelementptr inbounds %struct.GPR, %struct.GPR* %1410, i32 0, i32 33
  %1412 = getelementptr inbounds %struct.Reg, %struct.Reg* %1411, i32 0, i32 0
  %PC.i1925 = bitcast %union.anon* %1412 to i64*
  %1413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1414 = getelementptr inbounds %struct.GPR, %struct.GPR* %1413, i32 0, i32 15
  %1415 = getelementptr inbounds %struct.Reg, %struct.Reg* %1414, i32 0, i32 0
  %RBP.i1926 = bitcast %union.anon* %1415 to i64*
  %1416 = load i64, i64* %RBP.i1926
  %1417 = sub i64 %1416, 12
  %1418 = load i64, i64* %PC.i1925
  %1419 = add i64 %1418, 7
  store i64 %1419, i64* %PC.i1925
  %1420 = inttoptr i64 %1417 to i32*
  store i32 0, i32* %1420
  store %struct.Memory* %loadMem_400ae2, %struct.Memory** %MEMORY
  br label %block_.L_400ae9

block_.L_400ae9:                                  ; preds = %block_.L_40102e, %block_.L_400aba
  %loadMem_400ae9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1422 = getelementptr inbounds %struct.GPR, %struct.GPR* %1421, i32 0, i32 33
  %1423 = getelementptr inbounds %struct.Reg, %struct.Reg* %1422, i32 0, i32 0
  %PC.i1922 = bitcast %union.anon* %1423 to i64*
  %1424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1425 = getelementptr inbounds %struct.GPR, %struct.GPR* %1424, i32 0, i32 1
  %1426 = getelementptr inbounds %struct.Reg, %struct.Reg* %1425, i32 0, i32 0
  %RAX.i1923 = bitcast %union.anon* %1426 to i64*
  %1427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1428 = getelementptr inbounds %struct.GPR, %struct.GPR* %1427, i32 0, i32 15
  %1429 = getelementptr inbounds %struct.Reg, %struct.Reg* %1428, i32 0, i32 0
  %RBP.i1924 = bitcast %union.anon* %1429 to i64*
  %1430 = load i64, i64* %RBP.i1924
  %1431 = sub i64 %1430, 12
  %1432 = load i64, i64* %PC.i1922
  %1433 = add i64 %1432, 3
  store i64 %1433, i64* %PC.i1922
  %1434 = inttoptr i64 %1431 to i32*
  %1435 = load i32, i32* %1434
  %1436 = zext i32 %1435 to i64
  store i64 %1436, i64* %RAX.i1923, align 8
  store %struct.Memory* %loadMem_400ae9, %struct.Memory** %MEMORY
  %loadMem_400aec = load %struct.Memory*, %struct.Memory** %MEMORY
  %1437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1438 = getelementptr inbounds %struct.GPR, %struct.GPR* %1437, i32 0, i32 33
  %1439 = getelementptr inbounds %struct.Reg, %struct.Reg* %1438, i32 0, i32 0
  %PC.i1920 = bitcast %union.anon* %1439 to i64*
  %1440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1441 = getelementptr inbounds %struct.GPR, %struct.GPR* %1440, i32 0, i32 1
  %1442 = getelementptr inbounds %struct.Reg, %struct.Reg* %1441, i32 0, i32 0
  %RAX.i1921 = bitcast %union.anon* %1442 to i64*
  %1443 = load i64, i64* %RAX.i1921
  %1444 = load i64, i64* %PC.i1920
  %1445 = add i64 %1444, 3
  store i64 %1445, i64* %PC.i1920
  %1446 = trunc i64 %1443 to i32
  %1447 = add i32 1, %1446
  %1448 = zext i32 %1447 to i64
  store i64 %1448, i64* %RAX.i1921, align 8
  %1449 = icmp ult i32 %1447, %1446
  %1450 = icmp ult i32 %1447, 1
  %1451 = or i1 %1449, %1450
  %1452 = zext i1 %1451 to i8
  %1453 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1452, i8* %1453, align 1
  %1454 = and i32 %1447, 255
  %1455 = call i32 @llvm.ctpop.i32(i32 %1454)
  %1456 = trunc i32 %1455 to i8
  %1457 = and i8 %1456, 1
  %1458 = xor i8 %1457, 1
  %1459 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1458, i8* %1459, align 1
  %1460 = xor i64 1, %1443
  %1461 = trunc i64 %1460 to i32
  %1462 = xor i32 %1461, %1447
  %1463 = lshr i32 %1462, 4
  %1464 = trunc i32 %1463 to i8
  %1465 = and i8 %1464, 1
  %1466 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1465, i8* %1466, align 1
  %1467 = icmp eq i32 %1447, 0
  %1468 = zext i1 %1467 to i8
  %1469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1468, i8* %1469, align 1
  %1470 = lshr i32 %1447, 31
  %1471 = trunc i32 %1470 to i8
  %1472 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1471, i8* %1472, align 1
  %1473 = lshr i32 %1446, 31
  %1474 = xor i32 %1470, %1473
  %1475 = add i32 %1474, %1470
  %1476 = icmp eq i32 %1475, 2
  %1477 = zext i1 %1476 to i8
  %1478 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1477, i8* %1478, align 1
  store %struct.Memory* %loadMem_400aec, %struct.Memory** %MEMORY
  %loadMem_400aef = load %struct.Memory*, %struct.Memory** %MEMORY
  %1479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1480 = getelementptr inbounds %struct.GPR, %struct.GPR* %1479, i32 0, i32 33
  %1481 = getelementptr inbounds %struct.Reg, %struct.Reg* %1480, i32 0, i32 0
  %PC.i1917 = bitcast %union.anon* %1481 to i64*
  %1482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1483 = getelementptr inbounds %struct.GPR, %struct.GPR* %1482, i32 0, i32 1
  %1484 = getelementptr inbounds %struct.Reg, %struct.Reg* %1483, i32 0, i32 0
  %EAX.i1918 = bitcast %union.anon* %1484 to i32*
  %1485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1486 = getelementptr inbounds %struct.GPR, %struct.GPR* %1485, i32 0, i32 15
  %1487 = getelementptr inbounds %struct.Reg, %struct.Reg* %1486, i32 0, i32 0
  %RBP.i1919 = bitcast %union.anon* %1487 to i64*
  %1488 = load i64, i64* %RBP.i1919
  %1489 = sub i64 %1488, 12
  %1490 = load i32, i32* %EAX.i1918
  %1491 = zext i32 %1490 to i64
  %1492 = load i64, i64* %PC.i1917
  %1493 = add i64 %1492, 3
  store i64 %1493, i64* %PC.i1917
  %1494 = inttoptr i64 %1489 to i32*
  store i32 %1490, i32* %1494
  store %struct.Memory* %loadMem_400aef, %struct.Memory** %MEMORY
  %loadMem_400af2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1496 = getelementptr inbounds %struct.GPR, %struct.GPR* %1495, i32 0, i32 33
  %1497 = getelementptr inbounds %struct.Reg, %struct.Reg* %1496, i32 0, i32 0
  %PC.i1914 = bitcast %union.anon* %1497 to i64*
  %1498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1499 = getelementptr inbounds %struct.GPR, %struct.GPR* %1498, i32 0, i32 5
  %1500 = getelementptr inbounds %struct.Reg, %struct.Reg* %1499, i32 0, i32 0
  %RCX.i1915 = bitcast %union.anon* %1500 to i64*
  %1501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1502 = getelementptr inbounds %struct.GPR, %struct.GPR* %1501, i32 0, i32 15
  %1503 = getelementptr inbounds %struct.Reg, %struct.Reg* %1502, i32 0, i32 0
  %RBP.i1916 = bitcast %union.anon* %1503 to i64*
  %1504 = load i64, i64* %RBP.i1916
  %1505 = sub i64 %1504, 12
  %1506 = load i64, i64* %PC.i1914
  %1507 = add i64 %1506, 4
  store i64 %1507, i64* %PC.i1914
  %1508 = inttoptr i64 %1505 to i32*
  %1509 = load i32, i32* %1508
  %1510 = sext i32 %1509 to i64
  store i64 %1510, i64* %RCX.i1915, align 8
  store %struct.Memory* %loadMem_400af2, %struct.Memory** %MEMORY
  %loadMem_400af6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1512 = getelementptr inbounds %struct.GPR, %struct.GPR* %1511, i32 0, i32 33
  %1513 = getelementptr inbounds %struct.Reg, %struct.Reg* %1512, i32 0, i32 0
  %PC.i1911 = bitcast %union.anon* %1513 to i64*
  %1514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1515 = getelementptr inbounds %struct.GPR, %struct.GPR* %1514, i32 0, i32 5
  %1516 = getelementptr inbounds %struct.Reg, %struct.Reg* %1515, i32 0, i32 0
  %RCX.i1912 = bitcast %union.anon* %1516 to i64*
  %1517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1518 = getelementptr inbounds %struct.GPR, %struct.GPR* %1517, i32 0, i32 15
  %1519 = getelementptr inbounds %struct.Reg, %struct.Reg* %1518, i32 0, i32 0
  %RBP.i1913 = bitcast %union.anon* %1519 to i64*
  %1520 = load i64, i64* %RBP.i1913
  %1521 = load i64, i64* %RCX.i1912
  %1522 = mul i64 %1521, 4
  %1523 = add i64 %1520, -1248
  %1524 = add i64 %1523, %1522
  %1525 = load i64, i64* %PC.i1911
  %1526 = add i64 %1525, 8
  store i64 %1526, i64* %PC.i1911
  %1527 = inttoptr i64 %1524 to i32*
  %1528 = load i32, i32* %1527
  %1529 = sub i32 %1528, -1
  %1530 = icmp ult i32 %1528, -1
  %1531 = zext i1 %1530 to i8
  %1532 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1531, i8* %1532, align 1
  %1533 = and i32 %1529, 255
  %1534 = call i32 @llvm.ctpop.i32(i32 %1533)
  %1535 = trunc i32 %1534 to i8
  %1536 = and i8 %1535, 1
  %1537 = xor i8 %1536, 1
  %1538 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1537, i8* %1538, align 1
  %1539 = xor i32 %1528, -1
  %1540 = xor i32 %1539, %1529
  %1541 = lshr i32 %1540, 4
  %1542 = trunc i32 %1541 to i8
  %1543 = and i8 %1542, 1
  %1544 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1543, i8* %1544, align 1
  %1545 = icmp eq i32 %1529, 0
  %1546 = zext i1 %1545 to i8
  %1547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1546, i8* %1547, align 1
  %1548 = lshr i32 %1529, 31
  %1549 = trunc i32 %1548 to i8
  %1550 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1549, i8* %1550, align 1
  %1551 = lshr i32 %1528, 31
  %1552 = xor i32 %1551, 1
  %1553 = xor i32 %1548, %1551
  %1554 = add i32 %1553, %1552
  %1555 = icmp eq i32 %1554, 2
  %1556 = zext i1 %1555 to i8
  %1557 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1556, i8* %1557, align 1
  store %struct.Memory* %loadMem_400af6, %struct.Memory** %MEMORY
  %loadMem_400afe = load %struct.Memory*, %struct.Memory** %MEMORY
  %1558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1559 = getelementptr inbounds %struct.GPR, %struct.GPR* %1558, i32 0, i32 33
  %1560 = getelementptr inbounds %struct.Reg, %struct.Reg* %1559, i32 0, i32 0
  %PC.i1910 = bitcast %union.anon* %1560 to i64*
  %1561 = load i64, i64* %PC.i1910
  %1562 = add i64 %1561, 180
  %1563 = load i64, i64* %PC.i1910
  %1564 = add i64 %1563, 6
  %1565 = load i64, i64* %PC.i1910
  %1566 = add i64 %1565, 6
  store i64 %1566, i64* %PC.i1910
  %1567 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1568 = load i8, i8* %1567, align 1
  %1569 = icmp eq i8 %1568, 0
  %1570 = zext i1 %1569 to i8
  store i8 %1570, i8* %BRANCH_TAKEN, align 1
  %1571 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1572 = select i1 %1569, i64 %1562, i64 %1564
  store i64 %1572, i64* %1571, align 8
  store %struct.Memory* %loadMem_400afe, %struct.Memory** %MEMORY
  %loadBr_400afe = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400afe = icmp eq i8 %loadBr_400afe, 1
  br i1 %cmpBr_400afe, label %block_.L_400bb2, label %block_400b04

block_400b04:                                     ; preds = %block_.L_400ae9
  %loadMem_400b04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1574 = getelementptr inbounds %struct.GPR, %struct.GPR* %1573, i32 0, i32 33
  %1575 = getelementptr inbounds %struct.Reg, %struct.Reg* %1574, i32 0, i32 0
  %PC.i1907 = bitcast %union.anon* %1575 to i64*
  %1576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1577 = getelementptr inbounds %struct.GPR, %struct.GPR* %1576, i32 0, i32 1
  %1578 = getelementptr inbounds %struct.Reg, %struct.Reg* %1577, i32 0, i32 0
  %RAX.i1908 = bitcast %union.anon* %1578 to i64*
  %1579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1580 = getelementptr inbounds %struct.GPR, %struct.GPR* %1579, i32 0, i32 15
  %1581 = getelementptr inbounds %struct.Reg, %struct.Reg* %1580, i32 0, i32 0
  %RBP.i1909 = bitcast %union.anon* %1581 to i64*
  %1582 = load i64, i64* %RBP.i1909
  %1583 = sub i64 %1582, 12
  %1584 = load i64, i64* %PC.i1907
  %1585 = add i64 %1584, 4
  store i64 %1585, i64* %PC.i1907
  %1586 = inttoptr i64 %1583 to i32*
  %1587 = load i32, i32* %1586
  %1588 = sext i32 %1587 to i64
  store i64 %1588, i64* %RAX.i1908, align 8
  store %struct.Memory* %loadMem_400b04, %struct.Memory** %MEMORY
  %loadMem_400b08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1590 = getelementptr inbounds %struct.GPR, %struct.GPR* %1589, i32 0, i32 33
  %1591 = getelementptr inbounds %struct.Reg, %struct.Reg* %1590, i32 0, i32 0
  %PC.i1903 = bitcast %union.anon* %1591 to i64*
  %1592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1593 = getelementptr inbounds %struct.GPR, %struct.GPR* %1592, i32 0, i32 1
  %1594 = getelementptr inbounds %struct.Reg, %struct.Reg* %1593, i32 0, i32 0
  %RAX.i1904 = bitcast %union.anon* %1594 to i64*
  %1595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1596 = getelementptr inbounds %struct.GPR, %struct.GPR* %1595, i32 0, i32 5
  %1597 = getelementptr inbounds %struct.Reg, %struct.Reg* %1596, i32 0, i32 0
  %RCX.i1905 = bitcast %union.anon* %1597 to i64*
  %1598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1599 = getelementptr inbounds %struct.GPR, %struct.GPR* %1598, i32 0, i32 15
  %1600 = getelementptr inbounds %struct.Reg, %struct.Reg* %1599, i32 0, i32 0
  %RBP.i1906 = bitcast %union.anon* %1600 to i64*
  %1601 = load i64, i64* %RBP.i1906
  %1602 = load i64, i64* %RAX.i1904
  %1603 = mul i64 %1602, 4
  %1604 = add i64 %1601, -1328
  %1605 = add i64 %1604, %1603
  %1606 = load i64, i64* %PC.i1903
  %1607 = add i64 %1606, 7
  store i64 %1607, i64* %PC.i1903
  %1608 = inttoptr i64 %1605 to i32*
  %1609 = load i32, i32* %1608
  %1610 = zext i32 %1609 to i64
  store i64 %1610, i64* %RCX.i1905, align 8
  store %struct.Memory* %loadMem_400b08, %struct.Memory** %MEMORY
  %loadMem_400b0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1612 = getelementptr inbounds %struct.GPR, %struct.GPR* %1611, i32 0, i32 33
  %1613 = getelementptr inbounds %struct.Reg, %struct.Reg* %1612, i32 0, i32 0
  %PC.i1900 = bitcast %union.anon* %1613 to i64*
  %1614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1615 = getelementptr inbounds %struct.GPR, %struct.GPR* %1614, i32 0, i32 7
  %1616 = getelementptr inbounds %struct.Reg, %struct.Reg* %1615, i32 0, i32 0
  %RDX.i1901 = bitcast %union.anon* %1616 to i64*
  %1617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1618 = getelementptr inbounds %struct.GPR, %struct.GPR* %1617, i32 0, i32 15
  %1619 = getelementptr inbounds %struct.Reg, %struct.Reg* %1618, i32 0, i32 0
  %RBP.i1902 = bitcast %union.anon* %1619 to i64*
  %1620 = load i64, i64* %RBP.i1902
  %1621 = sub i64 %1620, 12
  %1622 = load i64, i64* %PC.i1900
  %1623 = add i64 %1622, 3
  store i64 %1623, i64* %PC.i1900
  %1624 = inttoptr i64 %1621 to i32*
  %1625 = load i32, i32* %1624
  %1626 = zext i32 %1625 to i64
  store i64 %1626, i64* %RDX.i1901, align 8
  store %struct.Memory* %loadMem_400b0f, %struct.Memory** %MEMORY
  %loadMem_400b12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1628 = getelementptr inbounds %struct.GPR, %struct.GPR* %1627, i32 0, i32 33
  %1629 = getelementptr inbounds %struct.Reg, %struct.Reg* %1628, i32 0, i32 0
  %PC.i1898 = bitcast %union.anon* %1629 to i64*
  %1630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1631 = getelementptr inbounds %struct.GPR, %struct.GPR* %1630, i32 0, i32 7
  %1632 = getelementptr inbounds %struct.Reg, %struct.Reg* %1631, i32 0, i32 0
  %RDX.i1899 = bitcast %union.anon* %1632 to i64*
  %1633 = load i64, i64* %RDX.i1899
  %1634 = load i64, i64* %PC.i1898
  %1635 = add i64 %1634, 3
  store i64 %1635, i64* %PC.i1898
  %1636 = trunc i64 %1633 to i32
  %1637 = add i32 1, %1636
  %1638 = zext i32 %1637 to i64
  store i64 %1638, i64* %RDX.i1899, align 8
  %1639 = icmp ult i32 %1637, %1636
  %1640 = icmp ult i32 %1637, 1
  %1641 = or i1 %1639, %1640
  %1642 = zext i1 %1641 to i8
  %1643 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1642, i8* %1643, align 1
  %1644 = and i32 %1637, 255
  %1645 = call i32 @llvm.ctpop.i32(i32 %1644)
  %1646 = trunc i32 %1645 to i8
  %1647 = and i8 %1646, 1
  %1648 = xor i8 %1647, 1
  %1649 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1648, i8* %1649, align 1
  %1650 = xor i64 1, %1633
  %1651 = trunc i64 %1650 to i32
  %1652 = xor i32 %1651, %1637
  %1653 = lshr i32 %1652, 4
  %1654 = trunc i32 %1653 to i8
  %1655 = and i8 %1654, 1
  %1656 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1655, i8* %1656, align 1
  %1657 = icmp eq i32 %1637, 0
  %1658 = zext i1 %1657 to i8
  %1659 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1658, i8* %1659, align 1
  %1660 = lshr i32 %1637, 31
  %1661 = trunc i32 %1660 to i8
  %1662 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1661, i8* %1662, align 1
  %1663 = lshr i32 %1636, 31
  %1664 = xor i32 %1660, %1663
  %1665 = add i32 %1664, %1660
  %1666 = icmp eq i32 %1665, 2
  %1667 = zext i1 %1666 to i8
  %1668 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1667, i8* %1668, align 1
  store %struct.Memory* %loadMem_400b12, %struct.Memory** %MEMORY
  %loadMem_400b15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1670 = getelementptr inbounds %struct.GPR, %struct.GPR* %1669, i32 0, i32 33
  %1671 = getelementptr inbounds %struct.Reg, %struct.Reg* %1670, i32 0, i32 0
  %PC.i1895 = bitcast %union.anon* %1671 to i64*
  %1672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1673 = getelementptr inbounds %struct.GPR, %struct.GPR* %1672, i32 0, i32 7
  %1674 = getelementptr inbounds %struct.Reg, %struct.Reg* %1673, i32 0, i32 0
  %EDX.i1896 = bitcast %union.anon* %1674 to i32*
  %1675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1676 = getelementptr inbounds %struct.GPR, %struct.GPR* %1675, i32 0, i32 1
  %1677 = getelementptr inbounds %struct.Reg, %struct.Reg* %1676, i32 0, i32 0
  %RAX.i1897 = bitcast %union.anon* %1677 to i64*
  %1678 = load i32, i32* %EDX.i1896
  %1679 = zext i32 %1678 to i64
  %1680 = load i64, i64* %PC.i1895
  %1681 = add i64 %1680, 3
  store i64 %1681, i64* %PC.i1895
  %1682 = shl i64 %1679, 32
  %1683 = ashr exact i64 %1682, 32
  store i64 %1683, i64* %RAX.i1897, align 8
  store %struct.Memory* %loadMem_400b15, %struct.Memory** %MEMORY
  %loadMem_400b18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1685 = getelementptr inbounds %struct.GPR, %struct.GPR* %1684, i32 0, i32 33
  %1686 = getelementptr inbounds %struct.Reg, %struct.Reg* %1685, i32 0, i32 0
  %PC.i1891 = bitcast %union.anon* %1686 to i64*
  %1687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1688 = getelementptr inbounds %struct.GPR, %struct.GPR* %1687, i32 0, i32 5
  %1689 = getelementptr inbounds %struct.Reg, %struct.Reg* %1688, i32 0, i32 0
  %ECX.i1892 = bitcast %union.anon* %1689 to i32*
  %1690 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1691 = getelementptr inbounds %struct.GPR, %struct.GPR* %1690, i32 0, i32 1
  %1692 = getelementptr inbounds %struct.Reg, %struct.Reg* %1691, i32 0, i32 0
  %RAX.i1893 = bitcast %union.anon* %1692 to i64*
  %1693 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1694 = getelementptr inbounds %struct.GPR, %struct.GPR* %1693, i32 0, i32 15
  %1695 = getelementptr inbounds %struct.Reg, %struct.Reg* %1694, i32 0, i32 0
  %RBP.i1894 = bitcast %union.anon* %1695 to i64*
  %1696 = load i64, i64* %RBP.i1894
  %1697 = load i64, i64* %RAX.i1893
  %1698 = mul i64 %1697, 4
  %1699 = add i64 %1696, -1328
  %1700 = add i64 %1699, %1698
  %1701 = load i32, i32* %ECX.i1892
  %1702 = zext i32 %1701 to i64
  %1703 = load i64, i64* %PC.i1891
  %1704 = add i64 %1703, 7
  store i64 %1704, i64* %PC.i1891
  %1705 = inttoptr i64 %1700 to i32*
  store i32 %1701, i32* %1705
  store %struct.Memory* %loadMem_400b18, %struct.Memory** %MEMORY
  %loadMem_400b1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1706 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1707 = getelementptr inbounds %struct.GPR, %struct.GPR* %1706, i32 0, i32 33
  %1708 = getelementptr inbounds %struct.Reg, %struct.Reg* %1707, i32 0, i32 0
  %PC.i1889 = bitcast %union.anon* %1708 to i64*
  %1709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1710 = getelementptr inbounds %struct.GPR, %struct.GPR* %1709, i32 0, i32 15
  %1711 = getelementptr inbounds %struct.Reg, %struct.Reg* %1710, i32 0, i32 0
  %RBP.i1890 = bitcast %union.anon* %1711 to i64*
  %1712 = load i64, i64* %RBP.i1890
  %1713 = sub i64 %1712, 4
  %1714 = load i64, i64* %PC.i1889
  %1715 = add i64 %1714, 7
  store i64 %1715, i64* %PC.i1889
  %1716 = inttoptr i64 %1713 to i32*
  store i32 0, i32* %1716
  store %struct.Memory* %loadMem_400b1f, %struct.Memory** %MEMORY
  br label %block_.L_400b26

block_.L_400b26:                                  ; preds = %block_400b3a, %block_400b04
  %loadMem_400b26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1717 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1718 = getelementptr inbounds %struct.GPR, %struct.GPR* %1717, i32 0, i32 33
  %1719 = getelementptr inbounds %struct.Reg, %struct.Reg* %1718, i32 0, i32 0
  %PC.i1886 = bitcast %union.anon* %1719 to i64*
  %1720 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1721 = getelementptr inbounds %struct.GPR, %struct.GPR* %1720, i32 0, i32 1
  %1722 = getelementptr inbounds %struct.Reg, %struct.Reg* %1721, i32 0, i32 0
  %RAX.i1887 = bitcast %union.anon* %1722 to i64*
  %1723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1724 = getelementptr inbounds %struct.GPR, %struct.GPR* %1723, i32 0, i32 15
  %1725 = getelementptr inbounds %struct.Reg, %struct.Reg* %1724, i32 0, i32 0
  %RBP.i1888 = bitcast %union.anon* %1725 to i64*
  %1726 = load i64, i64* %RBP.i1888
  %1727 = sub i64 %1726, 4
  %1728 = load i64, i64* %PC.i1886
  %1729 = add i64 %1728, 3
  store i64 %1729, i64* %PC.i1886
  %1730 = inttoptr i64 %1727 to i32*
  %1731 = load i32, i32* %1730
  %1732 = zext i32 %1731 to i64
  store i64 %1732, i64* %RAX.i1887, align 8
  store %struct.Memory* %loadMem_400b26, %struct.Memory** %MEMORY
  %loadMem_400b29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1734 = getelementptr inbounds %struct.GPR, %struct.GPR* %1733, i32 0, i32 33
  %1735 = getelementptr inbounds %struct.Reg, %struct.Reg* %1734, i32 0, i32 0
  %PC.i1883 = bitcast %union.anon* %1735 to i64*
  %1736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1737 = getelementptr inbounds %struct.GPR, %struct.GPR* %1736, i32 0, i32 5
  %1738 = getelementptr inbounds %struct.Reg, %struct.Reg* %1737, i32 0, i32 0
  %RCX.i1884 = bitcast %union.anon* %1738 to i64*
  %1739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1740 = getelementptr inbounds %struct.GPR, %struct.GPR* %1739, i32 0, i32 15
  %1741 = getelementptr inbounds %struct.Reg, %struct.Reg* %1740, i32 0, i32 0
  %RBP.i1885 = bitcast %union.anon* %1741 to i64*
  %1742 = load i64, i64* %RBP.i1885
  %1743 = sub i64 %1742, 12
  %1744 = load i64, i64* %PC.i1883
  %1745 = add i64 %1744, 4
  store i64 %1745, i64* %PC.i1883
  %1746 = inttoptr i64 %1743 to i32*
  %1747 = load i32, i32* %1746
  %1748 = sext i32 %1747 to i64
  store i64 %1748, i64* %RCX.i1884, align 8
  store %struct.Memory* %loadMem_400b29, %struct.Memory** %MEMORY
  %loadMem_400b2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %1749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1750 = getelementptr inbounds %struct.GPR, %struct.GPR* %1749, i32 0, i32 33
  %1751 = getelementptr inbounds %struct.Reg, %struct.Reg* %1750, i32 0, i32 0
  %PC.i1879 = bitcast %union.anon* %1751 to i64*
  %1752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1753 = getelementptr inbounds %struct.GPR, %struct.GPR* %1752, i32 0, i32 1
  %1754 = getelementptr inbounds %struct.Reg, %struct.Reg* %1753, i32 0, i32 0
  %EAX.i1880 = bitcast %union.anon* %1754 to i32*
  %1755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1756 = getelementptr inbounds %struct.GPR, %struct.GPR* %1755, i32 0, i32 5
  %1757 = getelementptr inbounds %struct.Reg, %struct.Reg* %1756, i32 0, i32 0
  %RCX.i1881 = bitcast %union.anon* %1757 to i64*
  %1758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1759 = getelementptr inbounds %struct.GPR, %struct.GPR* %1758, i32 0, i32 15
  %1760 = getelementptr inbounds %struct.Reg, %struct.Reg* %1759, i32 0, i32 0
  %RBP.i1882 = bitcast %union.anon* %1760 to i64*
  %1761 = load i32, i32* %EAX.i1880
  %1762 = zext i32 %1761 to i64
  %1763 = load i64, i64* %RBP.i1882
  %1764 = load i64, i64* %RCX.i1881
  %1765 = mul i64 %1764, 4
  %1766 = add i64 %1763, -1328
  %1767 = add i64 %1766, %1765
  %1768 = load i64, i64* %PC.i1879
  %1769 = add i64 %1768, 7
  store i64 %1769, i64* %PC.i1879
  %1770 = inttoptr i64 %1767 to i32*
  %1771 = load i32, i32* %1770
  %1772 = sub i32 %1761, %1771
  %1773 = icmp ult i32 %1761, %1771
  %1774 = zext i1 %1773 to i8
  %1775 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1774, i8* %1775, align 1
  %1776 = and i32 %1772, 255
  %1777 = call i32 @llvm.ctpop.i32(i32 %1776)
  %1778 = trunc i32 %1777 to i8
  %1779 = and i8 %1778, 1
  %1780 = xor i8 %1779, 1
  %1781 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1780, i8* %1781, align 1
  %1782 = xor i32 %1771, %1761
  %1783 = xor i32 %1782, %1772
  %1784 = lshr i32 %1783, 4
  %1785 = trunc i32 %1784 to i8
  %1786 = and i8 %1785, 1
  %1787 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1786, i8* %1787, align 1
  %1788 = icmp eq i32 %1772, 0
  %1789 = zext i1 %1788 to i8
  %1790 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1789, i8* %1790, align 1
  %1791 = lshr i32 %1772, 31
  %1792 = trunc i32 %1791 to i8
  %1793 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1792, i8* %1793, align 1
  %1794 = lshr i32 %1761, 31
  %1795 = lshr i32 %1771, 31
  %1796 = xor i32 %1795, %1794
  %1797 = xor i32 %1791, %1794
  %1798 = add i32 %1797, %1796
  %1799 = icmp eq i32 %1798, 2
  %1800 = zext i1 %1799 to i8
  %1801 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1800, i8* %1801, align 1
  store %struct.Memory* %loadMem_400b2d, %struct.Memory** %MEMORY
  %loadMem_400b34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1803 = getelementptr inbounds %struct.GPR, %struct.GPR* %1802, i32 0, i32 33
  %1804 = getelementptr inbounds %struct.Reg, %struct.Reg* %1803, i32 0, i32 0
  %PC.i1878 = bitcast %union.anon* %1804 to i64*
  %1805 = load i64, i64* %PC.i1878
  %1806 = add i64 %1805, 121
  %1807 = load i64, i64* %PC.i1878
  %1808 = add i64 %1807, 6
  %1809 = load i64, i64* %PC.i1878
  %1810 = add i64 %1809, 6
  store i64 %1810, i64* %PC.i1878
  %1811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1812 = load i8, i8* %1811, align 1
  %1813 = icmp eq i8 %1812, 0
  %1814 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1815 = load i8, i8* %1814, align 1
  %1816 = icmp ne i8 %1815, 0
  %1817 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1818 = load i8, i8* %1817, align 1
  %1819 = icmp ne i8 %1818, 0
  %1820 = xor i1 %1816, %1819
  %1821 = xor i1 %1820, true
  %1822 = and i1 %1813, %1821
  %1823 = zext i1 %1822 to i8
  store i8 %1823, i8* %BRANCH_TAKEN, align 1
  %1824 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1825 = select i1 %1822, i64 %1806, i64 %1808
  store i64 %1825, i64* %1824, align 8
  store %struct.Memory* %loadMem_400b34, %struct.Memory** %MEMORY
  %loadBr_400b34 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400b34 = icmp eq i8 %loadBr_400b34, 1
  br i1 %cmpBr_400b34, label %block_.L_400bad, label %block_400b3a

block_400b3a:                                     ; preds = %block_.L_400b26
  %loadMem_400b3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1827 = getelementptr inbounds %struct.GPR, %struct.GPR* %1826, i32 0, i32 33
  %1828 = getelementptr inbounds %struct.Reg, %struct.Reg* %1827, i32 0, i32 0
  %PC.i1875 = bitcast %union.anon* %1828 to i64*
  %1829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1830 = getelementptr inbounds %struct.GPR, %struct.GPR* %1829, i32 0, i32 1
  %1831 = getelementptr inbounds %struct.Reg, %struct.Reg* %1830, i32 0, i32 0
  %RAX.i1876 = bitcast %union.anon* %1831 to i64*
  %1832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1833 = getelementptr inbounds %struct.GPR, %struct.GPR* %1832, i32 0, i32 15
  %1834 = getelementptr inbounds %struct.Reg, %struct.Reg* %1833, i32 0, i32 0
  %RBP.i1877 = bitcast %union.anon* %1834 to i64*
  %1835 = load i64, i64* %RBP.i1877
  %1836 = sub i64 %1835, 1168
  %1837 = load i64, i64* %PC.i1875
  %1838 = add i64 %1837, 7
  store i64 %1838, i64* %PC.i1875
  store i64 %1836, i64* %RAX.i1876, align 8
  store %struct.Memory* %loadMem_400b3a, %struct.Memory** %MEMORY
  %loadMem_400b41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1840 = getelementptr inbounds %struct.GPR, %struct.GPR* %1839, i32 0, i32 33
  %1841 = getelementptr inbounds %struct.Reg, %struct.Reg* %1840, i32 0, i32 0
  %PC.i1872 = bitcast %union.anon* %1841 to i64*
  %1842 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1843 = getelementptr inbounds %struct.GPR, %struct.GPR* %1842, i32 0, i32 5
  %1844 = getelementptr inbounds %struct.Reg, %struct.Reg* %1843, i32 0, i32 0
  %RCX.i1873 = bitcast %union.anon* %1844 to i64*
  %1845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1846 = getelementptr inbounds %struct.GPR, %struct.GPR* %1845, i32 0, i32 15
  %1847 = getelementptr inbounds %struct.Reg, %struct.Reg* %1846, i32 0, i32 0
  %RBP.i1874 = bitcast %union.anon* %1847 to i64*
  %1848 = load i64, i64* %RBP.i1874
  %1849 = sub i64 %1848, 12
  %1850 = load i64, i64* %PC.i1872
  %1851 = add i64 %1850, 4
  store i64 %1851, i64* %PC.i1872
  %1852 = inttoptr i64 %1849 to i32*
  %1853 = load i32, i32* %1852
  %1854 = sext i32 %1853 to i64
  store i64 %1854, i64* %RCX.i1873, align 8
  store %struct.Memory* %loadMem_400b41, %struct.Memory** %MEMORY
  %loadMem_400b45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1856 = getelementptr inbounds %struct.GPR, %struct.GPR* %1855, i32 0, i32 33
  %1857 = getelementptr inbounds %struct.Reg, %struct.Reg* %1856, i32 0, i32 0
  %PC.i1870 = bitcast %union.anon* %1857 to i64*
  %1858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1859 = getelementptr inbounds %struct.GPR, %struct.GPR* %1858, i32 0, i32 5
  %1860 = getelementptr inbounds %struct.Reg, %struct.Reg* %1859, i32 0, i32 0
  %RCX.i1871 = bitcast %union.anon* %1860 to i64*
  %1861 = load i64, i64* %RCX.i1871
  %1862 = load i64, i64* %PC.i1870
  %1863 = add i64 %1862, 4
  store i64 %1863, i64* %PC.i1870
  %1864 = shl i64 %1861, 5
  %1865 = icmp slt i64 %1864, 0
  %1866 = shl i64 %1864, 1
  store i64 %1866, i64* %RCX.i1871, align 8
  %1867 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %1868 = zext i1 %1865 to i8
  store i8 %1868, i8* %1867, align 1
  %1869 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %1870 = trunc i64 %1866 to i32
  %1871 = and i32 %1870, 254
  %1872 = call i32 @llvm.ctpop.i32(i32 %1871)
  %1873 = trunc i32 %1872 to i8
  %1874 = and i8 %1873, 1
  %1875 = xor i8 %1874, 1
  store i8 %1875, i8* %1869, align 1
  %1876 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1876, align 1
  %1877 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1878 = icmp eq i64 %1866, 0
  %1879 = zext i1 %1878 to i8
  store i8 %1879, i8* %1877, align 1
  %1880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1881 = lshr i64 %1866, 63
  %1882 = trunc i64 %1881 to i8
  store i8 %1882, i8* %1880, align 1
  %1883 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1883, align 1
  store %struct.Memory* %loadMem_400b45, %struct.Memory** %MEMORY
  %loadMem_400b49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1885 = getelementptr inbounds %struct.GPR, %struct.GPR* %1884, i32 0, i32 33
  %1886 = getelementptr inbounds %struct.Reg, %struct.Reg* %1885, i32 0, i32 0
  %PC.i1867 = bitcast %union.anon* %1886 to i64*
  %1887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1888 = getelementptr inbounds %struct.GPR, %struct.GPR* %1887, i32 0, i32 1
  %1889 = getelementptr inbounds %struct.Reg, %struct.Reg* %1888, i32 0, i32 0
  %RAX.i1868 = bitcast %union.anon* %1889 to i64*
  %1890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1891 = getelementptr inbounds %struct.GPR, %struct.GPR* %1890, i32 0, i32 7
  %1892 = getelementptr inbounds %struct.Reg, %struct.Reg* %1891, i32 0, i32 0
  %RDX.i1869 = bitcast %union.anon* %1892 to i64*
  %1893 = load i64, i64* %RAX.i1868
  %1894 = load i64, i64* %PC.i1867
  %1895 = add i64 %1894, 3
  store i64 %1895, i64* %PC.i1867
  store i64 %1893, i64* %RDX.i1869, align 8
  store %struct.Memory* %loadMem_400b49, %struct.Memory** %MEMORY
  %loadMem_400b4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1897 = getelementptr inbounds %struct.GPR, %struct.GPR* %1896, i32 0, i32 33
  %1898 = getelementptr inbounds %struct.Reg, %struct.Reg* %1897, i32 0, i32 0
  %PC.i1864 = bitcast %union.anon* %1898 to i64*
  %1899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1900 = getelementptr inbounds %struct.GPR, %struct.GPR* %1899, i32 0, i32 5
  %1901 = getelementptr inbounds %struct.Reg, %struct.Reg* %1900, i32 0, i32 0
  %RCX.i1865 = bitcast %union.anon* %1901 to i64*
  %1902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1903 = getelementptr inbounds %struct.GPR, %struct.GPR* %1902, i32 0, i32 7
  %1904 = getelementptr inbounds %struct.Reg, %struct.Reg* %1903, i32 0, i32 0
  %RDX.i1866 = bitcast %union.anon* %1904 to i64*
  %1905 = load i64, i64* %RDX.i1866
  %1906 = load i64, i64* %RCX.i1865
  %1907 = load i64, i64* %PC.i1864
  %1908 = add i64 %1907, 3
  store i64 %1908, i64* %PC.i1864
  %1909 = add i64 %1906, %1905
  store i64 %1909, i64* %RDX.i1866, align 8
  %1910 = icmp ult i64 %1909, %1905
  %1911 = icmp ult i64 %1909, %1906
  %1912 = or i1 %1910, %1911
  %1913 = zext i1 %1912 to i8
  %1914 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1913, i8* %1914, align 1
  %1915 = trunc i64 %1909 to i32
  %1916 = and i32 %1915, 255
  %1917 = call i32 @llvm.ctpop.i32(i32 %1916)
  %1918 = trunc i32 %1917 to i8
  %1919 = and i8 %1918, 1
  %1920 = xor i8 %1919, 1
  %1921 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1920, i8* %1921, align 1
  %1922 = xor i64 %1906, %1905
  %1923 = xor i64 %1922, %1909
  %1924 = lshr i64 %1923, 4
  %1925 = trunc i64 %1924 to i8
  %1926 = and i8 %1925, 1
  %1927 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1926, i8* %1927, align 1
  %1928 = icmp eq i64 %1909, 0
  %1929 = zext i1 %1928 to i8
  %1930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1929, i8* %1930, align 1
  %1931 = lshr i64 %1909, 63
  %1932 = trunc i64 %1931 to i8
  %1933 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1932, i8* %1933, align 1
  %1934 = lshr i64 %1905, 63
  %1935 = lshr i64 %1906, 63
  %1936 = xor i64 %1931, %1934
  %1937 = xor i64 %1931, %1935
  %1938 = add i64 %1936, %1937
  %1939 = icmp eq i64 %1938, 2
  %1940 = zext i1 %1939 to i8
  %1941 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1940, i8* %1941, align 1
  store %struct.Memory* %loadMem_400b4c, %struct.Memory** %MEMORY
  %loadMem_400b4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1943 = getelementptr inbounds %struct.GPR, %struct.GPR* %1942, i32 0, i32 33
  %1944 = getelementptr inbounds %struct.Reg, %struct.Reg* %1943, i32 0, i32 0
  %PC.i1861 = bitcast %union.anon* %1944 to i64*
  %1945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1946 = getelementptr inbounds %struct.GPR, %struct.GPR* %1945, i32 0, i32 5
  %1947 = getelementptr inbounds %struct.Reg, %struct.Reg* %1946, i32 0, i32 0
  %RCX.i1862 = bitcast %union.anon* %1947 to i64*
  %1948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1949 = getelementptr inbounds %struct.GPR, %struct.GPR* %1948, i32 0, i32 15
  %1950 = getelementptr inbounds %struct.Reg, %struct.Reg* %1949, i32 0, i32 0
  %RBP.i1863 = bitcast %union.anon* %1950 to i64*
  %1951 = load i64, i64* %RBP.i1863
  %1952 = sub i64 %1951, 4
  %1953 = load i64, i64* %PC.i1861
  %1954 = add i64 %1953, 4
  store i64 %1954, i64* %PC.i1861
  %1955 = inttoptr i64 %1952 to i32*
  %1956 = load i32, i32* %1955
  %1957 = sext i32 %1956 to i64
  store i64 %1957, i64* %RCX.i1862, align 8
  store %struct.Memory* %loadMem_400b4f, %struct.Memory** %MEMORY
  %loadMem_400b53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1959 = getelementptr inbounds %struct.GPR, %struct.GPR* %1958, i32 0, i32 33
  %1960 = getelementptr inbounds %struct.Reg, %struct.Reg* %1959, i32 0, i32 0
  %PC.i1857 = bitcast %union.anon* %1960 to i64*
  %1961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1962 = getelementptr inbounds %struct.GPR, %struct.GPR* %1961, i32 0, i32 5
  %1963 = getelementptr inbounds %struct.Reg, %struct.Reg* %1962, i32 0, i32 0
  %RCX.i1858 = bitcast %union.anon* %1963 to i64*
  %1964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1965 = getelementptr inbounds %struct.GPR, %struct.GPR* %1964, i32 0, i32 7
  %1966 = getelementptr inbounds %struct.Reg, %struct.Reg* %1965, i32 0, i32 0
  %RDX.i1859 = bitcast %union.anon* %1966 to i64*
  %1967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1968 = getelementptr inbounds %struct.GPR, %struct.GPR* %1967, i32 0, i32 9
  %1969 = getelementptr inbounds %struct.Reg, %struct.Reg* %1968, i32 0, i32 0
  %RSI.i1860 = bitcast %union.anon* %1969 to i64*
  %1970 = load i64, i64* %RDX.i1859
  %1971 = load i64, i64* %RCX.i1858
  %1972 = mul i64 %1971, 4
  %1973 = add i64 %1972, %1970
  %1974 = load i64, i64* %PC.i1857
  %1975 = add i64 %1974, 3
  store i64 %1975, i64* %PC.i1857
  %1976 = inttoptr i64 %1973 to i32*
  %1977 = load i32, i32* %1976
  %1978 = zext i32 %1977 to i64
  store i64 %1978, i64* %RSI.i1860, align 8
  store %struct.Memory* %loadMem_400b53, %struct.Memory** %MEMORY
  %loadMem_400b56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1980 = getelementptr inbounds %struct.GPR, %struct.GPR* %1979, i32 0, i32 33
  %1981 = getelementptr inbounds %struct.Reg, %struct.Reg* %1980, i32 0, i32 0
  %PC.i1854 = bitcast %union.anon* %1981 to i64*
  %1982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1983 = getelementptr inbounds %struct.GPR, %struct.GPR* %1982, i32 0, i32 11
  %1984 = getelementptr inbounds %struct.Reg, %struct.Reg* %1983, i32 0, i32 0
  %RDI.i1855 = bitcast %union.anon* %1984 to i64*
  %1985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1986 = getelementptr inbounds %struct.GPR, %struct.GPR* %1985, i32 0, i32 15
  %1987 = getelementptr inbounds %struct.Reg, %struct.Reg* %1986, i32 0, i32 0
  %RBP.i1856 = bitcast %union.anon* %1987 to i64*
  %1988 = load i64, i64* %RBP.i1856
  %1989 = sub i64 %1988, 12
  %1990 = load i64, i64* %PC.i1854
  %1991 = add i64 %1990, 3
  store i64 %1991, i64* %PC.i1854
  %1992 = inttoptr i64 %1989 to i32*
  %1993 = load i32, i32* %1992
  %1994 = zext i32 %1993 to i64
  store i64 %1994, i64* %RDI.i1855, align 8
  store %struct.Memory* %loadMem_400b56, %struct.Memory** %MEMORY
  %loadMem_400b59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1996 = getelementptr inbounds %struct.GPR, %struct.GPR* %1995, i32 0, i32 33
  %1997 = getelementptr inbounds %struct.Reg, %struct.Reg* %1996, i32 0, i32 0
  %PC.i1852 = bitcast %union.anon* %1997 to i64*
  %1998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1999 = getelementptr inbounds %struct.GPR, %struct.GPR* %1998, i32 0, i32 11
  %2000 = getelementptr inbounds %struct.Reg, %struct.Reg* %1999, i32 0, i32 0
  %RDI.i1853 = bitcast %union.anon* %2000 to i64*
  %2001 = load i64, i64* %RDI.i1853
  %2002 = load i64, i64* %PC.i1852
  %2003 = add i64 %2002, 3
  store i64 %2003, i64* %PC.i1852
  %2004 = trunc i64 %2001 to i32
  %2005 = add i32 1, %2004
  %2006 = zext i32 %2005 to i64
  store i64 %2006, i64* %RDI.i1853, align 8
  %2007 = icmp ult i32 %2005, %2004
  %2008 = icmp ult i32 %2005, 1
  %2009 = or i1 %2007, %2008
  %2010 = zext i1 %2009 to i8
  %2011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2010, i8* %2011, align 1
  %2012 = and i32 %2005, 255
  %2013 = call i32 @llvm.ctpop.i32(i32 %2012)
  %2014 = trunc i32 %2013 to i8
  %2015 = and i8 %2014, 1
  %2016 = xor i8 %2015, 1
  %2017 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2016, i8* %2017, align 1
  %2018 = xor i64 1, %2001
  %2019 = trunc i64 %2018 to i32
  %2020 = xor i32 %2019, %2005
  %2021 = lshr i32 %2020, 4
  %2022 = trunc i32 %2021 to i8
  %2023 = and i8 %2022, 1
  %2024 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2023, i8* %2024, align 1
  %2025 = icmp eq i32 %2005, 0
  %2026 = zext i1 %2025 to i8
  %2027 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2026, i8* %2027, align 1
  %2028 = lshr i32 %2005, 31
  %2029 = trunc i32 %2028 to i8
  %2030 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2029, i8* %2030, align 1
  %2031 = lshr i32 %2004, 31
  %2032 = xor i32 %2028, %2031
  %2033 = add i32 %2032, %2028
  %2034 = icmp eq i32 %2033, 2
  %2035 = zext i1 %2034 to i8
  %2036 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2035, i8* %2036, align 1
  store %struct.Memory* %loadMem_400b59, %struct.Memory** %MEMORY
  %loadMem_400b5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2038 = getelementptr inbounds %struct.GPR, %struct.GPR* %2037, i32 0, i32 33
  %2039 = getelementptr inbounds %struct.Reg, %struct.Reg* %2038, i32 0, i32 0
  %PC.i1849 = bitcast %union.anon* %2039 to i64*
  %2040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2041 = getelementptr inbounds %struct.GPR, %struct.GPR* %2040, i32 0, i32 11
  %2042 = getelementptr inbounds %struct.Reg, %struct.Reg* %2041, i32 0, i32 0
  %EDI.i1850 = bitcast %union.anon* %2042 to i32*
  %2043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2044 = getelementptr inbounds %struct.GPR, %struct.GPR* %2043, i32 0, i32 5
  %2045 = getelementptr inbounds %struct.Reg, %struct.Reg* %2044, i32 0, i32 0
  %RCX.i1851 = bitcast %union.anon* %2045 to i64*
  %2046 = load i32, i32* %EDI.i1850
  %2047 = zext i32 %2046 to i64
  %2048 = load i64, i64* %PC.i1849
  %2049 = add i64 %2048, 3
  store i64 %2049, i64* %PC.i1849
  %2050 = shl i64 %2047, 32
  %2051 = ashr exact i64 %2050, 32
  store i64 %2051, i64* %RCX.i1851, align 8
  store %struct.Memory* %loadMem_400b5c, %struct.Memory** %MEMORY
  %loadMem_400b5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2053 = getelementptr inbounds %struct.GPR, %struct.GPR* %2052, i32 0, i32 33
  %2054 = getelementptr inbounds %struct.Reg, %struct.Reg* %2053, i32 0, i32 0
  %PC.i1847 = bitcast %union.anon* %2054 to i64*
  %2055 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2056 = getelementptr inbounds %struct.GPR, %struct.GPR* %2055, i32 0, i32 5
  %2057 = getelementptr inbounds %struct.Reg, %struct.Reg* %2056, i32 0, i32 0
  %RCX.i1848 = bitcast %union.anon* %2057 to i64*
  %2058 = load i64, i64* %RCX.i1848
  %2059 = load i64, i64* %PC.i1847
  %2060 = add i64 %2059, 4
  store i64 %2060, i64* %PC.i1847
  %2061 = shl i64 %2058, 5
  %2062 = icmp slt i64 %2061, 0
  %2063 = shl i64 %2061, 1
  store i64 %2063, i64* %RCX.i1848, align 8
  %2064 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %2065 = zext i1 %2062 to i8
  store i8 %2065, i8* %2064, align 1
  %2066 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %2067 = trunc i64 %2063 to i32
  %2068 = and i32 %2067, 254
  %2069 = call i32 @llvm.ctpop.i32(i32 %2068)
  %2070 = trunc i32 %2069 to i8
  %2071 = and i8 %2070, 1
  %2072 = xor i8 %2071, 1
  store i8 %2072, i8* %2066, align 1
  %2073 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2073, align 1
  %2074 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2075 = icmp eq i64 %2063, 0
  %2076 = zext i1 %2075 to i8
  store i8 %2076, i8* %2074, align 1
  %2077 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2078 = lshr i64 %2063, 63
  %2079 = trunc i64 %2078 to i8
  store i8 %2079, i8* %2077, align 1
  %2080 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2080, align 1
  store %struct.Memory* %loadMem_400b5f, %struct.Memory** %MEMORY
  %loadMem_400b63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2082 = getelementptr inbounds %struct.GPR, %struct.GPR* %2081, i32 0, i32 33
  %2083 = getelementptr inbounds %struct.Reg, %struct.Reg* %2082, i32 0, i32 0
  %PC.i1844 = bitcast %union.anon* %2083 to i64*
  %2084 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2085 = getelementptr inbounds %struct.GPR, %struct.GPR* %2084, i32 0, i32 1
  %2086 = getelementptr inbounds %struct.Reg, %struct.Reg* %2085, i32 0, i32 0
  %RAX.i1845 = bitcast %union.anon* %2086 to i64*
  %2087 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2088 = getelementptr inbounds %struct.GPR, %struct.GPR* %2087, i32 0, i32 7
  %2089 = getelementptr inbounds %struct.Reg, %struct.Reg* %2088, i32 0, i32 0
  %RDX.i1846 = bitcast %union.anon* %2089 to i64*
  %2090 = load i64, i64* %RAX.i1845
  %2091 = load i64, i64* %PC.i1844
  %2092 = add i64 %2091, 3
  store i64 %2092, i64* %PC.i1844
  store i64 %2090, i64* %RDX.i1846, align 8
  store %struct.Memory* %loadMem_400b63, %struct.Memory** %MEMORY
  %loadMem_400b66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2094 = getelementptr inbounds %struct.GPR, %struct.GPR* %2093, i32 0, i32 33
  %2095 = getelementptr inbounds %struct.Reg, %struct.Reg* %2094, i32 0, i32 0
  %PC.i1841 = bitcast %union.anon* %2095 to i64*
  %2096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2097 = getelementptr inbounds %struct.GPR, %struct.GPR* %2096, i32 0, i32 5
  %2098 = getelementptr inbounds %struct.Reg, %struct.Reg* %2097, i32 0, i32 0
  %RCX.i1842 = bitcast %union.anon* %2098 to i64*
  %2099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2100 = getelementptr inbounds %struct.GPR, %struct.GPR* %2099, i32 0, i32 7
  %2101 = getelementptr inbounds %struct.Reg, %struct.Reg* %2100, i32 0, i32 0
  %RDX.i1843 = bitcast %union.anon* %2101 to i64*
  %2102 = load i64, i64* %RDX.i1843
  %2103 = load i64, i64* %RCX.i1842
  %2104 = load i64, i64* %PC.i1841
  %2105 = add i64 %2104, 3
  store i64 %2105, i64* %PC.i1841
  %2106 = add i64 %2103, %2102
  store i64 %2106, i64* %RDX.i1843, align 8
  %2107 = icmp ult i64 %2106, %2102
  %2108 = icmp ult i64 %2106, %2103
  %2109 = or i1 %2107, %2108
  %2110 = zext i1 %2109 to i8
  %2111 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2110, i8* %2111, align 1
  %2112 = trunc i64 %2106 to i32
  %2113 = and i32 %2112, 255
  %2114 = call i32 @llvm.ctpop.i32(i32 %2113)
  %2115 = trunc i32 %2114 to i8
  %2116 = and i8 %2115, 1
  %2117 = xor i8 %2116, 1
  %2118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2117, i8* %2118, align 1
  %2119 = xor i64 %2103, %2102
  %2120 = xor i64 %2119, %2106
  %2121 = lshr i64 %2120, 4
  %2122 = trunc i64 %2121 to i8
  %2123 = and i8 %2122, 1
  %2124 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2123, i8* %2124, align 1
  %2125 = icmp eq i64 %2106, 0
  %2126 = zext i1 %2125 to i8
  %2127 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2126, i8* %2127, align 1
  %2128 = lshr i64 %2106, 63
  %2129 = trunc i64 %2128 to i8
  %2130 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2129, i8* %2130, align 1
  %2131 = lshr i64 %2102, 63
  %2132 = lshr i64 %2103, 63
  %2133 = xor i64 %2128, %2131
  %2134 = xor i64 %2128, %2132
  %2135 = add i64 %2133, %2134
  %2136 = icmp eq i64 %2135, 2
  %2137 = zext i1 %2136 to i8
  %2138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2137, i8* %2138, align 1
  store %struct.Memory* %loadMem_400b66, %struct.Memory** %MEMORY
  %loadMem_400b69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2139 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2140 = getelementptr inbounds %struct.GPR, %struct.GPR* %2139, i32 0, i32 33
  %2141 = getelementptr inbounds %struct.Reg, %struct.Reg* %2140, i32 0, i32 0
  %PC.i1838 = bitcast %union.anon* %2141 to i64*
  %2142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2143 = getelementptr inbounds %struct.GPR, %struct.GPR* %2142, i32 0, i32 5
  %2144 = getelementptr inbounds %struct.Reg, %struct.Reg* %2143, i32 0, i32 0
  %RCX.i1839 = bitcast %union.anon* %2144 to i64*
  %2145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2146 = getelementptr inbounds %struct.GPR, %struct.GPR* %2145, i32 0, i32 15
  %2147 = getelementptr inbounds %struct.Reg, %struct.Reg* %2146, i32 0, i32 0
  %RBP.i1840 = bitcast %union.anon* %2147 to i64*
  %2148 = load i64, i64* %RBP.i1840
  %2149 = sub i64 %2148, 4
  %2150 = load i64, i64* %PC.i1838
  %2151 = add i64 %2150, 4
  store i64 %2151, i64* %PC.i1838
  %2152 = inttoptr i64 %2149 to i32*
  %2153 = load i32, i32* %2152
  %2154 = sext i32 %2153 to i64
  store i64 %2154, i64* %RCX.i1839, align 8
  store %struct.Memory* %loadMem_400b69, %struct.Memory** %MEMORY
  %loadMem_400b6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2156 = getelementptr inbounds %struct.GPR, %struct.GPR* %2155, i32 0, i32 33
  %2157 = getelementptr inbounds %struct.Reg, %struct.Reg* %2156, i32 0, i32 0
  %PC.i1834 = bitcast %union.anon* %2157 to i64*
  %2158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2159 = getelementptr inbounds %struct.GPR, %struct.GPR* %2158, i32 0, i32 9
  %2160 = getelementptr inbounds %struct.Reg, %struct.Reg* %2159, i32 0, i32 0
  %ESI.i1835 = bitcast %union.anon* %2160 to i32*
  %2161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2162 = getelementptr inbounds %struct.GPR, %struct.GPR* %2161, i32 0, i32 5
  %2163 = getelementptr inbounds %struct.Reg, %struct.Reg* %2162, i32 0, i32 0
  %RCX.i1836 = bitcast %union.anon* %2163 to i64*
  %2164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2165 = getelementptr inbounds %struct.GPR, %struct.GPR* %2164, i32 0, i32 7
  %2166 = getelementptr inbounds %struct.Reg, %struct.Reg* %2165, i32 0, i32 0
  %RDX.i1837 = bitcast %union.anon* %2166 to i64*
  %2167 = load i64, i64* %RDX.i1837
  %2168 = load i64, i64* %RCX.i1836
  %2169 = mul i64 %2168, 4
  %2170 = add i64 %2169, %2167
  %2171 = load i32, i32* %ESI.i1835
  %2172 = zext i32 %2171 to i64
  %2173 = load i64, i64* %PC.i1834
  %2174 = add i64 %2173, 3
  store i64 %2174, i64* %PC.i1834
  %2175 = inttoptr i64 %2170 to i32*
  store i32 %2171, i32* %2175
  store %struct.Memory* %loadMem_400b6d, %struct.Memory** %MEMORY
  %loadMem_400b70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2177 = getelementptr inbounds %struct.GPR, %struct.GPR* %2176, i32 0, i32 33
  %2178 = getelementptr inbounds %struct.Reg, %struct.Reg* %2177, i32 0, i32 0
  %PC.i1831 = bitcast %union.anon* %2178 to i64*
  %2179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2180 = getelementptr inbounds %struct.GPR, %struct.GPR* %2179, i32 0, i32 5
  %2181 = getelementptr inbounds %struct.Reg, %struct.Reg* %2180, i32 0, i32 0
  %RCX.i1832 = bitcast %union.anon* %2181 to i64*
  %2182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2183 = getelementptr inbounds %struct.GPR, %struct.GPR* %2182, i32 0, i32 15
  %2184 = getelementptr inbounds %struct.Reg, %struct.Reg* %2183, i32 0, i32 0
  %RBP.i1833 = bitcast %union.anon* %2184 to i64*
  %2185 = load i64, i64* %RBP.i1833
  %2186 = sub i64 %2185, 12
  %2187 = load i64, i64* %PC.i1831
  %2188 = add i64 %2187, 4
  store i64 %2188, i64* %PC.i1831
  %2189 = inttoptr i64 %2186 to i32*
  %2190 = load i32, i32* %2189
  %2191 = sext i32 %2190 to i64
  store i64 %2191, i64* %RCX.i1832, align 8
  store %struct.Memory* %loadMem_400b70, %struct.Memory** %MEMORY
  %loadMem_400b74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2193 = getelementptr inbounds %struct.GPR, %struct.GPR* %2192, i32 0, i32 33
  %2194 = getelementptr inbounds %struct.Reg, %struct.Reg* %2193, i32 0, i32 0
  %PC.i1829 = bitcast %union.anon* %2194 to i64*
  %2195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2196 = getelementptr inbounds %struct.GPR, %struct.GPR* %2195, i32 0, i32 5
  %2197 = getelementptr inbounds %struct.Reg, %struct.Reg* %2196, i32 0, i32 0
  %RCX.i1830 = bitcast %union.anon* %2197 to i64*
  %2198 = load i64, i64* %RCX.i1830
  %2199 = load i64, i64* %PC.i1829
  %2200 = add i64 %2199, 4
  store i64 %2200, i64* %PC.i1829
  %2201 = shl i64 %2198, 5
  %2202 = icmp slt i64 %2201, 0
  %2203 = shl i64 %2201, 1
  store i64 %2203, i64* %RCX.i1830, align 8
  %2204 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %2205 = zext i1 %2202 to i8
  store i8 %2205, i8* %2204, align 1
  %2206 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %2207 = trunc i64 %2203 to i32
  %2208 = and i32 %2207, 254
  %2209 = call i32 @llvm.ctpop.i32(i32 %2208)
  %2210 = trunc i32 %2209 to i8
  %2211 = and i8 %2210, 1
  %2212 = xor i8 %2211, 1
  store i8 %2212, i8* %2206, align 1
  %2213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2213, align 1
  %2214 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2215 = icmp eq i64 %2203, 0
  %2216 = zext i1 %2215 to i8
  store i8 %2216, i8* %2214, align 1
  %2217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2218 = lshr i64 %2203, 63
  %2219 = trunc i64 %2218 to i8
  store i8 %2219, i8* %2217, align 1
  %2220 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2220, align 1
  store %struct.Memory* %loadMem_400b74, %struct.Memory** %MEMORY
  %loadMem_400b78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2222 = getelementptr inbounds %struct.GPR, %struct.GPR* %2221, i32 0, i32 33
  %2223 = getelementptr inbounds %struct.Reg, %struct.Reg* %2222, i32 0, i32 0
  %PC.i1826 = bitcast %union.anon* %2223 to i64*
  %2224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2225 = getelementptr inbounds %struct.GPR, %struct.GPR* %2224, i32 0, i32 1
  %2226 = getelementptr inbounds %struct.Reg, %struct.Reg* %2225, i32 0, i32 0
  %RAX.i1827 = bitcast %union.anon* %2226 to i64*
  %2227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2228 = getelementptr inbounds %struct.GPR, %struct.GPR* %2227, i32 0, i32 7
  %2229 = getelementptr inbounds %struct.Reg, %struct.Reg* %2228, i32 0, i32 0
  %RDX.i1828 = bitcast %union.anon* %2229 to i64*
  %2230 = load i64, i64* %RAX.i1827
  %2231 = load i64, i64* %PC.i1826
  %2232 = add i64 %2231, 3
  store i64 %2232, i64* %PC.i1826
  store i64 %2230, i64* %RDX.i1828, align 8
  store %struct.Memory* %loadMem_400b78, %struct.Memory** %MEMORY
  %loadMem_400b7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2234 = getelementptr inbounds %struct.GPR, %struct.GPR* %2233, i32 0, i32 33
  %2235 = getelementptr inbounds %struct.Reg, %struct.Reg* %2234, i32 0, i32 0
  %PC.i1823 = bitcast %union.anon* %2235 to i64*
  %2236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2237 = getelementptr inbounds %struct.GPR, %struct.GPR* %2236, i32 0, i32 5
  %2238 = getelementptr inbounds %struct.Reg, %struct.Reg* %2237, i32 0, i32 0
  %RCX.i1824 = bitcast %union.anon* %2238 to i64*
  %2239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2240 = getelementptr inbounds %struct.GPR, %struct.GPR* %2239, i32 0, i32 7
  %2241 = getelementptr inbounds %struct.Reg, %struct.Reg* %2240, i32 0, i32 0
  %RDX.i1825 = bitcast %union.anon* %2241 to i64*
  %2242 = load i64, i64* %RDX.i1825
  %2243 = load i64, i64* %RCX.i1824
  %2244 = load i64, i64* %PC.i1823
  %2245 = add i64 %2244, 3
  store i64 %2245, i64* %PC.i1823
  %2246 = add i64 %2243, %2242
  store i64 %2246, i64* %RDX.i1825, align 8
  %2247 = icmp ult i64 %2246, %2242
  %2248 = icmp ult i64 %2246, %2243
  %2249 = or i1 %2247, %2248
  %2250 = zext i1 %2249 to i8
  %2251 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2250, i8* %2251, align 1
  %2252 = trunc i64 %2246 to i32
  %2253 = and i32 %2252, 255
  %2254 = call i32 @llvm.ctpop.i32(i32 %2253)
  %2255 = trunc i32 %2254 to i8
  %2256 = and i8 %2255, 1
  %2257 = xor i8 %2256, 1
  %2258 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2257, i8* %2258, align 1
  %2259 = xor i64 %2243, %2242
  %2260 = xor i64 %2259, %2246
  %2261 = lshr i64 %2260, 4
  %2262 = trunc i64 %2261 to i8
  %2263 = and i8 %2262, 1
  %2264 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2263, i8* %2264, align 1
  %2265 = icmp eq i64 %2246, 0
  %2266 = zext i1 %2265 to i8
  %2267 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2266, i8* %2267, align 1
  %2268 = lshr i64 %2246, 63
  %2269 = trunc i64 %2268 to i8
  %2270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2269, i8* %2270, align 1
  %2271 = lshr i64 %2242, 63
  %2272 = lshr i64 %2243, 63
  %2273 = xor i64 %2268, %2271
  %2274 = xor i64 %2268, %2272
  %2275 = add i64 %2273, %2274
  %2276 = icmp eq i64 %2275, 2
  %2277 = zext i1 %2276 to i8
  %2278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2277, i8* %2278, align 1
  store %struct.Memory* %loadMem_400b7b, %struct.Memory** %MEMORY
  %loadMem_400b7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2280 = getelementptr inbounds %struct.GPR, %struct.GPR* %2279, i32 0, i32 33
  %2281 = getelementptr inbounds %struct.Reg, %struct.Reg* %2280, i32 0, i32 0
  %PC.i1820 = bitcast %union.anon* %2281 to i64*
  %2282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2283 = getelementptr inbounds %struct.GPR, %struct.GPR* %2282, i32 0, i32 5
  %2284 = getelementptr inbounds %struct.Reg, %struct.Reg* %2283, i32 0, i32 0
  %RCX.i1821 = bitcast %union.anon* %2284 to i64*
  %2285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2286 = getelementptr inbounds %struct.GPR, %struct.GPR* %2285, i32 0, i32 15
  %2287 = getelementptr inbounds %struct.Reg, %struct.Reg* %2286, i32 0, i32 0
  %RBP.i1822 = bitcast %union.anon* %2287 to i64*
  %2288 = load i64, i64* %RBP.i1822
  %2289 = sub i64 %2288, 4
  %2290 = load i64, i64* %PC.i1820
  %2291 = add i64 %2290, 4
  store i64 %2291, i64* %PC.i1820
  %2292 = inttoptr i64 %2289 to i32*
  %2293 = load i32, i32* %2292
  %2294 = sext i32 %2293 to i64
  store i64 %2294, i64* %RCX.i1821, align 8
  store %struct.Memory* %loadMem_400b7e, %struct.Memory** %MEMORY
  %loadMem_400b82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2296 = getelementptr inbounds %struct.GPR, %struct.GPR* %2295, i32 0, i32 33
  %2297 = getelementptr inbounds %struct.Reg, %struct.Reg* %2296, i32 0, i32 0
  %PC.i1817 = bitcast %union.anon* %2297 to i64*
  %2298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2299 = getelementptr inbounds %struct.GPR, %struct.GPR* %2298, i32 0, i32 5
  %2300 = getelementptr inbounds %struct.Reg, %struct.Reg* %2299, i32 0, i32 0
  %RCX.i1818 = bitcast %union.anon* %2300 to i64*
  %2301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2302 = getelementptr inbounds %struct.GPR, %struct.GPR* %2301, i32 0, i32 7
  %2303 = getelementptr inbounds %struct.Reg, %struct.Reg* %2302, i32 0, i32 0
  %RDX.i1819 = bitcast %union.anon* %2303 to i64*
  %2304 = load i64, i64* %RDX.i1819
  %2305 = load i64, i64* %RCX.i1818
  %2306 = mul i64 %2305, 4
  %2307 = add i64 %2306, %2304
  %2308 = load i64, i64* %PC.i1817
  %2309 = add i64 %2308, 4
  store i64 %2309, i64* %PC.i1817
  %2310 = inttoptr i64 %2307 to i32*
  %2311 = load i32, i32* %2310
  %2312 = sext i32 %2311 to i64
  store i64 %2312, i64* %RCX.i1818, align 8
  store %struct.Memory* %loadMem_400b82, %struct.Memory** %MEMORY
  %loadMem_400b86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2314 = getelementptr inbounds %struct.GPR, %struct.GPR* %2313, i32 0, i32 33
  %2315 = getelementptr inbounds %struct.Reg, %struct.Reg* %2314, i32 0, i32 0
  %PC.i1814 = bitcast %union.anon* %2315 to i64*
  %2316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2317 = getelementptr inbounds %struct.GPR, %struct.GPR* %2316, i32 0, i32 5
  %2318 = getelementptr inbounds %struct.Reg, %struct.Reg* %2317, i32 0, i32 0
  %RCX.i1815 = bitcast %union.anon* %2318 to i64*
  %2319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2320 = getelementptr inbounds %struct.GPR, %struct.GPR* %2319, i32 0, i32 9
  %2321 = getelementptr inbounds %struct.Reg, %struct.Reg* %2320, i32 0, i32 0
  %RSI.i1816 = bitcast %union.anon* %2321 to i64*
  %2322 = load i64, i64* %RCX.i1815
  %2323 = mul i64 %2322, 4
  %2324 = add i64 %2323, 6304896
  %2325 = load i64, i64* %PC.i1814
  %2326 = add i64 %2325, 7
  store i64 %2326, i64* %PC.i1814
  %2327 = inttoptr i64 %2324 to i32*
  %2328 = load i32, i32* %2327
  %2329 = zext i32 %2328 to i64
  store i64 %2329, i64* %RSI.i1816, align 8
  store %struct.Memory* %loadMem_400b86, %struct.Memory** %MEMORY
  %loadMem_400b8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2331 = getelementptr inbounds %struct.GPR, %struct.GPR* %2330, i32 0, i32 33
  %2332 = getelementptr inbounds %struct.Reg, %struct.Reg* %2331, i32 0, i32 0
  %PC.i1811 = bitcast %union.anon* %2332 to i64*
  %2333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2334 = getelementptr inbounds %struct.GPR, %struct.GPR* %2333, i32 0, i32 5
  %2335 = getelementptr inbounds %struct.Reg, %struct.Reg* %2334, i32 0, i32 0
  %RCX.i1812 = bitcast %union.anon* %2335 to i64*
  %2336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2337 = getelementptr inbounds %struct.GPR, %struct.GPR* %2336, i32 0, i32 15
  %2338 = getelementptr inbounds %struct.Reg, %struct.Reg* %2337, i32 0, i32 0
  %RBP.i1813 = bitcast %union.anon* %2338 to i64*
  %2339 = load i64, i64* %RBP.i1813
  %2340 = sub i64 %2339, 12
  %2341 = load i64, i64* %PC.i1811
  %2342 = add i64 %2341, 4
  store i64 %2342, i64* %PC.i1811
  %2343 = inttoptr i64 %2340 to i32*
  %2344 = load i32, i32* %2343
  %2345 = sext i32 %2344 to i64
  store i64 %2345, i64* %RCX.i1812, align 8
  store %struct.Memory* %loadMem_400b8d, %struct.Memory** %MEMORY
  %loadMem_400b91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2347 = getelementptr inbounds %struct.GPR, %struct.GPR* %2346, i32 0, i32 33
  %2348 = getelementptr inbounds %struct.Reg, %struct.Reg* %2347, i32 0, i32 0
  %PC.i1809 = bitcast %union.anon* %2348 to i64*
  %2349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2350 = getelementptr inbounds %struct.GPR, %struct.GPR* %2349, i32 0, i32 5
  %2351 = getelementptr inbounds %struct.Reg, %struct.Reg* %2350, i32 0, i32 0
  %RCX.i1810 = bitcast %union.anon* %2351 to i64*
  %2352 = load i64, i64* %RCX.i1810
  %2353 = load i64, i64* %PC.i1809
  %2354 = add i64 %2353, 4
  store i64 %2354, i64* %PC.i1809
  %2355 = shl i64 %2352, 5
  %2356 = icmp slt i64 %2355, 0
  %2357 = shl i64 %2355, 1
  store i64 %2357, i64* %RCX.i1810, align 8
  %2358 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %2359 = zext i1 %2356 to i8
  store i8 %2359, i8* %2358, align 1
  %2360 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %2361 = trunc i64 %2357 to i32
  %2362 = and i32 %2361, 254
  %2363 = call i32 @llvm.ctpop.i32(i32 %2362)
  %2364 = trunc i32 %2363 to i8
  %2365 = and i8 %2364, 1
  %2366 = xor i8 %2365, 1
  store i8 %2366, i8* %2360, align 1
  %2367 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2367, align 1
  %2368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2369 = icmp eq i64 %2357, 0
  %2370 = zext i1 %2369 to i8
  store i8 %2370, i8* %2368, align 1
  %2371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2372 = lshr i64 %2357, 63
  %2373 = trunc i64 %2372 to i8
  store i8 %2373, i8* %2371, align 1
  %2374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2374, align 1
  store %struct.Memory* %loadMem_400b91, %struct.Memory** %MEMORY
  %loadMem_400b95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2376 = getelementptr inbounds %struct.GPR, %struct.GPR* %2375, i32 0, i32 33
  %2377 = getelementptr inbounds %struct.Reg, %struct.Reg* %2376, i32 0, i32 0
  %PC.i1806 = bitcast %union.anon* %2377 to i64*
  %2378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2379 = getelementptr inbounds %struct.GPR, %struct.GPR* %2378, i32 0, i32 1
  %2380 = getelementptr inbounds %struct.Reg, %struct.Reg* %2379, i32 0, i32 0
  %RAX.i1807 = bitcast %union.anon* %2380 to i64*
  %2381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2382 = getelementptr inbounds %struct.GPR, %struct.GPR* %2381, i32 0, i32 5
  %2383 = getelementptr inbounds %struct.Reg, %struct.Reg* %2382, i32 0, i32 0
  %RCX.i1808 = bitcast %union.anon* %2383 to i64*
  %2384 = load i64, i64* %RAX.i1807
  %2385 = load i64, i64* %RCX.i1808
  %2386 = load i64, i64* %PC.i1806
  %2387 = add i64 %2386, 3
  store i64 %2387, i64* %PC.i1806
  %2388 = add i64 %2385, %2384
  store i64 %2388, i64* %RAX.i1807, align 8
  %2389 = icmp ult i64 %2388, %2384
  %2390 = icmp ult i64 %2388, %2385
  %2391 = or i1 %2389, %2390
  %2392 = zext i1 %2391 to i8
  %2393 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2392, i8* %2393, align 1
  %2394 = trunc i64 %2388 to i32
  %2395 = and i32 %2394, 255
  %2396 = call i32 @llvm.ctpop.i32(i32 %2395)
  %2397 = trunc i32 %2396 to i8
  %2398 = and i8 %2397, 1
  %2399 = xor i8 %2398, 1
  %2400 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2399, i8* %2400, align 1
  %2401 = xor i64 %2385, %2384
  %2402 = xor i64 %2401, %2388
  %2403 = lshr i64 %2402, 4
  %2404 = trunc i64 %2403 to i8
  %2405 = and i8 %2404, 1
  %2406 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2405, i8* %2406, align 1
  %2407 = icmp eq i64 %2388, 0
  %2408 = zext i1 %2407 to i8
  %2409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2408, i8* %2409, align 1
  %2410 = lshr i64 %2388, 63
  %2411 = trunc i64 %2410 to i8
  %2412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2411, i8* %2412, align 1
  %2413 = lshr i64 %2384, 63
  %2414 = lshr i64 %2385, 63
  %2415 = xor i64 %2410, %2413
  %2416 = xor i64 %2410, %2414
  %2417 = add i64 %2415, %2416
  %2418 = icmp eq i64 %2417, 2
  %2419 = zext i1 %2418 to i8
  %2420 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2419, i8* %2420, align 1
  store %struct.Memory* %loadMem_400b95, %struct.Memory** %MEMORY
  %loadMem_400b98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2422 = getelementptr inbounds %struct.GPR, %struct.GPR* %2421, i32 0, i32 33
  %2423 = getelementptr inbounds %struct.Reg, %struct.Reg* %2422, i32 0, i32 0
  %PC.i1803 = bitcast %union.anon* %2423 to i64*
  %2424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2425 = getelementptr inbounds %struct.GPR, %struct.GPR* %2424, i32 0, i32 5
  %2426 = getelementptr inbounds %struct.Reg, %struct.Reg* %2425, i32 0, i32 0
  %RCX.i1804 = bitcast %union.anon* %2426 to i64*
  %2427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2428 = getelementptr inbounds %struct.GPR, %struct.GPR* %2427, i32 0, i32 15
  %2429 = getelementptr inbounds %struct.Reg, %struct.Reg* %2428, i32 0, i32 0
  %RBP.i1805 = bitcast %union.anon* %2429 to i64*
  %2430 = load i64, i64* %RBP.i1805
  %2431 = sub i64 %2430, 4
  %2432 = load i64, i64* %PC.i1803
  %2433 = add i64 %2432, 4
  store i64 %2433, i64* %PC.i1803
  %2434 = inttoptr i64 %2431 to i32*
  %2435 = load i32, i32* %2434
  %2436 = sext i32 %2435 to i64
  store i64 %2436, i64* %RCX.i1804, align 8
  store %struct.Memory* %loadMem_400b98, %struct.Memory** %MEMORY
  %loadMem_400b9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2438 = getelementptr inbounds %struct.GPR, %struct.GPR* %2437, i32 0, i32 33
  %2439 = getelementptr inbounds %struct.Reg, %struct.Reg* %2438, i32 0, i32 0
  %PC.i1799 = bitcast %union.anon* %2439 to i64*
  %2440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2441 = getelementptr inbounds %struct.GPR, %struct.GPR* %2440, i32 0, i32 9
  %2442 = getelementptr inbounds %struct.Reg, %struct.Reg* %2441, i32 0, i32 0
  %ESI.i1800 = bitcast %union.anon* %2442 to i32*
  %2443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2444 = getelementptr inbounds %struct.GPR, %struct.GPR* %2443, i32 0, i32 1
  %2445 = getelementptr inbounds %struct.Reg, %struct.Reg* %2444, i32 0, i32 0
  %RAX.i1801 = bitcast %union.anon* %2445 to i64*
  %2446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2447 = getelementptr inbounds %struct.GPR, %struct.GPR* %2446, i32 0, i32 5
  %2448 = getelementptr inbounds %struct.Reg, %struct.Reg* %2447, i32 0, i32 0
  %RCX.i1802 = bitcast %union.anon* %2448 to i64*
  %2449 = load i64, i64* %RAX.i1801
  %2450 = load i64, i64* %RCX.i1802
  %2451 = mul i64 %2450, 4
  %2452 = add i64 %2451, %2449
  %2453 = load i32, i32* %ESI.i1800
  %2454 = zext i32 %2453 to i64
  %2455 = load i64, i64* %PC.i1799
  %2456 = add i64 %2455, 3
  store i64 %2456, i64* %PC.i1799
  %2457 = inttoptr i64 %2452 to i32*
  store i32 %2453, i32* %2457
  store %struct.Memory* %loadMem_400b9c, %struct.Memory** %MEMORY
  %loadMem_400b9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2459 = getelementptr inbounds %struct.GPR, %struct.GPR* %2458, i32 0, i32 33
  %2460 = getelementptr inbounds %struct.Reg, %struct.Reg* %2459, i32 0, i32 0
  %PC.i1796 = bitcast %union.anon* %2460 to i64*
  %2461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2462 = getelementptr inbounds %struct.GPR, %struct.GPR* %2461, i32 0, i32 1
  %2463 = getelementptr inbounds %struct.Reg, %struct.Reg* %2462, i32 0, i32 0
  %RAX.i1797 = bitcast %union.anon* %2463 to i64*
  %2464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2465 = getelementptr inbounds %struct.GPR, %struct.GPR* %2464, i32 0, i32 15
  %2466 = getelementptr inbounds %struct.Reg, %struct.Reg* %2465, i32 0, i32 0
  %RBP.i1798 = bitcast %union.anon* %2466 to i64*
  %2467 = load i64, i64* %RBP.i1798
  %2468 = sub i64 %2467, 4
  %2469 = load i64, i64* %PC.i1796
  %2470 = add i64 %2469, 3
  store i64 %2470, i64* %PC.i1796
  %2471 = inttoptr i64 %2468 to i32*
  %2472 = load i32, i32* %2471
  %2473 = zext i32 %2472 to i64
  store i64 %2473, i64* %RAX.i1797, align 8
  store %struct.Memory* %loadMem_400b9f, %struct.Memory** %MEMORY
  %loadMem_400ba2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2475 = getelementptr inbounds %struct.GPR, %struct.GPR* %2474, i32 0, i32 33
  %2476 = getelementptr inbounds %struct.Reg, %struct.Reg* %2475, i32 0, i32 0
  %PC.i1794 = bitcast %union.anon* %2476 to i64*
  %2477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2478 = getelementptr inbounds %struct.GPR, %struct.GPR* %2477, i32 0, i32 1
  %2479 = getelementptr inbounds %struct.Reg, %struct.Reg* %2478, i32 0, i32 0
  %RAX.i1795 = bitcast %union.anon* %2479 to i64*
  %2480 = load i64, i64* %RAX.i1795
  %2481 = load i64, i64* %PC.i1794
  %2482 = add i64 %2481, 3
  store i64 %2482, i64* %PC.i1794
  %2483 = trunc i64 %2480 to i32
  %2484 = add i32 1, %2483
  %2485 = zext i32 %2484 to i64
  store i64 %2485, i64* %RAX.i1795, align 8
  %2486 = icmp ult i32 %2484, %2483
  %2487 = icmp ult i32 %2484, 1
  %2488 = or i1 %2486, %2487
  %2489 = zext i1 %2488 to i8
  %2490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2489, i8* %2490, align 1
  %2491 = and i32 %2484, 255
  %2492 = call i32 @llvm.ctpop.i32(i32 %2491)
  %2493 = trunc i32 %2492 to i8
  %2494 = and i8 %2493, 1
  %2495 = xor i8 %2494, 1
  %2496 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2495, i8* %2496, align 1
  %2497 = xor i64 1, %2480
  %2498 = trunc i64 %2497 to i32
  %2499 = xor i32 %2498, %2484
  %2500 = lshr i32 %2499, 4
  %2501 = trunc i32 %2500 to i8
  %2502 = and i8 %2501, 1
  %2503 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2502, i8* %2503, align 1
  %2504 = icmp eq i32 %2484, 0
  %2505 = zext i1 %2504 to i8
  %2506 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2505, i8* %2506, align 1
  %2507 = lshr i32 %2484, 31
  %2508 = trunc i32 %2507 to i8
  %2509 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2508, i8* %2509, align 1
  %2510 = lshr i32 %2483, 31
  %2511 = xor i32 %2507, %2510
  %2512 = add i32 %2511, %2507
  %2513 = icmp eq i32 %2512, 2
  %2514 = zext i1 %2513 to i8
  %2515 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2514, i8* %2515, align 1
  store %struct.Memory* %loadMem_400ba2, %struct.Memory** %MEMORY
  %loadMem_400ba5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2516 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2517 = getelementptr inbounds %struct.GPR, %struct.GPR* %2516, i32 0, i32 33
  %2518 = getelementptr inbounds %struct.Reg, %struct.Reg* %2517, i32 0, i32 0
  %PC.i1791 = bitcast %union.anon* %2518 to i64*
  %2519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2520 = getelementptr inbounds %struct.GPR, %struct.GPR* %2519, i32 0, i32 1
  %2521 = getelementptr inbounds %struct.Reg, %struct.Reg* %2520, i32 0, i32 0
  %EAX.i1792 = bitcast %union.anon* %2521 to i32*
  %2522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2523 = getelementptr inbounds %struct.GPR, %struct.GPR* %2522, i32 0, i32 15
  %2524 = getelementptr inbounds %struct.Reg, %struct.Reg* %2523, i32 0, i32 0
  %RBP.i1793 = bitcast %union.anon* %2524 to i64*
  %2525 = load i64, i64* %RBP.i1793
  %2526 = sub i64 %2525, 4
  %2527 = load i32, i32* %EAX.i1792
  %2528 = zext i32 %2527 to i64
  %2529 = load i64, i64* %PC.i1791
  %2530 = add i64 %2529, 3
  store i64 %2530, i64* %PC.i1791
  %2531 = inttoptr i64 %2526 to i32*
  store i32 %2527, i32* %2531
  store %struct.Memory* %loadMem_400ba5, %struct.Memory** %MEMORY
  %loadMem_400ba8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2533 = getelementptr inbounds %struct.GPR, %struct.GPR* %2532, i32 0, i32 33
  %2534 = getelementptr inbounds %struct.Reg, %struct.Reg* %2533, i32 0, i32 0
  %PC.i1790 = bitcast %union.anon* %2534 to i64*
  %2535 = load i64, i64* %PC.i1790
  %2536 = add i64 %2535, -130
  %2537 = load i64, i64* %PC.i1790
  %2538 = add i64 %2537, 5
  store i64 %2538, i64* %PC.i1790
  %2539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2536, i64* %2539, align 8
  store %struct.Memory* %loadMem_400ba8, %struct.Memory** %MEMORY
  br label %block_.L_400b26

block_.L_400bad:                                  ; preds = %block_.L_400b26
  %loadMem_400bad = load %struct.Memory*, %struct.Memory** %MEMORY
  %2540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2541 = getelementptr inbounds %struct.GPR, %struct.GPR* %2540, i32 0, i32 33
  %2542 = getelementptr inbounds %struct.Reg, %struct.Reg* %2541, i32 0, i32 0
  %PC.i1789 = bitcast %union.anon* %2542 to i64*
  %2543 = load i64, i64* %PC.i1789
  %2544 = add i64 %2543, 701
  %2545 = load i64, i64* %PC.i1789
  %2546 = add i64 %2545, 5
  store i64 %2546, i64* %PC.i1789
  %2547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2544, i64* %2547, align 8
  store %struct.Memory* %loadMem_400bad, %struct.Memory** %MEMORY
  br label %block_.L_400e6a

block_.L_400bb2:                                  ; preds = %block_.L_400ae9
  %loadMem_400bb2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2549 = getelementptr inbounds %struct.GPR, %struct.GPR* %2548, i32 0, i32 33
  %2550 = getelementptr inbounds %struct.Reg, %struct.Reg* %2549, i32 0, i32 0
  %PC.i1786 = bitcast %union.anon* %2550 to i64*
  %2551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2552 = getelementptr inbounds %struct.GPR, %struct.GPR* %2551, i32 0, i32 1
  %2553 = getelementptr inbounds %struct.Reg, %struct.Reg* %2552, i32 0, i32 0
  %RAX.i1787 = bitcast %union.anon* %2553 to i64*
  %2554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2555 = getelementptr inbounds %struct.GPR, %struct.GPR* %2554, i32 0, i32 15
  %2556 = getelementptr inbounds %struct.Reg, %struct.Reg* %2555, i32 0, i32 0
  %RBP.i1788 = bitcast %union.anon* %2556 to i64*
  %2557 = load i64, i64* %RBP.i1788
  %2558 = sub i64 %2557, 12
  %2559 = load i64, i64* %PC.i1786
  %2560 = add i64 %2559, 3
  store i64 %2560, i64* %PC.i1786
  %2561 = inttoptr i64 %2558 to i32*
  %2562 = load i32, i32* %2561
  %2563 = zext i32 %2562 to i64
  store i64 %2563, i64* %RAX.i1787, align 8
  store %struct.Memory* %loadMem_400bb2, %struct.Memory** %MEMORY
  %loadMem_400bb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2565 = getelementptr inbounds %struct.GPR, %struct.GPR* %2564, i32 0, i32 33
  %2566 = getelementptr inbounds %struct.Reg, %struct.Reg* %2565, i32 0, i32 0
  %PC.i1784 = bitcast %union.anon* %2566 to i64*
  %2567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2568 = getelementptr inbounds %struct.GPR, %struct.GPR* %2567, i32 0, i32 1
  %2569 = getelementptr inbounds %struct.Reg, %struct.Reg* %2568, i32 0, i32 0
  %RAX.i1785 = bitcast %union.anon* %2569 to i64*
  %2570 = load i64, i64* %RAX.i1785
  %2571 = load i64, i64* %PC.i1784
  %2572 = add i64 %2571, 3
  store i64 %2572, i64* %PC.i1784
  %2573 = trunc i64 %2570 to i32
  %2574 = sub i32 %2573, 1
  %2575 = zext i32 %2574 to i64
  store i64 %2575, i64* %RAX.i1785, align 8
  %2576 = icmp ult i32 %2573, 1
  %2577 = zext i1 %2576 to i8
  %2578 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2577, i8* %2578, align 1
  %2579 = and i32 %2574, 255
  %2580 = call i32 @llvm.ctpop.i32(i32 %2579)
  %2581 = trunc i32 %2580 to i8
  %2582 = and i8 %2581, 1
  %2583 = xor i8 %2582, 1
  %2584 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2583, i8* %2584, align 1
  %2585 = xor i64 1, %2570
  %2586 = trunc i64 %2585 to i32
  %2587 = xor i32 %2586, %2574
  %2588 = lshr i32 %2587, 4
  %2589 = trunc i32 %2588 to i8
  %2590 = and i8 %2589, 1
  %2591 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2590, i8* %2591, align 1
  %2592 = icmp eq i32 %2574, 0
  %2593 = zext i1 %2592 to i8
  %2594 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2593, i8* %2594, align 1
  %2595 = lshr i32 %2574, 31
  %2596 = trunc i32 %2595 to i8
  %2597 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2596, i8* %2597, align 1
  %2598 = lshr i32 %2573, 31
  %2599 = xor i32 %2595, %2598
  %2600 = add i32 %2599, %2598
  %2601 = icmp eq i32 %2600, 2
  %2602 = zext i1 %2601 to i8
  %2603 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2602, i8* %2603, align 1
  store %struct.Memory* %loadMem_400bb5, %struct.Memory** %MEMORY
  %loadMem_400bb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2605 = getelementptr inbounds %struct.GPR, %struct.GPR* %2604, i32 0, i32 33
  %2606 = getelementptr inbounds %struct.Reg, %struct.Reg* %2605, i32 0, i32 0
  %PC.i1781 = bitcast %union.anon* %2606 to i64*
  %2607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2608 = getelementptr inbounds %struct.GPR, %struct.GPR* %2607, i32 0, i32 1
  %2609 = getelementptr inbounds %struct.Reg, %struct.Reg* %2608, i32 0, i32 0
  %EAX.i1782 = bitcast %union.anon* %2609 to i32*
  %2610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2611 = getelementptr inbounds %struct.GPR, %struct.GPR* %2610, i32 0, i32 15
  %2612 = getelementptr inbounds %struct.Reg, %struct.Reg* %2611, i32 0, i32 0
  %RBP.i1783 = bitcast %union.anon* %2612 to i64*
  %2613 = load i64, i64* %RBP.i1783
  %2614 = sub i64 %2613, 16
  %2615 = load i32, i32* %EAX.i1782
  %2616 = zext i32 %2615 to i64
  %2617 = load i64, i64* %PC.i1781
  %2618 = add i64 %2617, 3
  store i64 %2618, i64* %PC.i1781
  %2619 = inttoptr i64 %2614 to i32*
  store i32 %2615, i32* %2619
  store %struct.Memory* %loadMem_400bb8, %struct.Memory** %MEMORY
  br label %block_.L_400bbb

block_.L_400bbb:                                  ; preds = %block_.L_400bf7, %block_.L_400bb2
  %loadMem_400bbb = load %struct.Memory*, %struct.Memory** %MEMORY
  %2620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2621 = getelementptr inbounds %struct.GPR, %struct.GPR* %2620, i32 0, i32 33
  %2622 = getelementptr inbounds %struct.Reg, %struct.Reg* %2621, i32 0, i32 0
  %PC.i1778 = bitcast %union.anon* %2622 to i64*
  %2623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2624 = getelementptr inbounds %struct.GPR, %struct.GPR* %2623, i32 0, i32 1
  %2625 = getelementptr inbounds %struct.Reg, %struct.Reg* %2624, i32 0, i32 0
  %EAX.i1779 = bitcast %union.anon* %2625 to i32*
  %2626 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2627 = getelementptr inbounds %struct.GPR, %struct.GPR* %2626, i32 0, i32 1
  %2628 = getelementptr inbounds %struct.Reg, %struct.Reg* %2627, i32 0, i32 0
  %RAX.i1780 = bitcast %union.anon* %2628 to i64*
  %2629 = load i64, i64* %RAX.i1780
  %2630 = load i32, i32* %EAX.i1779
  %2631 = zext i32 %2630 to i64
  %2632 = load i64, i64* %PC.i1778
  %2633 = add i64 %2632, 2
  store i64 %2633, i64* %PC.i1778
  %2634 = xor i64 %2631, %2629
  %2635 = trunc i64 %2634 to i32
  %2636 = and i64 %2634, 4294967295
  store i64 %2636, i64* %RAX.i1780, align 8
  %2637 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2637, align 1
  %2638 = and i32 %2635, 255
  %2639 = call i32 @llvm.ctpop.i32(i32 %2638)
  %2640 = trunc i32 %2639 to i8
  %2641 = and i8 %2640, 1
  %2642 = xor i8 %2641, 1
  %2643 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2642, i8* %2643, align 1
  %2644 = icmp eq i32 %2635, 0
  %2645 = zext i1 %2644 to i8
  %2646 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2645, i8* %2646, align 1
  %2647 = lshr i32 %2635, 31
  %2648 = trunc i32 %2647 to i8
  %2649 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2648, i8* %2649, align 1
  %2650 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2650, align 1
  %2651 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2651, align 1
  store %struct.Memory* %loadMem_400bbb, %struct.Memory** %MEMORY
  %loadMem_400bbd = load %struct.Memory*, %struct.Memory** %MEMORY
  %2652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2653 = getelementptr inbounds %struct.GPR, %struct.GPR* %2652, i32 0, i32 33
  %2654 = getelementptr inbounds %struct.Reg, %struct.Reg* %2653, i32 0, i32 0
  %PC.i1775 = bitcast %union.anon* %2654 to i64*
  %2655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2656 = getelementptr inbounds %struct.GPR, %struct.GPR* %2655, i32 0, i32 1
  %2657 = getelementptr inbounds %struct.Reg, %struct.Reg* %2656, i32 0, i32 0
  %2658 = bitcast %union.anon* %2657 to %struct.anon.2*
  %AL.i1776 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2658, i32 0, i32 0
  %2659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2660 = getelementptr inbounds %struct.GPR, %struct.GPR* %2659, i32 0, i32 5
  %2661 = getelementptr inbounds %struct.Reg, %struct.Reg* %2660, i32 0, i32 0
  %2662 = bitcast %union.anon* %2661 to %struct.anon.2*
  %CL.i1777 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2662, i32 0, i32 0
  %2663 = load i8, i8* %AL.i1776
  %2664 = zext i8 %2663 to i64
  %2665 = load i64, i64* %PC.i1775
  %2666 = add i64 %2665, 2
  store i64 %2666, i64* %PC.i1775
  store i8 %2663, i8* %CL.i1777, align 1
  store %struct.Memory* %loadMem_400bbd, %struct.Memory** %MEMORY
  %loadMem_400bbf = load %struct.Memory*, %struct.Memory** %MEMORY
  %2667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2668 = getelementptr inbounds %struct.GPR, %struct.GPR* %2667, i32 0, i32 33
  %2669 = getelementptr inbounds %struct.Reg, %struct.Reg* %2668, i32 0, i32 0
  %PC.i1772 = bitcast %union.anon* %2669 to i64*
  %2670 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2671 = getelementptr inbounds %struct.GPR, %struct.GPR* %2670, i32 0, i32 7
  %2672 = getelementptr inbounds %struct.Reg, %struct.Reg* %2671, i32 0, i32 0
  %RDX.i1773 = bitcast %union.anon* %2672 to i64*
  %2673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2674 = getelementptr inbounds %struct.GPR, %struct.GPR* %2673, i32 0, i32 15
  %2675 = getelementptr inbounds %struct.Reg, %struct.Reg* %2674, i32 0, i32 0
  %RBP.i1774 = bitcast %union.anon* %2675 to i64*
  %2676 = load i64, i64* %RBP.i1774
  %2677 = sub i64 %2676, 16
  %2678 = load i64, i64* %PC.i1772
  %2679 = add i64 %2678, 4
  store i64 %2679, i64* %PC.i1772
  %2680 = inttoptr i64 %2677 to i32*
  %2681 = load i32, i32* %2680
  %2682 = sext i32 %2681 to i64
  store i64 %2682, i64* %RDX.i1773, align 8
  store %struct.Memory* %loadMem_400bbf, %struct.Memory** %MEMORY
  %loadMem_400bc3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2684 = getelementptr inbounds %struct.GPR, %struct.GPR* %2683, i32 0, i32 33
  %2685 = getelementptr inbounds %struct.Reg, %struct.Reg* %2684, i32 0, i32 0
  %PC.i1769 = bitcast %union.anon* %2685 to i64*
  %2686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2687 = getelementptr inbounds %struct.GPR, %struct.GPR* %2686, i32 0, i32 7
  %2688 = getelementptr inbounds %struct.Reg, %struct.Reg* %2687, i32 0, i32 0
  %RDX.i1770 = bitcast %union.anon* %2688 to i64*
  %2689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2690 = getelementptr inbounds %struct.GPR, %struct.GPR* %2689, i32 0, i32 15
  %2691 = getelementptr inbounds %struct.Reg, %struct.Reg* %2690, i32 0, i32 0
  %RBP.i1771 = bitcast %union.anon* %2691 to i64*
  %2692 = load i64, i64* %RBP.i1771
  %2693 = load i64, i64* %RDX.i1770
  %2694 = mul i64 %2693, 4
  %2695 = add i64 %2692, -1248
  %2696 = add i64 %2695, %2694
  %2697 = load i64, i64* %PC.i1769
  %2698 = add i64 %2697, 8
  store i64 %2698, i64* %PC.i1769
  %2699 = inttoptr i64 %2696 to i32*
  %2700 = load i32, i32* %2699
  %2701 = sub i32 %2700, -1
  %2702 = icmp ult i32 %2700, -1
  %2703 = zext i1 %2702 to i8
  %2704 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2703, i8* %2704, align 1
  %2705 = and i32 %2701, 255
  %2706 = call i32 @llvm.ctpop.i32(i32 %2705)
  %2707 = trunc i32 %2706 to i8
  %2708 = and i8 %2707, 1
  %2709 = xor i8 %2708, 1
  %2710 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2709, i8* %2710, align 1
  %2711 = xor i32 %2700, -1
  %2712 = xor i32 %2711, %2701
  %2713 = lshr i32 %2712, 4
  %2714 = trunc i32 %2713 to i8
  %2715 = and i8 %2714, 1
  %2716 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2715, i8* %2716, align 1
  %2717 = icmp eq i32 %2701, 0
  %2718 = zext i1 %2717 to i8
  %2719 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2718, i8* %2719, align 1
  %2720 = lshr i32 %2701, 31
  %2721 = trunc i32 %2720 to i8
  %2722 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2721, i8* %2722, align 1
  %2723 = lshr i32 %2700, 31
  %2724 = xor i32 %2723, 1
  %2725 = xor i32 %2720, %2723
  %2726 = add i32 %2725, %2724
  %2727 = icmp eq i32 %2726, 2
  %2728 = zext i1 %2727 to i8
  %2729 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2728, i8* %2729, align 1
  store %struct.Memory* %loadMem_400bc3, %struct.Memory** %MEMORY
  %loadMem_400bcb = load %struct.Memory*, %struct.Memory** %MEMORY
  %2730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2731 = getelementptr inbounds %struct.GPR, %struct.GPR* %2730, i32 0, i32 33
  %2732 = getelementptr inbounds %struct.Reg, %struct.Reg* %2731, i32 0, i32 0
  %PC.i1766 = bitcast %union.anon* %2732 to i64*
  %2733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2734 = getelementptr inbounds %struct.GPR, %struct.GPR* %2733, i32 0, i32 5
  %2735 = getelementptr inbounds %struct.Reg, %struct.Reg* %2734, i32 0, i32 0
  %2736 = bitcast %union.anon* %2735 to %struct.anon.2*
  %CL.i1767 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2736, i32 0, i32 0
  %2737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2738 = getelementptr inbounds %struct.GPR, %struct.GPR* %2737, i32 0, i32 15
  %2739 = getelementptr inbounds %struct.Reg, %struct.Reg* %2738, i32 0, i32 0
  %RBP.i1768 = bitcast %union.anon* %2739 to i64*
  %2740 = load i64, i64* %RBP.i1768
  %2741 = sub i64 %2740, 2693
  %2742 = load i8, i8* %CL.i1767
  %2743 = zext i8 %2742 to i64
  %2744 = load i64, i64* %PC.i1766
  %2745 = add i64 %2744, 6
  store i64 %2745, i64* %PC.i1766
  %2746 = inttoptr i64 %2741 to i8*
  store i8 %2742, i8* %2746
  store %struct.Memory* %loadMem_400bcb, %struct.Memory** %MEMORY
  %loadMem_400bd1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2748 = getelementptr inbounds %struct.GPR, %struct.GPR* %2747, i32 0, i32 33
  %2749 = getelementptr inbounds %struct.Reg, %struct.Reg* %2748, i32 0, i32 0
  %PC.i1765 = bitcast %union.anon* %2749 to i64*
  %2750 = load i64, i64* %PC.i1765
  %2751 = add i64 %2750, 19
  %2752 = load i64, i64* %PC.i1765
  %2753 = add i64 %2752, 6
  %2754 = load i64, i64* %PC.i1765
  %2755 = add i64 %2754, 6
  store i64 %2755, i64* %PC.i1765
  %2756 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2757 = load i8, i8* %2756, align 1
  %2758 = icmp eq i8 %2757, 0
  %2759 = zext i1 %2758 to i8
  store i8 %2759, i8* %BRANCH_TAKEN, align 1
  %2760 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2761 = select i1 %2758, i64 %2751, i64 %2753
  store i64 %2761, i64* %2760, align 8
  store %struct.Memory* %loadMem_400bd1, %struct.Memory** %MEMORY
  %loadBr_400bd1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400bd1 = icmp eq i8 %loadBr_400bd1, 1
  br i1 %cmpBr_400bd1, label %block_.L_400be4, label %block_400bd7

block_400bd7:                                     ; preds = %block_.L_400bbb
  %loadMem_400bd7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2763 = getelementptr inbounds %struct.GPR, %struct.GPR* %2762, i32 0, i32 33
  %2764 = getelementptr inbounds %struct.Reg, %struct.Reg* %2763, i32 0, i32 0
  %PC.i1763 = bitcast %union.anon* %2764 to i64*
  %2765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2766 = getelementptr inbounds %struct.GPR, %struct.GPR* %2765, i32 0, i32 15
  %2767 = getelementptr inbounds %struct.Reg, %struct.Reg* %2766, i32 0, i32 0
  %RBP.i1764 = bitcast %union.anon* %2767 to i64*
  %2768 = load i64, i64* %RBP.i1764
  %2769 = sub i64 %2768, 16
  %2770 = load i64, i64* %PC.i1763
  %2771 = add i64 %2770, 4
  store i64 %2771, i64* %PC.i1763
  %2772 = inttoptr i64 %2769 to i32*
  %2773 = load i32, i32* %2772
  %2774 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2774, align 1
  %2775 = and i32 %2773, 255
  %2776 = call i32 @llvm.ctpop.i32(i32 %2775)
  %2777 = trunc i32 %2776 to i8
  %2778 = and i8 %2777, 1
  %2779 = xor i8 %2778, 1
  %2780 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2779, i8* %2780, align 1
  %2781 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2781, align 1
  %2782 = icmp eq i32 %2773, 0
  %2783 = zext i1 %2782 to i8
  %2784 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2783, i8* %2784, align 1
  %2785 = lshr i32 %2773, 31
  %2786 = trunc i32 %2785 to i8
  %2787 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2786, i8* %2787, align 1
  %2788 = lshr i32 %2773, 31
  %2789 = xor i32 %2785, %2788
  %2790 = add i32 %2789, %2788
  %2791 = icmp eq i32 %2790, 2
  %2792 = zext i1 %2791 to i8
  %2793 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2792, i8* %2793, align 1
  store %struct.Memory* %loadMem_400bd7, %struct.Memory** %MEMORY
  %loadMem_400bdb = load %struct.Memory*, %struct.Memory** %MEMORY
  %2794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2795 = getelementptr inbounds %struct.GPR, %struct.GPR* %2794, i32 0, i32 33
  %2796 = getelementptr inbounds %struct.Reg, %struct.Reg* %2795, i32 0, i32 0
  %PC.i1761 = bitcast %union.anon* %2796 to i64*
  %2797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2798 = getelementptr inbounds %struct.GPR, %struct.GPR* %2797, i32 0, i32 1
  %2799 = getelementptr inbounds %struct.Reg, %struct.Reg* %2798, i32 0, i32 0
  %2800 = bitcast %union.anon* %2799 to %struct.anon.2*
  %AL.i1762 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2800, i32 0, i32 0
  %2801 = load i64, i64* %PC.i1761
  %2802 = add i64 %2801, 3
  store i64 %2802, i64* %PC.i1761
  %2803 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2804 = load i8, i8* %2803, align 1
  %2805 = icmp eq i8 %2804, 0
  %2806 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2807 = load i8, i8* %2806, align 1
  %2808 = icmp ne i8 %2807, 0
  %2809 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2810 = load i8, i8* %2809, align 1
  %2811 = icmp ne i8 %2810, 0
  %2812 = xor i1 %2808, %2811
  %2813 = xor i1 %2812, true
  %2814 = and i1 %2805, %2813
  %2815 = zext i1 %2814 to i8
  store i8 %2815, i8* %AL.i1762, align 1
  store %struct.Memory* %loadMem_400bdb, %struct.Memory** %MEMORY
  %loadMem_400bde = load %struct.Memory*, %struct.Memory** %MEMORY
  %2816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2817 = getelementptr inbounds %struct.GPR, %struct.GPR* %2816, i32 0, i32 33
  %2818 = getelementptr inbounds %struct.Reg, %struct.Reg* %2817, i32 0, i32 0
  %PC.i1758 = bitcast %union.anon* %2818 to i64*
  %2819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2820 = getelementptr inbounds %struct.GPR, %struct.GPR* %2819, i32 0, i32 1
  %2821 = getelementptr inbounds %struct.Reg, %struct.Reg* %2820, i32 0, i32 0
  %2822 = bitcast %union.anon* %2821 to %struct.anon.2*
  %AL.i1759 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2822, i32 0, i32 0
  %2823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2824 = getelementptr inbounds %struct.GPR, %struct.GPR* %2823, i32 0, i32 15
  %2825 = getelementptr inbounds %struct.Reg, %struct.Reg* %2824, i32 0, i32 0
  %RBP.i1760 = bitcast %union.anon* %2825 to i64*
  %2826 = load i64, i64* %RBP.i1760
  %2827 = sub i64 %2826, 2693
  %2828 = load i8, i8* %AL.i1759
  %2829 = zext i8 %2828 to i64
  %2830 = load i64, i64* %PC.i1758
  %2831 = add i64 %2830, 6
  store i64 %2831, i64* %PC.i1758
  %2832 = inttoptr i64 %2827 to i8*
  store i8 %2828, i8* %2832
  store %struct.Memory* %loadMem_400bde, %struct.Memory** %MEMORY
  br label %block_.L_400be4

block_.L_400be4:                                  ; preds = %block_400bd7, %block_.L_400bbb
  %loadMem_400be4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2834 = getelementptr inbounds %struct.GPR, %struct.GPR* %2833, i32 0, i32 33
  %2835 = getelementptr inbounds %struct.Reg, %struct.Reg* %2834, i32 0, i32 0
  %PC.i1755 = bitcast %union.anon* %2835 to i64*
  %2836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2837 = getelementptr inbounds %struct.GPR, %struct.GPR* %2836, i32 0, i32 1
  %2838 = getelementptr inbounds %struct.Reg, %struct.Reg* %2837, i32 0, i32 0
  %2839 = bitcast %union.anon* %2838 to %struct.anon.2*
  %AL.i1756 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2839, i32 0, i32 0
  %2840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2841 = getelementptr inbounds %struct.GPR, %struct.GPR* %2840, i32 0, i32 15
  %2842 = getelementptr inbounds %struct.Reg, %struct.Reg* %2841, i32 0, i32 0
  %RBP.i1757 = bitcast %union.anon* %2842 to i64*
  %2843 = load i64, i64* %RBP.i1757
  %2844 = sub i64 %2843, 2693
  %2845 = load i64, i64* %PC.i1755
  %2846 = add i64 %2845, 6
  store i64 %2846, i64* %PC.i1755
  %2847 = inttoptr i64 %2844 to i8*
  %2848 = load i8, i8* %2847
  store i8 %2848, i8* %AL.i1756, align 1
  store %struct.Memory* %loadMem_400be4, %struct.Memory** %MEMORY
  %loadMem_400bea = load %struct.Memory*, %struct.Memory** %MEMORY
  %2849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2850 = getelementptr inbounds %struct.GPR, %struct.GPR* %2849, i32 0, i32 33
  %2851 = getelementptr inbounds %struct.Reg, %struct.Reg* %2850, i32 0, i32 0
  %PC.i1753 = bitcast %union.anon* %2851 to i64*
  %2852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2853 = getelementptr inbounds %struct.GPR, %struct.GPR* %2852, i32 0, i32 1
  %2854 = getelementptr inbounds %struct.Reg, %struct.Reg* %2853, i32 0, i32 0
  %2855 = bitcast %union.anon* %2854 to %struct.anon.2*
  %AL.i1754 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2855, i32 0, i32 0
  %2856 = load i8, i8* %AL.i1754
  %2857 = zext i8 %2856 to i64
  %2858 = load i64, i64* %PC.i1753
  %2859 = add i64 %2858, 2
  store i64 %2859, i64* %PC.i1753
  %2860 = and i64 1, %2857
  %2861 = trunc i64 %2860 to i8
  %2862 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2862, align 1
  %2863 = trunc i64 %2860 to i32
  %2864 = and i32 %2863, 255
  %2865 = call i32 @llvm.ctpop.i32(i32 %2864)
  %2866 = trunc i32 %2865 to i8
  %2867 = and i8 %2866, 1
  %2868 = xor i8 %2867, 1
  %2869 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2868, i8* %2869, align 1
  %2870 = icmp eq i8 %2861, 0
  %2871 = zext i1 %2870 to i8
  %2872 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2871, i8* %2872, align 1
  %2873 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %2873, align 1
  %2874 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2874, align 1
  %2875 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2875, align 1
  store %struct.Memory* %loadMem_400bea, %struct.Memory** %MEMORY
  %loadMem_400bec = load %struct.Memory*, %struct.Memory** %MEMORY
  %2876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2877 = getelementptr inbounds %struct.GPR, %struct.GPR* %2876, i32 0, i32 33
  %2878 = getelementptr inbounds %struct.Reg, %struct.Reg* %2877, i32 0, i32 0
  %PC.i1752 = bitcast %union.anon* %2878 to i64*
  %2879 = load i64, i64* %PC.i1752
  %2880 = add i64 %2879, 11
  %2881 = load i64, i64* %PC.i1752
  %2882 = add i64 %2881, 6
  %2883 = load i64, i64* %PC.i1752
  %2884 = add i64 %2883, 6
  store i64 %2884, i64* %PC.i1752
  %2885 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2886 = load i8, i8* %2885, align 1
  %2887 = icmp eq i8 %2886, 0
  %2888 = zext i1 %2887 to i8
  store i8 %2888, i8* %BRANCH_TAKEN, align 1
  %2889 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2890 = select i1 %2887, i64 %2880, i64 %2882
  store i64 %2890, i64* %2889, align 8
  store %struct.Memory* %loadMem_400bec, %struct.Memory** %MEMORY
  %loadBr_400bec = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400bec = icmp eq i8 %loadBr_400bec, 1
  br i1 %cmpBr_400bec, label %block_.L_400bf7, label %block_400bf2

block_400bf2:                                     ; preds = %block_.L_400be4
  %loadMem_400bf2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2892 = getelementptr inbounds %struct.GPR, %struct.GPR* %2891, i32 0, i32 33
  %2893 = getelementptr inbounds %struct.Reg, %struct.Reg* %2892, i32 0, i32 0
  %PC.i1751 = bitcast %union.anon* %2893 to i64*
  %2894 = load i64, i64* %PC.i1751
  %2895 = add i64 %2894, 19
  %2896 = load i64, i64* %PC.i1751
  %2897 = add i64 %2896, 5
  store i64 %2897, i64* %PC.i1751
  %2898 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2895, i64* %2898, align 8
  store %struct.Memory* %loadMem_400bf2, %struct.Memory** %MEMORY
  br label %block_.L_400c05

block_.L_400bf7:                                  ; preds = %block_.L_400be4
  %loadMem_400bf7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2900 = getelementptr inbounds %struct.GPR, %struct.GPR* %2899, i32 0, i32 33
  %2901 = getelementptr inbounds %struct.Reg, %struct.Reg* %2900, i32 0, i32 0
  %PC.i1748 = bitcast %union.anon* %2901 to i64*
  %2902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2903 = getelementptr inbounds %struct.GPR, %struct.GPR* %2902, i32 0, i32 1
  %2904 = getelementptr inbounds %struct.Reg, %struct.Reg* %2903, i32 0, i32 0
  %RAX.i1749 = bitcast %union.anon* %2904 to i64*
  %2905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2906 = getelementptr inbounds %struct.GPR, %struct.GPR* %2905, i32 0, i32 15
  %2907 = getelementptr inbounds %struct.Reg, %struct.Reg* %2906, i32 0, i32 0
  %RBP.i1750 = bitcast %union.anon* %2907 to i64*
  %2908 = load i64, i64* %RBP.i1750
  %2909 = sub i64 %2908, 16
  %2910 = load i64, i64* %PC.i1748
  %2911 = add i64 %2910, 3
  store i64 %2911, i64* %PC.i1748
  %2912 = inttoptr i64 %2909 to i32*
  %2913 = load i32, i32* %2912
  %2914 = zext i32 %2913 to i64
  store i64 %2914, i64* %RAX.i1749, align 8
  store %struct.Memory* %loadMem_400bf7, %struct.Memory** %MEMORY
  %loadMem_400bfa = load %struct.Memory*, %struct.Memory** %MEMORY
  %2915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2916 = getelementptr inbounds %struct.GPR, %struct.GPR* %2915, i32 0, i32 33
  %2917 = getelementptr inbounds %struct.Reg, %struct.Reg* %2916, i32 0, i32 0
  %PC.i1746 = bitcast %union.anon* %2917 to i64*
  %2918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2919 = getelementptr inbounds %struct.GPR, %struct.GPR* %2918, i32 0, i32 1
  %2920 = getelementptr inbounds %struct.Reg, %struct.Reg* %2919, i32 0, i32 0
  %RAX.i1747 = bitcast %union.anon* %2920 to i64*
  %2921 = load i64, i64* %RAX.i1747
  %2922 = load i64, i64* %PC.i1746
  %2923 = add i64 %2922, 3
  store i64 %2923, i64* %PC.i1746
  %2924 = trunc i64 %2921 to i32
  %2925 = add i32 -1, %2924
  %2926 = zext i32 %2925 to i64
  store i64 %2926, i64* %RAX.i1747, align 8
  %2927 = icmp ult i32 %2925, %2924
  %2928 = icmp ult i32 %2925, -1
  %2929 = or i1 %2927, %2928
  %2930 = zext i1 %2929 to i8
  %2931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2930, i8* %2931, align 1
  %2932 = and i32 %2925, 255
  %2933 = call i32 @llvm.ctpop.i32(i32 %2932)
  %2934 = trunc i32 %2933 to i8
  %2935 = and i8 %2934, 1
  %2936 = xor i8 %2935, 1
  %2937 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2936, i8* %2937, align 1
  %2938 = xor i64 -1, %2921
  %2939 = trunc i64 %2938 to i32
  %2940 = xor i32 %2939, %2925
  %2941 = lshr i32 %2940, 4
  %2942 = trunc i32 %2941 to i8
  %2943 = and i8 %2942, 1
  %2944 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2943, i8* %2944, align 1
  %2945 = icmp eq i32 %2925, 0
  %2946 = zext i1 %2945 to i8
  %2947 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2946, i8* %2947, align 1
  %2948 = lshr i32 %2925, 31
  %2949 = trunc i32 %2948 to i8
  %2950 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2949, i8* %2950, align 1
  %2951 = lshr i32 %2924, 31
  %2952 = xor i32 %2948, %2951
  %2953 = xor i32 %2948, 1
  %2954 = add i32 %2952, %2953
  %2955 = icmp eq i32 %2954, 2
  %2956 = zext i1 %2955 to i8
  %2957 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2956, i8* %2957, align 1
  store %struct.Memory* %loadMem_400bfa, %struct.Memory** %MEMORY
  %loadMem_400bfd = load %struct.Memory*, %struct.Memory** %MEMORY
  %2958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2959 = getelementptr inbounds %struct.GPR, %struct.GPR* %2958, i32 0, i32 33
  %2960 = getelementptr inbounds %struct.Reg, %struct.Reg* %2959, i32 0, i32 0
  %PC.i1743 = bitcast %union.anon* %2960 to i64*
  %2961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2962 = getelementptr inbounds %struct.GPR, %struct.GPR* %2961, i32 0, i32 1
  %2963 = getelementptr inbounds %struct.Reg, %struct.Reg* %2962, i32 0, i32 0
  %EAX.i1744 = bitcast %union.anon* %2963 to i32*
  %2964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2965 = getelementptr inbounds %struct.GPR, %struct.GPR* %2964, i32 0, i32 15
  %2966 = getelementptr inbounds %struct.Reg, %struct.Reg* %2965, i32 0, i32 0
  %RBP.i1745 = bitcast %union.anon* %2966 to i64*
  %2967 = load i64, i64* %RBP.i1745
  %2968 = sub i64 %2967, 16
  %2969 = load i32, i32* %EAX.i1744
  %2970 = zext i32 %2969 to i64
  %2971 = load i64, i64* %PC.i1743
  %2972 = add i64 %2971, 3
  store i64 %2972, i64* %PC.i1743
  %2973 = inttoptr i64 %2968 to i32*
  store i32 %2969, i32* %2973
  store %struct.Memory* %loadMem_400bfd, %struct.Memory** %MEMORY
  %loadMem_400c00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2975 = getelementptr inbounds %struct.GPR, %struct.GPR* %2974, i32 0, i32 33
  %2976 = getelementptr inbounds %struct.Reg, %struct.Reg* %2975, i32 0, i32 0
  %PC.i1742 = bitcast %union.anon* %2976 to i64*
  %2977 = load i64, i64* %PC.i1742
  %2978 = add i64 %2977, -69
  %2979 = load i64, i64* %PC.i1742
  %2980 = add i64 %2979, 5
  store i64 %2980, i64* %PC.i1742
  %2981 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2978, i64* %2981, align 8
  store %struct.Memory* %loadMem_400c00, %struct.Memory** %MEMORY
  br label %block_.L_400bbb

block_.L_400c05:                                  ; preds = %block_400bf2
  %loadMem_400c05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2983 = getelementptr inbounds %struct.GPR, %struct.GPR* %2982, i32 0, i32 33
  %2984 = getelementptr inbounds %struct.Reg, %struct.Reg* %2983, i32 0, i32 0
  %PC.i1740 = bitcast %union.anon* %2984 to i64*
  %2985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2986 = getelementptr inbounds %struct.GPR, %struct.GPR* %2985, i32 0, i32 15
  %2987 = getelementptr inbounds %struct.Reg, %struct.Reg* %2986, i32 0, i32 0
  %RBP.i1741 = bitcast %union.anon* %2987 to i64*
  %2988 = load i64, i64* %RBP.i1741
  %2989 = sub i64 %2988, 16
  %2990 = load i64, i64* %PC.i1740
  %2991 = add i64 %2990, 4
  store i64 %2991, i64* %PC.i1740
  %2992 = inttoptr i64 %2989 to i32*
  %2993 = load i32, i32* %2992
  %2994 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2994, align 1
  %2995 = and i32 %2993, 255
  %2996 = call i32 @llvm.ctpop.i32(i32 %2995)
  %2997 = trunc i32 %2996 to i8
  %2998 = and i8 %2997, 1
  %2999 = xor i8 %2998, 1
  %3000 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2999, i8* %3000, align 1
  %3001 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3001, align 1
  %3002 = icmp eq i32 %2993, 0
  %3003 = zext i1 %3002 to i8
  %3004 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3003, i8* %3004, align 1
  %3005 = lshr i32 %2993, 31
  %3006 = trunc i32 %3005 to i8
  %3007 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3006, i8* %3007, align 1
  %3008 = lshr i32 %2993, 31
  %3009 = xor i32 %3005, %3008
  %3010 = add i32 %3009, %3008
  %3011 = icmp eq i32 %3010, 2
  %3012 = zext i1 %3011 to i8
  %3013 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3012, i8* %3013, align 1
  store %struct.Memory* %loadMem_400c05, %struct.Memory** %MEMORY
  %loadMem_400c09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3015 = getelementptr inbounds %struct.GPR, %struct.GPR* %3014, i32 0, i32 33
  %3016 = getelementptr inbounds %struct.Reg, %struct.Reg* %3015, i32 0, i32 0
  %PC.i1739 = bitcast %union.anon* %3016 to i64*
  %3017 = load i64, i64* %PC.i1739
  %3018 = add i64 %3017, 93
  %3019 = load i64, i64* %PC.i1739
  %3020 = add i64 %3019, 6
  %3021 = load i64, i64* %PC.i1739
  %3022 = add i64 %3021, 6
  store i64 %3022, i64* %PC.i1739
  %3023 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3024 = load i8, i8* %3023, align 1
  %3025 = icmp ne i8 %3024, 0
  %3026 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3027 = load i8, i8* %3026, align 1
  %3028 = icmp ne i8 %3027, 0
  %3029 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3030 = load i8, i8* %3029, align 1
  %3031 = icmp ne i8 %3030, 0
  %3032 = xor i1 %3028, %3031
  %3033 = or i1 %3025, %3032
  %3034 = zext i1 %3033 to i8
  store i8 %3034, i8* %BRANCH_TAKEN, align 1
  %3035 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3036 = select i1 %3033, i64 %3018, i64 %3020
  store i64 %3036, i64* %3035, align 8
  store %struct.Memory* %loadMem_400c09, %struct.Memory** %MEMORY
  %loadBr_400c09 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400c09 = icmp eq i8 %loadBr_400c09, 1
  br i1 %cmpBr_400c09, label %block_.L_400c66, label %block_400c0f

block_400c0f:                                     ; preds = %block_.L_400c05
  %loadMem_400c0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3038 = getelementptr inbounds %struct.GPR, %struct.GPR* %3037, i32 0, i32 33
  %3039 = getelementptr inbounds %struct.Reg, %struct.Reg* %3038, i32 0, i32 0
  %PC.i1736 = bitcast %union.anon* %3039 to i64*
  %3040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3041 = getelementptr inbounds %struct.GPR, %struct.GPR* %3040, i32 0, i32 1
  %3042 = getelementptr inbounds %struct.Reg, %struct.Reg* %3041, i32 0, i32 0
  %RAX.i1737 = bitcast %union.anon* %3042 to i64*
  %3043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3044 = getelementptr inbounds %struct.GPR, %struct.GPR* %3043, i32 0, i32 15
  %3045 = getelementptr inbounds %struct.Reg, %struct.Reg* %3044, i32 0, i32 0
  %RBP.i1738 = bitcast %union.anon* %3045 to i64*
  %3046 = load i64, i64* %RBP.i1738
  %3047 = sub i64 %3046, 16
  %3048 = load i64, i64* %PC.i1736
  %3049 = add i64 %3048, 3
  store i64 %3049, i64* %PC.i1736
  %3050 = inttoptr i64 %3047 to i32*
  %3051 = load i32, i32* %3050
  %3052 = zext i32 %3051 to i64
  store i64 %3052, i64* %RAX.i1737, align 8
  store %struct.Memory* %loadMem_400c0f, %struct.Memory** %MEMORY
  %loadMem_400c12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3053 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3054 = getelementptr inbounds %struct.GPR, %struct.GPR* %3053, i32 0, i32 33
  %3055 = getelementptr inbounds %struct.Reg, %struct.Reg* %3054, i32 0, i32 0
  %PC.i1733 = bitcast %union.anon* %3055 to i64*
  %3056 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3057 = getelementptr inbounds %struct.GPR, %struct.GPR* %3056, i32 0, i32 1
  %3058 = getelementptr inbounds %struct.Reg, %struct.Reg* %3057, i32 0, i32 0
  %EAX.i1734 = bitcast %union.anon* %3058 to i32*
  %3059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3060 = getelementptr inbounds %struct.GPR, %struct.GPR* %3059, i32 0, i32 15
  %3061 = getelementptr inbounds %struct.Reg, %struct.Reg* %3060, i32 0, i32 0
  %RBP.i1735 = bitcast %union.anon* %3061 to i64*
  %3062 = load i64, i64* %RBP.i1735
  %3063 = sub i64 %3062, 8
  %3064 = load i32, i32* %EAX.i1734
  %3065 = zext i32 %3064 to i64
  %3066 = load i64, i64* %PC.i1733
  %3067 = add i64 %3066, 3
  store i64 %3067, i64* %PC.i1733
  %3068 = inttoptr i64 %3063 to i32*
  store i32 %3064, i32* %3068
  store %struct.Memory* %loadMem_400c12, %struct.Memory** %MEMORY
  br label %block_.L_400c15

block_.L_400c15:                                  ; preds = %block_.L_400c57, %block_400c0f
  %loadMem_400c15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3070 = getelementptr inbounds %struct.GPR, %struct.GPR* %3069, i32 0, i32 33
  %3071 = getelementptr inbounds %struct.Reg, %struct.Reg* %3070, i32 0, i32 0
  %PC.i1730 = bitcast %union.anon* %3071 to i64*
  %3072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3073 = getelementptr inbounds %struct.GPR, %struct.GPR* %3072, i32 0, i32 1
  %3074 = getelementptr inbounds %struct.Reg, %struct.Reg* %3073, i32 0, i32 0
  %RAX.i1731 = bitcast %union.anon* %3074 to i64*
  %3075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3076 = getelementptr inbounds %struct.GPR, %struct.GPR* %3075, i32 0, i32 15
  %3077 = getelementptr inbounds %struct.Reg, %struct.Reg* %3076, i32 0, i32 0
  %RBP.i1732 = bitcast %union.anon* %3077 to i64*
  %3078 = load i64, i64* %RBP.i1732
  %3079 = sub i64 %3078, 8
  %3080 = load i64, i64* %PC.i1730
  %3081 = add i64 %3080, 3
  store i64 %3081, i64* %PC.i1730
  %3082 = inttoptr i64 %3079 to i32*
  %3083 = load i32, i32* %3082
  %3084 = zext i32 %3083 to i64
  store i64 %3084, i64* %RAX.i1731, align 8
  store %struct.Memory* %loadMem_400c15, %struct.Memory** %MEMORY
  %loadMem_400c18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3086 = getelementptr inbounds %struct.GPR, %struct.GPR* %3085, i32 0, i32 33
  %3087 = getelementptr inbounds %struct.Reg, %struct.Reg* %3086, i32 0, i32 0
  %PC.i1728 = bitcast %union.anon* %3087 to i64*
  %3088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3089 = getelementptr inbounds %struct.GPR, %struct.GPR* %3088, i32 0, i32 1
  %3090 = getelementptr inbounds %struct.Reg, %struct.Reg* %3089, i32 0, i32 0
  %RAX.i1729 = bitcast %union.anon* %3090 to i64*
  %3091 = load i64, i64* %RAX.i1729
  %3092 = load i64, i64* %PC.i1728
  %3093 = add i64 %3092, 3
  store i64 %3093, i64* %PC.i1728
  %3094 = trunc i64 %3091 to i32
  %3095 = add i32 -1, %3094
  %3096 = zext i32 %3095 to i64
  store i64 %3096, i64* %RAX.i1729, align 8
  %3097 = icmp ult i32 %3095, %3094
  %3098 = icmp ult i32 %3095, -1
  %3099 = or i1 %3097, %3098
  %3100 = zext i1 %3099 to i8
  %3101 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3100, i8* %3101, align 1
  %3102 = and i32 %3095, 255
  %3103 = call i32 @llvm.ctpop.i32(i32 %3102)
  %3104 = trunc i32 %3103 to i8
  %3105 = and i8 %3104, 1
  %3106 = xor i8 %3105, 1
  %3107 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3106, i8* %3107, align 1
  %3108 = xor i64 -1, %3091
  %3109 = trunc i64 %3108 to i32
  %3110 = xor i32 %3109, %3095
  %3111 = lshr i32 %3110, 4
  %3112 = trunc i32 %3111 to i8
  %3113 = and i8 %3112, 1
  %3114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3113, i8* %3114, align 1
  %3115 = icmp eq i32 %3095, 0
  %3116 = zext i1 %3115 to i8
  %3117 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3116, i8* %3117, align 1
  %3118 = lshr i32 %3095, 31
  %3119 = trunc i32 %3118 to i8
  %3120 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3119, i8* %3120, align 1
  %3121 = lshr i32 %3094, 31
  %3122 = xor i32 %3118, %3121
  %3123 = xor i32 %3118, 1
  %3124 = add i32 %3122, %3123
  %3125 = icmp eq i32 %3124, 2
  %3126 = zext i1 %3125 to i8
  %3127 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3126, i8* %3127, align 1
  store %struct.Memory* %loadMem_400c18, %struct.Memory** %MEMORY
  %loadMem_400c1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3129 = getelementptr inbounds %struct.GPR, %struct.GPR* %3128, i32 0, i32 33
  %3130 = getelementptr inbounds %struct.Reg, %struct.Reg* %3129, i32 0, i32 0
  %PC.i1725 = bitcast %union.anon* %3130 to i64*
  %3131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3132 = getelementptr inbounds %struct.GPR, %struct.GPR* %3131, i32 0, i32 1
  %3133 = getelementptr inbounds %struct.Reg, %struct.Reg* %3132, i32 0, i32 0
  %EAX.i1726 = bitcast %union.anon* %3133 to i32*
  %3134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3135 = getelementptr inbounds %struct.GPR, %struct.GPR* %3134, i32 0, i32 15
  %3136 = getelementptr inbounds %struct.Reg, %struct.Reg* %3135, i32 0, i32 0
  %RBP.i1727 = bitcast %union.anon* %3136 to i64*
  %3137 = load i64, i64* %RBP.i1727
  %3138 = sub i64 %3137, 8
  %3139 = load i32, i32* %EAX.i1726
  %3140 = zext i32 %3139 to i64
  %3141 = load i64, i64* %PC.i1725
  %3142 = add i64 %3141, 3
  store i64 %3142, i64* %PC.i1725
  %3143 = inttoptr i64 %3138 to i32*
  store i32 %3139, i32* %3143
  store %struct.Memory* %loadMem_400c1b, %struct.Memory** %MEMORY
  %loadMem_400c1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3145 = getelementptr inbounds %struct.GPR, %struct.GPR* %3144, i32 0, i32 33
  %3146 = getelementptr inbounds %struct.Reg, %struct.Reg* %3145, i32 0, i32 0
  %PC.i1722 = bitcast %union.anon* %3146 to i64*
  %3147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3148 = getelementptr inbounds %struct.GPR, %struct.GPR* %3147, i32 0, i32 5
  %3149 = getelementptr inbounds %struct.Reg, %struct.Reg* %3148, i32 0, i32 0
  %RCX.i1723 = bitcast %union.anon* %3149 to i64*
  %3150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3151 = getelementptr inbounds %struct.GPR, %struct.GPR* %3150, i32 0, i32 15
  %3152 = getelementptr inbounds %struct.Reg, %struct.Reg* %3151, i32 0, i32 0
  %RBP.i1724 = bitcast %union.anon* %3152 to i64*
  %3153 = load i64, i64* %RBP.i1724
  %3154 = sub i64 %3153, 8
  %3155 = load i64, i64* %PC.i1722
  %3156 = add i64 %3155, 4
  store i64 %3156, i64* %PC.i1722
  %3157 = inttoptr i64 %3154 to i32*
  %3158 = load i32, i32* %3157
  %3159 = sext i32 %3158 to i64
  store i64 %3159, i64* %RCX.i1723, align 8
  store %struct.Memory* %loadMem_400c1e, %struct.Memory** %MEMORY
  %loadMem_400c22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3161 = getelementptr inbounds %struct.GPR, %struct.GPR* %3160, i32 0, i32 33
  %3162 = getelementptr inbounds %struct.Reg, %struct.Reg* %3161, i32 0, i32 0
  %PC.i1719 = bitcast %union.anon* %3162 to i64*
  %3163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3164 = getelementptr inbounds %struct.GPR, %struct.GPR* %3163, i32 0, i32 5
  %3165 = getelementptr inbounds %struct.Reg, %struct.Reg* %3164, i32 0, i32 0
  %RCX.i1720 = bitcast %union.anon* %3165 to i64*
  %3166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3167 = getelementptr inbounds %struct.GPR, %struct.GPR* %3166, i32 0, i32 15
  %3168 = getelementptr inbounds %struct.Reg, %struct.Reg* %3167, i32 0, i32 0
  %RBP.i1721 = bitcast %union.anon* %3168 to i64*
  %3169 = load i64, i64* %RBP.i1721
  %3170 = load i64, i64* %RCX.i1720
  %3171 = mul i64 %3170, 4
  %3172 = add i64 %3169, -1248
  %3173 = add i64 %3172, %3171
  %3174 = load i64, i64* %PC.i1719
  %3175 = add i64 %3174, 8
  store i64 %3175, i64* %PC.i1719
  %3176 = inttoptr i64 %3173 to i32*
  %3177 = load i32, i32* %3176
  %3178 = sub i32 %3177, -1
  %3179 = icmp ult i32 %3177, -1
  %3180 = zext i1 %3179 to i8
  %3181 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3180, i8* %3181, align 1
  %3182 = and i32 %3178, 255
  %3183 = call i32 @llvm.ctpop.i32(i32 %3182)
  %3184 = trunc i32 %3183 to i8
  %3185 = and i8 %3184, 1
  %3186 = xor i8 %3185, 1
  %3187 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3186, i8* %3187, align 1
  %3188 = xor i32 %3177, -1
  %3189 = xor i32 %3188, %3178
  %3190 = lshr i32 %3189, 4
  %3191 = trunc i32 %3190 to i8
  %3192 = and i8 %3191, 1
  %3193 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3192, i8* %3193, align 1
  %3194 = icmp eq i32 %3178, 0
  %3195 = zext i1 %3194 to i8
  %3196 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3195, i8* %3196, align 1
  %3197 = lshr i32 %3178, 31
  %3198 = trunc i32 %3197 to i8
  %3199 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3198, i8* %3199, align 1
  %3200 = lshr i32 %3177, 31
  %3201 = xor i32 %3200, 1
  %3202 = xor i32 %3197, %3200
  %3203 = add i32 %3202, %3201
  %3204 = icmp eq i32 %3203, 2
  %3205 = zext i1 %3204 to i8
  %3206 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3205, i8* %3206, align 1
  store %struct.Memory* %loadMem_400c22, %struct.Memory** %MEMORY
  %loadMem_400c2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3208 = getelementptr inbounds %struct.GPR, %struct.GPR* %3207, i32 0, i32 33
  %3209 = getelementptr inbounds %struct.Reg, %struct.Reg* %3208, i32 0, i32 0
  %PC.i1718 = bitcast %union.anon* %3209 to i64*
  %3210 = load i64, i64* %PC.i1718
  %3211 = add i64 %3210, 40
  %3212 = load i64, i64* %PC.i1718
  %3213 = add i64 %3212, 6
  %3214 = load i64, i64* %PC.i1718
  %3215 = add i64 %3214, 6
  store i64 %3215, i64* %PC.i1718
  %3216 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3217 = load i8, i8* %3216, align 1
  store i8 %3217, i8* %BRANCH_TAKEN, align 1
  %3218 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3219 = icmp ne i8 %3217, 0
  %3220 = select i1 %3219, i64 %3211, i64 %3213
  store i64 %3220, i64* %3218, align 8
  store %struct.Memory* %loadMem_400c2a, %struct.Memory** %MEMORY
  %loadBr_400c2a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400c2a = icmp eq i8 %loadBr_400c2a, 1
  br i1 %cmpBr_400c2a, label %block_.L_400c52, label %block_400c30

block_400c30:                                     ; preds = %block_.L_400c15
  %loadMem_400c30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3222 = getelementptr inbounds %struct.GPR, %struct.GPR* %3221, i32 0, i32 33
  %3223 = getelementptr inbounds %struct.Reg, %struct.Reg* %3222, i32 0, i32 0
  %PC.i1715 = bitcast %union.anon* %3223 to i64*
  %3224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3225 = getelementptr inbounds %struct.GPR, %struct.GPR* %3224, i32 0, i32 1
  %3226 = getelementptr inbounds %struct.Reg, %struct.Reg* %3225, i32 0, i32 0
  %RAX.i1716 = bitcast %union.anon* %3226 to i64*
  %3227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3228 = getelementptr inbounds %struct.GPR, %struct.GPR* %3227, i32 0, i32 15
  %3229 = getelementptr inbounds %struct.Reg, %struct.Reg* %3228, i32 0, i32 0
  %RBP.i1717 = bitcast %union.anon* %3229 to i64*
  %3230 = load i64, i64* %RBP.i1717
  %3231 = sub i64 %3230, 16
  %3232 = load i64, i64* %PC.i1715
  %3233 = add i64 %3232, 4
  store i64 %3233, i64* %PC.i1715
  %3234 = inttoptr i64 %3231 to i32*
  %3235 = load i32, i32* %3234
  %3236 = sext i32 %3235 to i64
  store i64 %3236, i64* %RAX.i1716, align 8
  store %struct.Memory* %loadMem_400c30, %struct.Memory** %MEMORY
  %loadMem_400c34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3238 = getelementptr inbounds %struct.GPR, %struct.GPR* %3237, i32 0, i32 33
  %3239 = getelementptr inbounds %struct.Reg, %struct.Reg* %3238, i32 0, i32 0
  %PC.i1711 = bitcast %union.anon* %3239 to i64*
  %3240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3241 = getelementptr inbounds %struct.GPR, %struct.GPR* %3240, i32 0, i32 1
  %3242 = getelementptr inbounds %struct.Reg, %struct.Reg* %3241, i32 0, i32 0
  %RAX.i1712 = bitcast %union.anon* %3242 to i64*
  %3243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3244 = getelementptr inbounds %struct.GPR, %struct.GPR* %3243, i32 0, i32 5
  %3245 = getelementptr inbounds %struct.Reg, %struct.Reg* %3244, i32 0, i32 0
  %RCX.i1713 = bitcast %union.anon* %3245 to i64*
  %3246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3247 = getelementptr inbounds %struct.GPR, %struct.GPR* %3246, i32 0, i32 15
  %3248 = getelementptr inbounds %struct.Reg, %struct.Reg* %3247, i32 0, i32 0
  %RBP.i1714 = bitcast %union.anon* %3248 to i64*
  %3249 = load i64, i64* %RBP.i1714
  %3250 = load i64, i64* %RAX.i1712
  %3251 = mul i64 %3250, 4
  %3252 = add i64 %3249, -1408
  %3253 = add i64 %3252, %3251
  %3254 = load i64, i64* %PC.i1711
  %3255 = add i64 %3254, 7
  store i64 %3255, i64* %PC.i1711
  %3256 = inttoptr i64 %3253 to i32*
  %3257 = load i32, i32* %3256
  %3258 = zext i32 %3257 to i64
  store i64 %3258, i64* %RCX.i1713, align 8
  store %struct.Memory* %loadMem_400c34, %struct.Memory** %MEMORY
  %loadMem_400c3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3260 = getelementptr inbounds %struct.GPR, %struct.GPR* %3259, i32 0, i32 33
  %3261 = getelementptr inbounds %struct.Reg, %struct.Reg* %3260, i32 0, i32 0
  %PC.i1708 = bitcast %union.anon* %3261 to i64*
  %3262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3263 = getelementptr inbounds %struct.GPR, %struct.GPR* %3262, i32 0, i32 1
  %3264 = getelementptr inbounds %struct.Reg, %struct.Reg* %3263, i32 0, i32 0
  %RAX.i1709 = bitcast %union.anon* %3264 to i64*
  %3265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3266 = getelementptr inbounds %struct.GPR, %struct.GPR* %3265, i32 0, i32 15
  %3267 = getelementptr inbounds %struct.Reg, %struct.Reg* %3266, i32 0, i32 0
  %RBP.i1710 = bitcast %union.anon* %3267 to i64*
  %3268 = load i64, i64* %RBP.i1710
  %3269 = sub i64 %3268, 8
  %3270 = load i64, i64* %PC.i1708
  %3271 = add i64 %3270, 4
  store i64 %3271, i64* %PC.i1708
  %3272 = inttoptr i64 %3269 to i32*
  %3273 = load i32, i32* %3272
  %3274 = sext i32 %3273 to i64
  store i64 %3274, i64* %RAX.i1709, align 8
  store %struct.Memory* %loadMem_400c3b, %struct.Memory** %MEMORY
  %loadMem_400c3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3276 = getelementptr inbounds %struct.GPR, %struct.GPR* %3275, i32 0, i32 33
  %3277 = getelementptr inbounds %struct.Reg, %struct.Reg* %3276, i32 0, i32 0
  %PC.i1704 = bitcast %union.anon* %3277 to i64*
  %3278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3279 = getelementptr inbounds %struct.GPR, %struct.GPR* %3278, i32 0, i32 5
  %3280 = getelementptr inbounds %struct.Reg, %struct.Reg* %3279, i32 0, i32 0
  %ECX.i1705 = bitcast %union.anon* %3280 to i32*
  %3281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3282 = getelementptr inbounds %struct.GPR, %struct.GPR* %3281, i32 0, i32 1
  %3283 = getelementptr inbounds %struct.Reg, %struct.Reg* %3282, i32 0, i32 0
  %RAX.i1706 = bitcast %union.anon* %3283 to i64*
  %3284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3285 = getelementptr inbounds %struct.GPR, %struct.GPR* %3284, i32 0, i32 15
  %3286 = getelementptr inbounds %struct.Reg, %struct.Reg* %3285, i32 0, i32 0
  %RBP.i1707 = bitcast %union.anon* %3286 to i64*
  %3287 = load i32, i32* %ECX.i1705
  %3288 = zext i32 %3287 to i64
  %3289 = load i64, i64* %RBP.i1707
  %3290 = load i64, i64* %RAX.i1706
  %3291 = mul i64 %3290, 4
  %3292 = add i64 %3289, -1408
  %3293 = add i64 %3292, %3291
  %3294 = load i64, i64* %PC.i1704
  %3295 = add i64 %3294, 7
  store i64 %3295, i64* %PC.i1704
  %3296 = inttoptr i64 %3293 to i32*
  %3297 = load i32, i32* %3296
  %3298 = sub i32 %3287, %3297
  %3299 = icmp ult i32 %3287, %3297
  %3300 = zext i1 %3299 to i8
  %3301 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3300, i8* %3301, align 1
  %3302 = and i32 %3298, 255
  %3303 = call i32 @llvm.ctpop.i32(i32 %3302)
  %3304 = trunc i32 %3303 to i8
  %3305 = and i8 %3304, 1
  %3306 = xor i8 %3305, 1
  %3307 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3306, i8* %3307, align 1
  %3308 = xor i32 %3297, %3287
  %3309 = xor i32 %3308, %3298
  %3310 = lshr i32 %3309, 4
  %3311 = trunc i32 %3310 to i8
  %3312 = and i8 %3311, 1
  %3313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3312, i8* %3313, align 1
  %3314 = icmp eq i32 %3298, 0
  %3315 = zext i1 %3314 to i8
  %3316 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3315, i8* %3316, align 1
  %3317 = lshr i32 %3298, 31
  %3318 = trunc i32 %3317 to i8
  %3319 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3318, i8* %3319, align 1
  %3320 = lshr i32 %3287, 31
  %3321 = lshr i32 %3297, 31
  %3322 = xor i32 %3321, %3320
  %3323 = xor i32 %3317, %3320
  %3324 = add i32 %3323, %3322
  %3325 = icmp eq i32 %3324, 2
  %3326 = zext i1 %3325 to i8
  %3327 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3326, i8* %3327, align 1
  store %struct.Memory* %loadMem_400c3f, %struct.Memory** %MEMORY
  %loadMem_400c46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3329 = getelementptr inbounds %struct.GPR, %struct.GPR* %3328, i32 0, i32 33
  %3330 = getelementptr inbounds %struct.Reg, %struct.Reg* %3329, i32 0, i32 0
  %PC.i1703 = bitcast %union.anon* %3330 to i64*
  %3331 = load i64, i64* %PC.i1703
  %3332 = add i64 %3331, 12
  %3333 = load i64, i64* %PC.i1703
  %3334 = add i64 %3333, 6
  %3335 = load i64, i64* %PC.i1703
  %3336 = add i64 %3335, 6
  store i64 %3336, i64* %PC.i1703
  %3337 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3338 = load i8, i8* %3337, align 1
  %3339 = icmp ne i8 %3338, 0
  %3340 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3341 = load i8, i8* %3340, align 1
  %3342 = icmp ne i8 %3341, 0
  %3343 = xor i1 %3339, %3342
  %3344 = xor i1 %3343, true
  %3345 = zext i1 %3344 to i8
  store i8 %3345, i8* %BRANCH_TAKEN, align 1
  %3346 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3347 = select i1 %3343, i64 %3334, i64 %3332
  store i64 %3347, i64* %3346, align 8
  store %struct.Memory* %loadMem_400c46, %struct.Memory** %MEMORY
  %loadBr_400c46 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400c46 = icmp eq i8 %loadBr_400c46, 1
  br i1 %cmpBr_400c46, label %block_.L_400c52, label %block_400c4c

block_400c4c:                                     ; preds = %block_400c30
  %loadMem_400c4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3349 = getelementptr inbounds %struct.GPR, %struct.GPR* %3348, i32 0, i32 33
  %3350 = getelementptr inbounds %struct.Reg, %struct.Reg* %3349, i32 0, i32 0
  %PC.i1700 = bitcast %union.anon* %3350 to i64*
  %3351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3352 = getelementptr inbounds %struct.GPR, %struct.GPR* %3351, i32 0, i32 1
  %3353 = getelementptr inbounds %struct.Reg, %struct.Reg* %3352, i32 0, i32 0
  %RAX.i1701 = bitcast %union.anon* %3353 to i64*
  %3354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3355 = getelementptr inbounds %struct.GPR, %struct.GPR* %3354, i32 0, i32 15
  %3356 = getelementptr inbounds %struct.Reg, %struct.Reg* %3355, i32 0, i32 0
  %RBP.i1702 = bitcast %union.anon* %3356 to i64*
  %3357 = load i64, i64* %RBP.i1702
  %3358 = sub i64 %3357, 8
  %3359 = load i64, i64* %PC.i1700
  %3360 = add i64 %3359, 3
  store i64 %3360, i64* %PC.i1700
  %3361 = inttoptr i64 %3358 to i32*
  %3362 = load i32, i32* %3361
  %3363 = zext i32 %3362 to i64
  store i64 %3363, i64* %RAX.i1701, align 8
  store %struct.Memory* %loadMem_400c4c, %struct.Memory** %MEMORY
  %loadMem_400c4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3365 = getelementptr inbounds %struct.GPR, %struct.GPR* %3364, i32 0, i32 33
  %3366 = getelementptr inbounds %struct.Reg, %struct.Reg* %3365, i32 0, i32 0
  %PC.i1697 = bitcast %union.anon* %3366 to i64*
  %3367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3368 = getelementptr inbounds %struct.GPR, %struct.GPR* %3367, i32 0, i32 1
  %3369 = getelementptr inbounds %struct.Reg, %struct.Reg* %3368, i32 0, i32 0
  %EAX.i1698 = bitcast %union.anon* %3369 to i32*
  %3370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3371 = getelementptr inbounds %struct.GPR, %struct.GPR* %3370, i32 0, i32 15
  %3372 = getelementptr inbounds %struct.Reg, %struct.Reg* %3371, i32 0, i32 0
  %RBP.i1699 = bitcast %union.anon* %3372 to i64*
  %3373 = load i64, i64* %RBP.i1699
  %3374 = sub i64 %3373, 16
  %3375 = load i32, i32* %EAX.i1698
  %3376 = zext i32 %3375 to i64
  %3377 = load i64, i64* %PC.i1697
  %3378 = add i64 %3377, 3
  store i64 %3378, i64* %PC.i1697
  %3379 = inttoptr i64 %3374 to i32*
  store i32 %3375, i32* %3379
  store %struct.Memory* %loadMem_400c4f, %struct.Memory** %MEMORY
  br label %block_.L_400c52

block_.L_400c52:                                  ; preds = %block_400c4c, %block_400c30, %block_.L_400c15
  %loadMem_400c52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3381 = getelementptr inbounds %struct.GPR, %struct.GPR* %3380, i32 0, i32 33
  %3382 = getelementptr inbounds %struct.Reg, %struct.Reg* %3381, i32 0, i32 0
  %PC.i1696 = bitcast %union.anon* %3382 to i64*
  %3383 = load i64, i64* %PC.i1696
  %3384 = add i64 %3383, 5
  %3385 = load i64, i64* %PC.i1696
  %3386 = add i64 %3385, 5
  store i64 %3386, i64* %PC.i1696
  %3387 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3384, i64* %3387, align 8
  store %struct.Memory* %loadMem_400c52, %struct.Memory** %MEMORY
  br label %block_.L_400c57

block_.L_400c57:                                  ; preds = %block_.L_400c52
  %loadMem_400c57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3389 = getelementptr inbounds %struct.GPR, %struct.GPR* %3388, i32 0, i32 33
  %3390 = getelementptr inbounds %struct.Reg, %struct.Reg* %3389, i32 0, i32 0
  %PC.i1694 = bitcast %union.anon* %3390 to i64*
  %3391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3392 = getelementptr inbounds %struct.GPR, %struct.GPR* %3391, i32 0, i32 15
  %3393 = getelementptr inbounds %struct.Reg, %struct.Reg* %3392, i32 0, i32 0
  %RBP.i1695 = bitcast %union.anon* %3393 to i64*
  %3394 = load i64, i64* %RBP.i1695
  %3395 = sub i64 %3394, 8
  %3396 = load i64, i64* %PC.i1694
  %3397 = add i64 %3396, 4
  store i64 %3397, i64* %PC.i1694
  %3398 = inttoptr i64 %3395 to i32*
  %3399 = load i32, i32* %3398
  %3400 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3400, align 1
  %3401 = and i32 %3399, 255
  %3402 = call i32 @llvm.ctpop.i32(i32 %3401)
  %3403 = trunc i32 %3402 to i8
  %3404 = and i8 %3403, 1
  %3405 = xor i8 %3404, 1
  %3406 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3405, i8* %3406, align 1
  %3407 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3407, align 1
  %3408 = icmp eq i32 %3399, 0
  %3409 = zext i1 %3408 to i8
  %3410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3409, i8* %3410, align 1
  %3411 = lshr i32 %3399, 31
  %3412 = trunc i32 %3411 to i8
  %3413 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3412, i8* %3413, align 1
  %3414 = lshr i32 %3399, 31
  %3415 = xor i32 %3411, %3414
  %3416 = add i32 %3415, %3414
  %3417 = icmp eq i32 %3416, 2
  %3418 = zext i1 %3417 to i8
  %3419 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3418, i8* %3419, align 1
  store %struct.Memory* %loadMem_400c57, %struct.Memory** %MEMORY
  %loadMem_400c5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3421 = getelementptr inbounds %struct.GPR, %struct.GPR* %3420, i32 0, i32 33
  %3422 = getelementptr inbounds %struct.Reg, %struct.Reg* %3421, i32 0, i32 0
  %PC.i1693 = bitcast %union.anon* %3422 to i64*
  %3423 = load i64, i64* %PC.i1693
  %3424 = add i64 %3423, -70
  %3425 = load i64, i64* %PC.i1693
  %3426 = add i64 %3425, 6
  %3427 = load i64, i64* %PC.i1693
  %3428 = add i64 %3427, 6
  store i64 %3428, i64* %PC.i1693
  %3429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3430 = load i8, i8* %3429, align 1
  %3431 = icmp eq i8 %3430, 0
  %3432 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3433 = load i8, i8* %3432, align 1
  %3434 = icmp ne i8 %3433, 0
  %3435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3436 = load i8, i8* %3435, align 1
  %3437 = icmp ne i8 %3436, 0
  %3438 = xor i1 %3434, %3437
  %3439 = xor i1 %3438, true
  %3440 = and i1 %3431, %3439
  %3441 = zext i1 %3440 to i8
  store i8 %3441, i8* %BRANCH_TAKEN, align 1
  %3442 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3443 = select i1 %3440, i64 %3424, i64 %3426
  store i64 %3443, i64* %3442, align 8
  store %struct.Memory* %loadMem_400c5b, %struct.Memory** %MEMORY
  %loadBr_400c5b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400c5b = icmp eq i8 %loadBr_400c5b, 1
  br i1 %cmpBr_400c5b, label %block_.L_400c15, label %block_400c61

block_400c61:                                     ; preds = %block_.L_400c57
  %loadMem_400c61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3445 = getelementptr inbounds %struct.GPR, %struct.GPR* %3444, i32 0, i32 33
  %3446 = getelementptr inbounds %struct.Reg, %struct.Reg* %3445, i32 0, i32 0
  %PC.i1692 = bitcast %union.anon* %3446 to i64*
  %3447 = load i64, i64* %PC.i1692
  %3448 = add i64 %3447, 5
  %3449 = load i64, i64* %PC.i1692
  %3450 = add i64 %3449, 5
  store i64 %3450, i64* %PC.i1692
  %3451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3448, i64* %3451, align 8
  store %struct.Memory* %loadMem_400c61, %struct.Memory** %MEMORY
  br label %block_.L_400c66

block_.L_400c66:                                  ; preds = %block_400c61, %block_.L_400c05
  %loadMem_400c66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3453 = getelementptr inbounds %struct.GPR, %struct.GPR* %3452, i32 0, i32 33
  %3454 = getelementptr inbounds %struct.Reg, %struct.Reg* %3453, i32 0, i32 0
  %PC.i1689 = bitcast %union.anon* %3454 to i64*
  %3455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3456 = getelementptr inbounds %struct.GPR, %struct.GPR* %3455, i32 0, i32 1
  %3457 = getelementptr inbounds %struct.Reg, %struct.Reg* %3456, i32 0, i32 0
  %RAX.i1690 = bitcast %union.anon* %3457 to i64*
  %3458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3459 = getelementptr inbounds %struct.GPR, %struct.GPR* %3458, i32 0, i32 15
  %3460 = getelementptr inbounds %struct.Reg, %struct.Reg* %3459, i32 0, i32 0
  %RBP.i1691 = bitcast %union.anon* %3460 to i64*
  %3461 = load i64, i64* %RBP.i1691
  %3462 = sub i64 %3461, 12
  %3463 = load i64, i64* %PC.i1689
  %3464 = add i64 %3463, 4
  store i64 %3464, i64* %PC.i1689
  %3465 = inttoptr i64 %3462 to i32*
  %3466 = load i32, i32* %3465
  %3467 = sext i32 %3466 to i64
  store i64 %3467, i64* %RAX.i1690, align 8
  store %struct.Memory* %loadMem_400c66, %struct.Memory** %MEMORY
  %loadMem_400c6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3469 = getelementptr inbounds %struct.GPR, %struct.GPR* %3468, i32 0, i32 33
  %3470 = getelementptr inbounds %struct.Reg, %struct.Reg* %3469, i32 0, i32 0
  %PC.i1685 = bitcast %union.anon* %3470 to i64*
  %3471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3472 = getelementptr inbounds %struct.GPR, %struct.GPR* %3471, i32 0, i32 1
  %3473 = getelementptr inbounds %struct.Reg, %struct.Reg* %3472, i32 0, i32 0
  %RAX.i1686 = bitcast %union.anon* %3473 to i64*
  %3474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3475 = getelementptr inbounds %struct.GPR, %struct.GPR* %3474, i32 0, i32 5
  %3476 = getelementptr inbounds %struct.Reg, %struct.Reg* %3475, i32 0, i32 0
  %RCX.i1687 = bitcast %union.anon* %3476 to i64*
  %3477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3478 = getelementptr inbounds %struct.GPR, %struct.GPR* %3477, i32 0, i32 15
  %3479 = getelementptr inbounds %struct.Reg, %struct.Reg* %3478, i32 0, i32 0
  %RBP.i1688 = bitcast %union.anon* %3479 to i64*
  %3480 = load i64, i64* %RBP.i1688
  %3481 = load i64, i64* %RAX.i1686
  %3482 = mul i64 %3481, 4
  %3483 = add i64 %3480, -1328
  %3484 = add i64 %3483, %3482
  %3485 = load i64, i64* %PC.i1685
  %3486 = add i64 %3485, 7
  store i64 %3486, i64* %PC.i1685
  %3487 = inttoptr i64 %3484 to i32*
  %3488 = load i32, i32* %3487
  %3489 = zext i32 %3488 to i64
  store i64 %3489, i64* %RCX.i1687, align 8
  store %struct.Memory* %loadMem_400c6a, %struct.Memory** %MEMORY
  %loadMem_400c71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3491 = getelementptr inbounds %struct.GPR, %struct.GPR* %3490, i32 0, i32 33
  %3492 = getelementptr inbounds %struct.Reg, %struct.Reg* %3491, i32 0, i32 0
  %PC.i1682 = bitcast %union.anon* %3492 to i64*
  %3493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3494 = getelementptr inbounds %struct.GPR, %struct.GPR* %3493, i32 0, i32 1
  %3495 = getelementptr inbounds %struct.Reg, %struct.Reg* %3494, i32 0, i32 0
  %RAX.i1683 = bitcast %union.anon* %3495 to i64*
  %3496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3497 = getelementptr inbounds %struct.GPR, %struct.GPR* %3496, i32 0, i32 15
  %3498 = getelementptr inbounds %struct.Reg, %struct.Reg* %3497, i32 0, i32 0
  %RBP.i1684 = bitcast %union.anon* %3498 to i64*
  %3499 = load i64, i64* %RBP.i1684
  %3500 = sub i64 %3499, 16
  %3501 = load i64, i64* %PC.i1682
  %3502 = add i64 %3501, 4
  store i64 %3502, i64* %PC.i1682
  %3503 = inttoptr i64 %3500 to i32*
  %3504 = load i32, i32* %3503
  %3505 = sext i32 %3504 to i64
  store i64 %3505, i64* %RAX.i1683, align 8
  store %struct.Memory* %loadMem_400c71, %struct.Memory** %MEMORY
  %loadMem_400c75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3507 = getelementptr inbounds %struct.GPR, %struct.GPR* %3506, i32 0, i32 33
  %3508 = getelementptr inbounds %struct.Reg, %struct.Reg* %3507, i32 0, i32 0
  %PC.i1678 = bitcast %union.anon* %3508 to i64*
  %3509 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3510 = getelementptr inbounds %struct.GPR, %struct.GPR* %3509, i32 0, i32 1
  %3511 = getelementptr inbounds %struct.Reg, %struct.Reg* %3510, i32 0, i32 0
  %RAX.i1679 = bitcast %union.anon* %3511 to i64*
  %3512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3513 = getelementptr inbounds %struct.GPR, %struct.GPR* %3512, i32 0, i32 7
  %3514 = getelementptr inbounds %struct.Reg, %struct.Reg* %3513, i32 0, i32 0
  %RDX.i1680 = bitcast %union.anon* %3514 to i64*
  %3515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3516 = getelementptr inbounds %struct.GPR, %struct.GPR* %3515, i32 0, i32 15
  %3517 = getelementptr inbounds %struct.Reg, %struct.Reg* %3516, i32 0, i32 0
  %RBP.i1681 = bitcast %union.anon* %3517 to i64*
  %3518 = load i64, i64* %RBP.i1681
  %3519 = load i64, i64* %RAX.i1679
  %3520 = mul i64 %3519, 4
  %3521 = add i64 %3518, -1328
  %3522 = add i64 %3521, %3520
  %3523 = load i64, i64* %PC.i1678
  %3524 = add i64 %3523, 7
  store i64 %3524, i64* %PC.i1678
  %3525 = inttoptr i64 %3522 to i32*
  %3526 = load i32, i32* %3525
  %3527 = zext i32 %3526 to i64
  store i64 %3527, i64* %RDX.i1680, align 8
  store %struct.Memory* %loadMem_400c75, %struct.Memory** %MEMORY
  %loadMem_400c7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3529 = getelementptr inbounds %struct.GPR, %struct.GPR* %3528, i32 0, i32 33
  %3530 = getelementptr inbounds %struct.Reg, %struct.Reg* %3529, i32 0, i32 0
  %PC.i1675 = bitcast %union.anon* %3530 to i64*
  %3531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3532 = getelementptr inbounds %struct.GPR, %struct.GPR* %3531, i32 0, i32 7
  %3533 = getelementptr inbounds %struct.Reg, %struct.Reg* %3532, i32 0, i32 0
  %RDX.i1676 = bitcast %union.anon* %3533 to i64*
  %3534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3535 = getelementptr inbounds %struct.GPR, %struct.GPR* %3534, i32 0, i32 15
  %3536 = getelementptr inbounds %struct.Reg, %struct.Reg* %3535, i32 0, i32 0
  %RBP.i1677 = bitcast %union.anon* %3536 to i64*
  %3537 = load i64, i64* %RDX.i1676
  %3538 = load i64, i64* %RBP.i1677
  %3539 = sub i64 %3538, 12
  %3540 = load i64, i64* %PC.i1675
  %3541 = add i64 %3540, 3
  store i64 %3541, i64* %PC.i1675
  %3542 = trunc i64 %3537 to i32
  %3543 = inttoptr i64 %3539 to i32*
  %3544 = load i32, i32* %3543
  %3545 = add i32 %3544, %3542
  %3546 = zext i32 %3545 to i64
  store i64 %3546, i64* %RDX.i1676, align 8
  %3547 = icmp ult i32 %3545, %3542
  %3548 = icmp ult i32 %3545, %3544
  %3549 = or i1 %3547, %3548
  %3550 = zext i1 %3549 to i8
  %3551 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3550, i8* %3551, align 1
  %3552 = and i32 %3545, 255
  %3553 = call i32 @llvm.ctpop.i32(i32 %3552)
  %3554 = trunc i32 %3553 to i8
  %3555 = and i8 %3554, 1
  %3556 = xor i8 %3555, 1
  %3557 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3556, i8* %3557, align 1
  %3558 = xor i32 %3544, %3542
  %3559 = xor i32 %3558, %3545
  %3560 = lshr i32 %3559, 4
  %3561 = trunc i32 %3560 to i8
  %3562 = and i8 %3561, 1
  %3563 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3562, i8* %3563, align 1
  %3564 = icmp eq i32 %3545, 0
  %3565 = zext i1 %3564 to i8
  %3566 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3565, i8* %3566, align 1
  %3567 = lshr i32 %3545, 31
  %3568 = trunc i32 %3567 to i8
  %3569 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3568, i8* %3569, align 1
  %3570 = lshr i32 %3542, 31
  %3571 = lshr i32 %3544, 31
  %3572 = xor i32 %3567, %3570
  %3573 = xor i32 %3567, %3571
  %3574 = add i32 %3572, %3573
  %3575 = icmp eq i32 %3574, 2
  %3576 = zext i1 %3575 to i8
  %3577 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3576, i8* %3577, align 1
  store %struct.Memory* %loadMem_400c7c, %struct.Memory** %MEMORY
  %loadMem_400c7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3579 = getelementptr inbounds %struct.GPR, %struct.GPR* %3578, i32 0, i32 33
  %3580 = getelementptr inbounds %struct.Reg, %struct.Reg* %3579, i32 0, i32 0
  %PC.i1672 = bitcast %union.anon* %3580 to i64*
  %3581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3582 = getelementptr inbounds %struct.GPR, %struct.GPR* %3581, i32 0, i32 7
  %3583 = getelementptr inbounds %struct.Reg, %struct.Reg* %3582, i32 0, i32 0
  %RDX.i1673 = bitcast %union.anon* %3583 to i64*
  %3584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3585 = getelementptr inbounds %struct.GPR, %struct.GPR* %3584, i32 0, i32 15
  %3586 = getelementptr inbounds %struct.Reg, %struct.Reg* %3585, i32 0, i32 0
  %RBP.i1674 = bitcast %union.anon* %3586 to i64*
  %3587 = load i64, i64* %RDX.i1673
  %3588 = load i64, i64* %RBP.i1674
  %3589 = sub i64 %3588, 16
  %3590 = load i64, i64* %PC.i1672
  %3591 = add i64 %3590, 3
  store i64 %3591, i64* %PC.i1672
  %3592 = trunc i64 %3587 to i32
  %3593 = inttoptr i64 %3589 to i32*
  %3594 = load i32, i32* %3593
  %3595 = sub i32 %3592, %3594
  %3596 = zext i32 %3595 to i64
  store i64 %3596, i64* %RDX.i1673, align 8
  %3597 = icmp ult i32 %3592, %3594
  %3598 = zext i1 %3597 to i8
  %3599 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3598, i8* %3599, align 1
  %3600 = and i32 %3595, 255
  %3601 = call i32 @llvm.ctpop.i32(i32 %3600)
  %3602 = trunc i32 %3601 to i8
  %3603 = and i8 %3602, 1
  %3604 = xor i8 %3603, 1
  %3605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3604, i8* %3605, align 1
  %3606 = xor i32 %3594, %3592
  %3607 = xor i32 %3606, %3595
  %3608 = lshr i32 %3607, 4
  %3609 = trunc i32 %3608 to i8
  %3610 = and i8 %3609, 1
  %3611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3610, i8* %3611, align 1
  %3612 = icmp eq i32 %3595, 0
  %3613 = zext i1 %3612 to i8
  %3614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3613, i8* %3614, align 1
  %3615 = lshr i32 %3595, 31
  %3616 = trunc i32 %3615 to i8
  %3617 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3616, i8* %3617, align 1
  %3618 = lshr i32 %3592, 31
  %3619 = lshr i32 %3594, 31
  %3620 = xor i32 %3619, %3618
  %3621 = xor i32 %3615, %3618
  %3622 = add i32 %3621, %3620
  %3623 = icmp eq i32 %3622, 2
  %3624 = zext i1 %3623 to i8
  %3625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3624, i8* %3625, align 1
  store %struct.Memory* %loadMem_400c7f, %struct.Memory** %MEMORY
  %loadMem_400c82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3626 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3627 = getelementptr inbounds %struct.GPR, %struct.GPR* %3626, i32 0, i32 33
  %3628 = getelementptr inbounds %struct.Reg, %struct.Reg* %3627, i32 0, i32 0
  %PC.i1669 = bitcast %union.anon* %3628 to i64*
  %3629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3630 = getelementptr inbounds %struct.GPR, %struct.GPR* %3629, i32 0, i32 5
  %3631 = getelementptr inbounds %struct.Reg, %struct.Reg* %3630, i32 0, i32 0
  %ECX.i1670 = bitcast %union.anon* %3631 to i32*
  %3632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3633 = getelementptr inbounds %struct.GPR, %struct.GPR* %3632, i32 0, i32 7
  %3634 = getelementptr inbounds %struct.Reg, %struct.Reg* %3633, i32 0, i32 0
  %EDX.i1671 = bitcast %union.anon* %3634 to i32*
  %3635 = load i32, i32* %ECX.i1670
  %3636 = zext i32 %3635 to i64
  %3637 = load i32, i32* %EDX.i1671
  %3638 = zext i32 %3637 to i64
  %3639 = load i64, i64* %PC.i1669
  %3640 = add i64 %3639, 2
  store i64 %3640, i64* %PC.i1669
  %3641 = sub i32 %3635, %3637
  %3642 = icmp ult i32 %3635, %3637
  %3643 = zext i1 %3642 to i8
  %3644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3643, i8* %3644, align 1
  %3645 = and i32 %3641, 255
  %3646 = call i32 @llvm.ctpop.i32(i32 %3645)
  %3647 = trunc i32 %3646 to i8
  %3648 = and i8 %3647, 1
  %3649 = xor i8 %3648, 1
  %3650 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3649, i8* %3650, align 1
  %3651 = xor i64 %3638, %3636
  %3652 = trunc i64 %3651 to i32
  %3653 = xor i32 %3652, %3641
  %3654 = lshr i32 %3653, 4
  %3655 = trunc i32 %3654 to i8
  %3656 = and i8 %3655, 1
  %3657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3656, i8* %3657, align 1
  %3658 = icmp eq i32 %3641, 0
  %3659 = zext i1 %3658 to i8
  %3660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3659, i8* %3660, align 1
  %3661 = lshr i32 %3641, 31
  %3662 = trunc i32 %3661 to i8
  %3663 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3662, i8* %3663, align 1
  %3664 = lshr i32 %3635, 31
  %3665 = lshr i32 %3637, 31
  %3666 = xor i32 %3665, %3664
  %3667 = xor i32 %3661, %3664
  %3668 = add i32 %3667, %3666
  %3669 = icmp eq i32 %3668, 2
  %3670 = zext i1 %3669 to i8
  %3671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3670, i8* %3671, align 1
  store %struct.Memory* %loadMem_400c82, %struct.Memory** %MEMORY
  %loadMem_400c84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3673 = getelementptr inbounds %struct.GPR, %struct.GPR* %3672, i32 0, i32 33
  %3674 = getelementptr inbounds %struct.Reg, %struct.Reg* %3673, i32 0, i32 0
  %PC.i1668 = bitcast %union.anon* %3674 to i64*
  %3675 = load i64, i64* %PC.i1668
  %3676 = add i64 %3675, 38
  %3677 = load i64, i64* %PC.i1668
  %3678 = add i64 %3677, 6
  %3679 = load i64, i64* %PC.i1668
  %3680 = add i64 %3679, 6
  store i64 %3680, i64* %PC.i1668
  %3681 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3682 = load i8, i8* %3681, align 1
  %3683 = icmp ne i8 %3682, 0
  %3684 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3685 = load i8, i8* %3684, align 1
  %3686 = icmp ne i8 %3685, 0
  %3687 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3688 = load i8, i8* %3687, align 1
  %3689 = icmp ne i8 %3688, 0
  %3690 = xor i1 %3686, %3689
  %3691 = or i1 %3683, %3690
  %3692 = zext i1 %3691 to i8
  store i8 %3692, i8* %BRANCH_TAKEN, align 1
  %3693 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3694 = select i1 %3691, i64 %3676, i64 %3678
  store i64 %3694, i64* %3693, align 8
  store %struct.Memory* %loadMem_400c84, %struct.Memory** %MEMORY
  %loadBr_400c84 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400c84 = icmp eq i8 %loadBr_400c84, 1
  br i1 %cmpBr_400c84, label %block_.L_400caa, label %block_400c8a

block_400c8a:                                     ; preds = %block_.L_400c66
  %loadMem_400c8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3696 = getelementptr inbounds %struct.GPR, %struct.GPR* %3695, i32 0, i32 33
  %3697 = getelementptr inbounds %struct.Reg, %struct.Reg* %3696, i32 0, i32 0
  %PC.i1665 = bitcast %union.anon* %3697 to i64*
  %3698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3699 = getelementptr inbounds %struct.GPR, %struct.GPR* %3698, i32 0, i32 1
  %3700 = getelementptr inbounds %struct.Reg, %struct.Reg* %3699, i32 0, i32 0
  %RAX.i1666 = bitcast %union.anon* %3700 to i64*
  %3701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3702 = getelementptr inbounds %struct.GPR, %struct.GPR* %3701, i32 0, i32 15
  %3703 = getelementptr inbounds %struct.Reg, %struct.Reg* %3702, i32 0, i32 0
  %RBP.i1667 = bitcast %union.anon* %3703 to i64*
  %3704 = load i64, i64* %RBP.i1667
  %3705 = sub i64 %3704, 12
  %3706 = load i64, i64* %PC.i1665
  %3707 = add i64 %3706, 4
  store i64 %3707, i64* %PC.i1665
  %3708 = inttoptr i64 %3705 to i32*
  %3709 = load i32, i32* %3708
  %3710 = sext i32 %3709 to i64
  store i64 %3710, i64* %RAX.i1666, align 8
  store %struct.Memory* %loadMem_400c8a, %struct.Memory** %MEMORY
  %loadMem_400c8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3712 = getelementptr inbounds %struct.GPR, %struct.GPR* %3711, i32 0, i32 33
  %3713 = getelementptr inbounds %struct.Reg, %struct.Reg* %3712, i32 0, i32 0
  %PC.i1661 = bitcast %union.anon* %3713 to i64*
  %3714 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3715 = getelementptr inbounds %struct.GPR, %struct.GPR* %3714, i32 0, i32 1
  %3716 = getelementptr inbounds %struct.Reg, %struct.Reg* %3715, i32 0, i32 0
  %RAX.i1662 = bitcast %union.anon* %3716 to i64*
  %3717 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3718 = getelementptr inbounds %struct.GPR, %struct.GPR* %3717, i32 0, i32 5
  %3719 = getelementptr inbounds %struct.Reg, %struct.Reg* %3718, i32 0, i32 0
  %RCX.i1663 = bitcast %union.anon* %3719 to i64*
  %3720 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3721 = getelementptr inbounds %struct.GPR, %struct.GPR* %3720, i32 0, i32 15
  %3722 = getelementptr inbounds %struct.Reg, %struct.Reg* %3721, i32 0, i32 0
  %RBP.i1664 = bitcast %union.anon* %3722 to i64*
  %3723 = load i64, i64* %RBP.i1664
  %3724 = load i64, i64* %RAX.i1662
  %3725 = mul i64 %3724, 4
  %3726 = add i64 %3723, -1328
  %3727 = add i64 %3726, %3725
  %3728 = load i64, i64* %PC.i1661
  %3729 = add i64 %3728, 7
  store i64 %3729, i64* %PC.i1661
  %3730 = inttoptr i64 %3727 to i32*
  %3731 = load i32, i32* %3730
  %3732 = zext i32 %3731 to i64
  store i64 %3732, i64* %RCX.i1663, align 8
  store %struct.Memory* %loadMem_400c8e, %struct.Memory** %MEMORY
  %loadMem_400c95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3734 = getelementptr inbounds %struct.GPR, %struct.GPR* %3733, i32 0, i32 33
  %3735 = getelementptr inbounds %struct.Reg, %struct.Reg* %3734, i32 0, i32 0
  %PC.i1658 = bitcast %union.anon* %3735 to i64*
  %3736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3737 = getelementptr inbounds %struct.GPR, %struct.GPR* %3736, i32 0, i32 7
  %3738 = getelementptr inbounds %struct.Reg, %struct.Reg* %3737, i32 0, i32 0
  %RDX.i1659 = bitcast %union.anon* %3738 to i64*
  %3739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3740 = getelementptr inbounds %struct.GPR, %struct.GPR* %3739, i32 0, i32 15
  %3741 = getelementptr inbounds %struct.Reg, %struct.Reg* %3740, i32 0, i32 0
  %RBP.i1660 = bitcast %union.anon* %3741 to i64*
  %3742 = load i64, i64* %RBP.i1660
  %3743 = sub i64 %3742, 12
  %3744 = load i64, i64* %PC.i1658
  %3745 = add i64 %3744, 3
  store i64 %3745, i64* %PC.i1658
  %3746 = inttoptr i64 %3743 to i32*
  %3747 = load i32, i32* %3746
  %3748 = zext i32 %3747 to i64
  store i64 %3748, i64* %RDX.i1659, align 8
  store %struct.Memory* %loadMem_400c95, %struct.Memory** %MEMORY
  %loadMem_400c98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3750 = getelementptr inbounds %struct.GPR, %struct.GPR* %3749, i32 0, i32 33
  %3751 = getelementptr inbounds %struct.Reg, %struct.Reg* %3750, i32 0, i32 0
  %PC.i1656 = bitcast %union.anon* %3751 to i64*
  %3752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3753 = getelementptr inbounds %struct.GPR, %struct.GPR* %3752, i32 0, i32 7
  %3754 = getelementptr inbounds %struct.Reg, %struct.Reg* %3753, i32 0, i32 0
  %RDX.i1657 = bitcast %union.anon* %3754 to i64*
  %3755 = load i64, i64* %RDX.i1657
  %3756 = load i64, i64* %PC.i1656
  %3757 = add i64 %3756, 3
  store i64 %3757, i64* %PC.i1656
  %3758 = trunc i64 %3755 to i32
  %3759 = add i32 1, %3758
  %3760 = zext i32 %3759 to i64
  store i64 %3760, i64* %RDX.i1657, align 8
  %3761 = icmp ult i32 %3759, %3758
  %3762 = icmp ult i32 %3759, 1
  %3763 = or i1 %3761, %3762
  %3764 = zext i1 %3763 to i8
  %3765 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3764, i8* %3765, align 1
  %3766 = and i32 %3759, 255
  %3767 = call i32 @llvm.ctpop.i32(i32 %3766)
  %3768 = trunc i32 %3767 to i8
  %3769 = and i8 %3768, 1
  %3770 = xor i8 %3769, 1
  %3771 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3770, i8* %3771, align 1
  %3772 = xor i64 1, %3755
  %3773 = trunc i64 %3772 to i32
  %3774 = xor i32 %3773, %3759
  %3775 = lshr i32 %3774, 4
  %3776 = trunc i32 %3775 to i8
  %3777 = and i8 %3776, 1
  %3778 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3777, i8* %3778, align 1
  %3779 = icmp eq i32 %3759, 0
  %3780 = zext i1 %3779 to i8
  %3781 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3780, i8* %3781, align 1
  %3782 = lshr i32 %3759, 31
  %3783 = trunc i32 %3782 to i8
  %3784 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3783, i8* %3784, align 1
  %3785 = lshr i32 %3758, 31
  %3786 = xor i32 %3782, %3785
  %3787 = add i32 %3786, %3782
  %3788 = icmp eq i32 %3787, 2
  %3789 = zext i1 %3788 to i8
  %3790 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3789, i8* %3790, align 1
  store %struct.Memory* %loadMem_400c98, %struct.Memory** %MEMORY
  %loadMem_400c9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3792 = getelementptr inbounds %struct.GPR, %struct.GPR* %3791, i32 0, i32 33
  %3793 = getelementptr inbounds %struct.Reg, %struct.Reg* %3792, i32 0, i32 0
  %PC.i1653 = bitcast %union.anon* %3793 to i64*
  %3794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3795 = getelementptr inbounds %struct.GPR, %struct.GPR* %3794, i32 0, i32 7
  %3796 = getelementptr inbounds %struct.Reg, %struct.Reg* %3795, i32 0, i32 0
  %EDX.i1654 = bitcast %union.anon* %3796 to i32*
  %3797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3798 = getelementptr inbounds %struct.GPR, %struct.GPR* %3797, i32 0, i32 1
  %3799 = getelementptr inbounds %struct.Reg, %struct.Reg* %3798, i32 0, i32 0
  %RAX.i1655 = bitcast %union.anon* %3799 to i64*
  %3800 = load i32, i32* %EDX.i1654
  %3801 = zext i32 %3800 to i64
  %3802 = load i64, i64* %PC.i1653
  %3803 = add i64 %3802, 3
  store i64 %3803, i64* %PC.i1653
  %3804 = shl i64 %3801, 32
  %3805 = ashr exact i64 %3804, 32
  store i64 %3805, i64* %RAX.i1655, align 8
  store %struct.Memory* %loadMem_400c9b, %struct.Memory** %MEMORY
  %loadMem_400c9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3807 = getelementptr inbounds %struct.GPR, %struct.GPR* %3806, i32 0, i32 33
  %3808 = getelementptr inbounds %struct.Reg, %struct.Reg* %3807, i32 0, i32 0
  %PC.i1649 = bitcast %union.anon* %3808 to i64*
  %3809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3810 = getelementptr inbounds %struct.GPR, %struct.GPR* %3809, i32 0, i32 5
  %3811 = getelementptr inbounds %struct.Reg, %struct.Reg* %3810, i32 0, i32 0
  %ECX.i1650 = bitcast %union.anon* %3811 to i32*
  %3812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3813 = getelementptr inbounds %struct.GPR, %struct.GPR* %3812, i32 0, i32 1
  %3814 = getelementptr inbounds %struct.Reg, %struct.Reg* %3813, i32 0, i32 0
  %RAX.i1651 = bitcast %union.anon* %3814 to i64*
  %3815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3816 = getelementptr inbounds %struct.GPR, %struct.GPR* %3815, i32 0, i32 15
  %3817 = getelementptr inbounds %struct.Reg, %struct.Reg* %3816, i32 0, i32 0
  %RBP.i1652 = bitcast %union.anon* %3817 to i64*
  %3818 = load i64, i64* %RBP.i1652
  %3819 = load i64, i64* %RAX.i1651
  %3820 = mul i64 %3819, 4
  %3821 = add i64 %3818, -1328
  %3822 = add i64 %3821, %3820
  %3823 = load i32, i32* %ECX.i1650
  %3824 = zext i32 %3823 to i64
  %3825 = load i64, i64* %PC.i1649
  %3826 = add i64 %3825, 7
  store i64 %3826, i64* %PC.i1649
  %3827 = inttoptr i64 %3822 to i32*
  store i32 %3823, i32* %3827
  store %struct.Memory* %loadMem_400c9e, %struct.Memory** %MEMORY
  %loadMem_400ca5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3829 = getelementptr inbounds %struct.GPR, %struct.GPR* %3828, i32 0, i32 33
  %3830 = getelementptr inbounds %struct.Reg, %struct.Reg* %3829, i32 0, i32 0
  %PC.i1648 = bitcast %union.anon* %3830 to i64*
  %3831 = load i64, i64* %PC.i1648
  %3832 = add i64 %3831, 38
  %3833 = load i64, i64* %PC.i1648
  %3834 = add i64 %3833, 5
  store i64 %3834, i64* %PC.i1648
  %3835 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3832, i64* %3835, align 8
  store %struct.Memory* %loadMem_400ca5, %struct.Memory** %MEMORY
  br label %block_.L_400ccb

block_.L_400caa:                                  ; preds = %block_.L_400c66
  %loadMem_400caa = load %struct.Memory*, %struct.Memory** %MEMORY
  %3836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3837 = getelementptr inbounds %struct.GPR, %struct.GPR* %3836, i32 0, i32 33
  %3838 = getelementptr inbounds %struct.Reg, %struct.Reg* %3837, i32 0, i32 0
  %PC.i1645 = bitcast %union.anon* %3838 to i64*
  %3839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3840 = getelementptr inbounds %struct.GPR, %struct.GPR* %3839, i32 0, i32 1
  %3841 = getelementptr inbounds %struct.Reg, %struct.Reg* %3840, i32 0, i32 0
  %RAX.i1646 = bitcast %union.anon* %3841 to i64*
  %3842 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3843 = getelementptr inbounds %struct.GPR, %struct.GPR* %3842, i32 0, i32 15
  %3844 = getelementptr inbounds %struct.Reg, %struct.Reg* %3843, i32 0, i32 0
  %RBP.i1647 = bitcast %union.anon* %3844 to i64*
  %3845 = load i64, i64* %RBP.i1647
  %3846 = sub i64 %3845, 16
  %3847 = load i64, i64* %PC.i1645
  %3848 = add i64 %3847, 4
  store i64 %3848, i64* %PC.i1645
  %3849 = inttoptr i64 %3846 to i32*
  %3850 = load i32, i32* %3849
  %3851 = sext i32 %3850 to i64
  store i64 %3851, i64* %RAX.i1646, align 8
  store %struct.Memory* %loadMem_400caa, %struct.Memory** %MEMORY
  %loadMem_400cae = load %struct.Memory*, %struct.Memory** %MEMORY
  %3852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3853 = getelementptr inbounds %struct.GPR, %struct.GPR* %3852, i32 0, i32 33
  %3854 = getelementptr inbounds %struct.Reg, %struct.Reg* %3853, i32 0, i32 0
  %PC.i1641 = bitcast %union.anon* %3854 to i64*
  %3855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3856 = getelementptr inbounds %struct.GPR, %struct.GPR* %3855, i32 0, i32 1
  %3857 = getelementptr inbounds %struct.Reg, %struct.Reg* %3856, i32 0, i32 0
  %RAX.i1642 = bitcast %union.anon* %3857 to i64*
  %3858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3859 = getelementptr inbounds %struct.GPR, %struct.GPR* %3858, i32 0, i32 5
  %3860 = getelementptr inbounds %struct.Reg, %struct.Reg* %3859, i32 0, i32 0
  %RCX.i1643 = bitcast %union.anon* %3860 to i64*
  %3861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3862 = getelementptr inbounds %struct.GPR, %struct.GPR* %3861, i32 0, i32 15
  %3863 = getelementptr inbounds %struct.Reg, %struct.Reg* %3862, i32 0, i32 0
  %RBP.i1644 = bitcast %union.anon* %3863 to i64*
  %3864 = load i64, i64* %RBP.i1644
  %3865 = load i64, i64* %RAX.i1642
  %3866 = mul i64 %3865, 4
  %3867 = add i64 %3864, -1328
  %3868 = add i64 %3867, %3866
  %3869 = load i64, i64* %PC.i1641
  %3870 = add i64 %3869, 7
  store i64 %3870, i64* %PC.i1641
  %3871 = inttoptr i64 %3868 to i32*
  %3872 = load i32, i32* %3871
  %3873 = zext i32 %3872 to i64
  store i64 %3873, i64* %RCX.i1643, align 8
  store %struct.Memory* %loadMem_400cae, %struct.Memory** %MEMORY
  %loadMem_400cb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3875 = getelementptr inbounds %struct.GPR, %struct.GPR* %3874, i32 0, i32 33
  %3876 = getelementptr inbounds %struct.Reg, %struct.Reg* %3875, i32 0, i32 0
  %PC.i1638 = bitcast %union.anon* %3876 to i64*
  %3877 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3878 = getelementptr inbounds %struct.GPR, %struct.GPR* %3877, i32 0, i32 5
  %3879 = getelementptr inbounds %struct.Reg, %struct.Reg* %3878, i32 0, i32 0
  %RCX.i1639 = bitcast %union.anon* %3879 to i64*
  %3880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3881 = getelementptr inbounds %struct.GPR, %struct.GPR* %3880, i32 0, i32 15
  %3882 = getelementptr inbounds %struct.Reg, %struct.Reg* %3881, i32 0, i32 0
  %RBP.i1640 = bitcast %union.anon* %3882 to i64*
  %3883 = load i64, i64* %RCX.i1639
  %3884 = load i64, i64* %RBP.i1640
  %3885 = sub i64 %3884, 12
  %3886 = load i64, i64* %PC.i1638
  %3887 = add i64 %3886, 3
  store i64 %3887, i64* %PC.i1638
  %3888 = trunc i64 %3883 to i32
  %3889 = inttoptr i64 %3885 to i32*
  %3890 = load i32, i32* %3889
  %3891 = add i32 %3890, %3888
  %3892 = zext i32 %3891 to i64
  store i64 %3892, i64* %RCX.i1639, align 8
  %3893 = icmp ult i32 %3891, %3888
  %3894 = icmp ult i32 %3891, %3890
  %3895 = or i1 %3893, %3894
  %3896 = zext i1 %3895 to i8
  %3897 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3896, i8* %3897, align 1
  %3898 = and i32 %3891, 255
  %3899 = call i32 @llvm.ctpop.i32(i32 %3898)
  %3900 = trunc i32 %3899 to i8
  %3901 = and i8 %3900, 1
  %3902 = xor i8 %3901, 1
  %3903 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3902, i8* %3903, align 1
  %3904 = xor i32 %3890, %3888
  %3905 = xor i32 %3904, %3891
  %3906 = lshr i32 %3905, 4
  %3907 = trunc i32 %3906 to i8
  %3908 = and i8 %3907, 1
  %3909 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3908, i8* %3909, align 1
  %3910 = icmp eq i32 %3891, 0
  %3911 = zext i1 %3910 to i8
  %3912 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3911, i8* %3912, align 1
  %3913 = lshr i32 %3891, 31
  %3914 = trunc i32 %3913 to i8
  %3915 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3914, i8* %3915, align 1
  %3916 = lshr i32 %3888, 31
  %3917 = lshr i32 %3890, 31
  %3918 = xor i32 %3913, %3916
  %3919 = xor i32 %3913, %3917
  %3920 = add i32 %3918, %3919
  %3921 = icmp eq i32 %3920, 2
  %3922 = zext i1 %3921 to i8
  %3923 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3922, i8* %3923, align 1
  store %struct.Memory* %loadMem_400cb5, %struct.Memory** %MEMORY
  %loadMem_400cb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3925 = getelementptr inbounds %struct.GPR, %struct.GPR* %3924, i32 0, i32 33
  %3926 = getelementptr inbounds %struct.Reg, %struct.Reg* %3925, i32 0, i32 0
  %PC.i1635 = bitcast %union.anon* %3926 to i64*
  %3927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3928 = getelementptr inbounds %struct.GPR, %struct.GPR* %3927, i32 0, i32 5
  %3929 = getelementptr inbounds %struct.Reg, %struct.Reg* %3928, i32 0, i32 0
  %RCX.i1636 = bitcast %union.anon* %3929 to i64*
  %3930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3931 = getelementptr inbounds %struct.GPR, %struct.GPR* %3930, i32 0, i32 15
  %3932 = getelementptr inbounds %struct.Reg, %struct.Reg* %3931, i32 0, i32 0
  %RBP.i1637 = bitcast %union.anon* %3932 to i64*
  %3933 = load i64, i64* %RCX.i1636
  %3934 = load i64, i64* %RBP.i1637
  %3935 = sub i64 %3934, 16
  %3936 = load i64, i64* %PC.i1635
  %3937 = add i64 %3936, 3
  store i64 %3937, i64* %PC.i1635
  %3938 = trunc i64 %3933 to i32
  %3939 = inttoptr i64 %3935 to i32*
  %3940 = load i32, i32* %3939
  %3941 = sub i32 %3938, %3940
  %3942 = zext i32 %3941 to i64
  store i64 %3942, i64* %RCX.i1636, align 8
  %3943 = icmp ult i32 %3938, %3940
  %3944 = zext i1 %3943 to i8
  %3945 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3944, i8* %3945, align 1
  %3946 = and i32 %3941, 255
  %3947 = call i32 @llvm.ctpop.i32(i32 %3946)
  %3948 = trunc i32 %3947 to i8
  %3949 = and i8 %3948, 1
  %3950 = xor i8 %3949, 1
  %3951 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3950, i8* %3951, align 1
  %3952 = xor i32 %3940, %3938
  %3953 = xor i32 %3952, %3941
  %3954 = lshr i32 %3953, 4
  %3955 = trunc i32 %3954 to i8
  %3956 = and i8 %3955, 1
  %3957 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3956, i8* %3957, align 1
  %3958 = icmp eq i32 %3941, 0
  %3959 = zext i1 %3958 to i8
  %3960 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3959, i8* %3960, align 1
  %3961 = lshr i32 %3941, 31
  %3962 = trunc i32 %3961 to i8
  %3963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3962, i8* %3963, align 1
  %3964 = lshr i32 %3938, 31
  %3965 = lshr i32 %3940, 31
  %3966 = xor i32 %3965, %3964
  %3967 = xor i32 %3961, %3964
  %3968 = add i32 %3967, %3966
  %3969 = icmp eq i32 %3968, 2
  %3970 = zext i1 %3969 to i8
  %3971 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3970, i8* %3971, align 1
  store %struct.Memory* %loadMem_400cb8, %struct.Memory** %MEMORY
  %loadMem_400cbb = load %struct.Memory*, %struct.Memory** %MEMORY
  %3972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3973 = getelementptr inbounds %struct.GPR, %struct.GPR* %3972, i32 0, i32 33
  %3974 = getelementptr inbounds %struct.Reg, %struct.Reg* %3973, i32 0, i32 0
  %PC.i1632 = bitcast %union.anon* %3974 to i64*
  %3975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3976 = getelementptr inbounds %struct.GPR, %struct.GPR* %3975, i32 0, i32 7
  %3977 = getelementptr inbounds %struct.Reg, %struct.Reg* %3976, i32 0, i32 0
  %RDX.i1633 = bitcast %union.anon* %3977 to i64*
  %3978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3979 = getelementptr inbounds %struct.GPR, %struct.GPR* %3978, i32 0, i32 15
  %3980 = getelementptr inbounds %struct.Reg, %struct.Reg* %3979, i32 0, i32 0
  %RBP.i1634 = bitcast %union.anon* %3980 to i64*
  %3981 = load i64, i64* %RBP.i1634
  %3982 = sub i64 %3981, 12
  %3983 = load i64, i64* %PC.i1632
  %3984 = add i64 %3983, 3
  store i64 %3984, i64* %PC.i1632
  %3985 = inttoptr i64 %3982 to i32*
  %3986 = load i32, i32* %3985
  %3987 = zext i32 %3986 to i64
  store i64 %3987, i64* %RDX.i1633, align 8
  store %struct.Memory* %loadMem_400cbb, %struct.Memory** %MEMORY
  %loadMem_400cbe = load %struct.Memory*, %struct.Memory** %MEMORY
  %3988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3989 = getelementptr inbounds %struct.GPR, %struct.GPR* %3988, i32 0, i32 33
  %3990 = getelementptr inbounds %struct.Reg, %struct.Reg* %3989, i32 0, i32 0
  %PC.i1630 = bitcast %union.anon* %3990 to i64*
  %3991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3992 = getelementptr inbounds %struct.GPR, %struct.GPR* %3991, i32 0, i32 7
  %3993 = getelementptr inbounds %struct.Reg, %struct.Reg* %3992, i32 0, i32 0
  %RDX.i1631 = bitcast %union.anon* %3993 to i64*
  %3994 = load i64, i64* %RDX.i1631
  %3995 = load i64, i64* %PC.i1630
  %3996 = add i64 %3995, 3
  store i64 %3996, i64* %PC.i1630
  %3997 = trunc i64 %3994 to i32
  %3998 = add i32 1, %3997
  %3999 = zext i32 %3998 to i64
  store i64 %3999, i64* %RDX.i1631, align 8
  %4000 = icmp ult i32 %3998, %3997
  %4001 = icmp ult i32 %3998, 1
  %4002 = or i1 %4000, %4001
  %4003 = zext i1 %4002 to i8
  %4004 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4003, i8* %4004, align 1
  %4005 = and i32 %3998, 255
  %4006 = call i32 @llvm.ctpop.i32(i32 %4005)
  %4007 = trunc i32 %4006 to i8
  %4008 = and i8 %4007, 1
  %4009 = xor i8 %4008, 1
  %4010 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4009, i8* %4010, align 1
  %4011 = xor i64 1, %3994
  %4012 = trunc i64 %4011 to i32
  %4013 = xor i32 %4012, %3998
  %4014 = lshr i32 %4013, 4
  %4015 = trunc i32 %4014 to i8
  %4016 = and i8 %4015, 1
  %4017 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4016, i8* %4017, align 1
  %4018 = icmp eq i32 %3998, 0
  %4019 = zext i1 %4018 to i8
  %4020 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4019, i8* %4020, align 1
  %4021 = lshr i32 %3998, 31
  %4022 = trunc i32 %4021 to i8
  %4023 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4022, i8* %4023, align 1
  %4024 = lshr i32 %3997, 31
  %4025 = xor i32 %4021, %4024
  %4026 = add i32 %4025, %4021
  %4027 = icmp eq i32 %4026, 2
  %4028 = zext i1 %4027 to i8
  %4029 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4028, i8* %4029, align 1
  store %struct.Memory* %loadMem_400cbe, %struct.Memory** %MEMORY
  %loadMem_400cc1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4031 = getelementptr inbounds %struct.GPR, %struct.GPR* %4030, i32 0, i32 33
  %4032 = getelementptr inbounds %struct.Reg, %struct.Reg* %4031, i32 0, i32 0
  %PC.i1627 = bitcast %union.anon* %4032 to i64*
  %4033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4034 = getelementptr inbounds %struct.GPR, %struct.GPR* %4033, i32 0, i32 7
  %4035 = getelementptr inbounds %struct.Reg, %struct.Reg* %4034, i32 0, i32 0
  %EDX.i1628 = bitcast %union.anon* %4035 to i32*
  %4036 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4037 = getelementptr inbounds %struct.GPR, %struct.GPR* %4036, i32 0, i32 1
  %4038 = getelementptr inbounds %struct.Reg, %struct.Reg* %4037, i32 0, i32 0
  %RAX.i1629 = bitcast %union.anon* %4038 to i64*
  %4039 = load i32, i32* %EDX.i1628
  %4040 = zext i32 %4039 to i64
  %4041 = load i64, i64* %PC.i1627
  %4042 = add i64 %4041, 3
  store i64 %4042, i64* %PC.i1627
  %4043 = shl i64 %4040, 32
  %4044 = ashr exact i64 %4043, 32
  store i64 %4044, i64* %RAX.i1629, align 8
  store %struct.Memory* %loadMem_400cc1, %struct.Memory** %MEMORY
  %loadMem_400cc4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4046 = getelementptr inbounds %struct.GPR, %struct.GPR* %4045, i32 0, i32 33
  %4047 = getelementptr inbounds %struct.Reg, %struct.Reg* %4046, i32 0, i32 0
  %PC.i1623 = bitcast %union.anon* %4047 to i64*
  %4048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4049 = getelementptr inbounds %struct.GPR, %struct.GPR* %4048, i32 0, i32 5
  %4050 = getelementptr inbounds %struct.Reg, %struct.Reg* %4049, i32 0, i32 0
  %ECX.i1624 = bitcast %union.anon* %4050 to i32*
  %4051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4052 = getelementptr inbounds %struct.GPR, %struct.GPR* %4051, i32 0, i32 1
  %4053 = getelementptr inbounds %struct.Reg, %struct.Reg* %4052, i32 0, i32 0
  %RAX.i1625 = bitcast %union.anon* %4053 to i64*
  %4054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4055 = getelementptr inbounds %struct.GPR, %struct.GPR* %4054, i32 0, i32 15
  %4056 = getelementptr inbounds %struct.Reg, %struct.Reg* %4055, i32 0, i32 0
  %RBP.i1626 = bitcast %union.anon* %4056 to i64*
  %4057 = load i64, i64* %RBP.i1626
  %4058 = load i64, i64* %RAX.i1625
  %4059 = mul i64 %4058, 4
  %4060 = add i64 %4057, -1328
  %4061 = add i64 %4060, %4059
  %4062 = load i32, i32* %ECX.i1624
  %4063 = zext i32 %4062 to i64
  %4064 = load i64, i64* %PC.i1623
  %4065 = add i64 %4064, 7
  store i64 %4065, i64* %PC.i1623
  %4066 = inttoptr i64 %4061 to i32*
  store i32 %4062, i32* %4066
  store %struct.Memory* %loadMem_400cc4, %struct.Memory** %MEMORY
  br label %block_.L_400ccb

block_.L_400ccb:                                  ; preds = %block_.L_400caa, %block_400c8a
  %loadMem_400ccb = load %struct.Memory*, %struct.Memory** %MEMORY
  %4067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4068 = getelementptr inbounds %struct.GPR, %struct.GPR* %4067, i32 0, i32 33
  %4069 = getelementptr inbounds %struct.Reg, %struct.Reg* %4068, i32 0, i32 0
  %PC.i1621 = bitcast %union.anon* %4069 to i64*
  %4070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4071 = getelementptr inbounds %struct.GPR, %struct.GPR* %4070, i32 0, i32 15
  %4072 = getelementptr inbounds %struct.Reg, %struct.Reg* %4071, i32 0, i32 0
  %RBP.i1622 = bitcast %union.anon* %4072 to i64*
  %4073 = load i64, i64* %RBP.i1622
  %4074 = sub i64 %4073, 4
  %4075 = load i64, i64* %PC.i1621
  %4076 = add i64 %4075, 7
  store i64 %4076, i64* %PC.i1621
  %4077 = inttoptr i64 %4074 to i32*
  store i32 0, i32* %4077
  store %struct.Memory* %loadMem_400ccb, %struct.Memory** %MEMORY
  br label %block_.L_400cd2

block_.L_400cd2:                                  ; preds = %block_400cdc, %block_.L_400ccb
  %loadMem_400cd2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4079 = getelementptr inbounds %struct.GPR, %struct.GPR* %4078, i32 0, i32 33
  %4080 = getelementptr inbounds %struct.Reg, %struct.Reg* %4079, i32 0, i32 0
  %PC.i1619 = bitcast %union.anon* %4080 to i64*
  %4081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4082 = getelementptr inbounds %struct.GPR, %struct.GPR* %4081, i32 0, i32 15
  %4083 = getelementptr inbounds %struct.Reg, %struct.Reg* %4082, i32 0, i32 0
  %RBP.i1620 = bitcast %union.anon* %4083 to i64*
  %4084 = load i64, i64* %RBP.i1620
  %4085 = sub i64 %4084, 4
  %4086 = load i64, i64* %PC.i1619
  %4087 = add i64 %4086, 4
  store i64 %4087, i64* %PC.i1619
  %4088 = inttoptr i64 %4085 to i32*
  %4089 = load i32, i32* %4088
  %4090 = sub i32 %4089, 16
  %4091 = icmp ult i32 %4089, 16
  %4092 = zext i1 %4091 to i8
  %4093 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4092, i8* %4093, align 1
  %4094 = and i32 %4090, 255
  %4095 = call i32 @llvm.ctpop.i32(i32 %4094)
  %4096 = trunc i32 %4095 to i8
  %4097 = and i8 %4096, 1
  %4098 = xor i8 %4097, 1
  %4099 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4098, i8* %4099, align 1
  %4100 = xor i32 %4089, 16
  %4101 = xor i32 %4100, %4090
  %4102 = lshr i32 %4101, 4
  %4103 = trunc i32 %4102 to i8
  %4104 = and i8 %4103, 1
  %4105 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4104, i8* %4105, align 1
  %4106 = icmp eq i32 %4090, 0
  %4107 = zext i1 %4106 to i8
  %4108 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4107, i8* %4108, align 1
  %4109 = lshr i32 %4090, 31
  %4110 = trunc i32 %4109 to i8
  %4111 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4110, i8* %4111, align 1
  %4112 = lshr i32 %4089, 31
  %4113 = xor i32 %4109, %4112
  %4114 = add i32 %4113, %4112
  %4115 = icmp eq i32 %4114, 2
  %4116 = zext i1 %4115 to i8
  %4117 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4116, i8* %4117, align 1
  store %struct.Memory* %loadMem_400cd2, %struct.Memory** %MEMORY
  %loadMem_400cd6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4119 = getelementptr inbounds %struct.GPR, %struct.GPR* %4118, i32 0, i32 33
  %4120 = getelementptr inbounds %struct.Reg, %struct.Reg* %4119, i32 0, i32 0
  %PC.i1618 = bitcast %union.anon* %4120 to i64*
  %4121 = load i64, i64* %PC.i1618
  %4122 = add i64 %4121, 54
  %4123 = load i64, i64* %PC.i1618
  %4124 = add i64 %4123, 6
  %4125 = load i64, i64* %PC.i1618
  %4126 = add i64 %4125, 6
  store i64 %4126, i64* %PC.i1618
  %4127 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4128 = load i8, i8* %4127, align 1
  %4129 = icmp ne i8 %4128, 0
  %4130 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4131 = load i8, i8* %4130, align 1
  %4132 = icmp ne i8 %4131, 0
  %4133 = xor i1 %4129, %4132
  %4134 = xor i1 %4133, true
  %4135 = zext i1 %4134 to i8
  store i8 %4135, i8* %BRANCH_TAKEN, align 1
  %4136 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4137 = select i1 %4133, i64 %4124, i64 %4122
  store i64 %4137, i64* %4136, align 8
  store %struct.Memory* %loadMem_400cd6, %struct.Memory** %MEMORY
  %loadBr_400cd6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400cd6 = icmp eq i8 %loadBr_400cd6, 1
  br i1 %cmpBr_400cd6, label %block_.L_400d0c, label %block_400cdc

block_400cdc:                                     ; preds = %block_.L_400cd2
  %loadMem_400cdc = load %struct.Memory*, %struct.Memory** %MEMORY
  %4138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4139 = getelementptr inbounds %struct.GPR, %struct.GPR* %4138, i32 0, i32 33
  %4140 = getelementptr inbounds %struct.Reg, %struct.Reg* %4139, i32 0, i32 0
  %PC.i1615 = bitcast %union.anon* %4140 to i64*
  %4141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4142 = getelementptr inbounds %struct.GPR, %struct.GPR* %4141, i32 0, i32 1
  %4143 = getelementptr inbounds %struct.Reg, %struct.Reg* %4142, i32 0, i32 0
  %RAX.i1616 = bitcast %union.anon* %4143 to i64*
  %4144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4145 = getelementptr inbounds %struct.GPR, %struct.GPR* %4144, i32 0, i32 15
  %4146 = getelementptr inbounds %struct.Reg, %struct.Reg* %4145, i32 0, i32 0
  %RBP.i1617 = bitcast %union.anon* %4146 to i64*
  %4147 = load i64, i64* %RBP.i1617
  %4148 = sub i64 %4147, 1168
  %4149 = load i64, i64* %PC.i1615
  %4150 = add i64 %4149, 7
  store i64 %4150, i64* %PC.i1615
  store i64 %4148, i64* %RAX.i1616, align 8
  store %struct.Memory* %loadMem_400cdc, %struct.Memory** %MEMORY
  %loadMem_400ce3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4151 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4152 = getelementptr inbounds %struct.GPR, %struct.GPR* %4151, i32 0, i32 33
  %4153 = getelementptr inbounds %struct.Reg, %struct.Reg* %4152, i32 0, i32 0
  %PC.i1612 = bitcast %union.anon* %4153 to i64*
  %4154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4155 = getelementptr inbounds %struct.GPR, %struct.GPR* %4154, i32 0, i32 5
  %4156 = getelementptr inbounds %struct.Reg, %struct.Reg* %4155, i32 0, i32 0
  %RCX.i1613 = bitcast %union.anon* %4156 to i64*
  %4157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4158 = getelementptr inbounds %struct.GPR, %struct.GPR* %4157, i32 0, i32 15
  %4159 = getelementptr inbounds %struct.Reg, %struct.Reg* %4158, i32 0, i32 0
  %RBP.i1614 = bitcast %union.anon* %4159 to i64*
  %4160 = load i64, i64* %RBP.i1614
  %4161 = sub i64 %4160, 12
  %4162 = load i64, i64* %PC.i1612
  %4163 = add i64 %4162, 3
  store i64 %4163, i64* %PC.i1612
  %4164 = inttoptr i64 %4161 to i32*
  %4165 = load i32, i32* %4164
  %4166 = zext i32 %4165 to i64
  store i64 %4166, i64* %RCX.i1613, align 8
  store %struct.Memory* %loadMem_400ce3, %struct.Memory** %MEMORY
  %loadMem_400ce6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4168 = getelementptr inbounds %struct.GPR, %struct.GPR* %4167, i32 0, i32 33
  %4169 = getelementptr inbounds %struct.Reg, %struct.Reg* %4168, i32 0, i32 0
  %PC.i1610 = bitcast %union.anon* %4169 to i64*
  %4170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4171 = getelementptr inbounds %struct.GPR, %struct.GPR* %4170, i32 0, i32 5
  %4172 = getelementptr inbounds %struct.Reg, %struct.Reg* %4171, i32 0, i32 0
  %RCX.i1611 = bitcast %union.anon* %4172 to i64*
  %4173 = load i64, i64* %RCX.i1611
  %4174 = load i64, i64* %PC.i1610
  %4175 = add i64 %4174, 3
  store i64 %4175, i64* %PC.i1610
  %4176 = trunc i64 %4173 to i32
  %4177 = add i32 1, %4176
  %4178 = zext i32 %4177 to i64
  store i64 %4178, i64* %RCX.i1611, align 8
  %4179 = icmp ult i32 %4177, %4176
  %4180 = icmp ult i32 %4177, 1
  %4181 = or i1 %4179, %4180
  %4182 = zext i1 %4181 to i8
  %4183 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4182, i8* %4183, align 1
  %4184 = and i32 %4177, 255
  %4185 = call i32 @llvm.ctpop.i32(i32 %4184)
  %4186 = trunc i32 %4185 to i8
  %4187 = and i8 %4186, 1
  %4188 = xor i8 %4187, 1
  %4189 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4188, i8* %4189, align 1
  %4190 = xor i64 1, %4173
  %4191 = trunc i64 %4190 to i32
  %4192 = xor i32 %4191, %4177
  %4193 = lshr i32 %4192, 4
  %4194 = trunc i32 %4193 to i8
  %4195 = and i8 %4194, 1
  %4196 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4195, i8* %4196, align 1
  %4197 = icmp eq i32 %4177, 0
  %4198 = zext i1 %4197 to i8
  %4199 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4198, i8* %4199, align 1
  %4200 = lshr i32 %4177, 31
  %4201 = trunc i32 %4200 to i8
  %4202 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4201, i8* %4202, align 1
  %4203 = lshr i32 %4176, 31
  %4204 = xor i32 %4200, %4203
  %4205 = add i32 %4204, %4200
  %4206 = icmp eq i32 %4205, 2
  %4207 = zext i1 %4206 to i8
  %4208 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4207, i8* %4208, align 1
  store %struct.Memory* %loadMem_400ce6, %struct.Memory** %MEMORY
  %loadMem_400ce9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4210 = getelementptr inbounds %struct.GPR, %struct.GPR* %4209, i32 0, i32 33
  %4211 = getelementptr inbounds %struct.Reg, %struct.Reg* %4210, i32 0, i32 0
  %PC.i1607 = bitcast %union.anon* %4211 to i64*
  %4212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4213 = getelementptr inbounds %struct.GPR, %struct.GPR* %4212, i32 0, i32 5
  %4214 = getelementptr inbounds %struct.Reg, %struct.Reg* %4213, i32 0, i32 0
  %ECX.i1608 = bitcast %union.anon* %4214 to i32*
  %4215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4216 = getelementptr inbounds %struct.GPR, %struct.GPR* %4215, i32 0, i32 7
  %4217 = getelementptr inbounds %struct.Reg, %struct.Reg* %4216, i32 0, i32 0
  %RDX.i1609 = bitcast %union.anon* %4217 to i64*
  %4218 = load i32, i32* %ECX.i1608
  %4219 = zext i32 %4218 to i64
  %4220 = load i64, i64* %PC.i1607
  %4221 = add i64 %4220, 3
  store i64 %4221, i64* %PC.i1607
  %4222 = shl i64 %4219, 32
  %4223 = ashr exact i64 %4222, 32
  store i64 %4223, i64* %RDX.i1609, align 8
  store %struct.Memory* %loadMem_400ce9, %struct.Memory** %MEMORY
  %loadMem_400cec = load %struct.Memory*, %struct.Memory** %MEMORY
  %4224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4225 = getelementptr inbounds %struct.GPR, %struct.GPR* %4224, i32 0, i32 33
  %4226 = getelementptr inbounds %struct.Reg, %struct.Reg* %4225, i32 0, i32 0
  %PC.i1605 = bitcast %union.anon* %4226 to i64*
  %4227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4228 = getelementptr inbounds %struct.GPR, %struct.GPR* %4227, i32 0, i32 7
  %4229 = getelementptr inbounds %struct.Reg, %struct.Reg* %4228, i32 0, i32 0
  %RDX.i1606 = bitcast %union.anon* %4229 to i64*
  %4230 = load i64, i64* %RDX.i1606
  %4231 = load i64, i64* %PC.i1605
  %4232 = add i64 %4231, 4
  store i64 %4232, i64* %PC.i1605
  %4233 = shl i64 %4230, 5
  %4234 = icmp slt i64 %4233, 0
  %4235 = shl i64 %4233, 1
  store i64 %4235, i64* %RDX.i1606, align 8
  %4236 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %4237 = zext i1 %4234 to i8
  store i8 %4237, i8* %4236, align 1
  %4238 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %4239 = trunc i64 %4235 to i32
  %4240 = and i32 %4239, 254
  %4241 = call i32 @llvm.ctpop.i32(i32 %4240)
  %4242 = trunc i32 %4241 to i8
  %4243 = and i8 %4242, 1
  %4244 = xor i8 %4243, 1
  store i8 %4244, i8* %4238, align 1
  %4245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4245, align 1
  %4246 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4247 = icmp eq i64 %4235, 0
  %4248 = zext i1 %4247 to i8
  store i8 %4248, i8* %4246, align 1
  %4249 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4250 = lshr i64 %4235, 63
  %4251 = trunc i64 %4250 to i8
  store i8 %4251, i8* %4249, align 1
  %4252 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4252, align 1
  store %struct.Memory* %loadMem_400cec, %struct.Memory** %MEMORY
  %loadMem_400cf0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4254 = getelementptr inbounds %struct.GPR, %struct.GPR* %4253, i32 0, i32 33
  %4255 = getelementptr inbounds %struct.Reg, %struct.Reg* %4254, i32 0, i32 0
  %PC.i1602 = bitcast %union.anon* %4255 to i64*
  %4256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4257 = getelementptr inbounds %struct.GPR, %struct.GPR* %4256, i32 0, i32 1
  %4258 = getelementptr inbounds %struct.Reg, %struct.Reg* %4257, i32 0, i32 0
  %RAX.i1603 = bitcast %union.anon* %4258 to i64*
  %4259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4260 = getelementptr inbounds %struct.GPR, %struct.GPR* %4259, i32 0, i32 7
  %4261 = getelementptr inbounds %struct.Reg, %struct.Reg* %4260, i32 0, i32 0
  %RDX.i1604 = bitcast %union.anon* %4261 to i64*
  %4262 = load i64, i64* %RAX.i1603
  %4263 = load i64, i64* %RDX.i1604
  %4264 = load i64, i64* %PC.i1602
  %4265 = add i64 %4264, 3
  store i64 %4265, i64* %PC.i1602
  %4266 = add i64 %4263, %4262
  store i64 %4266, i64* %RAX.i1603, align 8
  %4267 = icmp ult i64 %4266, %4262
  %4268 = icmp ult i64 %4266, %4263
  %4269 = or i1 %4267, %4268
  %4270 = zext i1 %4269 to i8
  %4271 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4270, i8* %4271, align 1
  %4272 = trunc i64 %4266 to i32
  %4273 = and i32 %4272, 255
  %4274 = call i32 @llvm.ctpop.i32(i32 %4273)
  %4275 = trunc i32 %4274 to i8
  %4276 = and i8 %4275, 1
  %4277 = xor i8 %4276, 1
  %4278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4277, i8* %4278, align 1
  %4279 = xor i64 %4263, %4262
  %4280 = xor i64 %4279, %4266
  %4281 = lshr i64 %4280, 4
  %4282 = trunc i64 %4281 to i8
  %4283 = and i8 %4282, 1
  %4284 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4283, i8* %4284, align 1
  %4285 = icmp eq i64 %4266, 0
  %4286 = zext i1 %4285 to i8
  %4287 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4286, i8* %4287, align 1
  %4288 = lshr i64 %4266, 63
  %4289 = trunc i64 %4288 to i8
  %4290 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4289, i8* %4290, align 1
  %4291 = lshr i64 %4262, 63
  %4292 = lshr i64 %4263, 63
  %4293 = xor i64 %4288, %4291
  %4294 = xor i64 %4288, %4292
  %4295 = add i64 %4293, %4294
  %4296 = icmp eq i64 %4295, 2
  %4297 = zext i1 %4296 to i8
  %4298 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4297, i8* %4298, align 1
  store %struct.Memory* %loadMem_400cf0, %struct.Memory** %MEMORY
  %loadMem_400cf3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4300 = getelementptr inbounds %struct.GPR, %struct.GPR* %4299, i32 0, i32 33
  %4301 = getelementptr inbounds %struct.Reg, %struct.Reg* %4300, i32 0, i32 0
  %PC.i1599 = bitcast %union.anon* %4301 to i64*
  %4302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4303 = getelementptr inbounds %struct.GPR, %struct.GPR* %4302, i32 0, i32 7
  %4304 = getelementptr inbounds %struct.Reg, %struct.Reg* %4303, i32 0, i32 0
  %RDX.i1600 = bitcast %union.anon* %4304 to i64*
  %4305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4306 = getelementptr inbounds %struct.GPR, %struct.GPR* %4305, i32 0, i32 15
  %4307 = getelementptr inbounds %struct.Reg, %struct.Reg* %4306, i32 0, i32 0
  %RBP.i1601 = bitcast %union.anon* %4307 to i64*
  %4308 = load i64, i64* %RBP.i1601
  %4309 = sub i64 %4308, 4
  %4310 = load i64, i64* %PC.i1599
  %4311 = add i64 %4310, 4
  store i64 %4311, i64* %PC.i1599
  %4312 = inttoptr i64 %4309 to i32*
  %4313 = load i32, i32* %4312
  %4314 = sext i32 %4313 to i64
  store i64 %4314, i64* %RDX.i1600, align 8
  store %struct.Memory* %loadMem_400cf3, %struct.Memory** %MEMORY
  %loadMem_400cf7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4316 = getelementptr inbounds %struct.GPR, %struct.GPR* %4315, i32 0, i32 33
  %4317 = getelementptr inbounds %struct.Reg, %struct.Reg* %4316, i32 0, i32 0
  %PC.i1596 = bitcast %union.anon* %4317 to i64*
  %4318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4319 = getelementptr inbounds %struct.GPR, %struct.GPR* %4318, i32 0, i32 1
  %4320 = getelementptr inbounds %struct.Reg, %struct.Reg* %4319, i32 0, i32 0
  %RAX.i1597 = bitcast %union.anon* %4320 to i64*
  %4321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4322 = getelementptr inbounds %struct.GPR, %struct.GPR* %4321, i32 0, i32 7
  %4323 = getelementptr inbounds %struct.Reg, %struct.Reg* %4322, i32 0, i32 0
  %RDX.i1598 = bitcast %union.anon* %4323 to i64*
  %4324 = load i64, i64* %RAX.i1597
  %4325 = load i64, i64* %RDX.i1598
  %4326 = mul i64 %4325, 4
  %4327 = add i64 %4326, %4324
  %4328 = load i64, i64* %PC.i1596
  %4329 = add i64 %4328, 7
  store i64 %4329, i64* %PC.i1596
  %4330 = inttoptr i64 %4327 to i32*
  store i32 0, i32* %4330
  store %struct.Memory* %loadMem_400cf7, %struct.Memory** %MEMORY
  %loadMem_400cfe = load %struct.Memory*, %struct.Memory** %MEMORY
  %4331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4332 = getelementptr inbounds %struct.GPR, %struct.GPR* %4331, i32 0, i32 33
  %4333 = getelementptr inbounds %struct.Reg, %struct.Reg* %4332, i32 0, i32 0
  %PC.i1593 = bitcast %union.anon* %4333 to i64*
  %4334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4335 = getelementptr inbounds %struct.GPR, %struct.GPR* %4334, i32 0, i32 1
  %4336 = getelementptr inbounds %struct.Reg, %struct.Reg* %4335, i32 0, i32 0
  %RAX.i1594 = bitcast %union.anon* %4336 to i64*
  %4337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4338 = getelementptr inbounds %struct.GPR, %struct.GPR* %4337, i32 0, i32 15
  %4339 = getelementptr inbounds %struct.Reg, %struct.Reg* %4338, i32 0, i32 0
  %RBP.i1595 = bitcast %union.anon* %4339 to i64*
  %4340 = load i64, i64* %RBP.i1595
  %4341 = sub i64 %4340, 4
  %4342 = load i64, i64* %PC.i1593
  %4343 = add i64 %4342, 3
  store i64 %4343, i64* %PC.i1593
  %4344 = inttoptr i64 %4341 to i32*
  %4345 = load i32, i32* %4344
  %4346 = zext i32 %4345 to i64
  store i64 %4346, i64* %RAX.i1594, align 8
  store %struct.Memory* %loadMem_400cfe, %struct.Memory** %MEMORY
  %loadMem_400d01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4348 = getelementptr inbounds %struct.GPR, %struct.GPR* %4347, i32 0, i32 33
  %4349 = getelementptr inbounds %struct.Reg, %struct.Reg* %4348, i32 0, i32 0
  %PC.i1591 = bitcast %union.anon* %4349 to i64*
  %4350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4351 = getelementptr inbounds %struct.GPR, %struct.GPR* %4350, i32 0, i32 1
  %4352 = getelementptr inbounds %struct.Reg, %struct.Reg* %4351, i32 0, i32 0
  %RAX.i1592 = bitcast %union.anon* %4352 to i64*
  %4353 = load i64, i64* %RAX.i1592
  %4354 = load i64, i64* %PC.i1591
  %4355 = add i64 %4354, 3
  store i64 %4355, i64* %PC.i1591
  %4356 = trunc i64 %4353 to i32
  %4357 = add i32 1, %4356
  %4358 = zext i32 %4357 to i64
  store i64 %4358, i64* %RAX.i1592, align 8
  %4359 = icmp ult i32 %4357, %4356
  %4360 = icmp ult i32 %4357, 1
  %4361 = or i1 %4359, %4360
  %4362 = zext i1 %4361 to i8
  %4363 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4362, i8* %4363, align 1
  %4364 = and i32 %4357, 255
  %4365 = call i32 @llvm.ctpop.i32(i32 %4364)
  %4366 = trunc i32 %4365 to i8
  %4367 = and i8 %4366, 1
  %4368 = xor i8 %4367, 1
  %4369 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4368, i8* %4369, align 1
  %4370 = xor i64 1, %4353
  %4371 = trunc i64 %4370 to i32
  %4372 = xor i32 %4371, %4357
  %4373 = lshr i32 %4372, 4
  %4374 = trunc i32 %4373 to i8
  %4375 = and i8 %4374, 1
  %4376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4375, i8* %4376, align 1
  %4377 = icmp eq i32 %4357, 0
  %4378 = zext i1 %4377 to i8
  %4379 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4378, i8* %4379, align 1
  %4380 = lshr i32 %4357, 31
  %4381 = trunc i32 %4380 to i8
  %4382 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4381, i8* %4382, align 1
  %4383 = lshr i32 %4356, 31
  %4384 = xor i32 %4380, %4383
  %4385 = add i32 %4384, %4380
  %4386 = icmp eq i32 %4385, 2
  %4387 = zext i1 %4386 to i8
  %4388 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4387, i8* %4388, align 1
  store %struct.Memory* %loadMem_400d01, %struct.Memory** %MEMORY
  %loadMem_400d04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4390 = getelementptr inbounds %struct.GPR, %struct.GPR* %4389, i32 0, i32 33
  %4391 = getelementptr inbounds %struct.Reg, %struct.Reg* %4390, i32 0, i32 0
  %PC.i1588 = bitcast %union.anon* %4391 to i64*
  %4392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4393 = getelementptr inbounds %struct.GPR, %struct.GPR* %4392, i32 0, i32 1
  %4394 = getelementptr inbounds %struct.Reg, %struct.Reg* %4393, i32 0, i32 0
  %EAX.i1589 = bitcast %union.anon* %4394 to i32*
  %4395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4396 = getelementptr inbounds %struct.GPR, %struct.GPR* %4395, i32 0, i32 15
  %4397 = getelementptr inbounds %struct.Reg, %struct.Reg* %4396, i32 0, i32 0
  %RBP.i1590 = bitcast %union.anon* %4397 to i64*
  %4398 = load i64, i64* %RBP.i1590
  %4399 = sub i64 %4398, 4
  %4400 = load i32, i32* %EAX.i1589
  %4401 = zext i32 %4400 to i64
  %4402 = load i64, i64* %PC.i1588
  %4403 = add i64 %4402, 3
  store i64 %4403, i64* %PC.i1588
  %4404 = inttoptr i64 %4399 to i32*
  store i32 %4400, i32* %4404
  store %struct.Memory* %loadMem_400d04, %struct.Memory** %MEMORY
  %loadMem_400d07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4406 = getelementptr inbounds %struct.GPR, %struct.GPR* %4405, i32 0, i32 33
  %4407 = getelementptr inbounds %struct.Reg, %struct.Reg* %4406, i32 0, i32 0
  %PC.i1587 = bitcast %union.anon* %4407 to i64*
  %4408 = load i64, i64* %PC.i1587
  %4409 = add i64 %4408, -53
  %4410 = load i64, i64* %PC.i1587
  %4411 = add i64 %4410, 5
  store i64 %4411, i64* %PC.i1587
  %4412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4409, i64* %4412, align 8
  store %struct.Memory* %loadMem_400d07, %struct.Memory** %MEMORY
  br label %block_.L_400cd2

block_.L_400d0c:                                  ; preds = %block_.L_400cd2
  %loadMem_400d0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4414 = getelementptr inbounds %struct.GPR, %struct.GPR* %4413, i32 0, i32 33
  %4415 = getelementptr inbounds %struct.Reg, %struct.Reg* %4414, i32 0, i32 0
  %PC.i1585 = bitcast %union.anon* %4415 to i64*
  %4416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4417 = getelementptr inbounds %struct.GPR, %struct.GPR* %4416, i32 0, i32 15
  %4418 = getelementptr inbounds %struct.Reg, %struct.Reg* %4417, i32 0, i32 0
  %RBP.i1586 = bitcast %union.anon* %4418 to i64*
  %4419 = load i64, i64* %RBP.i1586
  %4420 = sub i64 %4419, 4
  %4421 = load i64, i64* %PC.i1585
  %4422 = add i64 %4421, 7
  store i64 %4422, i64* %PC.i1585
  %4423 = inttoptr i64 %4420 to i32*
  store i32 0, i32* %4423
  store %struct.Memory* %loadMem_400d0c, %struct.Memory** %MEMORY
  br label %block_.L_400d13

block_.L_400d13:                                  ; preds = %block_.L_400dc6, %block_.L_400d0c
  %loadMem_400d13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4425 = getelementptr inbounds %struct.GPR, %struct.GPR* %4424, i32 0, i32 33
  %4426 = getelementptr inbounds %struct.Reg, %struct.Reg* %4425, i32 0, i32 0
  %PC.i1582 = bitcast %union.anon* %4426 to i64*
  %4427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4428 = getelementptr inbounds %struct.GPR, %struct.GPR* %4427, i32 0, i32 1
  %4429 = getelementptr inbounds %struct.Reg, %struct.Reg* %4428, i32 0, i32 0
  %RAX.i1583 = bitcast %union.anon* %4429 to i64*
  %4430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4431 = getelementptr inbounds %struct.GPR, %struct.GPR* %4430, i32 0, i32 15
  %4432 = getelementptr inbounds %struct.Reg, %struct.Reg* %4431, i32 0, i32 0
  %RBP.i1584 = bitcast %union.anon* %4432 to i64*
  %4433 = load i64, i64* %RBP.i1584
  %4434 = sub i64 %4433, 4
  %4435 = load i64, i64* %PC.i1582
  %4436 = add i64 %4435, 3
  store i64 %4436, i64* %PC.i1582
  %4437 = inttoptr i64 %4434 to i32*
  %4438 = load i32, i32* %4437
  %4439 = zext i32 %4438 to i64
  store i64 %4439, i64* %RAX.i1583, align 8
  store %struct.Memory* %loadMem_400d13, %struct.Memory** %MEMORY
  %loadMem_400d16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4441 = getelementptr inbounds %struct.GPR, %struct.GPR* %4440, i32 0, i32 33
  %4442 = getelementptr inbounds %struct.Reg, %struct.Reg* %4441, i32 0, i32 0
  %PC.i1579 = bitcast %union.anon* %4442 to i64*
  %4443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4444 = getelementptr inbounds %struct.GPR, %struct.GPR* %4443, i32 0, i32 5
  %4445 = getelementptr inbounds %struct.Reg, %struct.Reg* %4444, i32 0, i32 0
  %RCX.i1580 = bitcast %union.anon* %4445 to i64*
  %4446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4447 = getelementptr inbounds %struct.GPR, %struct.GPR* %4446, i32 0, i32 15
  %4448 = getelementptr inbounds %struct.Reg, %struct.Reg* %4447, i32 0, i32 0
  %RBP.i1581 = bitcast %union.anon* %4448 to i64*
  %4449 = load i64, i64* %RBP.i1581
  %4450 = sub i64 %4449, 16
  %4451 = load i64, i64* %PC.i1579
  %4452 = add i64 %4451, 4
  store i64 %4452, i64* %PC.i1579
  %4453 = inttoptr i64 %4450 to i32*
  %4454 = load i32, i32* %4453
  %4455 = sext i32 %4454 to i64
  store i64 %4455, i64* %RCX.i1580, align 8
  store %struct.Memory* %loadMem_400d16, %struct.Memory** %MEMORY
  %loadMem_400d1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4457 = getelementptr inbounds %struct.GPR, %struct.GPR* %4456, i32 0, i32 33
  %4458 = getelementptr inbounds %struct.Reg, %struct.Reg* %4457, i32 0, i32 0
  %PC.i1575 = bitcast %union.anon* %4458 to i64*
  %4459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4460 = getelementptr inbounds %struct.GPR, %struct.GPR* %4459, i32 0, i32 1
  %4461 = getelementptr inbounds %struct.Reg, %struct.Reg* %4460, i32 0, i32 0
  %EAX.i1576 = bitcast %union.anon* %4461 to i32*
  %4462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4463 = getelementptr inbounds %struct.GPR, %struct.GPR* %4462, i32 0, i32 5
  %4464 = getelementptr inbounds %struct.Reg, %struct.Reg* %4463, i32 0, i32 0
  %RCX.i1577 = bitcast %union.anon* %4464 to i64*
  %4465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4466 = getelementptr inbounds %struct.GPR, %struct.GPR* %4465, i32 0, i32 15
  %4467 = getelementptr inbounds %struct.Reg, %struct.Reg* %4466, i32 0, i32 0
  %RBP.i1578 = bitcast %union.anon* %4467 to i64*
  %4468 = load i32, i32* %EAX.i1576
  %4469 = zext i32 %4468 to i64
  %4470 = load i64, i64* %RBP.i1578
  %4471 = load i64, i64* %RCX.i1577
  %4472 = mul i64 %4471, 4
  %4473 = add i64 %4470, -1328
  %4474 = add i64 %4473, %4472
  %4475 = load i64, i64* %PC.i1575
  %4476 = add i64 %4475, 7
  store i64 %4476, i64* %PC.i1575
  %4477 = inttoptr i64 %4474 to i32*
  %4478 = load i32, i32* %4477
  %4479 = sub i32 %4468, %4478
  %4480 = icmp ult i32 %4468, %4478
  %4481 = zext i1 %4480 to i8
  %4482 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4481, i8* %4482, align 1
  %4483 = and i32 %4479, 255
  %4484 = call i32 @llvm.ctpop.i32(i32 %4483)
  %4485 = trunc i32 %4484 to i8
  %4486 = and i8 %4485, 1
  %4487 = xor i8 %4486, 1
  %4488 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4487, i8* %4488, align 1
  %4489 = xor i32 %4478, %4468
  %4490 = xor i32 %4489, %4479
  %4491 = lshr i32 %4490, 4
  %4492 = trunc i32 %4491 to i8
  %4493 = and i8 %4492, 1
  %4494 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4493, i8* %4494, align 1
  %4495 = icmp eq i32 %4479, 0
  %4496 = zext i1 %4495 to i8
  %4497 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4496, i8* %4497, align 1
  %4498 = lshr i32 %4479, 31
  %4499 = trunc i32 %4498 to i8
  %4500 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4499, i8* %4500, align 1
  %4501 = lshr i32 %4468, 31
  %4502 = lshr i32 %4478, 31
  %4503 = xor i32 %4502, %4501
  %4504 = xor i32 %4498, %4501
  %4505 = add i32 %4504, %4503
  %4506 = icmp eq i32 %4505, 2
  %4507 = zext i1 %4506 to i8
  %4508 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4507, i8* %4508, align 1
  store %struct.Memory* %loadMem_400d1a, %struct.Memory** %MEMORY
  %loadMem_400d21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4509 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4510 = getelementptr inbounds %struct.GPR, %struct.GPR* %4509, i32 0, i32 33
  %4511 = getelementptr inbounds %struct.Reg, %struct.Reg* %4510, i32 0, i32 0
  %PC.i1574 = bitcast %union.anon* %4511 to i64*
  %4512 = load i64, i64* %PC.i1574
  %4513 = add i64 %4512, 179
  %4514 = load i64, i64* %PC.i1574
  %4515 = add i64 %4514, 6
  %4516 = load i64, i64* %PC.i1574
  %4517 = add i64 %4516, 6
  store i64 %4517, i64* %PC.i1574
  %4518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4519 = load i8, i8* %4518, align 1
  %4520 = icmp eq i8 %4519, 0
  %4521 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4522 = load i8, i8* %4521, align 1
  %4523 = icmp ne i8 %4522, 0
  %4524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4525 = load i8, i8* %4524, align 1
  %4526 = icmp ne i8 %4525, 0
  %4527 = xor i1 %4523, %4526
  %4528 = xor i1 %4527, true
  %4529 = and i1 %4520, %4528
  %4530 = zext i1 %4529 to i8
  store i8 %4530, i8* %BRANCH_TAKEN, align 1
  %4531 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4532 = select i1 %4529, i64 %4513, i64 %4515
  store i64 %4532, i64* %4531, align 8
  store %struct.Memory* %loadMem_400d21, %struct.Memory** %MEMORY
  %loadBr_400d21 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400d21 = icmp eq i8 %loadBr_400d21, 1
  br i1 %cmpBr_400d21, label %block_.L_400dd4, label %block_400d27

block_400d27:                                     ; preds = %block_.L_400d13
  %loadMem_400d27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4534 = getelementptr inbounds %struct.GPR, %struct.GPR* %4533, i32 0, i32 33
  %4535 = getelementptr inbounds %struct.Reg, %struct.Reg* %4534, i32 0, i32 0
  %PC.i1571 = bitcast %union.anon* %4535 to i64*
  %4536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4537 = getelementptr inbounds %struct.GPR, %struct.GPR* %4536, i32 0, i32 1
  %4538 = getelementptr inbounds %struct.Reg, %struct.Reg* %4537, i32 0, i32 0
  %RAX.i1572 = bitcast %union.anon* %4538 to i64*
  %4539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4540 = getelementptr inbounds %struct.GPR, %struct.GPR* %4539, i32 0, i32 15
  %4541 = getelementptr inbounds %struct.Reg, %struct.Reg* %4540, i32 0, i32 0
  %RBP.i1573 = bitcast %union.anon* %4541 to i64*
  %4542 = load i64, i64* %RBP.i1573
  %4543 = sub i64 %4542, 1168
  %4544 = load i64, i64* %PC.i1571
  %4545 = add i64 %4544, 7
  store i64 %4545, i64* %PC.i1571
  store i64 %4543, i64* %RAX.i1572, align 8
  store %struct.Memory* %loadMem_400d27, %struct.Memory** %MEMORY
  %loadMem_400d2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4547 = getelementptr inbounds %struct.GPR, %struct.GPR* %4546, i32 0, i32 33
  %4548 = getelementptr inbounds %struct.Reg, %struct.Reg* %4547, i32 0, i32 0
  %PC.i1568 = bitcast %union.anon* %4548 to i64*
  %4549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4550 = getelementptr inbounds %struct.GPR, %struct.GPR* %4549, i32 0, i32 5
  %4551 = getelementptr inbounds %struct.Reg, %struct.Reg* %4550, i32 0, i32 0
  %RCX.i1569 = bitcast %union.anon* %4551 to i64*
  %4552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4553 = getelementptr inbounds %struct.GPR, %struct.GPR* %4552, i32 0, i32 15
  %4554 = getelementptr inbounds %struct.Reg, %struct.Reg* %4553, i32 0, i32 0
  %RBP.i1570 = bitcast %union.anon* %4554 to i64*
  %4555 = load i64, i64* %RBP.i1570
  %4556 = sub i64 %4555, 16
  %4557 = load i64, i64* %PC.i1568
  %4558 = add i64 %4557, 4
  store i64 %4558, i64* %PC.i1568
  %4559 = inttoptr i64 %4556 to i32*
  %4560 = load i32, i32* %4559
  %4561 = sext i32 %4560 to i64
  store i64 %4561, i64* %RCX.i1569, align 8
  store %struct.Memory* %loadMem_400d2e, %struct.Memory** %MEMORY
  %loadMem_400d32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4563 = getelementptr inbounds %struct.GPR, %struct.GPR* %4562, i32 0, i32 33
  %4564 = getelementptr inbounds %struct.Reg, %struct.Reg* %4563, i32 0, i32 0
  %PC.i1566 = bitcast %union.anon* %4564 to i64*
  %4565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4566 = getelementptr inbounds %struct.GPR, %struct.GPR* %4565, i32 0, i32 5
  %4567 = getelementptr inbounds %struct.Reg, %struct.Reg* %4566, i32 0, i32 0
  %RCX.i1567 = bitcast %union.anon* %4567 to i64*
  %4568 = load i64, i64* %RCX.i1567
  %4569 = load i64, i64* %PC.i1566
  %4570 = add i64 %4569, 4
  store i64 %4570, i64* %PC.i1566
  %4571 = shl i64 %4568, 5
  %4572 = icmp slt i64 %4571, 0
  %4573 = shl i64 %4571, 1
  store i64 %4573, i64* %RCX.i1567, align 8
  %4574 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %4575 = zext i1 %4572 to i8
  store i8 %4575, i8* %4574, align 1
  %4576 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %4577 = trunc i64 %4573 to i32
  %4578 = and i32 %4577, 254
  %4579 = call i32 @llvm.ctpop.i32(i32 %4578)
  %4580 = trunc i32 %4579 to i8
  %4581 = and i8 %4580, 1
  %4582 = xor i8 %4581, 1
  store i8 %4582, i8* %4576, align 1
  %4583 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4583, align 1
  %4584 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4585 = icmp eq i64 %4573, 0
  %4586 = zext i1 %4585 to i8
  store i8 %4586, i8* %4584, align 1
  %4587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4588 = lshr i64 %4573, 63
  %4589 = trunc i64 %4588 to i8
  store i8 %4589, i8* %4587, align 1
  %4590 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4590, align 1
  store %struct.Memory* %loadMem_400d32, %struct.Memory** %MEMORY
  %loadMem_400d36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4592 = getelementptr inbounds %struct.GPR, %struct.GPR* %4591, i32 0, i32 33
  %4593 = getelementptr inbounds %struct.Reg, %struct.Reg* %4592, i32 0, i32 0
  %PC.i1563 = bitcast %union.anon* %4593 to i64*
  %4594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4595 = getelementptr inbounds %struct.GPR, %struct.GPR* %4594, i32 0, i32 1
  %4596 = getelementptr inbounds %struct.Reg, %struct.Reg* %4595, i32 0, i32 0
  %RAX.i1564 = bitcast %union.anon* %4596 to i64*
  %4597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4598 = getelementptr inbounds %struct.GPR, %struct.GPR* %4597, i32 0, i32 5
  %4599 = getelementptr inbounds %struct.Reg, %struct.Reg* %4598, i32 0, i32 0
  %RCX.i1565 = bitcast %union.anon* %4599 to i64*
  %4600 = load i64, i64* %RAX.i1564
  %4601 = load i64, i64* %RCX.i1565
  %4602 = load i64, i64* %PC.i1563
  %4603 = add i64 %4602, 3
  store i64 %4603, i64* %PC.i1563
  %4604 = add i64 %4601, %4600
  store i64 %4604, i64* %RAX.i1564, align 8
  %4605 = icmp ult i64 %4604, %4600
  %4606 = icmp ult i64 %4604, %4601
  %4607 = or i1 %4605, %4606
  %4608 = zext i1 %4607 to i8
  %4609 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4608, i8* %4609, align 1
  %4610 = trunc i64 %4604 to i32
  %4611 = and i32 %4610, 255
  %4612 = call i32 @llvm.ctpop.i32(i32 %4611)
  %4613 = trunc i32 %4612 to i8
  %4614 = and i8 %4613, 1
  %4615 = xor i8 %4614, 1
  %4616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4615, i8* %4616, align 1
  %4617 = xor i64 %4601, %4600
  %4618 = xor i64 %4617, %4604
  %4619 = lshr i64 %4618, 4
  %4620 = trunc i64 %4619 to i8
  %4621 = and i8 %4620, 1
  %4622 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4621, i8* %4622, align 1
  %4623 = icmp eq i64 %4604, 0
  %4624 = zext i1 %4623 to i8
  %4625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4624, i8* %4625, align 1
  %4626 = lshr i64 %4604, 63
  %4627 = trunc i64 %4626 to i8
  %4628 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4627, i8* %4628, align 1
  %4629 = lshr i64 %4600, 63
  %4630 = lshr i64 %4601, 63
  %4631 = xor i64 %4626, %4629
  %4632 = xor i64 %4626, %4630
  %4633 = add i64 %4631, %4632
  %4634 = icmp eq i64 %4633, 2
  %4635 = zext i1 %4634 to i8
  %4636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4635, i8* %4636, align 1
  store %struct.Memory* %loadMem_400d36, %struct.Memory** %MEMORY
  %loadMem_400d39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4638 = getelementptr inbounds %struct.GPR, %struct.GPR* %4637, i32 0, i32 33
  %4639 = getelementptr inbounds %struct.Reg, %struct.Reg* %4638, i32 0, i32 0
  %PC.i1560 = bitcast %union.anon* %4639 to i64*
  %4640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4641 = getelementptr inbounds %struct.GPR, %struct.GPR* %4640, i32 0, i32 5
  %4642 = getelementptr inbounds %struct.Reg, %struct.Reg* %4641, i32 0, i32 0
  %RCX.i1561 = bitcast %union.anon* %4642 to i64*
  %4643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4644 = getelementptr inbounds %struct.GPR, %struct.GPR* %4643, i32 0, i32 15
  %4645 = getelementptr inbounds %struct.Reg, %struct.Reg* %4644, i32 0, i32 0
  %RBP.i1562 = bitcast %union.anon* %4645 to i64*
  %4646 = load i64, i64* %RBP.i1562
  %4647 = sub i64 %4646, 4
  %4648 = load i64, i64* %PC.i1560
  %4649 = add i64 %4648, 4
  store i64 %4649, i64* %PC.i1560
  %4650 = inttoptr i64 %4647 to i32*
  %4651 = load i32, i32* %4650
  %4652 = sext i32 %4651 to i64
  store i64 %4652, i64* %RCX.i1561, align 8
  store %struct.Memory* %loadMem_400d39, %struct.Memory** %MEMORY
  %loadMem_400d3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4654 = getelementptr inbounds %struct.GPR, %struct.GPR* %4653, i32 0, i32 33
  %4655 = getelementptr inbounds %struct.Reg, %struct.Reg* %4654, i32 0, i32 0
  %PC.i1557 = bitcast %union.anon* %4655 to i64*
  %4656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4657 = getelementptr inbounds %struct.GPR, %struct.GPR* %4656, i32 0, i32 1
  %4658 = getelementptr inbounds %struct.Reg, %struct.Reg* %4657, i32 0, i32 0
  %RAX.i1558 = bitcast %union.anon* %4658 to i64*
  %4659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4660 = getelementptr inbounds %struct.GPR, %struct.GPR* %4659, i32 0, i32 5
  %4661 = getelementptr inbounds %struct.Reg, %struct.Reg* %4660, i32 0, i32 0
  %RCX.i1559 = bitcast %union.anon* %4661 to i64*
  %4662 = load i64, i64* %RAX.i1558
  %4663 = load i64, i64* %RCX.i1559
  %4664 = mul i64 %4663, 4
  %4665 = add i64 %4664, %4662
  %4666 = load i64, i64* %PC.i1557
  %4667 = add i64 %4666, 4
  store i64 %4667, i64* %PC.i1557
  %4668 = inttoptr i64 %4665 to i32*
  %4669 = load i32, i32* %4668
  %4670 = sub i32 %4669, -1
  %4671 = icmp ult i32 %4669, -1
  %4672 = zext i1 %4671 to i8
  %4673 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4672, i8* %4673, align 1
  %4674 = and i32 %4670, 255
  %4675 = call i32 @llvm.ctpop.i32(i32 %4674)
  %4676 = trunc i32 %4675 to i8
  %4677 = and i8 %4676, 1
  %4678 = xor i8 %4677, 1
  %4679 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4678, i8* %4679, align 1
  %4680 = xor i32 %4669, -1
  %4681 = xor i32 %4680, %4670
  %4682 = lshr i32 %4681, 4
  %4683 = trunc i32 %4682 to i8
  %4684 = and i8 %4683, 1
  %4685 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4684, i8* %4685, align 1
  %4686 = icmp eq i32 %4670, 0
  %4687 = zext i1 %4686 to i8
  %4688 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4687, i8* %4688, align 1
  %4689 = lshr i32 %4670, 31
  %4690 = trunc i32 %4689 to i8
  %4691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4690, i8* %4691, align 1
  %4692 = lshr i32 %4669, 31
  %4693 = xor i32 %4692, 1
  %4694 = xor i32 %4689, %4692
  %4695 = add i32 %4694, %4693
  %4696 = icmp eq i32 %4695, 2
  %4697 = zext i1 %4696 to i8
  %4698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4697, i8* %4698, align 1
  store %struct.Memory* %loadMem_400d3d, %struct.Memory** %MEMORY
  %loadMem_400d41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4700 = getelementptr inbounds %struct.GPR, %struct.GPR* %4699, i32 0, i32 33
  %4701 = getelementptr inbounds %struct.Reg, %struct.Reg* %4700, i32 0, i32 0
  %PC.i1556 = bitcast %union.anon* %4701 to i64*
  %4702 = load i64, i64* %PC.i1556
  %4703 = add i64 %4702, 128
  %4704 = load i64, i64* %PC.i1556
  %4705 = add i64 %4704, 6
  %4706 = load i64, i64* %PC.i1556
  %4707 = add i64 %4706, 6
  store i64 %4707, i64* %PC.i1556
  %4708 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4709 = load i8, i8* %4708, align 1
  store i8 %4709, i8* %BRANCH_TAKEN, align 1
  %4710 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4711 = icmp ne i8 %4709, 0
  %4712 = select i1 %4711, i64 %4703, i64 %4705
  store i64 %4712, i64* %4710, align 8
  store %struct.Memory* %loadMem_400d41, %struct.Memory** %MEMORY
  %loadBr_400d41 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400d41 = icmp eq i8 %loadBr_400d41, 1
  br i1 %cmpBr_400d41, label %block_.L_400dc1, label %block_400d47

block_400d47:                                     ; preds = %block_400d27
  %loadMem_400d47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4714 = getelementptr inbounds %struct.GPR, %struct.GPR* %4713, i32 0, i32 33
  %4715 = getelementptr inbounds %struct.Reg, %struct.Reg* %4714, i32 0, i32 0
  %PC.i1553 = bitcast %union.anon* %4715 to i64*
  %4716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4717 = getelementptr inbounds %struct.GPR, %struct.GPR* %4716, i32 0, i32 1
  %4718 = getelementptr inbounds %struct.Reg, %struct.Reg* %4717, i32 0, i32 0
  %RAX.i1554 = bitcast %union.anon* %4718 to i64*
  %4719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4720 = getelementptr inbounds %struct.GPR, %struct.GPR* %4719, i32 0, i32 15
  %4721 = getelementptr inbounds %struct.Reg, %struct.Reg* %4720, i32 0, i32 0
  %RBP.i1555 = bitcast %union.anon* %4721 to i64*
  %4722 = load i64, i64* %RBP.i1555
  %4723 = sub i64 %4722, 1168
  %4724 = load i64, i64* %PC.i1553
  %4725 = add i64 %4724, 7
  store i64 %4725, i64* %PC.i1553
  store i64 %4723, i64* %RAX.i1554, align 8
  store %struct.Memory* %loadMem_400d47, %struct.Memory** %MEMORY
  %loadMem_400d4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4727 = getelementptr inbounds %struct.GPR, %struct.GPR* %4726, i32 0, i32 33
  %4728 = getelementptr inbounds %struct.Reg, %struct.Reg* %4727, i32 0, i32 0
  %PC.i1551 = bitcast %union.anon* %4728 to i64*
  %4729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4730 = getelementptr inbounds %struct.GPR, %struct.GPR* %4729, i32 0, i32 5
  %4731 = getelementptr inbounds %struct.Reg, %struct.Reg* %4730, i32 0, i32 0
  %RCX.i1552 = bitcast %union.anon* %4731 to i64*
  %4732 = load i64, i64* %PC.i1551
  %4733 = add i64 %4732, 5
  store i64 %4733, i64* %PC.i1551
  store i64 255, i64* %RCX.i1552, align 8
  store %struct.Memory* %loadMem_400d4e, %struct.Memory** %MEMORY
  %loadMem_400d53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4735 = getelementptr inbounds %struct.GPR, %struct.GPR* %4734, i32 0, i32 33
  %4736 = getelementptr inbounds %struct.Reg, %struct.Reg* %4735, i32 0, i32 0
  %PC.i1548 = bitcast %union.anon* %4736 to i64*
  %4737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4738 = getelementptr inbounds %struct.GPR, %struct.GPR* %4737, i32 0, i32 7
  %4739 = getelementptr inbounds %struct.Reg, %struct.Reg* %4738, i32 0, i32 0
  %RDX.i1549 = bitcast %union.anon* %4739 to i64*
  %4740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4741 = getelementptr inbounds %struct.GPR, %struct.GPR* %4740, i32 0, i32 15
  %4742 = getelementptr inbounds %struct.Reg, %struct.Reg* %4741, i32 0, i32 0
  %RBP.i1550 = bitcast %union.anon* %4742 to i64*
  %4743 = load i64, i64* %RBP.i1550
  %4744 = sub i64 %4743, 12
  %4745 = load i64, i64* %PC.i1548
  %4746 = add i64 %4745, 4
  store i64 %4746, i64* %PC.i1548
  %4747 = inttoptr i64 %4744 to i32*
  %4748 = load i32, i32* %4747
  %4749 = sext i32 %4748 to i64
  store i64 %4749, i64* %RDX.i1549, align 8
  store %struct.Memory* %loadMem_400d53, %struct.Memory** %MEMORY
  %loadMem_400d57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4751 = getelementptr inbounds %struct.GPR, %struct.GPR* %4750, i32 0, i32 33
  %4752 = getelementptr inbounds %struct.Reg, %struct.Reg* %4751, i32 0, i32 0
  %PC.i1544 = bitcast %union.anon* %4752 to i64*
  %4753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4754 = getelementptr inbounds %struct.GPR, %struct.GPR* %4753, i32 0, i32 7
  %4755 = getelementptr inbounds %struct.Reg, %struct.Reg* %4754, i32 0, i32 0
  %RDX.i1545 = bitcast %union.anon* %4755 to i64*
  %4756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4757 = getelementptr inbounds %struct.GPR, %struct.GPR* %4756, i32 0, i32 9
  %4758 = getelementptr inbounds %struct.Reg, %struct.Reg* %4757, i32 0, i32 0
  %RSI.i1546 = bitcast %union.anon* %4758 to i64*
  %4759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4760 = getelementptr inbounds %struct.GPR, %struct.GPR* %4759, i32 0, i32 15
  %4761 = getelementptr inbounds %struct.Reg, %struct.Reg* %4760, i32 0, i32 0
  %RBP.i1547 = bitcast %union.anon* %4761 to i64*
  %4762 = load i64, i64* %RBP.i1547
  %4763 = load i64, i64* %RDX.i1545
  %4764 = mul i64 %4763, 4
  %4765 = add i64 %4762, -1248
  %4766 = add i64 %4765, %4764
  %4767 = load i64, i64* %PC.i1544
  %4768 = add i64 %4767, 7
  store i64 %4768, i64* %PC.i1544
  %4769 = inttoptr i64 %4766 to i32*
  %4770 = load i32, i32* %4769
  %4771 = zext i32 %4770 to i64
  store i64 %4771, i64* %RSI.i1546, align 8
  store %struct.Memory* %loadMem_400d57, %struct.Memory** %MEMORY
  %loadMem_400d5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4773 = getelementptr inbounds %struct.GPR, %struct.GPR* %4772, i32 0, i32 33
  %4774 = getelementptr inbounds %struct.Reg, %struct.Reg* %4773, i32 0, i32 0
  %PC.i1542 = bitcast %union.anon* %4774 to i64*
  %4775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4776 = getelementptr inbounds %struct.GPR, %struct.GPR* %4775, i32 0, i32 9
  %4777 = getelementptr inbounds %struct.Reg, %struct.Reg* %4776, i32 0, i32 0
  %RSI.i1543 = bitcast %union.anon* %4777 to i64*
  %4778 = load i64, i64* %RSI.i1543
  %4779 = load i64, i64* %PC.i1542
  %4780 = add i64 %4779, 6
  store i64 %4780, i64* %PC.i1542
  %4781 = trunc i64 %4778 to i32
  %4782 = add i32 255, %4781
  %4783 = zext i32 %4782 to i64
  store i64 %4783, i64* %RSI.i1543, align 8
  %4784 = icmp ult i32 %4782, %4781
  %4785 = icmp ult i32 %4782, 255
  %4786 = or i1 %4784, %4785
  %4787 = zext i1 %4786 to i8
  %4788 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4787, i8* %4788, align 1
  %4789 = and i32 %4782, 255
  %4790 = call i32 @llvm.ctpop.i32(i32 %4789)
  %4791 = trunc i32 %4790 to i8
  %4792 = and i8 %4791, 1
  %4793 = xor i8 %4792, 1
  %4794 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4793, i8* %4794, align 1
  %4795 = xor i64 255, %4778
  %4796 = trunc i64 %4795 to i32
  %4797 = xor i32 %4796, %4782
  %4798 = lshr i32 %4797, 4
  %4799 = trunc i32 %4798 to i8
  %4800 = and i8 %4799, 1
  %4801 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4800, i8* %4801, align 1
  %4802 = icmp eq i32 %4782, 0
  %4803 = zext i1 %4802 to i8
  %4804 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4803, i8* %4804, align 1
  %4805 = lshr i32 %4782, 31
  %4806 = trunc i32 %4805 to i8
  %4807 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4806, i8* %4807, align 1
  %4808 = lshr i32 %4781, 31
  %4809 = xor i32 %4805, %4808
  %4810 = add i32 %4809, %4805
  %4811 = icmp eq i32 %4810, 2
  %4812 = zext i1 %4811 to i8
  %4813 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4812, i8* %4813, align 1
  store %struct.Memory* %loadMem_400d5e, %struct.Memory** %MEMORY
  %loadMem_400d64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4815 = getelementptr inbounds %struct.GPR, %struct.GPR* %4814, i32 0, i32 33
  %4816 = getelementptr inbounds %struct.Reg, %struct.Reg* %4815, i32 0, i32 0
  %PC.i1539 = bitcast %union.anon* %4816 to i64*
  %4817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4818 = getelementptr inbounds %struct.GPR, %struct.GPR* %4817, i32 0, i32 7
  %4819 = getelementptr inbounds %struct.Reg, %struct.Reg* %4818, i32 0, i32 0
  %RDX.i1540 = bitcast %union.anon* %4819 to i64*
  %4820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4821 = getelementptr inbounds %struct.GPR, %struct.GPR* %4820, i32 0, i32 15
  %4822 = getelementptr inbounds %struct.Reg, %struct.Reg* %4821, i32 0, i32 0
  %RBP.i1541 = bitcast %union.anon* %4822 to i64*
  %4823 = load i64, i64* %RBP.i1541
  %4824 = sub i64 %4823, 16
  %4825 = load i64, i64* %PC.i1539
  %4826 = add i64 %4825, 4
  store i64 %4826, i64* %PC.i1539
  %4827 = inttoptr i64 %4824 to i32*
  %4828 = load i32, i32* %4827
  %4829 = sext i32 %4828 to i64
  store i64 %4829, i64* %RDX.i1540, align 8
  store %struct.Memory* %loadMem_400d64, %struct.Memory** %MEMORY
  %loadMem_400d68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4831 = getelementptr inbounds %struct.GPR, %struct.GPR* %4830, i32 0, i32 33
  %4832 = getelementptr inbounds %struct.Reg, %struct.Reg* %4831, i32 0, i32 0
  %PC.i1535 = bitcast %union.anon* %4832 to i64*
  %4833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4834 = getelementptr inbounds %struct.GPR, %struct.GPR* %4833, i32 0, i32 7
  %4835 = getelementptr inbounds %struct.Reg, %struct.Reg* %4834, i32 0, i32 0
  %RDX.i1536 = bitcast %union.anon* %4835 to i64*
  %4836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4837 = getelementptr inbounds %struct.GPR, %struct.GPR* %4836, i32 0, i32 9
  %4838 = getelementptr inbounds %struct.Reg, %struct.Reg* %4837, i32 0, i32 0
  %RSI.i1537 = bitcast %union.anon* %4838 to i64*
  %4839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4840 = getelementptr inbounds %struct.GPR, %struct.GPR* %4839, i32 0, i32 15
  %4841 = getelementptr inbounds %struct.Reg, %struct.Reg* %4840, i32 0, i32 0
  %RBP.i1538 = bitcast %union.anon* %4841 to i64*
  %4842 = load i64, i64* %RSI.i1537
  %4843 = load i64, i64* %RBP.i1538
  %4844 = load i64, i64* %RDX.i1536
  %4845 = mul i64 %4844, 4
  %4846 = add i64 %4843, -1248
  %4847 = add i64 %4846, %4845
  %4848 = load i64, i64* %PC.i1535
  %4849 = add i64 %4848, 7
  store i64 %4849, i64* %PC.i1535
  %4850 = trunc i64 %4842 to i32
  %4851 = inttoptr i64 %4847 to i32*
  %4852 = load i32, i32* %4851
  %4853 = sub i32 %4850, %4852
  %4854 = zext i32 %4853 to i64
  store i64 %4854, i64* %RSI.i1537, align 8
  %4855 = icmp ult i32 %4850, %4852
  %4856 = zext i1 %4855 to i8
  %4857 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4856, i8* %4857, align 1
  %4858 = and i32 %4853, 255
  %4859 = call i32 @llvm.ctpop.i32(i32 %4858)
  %4860 = trunc i32 %4859 to i8
  %4861 = and i8 %4860, 1
  %4862 = xor i8 %4861, 1
  %4863 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4862, i8* %4863, align 1
  %4864 = xor i32 %4852, %4850
  %4865 = xor i32 %4864, %4853
  %4866 = lshr i32 %4865, 4
  %4867 = trunc i32 %4866 to i8
  %4868 = and i8 %4867, 1
  %4869 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4868, i8* %4869, align 1
  %4870 = icmp eq i32 %4853, 0
  %4871 = zext i1 %4870 to i8
  %4872 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4871, i8* %4872, align 1
  %4873 = lshr i32 %4853, 31
  %4874 = trunc i32 %4873 to i8
  %4875 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4874, i8* %4875, align 1
  %4876 = lshr i32 %4850, 31
  %4877 = lshr i32 %4852, 31
  %4878 = xor i32 %4877, %4876
  %4879 = xor i32 %4873, %4876
  %4880 = add i32 %4879, %4878
  %4881 = icmp eq i32 %4880, 2
  %4882 = zext i1 %4881 to i8
  %4883 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4882, i8* %4883, align 1
  store %struct.Memory* %loadMem_400d68, %struct.Memory** %MEMORY
  %loadMem_400d6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4885 = getelementptr inbounds %struct.GPR, %struct.GPR* %4884, i32 0, i32 33
  %4886 = getelementptr inbounds %struct.Reg, %struct.Reg* %4885, i32 0, i32 0
  %PC.i1532 = bitcast %union.anon* %4886 to i64*
  %4887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4888 = getelementptr inbounds %struct.GPR, %struct.GPR* %4887, i32 0, i32 7
  %4889 = getelementptr inbounds %struct.Reg, %struct.Reg* %4888, i32 0, i32 0
  %RDX.i1533 = bitcast %union.anon* %4889 to i64*
  %4890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4891 = getelementptr inbounds %struct.GPR, %struct.GPR* %4890, i32 0, i32 15
  %4892 = getelementptr inbounds %struct.Reg, %struct.Reg* %4891, i32 0, i32 0
  %RBP.i1534 = bitcast %union.anon* %4892 to i64*
  %4893 = load i64, i64* %RBP.i1534
  %4894 = sub i64 %4893, 16
  %4895 = load i64, i64* %PC.i1532
  %4896 = add i64 %4895, 4
  store i64 %4896, i64* %PC.i1532
  %4897 = inttoptr i64 %4894 to i32*
  %4898 = load i32, i32* %4897
  %4899 = sext i32 %4898 to i64
  store i64 %4899, i64* %RDX.i1533, align 8
  store %struct.Memory* %loadMem_400d6f, %struct.Memory** %MEMORY
  %loadMem_400d73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4901 = getelementptr inbounds %struct.GPR, %struct.GPR* %4900, i32 0, i32 33
  %4902 = getelementptr inbounds %struct.Reg, %struct.Reg* %4901, i32 0, i32 0
  %PC.i1530 = bitcast %union.anon* %4902 to i64*
  %4903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4904 = getelementptr inbounds %struct.GPR, %struct.GPR* %4903, i32 0, i32 7
  %4905 = getelementptr inbounds %struct.Reg, %struct.Reg* %4904, i32 0, i32 0
  %RDX.i1531 = bitcast %union.anon* %4905 to i64*
  %4906 = load i64, i64* %RDX.i1531
  %4907 = load i64, i64* %PC.i1530
  %4908 = add i64 %4907, 4
  store i64 %4908, i64* %PC.i1530
  %4909 = shl i64 %4906, 5
  %4910 = icmp slt i64 %4909, 0
  %4911 = shl i64 %4909, 1
  store i64 %4911, i64* %RDX.i1531, align 8
  %4912 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %4913 = zext i1 %4910 to i8
  store i8 %4913, i8* %4912, align 1
  %4914 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %4915 = trunc i64 %4911 to i32
  %4916 = and i32 %4915, 254
  %4917 = call i32 @llvm.ctpop.i32(i32 %4916)
  %4918 = trunc i32 %4917 to i8
  %4919 = and i8 %4918, 1
  %4920 = xor i8 %4919, 1
  store i8 %4920, i8* %4914, align 1
  %4921 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4921, align 1
  %4922 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4923 = icmp eq i64 %4911, 0
  %4924 = zext i1 %4923 to i8
  store i8 %4924, i8* %4922, align 1
  %4925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4926 = lshr i64 %4911, 63
  %4927 = trunc i64 %4926 to i8
  store i8 %4927, i8* %4925, align 1
  %4928 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4928, align 1
  store %struct.Memory* %loadMem_400d73, %struct.Memory** %MEMORY
  %loadMem_400d77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4930 = getelementptr inbounds %struct.GPR, %struct.GPR* %4929, i32 0, i32 33
  %4931 = getelementptr inbounds %struct.Reg, %struct.Reg* %4930, i32 0, i32 0
  %PC.i1527 = bitcast %union.anon* %4931 to i64*
  %4932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4933 = getelementptr inbounds %struct.GPR, %struct.GPR* %4932, i32 0, i32 1
  %4934 = getelementptr inbounds %struct.Reg, %struct.Reg* %4933, i32 0, i32 0
  %RAX.i1528 = bitcast %union.anon* %4934 to i64*
  %4935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4936 = getelementptr inbounds %struct.GPR, %struct.GPR* %4935, i32 0, i32 11
  %4937 = getelementptr inbounds %struct.Reg, %struct.Reg* %4936, i32 0, i32 0
  %RDI.i1529 = bitcast %union.anon* %4937 to i64*
  %4938 = load i64, i64* %RAX.i1528
  %4939 = load i64, i64* %PC.i1527
  %4940 = add i64 %4939, 3
  store i64 %4940, i64* %PC.i1527
  store i64 %4938, i64* %RDI.i1529, align 8
  store %struct.Memory* %loadMem_400d77, %struct.Memory** %MEMORY
  %loadMem_400d7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4942 = getelementptr inbounds %struct.GPR, %struct.GPR* %4941, i32 0, i32 33
  %4943 = getelementptr inbounds %struct.Reg, %struct.Reg* %4942, i32 0, i32 0
  %PC.i1524 = bitcast %union.anon* %4943 to i64*
  %4944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4945 = getelementptr inbounds %struct.GPR, %struct.GPR* %4944, i32 0, i32 7
  %4946 = getelementptr inbounds %struct.Reg, %struct.Reg* %4945, i32 0, i32 0
  %RDX.i1525 = bitcast %union.anon* %4946 to i64*
  %4947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4948 = getelementptr inbounds %struct.GPR, %struct.GPR* %4947, i32 0, i32 11
  %4949 = getelementptr inbounds %struct.Reg, %struct.Reg* %4948, i32 0, i32 0
  %RDI.i1526 = bitcast %union.anon* %4949 to i64*
  %4950 = load i64, i64* %RDI.i1526
  %4951 = load i64, i64* %RDX.i1525
  %4952 = load i64, i64* %PC.i1524
  %4953 = add i64 %4952, 3
  store i64 %4953, i64* %PC.i1524
  %4954 = add i64 %4951, %4950
  store i64 %4954, i64* %RDI.i1526, align 8
  %4955 = icmp ult i64 %4954, %4950
  %4956 = icmp ult i64 %4954, %4951
  %4957 = or i1 %4955, %4956
  %4958 = zext i1 %4957 to i8
  %4959 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4958, i8* %4959, align 1
  %4960 = trunc i64 %4954 to i32
  %4961 = and i32 %4960, 255
  %4962 = call i32 @llvm.ctpop.i32(i32 %4961)
  %4963 = trunc i32 %4962 to i8
  %4964 = and i8 %4963, 1
  %4965 = xor i8 %4964, 1
  %4966 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4965, i8* %4966, align 1
  %4967 = xor i64 %4951, %4950
  %4968 = xor i64 %4967, %4954
  %4969 = lshr i64 %4968, 4
  %4970 = trunc i64 %4969 to i8
  %4971 = and i8 %4970, 1
  %4972 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4971, i8* %4972, align 1
  %4973 = icmp eq i64 %4954, 0
  %4974 = zext i1 %4973 to i8
  %4975 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4974, i8* %4975, align 1
  %4976 = lshr i64 %4954, 63
  %4977 = trunc i64 %4976 to i8
  %4978 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4977, i8* %4978, align 1
  %4979 = lshr i64 %4950, 63
  %4980 = lshr i64 %4951, 63
  %4981 = xor i64 %4976, %4979
  %4982 = xor i64 %4976, %4980
  %4983 = add i64 %4981, %4982
  %4984 = icmp eq i64 %4983, 2
  %4985 = zext i1 %4984 to i8
  %4986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4985, i8* %4986, align 1
  store %struct.Memory* %loadMem_400d7a, %struct.Memory** %MEMORY
  %loadMem_400d7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4988 = getelementptr inbounds %struct.GPR, %struct.GPR* %4987, i32 0, i32 33
  %4989 = getelementptr inbounds %struct.Reg, %struct.Reg* %4988, i32 0, i32 0
  %PC.i1521 = bitcast %union.anon* %4989 to i64*
  %4990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4991 = getelementptr inbounds %struct.GPR, %struct.GPR* %4990, i32 0, i32 7
  %4992 = getelementptr inbounds %struct.Reg, %struct.Reg* %4991, i32 0, i32 0
  %RDX.i1522 = bitcast %union.anon* %4992 to i64*
  %4993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4994 = getelementptr inbounds %struct.GPR, %struct.GPR* %4993, i32 0, i32 15
  %4995 = getelementptr inbounds %struct.Reg, %struct.Reg* %4994, i32 0, i32 0
  %RBP.i1523 = bitcast %union.anon* %4995 to i64*
  %4996 = load i64, i64* %RBP.i1523
  %4997 = sub i64 %4996, 4
  %4998 = load i64, i64* %PC.i1521
  %4999 = add i64 %4998, 4
  store i64 %4999, i64* %PC.i1521
  %5000 = inttoptr i64 %4997 to i32*
  %5001 = load i32, i32* %5000
  %5002 = sext i32 %5001 to i64
  store i64 %5002, i64* %RDX.i1522, align 8
  store %struct.Memory* %loadMem_400d7d, %struct.Memory** %MEMORY
  %loadMem_400d81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5004 = getelementptr inbounds %struct.GPR, %struct.GPR* %5003, i32 0, i32 33
  %5005 = getelementptr inbounds %struct.Reg, %struct.Reg* %5004, i32 0, i32 0
  %PC.i1517 = bitcast %union.anon* %5005 to i64*
  %5006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5007 = getelementptr inbounds %struct.GPR, %struct.GPR* %5006, i32 0, i32 7
  %5008 = getelementptr inbounds %struct.Reg, %struct.Reg* %5007, i32 0, i32 0
  %RDX.i1518 = bitcast %union.anon* %5008 to i64*
  %5009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5010 = getelementptr inbounds %struct.GPR, %struct.GPR* %5009, i32 0, i32 9
  %5011 = getelementptr inbounds %struct.Reg, %struct.Reg* %5010, i32 0, i32 0
  %RSI.i1519 = bitcast %union.anon* %5011 to i64*
  %5012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5013 = getelementptr inbounds %struct.GPR, %struct.GPR* %5012, i32 0, i32 11
  %5014 = getelementptr inbounds %struct.Reg, %struct.Reg* %5013, i32 0, i32 0
  %RDI.i1520 = bitcast %union.anon* %5014 to i64*
  %5015 = load i64, i64* %RSI.i1519
  %5016 = load i64, i64* %RDI.i1520
  %5017 = load i64, i64* %RDX.i1518
  %5018 = mul i64 %5017, 4
  %5019 = add i64 %5018, %5016
  %5020 = load i64, i64* %PC.i1517
  %5021 = add i64 %5020, 3
  store i64 %5021, i64* %PC.i1517
  %5022 = trunc i64 %5015 to i32
  %5023 = inttoptr i64 %5019 to i32*
  %5024 = load i32, i32* %5023
  %5025 = add i32 %5024, %5022
  %5026 = zext i32 %5025 to i64
  store i64 %5026, i64* %RSI.i1519, align 8
  %5027 = icmp ult i32 %5025, %5022
  %5028 = icmp ult i32 %5025, %5024
  %5029 = or i1 %5027, %5028
  %5030 = zext i1 %5029 to i8
  %5031 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5030, i8* %5031, align 1
  %5032 = and i32 %5025, 255
  %5033 = call i32 @llvm.ctpop.i32(i32 %5032)
  %5034 = trunc i32 %5033 to i8
  %5035 = and i8 %5034, 1
  %5036 = xor i8 %5035, 1
  %5037 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5036, i8* %5037, align 1
  %5038 = xor i32 %5024, %5022
  %5039 = xor i32 %5038, %5025
  %5040 = lshr i32 %5039, 4
  %5041 = trunc i32 %5040 to i8
  %5042 = and i8 %5041, 1
  %5043 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5042, i8* %5043, align 1
  %5044 = icmp eq i32 %5025, 0
  %5045 = zext i1 %5044 to i8
  %5046 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5045, i8* %5046, align 1
  %5047 = lshr i32 %5025, 31
  %5048 = trunc i32 %5047 to i8
  %5049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5048, i8* %5049, align 1
  %5050 = lshr i32 %5022, 31
  %5051 = lshr i32 %5024, 31
  %5052 = xor i32 %5047, %5050
  %5053 = xor i32 %5047, %5051
  %5054 = add i32 %5052, %5053
  %5055 = icmp eq i32 %5054, 2
  %5056 = zext i1 %5055 to i8
  %5057 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5056, i8* %5057, align 1
  store %struct.Memory* %loadMem_400d81, %struct.Memory** %MEMORY
  %loadMem_400d84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5059 = getelementptr inbounds %struct.GPR, %struct.GPR* %5058, i32 0, i32 33
  %5060 = getelementptr inbounds %struct.Reg, %struct.Reg* %5059, i32 0, i32 0
  %PC.i1514 = bitcast %union.anon* %5060 to i64*
  %5061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5062 = getelementptr inbounds %struct.GPR, %struct.GPR* %5061, i32 0, i32 1
  %5063 = getelementptr inbounds %struct.Reg, %struct.Reg* %5062, i32 0, i32 0
  %RAX.i1515 = bitcast %union.anon* %5063 to i64*
  %5064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5065 = getelementptr inbounds %struct.GPR, %struct.GPR* %5064, i32 0, i32 15
  %5066 = getelementptr inbounds %struct.Reg, %struct.Reg* %5065, i32 0, i32 0
  %RBP.i1516 = bitcast %union.anon* %5066 to i64*
  %5067 = load i64, i64* %RBP.i1516
  %5068 = sub i64 %5067, 2704
  %5069 = load i64, i64* %RAX.i1515
  %5070 = load i64, i64* %PC.i1514
  %5071 = add i64 %5070, 7
  store i64 %5071, i64* %PC.i1514
  %5072 = inttoptr i64 %5068 to i64*
  store i64 %5069, i64* %5072
  store %struct.Memory* %loadMem_400d84, %struct.Memory** %MEMORY
  %loadMem_400d8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5074 = getelementptr inbounds %struct.GPR, %struct.GPR* %5073, i32 0, i32 33
  %5075 = getelementptr inbounds %struct.Reg, %struct.Reg* %5074, i32 0, i32 0
  %PC.i1511 = bitcast %union.anon* %5075 to i64*
  %5076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5077 = getelementptr inbounds %struct.GPR, %struct.GPR* %5076, i32 0, i32 9
  %5078 = getelementptr inbounds %struct.Reg, %struct.Reg* %5077, i32 0, i32 0
  %ESI.i1512 = bitcast %union.anon* %5078 to i32*
  %5079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5080 = getelementptr inbounds %struct.GPR, %struct.GPR* %5079, i32 0, i32 1
  %5081 = getelementptr inbounds %struct.Reg, %struct.Reg* %5080, i32 0, i32 0
  %RAX.i1513 = bitcast %union.anon* %5081 to i64*
  %5082 = load i32, i32* %ESI.i1512
  %5083 = zext i32 %5082 to i64
  %5084 = load i64, i64* %PC.i1511
  %5085 = add i64 %5084, 2
  store i64 %5085, i64* %PC.i1511
  %5086 = and i64 %5083, 4294967295
  store i64 %5086, i64* %RAX.i1513, align 8
  store %struct.Memory* %loadMem_400d8b, %struct.Memory** %MEMORY
  %loadMem_400d8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5087 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5088 = getelementptr inbounds %struct.GPR, %struct.GPR* %5087, i32 0, i32 33
  %5089 = getelementptr inbounds %struct.Reg, %struct.Reg* %5088, i32 0, i32 0
  %PC.i1510 = bitcast %union.anon* %5089 to i64*
  %5090 = load i64, i64* %PC.i1510
  %5091 = add i64 %5090, 1
  store i64 %5091, i64* %PC.i1510
  %5092 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %5093 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %5094 = bitcast %union.anon* %5093 to i32*
  %5095 = load i32, i32* %5094, align 8
  %5096 = sext i32 %5095 to i64
  %5097 = lshr i64 %5096, 32
  store i64 %5097, i64* %5092, align 8
  store %struct.Memory* %loadMem_400d8d, %struct.Memory** %MEMORY
  %loadMem_400d8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5099 = getelementptr inbounds %struct.GPR, %struct.GPR* %5098, i32 0, i32 33
  %5100 = getelementptr inbounds %struct.Reg, %struct.Reg* %5099, i32 0, i32 0
  %PC.i1504 = bitcast %union.anon* %5100 to i64*
  %5101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5102 = getelementptr inbounds %struct.GPR, %struct.GPR* %5101, i32 0, i32 5
  %5103 = getelementptr inbounds %struct.Reg, %struct.Reg* %5102, i32 0, i32 0
  %ECX.i1505 = bitcast %union.anon* %5103 to i32*
  %5104 = load i32, i32* %ECX.i1505
  %5105 = zext i32 %5104 to i64
  %5106 = load i64, i64* %PC.i1504
  %5107 = add i64 %5106, 2
  store i64 %5107, i64* %PC.i1504
  %5108 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %5109 = bitcast %union.anon* %5108 to i32*
  %5110 = load i32, i32* %5109, align 8
  %5111 = zext i32 %5110 to i64
  %5112 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %5113 = bitcast %union.anon* %5112 to i32*
  %5114 = load i32, i32* %5113, align 8
  %5115 = zext i32 %5114 to i64
  %5116 = shl i64 %5105, 32
  %5117 = ashr exact i64 %5116, 32
  %5118 = shl i64 %5115, 32
  %5119 = or i64 %5118, %5111
  %5120 = sdiv i64 %5119, %5117
  %5121 = shl i64 %5120, 32
  %5122 = ashr exact i64 %5121, 32
  %5123 = icmp eq i64 %5120, %5122
  br i1 %5123, label %5128, label %5124

; <label>:5124:                                   ; preds = %block_400d47
  %5125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5126 = load i64, i64* %5125, align 8
  %5127 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %5126, %struct.Memory* %loadMem_400d8e)
  br label %routine_idivl__ecx.exit1506

; <label>:5128:                                   ; preds = %block_400d47
  %5129 = srem i64 %5119, %5117
  %5130 = getelementptr inbounds %union.anon, %union.anon* %5108, i64 0, i32 0
  %5131 = and i64 %5120, 4294967295
  store i64 %5131, i64* %5130, align 8
  %5132 = getelementptr inbounds %union.anon, %union.anon* %5112, i64 0, i32 0
  %5133 = and i64 %5129, 4294967295
  store i64 %5133, i64* %5132, align 8
  %5134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5134, align 1
  %5135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %5135, align 1
  %5136 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5136, align 1
  %5137 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5137, align 1
  %5138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %5138, align 1
  %5139 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5139, align 1
  br label %routine_idivl__ecx.exit1506

routine_idivl__ecx.exit1506:                      ; preds = %5124, %5128
  %5140 = phi %struct.Memory* [ %5127, %5124 ], [ %loadMem_400d8e, %5128 ]
  store %struct.Memory* %5140, %struct.Memory** %MEMORY
  %loadMem_400d90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5142 = getelementptr inbounds %struct.GPR, %struct.GPR* %5141, i32 0, i32 33
  %5143 = getelementptr inbounds %struct.Reg, %struct.Reg* %5142, i32 0, i32 0
  %PC.i1501 = bitcast %union.anon* %5143 to i64*
  %5144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5145 = getelementptr inbounds %struct.GPR, %struct.GPR* %5144, i32 0, i32 7
  %5146 = getelementptr inbounds %struct.Reg, %struct.Reg* %5145, i32 0, i32 0
  %EDX.i1502 = bitcast %union.anon* %5146 to i32*
  %5147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5148 = getelementptr inbounds %struct.GPR, %struct.GPR* %5147, i32 0, i32 11
  %5149 = getelementptr inbounds %struct.Reg, %struct.Reg* %5148, i32 0, i32 0
  %RDI.i1503 = bitcast %union.anon* %5149 to i64*
  %5150 = load i32, i32* %EDX.i1502
  %5151 = zext i32 %5150 to i64
  %5152 = load i64, i64* %PC.i1501
  %5153 = add i64 %5152, 3
  store i64 %5153, i64* %PC.i1501
  %5154 = shl i64 %5151, 32
  %5155 = ashr exact i64 %5154, 32
  store i64 %5155, i64* %RDI.i1503, align 8
  store %struct.Memory* %loadMem_400d90, %struct.Memory** %MEMORY
  %loadMem_400d93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5157 = getelementptr inbounds %struct.GPR, %struct.GPR* %5156, i32 0, i32 33
  %5158 = getelementptr inbounds %struct.Reg, %struct.Reg* %5157, i32 0, i32 0
  %PC.i1498 = bitcast %union.anon* %5158 to i64*
  %5159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5160 = getelementptr inbounds %struct.GPR, %struct.GPR* %5159, i32 0, i32 5
  %5161 = getelementptr inbounds %struct.Reg, %struct.Reg* %5160, i32 0, i32 0
  %RCX.i1499 = bitcast %union.anon* %5161 to i64*
  %5162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5163 = getelementptr inbounds %struct.GPR, %struct.GPR* %5162, i32 0, i32 11
  %5164 = getelementptr inbounds %struct.Reg, %struct.Reg* %5163, i32 0, i32 0
  %RDI.i1500 = bitcast %union.anon* %5164 to i64*
  %5165 = load i64, i64* %RDI.i1500
  %5166 = mul i64 %5165, 4
  %5167 = add i64 %5166, 6305920
  %5168 = load i64, i64* %PC.i1498
  %5169 = add i64 %5168, 7
  store i64 %5169, i64* %PC.i1498
  %5170 = inttoptr i64 %5167 to i32*
  %5171 = load i32, i32* %5170
  %5172 = zext i32 %5171 to i64
  store i64 %5172, i64* %RCX.i1499, align 8
  store %struct.Memory* %loadMem_400d93, %struct.Memory** %MEMORY
  %loadMem_400d9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5174 = getelementptr inbounds %struct.GPR, %struct.GPR* %5173, i32 0, i32 33
  %5175 = getelementptr inbounds %struct.Reg, %struct.Reg* %5174, i32 0, i32 0
  %PC.i1495 = bitcast %union.anon* %5175 to i64*
  %5176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5177 = getelementptr inbounds %struct.GPR, %struct.GPR* %5176, i32 0, i32 7
  %5178 = getelementptr inbounds %struct.Reg, %struct.Reg* %5177, i32 0, i32 0
  %RDX.i1496 = bitcast %union.anon* %5178 to i64*
  %5179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5180 = getelementptr inbounds %struct.GPR, %struct.GPR* %5179, i32 0, i32 15
  %5181 = getelementptr inbounds %struct.Reg, %struct.Reg* %5180, i32 0, i32 0
  %RBP.i1497 = bitcast %union.anon* %5181 to i64*
  %5182 = load i64, i64* %RBP.i1497
  %5183 = sub i64 %5182, 12
  %5184 = load i64, i64* %PC.i1495
  %5185 = add i64 %5184, 3
  store i64 %5185, i64* %PC.i1495
  %5186 = inttoptr i64 %5183 to i32*
  %5187 = load i32, i32* %5186
  %5188 = zext i32 %5187 to i64
  store i64 %5188, i64* %RDX.i1496, align 8
  store %struct.Memory* %loadMem_400d9a, %struct.Memory** %MEMORY
  %loadMem_400d9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5190 = getelementptr inbounds %struct.GPR, %struct.GPR* %5189, i32 0, i32 33
  %5191 = getelementptr inbounds %struct.Reg, %struct.Reg* %5190, i32 0, i32 0
  %PC.i1493 = bitcast %union.anon* %5191 to i64*
  %5192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5193 = getelementptr inbounds %struct.GPR, %struct.GPR* %5192, i32 0, i32 7
  %5194 = getelementptr inbounds %struct.Reg, %struct.Reg* %5193, i32 0, i32 0
  %RDX.i1494 = bitcast %union.anon* %5194 to i64*
  %5195 = load i64, i64* %RDX.i1494
  %5196 = load i64, i64* %PC.i1493
  %5197 = add i64 %5196, 3
  store i64 %5197, i64* %PC.i1493
  %5198 = trunc i64 %5195 to i32
  %5199 = add i32 1, %5198
  %5200 = zext i32 %5199 to i64
  store i64 %5200, i64* %RDX.i1494, align 8
  %5201 = icmp ult i32 %5199, %5198
  %5202 = icmp ult i32 %5199, 1
  %5203 = or i1 %5201, %5202
  %5204 = zext i1 %5203 to i8
  %5205 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5204, i8* %5205, align 1
  %5206 = and i32 %5199, 255
  %5207 = call i32 @llvm.ctpop.i32(i32 %5206)
  %5208 = trunc i32 %5207 to i8
  %5209 = and i8 %5208, 1
  %5210 = xor i8 %5209, 1
  %5211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5210, i8* %5211, align 1
  %5212 = xor i64 1, %5195
  %5213 = trunc i64 %5212 to i32
  %5214 = xor i32 %5213, %5199
  %5215 = lshr i32 %5214, 4
  %5216 = trunc i32 %5215 to i8
  %5217 = and i8 %5216, 1
  %5218 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5217, i8* %5218, align 1
  %5219 = icmp eq i32 %5199, 0
  %5220 = zext i1 %5219 to i8
  %5221 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5220, i8* %5221, align 1
  %5222 = lshr i32 %5199, 31
  %5223 = trunc i32 %5222 to i8
  %5224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5223, i8* %5224, align 1
  %5225 = lshr i32 %5198, 31
  %5226 = xor i32 %5222, %5225
  %5227 = add i32 %5226, %5222
  %5228 = icmp eq i32 %5227, 2
  %5229 = zext i1 %5228 to i8
  %5230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5229, i8* %5230, align 1
  store %struct.Memory* %loadMem_400d9d, %struct.Memory** %MEMORY
  %loadMem_400da0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5232 = getelementptr inbounds %struct.GPR, %struct.GPR* %5231, i32 0, i32 33
  %5233 = getelementptr inbounds %struct.Reg, %struct.Reg* %5232, i32 0, i32 0
  %PC.i1490 = bitcast %union.anon* %5233 to i64*
  %5234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5235 = getelementptr inbounds %struct.GPR, %struct.GPR* %5234, i32 0, i32 7
  %5236 = getelementptr inbounds %struct.Reg, %struct.Reg* %5235, i32 0, i32 0
  %EDX.i1491 = bitcast %union.anon* %5236 to i32*
  %5237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5238 = getelementptr inbounds %struct.GPR, %struct.GPR* %5237, i32 0, i32 11
  %5239 = getelementptr inbounds %struct.Reg, %struct.Reg* %5238, i32 0, i32 0
  %RDI.i1492 = bitcast %union.anon* %5239 to i64*
  %5240 = load i32, i32* %EDX.i1491
  %5241 = zext i32 %5240 to i64
  %5242 = load i64, i64* %PC.i1490
  %5243 = add i64 %5242, 3
  store i64 %5243, i64* %PC.i1490
  %5244 = shl i64 %5241, 32
  %5245 = ashr exact i64 %5244, 32
  store i64 %5245, i64* %RDI.i1492, align 8
  store %struct.Memory* %loadMem_400da0, %struct.Memory** %MEMORY
  %loadMem_400da3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5247 = getelementptr inbounds %struct.GPR, %struct.GPR* %5246, i32 0, i32 33
  %5248 = getelementptr inbounds %struct.Reg, %struct.Reg* %5247, i32 0, i32 0
  %PC.i1488 = bitcast %union.anon* %5248 to i64*
  %5249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5250 = getelementptr inbounds %struct.GPR, %struct.GPR* %5249, i32 0, i32 11
  %5251 = getelementptr inbounds %struct.Reg, %struct.Reg* %5250, i32 0, i32 0
  %RDI.i1489 = bitcast %union.anon* %5251 to i64*
  %5252 = load i64, i64* %RDI.i1489
  %5253 = load i64, i64* %PC.i1488
  %5254 = add i64 %5253, 4
  store i64 %5254, i64* %PC.i1488
  %5255 = shl i64 %5252, 5
  %5256 = icmp slt i64 %5255, 0
  %5257 = shl i64 %5255, 1
  store i64 %5257, i64* %RDI.i1489, align 8
  %5258 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %5259 = zext i1 %5256 to i8
  store i8 %5259, i8* %5258, align 1
  %5260 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %5261 = trunc i64 %5257 to i32
  %5262 = and i32 %5261, 254
  %5263 = call i32 @llvm.ctpop.i32(i32 %5262)
  %5264 = trunc i32 %5263 to i8
  %5265 = and i8 %5264, 1
  %5266 = xor i8 %5265, 1
  store i8 %5266, i8* %5260, align 1
  %5267 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5267, align 1
  %5268 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5269 = icmp eq i64 %5257, 0
  %5270 = zext i1 %5269 to i8
  store i8 %5270, i8* %5268, align 1
  %5271 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5272 = lshr i64 %5257, 63
  %5273 = trunc i64 %5272 to i8
  store i8 %5273, i8* %5271, align 1
  %5274 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5274, align 1
  store %struct.Memory* %loadMem_400da3, %struct.Memory** %MEMORY
  %loadMem_400da7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5276 = getelementptr inbounds %struct.GPR, %struct.GPR* %5275, i32 0, i32 33
  %5277 = getelementptr inbounds %struct.Reg, %struct.Reg* %5276, i32 0, i32 0
  %PC.i1485 = bitcast %union.anon* %5277 to i64*
  %5278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5279 = getelementptr inbounds %struct.GPR, %struct.GPR* %5278, i32 0, i32 15
  %5280 = getelementptr inbounds %struct.Reg, %struct.Reg* %5279, i32 0, i32 0
  %RBP.i1486 = bitcast %union.anon* %5280 to i64*
  %5281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5282 = getelementptr inbounds %struct.GPR, %struct.GPR* %5281, i32 0, i32 17
  %5283 = getelementptr inbounds %struct.Reg, %struct.Reg* %5282, i32 0, i32 0
  %R8.i1487 = bitcast %union.anon* %5283 to i64*
  %5284 = load i64, i64* %RBP.i1486
  %5285 = sub i64 %5284, 2704
  %5286 = load i64, i64* %PC.i1485
  %5287 = add i64 %5286, 7
  store i64 %5287, i64* %PC.i1485
  %5288 = inttoptr i64 %5285 to i64*
  %5289 = load i64, i64* %5288
  store i64 %5289, i64* %R8.i1487, align 8
  store %struct.Memory* %loadMem_400da7, %struct.Memory** %MEMORY
  %loadMem_400dae = load %struct.Memory*, %struct.Memory** %MEMORY
  %5290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5291 = getelementptr inbounds %struct.GPR, %struct.GPR* %5290, i32 0, i32 33
  %5292 = getelementptr inbounds %struct.Reg, %struct.Reg* %5291, i32 0, i32 0
  %PC.i1482 = bitcast %union.anon* %5292 to i64*
  %5293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5294 = getelementptr inbounds %struct.GPR, %struct.GPR* %5293, i32 0, i32 11
  %5295 = getelementptr inbounds %struct.Reg, %struct.Reg* %5294, i32 0, i32 0
  %RDI.i1483 = bitcast %union.anon* %5295 to i64*
  %5296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5297 = getelementptr inbounds %struct.GPR, %struct.GPR* %5296, i32 0, i32 17
  %5298 = getelementptr inbounds %struct.Reg, %struct.Reg* %5297, i32 0, i32 0
  %R8.i1484 = bitcast %union.anon* %5298 to i64*
  %5299 = load i64, i64* %R8.i1484
  %5300 = load i64, i64* %RDI.i1483
  %5301 = load i64, i64* %PC.i1482
  %5302 = add i64 %5301, 3
  store i64 %5302, i64* %PC.i1482
  %5303 = add i64 %5300, %5299
  store i64 %5303, i64* %R8.i1484, align 8
  %5304 = icmp ult i64 %5303, %5299
  %5305 = icmp ult i64 %5303, %5300
  %5306 = or i1 %5304, %5305
  %5307 = zext i1 %5306 to i8
  %5308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5307, i8* %5308, align 1
  %5309 = trunc i64 %5303 to i32
  %5310 = and i32 %5309, 255
  %5311 = call i32 @llvm.ctpop.i32(i32 %5310)
  %5312 = trunc i32 %5311 to i8
  %5313 = and i8 %5312, 1
  %5314 = xor i8 %5313, 1
  %5315 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5314, i8* %5315, align 1
  %5316 = xor i64 %5300, %5299
  %5317 = xor i64 %5316, %5303
  %5318 = lshr i64 %5317, 4
  %5319 = trunc i64 %5318 to i8
  %5320 = and i8 %5319, 1
  %5321 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5320, i8* %5321, align 1
  %5322 = icmp eq i64 %5303, 0
  %5323 = zext i1 %5322 to i8
  %5324 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5323, i8* %5324, align 1
  %5325 = lshr i64 %5303, 63
  %5326 = trunc i64 %5325 to i8
  %5327 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5326, i8* %5327, align 1
  %5328 = lshr i64 %5299, 63
  %5329 = lshr i64 %5300, 63
  %5330 = xor i64 %5325, %5328
  %5331 = xor i64 %5325, %5329
  %5332 = add i64 %5330, %5331
  %5333 = icmp eq i64 %5332, 2
  %5334 = zext i1 %5333 to i8
  %5335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5334, i8* %5335, align 1
  store %struct.Memory* %loadMem_400dae, %struct.Memory** %MEMORY
  %loadMem_400db1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5337 = getelementptr inbounds %struct.GPR, %struct.GPR* %5336, i32 0, i32 33
  %5338 = getelementptr inbounds %struct.Reg, %struct.Reg* %5337, i32 0, i32 0
  %PC.i1479 = bitcast %union.anon* %5338 to i64*
  %5339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5340 = getelementptr inbounds %struct.GPR, %struct.GPR* %5339, i32 0, i32 7
  %5341 = getelementptr inbounds %struct.Reg, %struct.Reg* %5340, i32 0, i32 0
  %RDX.i1480 = bitcast %union.anon* %5341 to i64*
  %5342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5343 = getelementptr inbounds %struct.GPR, %struct.GPR* %5342, i32 0, i32 15
  %5344 = getelementptr inbounds %struct.Reg, %struct.Reg* %5343, i32 0, i32 0
  %RBP.i1481 = bitcast %union.anon* %5344 to i64*
  %5345 = load i64, i64* %RBP.i1481
  %5346 = sub i64 %5345, 4
  %5347 = load i64, i64* %PC.i1479
  %5348 = add i64 %5347, 3
  store i64 %5348, i64* %PC.i1479
  %5349 = inttoptr i64 %5346 to i32*
  %5350 = load i32, i32* %5349
  %5351 = zext i32 %5350 to i64
  store i64 %5351, i64* %RDX.i1480, align 8
  store %struct.Memory* %loadMem_400db1, %struct.Memory** %MEMORY
  %loadMem_400db4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5353 = getelementptr inbounds %struct.GPR, %struct.GPR* %5352, i32 0, i32 33
  %5354 = getelementptr inbounds %struct.Reg, %struct.Reg* %5353, i32 0, i32 0
  %PC.i1476 = bitcast %union.anon* %5354 to i64*
  %5355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5356 = getelementptr inbounds %struct.GPR, %struct.GPR* %5355, i32 0, i32 7
  %5357 = getelementptr inbounds %struct.Reg, %struct.Reg* %5356, i32 0, i32 0
  %RDX.i1477 = bitcast %union.anon* %5357 to i64*
  %5358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5359 = getelementptr inbounds %struct.GPR, %struct.GPR* %5358, i32 0, i32 15
  %5360 = getelementptr inbounds %struct.Reg, %struct.Reg* %5359, i32 0, i32 0
  %RBP.i1478 = bitcast %union.anon* %5360 to i64*
  %5361 = load i64, i64* %RDX.i1477
  %5362 = load i64, i64* %RBP.i1478
  %5363 = sub i64 %5362, 12
  %5364 = load i64, i64* %PC.i1476
  %5365 = add i64 %5364, 3
  store i64 %5365, i64* %PC.i1476
  %5366 = trunc i64 %5361 to i32
  %5367 = inttoptr i64 %5363 to i32*
  %5368 = load i32, i32* %5367
  %5369 = add i32 %5368, %5366
  %5370 = zext i32 %5369 to i64
  store i64 %5370, i64* %RDX.i1477, align 8
  %5371 = icmp ult i32 %5369, %5366
  %5372 = icmp ult i32 %5369, %5368
  %5373 = or i1 %5371, %5372
  %5374 = zext i1 %5373 to i8
  %5375 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5374, i8* %5375, align 1
  %5376 = and i32 %5369, 255
  %5377 = call i32 @llvm.ctpop.i32(i32 %5376)
  %5378 = trunc i32 %5377 to i8
  %5379 = and i8 %5378, 1
  %5380 = xor i8 %5379, 1
  %5381 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5380, i8* %5381, align 1
  %5382 = xor i32 %5368, %5366
  %5383 = xor i32 %5382, %5369
  %5384 = lshr i32 %5383, 4
  %5385 = trunc i32 %5384 to i8
  %5386 = and i8 %5385, 1
  %5387 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5386, i8* %5387, align 1
  %5388 = icmp eq i32 %5369, 0
  %5389 = zext i1 %5388 to i8
  %5390 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5389, i8* %5390, align 1
  %5391 = lshr i32 %5369, 31
  %5392 = trunc i32 %5391 to i8
  %5393 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5392, i8* %5393, align 1
  %5394 = lshr i32 %5366, 31
  %5395 = lshr i32 %5368, 31
  %5396 = xor i32 %5391, %5394
  %5397 = xor i32 %5391, %5395
  %5398 = add i32 %5396, %5397
  %5399 = icmp eq i32 %5398, 2
  %5400 = zext i1 %5399 to i8
  %5401 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5400, i8* %5401, align 1
  store %struct.Memory* %loadMem_400db4, %struct.Memory** %MEMORY
  %loadMem_400db7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5403 = getelementptr inbounds %struct.GPR, %struct.GPR* %5402, i32 0, i32 33
  %5404 = getelementptr inbounds %struct.Reg, %struct.Reg* %5403, i32 0, i32 0
  %PC.i1473 = bitcast %union.anon* %5404 to i64*
  %5405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5406 = getelementptr inbounds %struct.GPR, %struct.GPR* %5405, i32 0, i32 7
  %5407 = getelementptr inbounds %struct.Reg, %struct.Reg* %5406, i32 0, i32 0
  %RDX.i1474 = bitcast %union.anon* %5407 to i64*
  %5408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5409 = getelementptr inbounds %struct.GPR, %struct.GPR* %5408, i32 0, i32 15
  %5410 = getelementptr inbounds %struct.Reg, %struct.Reg* %5409, i32 0, i32 0
  %RBP.i1475 = bitcast %union.anon* %5410 to i64*
  %5411 = load i64, i64* %RDX.i1474
  %5412 = load i64, i64* %RBP.i1475
  %5413 = sub i64 %5412, 16
  %5414 = load i64, i64* %PC.i1473
  %5415 = add i64 %5414, 3
  store i64 %5415, i64* %PC.i1473
  %5416 = trunc i64 %5411 to i32
  %5417 = inttoptr i64 %5413 to i32*
  %5418 = load i32, i32* %5417
  %5419 = sub i32 %5416, %5418
  %5420 = zext i32 %5419 to i64
  store i64 %5420, i64* %RDX.i1474, align 8
  %5421 = icmp ult i32 %5416, %5418
  %5422 = zext i1 %5421 to i8
  %5423 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5422, i8* %5423, align 1
  %5424 = and i32 %5419, 255
  %5425 = call i32 @llvm.ctpop.i32(i32 %5424)
  %5426 = trunc i32 %5425 to i8
  %5427 = and i8 %5426, 1
  %5428 = xor i8 %5427, 1
  %5429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5428, i8* %5429, align 1
  %5430 = xor i32 %5418, %5416
  %5431 = xor i32 %5430, %5419
  %5432 = lshr i32 %5431, 4
  %5433 = trunc i32 %5432 to i8
  %5434 = and i8 %5433, 1
  %5435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5434, i8* %5435, align 1
  %5436 = icmp eq i32 %5419, 0
  %5437 = zext i1 %5436 to i8
  %5438 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5437, i8* %5438, align 1
  %5439 = lshr i32 %5419, 31
  %5440 = trunc i32 %5439 to i8
  %5441 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5440, i8* %5441, align 1
  %5442 = lshr i32 %5416, 31
  %5443 = lshr i32 %5418, 31
  %5444 = xor i32 %5443, %5442
  %5445 = xor i32 %5439, %5442
  %5446 = add i32 %5445, %5444
  %5447 = icmp eq i32 %5446, 2
  %5448 = zext i1 %5447 to i8
  %5449 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5448, i8* %5449, align 1
  store %struct.Memory* %loadMem_400db7, %struct.Memory** %MEMORY
  %loadMem_400dba = load %struct.Memory*, %struct.Memory** %MEMORY
  %5450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5451 = getelementptr inbounds %struct.GPR, %struct.GPR* %5450, i32 0, i32 33
  %5452 = getelementptr inbounds %struct.Reg, %struct.Reg* %5451, i32 0, i32 0
  %PC.i1470 = bitcast %union.anon* %5452 to i64*
  %5453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5454 = getelementptr inbounds %struct.GPR, %struct.GPR* %5453, i32 0, i32 7
  %5455 = getelementptr inbounds %struct.Reg, %struct.Reg* %5454, i32 0, i32 0
  %EDX.i1471 = bitcast %union.anon* %5455 to i32*
  %5456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5457 = getelementptr inbounds %struct.GPR, %struct.GPR* %5456, i32 0, i32 11
  %5458 = getelementptr inbounds %struct.Reg, %struct.Reg* %5457, i32 0, i32 0
  %RDI.i1472 = bitcast %union.anon* %5458 to i64*
  %5459 = load i32, i32* %EDX.i1471
  %5460 = zext i32 %5459 to i64
  %5461 = load i64, i64* %PC.i1470
  %5462 = add i64 %5461, 3
  store i64 %5462, i64* %PC.i1470
  %5463 = shl i64 %5460, 32
  %5464 = ashr exact i64 %5463, 32
  store i64 %5464, i64* %RDI.i1472, align 8
  store %struct.Memory* %loadMem_400dba, %struct.Memory** %MEMORY
  %loadMem_400dbd = load %struct.Memory*, %struct.Memory** %MEMORY
  %5465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5466 = getelementptr inbounds %struct.GPR, %struct.GPR* %5465, i32 0, i32 33
  %5467 = getelementptr inbounds %struct.Reg, %struct.Reg* %5466, i32 0, i32 0
  %PC.i1467 = bitcast %union.anon* %5467 to i64*
  %5468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5469 = getelementptr inbounds %struct.GPR, %struct.GPR* %5468, i32 0, i32 5
  %5470 = getelementptr inbounds %struct.Reg, %struct.Reg* %5469, i32 0, i32 0
  %ECX.i1468 = bitcast %union.anon* %5470 to i32*
  %5471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5472 = getelementptr inbounds %struct.GPR, %struct.GPR* %5471, i32 0, i32 11
  %5473 = getelementptr inbounds %struct.Reg, %struct.Reg* %5472, i32 0, i32 0
  %RDI.i1469 = bitcast %union.anon* %5473 to i64*
  %5474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5475 = getelementptr inbounds %struct.GPR, %struct.GPR* %5474, i32 0, i32 17
  %5476 = getelementptr inbounds %struct.Reg, %struct.Reg* %5475, i32 0, i32 0
  %R8.i = bitcast %union.anon* %5476 to i64*
  %5477 = load i64, i64* %R8.i
  %5478 = load i64, i64* %RDI.i1469
  %5479 = mul i64 %5478, 4
  %5480 = add i64 %5479, %5477
  %5481 = load i32, i32* %ECX.i1468
  %5482 = zext i32 %5481 to i64
  %5483 = load i64, i64* %PC.i1467
  %5484 = add i64 %5483, 4
  store i64 %5484, i64* %PC.i1467
  %5485 = inttoptr i64 %5480 to i32*
  store i32 %5481, i32* %5485
  store %struct.Memory* %loadMem_400dbd, %struct.Memory** %MEMORY
  br label %block_.L_400dc1

block_.L_400dc1:                                  ; preds = %routine_idivl__ecx.exit1506, %block_400d27
  %loadMem_400dc1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5487 = getelementptr inbounds %struct.GPR, %struct.GPR* %5486, i32 0, i32 33
  %5488 = getelementptr inbounds %struct.Reg, %struct.Reg* %5487, i32 0, i32 0
  %PC.i1466 = bitcast %union.anon* %5488 to i64*
  %5489 = load i64, i64* %PC.i1466
  %5490 = add i64 %5489, 5
  %5491 = load i64, i64* %PC.i1466
  %5492 = add i64 %5491, 5
  store i64 %5492, i64* %PC.i1466
  %5493 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5490, i64* %5493, align 8
  store %struct.Memory* %loadMem_400dc1, %struct.Memory** %MEMORY
  br label %block_.L_400dc6

block_.L_400dc6:                                  ; preds = %block_.L_400dc1
  %loadMem_400dc6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5495 = getelementptr inbounds %struct.GPR, %struct.GPR* %5494, i32 0, i32 33
  %5496 = getelementptr inbounds %struct.Reg, %struct.Reg* %5495, i32 0, i32 0
  %PC.i1463 = bitcast %union.anon* %5496 to i64*
  %5497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5498 = getelementptr inbounds %struct.GPR, %struct.GPR* %5497, i32 0, i32 1
  %5499 = getelementptr inbounds %struct.Reg, %struct.Reg* %5498, i32 0, i32 0
  %RAX.i1464 = bitcast %union.anon* %5499 to i64*
  %5500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5501 = getelementptr inbounds %struct.GPR, %struct.GPR* %5500, i32 0, i32 15
  %5502 = getelementptr inbounds %struct.Reg, %struct.Reg* %5501, i32 0, i32 0
  %RBP.i1465 = bitcast %union.anon* %5502 to i64*
  %5503 = load i64, i64* %RBP.i1465
  %5504 = sub i64 %5503, 4
  %5505 = load i64, i64* %PC.i1463
  %5506 = add i64 %5505, 3
  store i64 %5506, i64* %PC.i1463
  %5507 = inttoptr i64 %5504 to i32*
  %5508 = load i32, i32* %5507
  %5509 = zext i32 %5508 to i64
  store i64 %5509, i64* %RAX.i1464, align 8
  store %struct.Memory* %loadMem_400dc6, %struct.Memory** %MEMORY
  %loadMem_400dc9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5511 = getelementptr inbounds %struct.GPR, %struct.GPR* %5510, i32 0, i32 33
  %5512 = getelementptr inbounds %struct.Reg, %struct.Reg* %5511, i32 0, i32 0
  %PC.i1461 = bitcast %union.anon* %5512 to i64*
  %5513 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5514 = getelementptr inbounds %struct.GPR, %struct.GPR* %5513, i32 0, i32 1
  %5515 = getelementptr inbounds %struct.Reg, %struct.Reg* %5514, i32 0, i32 0
  %RAX.i1462 = bitcast %union.anon* %5515 to i64*
  %5516 = load i64, i64* %RAX.i1462
  %5517 = load i64, i64* %PC.i1461
  %5518 = add i64 %5517, 3
  store i64 %5518, i64* %PC.i1461
  %5519 = trunc i64 %5516 to i32
  %5520 = add i32 1, %5519
  %5521 = zext i32 %5520 to i64
  store i64 %5521, i64* %RAX.i1462, align 8
  %5522 = icmp ult i32 %5520, %5519
  %5523 = icmp ult i32 %5520, 1
  %5524 = or i1 %5522, %5523
  %5525 = zext i1 %5524 to i8
  %5526 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5525, i8* %5526, align 1
  %5527 = and i32 %5520, 255
  %5528 = call i32 @llvm.ctpop.i32(i32 %5527)
  %5529 = trunc i32 %5528 to i8
  %5530 = and i8 %5529, 1
  %5531 = xor i8 %5530, 1
  %5532 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5531, i8* %5532, align 1
  %5533 = xor i64 1, %5516
  %5534 = trunc i64 %5533 to i32
  %5535 = xor i32 %5534, %5520
  %5536 = lshr i32 %5535, 4
  %5537 = trunc i32 %5536 to i8
  %5538 = and i8 %5537, 1
  %5539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5538, i8* %5539, align 1
  %5540 = icmp eq i32 %5520, 0
  %5541 = zext i1 %5540 to i8
  %5542 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5541, i8* %5542, align 1
  %5543 = lshr i32 %5520, 31
  %5544 = trunc i32 %5543 to i8
  %5545 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5544, i8* %5545, align 1
  %5546 = lshr i32 %5519, 31
  %5547 = xor i32 %5543, %5546
  %5548 = add i32 %5547, %5543
  %5549 = icmp eq i32 %5548, 2
  %5550 = zext i1 %5549 to i8
  %5551 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5550, i8* %5551, align 1
  store %struct.Memory* %loadMem_400dc9, %struct.Memory** %MEMORY
  %loadMem_400dcc = load %struct.Memory*, %struct.Memory** %MEMORY
  %5552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5553 = getelementptr inbounds %struct.GPR, %struct.GPR* %5552, i32 0, i32 33
  %5554 = getelementptr inbounds %struct.Reg, %struct.Reg* %5553, i32 0, i32 0
  %PC.i1458 = bitcast %union.anon* %5554 to i64*
  %5555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5556 = getelementptr inbounds %struct.GPR, %struct.GPR* %5555, i32 0, i32 1
  %5557 = getelementptr inbounds %struct.Reg, %struct.Reg* %5556, i32 0, i32 0
  %EAX.i1459 = bitcast %union.anon* %5557 to i32*
  %5558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5559 = getelementptr inbounds %struct.GPR, %struct.GPR* %5558, i32 0, i32 15
  %5560 = getelementptr inbounds %struct.Reg, %struct.Reg* %5559, i32 0, i32 0
  %RBP.i1460 = bitcast %union.anon* %5560 to i64*
  %5561 = load i64, i64* %RBP.i1460
  %5562 = sub i64 %5561, 4
  %5563 = load i32, i32* %EAX.i1459
  %5564 = zext i32 %5563 to i64
  %5565 = load i64, i64* %PC.i1458
  %5566 = add i64 %5565, 3
  store i64 %5566, i64* %PC.i1458
  %5567 = inttoptr i64 %5562 to i32*
  store i32 %5563, i32* %5567
  store %struct.Memory* %loadMem_400dcc, %struct.Memory** %MEMORY
  %loadMem_400dcf = load %struct.Memory*, %struct.Memory** %MEMORY
  %5568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5569 = getelementptr inbounds %struct.GPR, %struct.GPR* %5568, i32 0, i32 33
  %5570 = getelementptr inbounds %struct.Reg, %struct.Reg* %5569, i32 0, i32 0
  %PC.i1457 = bitcast %union.anon* %5570 to i64*
  %5571 = load i64, i64* %PC.i1457
  %5572 = add i64 %5571, -188
  %5573 = load i64, i64* %PC.i1457
  %5574 = add i64 %5573, 5
  store i64 %5574, i64* %PC.i1457
  %5575 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5572, i64* %5575, align 8
  store %struct.Memory* %loadMem_400dcf, %struct.Memory** %MEMORY
  br label %block_.L_400d13

block_.L_400dd4:                                  ; preds = %block_.L_400d13
  %loadMem_400dd4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5577 = getelementptr inbounds %struct.GPR, %struct.GPR* %5576, i32 0, i32 33
  %5578 = getelementptr inbounds %struct.Reg, %struct.Reg* %5577, i32 0, i32 0
  %PC.i1455 = bitcast %union.anon* %5578 to i64*
  %5579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5580 = getelementptr inbounds %struct.GPR, %struct.GPR* %5579, i32 0, i32 15
  %5581 = getelementptr inbounds %struct.Reg, %struct.Reg* %5580, i32 0, i32 0
  %RBP.i1456 = bitcast %union.anon* %5581 to i64*
  %5582 = load i64, i64* %RBP.i1456
  %5583 = sub i64 %5582, 4
  %5584 = load i64, i64* %PC.i1455
  %5585 = add i64 %5584, 7
  store i64 %5585, i64* %PC.i1455
  %5586 = inttoptr i64 %5583 to i32*
  store i32 0, i32* %5586
  store %struct.Memory* %loadMem_400dd4, %struct.Memory** %MEMORY
  br label %block_.L_400ddb

block_.L_400ddb:                                  ; preds = %block_400def, %block_.L_400dd4
  %loadMem_400ddb = load %struct.Memory*, %struct.Memory** %MEMORY
  %5587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5588 = getelementptr inbounds %struct.GPR, %struct.GPR* %5587, i32 0, i32 33
  %5589 = getelementptr inbounds %struct.Reg, %struct.Reg* %5588, i32 0, i32 0
  %PC.i1452 = bitcast %union.anon* %5589 to i64*
  %5590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5591 = getelementptr inbounds %struct.GPR, %struct.GPR* %5590, i32 0, i32 1
  %5592 = getelementptr inbounds %struct.Reg, %struct.Reg* %5591, i32 0, i32 0
  %RAX.i1453 = bitcast %union.anon* %5592 to i64*
  %5593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5594 = getelementptr inbounds %struct.GPR, %struct.GPR* %5593, i32 0, i32 15
  %5595 = getelementptr inbounds %struct.Reg, %struct.Reg* %5594, i32 0, i32 0
  %RBP.i1454 = bitcast %union.anon* %5595 to i64*
  %5596 = load i64, i64* %RBP.i1454
  %5597 = sub i64 %5596, 4
  %5598 = load i64, i64* %PC.i1452
  %5599 = add i64 %5598, 3
  store i64 %5599, i64* %PC.i1452
  %5600 = inttoptr i64 %5597 to i32*
  %5601 = load i32, i32* %5600
  %5602 = zext i32 %5601 to i64
  store i64 %5602, i64* %RAX.i1453, align 8
  store %struct.Memory* %loadMem_400ddb, %struct.Memory** %MEMORY
  %loadMem_400dde = load %struct.Memory*, %struct.Memory** %MEMORY
  %5603 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5604 = getelementptr inbounds %struct.GPR, %struct.GPR* %5603, i32 0, i32 33
  %5605 = getelementptr inbounds %struct.Reg, %struct.Reg* %5604, i32 0, i32 0
  %PC.i1449 = bitcast %union.anon* %5605 to i64*
  %5606 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5607 = getelementptr inbounds %struct.GPR, %struct.GPR* %5606, i32 0, i32 5
  %5608 = getelementptr inbounds %struct.Reg, %struct.Reg* %5607, i32 0, i32 0
  %RCX.i1450 = bitcast %union.anon* %5608 to i64*
  %5609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5610 = getelementptr inbounds %struct.GPR, %struct.GPR* %5609, i32 0, i32 15
  %5611 = getelementptr inbounds %struct.Reg, %struct.Reg* %5610, i32 0, i32 0
  %RBP.i1451 = bitcast %union.anon* %5611 to i64*
  %5612 = load i64, i64* %RBP.i1451
  %5613 = sub i64 %5612, 12
  %5614 = load i64, i64* %PC.i1449
  %5615 = add i64 %5614, 4
  store i64 %5615, i64* %PC.i1449
  %5616 = inttoptr i64 %5613 to i32*
  %5617 = load i32, i32* %5616
  %5618 = sext i32 %5617 to i64
  store i64 %5618, i64* %RCX.i1450, align 8
  store %struct.Memory* %loadMem_400dde, %struct.Memory** %MEMORY
  %loadMem_400de2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5620 = getelementptr inbounds %struct.GPR, %struct.GPR* %5619, i32 0, i32 33
  %5621 = getelementptr inbounds %struct.Reg, %struct.Reg* %5620, i32 0, i32 0
  %PC.i1445 = bitcast %union.anon* %5621 to i64*
  %5622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5623 = getelementptr inbounds %struct.GPR, %struct.GPR* %5622, i32 0, i32 1
  %5624 = getelementptr inbounds %struct.Reg, %struct.Reg* %5623, i32 0, i32 0
  %EAX.i1446 = bitcast %union.anon* %5624 to i32*
  %5625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5626 = getelementptr inbounds %struct.GPR, %struct.GPR* %5625, i32 0, i32 5
  %5627 = getelementptr inbounds %struct.Reg, %struct.Reg* %5626, i32 0, i32 0
  %RCX.i1447 = bitcast %union.anon* %5627 to i64*
  %5628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5629 = getelementptr inbounds %struct.GPR, %struct.GPR* %5628, i32 0, i32 15
  %5630 = getelementptr inbounds %struct.Reg, %struct.Reg* %5629, i32 0, i32 0
  %RBP.i1448 = bitcast %union.anon* %5630 to i64*
  %5631 = load i32, i32* %EAX.i1446
  %5632 = zext i32 %5631 to i64
  %5633 = load i64, i64* %RBP.i1448
  %5634 = load i64, i64* %RCX.i1447
  %5635 = mul i64 %5634, 4
  %5636 = add i64 %5633, -1328
  %5637 = add i64 %5636, %5635
  %5638 = load i64, i64* %PC.i1445
  %5639 = add i64 %5638, 7
  store i64 %5639, i64* %PC.i1445
  %5640 = inttoptr i64 %5637 to i32*
  %5641 = load i32, i32* %5640
  %5642 = sub i32 %5631, %5641
  %5643 = icmp ult i32 %5631, %5641
  %5644 = zext i1 %5643 to i8
  %5645 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5644, i8* %5645, align 1
  %5646 = and i32 %5642, 255
  %5647 = call i32 @llvm.ctpop.i32(i32 %5646)
  %5648 = trunc i32 %5647 to i8
  %5649 = and i8 %5648, 1
  %5650 = xor i8 %5649, 1
  %5651 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5650, i8* %5651, align 1
  %5652 = xor i32 %5641, %5631
  %5653 = xor i32 %5652, %5642
  %5654 = lshr i32 %5653, 4
  %5655 = trunc i32 %5654 to i8
  %5656 = and i8 %5655, 1
  %5657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5656, i8* %5657, align 1
  %5658 = icmp eq i32 %5642, 0
  %5659 = zext i1 %5658 to i8
  %5660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5659, i8* %5660, align 1
  %5661 = lshr i32 %5642, 31
  %5662 = trunc i32 %5661 to i8
  %5663 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5662, i8* %5663, align 1
  %5664 = lshr i32 %5631, 31
  %5665 = lshr i32 %5641, 31
  %5666 = xor i32 %5665, %5664
  %5667 = xor i32 %5661, %5664
  %5668 = add i32 %5667, %5666
  %5669 = icmp eq i32 %5668, 2
  %5670 = zext i1 %5669 to i8
  %5671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5670, i8* %5671, align 1
  store %struct.Memory* %loadMem_400de2, %struct.Memory** %MEMORY
  %loadMem_400de9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5673 = getelementptr inbounds %struct.GPR, %struct.GPR* %5672, i32 0, i32 33
  %5674 = getelementptr inbounds %struct.Reg, %struct.Reg* %5673, i32 0, i32 0
  %PC.i1444 = bitcast %union.anon* %5674 to i64*
  %5675 = load i64, i64* %PC.i1444
  %5676 = add i64 %5675, 124
  %5677 = load i64, i64* %PC.i1444
  %5678 = add i64 %5677, 6
  %5679 = load i64, i64* %PC.i1444
  %5680 = add i64 %5679, 6
  store i64 %5680, i64* %PC.i1444
  %5681 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5682 = load i8, i8* %5681, align 1
  %5683 = icmp eq i8 %5682, 0
  %5684 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5685 = load i8, i8* %5684, align 1
  %5686 = icmp ne i8 %5685, 0
  %5687 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5688 = load i8, i8* %5687, align 1
  %5689 = icmp ne i8 %5688, 0
  %5690 = xor i1 %5686, %5689
  %5691 = xor i1 %5690, true
  %5692 = and i1 %5683, %5691
  %5693 = zext i1 %5692 to i8
  store i8 %5693, i8* %BRANCH_TAKEN, align 1
  %5694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5695 = select i1 %5692, i64 %5676, i64 %5678
  store i64 %5695, i64* %5694, align 8
  store %struct.Memory* %loadMem_400de9, %struct.Memory** %MEMORY
  %loadBr_400de9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400de9 = icmp eq i8 %loadBr_400de9, 1
  br i1 %cmpBr_400de9, label %block_.L_400e65, label %block_400def

block_400def:                                     ; preds = %block_.L_400ddb
  %loadMem_400def = load %struct.Memory*, %struct.Memory** %MEMORY
  %5696 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5697 = getelementptr inbounds %struct.GPR, %struct.GPR* %5696, i32 0, i32 33
  %5698 = getelementptr inbounds %struct.Reg, %struct.Reg* %5697, i32 0, i32 0
  %PC.i1441 = bitcast %union.anon* %5698 to i64*
  %5699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5700 = getelementptr inbounds %struct.GPR, %struct.GPR* %5699, i32 0, i32 1
  %5701 = getelementptr inbounds %struct.Reg, %struct.Reg* %5700, i32 0, i32 0
  %RAX.i1442 = bitcast %union.anon* %5701 to i64*
  %5702 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5703 = getelementptr inbounds %struct.GPR, %struct.GPR* %5702, i32 0, i32 15
  %5704 = getelementptr inbounds %struct.Reg, %struct.Reg* %5703, i32 0, i32 0
  %RBP.i1443 = bitcast %union.anon* %5704 to i64*
  %5705 = load i64, i64* %RBP.i1443
  %5706 = sub i64 %5705, 1168
  %5707 = load i64, i64* %PC.i1441
  %5708 = add i64 %5707, 7
  store i64 %5708, i64* %PC.i1441
  store i64 %5706, i64* %RAX.i1442, align 8
  store %struct.Memory* %loadMem_400def, %struct.Memory** %MEMORY
  %loadMem_400df6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5710 = getelementptr inbounds %struct.GPR, %struct.GPR* %5709, i32 0, i32 33
  %5711 = getelementptr inbounds %struct.Reg, %struct.Reg* %5710, i32 0, i32 0
  %PC.i1438 = bitcast %union.anon* %5711 to i64*
  %5712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5713 = getelementptr inbounds %struct.GPR, %struct.GPR* %5712, i32 0, i32 5
  %5714 = getelementptr inbounds %struct.Reg, %struct.Reg* %5713, i32 0, i32 0
  %RCX.i1439 = bitcast %union.anon* %5714 to i64*
  %5715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5716 = getelementptr inbounds %struct.GPR, %struct.GPR* %5715, i32 0, i32 15
  %5717 = getelementptr inbounds %struct.Reg, %struct.Reg* %5716, i32 0, i32 0
  %RBP.i1440 = bitcast %union.anon* %5717 to i64*
  %5718 = load i64, i64* %RBP.i1440
  %5719 = sub i64 %5718, 12
  %5720 = load i64, i64* %PC.i1438
  %5721 = add i64 %5720, 4
  store i64 %5721, i64* %PC.i1438
  %5722 = inttoptr i64 %5719 to i32*
  %5723 = load i32, i32* %5722
  %5724 = sext i32 %5723 to i64
  store i64 %5724, i64* %RCX.i1439, align 8
  store %struct.Memory* %loadMem_400df6, %struct.Memory** %MEMORY
  %loadMem_400dfa = load %struct.Memory*, %struct.Memory** %MEMORY
  %5725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5726 = getelementptr inbounds %struct.GPR, %struct.GPR* %5725, i32 0, i32 33
  %5727 = getelementptr inbounds %struct.Reg, %struct.Reg* %5726, i32 0, i32 0
  %PC.i1436 = bitcast %union.anon* %5727 to i64*
  %5728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5729 = getelementptr inbounds %struct.GPR, %struct.GPR* %5728, i32 0, i32 5
  %5730 = getelementptr inbounds %struct.Reg, %struct.Reg* %5729, i32 0, i32 0
  %RCX.i1437 = bitcast %union.anon* %5730 to i64*
  %5731 = load i64, i64* %RCX.i1437
  %5732 = load i64, i64* %PC.i1436
  %5733 = add i64 %5732, 4
  store i64 %5733, i64* %PC.i1436
  %5734 = shl i64 %5731, 5
  %5735 = icmp slt i64 %5734, 0
  %5736 = shl i64 %5734, 1
  store i64 %5736, i64* %RCX.i1437, align 8
  %5737 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %5738 = zext i1 %5735 to i8
  store i8 %5738, i8* %5737, align 1
  %5739 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %5740 = trunc i64 %5736 to i32
  %5741 = and i32 %5740, 254
  %5742 = call i32 @llvm.ctpop.i32(i32 %5741)
  %5743 = trunc i32 %5742 to i8
  %5744 = and i8 %5743, 1
  %5745 = xor i8 %5744, 1
  store i8 %5745, i8* %5739, align 1
  %5746 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5746, align 1
  %5747 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5748 = icmp eq i64 %5736, 0
  %5749 = zext i1 %5748 to i8
  store i8 %5749, i8* %5747, align 1
  %5750 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5751 = lshr i64 %5736, 63
  %5752 = trunc i64 %5751 to i8
  store i8 %5752, i8* %5750, align 1
  %5753 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5753, align 1
  store %struct.Memory* %loadMem_400dfa, %struct.Memory** %MEMORY
  %loadMem_400dfe = load %struct.Memory*, %struct.Memory** %MEMORY
  %5754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5755 = getelementptr inbounds %struct.GPR, %struct.GPR* %5754, i32 0, i32 33
  %5756 = getelementptr inbounds %struct.Reg, %struct.Reg* %5755, i32 0, i32 0
  %PC.i1433 = bitcast %union.anon* %5756 to i64*
  %5757 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5758 = getelementptr inbounds %struct.GPR, %struct.GPR* %5757, i32 0, i32 1
  %5759 = getelementptr inbounds %struct.Reg, %struct.Reg* %5758, i32 0, i32 0
  %RAX.i1434 = bitcast %union.anon* %5759 to i64*
  %5760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5761 = getelementptr inbounds %struct.GPR, %struct.GPR* %5760, i32 0, i32 7
  %5762 = getelementptr inbounds %struct.Reg, %struct.Reg* %5761, i32 0, i32 0
  %RDX.i1435 = bitcast %union.anon* %5762 to i64*
  %5763 = load i64, i64* %RAX.i1434
  %5764 = load i64, i64* %PC.i1433
  %5765 = add i64 %5764, 3
  store i64 %5765, i64* %PC.i1433
  store i64 %5763, i64* %RDX.i1435, align 8
  store %struct.Memory* %loadMem_400dfe, %struct.Memory** %MEMORY
  %loadMem_400e01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5767 = getelementptr inbounds %struct.GPR, %struct.GPR* %5766, i32 0, i32 33
  %5768 = getelementptr inbounds %struct.Reg, %struct.Reg* %5767, i32 0, i32 0
  %PC.i1430 = bitcast %union.anon* %5768 to i64*
  %5769 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5770 = getelementptr inbounds %struct.GPR, %struct.GPR* %5769, i32 0, i32 5
  %5771 = getelementptr inbounds %struct.Reg, %struct.Reg* %5770, i32 0, i32 0
  %RCX.i1431 = bitcast %union.anon* %5771 to i64*
  %5772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5773 = getelementptr inbounds %struct.GPR, %struct.GPR* %5772, i32 0, i32 7
  %5774 = getelementptr inbounds %struct.Reg, %struct.Reg* %5773, i32 0, i32 0
  %RDX.i1432 = bitcast %union.anon* %5774 to i64*
  %5775 = load i64, i64* %RDX.i1432
  %5776 = load i64, i64* %RCX.i1431
  %5777 = load i64, i64* %PC.i1430
  %5778 = add i64 %5777, 3
  store i64 %5778, i64* %PC.i1430
  %5779 = add i64 %5776, %5775
  store i64 %5779, i64* %RDX.i1432, align 8
  %5780 = icmp ult i64 %5779, %5775
  %5781 = icmp ult i64 %5779, %5776
  %5782 = or i1 %5780, %5781
  %5783 = zext i1 %5782 to i8
  %5784 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5783, i8* %5784, align 1
  %5785 = trunc i64 %5779 to i32
  %5786 = and i32 %5785, 255
  %5787 = call i32 @llvm.ctpop.i32(i32 %5786)
  %5788 = trunc i32 %5787 to i8
  %5789 = and i8 %5788, 1
  %5790 = xor i8 %5789, 1
  %5791 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5790, i8* %5791, align 1
  %5792 = xor i64 %5776, %5775
  %5793 = xor i64 %5792, %5779
  %5794 = lshr i64 %5793, 4
  %5795 = trunc i64 %5794 to i8
  %5796 = and i8 %5795, 1
  %5797 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5796, i8* %5797, align 1
  %5798 = icmp eq i64 %5779, 0
  %5799 = zext i1 %5798 to i8
  %5800 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5799, i8* %5800, align 1
  %5801 = lshr i64 %5779, 63
  %5802 = trunc i64 %5801 to i8
  %5803 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5802, i8* %5803, align 1
  %5804 = lshr i64 %5775, 63
  %5805 = lshr i64 %5776, 63
  %5806 = xor i64 %5801, %5804
  %5807 = xor i64 %5801, %5805
  %5808 = add i64 %5806, %5807
  %5809 = icmp eq i64 %5808, 2
  %5810 = zext i1 %5809 to i8
  %5811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5810, i8* %5811, align 1
  store %struct.Memory* %loadMem_400e01, %struct.Memory** %MEMORY
  %loadMem_400e04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5813 = getelementptr inbounds %struct.GPR, %struct.GPR* %5812, i32 0, i32 33
  %5814 = getelementptr inbounds %struct.Reg, %struct.Reg* %5813, i32 0, i32 0
  %PC.i1427 = bitcast %union.anon* %5814 to i64*
  %5815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5816 = getelementptr inbounds %struct.GPR, %struct.GPR* %5815, i32 0, i32 5
  %5817 = getelementptr inbounds %struct.Reg, %struct.Reg* %5816, i32 0, i32 0
  %RCX.i1428 = bitcast %union.anon* %5817 to i64*
  %5818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5819 = getelementptr inbounds %struct.GPR, %struct.GPR* %5818, i32 0, i32 15
  %5820 = getelementptr inbounds %struct.Reg, %struct.Reg* %5819, i32 0, i32 0
  %RBP.i1429 = bitcast %union.anon* %5820 to i64*
  %5821 = load i64, i64* %RBP.i1429
  %5822 = sub i64 %5821, 4
  %5823 = load i64, i64* %PC.i1427
  %5824 = add i64 %5823, 4
  store i64 %5824, i64* %PC.i1427
  %5825 = inttoptr i64 %5822 to i32*
  %5826 = load i32, i32* %5825
  %5827 = sext i32 %5826 to i64
  store i64 %5827, i64* %RCX.i1428, align 8
  store %struct.Memory* %loadMem_400e04, %struct.Memory** %MEMORY
  %loadMem_400e08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5829 = getelementptr inbounds %struct.GPR, %struct.GPR* %5828, i32 0, i32 33
  %5830 = getelementptr inbounds %struct.Reg, %struct.Reg* %5829, i32 0, i32 0
  %PC.i1423 = bitcast %union.anon* %5830 to i64*
  %5831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5832 = getelementptr inbounds %struct.GPR, %struct.GPR* %5831, i32 0, i32 5
  %5833 = getelementptr inbounds %struct.Reg, %struct.Reg* %5832, i32 0, i32 0
  %RCX.i1424 = bitcast %union.anon* %5833 to i64*
  %5834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5835 = getelementptr inbounds %struct.GPR, %struct.GPR* %5834, i32 0, i32 7
  %5836 = getelementptr inbounds %struct.Reg, %struct.Reg* %5835, i32 0, i32 0
  %RDX.i1425 = bitcast %union.anon* %5836 to i64*
  %5837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5838 = getelementptr inbounds %struct.GPR, %struct.GPR* %5837, i32 0, i32 9
  %5839 = getelementptr inbounds %struct.Reg, %struct.Reg* %5838, i32 0, i32 0
  %RSI.i1426 = bitcast %union.anon* %5839 to i64*
  %5840 = load i64, i64* %RDX.i1425
  %5841 = load i64, i64* %RCX.i1424
  %5842 = mul i64 %5841, 4
  %5843 = add i64 %5842, %5840
  %5844 = load i64, i64* %PC.i1423
  %5845 = add i64 %5844, 3
  store i64 %5845, i64* %PC.i1423
  %5846 = inttoptr i64 %5843 to i32*
  %5847 = load i32, i32* %5846
  %5848 = zext i32 %5847 to i64
  store i64 %5848, i64* %RSI.i1426, align 8
  store %struct.Memory* %loadMem_400e08, %struct.Memory** %MEMORY
  %loadMem_400e0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5850 = getelementptr inbounds %struct.GPR, %struct.GPR* %5849, i32 0, i32 33
  %5851 = getelementptr inbounds %struct.Reg, %struct.Reg* %5850, i32 0, i32 0
  %PC.i1420 = bitcast %union.anon* %5851 to i64*
  %5852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5853 = getelementptr inbounds %struct.GPR, %struct.GPR* %5852, i32 0, i32 11
  %5854 = getelementptr inbounds %struct.Reg, %struct.Reg* %5853, i32 0, i32 0
  %RDI.i1421 = bitcast %union.anon* %5854 to i64*
  %5855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5856 = getelementptr inbounds %struct.GPR, %struct.GPR* %5855, i32 0, i32 15
  %5857 = getelementptr inbounds %struct.Reg, %struct.Reg* %5856, i32 0, i32 0
  %RBP.i1422 = bitcast %union.anon* %5857 to i64*
  %5858 = load i64, i64* %RBP.i1422
  %5859 = sub i64 %5858, 12
  %5860 = load i64, i64* %PC.i1420
  %5861 = add i64 %5860, 3
  store i64 %5861, i64* %PC.i1420
  %5862 = inttoptr i64 %5859 to i32*
  %5863 = load i32, i32* %5862
  %5864 = zext i32 %5863 to i64
  store i64 %5864, i64* %RDI.i1421, align 8
  store %struct.Memory* %loadMem_400e0b, %struct.Memory** %MEMORY
  %loadMem_400e0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5866 = getelementptr inbounds %struct.GPR, %struct.GPR* %5865, i32 0, i32 33
  %5867 = getelementptr inbounds %struct.Reg, %struct.Reg* %5866, i32 0, i32 0
  %PC.i1418 = bitcast %union.anon* %5867 to i64*
  %5868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5869 = getelementptr inbounds %struct.GPR, %struct.GPR* %5868, i32 0, i32 11
  %5870 = getelementptr inbounds %struct.Reg, %struct.Reg* %5869, i32 0, i32 0
  %RDI.i1419 = bitcast %union.anon* %5870 to i64*
  %5871 = load i64, i64* %RDI.i1419
  %5872 = load i64, i64* %PC.i1418
  %5873 = add i64 %5872, 3
  store i64 %5873, i64* %PC.i1418
  %5874 = trunc i64 %5871 to i32
  %5875 = add i32 1, %5874
  %5876 = zext i32 %5875 to i64
  store i64 %5876, i64* %RDI.i1419, align 8
  %5877 = icmp ult i32 %5875, %5874
  %5878 = icmp ult i32 %5875, 1
  %5879 = or i1 %5877, %5878
  %5880 = zext i1 %5879 to i8
  %5881 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5880, i8* %5881, align 1
  %5882 = and i32 %5875, 255
  %5883 = call i32 @llvm.ctpop.i32(i32 %5882)
  %5884 = trunc i32 %5883 to i8
  %5885 = and i8 %5884, 1
  %5886 = xor i8 %5885, 1
  %5887 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5886, i8* %5887, align 1
  %5888 = xor i64 1, %5871
  %5889 = trunc i64 %5888 to i32
  %5890 = xor i32 %5889, %5875
  %5891 = lshr i32 %5890, 4
  %5892 = trunc i32 %5891 to i8
  %5893 = and i8 %5892, 1
  %5894 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5893, i8* %5894, align 1
  %5895 = icmp eq i32 %5875, 0
  %5896 = zext i1 %5895 to i8
  %5897 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5896, i8* %5897, align 1
  %5898 = lshr i32 %5875, 31
  %5899 = trunc i32 %5898 to i8
  %5900 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5899, i8* %5900, align 1
  %5901 = lshr i32 %5874, 31
  %5902 = xor i32 %5898, %5901
  %5903 = add i32 %5902, %5898
  %5904 = icmp eq i32 %5903, 2
  %5905 = zext i1 %5904 to i8
  %5906 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5905, i8* %5906, align 1
  store %struct.Memory* %loadMem_400e0e, %struct.Memory** %MEMORY
  %loadMem_400e11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5908 = getelementptr inbounds %struct.GPR, %struct.GPR* %5907, i32 0, i32 33
  %5909 = getelementptr inbounds %struct.Reg, %struct.Reg* %5908, i32 0, i32 0
  %PC.i1415 = bitcast %union.anon* %5909 to i64*
  %5910 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5911 = getelementptr inbounds %struct.GPR, %struct.GPR* %5910, i32 0, i32 11
  %5912 = getelementptr inbounds %struct.Reg, %struct.Reg* %5911, i32 0, i32 0
  %EDI.i1416 = bitcast %union.anon* %5912 to i32*
  %5913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5914 = getelementptr inbounds %struct.GPR, %struct.GPR* %5913, i32 0, i32 5
  %5915 = getelementptr inbounds %struct.Reg, %struct.Reg* %5914, i32 0, i32 0
  %RCX.i1417 = bitcast %union.anon* %5915 to i64*
  %5916 = load i32, i32* %EDI.i1416
  %5917 = zext i32 %5916 to i64
  %5918 = load i64, i64* %PC.i1415
  %5919 = add i64 %5918, 3
  store i64 %5919, i64* %PC.i1415
  %5920 = shl i64 %5917, 32
  %5921 = ashr exact i64 %5920, 32
  store i64 %5921, i64* %RCX.i1417, align 8
  store %struct.Memory* %loadMem_400e11, %struct.Memory** %MEMORY
  %loadMem_400e14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5923 = getelementptr inbounds %struct.GPR, %struct.GPR* %5922, i32 0, i32 33
  %5924 = getelementptr inbounds %struct.Reg, %struct.Reg* %5923, i32 0, i32 0
  %PC.i1413 = bitcast %union.anon* %5924 to i64*
  %5925 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5926 = getelementptr inbounds %struct.GPR, %struct.GPR* %5925, i32 0, i32 5
  %5927 = getelementptr inbounds %struct.Reg, %struct.Reg* %5926, i32 0, i32 0
  %RCX.i1414 = bitcast %union.anon* %5927 to i64*
  %5928 = load i64, i64* %RCX.i1414
  %5929 = load i64, i64* %PC.i1413
  %5930 = add i64 %5929, 4
  store i64 %5930, i64* %PC.i1413
  %5931 = shl i64 %5928, 5
  %5932 = icmp slt i64 %5931, 0
  %5933 = shl i64 %5931, 1
  store i64 %5933, i64* %RCX.i1414, align 8
  %5934 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %5935 = zext i1 %5932 to i8
  store i8 %5935, i8* %5934, align 1
  %5936 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %5937 = trunc i64 %5933 to i32
  %5938 = and i32 %5937, 254
  %5939 = call i32 @llvm.ctpop.i32(i32 %5938)
  %5940 = trunc i32 %5939 to i8
  %5941 = and i8 %5940, 1
  %5942 = xor i8 %5941, 1
  store i8 %5942, i8* %5936, align 1
  %5943 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5943, align 1
  %5944 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5945 = icmp eq i64 %5933, 0
  %5946 = zext i1 %5945 to i8
  store i8 %5946, i8* %5944, align 1
  %5947 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5948 = lshr i64 %5933, 63
  %5949 = trunc i64 %5948 to i8
  store i8 %5949, i8* %5947, align 1
  %5950 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5950, align 1
  store %struct.Memory* %loadMem_400e14, %struct.Memory** %MEMORY
  %loadMem_400e18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5952 = getelementptr inbounds %struct.GPR, %struct.GPR* %5951, i32 0, i32 33
  %5953 = getelementptr inbounds %struct.Reg, %struct.Reg* %5952, i32 0, i32 0
  %PC.i1410 = bitcast %union.anon* %5953 to i64*
  %5954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5955 = getelementptr inbounds %struct.GPR, %struct.GPR* %5954, i32 0, i32 1
  %5956 = getelementptr inbounds %struct.Reg, %struct.Reg* %5955, i32 0, i32 0
  %RAX.i1411 = bitcast %union.anon* %5956 to i64*
  %5957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5958 = getelementptr inbounds %struct.GPR, %struct.GPR* %5957, i32 0, i32 7
  %5959 = getelementptr inbounds %struct.Reg, %struct.Reg* %5958, i32 0, i32 0
  %RDX.i1412 = bitcast %union.anon* %5959 to i64*
  %5960 = load i64, i64* %RAX.i1411
  %5961 = load i64, i64* %PC.i1410
  %5962 = add i64 %5961, 3
  store i64 %5962, i64* %PC.i1410
  store i64 %5960, i64* %RDX.i1412, align 8
  store %struct.Memory* %loadMem_400e18, %struct.Memory** %MEMORY
  %loadMem_400e1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5964 = getelementptr inbounds %struct.GPR, %struct.GPR* %5963, i32 0, i32 33
  %5965 = getelementptr inbounds %struct.Reg, %struct.Reg* %5964, i32 0, i32 0
  %PC.i1407 = bitcast %union.anon* %5965 to i64*
  %5966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5967 = getelementptr inbounds %struct.GPR, %struct.GPR* %5966, i32 0, i32 5
  %5968 = getelementptr inbounds %struct.Reg, %struct.Reg* %5967, i32 0, i32 0
  %RCX.i1408 = bitcast %union.anon* %5968 to i64*
  %5969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5970 = getelementptr inbounds %struct.GPR, %struct.GPR* %5969, i32 0, i32 7
  %5971 = getelementptr inbounds %struct.Reg, %struct.Reg* %5970, i32 0, i32 0
  %RDX.i1409 = bitcast %union.anon* %5971 to i64*
  %5972 = load i64, i64* %RDX.i1409
  %5973 = load i64, i64* %RCX.i1408
  %5974 = load i64, i64* %PC.i1407
  %5975 = add i64 %5974, 3
  store i64 %5975, i64* %PC.i1407
  %5976 = add i64 %5973, %5972
  store i64 %5976, i64* %RDX.i1409, align 8
  %5977 = icmp ult i64 %5976, %5972
  %5978 = icmp ult i64 %5976, %5973
  %5979 = or i1 %5977, %5978
  %5980 = zext i1 %5979 to i8
  %5981 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5980, i8* %5981, align 1
  %5982 = trunc i64 %5976 to i32
  %5983 = and i32 %5982, 255
  %5984 = call i32 @llvm.ctpop.i32(i32 %5983)
  %5985 = trunc i32 %5984 to i8
  %5986 = and i8 %5985, 1
  %5987 = xor i8 %5986, 1
  %5988 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5987, i8* %5988, align 1
  %5989 = xor i64 %5973, %5972
  %5990 = xor i64 %5989, %5976
  %5991 = lshr i64 %5990, 4
  %5992 = trunc i64 %5991 to i8
  %5993 = and i8 %5992, 1
  %5994 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5993, i8* %5994, align 1
  %5995 = icmp eq i64 %5976, 0
  %5996 = zext i1 %5995 to i8
  %5997 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5996, i8* %5997, align 1
  %5998 = lshr i64 %5976, 63
  %5999 = trunc i64 %5998 to i8
  %6000 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5999, i8* %6000, align 1
  %6001 = lshr i64 %5972, 63
  %6002 = lshr i64 %5973, 63
  %6003 = xor i64 %5998, %6001
  %6004 = xor i64 %5998, %6002
  %6005 = add i64 %6003, %6004
  %6006 = icmp eq i64 %6005, 2
  %6007 = zext i1 %6006 to i8
  %6008 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6007, i8* %6008, align 1
  store %struct.Memory* %loadMem_400e1b, %struct.Memory** %MEMORY
  %loadMem_400e1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6010 = getelementptr inbounds %struct.GPR, %struct.GPR* %6009, i32 0, i32 33
  %6011 = getelementptr inbounds %struct.Reg, %struct.Reg* %6010, i32 0, i32 0
  %PC.i1404 = bitcast %union.anon* %6011 to i64*
  %6012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6013 = getelementptr inbounds %struct.GPR, %struct.GPR* %6012, i32 0, i32 5
  %6014 = getelementptr inbounds %struct.Reg, %struct.Reg* %6013, i32 0, i32 0
  %RCX.i1405 = bitcast %union.anon* %6014 to i64*
  %6015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6016 = getelementptr inbounds %struct.GPR, %struct.GPR* %6015, i32 0, i32 15
  %6017 = getelementptr inbounds %struct.Reg, %struct.Reg* %6016, i32 0, i32 0
  %RBP.i1406 = bitcast %union.anon* %6017 to i64*
  %6018 = load i64, i64* %RBP.i1406
  %6019 = sub i64 %6018, 4
  %6020 = load i64, i64* %PC.i1404
  %6021 = add i64 %6020, 4
  store i64 %6021, i64* %PC.i1404
  %6022 = inttoptr i64 %6019 to i32*
  %6023 = load i32, i32* %6022
  %6024 = sext i32 %6023 to i64
  store i64 %6024, i64* %RCX.i1405, align 8
  store %struct.Memory* %loadMem_400e1e, %struct.Memory** %MEMORY
  %loadMem_400e22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6026 = getelementptr inbounds %struct.GPR, %struct.GPR* %6025, i32 0, i32 33
  %6027 = getelementptr inbounds %struct.Reg, %struct.Reg* %6026, i32 0, i32 0
  %PC.i1400 = bitcast %union.anon* %6027 to i64*
  %6028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6029 = getelementptr inbounds %struct.GPR, %struct.GPR* %6028, i32 0, i32 5
  %6030 = getelementptr inbounds %struct.Reg, %struct.Reg* %6029, i32 0, i32 0
  %RCX.i1401 = bitcast %union.anon* %6030 to i64*
  %6031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6032 = getelementptr inbounds %struct.GPR, %struct.GPR* %6031, i32 0, i32 7
  %6033 = getelementptr inbounds %struct.Reg, %struct.Reg* %6032, i32 0, i32 0
  %RDX.i1402 = bitcast %union.anon* %6033 to i64*
  %6034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6035 = getelementptr inbounds %struct.GPR, %struct.GPR* %6034, i32 0, i32 9
  %6036 = getelementptr inbounds %struct.Reg, %struct.Reg* %6035, i32 0, i32 0
  %RSI.i1403 = bitcast %union.anon* %6036 to i64*
  %6037 = load i64, i64* %RSI.i1403
  %6038 = load i64, i64* %RDX.i1402
  %6039 = load i64, i64* %RCX.i1401
  %6040 = mul i64 %6039, 4
  %6041 = add i64 %6040, %6038
  %6042 = load i64, i64* %PC.i1400
  %6043 = add i64 %6042, 3
  store i64 %6043, i64* %PC.i1400
  %6044 = trunc i64 %6037 to i32
  %6045 = inttoptr i64 %6041 to i32*
  %6046 = load i32, i32* %6045
  %6047 = xor i32 %6046, %6044
  %6048 = zext i32 %6047 to i64
  store i64 %6048, i64* %RSI.i1403, align 8
  %6049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6049, align 1
  %6050 = and i32 %6047, 255
  %6051 = call i32 @llvm.ctpop.i32(i32 %6050)
  %6052 = trunc i32 %6051 to i8
  %6053 = and i8 %6052, 1
  %6054 = xor i8 %6053, 1
  %6055 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6054, i8* %6055, align 1
  %6056 = icmp eq i32 %6047, 0
  %6057 = zext i1 %6056 to i8
  %6058 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6057, i8* %6058, align 1
  %6059 = lshr i32 %6047, 31
  %6060 = trunc i32 %6059 to i8
  %6061 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6060, i8* %6061, align 1
  %6062 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6062, align 1
  %6063 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6063, align 1
  store %struct.Memory* %loadMem_400e22, %struct.Memory** %MEMORY
  %loadMem_400e25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6065 = getelementptr inbounds %struct.GPR, %struct.GPR* %6064, i32 0, i32 33
  %6066 = getelementptr inbounds %struct.Reg, %struct.Reg* %6065, i32 0, i32 0
  %PC.i1396 = bitcast %union.anon* %6066 to i64*
  %6067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6068 = getelementptr inbounds %struct.GPR, %struct.GPR* %6067, i32 0, i32 9
  %6069 = getelementptr inbounds %struct.Reg, %struct.Reg* %6068, i32 0, i32 0
  %ESI.i1397 = bitcast %union.anon* %6069 to i32*
  %6070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6071 = getelementptr inbounds %struct.GPR, %struct.GPR* %6070, i32 0, i32 5
  %6072 = getelementptr inbounds %struct.Reg, %struct.Reg* %6071, i32 0, i32 0
  %RCX.i1398 = bitcast %union.anon* %6072 to i64*
  %6073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6074 = getelementptr inbounds %struct.GPR, %struct.GPR* %6073, i32 0, i32 7
  %6075 = getelementptr inbounds %struct.Reg, %struct.Reg* %6074, i32 0, i32 0
  %RDX.i1399 = bitcast %union.anon* %6075 to i64*
  %6076 = load i64, i64* %RDX.i1399
  %6077 = load i64, i64* %RCX.i1398
  %6078 = mul i64 %6077, 4
  %6079 = add i64 %6078, %6076
  %6080 = load i32, i32* %ESI.i1397
  %6081 = zext i32 %6080 to i64
  %6082 = load i64, i64* %PC.i1396
  %6083 = add i64 %6082, 3
  store i64 %6083, i64* %PC.i1396
  %6084 = inttoptr i64 %6079 to i32*
  store i32 %6080, i32* %6084
  store %struct.Memory* %loadMem_400e25, %struct.Memory** %MEMORY
  %loadMem_400e28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6086 = getelementptr inbounds %struct.GPR, %struct.GPR* %6085, i32 0, i32 33
  %6087 = getelementptr inbounds %struct.Reg, %struct.Reg* %6086, i32 0, i32 0
  %PC.i1393 = bitcast %union.anon* %6087 to i64*
  %6088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6089 = getelementptr inbounds %struct.GPR, %struct.GPR* %6088, i32 0, i32 5
  %6090 = getelementptr inbounds %struct.Reg, %struct.Reg* %6089, i32 0, i32 0
  %RCX.i1394 = bitcast %union.anon* %6090 to i64*
  %6091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6092 = getelementptr inbounds %struct.GPR, %struct.GPR* %6091, i32 0, i32 15
  %6093 = getelementptr inbounds %struct.Reg, %struct.Reg* %6092, i32 0, i32 0
  %RBP.i1395 = bitcast %union.anon* %6093 to i64*
  %6094 = load i64, i64* %RBP.i1395
  %6095 = sub i64 %6094, 12
  %6096 = load i64, i64* %PC.i1393
  %6097 = add i64 %6096, 4
  store i64 %6097, i64* %PC.i1393
  %6098 = inttoptr i64 %6095 to i32*
  %6099 = load i32, i32* %6098
  %6100 = sext i32 %6099 to i64
  store i64 %6100, i64* %RCX.i1394, align 8
  store %struct.Memory* %loadMem_400e28, %struct.Memory** %MEMORY
  %loadMem_400e2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6102 = getelementptr inbounds %struct.GPR, %struct.GPR* %6101, i32 0, i32 33
  %6103 = getelementptr inbounds %struct.Reg, %struct.Reg* %6102, i32 0, i32 0
  %PC.i1391 = bitcast %union.anon* %6103 to i64*
  %6104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6105 = getelementptr inbounds %struct.GPR, %struct.GPR* %6104, i32 0, i32 5
  %6106 = getelementptr inbounds %struct.Reg, %struct.Reg* %6105, i32 0, i32 0
  %RCX.i1392 = bitcast %union.anon* %6106 to i64*
  %6107 = load i64, i64* %RCX.i1392
  %6108 = load i64, i64* %PC.i1391
  %6109 = add i64 %6108, 4
  store i64 %6109, i64* %PC.i1391
  %6110 = shl i64 %6107, 5
  %6111 = icmp slt i64 %6110, 0
  %6112 = shl i64 %6110, 1
  store i64 %6112, i64* %RCX.i1392, align 8
  %6113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %6114 = zext i1 %6111 to i8
  store i8 %6114, i8* %6113, align 1
  %6115 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6116 = trunc i64 %6112 to i32
  %6117 = and i32 %6116, 254
  %6118 = call i32 @llvm.ctpop.i32(i32 %6117)
  %6119 = trunc i32 %6118 to i8
  %6120 = and i8 %6119, 1
  %6121 = xor i8 %6120, 1
  store i8 %6121, i8* %6115, align 1
  %6122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6122, align 1
  %6123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6124 = icmp eq i64 %6112, 0
  %6125 = zext i1 %6124 to i8
  store i8 %6125, i8* %6123, align 1
  %6126 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6127 = lshr i64 %6112, 63
  %6128 = trunc i64 %6127 to i8
  store i8 %6128, i8* %6126, align 1
  %6129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6129, align 1
  store %struct.Memory* %loadMem_400e2c, %struct.Memory** %MEMORY
  %loadMem_400e30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6130 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6131 = getelementptr inbounds %struct.GPR, %struct.GPR* %6130, i32 0, i32 33
  %6132 = getelementptr inbounds %struct.Reg, %struct.Reg* %6131, i32 0, i32 0
  %PC.i1388 = bitcast %union.anon* %6132 to i64*
  %6133 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6134 = getelementptr inbounds %struct.GPR, %struct.GPR* %6133, i32 0, i32 1
  %6135 = getelementptr inbounds %struct.Reg, %struct.Reg* %6134, i32 0, i32 0
  %RAX.i1389 = bitcast %union.anon* %6135 to i64*
  %6136 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6137 = getelementptr inbounds %struct.GPR, %struct.GPR* %6136, i32 0, i32 7
  %6138 = getelementptr inbounds %struct.Reg, %struct.Reg* %6137, i32 0, i32 0
  %RDX.i1390 = bitcast %union.anon* %6138 to i64*
  %6139 = load i64, i64* %RAX.i1389
  %6140 = load i64, i64* %PC.i1388
  %6141 = add i64 %6140, 3
  store i64 %6141, i64* %PC.i1388
  store i64 %6139, i64* %RDX.i1390, align 8
  store %struct.Memory* %loadMem_400e30, %struct.Memory** %MEMORY
  %loadMem_400e33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6143 = getelementptr inbounds %struct.GPR, %struct.GPR* %6142, i32 0, i32 33
  %6144 = getelementptr inbounds %struct.Reg, %struct.Reg* %6143, i32 0, i32 0
  %PC.i1385 = bitcast %union.anon* %6144 to i64*
  %6145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6146 = getelementptr inbounds %struct.GPR, %struct.GPR* %6145, i32 0, i32 5
  %6147 = getelementptr inbounds %struct.Reg, %struct.Reg* %6146, i32 0, i32 0
  %RCX.i1386 = bitcast %union.anon* %6147 to i64*
  %6148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6149 = getelementptr inbounds %struct.GPR, %struct.GPR* %6148, i32 0, i32 7
  %6150 = getelementptr inbounds %struct.Reg, %struct.Reg* %6149, i32 0, i32 0
  %RDX.i1387 = bitcast %union.anon* %6150 to i64*
  %6151 = load i64, i64* %RDX.i1387
  %6152 = load i64, i64* %RCX.i1386
  %6153 = load i64, i64* %PC.i1385
  %6154 = add i64 %6153, 3
  store i64 %6154, i64* %PC.i1385
  %6155 = add i64 %6152, %6151
  store i64 %6155, i64* %RDX.i1387, align 8
  %6156 = icmp ult i64 %6155, %6151
  %6157 = icmp ult i64 %6155, %6152
  %6158 = or i1 %6156, %6157
  %6159 = zext i1 %6158 to i8
  %6160 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6159, i8* %6160, align 1
  %6161 = trunc i64 %6155 to i32
  %6162 = and i32 %6161, 255
  %6163 = call i32 @llvm.ctpop.i32(i32 %6162)
  %6164 = trunc i32 %6163 to i8
  %6165 = and i8 %6164, 1
  %6166 = xor i8 %6165, 1
  %6167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6166, i8* %6167, align 1
  %6168 = xor i64 %6152, %6151
  %6169 = xor i64 %6168, %6155
  %6170 = lshr i64 %6169, 4
  %6171 = trunc i64 %6170 to i8
  %6172 = and i8 %6171, 1
  %6173 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6172, i8* %6173, align 1
  %6174 = icmp eq i64 %6155, 0
  %6175 = zext i1 %6174 to i8
  %6176 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6175, i8* %6176, align 1
  %6177 = lshr i64 %6155, 63
  %6178 = trunc i64 %6177 to i8
  %6179 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6178, i8* %6179, align 1
  %6180 = lshr i64 %6151, 63
  %6181 = lshr i64 %6152, 63
  %6182 = xor i64 %6177, %6180
  %6183 = xor i64 %6177, %6181
  %6184 = add i64 %6182, %6183
  %6185 = icmp eq i64 %6184, 2
  %6186 = zext i1 %6185 to i8
  %6187 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6186, i8* %6187, align 1
  store %struct.Memory* %loadMem_400e33, %struct.Memory** %MEMORY
  %loadMem_400e36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6189 = getelementptr inbounds %struct.GPR, %struct.GPR* %6188, i32 0, i32 33
  %6190 = getelementptr inbounds %struct.Reg, %struct.Reg* %6189, i32 0, i32 0
  %PC.i1382 = bitcast %union.anon* %6190 to i64*
  %6191 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6192 = getelementptr inbounds %struct.GPR, %struct.GPR* %6191, i32 0, i32 5
  %6193 = getelementptr inbounds %struct.Reg, %struct.Reg* %6192, i32 0, i32 0
  %RCX.i1383 = bitcast %union.anon* %6193 to i64*
  %6194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6195 = getelementptr inbounds %struct.GPR, %struct.GPR* %6194, i32 0, i32 15
  %6196 = getelementptr inbounds %struct.Reg, %struct.Reg* %6195, i32 0, i32 0
  %RBP.i1384 = bitcast %union.anon* %6196 to i64*
  %6197 = load i64, i64* %RBP.i1384
  %6198 = sub i64 %6197, 4
  %6199 = load i64, i64* %PC.i1382
  %6200 = add i64 %6199, 4
  store i64 %6200, i64* %PC.i1382
  %6201 = inttoptr i64 %6198 to i32*
  %6202 = load i32, i32* %6201
  %6203 = sext i32 %6202 to i64
  store i64 %6203, i64* %RCX.i1383, align 8
  store %struct.Memory* %loadMem_400e36, %struct.Memory** %MEMORY
  %loadMem_400e3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6205 = getelementptr inbounds %struct.GPR, %struct.GPR* %6204, i32 0, i32 33
  %6206 = getelementptr inbounds %struct.Reg, %struct.Reg* %6205, i32 0, i32 0
  %PC.i1379 = bitcast %union.anon* %6206 to i64*
  %6207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6208 = getelementptr inbounds %struct.GPR, %struct.GPR* %6207, i32 0, i32 5
  %6209 = getelementptr inbounds %struct.Reg, %struct.Reg* %6208, i32 0, i32 0
  %RCX.i1380 = bitcast %union.anon* %6209 to i64*
  %6210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6211 = getelementptr inbounds %struct.GPR, %struct.GPR* %6210, i32 0, i32 7
  %6212 = getelementptr inbounds %struct.Reg, %struct.Reg* %6211, i32 0, i32 0
  %RDX.i1381 = bitcast %union.anon* %6212 to i64*
  %6213 = load i64, i64* %RDX.i1381
  %6214 = load i64, i64* %RCX.i1380
  %6215 = mul i64 %6214, 4
  %6216 = add i64 %6215, %6213
  %6217 = load i64, i64* %PC.i1379
  %6218 = add i64 %6217, 4
  store i64 %6218, i64* %PC.i1379
  %6219 = inttoptr i64 %6216 to i32*
  %6220 = load i32, i32* %6219
  %6221 = sext i32 %6220 to i64
  store i64 %6221, i64* %RCX.i1380, align 8
  store %struct.Memory* %loadMem_400e3a, %struct.Memory** %MEMORY
  %loadMem_400e3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6223 = getelementptr inbounds %struct.GPR, %struct.GPR* %6222, i32 0, i32 33
  %6224 = getelementptr inbounds %struct.Reg, %struct.Reg* %6223, i32 0, i32 0
  %PC.i1376 = bitcast %union.anon* %6224 to i64*
  %6225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6226 = getelementptr inbounds %struct.GPR, %struct.GPR* %6225, i32 0, i32 5
  %6227 = getelementptr inbounds %struct.Reg, %struct.Reg* %6226, i32 0, i32 0
  %RCX.i1377 = bitcast %union.anon* %6227 to i64*
  %6228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6229 = getelementptr inbounds %struct.GPR, %struct.GPR* %6228, i32 0, i32 9
  %6230 = getelementptr inbounds %struct.Reg, %struct.Reg* %6229, i32 0, i32 0
  %RSI.i1378 = bitcast %union.anon* %6230 to i64*
  %6231 = load i64, i64* %RCX.i1377
  %6232 = mul i64 %6231, 4
  %6233 = add i64 %6232, 6304896
  %6234 = load i64, i64* %PC.i1376
  %6235 = add i64 %6234, 7
  store i64 %6235, i64* %PC.i1376
  %6236 = inttoptr i64 %6233 to i32*
  %6237 = load i32, i32* %6236
  %6238 = zext i32 %6237 to i64
  store i64 %6238, i64* %RSI.i1378, align 8
  store %struct.Memory* %loadMem_400e3e, %struct.Memory** %MEMORY
  %loadMem_400e45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6240 = getelementptr inbounds %struct.GPR, %struct.GPR* %6239, i32 0, i32 33
  %6241 = getelementptr inbounds %struct.Reg, %struct.Reg* %6240, i32 0, i32 0
  %PC.i1373 = bitcast %union.anon* %6241 to i64*
  %6242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6243 = getelementptr inbounds %struct.GPR, %struct.GPR* %6242, i32 0, i32 5
  %6244 = getelementptr inbounds %struct.Reg, %struct.Reg* %6243, i32 0, i32 0
  %RCX.i1374 = bitcast %union.anon* %6244 to i64*
  %6245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6246 = getelementptr inbounds %struct.GPR, %struct.GPR* %6245, i32 0, i32 15
  %6247 = getelementptr inbounds %struct.Reg, %struct.Reg* %6246, i32 0, i32 0
  %RBP.i1375 = bitcast %union.anon* %6247 to i64*
  %6248 = load i64, i64* %RBP.i1375
  %6249 = sub i64 %6248, 12
  %6250 = load i64, i64* %PC.i1373
  %6251 = add i64 %6250, 4
  store i64 %6251, i64* %PC.i1373
  %6252 = inttoptr i64 %6249 to i32*
  %6253 = load i32, i32* %6252
  %6254 = sext i32 %6253 to i64
  store i64 %6254, i64* %RCX.i1374, align 8
  store %struct.Memory* %loadMem_400e45, %struct.Memory** %MEMORY
  %loadMem_400e49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6256 = getelementptr inbounds %struct.GPR, %struct.GPR* %6255, i32 0, i32 33
  %6257 = getelementptr inbounds %struct.Reg, %struct.Reg* %6256, i32 0, i32 0
  %PC.i1371 = bitcast %union.anon* %6257 to i64*
  %6258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6259 = getelementptr inbounds %struct.GPR, %struct.GPR* %6258, i32 0, i32 5
  %6260 = getelementptr inbounds %struct.Reg, %struct.Reg* %6259, i32 0, i32 0
  %RCX.i1372 = bitcast %union.anon* %6260 to i64*
  %6261 = load i64, i64* %RCX.i1372
  %6262 = load i64, i64* %PC.i1371
  %6263 = add i64 %6262, 4
  store i64 %6263, i64* %PC.i1371
  %6264 = shl i64 %6261, 5
  %6265 = icmp slt i64 %6264, 0
  %6266 = shl i64 %6264, 1
  store i64 %6266, i64* %RCX.i1372, align 8
  %6267 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %6268 = zext i1 %6265 to i8
  store i8 %6268, i8* %6267, align 1
  %6269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6270 = trunc i64 %6266 to i32
  %6271 = and i32 %6270, 254
  %6272 = call i32 @llvm.ctpop.i32(i32 %6271)
  %6273 = trunc i32 %6272 to i8
  %6274 = and i8 %6273, 1
  %6275 = xor i8 %6274, 1
  store i8 %6275, i8* %6269, align 1
  %6276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6276, align 1
  %6277 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6278 = icmp eq i64 %6266, 0
  %6279 = zext i1 %6278 to i8
  store i8 %6279, i8* %6277, align 1
  %6280 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6281 = lshr i64 %6266, 63
  %6282 = trunc i64 %6281 to i8
  store i8 %6282, i8* %6280, align 1
  %6283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6283, align 1
  store %struct.Memory* %loadMem_400e49, %struct.Memory** %MEMORY
  %loadMem_400e4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6285 = getelementptr inbounds %struct.GPR, %struct.GPR* %6284, i32 0, i32 33
  %6286 = getelementptr inbounds %struct.Reg, %struct.Reg* %6285, i32 0, i32 0
  %PC.i1368 = bitcast %union.anon* %6286 to i64*
  %6287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6288 = getelementptr inbounds %struct.GPR, %struct.GPR* %6287, i32 0, i32 1
  %6289 = getelementptr inbounds %struct.Reg, %struct.Reg* %6288, i32 0, i32 0
  %RAX.i1369 = bitcast %union.anon* %6289 to i64*
  %6290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6291 = getelementptr inbounds %struct.GPR, %struct.GPR* %6290, i32 0, i32 5
  %6292 = getelementptr inbounds %struct.Reg, %struct.Reg* %6291, i32 0, i32 0
  %RCX.i1370 = bitcast %union.anon* %6292 to i64*
  %6293 = load i64, i64* %RAX.i1369
  %6294 = load i64, i64* %RCX.i1370
  %6295 = load i64, i64* %PC.i1368
  %6296 = add i64 %6295, 3
  store i64 %6296, i64* %PC.i1368
  %6297 = add i64 %6294, %6293
  store i64 %6297, i64* %RAX.i1369, align 8
  %6298 = icmp ult i64 %6297, %6293
  %6299 = icmp ult i64 %6297, %6294
  %6300 = or i1 %6298, %6299
  %6301 = zext i1 %6300 to i8
  %6302 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6301, i8* %6302, align 1
  %6303 = trunc i64 %6297 to i32
  %6304 = and i32 %6303, 255
  %6305 = call i32 @llvm.ctpop.i32(i32 %6304)
  %6306 = trunc i32 %6305 to i8
  %6307 = and i8 %6306, 1
  %6308 = xor i8 %6307, 1
  %6309 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6308, i8* %6309, align 1
  %6310 = xor i64 %6294, %6293
  %6311 = xor i64 %6310, %6297
  %6312 = lshr i64 %6311, 4
  %6313 = trunc i64 %6312 to i8
  %6314 = and i8 %6313, 1
  %6315 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6314, i8* %6315, align 1
  %6316 = icmp eq i64 %6297, 0
  %6317 = zext i1 %6316 to i8
  %6318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6317, i8* %6318, align 1
  %6319 = lshr i64 %6297, 63
  %6320 = trunc i64 %6319 to i8
  %6321 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6320, i8* %6321, align 1
  %6322 = lshr i64 %6293, 63
  %6323 = lshr i64 %6294, 63
  %6324 = xor i64 %6319, %6322
  %6325 = xor i64 %6319, %6323
  %6326 = add i64 %6324, %6325
  %6327 = icmp eq i64 %6326, 2
  %6328 = zext i1 %6327 to i8
  %6329 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6328, i8* %6329, align 1
  store %struct.Memory* %loadMem_400e4d, %struct.Memory** %MEMORY
  %loadMem_400e50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6331 = getelementptr inbounds %struct.GPR, %struct.GPR* %6330, i32 0, i32 33
  %6332 = getelementptr inbounds %struct.Reg, %struct.Reg* %6331, i32 0, i32 0
  %PC.i1365 = bitcast %union.anon* %6332 to i64*
  %6333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6334 = getelementptr inbounds %struct.GPR, %struct.GPR* %6333, i32 0, i32 5
  %6335 = getelementptr inbounds %struct.Reg, %struct.Reg* %6334, i32 0, i32 0
  %RCX.i1366 = bitcast %union.anon* %6335 to i64*
  %6336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6337 = getelementptr inbounds %struct.GPR, %struct.GPR* %6336, i32 0, i32 15
  %6338 = getelementptr inbounds %struct.Reg, %struct.Reg* %6337, i32 0, i32 0
  %RBP.i1367 = bitcast %union.anon* %6338 to i64*
  %6339 = load i64, i64* %RBP.i1367
  %6340 = sub i64 %6339, 4
  %6341 = load i64, i64* %PC.i1365
  %6342 = add i64 %6341, 4
  store i64 %6342, i64* %PC.i1365
  %6343 = inttoptr i64 %6340 to i32*
  %6344 = load i32, i32* %6343
  %6345 = sext i32 %6344 to i64
  store i64 %6345, i64* %RCX.i1366, align 8
  store %struct.Memory* %loadMem_400e50, %struct.Memory** %MEMORY
  %loadMem_400e54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6347 = getelementptr inbounds %struct.GPR, %struct.GPR* %6346, i32 0, i32 33
  %6348 = getelementptr inbounds %struct.Reg, %struct.Reg* %6347, i32 0, i32 0
  %PC.i1361 = bitcast %union.anon* %6348 to i64*
  %6349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6350 = getelementptr inbounds %struct.GPR, %struct.GPR* %6349, i32 0, i32 9
  %6351 = getelementptr inbounds %struct.Reg, %struct.Reg* %6350, i32 0, i32 0
  %ESI.i1362 = bitcast %union.anon* %6351 to i32*
  %6352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6353 = getelementptr inbounds %struct.GPR, %struct.GPR* %6352, i32 0, i32 1
  %6354 = getelementptr inbounds %struct.Reg, %struct.Reg* %6353, i32 0, i32 0
  %RAX.i1363 = bitcast %union.anon* %6354 to i64*
  %6355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6356 = getelementptr inbounds %struct.GPR, %struct.GPR* %6355, i32 0, i32 5
  %6357 = getelementptr inbounds %struct.Reg, %struct.Reg* %6356, i32 0, i32 0
  %RCX.i1364 = bitcast %union.anon* %6357 to i64*
  %6358 = load i64, i64* %RAX.i1363
  %6359 = load i64, i64* %RCX.i1364
  %6360 = mul i64 %6359, 4
  %6361 = add i64 %6360, %6358
  %6362 = load i32, i32* %ESI.i1362
  %6363 = zext i32 %6362 to i64
  %6364 = load i64, i64* %PC.i1361
  %6365 = add i64 %6364, 3
  store i64 %6365, i64* %PC.i1361
  %6366 = inttoptr i64 %6361 to i32*
  store i32 %6362, i32* %6366
  store %struct.Memory* %loadMem_400e54, %struct.Memory** %MEMORY
  %loadMem_400e57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6368 = getelementptr inbounds %struct.GPR, %struct.GPR* %6367, i32 0, i32 33
  %6369 = getelementptr inbounds %struct.Reg, %struct.Reg* %6368, i32 0, i32 0
  %PC.i1358 = bitcast %union.anon* %6369 to i64*
  %6370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6371 = getelementptr inbounds %struct.GPR, %struct.GPR* %6370, i32 0, i32 1
  %6372 = getelementptr inbounds %struct.Reg, %struct.Reg* %6371, i32 0, i32 0
  %RAX.i1359 = bitcast %union.anon* %6372 to i64*
  %6373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6374 = getelementptr inbounds %struct.GPR, %struct.GPR* %6373, i32 0, i32 15
  %6375 = getelementptr inbounds %struct.Reg, %struct.Reg* %6374, i32 0, i32 0
  %RBP.i1360 = bitcast %union.anon* %6375 to i64*
  %6376 = load i64, i64* %RBP.i1360
  %6377 = sub i64 %6376, 4
  %6378 = load i64, i64* %PC.i1358
  %6379 = add i64 %6378, 3
  store i64 %6379, i64* %PC.i1358
  %6380 = inttoptr i64 %6377 to i32*
  %6381 = load i32, i32* %6380
  %6382 = zext i32 %6381 to i64
  store i64 %6382, i64* %RAX.i1359, align 8
  store %struct.Memory* %loadMem_400e57, %struct.Memory** %MEMORY
  %loadMem_400e5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6384 = getelementptr inbounds %struct.GPR, %struct.GPR* %6383, i32 0, i32 33
  %6385 = getelementptr inbounds %struct.Reg, %struct.Reg* %6384, i32 0, i32 0
  %PC.i1356 = bitcast %union.anon* %6385 to i64*
  %6386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6387 = getelementptr inbounds %struct.GPR, %struct.GPR* %6386, i32 0, i32 1
  %6388 = getelementptr inbounds %struct.Reg, %struct.Reg* %6387, i32 0, i32 0
  %RAX.i1357 = bitcast %union.anon* %6388 to i64*
  %6389 = load i64, i64* %RAX.i1357
  %6390 = load i64, i64* %PC.i1356
  %6391 = add i64 %6390, 3
  store i64 %6391, i64* %PC.i1356
  %6392 = trunc i64 %6389 to i32
  %6393 = add i32 1, %6392
  %6394 = zext i32 %6393 to i64
  store i64 %6394, i64* %RAX.i1357, align 8
  %6395 = icmp ult i32 %6393, %6392
  %6396 = icmp ult i32 %6393, 1
  %6397 = or i1 %6395, %6396
  %6398 = zext i1 %6397 to i8
  %6399 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6398, i8* %6399, align 1
  %6400 = and i32 %6393, 255
  %6401 = call i32 @llvm.ctpop.i32(i32 %6400)
  %6402 = trunc i32 %6401 to i8
  %6403 = and i8 %6402, 1
  %6404 = xor i8 %6403, 1
  %6405 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6404, i8* %6405, align 1
  %6406 = xor i64 1, %6389
  %6407 = trunc i64 %6406 to i32
  %6408 = xor i32 %6407, %6393
  %6409 = lshr i32 %6408, 4
  %6410 = trunc i32 %6409 to i8
  %6411 = and i8 %6410, 1
  %6412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6411, i8* %6412, align 1
  %6413 = icmp eq i32 %6393, 0
  %6414 = zext i1 %6413 to i8
  %6415 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6414, i8* %6415, align 1
  %6416 = lshr i32 %6393, 31
  %6417 = trunc i32 %6416 to i8
  %6418 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6417, i8* %6418, align 1
  %6419 = lshr i32 %6392, 31
  %6420 = xor i32 %6416, %6419
  %6421 = add i32 %6420, %6416
  %6422 = icmp eq i32 %6421, 2
  %6423 = zext i1 %6422 to i8
  %6424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6423, i8* %6424, align 1
  store %struct.Memory* %loadMem_400e5a, %struct.Memory** %MEMORY
  %loadMem_400e5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6426 = getelementptr inbounds %struct.GPR, %struct.GPR* %6425, i32 0, i32 33
  %6427 = getelementptr inbounds %struct.Reg, %struct.Reg* %6426, i32 0, i32 0
  %PC.i1353 = bitcast %union.anon* %6427 to i64*
  %6428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6429 = getelementptr inbounds %struct.GPR, %struct.GPR* %6428, i32 0, i32 1
  %6430 = getelementptr inbounds %struct.Reg, %struct.Reg* %6429, i32 0, i32 0
  %EAX.i1354 = bitcast %union.anon* %6430 to i32*
  %6431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6432 = getelementptr inbounds %struct.GPR, %struct.GPR* %6431, i32 0, i32 15
  %6433 = getelementptr inbounds %struct.Reg, %struct.Reg* %6432, i32 0, i32 0
  %RBP.i1355 = bitcast %union.anon* %6433 to i64*
  %6434 = load i64, i64* %RBP.i1355
  %6435 = sub i64 %6434, 4
  %6436 = load i32, i32* %EAX.i1354
  %6437 = zext i32 %6436 to i64
  %6438 = load i64, i64* %PC.i1353
  %6439 = add i64 %6438, 3
  store i64 %6439, i64* %PC.i1353
  %6440 = inttoptr i64 %6435 to i32*
  store i32 %6436, i32* %6440
  store %struct.Memory* %loadMem_400e5d, %struct.Memory** %MEMORY
  %loadMem_400e60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6442 = getelementptr inbounds %struct.GPR, %struct.GPR* %6441, i32 0, i32 33
  %6443 = getelementptr inbounds %struct.Reg, %struct.Reg* %6442, i32 0, i32 0
  %PC.i1352 = bitcast %union.anon* %6443 to i64*
  %6444 = load i64, i64* %PC.i1352
  %6445 = add i64 %6444, -133
  %6446 = load i64, i64* %PC.i1352
  %6447 = add i64 %6446, 5
  store i64 %6447, i64* %PC.i1352
  %6448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6445, i64* %6448, align 8
  store %struct.Memory* %loadMem_400e60, %struct.Memory** %MEMORY
  br label %block_.L_400ddb

block_.L_400e65:                                  ; preds = %block_.L_400ddb
  %loadMem_400e65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6450 = getelementptr inbounds %struct.GPR, %struct.GPR* %6449, i32 0, i32 33
  %6451 = getelementptr inbounds %struct.Reg, %struct.Reg* %6450, i32 0, i32 0
  %PC.i1351 = bitcast %union.anon* %6451 to i64*
  %6452 = load i64, i64* %PC.i1351
  %6453 = add i64 %6452, 5
  %6454 = load i64, i64* %PC.i1351
  %6455 = add i64 %6454, 5
  store i64 %6455, i64* %PC.i1351
  %6456 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6453, i64* %6456, align 8
  store %struct.Memory* %loadMem_400e65, %struct.Memory** %MEMORY
  br label %block_.L_400e6a

block_.L_400e6a:                                  ; preds = %block_.L_400e65, %block_.L_400bad
  %loadMem_400e6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6458 = getelementptr inbounds %struct.GPR, %struct.GPR* %6457, i32 0, i32 33
  %6459 = getelementptr inbounds %struct.Reg, %struct.Reg* %6458, i32 0, i32 0
  %PC.i1348 = bitcast %union.anon* %6459 to i64*
  %6460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6461 = getelementptr inbounds %struct.GPR, %struct.GPR* %6460, i32 0, i32 1
  %6462 = getelementptr inbounds %struct.Reg, %struct.Reg* %6461, i32 0, i32 0
  %RAX.i1349 = bitcast %union.anon* %6462 to i64*
  %6463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6464 = getelementptr inbounds %struct.GPR, %struct.GPR* %6463, i32 0, i32 15
  %6465 = getelementptr inbounds %struct.Reg, %struct.Reg* %6464, i32 0, i32 0
  %RBP.i1350 = bitcast %union.anon* %6465 to i64*
  %6466 = load i64, i64* %RBP.i1350
  %6467 = sub i64 %6466, 12
  %6468 = load i64, i64* %PC.i1348
  %6469 = add i64 %6468, 3
  store i64 %6469, i64* %PC.i1348
  %6470 = inttoptr i64 %6467 to i32*
  %6471 = load i32, i32* %6470
  %6472 = zext i32 %6471 to i64
  store i64 %6472, i64* %RAX.i1349, align 8
  store %struct.Memory* %loadMem_400e6a, %struct.Memory** %MEMORY
  %loadMem_400e6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6474 = getelementptr inbounds %struct.GPR, %struct.GPR* %6473, i32 0, i32 33
  %6475 = getelementptr inbounds %struct.Reg, %struct.Reg* %6474, i32 0, i32 0
  %PC.i1345 = bitcast %union.anon* %6475 to i64*
  %6476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6477 = getelementptr inbounds %struct.GPR, %struct.GPR* %6476, i32 0, i32 5
  %6478 = getelementptr inbounds %struct.Reg, %struct.Reg* %6477, i32 0, i32 0
  %RCX.i1346 = bitcast %union.anon* %6478 to i64*
  %6479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6480 = getelementptr inbounds %struct.GPR, %struct.GPR* %6479, i32 0, i32 15
  %6481 = getelementptr inbounds %struct.Reg, %struct.Reg* %6480, i32 0, i32 0
  %RBP.i1347 = bitcast %union.anon* %6481 to i64*
  %6482 = load i64, i64* %RBP.i1347
  %6483 = sub i64 %6482, 12
  %6484 = load i64, i64* %PC.i1345
  %6485 = add i64 %6484, 3
  store i64 %6485, i64* %PC.i1345
  %6486 = inttoptr i64 %6483 to i32*
  %6487 = load i32, i32* %6486
  %6488 = zext i32 %6487 to i64
  store i64 %6488, i64* %RCX.i1346, align 8
  store %struct.Memory* %loadMem_400e6d, %struct.Memory** %MEMORY
  %loadMem_400e70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6490 = getelementptr inbounds %struct.GPR, %struct.GPR* %6489, i32 0, i32 33
  %6491 = getelementptr inbounds %struct.Reg, %struct.Reg* %6490, i32 0, i32 0
  %PC.i1343 = bitcast %union.anon* %6491 to i64*
  %6492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6493 = getelementptr inbounds %struct.GPR, %struct.GPR* %6492, i32 0, i32 5
  %6494 = getelementptr inbounds %struct.Reg, %struct.Reg* %6493, i32 0, i32 0
  %RCX.i1344 = bitcast %union.anon* %6494 to i64*
  %6495 = load i64, i64* %RCX.i1344
  %6496 = load i64, i64* %PC.i1343
  %6497 = add i64 %6496, 3
  store i64 %6497, i64* %PC.i1343
  %6498 = trunc i64 %6495 to i32
  %6499 = add i32 1, %6498
  %6500 = zext i32 %6499 to i64
  store i64 %6500, i64* %RCX.i1344, align 8
  %6501 = icmp ult i32 %6499, %6498
  %6502 = icmp ult i32 %6499, 1
  %6503 = or i1 %6501, %6502
  %6504 = zext i1 %6503 to i8
  %6505 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6504, i8* %6505, align 1
  %6506 = and i32 %6499, 255
  %6507 = call i32 @llvm.ctpop.i32(i32 %6506)
  %6508 = trunc i32 %6507 to i8
  %6509 = and i8 %6508, 1
  %6510 = xor i8 %6509, 1
  %6511 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6510, i8* %6511, align 1
  %6512 = xor i64 1, %6495
  %6513 = trunc i64 %6512 to i32
  %6514 = xor i32 %6513, %6499
  %6515 = lshr i32 %6514, 4
  %6516 = trunc i32 %6515 to i8
  %6517 = and i8 %6516, 1
  %6518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6517, i8* %6518, align 1
  %6519 = icmp eq i32 %6499, 0
  %6520 = zext i1 %6519 to i8
  %6521 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6520, i8* %6521, align 1
  %6522 = lshr i32 %6499, 31
  %6523 = trunc i32 %6522 to i8
  %6524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6523, i8* %6524, align 1
  %6525 = lshr i32 %6498, 31
  %6526 = xor i32 %6522, %6525
  %6527 = add i32 %6526, %6522
  %6528 = icmp eq i32 %6527, 2
  %6529 = zext i1 %6528 to i8
  %6530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6529, i8* %6530, align 1
  store %struct.Memory* %loadMem_400e70, %struct.Memory** %MEMORY
  %loadMem_400e73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6532 = getelementptr inbounds %struct.GPR, %struct.GPR* %6531, i32 0, i32 33
  %6533 = getelementptr inbounds %struct.Reg, %struct.Reg* %6532, i32 0, i32 0
  %PC.i1340 = bitcast %union.anon* %6533 to i64*
  %6534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6535 = getelementptr inbounds %struct.GPR, %struct.GPR* %6534, i32 0, i32 5
  %6536 = getelementptr inbounds %struct.Reg, %struct.Reg* %6535, i32 0, i32 0
  %ECX.i1341 = bitcast %union.anon* %6536 to i32*
  %6537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6538 = getelementptr inbounds %struct.GPR, %struct.GPR* %6537, i32 0, i32 7
  %6539 = getelementptr inbounds %struct.Reg, %struct.Reg* %6538, i32 0, i32 0
  %RDX.i1342 = bitcast %union.anon* %6539 to i64*
  %6540 = load i32, i32* %ECX.i1341
  %6541 = zext i32 %6540 to i64
  %6542 = load i64, i64* %PC.i1340
  %6543 = add i64 %6542, 3
  store i64 %6543, i64* %PC.i1340
  %6544 = shl i64 %6541, 32
  %6545 = ashr exact i64 %6544, 32
  store i64 %6545, i64* %RDX.i1342, align 8
  store %struct.Memory* %loadMem_400e73, %struct.Memory** %MEMORY
  %loadMem_400e76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6547 = getelementptr inbounds %struct.GPR, %struct.GPR* %6546, i32 0, i32 33
  %6548 = getelementptr inbounds %struct.Reg, %struct.Reg* %6547, i32 0, i32 0
  %PC.i1336 = bitcast %union.anon* %6548 to i64*
  %6549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6550 = getelementptr inbounds %struct.GPR, %struct.GPR* %6549, i32 0, i32 1
  %6551 = getelementptr inbounds %struct.Reg, %struct.Reg* %6550, i32 0, i32 0
  %RAX.i1337 = bitcast %union.anon* %6551 to i64*
  %6552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6553 = getelementptr inbounds %struct.GPR, %struct.GPR* %6552, i32 0, i32 7
  %6554 = getelementptr inbounds %struct.Reg, %struct.Reg* %6553, i32 0, i32 0
  %RDX.i1338 = bitcast %union.anon* %6554 to i64*
  %6555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6556 = getelementptr inbounds %struct.GPR, %struct.GPR* %6555, i32 0, i32 15
  %6557 = getelementptr inbounds %struct.Reg, %struct.Reg* %6556, i32 0, i32 0
  %RBP.i1339 = bitcast %union.anon* %6557 to i64*
  %6558 = load i64, i64* %RAX.i1337
  %6559 = load i64, i64* %RBP.i1339
  %6560 = load i64, i64* %RDX.i1338
  %6561 = mul i64 %6560, 4
  %6562 = add i64 %6559, -1328
  %6563 = add i64 %6562, %6561
  %6564 = load i64, i64* %PC.i1336
  %6565 = add i64 %6564, 7
  store i64 %6565, i64* %PC.i1336
  %6566 = trunc i64 %6558 to i32
  %6567 = inttoptr i64 %6563 to i32*
  %6568 = load i32, i32* %6567
  %6569 = sub i32 %6566, %6568
  %6570 = zext i32 %6569 to i64
  store i64 %6570, i64* %RAX.i1337, align 8
  %6571 = icmp ult i32 %6566, %6568
  %6572 = zext i1 %6571 to i8
  %6573 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6572, i8* %6573, align 1
  %6574 = and i32 %6569, 255
  %6575 = call i32 @llvm.ctpop.i32(i32 %6574)
  %6576 = trunc i32 %6575 to i8
  %6577 = and i8 %6576, 1
  %6578 = xor i8 %6577, 1
  %6579 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6578, i8* %6579, align 1
  %6580 = xor i32 %6568, %6566
  %6581 = xor i32 %6580, %6569
  %6582 = lshr i32 %6581, 4
  %6583 = trunc i32 %6582 to i8
  %6584 = and i8 %6583, 1
  %6585 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6584, i8* %6585, align 1
  %6586 = icmp eq i32 %6569, 0
  %6587 = zext i1 %6586 to i8
  %6588 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6587, i8* %6588, align 1
  %6589 = lshr i32 %6569, 31
  %6590 = trunc i32 %6589 to i8
  %6591 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6590, i8* %6591, align 1
  %6592 = lshr i32 %6566, 31
  %6593 = lshr i32 %6568, 31
  %6594 = xor i32 %6593, %6592
  %6595 = xor i32 %6589, %6592
  %6596 = add i32 %6595, %6594
  %6597 = icmp eq i32 %6596, 2
  %6598 = zext i1 %6597 to i8
  %6599 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6598, i8* %6599, align 1
  store %struct.Memory* %loadMem_400e76, %struct.Memory** %MEMORY
  %loadMem_400e7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6601 = getelementptr inbounds %struct.GPR, %struct.GPR* %6600, i32 0, i32 33
  %6602 = getelementptr inbounds %struct.Reg, %struct.Reg* %6601, i32 0, i32 0
  %PC.i1333 = bitcast %union.anon* %6602 to i64*
  %6603 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6604 = getelementptr inbounds %struct.GPR, %struct.GPR* %6603, i32 0, i32 5
  %6605 = getelementptr inbounds %struct.Reg, %struct.Reg* %6604, i32 0, i32 0
  %RCX.i1334 = bitcast %union.anon* %6605 to i64*
  %6606 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6607 = getelementptr inbounds %struct.GPR, %struct.GPR* %6606, i32 0, i32 15
  %6608 = getelementptr inbounds %struct.Reg, %struct.Reg* %6607, i32 0, i32 0
  %RBP.i1335 = bitcast %union.anon* %6608 to i64*
  %6609 = load i64, i64* %RBP.i1335
  %6610 = sub i64 %6609, 12
  %6611 = load i64, i64* %PC.i1333
  %6612 = add i64 %6611, 3
  store i64 %6612, i64* %PC.i1333
  %6613 = inttoptr i64 %6610 to i32*
  %6614 = load i32, i32* %6613
  %6615 = zext i32 %6614 to i64
  store i64 %6615, i64* %RCX.i1334, align 8
  store %struct.Memory* %loadMem_400e7d, %struct.Memory** %MEMORY
  %loadMem_400e80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6617 = getelementptr inbounds %struct.GPR, %struct.GPR* %6616, i32 0, i32 33
  %6618 = getelementptr inbounds %struct.Reg, %struct.Reg* %6617, i32 0, i32 0
  %PC.i1331 = bitcast %union.anon* %6618 to i64*
  %6619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6620 = getelementptr inbounds %struct.GPR, %struct.GPR* %6619, i32 0, i32 5
  %6621 = getelementptr inbounds %struct.Reg, %struct.Reg* %6620, i32 0, i32 0
  %RCX.i1332 = bitcast %union.anon* %6621 to i64*
  %6622 = load i64, i64* %RCX.i1332
  %6623 = load i64, i64* %PC.i1331
  %6624 = add i64 %6623, 3
  store i64 %6624, i64* %PC.i1331
  %6625 = trunc i64 %6622 to i32
  %6626 = add i32 1, %6625
  %6627 = zext i32 %6626 to i64
  store i64 %6627, i64* %RCX.i1332, align 8
  %6628 = icmp ult i32 %6626, %6625
  %6629 = icmp ult i32 %6626, 1
  %6630 = or i1 %6628, %6629
  %6631 = zext i1 %6630 to i8
  %6632 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6631, i8* %6632, align 1
  %6633 = and i32 %6626, 255
  %6634 = call i32 @llvm.ctpop.i32(i32 %6633)
  %6635 = trunc i32 %6634 to i8
  %6636 = and i8 %6635, 1
  %6637 = xor i8 %6636, 1
  %6638 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6637, i8* %6638, align 1
  %6639 = xor i64 1, %6622
  %6640 = trunc i64 %6639 to i32
  %6641 = xor i32 %6640, %6626
  %6642 = lshr i32 %6641, 4
  %6643 = trunc i32 %6642 to i8
  %6644 = and i8 %6643, 1
  %6645 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6644, i8* %6645, align 1
  %6646 = icmp eq i32 %6626, 0
  %6647 = zext i1 %6646 to i8
  %6648 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6647, i8* %6648, align 1
  %6649 = lshr i32 %6626, 31
  %6650 = trunc i32 %6649 to i8
  %6651 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6650, i8* %6651, align 1
  %6652 = lshr i32 %6625, 31
  %6653 = xor i32 %6649, %6652
  %6654 = add i32 %6653, %6649
  %6655 = icmp eq i32 %6654, 2
  %6656 = zext i1 %6655 to i8
  %6657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6656, i8* %6657, align 1
  store %struct.Memory* %loadMem_400e80, %struct.Memory** %MEMORY
  %loadMem_400e83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6659 = getelementptr inbounds %struct.GPR, %struct.GPR* %6658, i32 0, i32 33
  %6660 = getelementptr inbounds %struct.Reg, %struct.Reg* %6659, i32 0, i32 0
  %PC.i1328 = bitcast %union.anon* %6660 to i64*
  %6661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6662 = getelementptr inbounds %struct.GPR, %struct.GPR* %6661, i32 0, i32 5
  %6663 = getelementptr inbounds %struct.Reg, %struct.Reg* %6662, i32 0, i32 0
  %ECX.i1329 = bitcast %union.anon* %6663 to i32*
  %6664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6665 = getelementptr inbounds %struct.GPR, %struct.GPR* %6664, i32 0, i32 7
  %6666 = getelementptr inbounds %struct.Reg, %struct.Reg* %6665, i32 0, i32 0
  %RDX.i1330 = bitcast %union.anon* %6666 to i64*
  %6667 = load i32, i32* %ECX.i1329
  %6668 = zext i32 %6667 to i64
  %6669 = load i64, i64* %PC.i1328
  %6670 = add i64 %6669, 3
  store i64 %6670, i64* %PC.i1328
  %6671 = shl i64 %6668, 32
  %6672 = ashr exact i64 %6671, 32
  store i64 %6672, i64* %RDX.i1330, align 8
  store %struct.Memory* %loadMem_400e83, %struct.Memory** %MEMORY
  %loadMem_400e86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6674 = getelementptr inbounds %struct.GPR, %struct.GPR* %6673, i32 0, i32 33
  %6675 = getelementptr inbounds %struct.Reg, %struct.Reg* %6674, i32 0, i32 0
  %PC.i1324 = bitcast %union.anon* %6675 to i64*
  %6676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6677 = getelementptr inbounds %struct.GPR, %struct.GPR* %6676, i32 0, i32 1
  %6678 = getelementptr inbounds %struct.Reg, %struct.Reg* %6677, i32 0, i32 0
  %EAX.i1325 = bitcast %union.anon* %6678 to i32*
  %6679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6680 = getelementptr inbounds %struct.GPR, %struct.GPR* %6679, i32 0, i32 7
  %6681 = getelementptr inbounds %struct.Reg, %struct.Reg* %6680, i32 0, i32 0
  %RDX.i1326 = bitcast %union.anon* %6681 to i64*
  %6682 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6683 = getelementptr inbounds %struct.GPR, %struct.GPR* %6682, i32 0, i32 15
  %6684 = getelementptr inbounds %struct.Reg, %struct.Reg* %6683, i32 0, i32 0
  %RBP.i1327 = bitcast %union.anon* %6684 to i64*
  %6685 = load i64, i64* %RBP.i1327
  %6686 = load i64, i64* %RDX.i1326
  %6687 = mul i64 %6686, 4
  %6688 = add i64 %6685, -1408
  %6689 = add i64 %6688, %6687
  %6690 = load i32, i32* %EAX.i1325
  %6691 = zext i32 %6690 to i64
  %6692 = load i64, i64* %PC.i1324
  %6693 = add i64 %6692, 7
  store i64 %6693, i64* %PC.i1324
  %6694 = inttoptr i64 %6689 to i32*
  store i32 %6690, i32* %6694
  store %struct.Memory* %loadMem_400e86, %struct.Memory** %MEMORY
  %loadMem_400e8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6696 = getelementptr inbounds %struct.GPR, %struct.GPR* %6695, i32 0, i32 33
  %6697 = getelementptr inbounds %struct.Reg, %struct.Reg* %6696, i32 0, i32 0
  %PC.i1322 = bitcast %union.anon* %6697 to i64*
  %6698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6699 = getelementptr inbounds %struct.GPR, %struct.GPR* %6698, i32 0, i32 15
  %6700 = getelementptr inbounds %struct.Reg, %struct.Reg* %6699, i32 0, i32 0
  %RBP.i1323 = bitcast %union.anon* %6700 to i64*
  %6701 = load i64, i64* %RBP.i1323
  %6702 = sub i64 %6701, 12
  %6703 = load i64, i64* %PC.i1322
  %6704 = add i64 %6703, 4
  store i64 %6704, i64* %PC.i1322
  %6705 = inttoptr i64 %6702 to i32*
  %6706 = load i32, i32* %6705
  %6707 = sub i32 %6706, 16
  %6708 = icmp ult i32 %6706, 16
  %6709 = zext i1 %6708 to i8
  %6710 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6709, i8* %6710, align 1
  %6711 = and i32 %6707, 255
  %6712 = call i32 @llvm.ctpop.i32(i32 %6711)
  %6713 = trunc i32 %6712 to i8
  %6714 = and i8 %6713, 1
  %6715 = xor i8 %6714, 1
  %6716 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6715, i8* %6716, align 1
  %6717 = xor i32 %6706, 16
  %6718 = xor i32 %6717, %6707
  %6719 = lshr i32 %6718, 4
  %6720 = trunc i32 %6719 to i8
  %6721 = and i8 %6720, 1
  %6722 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6721, i8* %6722, align 1
  %6723 = icmp eq i32 %6707, 0
  %6724 = zext i1 %6723 to i8
  %6725 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6724, i8* %6725, align 1
  %6726 = lshr i32 %6707, 31
  %6727 = trunc i32 %6726 to i8
  %6728 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6727, i8* %6728, align 1
  %6729 = lshr i32 %6706, 31
  %6730 = xor i32 %6726, %6729
  %6731 = add i32 %6730, %6729
  %6732 = icmp eq i32 %6731, 2
  %6733 = zext i1 %6732 to i8
  %6734 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6733, i8* %6734, align 1
  store %struct.Memory* %loadMem_400e8d, %struct.Memory** %MEMORY
  %loadMem_400e91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6736 = getelementptr inbounds %struct.GPR, %struct.GPR* %6735, i32 0, i32 33
  %6737 = getelementptr inbounds %struct.Reg, %struct.Reg* %6736, i32 0, i32 0
  %PC.i1321 = bitcast %union.anon* %6737 to i64*
  %6738 = load i64, i64* %PC.i1321
  %6739 = add i64 %6738, 362
  %6740 = load i64, i64* %PC.i1321
  %6741 = add i64 %6740, 6
  %6742 = load i64, i64* %PC.i1321
  %6743 = add i64 %6742, 6
  store i64 %6743, i64* %PC.i1321
  %6744 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6745 = load i8, i8* %6744, align 1
  %6746 = icmp ne i8 %6745, 0
  %6747 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %6748 = load i8, i8* %6747, align 1
  %6749 = icmp ne i8 %6748, 0
  %6750 = xor i1 %6746, %6749
  %6751 = xor i1 %6750, true
  %6752 = zext i1 %6751 to i8
  store i8 %6752, i8* %BRANCH_TAKEN, align 1
  %6753 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6754 = select i1 %6750, i64 %6741, i64 %6739
  store i64 %6754, i64* %6753, align 8
  store %struct.Memory* %loadMem_400e91, %struct.Memory** %MEMORY
  %loadBr_400e91 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400e91 = icmp eq i8 %loadBr_400e91, 1
  br i1 %cmpBr_400e91, label %block_.L_400ffb, label %block_400e97

block_400e97:                                     ; preds = %block_.L_400e6a
  %loadMem_400e97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6756 = getelementptr inbounds %struct.GPR, %struct.GPR* %6755, i32 0, i32 33
  %6757 = getelementptr inbounds %struct.Reg, %struct.Reg* %6756, i32 0, i32 0
  %PC.i1318 = bitcast %union.anon* %6757 to i64*
  %6758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6759 = getelementptr inbounds %struct.GPR, %struct.GPR* %6758, i32 0, i32 1
  %6760 = getelementptr inbounds %struct.Reg, %struct.Reg* %6759, i32 0, i32 0
  %RAX.i1319 = bitcast %union.anon* %6760 to i64*
  %6761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6762 = getelementptr inbounds %struct.GPR, %struct.GPR* %6761, i32 0, i32 15
  %6763 = getelementptr inbounds %struct.Reg, %struct.Reg* %6762, i32 0, i32 0
  %RBP.i1320 = bitcast %union.anon* %6763 to i64*
  %6764 = load i64, i64* %RBP.i1320
  %6765 = sub i64 %6764, 12
  %6766 = load i64, i64* %PC.i1318
  %6767 = add i64 %6766, 3
  store i64 %6767, i64* %PC.i1318
  %6768 = inttoptr i64 %6765 to i32*
  %6769 = load i32, i32* %6768
  %6770 = zext i32 %6769 to i64
  store i64 %6770, i64* %RAX.i1319, align 8
  store %struct.Memory* %loadMem_400e97, %struct.Memory** %MEMORY
  %loadMem_400e9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6772 = getelementptr inbounds %struct.GPR, %struct.GPR* %6771, i32 0, i32 33
  %6773 = getelementptr inbounds %struct.Reg, %struct.Reg* %6772, i32 0, i32 0
  %PC.i1316 = bitcast %union.anon* %6773 to i64*
  %6774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6775 = getelementptr inbounds %struct.GPR, %struct.GPR* %6774, i32 0, i32 1
  %6776 = getelementptr inbounds %struct.Reg, %struct.Reg* %6775, i32 0, i32 0
  %RAX.i1317 = bitcast %union.anon* %6776 to i64*
  %6777 = load i64, i64* %RAX.i1317
  %6778 = load i64, i64* %PC.i1316
  %6779 = add i64 %6778, 3
  store i64 %6779, i64* %PC.i1316
  %6780 = trunc i64 %6777 to i32
  %6781 = add i32 1, %6780
  %6782 = zext i32 %6781 to i64
  store i64 %6782, i64* %RAX.i1317, align 8
  %6783 = icmp ult i32 %6781, %6780
  %6784 = icmp ult i32 %6781, 1
  %6785 = or i1 %6783, %6784
  %6786 = zext i1 %6785 to i8
  %6787 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6786, i8* %6787, align 1
  %6788 = and i32 %6781, 255
  %6789 = call i32 @llvm.ctpop.i32(i32 %6788)
  %6790 = trunc i32 %6789 to i8
  %6791 = and i8 %6790, 1
  %6792 = xor i8 %6791, 1
  %6793 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6792, i8* %6793, align 1
  %6794 = xor i64 1, %6777
  %6795 = trunc i64 %6794 to i32
  %6796 = xor i32 %6795, %6781
  %6797 = lshr i32 %6796, 4
  %6798 = trunc i32 %6797 to i8
  %6799 = and i8 %6798, 1
  %6800 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6799, i8* %6800, align 1
  %6801 = icmp eq i32 %6781, 0
  %6802 = zext i1 %6801 to i8
  %6803 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6802, i8* %6803, align 1
  %6804 = lshr i32 %6781, 31
  %6805 = trunc i32 %6804 to i8
  %6806 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6805, i8* %6806, align 1
  %6807 = lshr i32 %6780, 31
  %6808 = xor i32 %6804, %6807
  %6809 = add i32 %6808, %6804
  %6810 = icmp eq i32 %6809, 2
  %6811 = zext i1 %6810 to i8
  %6812 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6811, i8* %6812, align 1
  store %struct.Memory* %loadMem_400e9a, %struct.Memory** %MEMORY
  %loadMem_400e9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6814 = getelementptr inbounds %struct.GPR, %struct.GPR* %6813, i32 0, i32 33
  %6815 = getelementptr inbounds %struct.Reg, %struct.Reg* %6814, i32 0, i32 0
  %PC.i1313 = bitcast %union.anon* %6815 to i64*
  %6816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6817 = getelementptr inbounds %struct.GPR, %struct.GPR* %6816, i32 0, i32 1
  %6818 = getelementptr inbounds %struct.Reg, %struct.Reg* %6817, i32 0, i32 0
  %EAX.i1314 = bitcast %union.anon* %6818 to i32*
  %6819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6820 = getelementptr inbounds %struct.GPR, %struct.GPR* %6819, i32 0, i32 5
  %6821 = getelementptr inbounds %struct.Reg, %struct.Reg* %6820, i32 0, i32 0
  %RCX.i1315 = bitcast %union.anon* %6821 to i64*
  %6822 = load i32, i32* %EAX.i1314
  %6823 = zext i32 %6822 to i64
  %6824 = load i64, i64* %PC.i1313
  %6825 = add i64 %6824, 3
  store i64 %6825, i64* %PC.i1313
  %6826 = shl i64 %6823, 32
  %6827 = ashr exact i64 %6826, 32
  store i64 %6827, i64* %RCX.i1315, align 8
  store %struct.Memory* %loadMem_400e9d, %struct.Memory** %MEMORY
  %loadMem_400ea0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6829 = getelementptr inbounds %struct.GPR, %struct.GPR* %6828, i32 0, i32 33
  %6830 = getelementptr inbounds %struct.Reg, %struct.Reg* %6829, i32 0, i32 0
  %PC.i1310 = bitcast %union.anon* %6830 to i64*
  %6831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6832 = getelementptr inbounds %struct.GPR, %struct.GPR* %6831, i32 0, i32 5
  %6833 = getelementptr inbounds %struct.Reg, %struct.Reg* %6832, i32 0, i32 0
  %RCX.i1311 = bitcast %union.anon* %6833 to i64*
  %6834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6835 = getelementptr inbounds %struct.GPR, %struct.GPR* %6834, i32 0, i32 15
  %6836 = getelementptr inbounds %struct.Reg, %struct.Reg* %6835, i32 0, i32 0
  %RBP.i1312 = bitcast %union.anon* %6836 to i64*
  %6837 = load i64, i64* %RBP.i1312
  %6838 = load i64, i64* %RCX.i1311
  %6839 = mul i64 %6838, 4
  %6840 = add i64 %6837, -1488
  %6841 = add i64 %6840, %6839
  %6842 = load i64, i64* %PC.i1310
  %6843 = add i64 %6842, 8
  store i64 %6843, i64* %PC.i1310
  %6844 = inttoptr i64 %6841 to i32*
  %6845 = load i32, i32* %6844
  %6846 = sub i32 %6845, -1
  %6847 = icmp ult i32 %6845, -1
  %6848 = zext i1 %6847 to i8
  %6849 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6848, i8* %6849, align 1
  %6850 = and i32 %6846, 255
  %6851 = call i32 @llvm.ctpop.i32(i32 %6850)
  %6852 = trunc i32 %6851 to i8
  %6853 = and i8 %6852, 1
  %6854 = xor i8 %6853, 1
  %6855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6854, i8* %6855, align 1
  %6856 = xor i32 %6845, -1
  %6857 = xor i32 %6856, %6846
  %6858 = lshr i32 %6857, 4
  %6859 = trunc i32 %6858 to i8
  %6860 = and i8 %6859, 1
  %6861 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6860, i8* %6861, align 1
  %6862 = icmp eq i32 %6846, 0
  %6863 = zext i1 %6862 to i8
  %6864 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6863, i8* %6864, align 1
  %6865 = lshr i32 %6846, 31
  %6866 = trunc i32 %6865 to i8
  %6867 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6866, i8* %6867, align 1
  %6868 = lshr i32 %6845, 31
  %6869 = xor i32 %6868, 1
  %6870 = xor i32 %6865, %6868
  %6871 = add i32 %6870, %6869
  %6872 = icmp eq i32 %6871, 2
  %6873 = zext i1 %6872 to i8
  %6874 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6873, i8* %6874, align 1
  store %struct.Memory* %loadMem_400ea0, %struct.Memory** %MEMORY
  %loadMem_400ea8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6876 = getelementptr inbounds %struct.GPR, %struct.GPR* %6875, i32 0, i32 33
  %6877 = getelementptr inbounds %struct.Reg, %struct.Reg* %6876, i32 0, i32 0
  %PC.i1309 = bitcast %union.anon* %6877 to i64*
  %6878 = load i64, i64* %PC.i1309
  %6879 = add i64 %6878, 51
  %6880 = load i64, i64* %PC.i1309
  %6881 = add i64 %6880, 6
  %6882 = load i64, i64* %PC.i1309
  %6883 = add i64 %6882, 6
  store i64 %6883, i64* %PC.i1309
  %6884 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6885 = load i8, i8* %6884, align 1
  store i8 %6885, i8* %BRANCH_TAKEN, align 1
  %6886 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6887 = icmp ne i8 %6885, 0
  %6888 = select i1 %6887, i64 %6879, i64 %6881
  store i64 %6888, i64* %6886, align 8
  store %struct.Memory* %loadMem_400ea8, %struct.Memory** %MEMORY
  %loadBr_400ea8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400ea8 = icmp eq i8 %loadBr_400ea8, 1
  br i1 %cmpBr_400ea8, label %block_.L_400edb, label %block_400eae

block_400eae:                                     ; preds = %block_400e97
  %loadMem_400eae = load %struct.Memory*, %struct.Memory** %MEMORY
  %6889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6890 = getelementptr inbounds %struct.GPR, %struct.GPR* %6889, i32 0, i32 33
  %6891 = getelementptr inbounds %struct.Reg, %struct.Reg* %6890, i32 0, i32 0
  %PC.i1306 = bitcast %union.anon* %6891 to i64*
  %6892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6893 = getelementptr inbounds %struct.GPR, %struct.GPR* %6892, i32 0, i32 1
  %6894 = getelementptr inbounds %struct.Reg, %struct.Reg* %6893, i32 0, i32 0
  %RAX.i1307 = bitcast %union.anon* %6894 to i64*
  %6895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6896 = getelementptr inbounds %struct.GPR, %struct.GPR* %6895, i32 0, i32 15
  %6897 = getelementptr inbounds %struct.Reg, %struct.Reg* %6896, i32 0, i32 0
  %RBP.i1308 = bitcast %union.anon* %6897 to i64*
  %6898 = load i64, i64* %RBP.i1308
  %6899 = sub i64 %6898, 12
  %6900 = load i64, i64* %PC.i1306
  %6901 = add i64 %6900, 3
  store i64 %6901, i64* %PC.i1306
  %6902 = inttoptr i64 %6899 to i32*
  %6903 = load i32, i32* %6902
  %6904 = zext i32 %6903 to i64
  store i64 %6904, i64* %RAX.i1307, align 8
  store %struct.Memory* %loadMem_400eae, %struct.Memory** %MEMORY
  %loadMem_400eb1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6906 = getelementptr inbounds %struct.GPR, %struct.GPR* %6905, i32 0, i32 33
  %6907 = getelementptr inbounds %struct.Reg, %struct.Reg* %6906, i32 0, i32 0
  %PC.i1304 = bitcast %union.anon* %6907 to i64*
  %6908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6909 = getelementptr inbounds %struct.GPR, %struct.GPR* %6908, i32 0, i32 1
  %6910 = getelementptr inbounds %struct.Reg, %struct.Reg* %6909, i32 0, i32 0
  %RAX.i1305 = bitcast %union.anon* %6910 to i64*
  %6911 = load i64, i64* %RAX.i1305
  %6912 = load i64, i64* %PC.i1304
  %6913 = add i64 %6912, 3
  store i64 %6913, i64* %PC.i1304
  %6914 = trunc i64 %6911 to i32
  %6915 = add i32 1, %6914
  %6916 = zext i32 %6915 to i64
  store i64 %6916, i64* %RAX.i1305, align 8
  %6917 = icmp ult i32 %6915, %6914
  %6918 = icmp ult i32 %6915, 1
  %6919 = or i1 %6917, %6918
  %6920 = zext i1 %6919 to i8
  %6921 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6920, i8* %6921, align 1
  %6922 = and i32 %6915, 255
  %6923 = call i32 @llvm.ctpop.i32(i32 %6922)
  %6924 = trunc i32 %6923 to i8
  %6925 = and i8 %6924, 1
  %6926 = xor i8 %6925, 1
  %6927 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6926, i8* %6927, align 1
  %6928 = xor i64 1, %6911
  %6929 = trunc i64 %6928 to i32
  %6930 = xor i32 %6929, %6915
  %6931 = lshr i32 %6930, 4
  %6932 = trunc i32 %6931 to i8
  %6933 = and i8 %6932, 1
  %6934 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6933, i8* %6934, align 1
  %6935 = icmp eq i32 %6915, 0
  %6936 = zext i1 %6935 to i8
  %6937 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6936, i8* %6937, align 1
  %6938 = lshr i32 %6915, 31
  %6939 = trunc i32 %6938 to i8
  %6940 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6939, i8* %6940, align 1
  %6941 = lshr i32 %6914, 31
  %6942 = xor i32 %6938, %6941
  %6943 = add i32 %6942, %6938
  %6944 = icmp eq i32 %6943, 2
  %6945 = zext i1 %6944 to i8
  %6946 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6945, i8* %6946, align 1
  store %struct.Memory* %loadMem_400eb1, %struct.Memory** %MEMORY
  %loadMem_400eb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6948 = getelementptr inbounds %struct.GPR, %struct.GPR* %6947, i32 0, i32 33
  %6949 = getelementptr inbounds %struct.Reg, %struct.Reg* %6948, i32 0, i32 0
  %PC.i1301 = bitcast %union.anon* %6949 to i64*
  %6950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6951 = getelementptr inbounds %struct.GPR, %struct.GPR* %6950, i32 0, i32 1
  %6952 = getelementptr inbounds %struct.Reg, %struct.Reg* %6951, i32 0, i32 0
  %EAX.i1302 = bitcast %union.anon* %6952 to i32*
  %6953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6954 = getelementptr inbounds %struct.GPR, %struct.GPR* %6953, i32 0, i32 5
  %6955 = getelementptr inbounds %struct.Reg, %struct.Reg* %6954, i32 0, i32 0
  %RCX.i1303 = bitcast %union.anon* %6955 to i64*
  %6956 = load i32, i32* %EAX.i1302
  %6957 = zext i32 %6956 to i64
  %6958 = load i64, i64* %PC.i1301
  %6959 = add i64 %6958, 3
  store i64 %6959, i64* %PC.i1301
  %6960 = shl i64 %6957, 32
  %6961 = ashr exact i64 %6960, 32
  store i64 %6961, i64* %RCX.i1303, align 8
  store %struct.Memory* %loadMem_400eb4, %struct.Memory** %MEMORY
  %loadMem_400eb7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6963 = getelementptr inbounds %struct.GPR, %struct.GPR* %6962, i32 0, i32 33
  %6964 = getelementptr inbounds %struct.Reg, %struct.Reg* %6963, i32 0, i32 0
  %PC.i1298 = bitcast %union.anon* %6964 to i64*
  %6965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6966 = getelementptr inbounds %struct.GPR, %struct.GPR* %6965, i32 0, i32 5
  %6967 = getelementptr inbounds %struct.Reg, %struct.Reg* %6966, i32 0, i32 0
  %RCX.i1299 = bitcast %union.anon* %6967 to i64*
  %6968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6969 = getelementptr inbounds %struct.GPR, %struct.GPR* %6968, i32 0, i32 15
  %6970 = getelementptr inbounds %struct.Reg, %struct.Reg* %6969, i32 0, i32 0
  %RBP.i1300 = bitcast %union.anon* %6970 to i64*
  %6971 = load i64, i64* %RBP.i1300
  %6972 = load i64, i64* %RCX.i1299
  %6973 = mul i64 %6972, 4
  %6974 = add i64 %6971, -1488
  %6975 = add i64 %6974, %6973
  %6976 = load i64, i64* %PC.i1298
  %6977 = add i64 %6976, 8
  store i64 %6977, i64* %PC.i1298
  %6978 = inttoptr i64 %6975 to i32*
  %6979 = load i32, i32* %6978
  %6980 = sext i32 %6979 to i64
  store i64 %6980, i64* %RCX.i1299, align 8
  store %struct.Memory* %loadMem_400eb7, %struct.Memory** %MEMORY
  %loadMem_400ebf = load %struct.Memory*, %struct.Memory** %MEMORY
  %6981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6982 = getelementptr inbounds %struct.GPR, %struct.GPR* %6981, i32 0, i32 33
  %6983 = getelementptr inbounds %struct.Reg, %struct.Reg* %6982, i32 0, i32 0
  %PC.i1295 = bitcast %union.anon* %6983 to i64*
  %6984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6985 = getelementptr inbounds %struct.GPR, %struct.GPR* %6984, i32 0, i32 1
  %6986 = getelementptr inbounds %struct.Reg, %struct.Reg* %6985, i32 0, i32 0
  %RAX.i1296 = bitcast %union.anon* %6986 to i64*
  %6987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6988 = getelementptr inbounds %struct.GPR, %struct.GPR* %6987, i32 0, i32 5
  %6989 = getelementptr inbounds %struct.Reg, %struct.Reg* %6988, i32 0, i32 0
  %RCX.i1297 = bitcast %union.anon* %6989 to i64*
  %6990 = load i64, i64* %RCX.i1297
  %6991 = mul i64 %6990, 4
  %6992 = add i64 %6991, 6305920
  %6993 = load i64, i64* %PC.i1295
  %6994 = add i64 %6993, 7
  store i64 %6994, i64* %PC.i1295
  %6995 = inttoptr i64 %6992 to i32*
  %6996 = load i32, i32* %6995
  %6997 = zext i32 %6996 to i64
  store i64 %6997, i64* %RAX.i1296, align 8
  store %struct.Memory* %loadMem_400ebf, %struct.Memory** %MEMORY
  %loadMem_400ec6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6999 = getelementptr inbounds %struct.GPR, %struct.GPR* %6998, i32 0, i32 33
  %7000 = getelementptr inbounds %struct.Reg, %struct.Reg* %6999, i32 0, i32 0
  %PC.i1292 = bitcast %union.anon* %7000 to i64*
  %7001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7002 = getelementptr inbounds %struct.GPR, %struct.GPR* %7001, i32 0, i32 7
  %7003 = getelementptr inbounds %struct.Reg, %struct.Reg* %7002, i32 0, i32 0
  %RDX.i1293 = bitcast %union.anon* %7003 to i64*
  %7004 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7005 = getelementptr inbounds %struct.GPR, %struct.GPR* %7004, i32 0, i32 15
  %7006 = getelementptr inbounds %struct.Reg, %struct.Reg* %7005, i32 0, i32 0
  %RBP.i1294 = bitcast %union.anon* %7006 to i64*
  %7007 = load i64, i64* %RBP.i1294
  %7008 = sub i64 %7007, 12
  %7009 = load i64, i64* %PC.i1292
  %7010 = add i64 %7009, 3
  store i64 %7010, i64* %PC.i1292
  %7011 = inttoptr i64 %7008 to i32*
  %7012 = load i32, i32* %7011
  %7013 = zext i32 %7012 to i64
  store i64 %7013, i64* %RDX.i1293, align 8
  store %struct.Memory* %loadMem_400ec6, %struct.Memory** %MEMORY
  %loadMem_400ec9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7015 = getelementptr inbounds %struct.GPR, %struct.GPR* %7014, i32 0, i32 33
  %7016 = getelementptr inbounds %struct.Reg, %struct.Reg* %7015, i32 0, i32 0
  %PC.i1290 = bitcast %union.anon* %7016 to i64*
  %7017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7018 = getelementptr inbounds %struct.GPR, %struct.GPR* %7017, i32 0, i32 7
  %7019 = getelementptr inbounds %struct.Reg, %struct.Reg* %7018, i32 0, i32 0
  %RDX.i1291 = bitcast %union.anon* %7019 to i64*
  %7020 = load i64, i64* %RDX.i1291
  %7021 = load i64, i64* %PC.i1290
  %7022 = add i64 %7021, 3
  store i64 %7022, i64* %PC.i1290
  %7023 = trunc i64 %7020 to i32
  %7024 = add i32 1, %7023
  %7025 = zext i32 %7024 to i64
  store i64 %7025, i64* %RDX.i1291, align 8
  %7026 = icmp ult i32 %7024, %7023
  %7027 = icmp ult i32 %7024, 1
  %7028 = or i1 %7026, %7027
  %7029 = zext i1 %7028 to i8
  %7030 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7029, i8* %7030, align 1
  %7031 = and i32 %7024, 255
  %7032 = call i32 @llvm.ctpop.i32(i32 %7031)
  %7033 = trunc i32 %7032 to i8
  %7034 = and i8 %7033, 1
  %7035 = xor i8 %7034, 1
  %7036 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7035, i8* %7036, align 1
  %7037 = xor i64 1, %7020
  %7038 = trunc i64 %7037 to i32
  %7039 = xor i32 %7038, %7024
  %7040 = lshr i32 %7039, 4
  %7041 = trunc i32 %7040 to i8
  %7042 = and i8 %7041, 1
  %7043 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7042, i8* %7043, align 1
  %7044 = icmp eq i32 %7024, 0
  %7045 = zext i1 %7044 to i8
  %7046 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7045, i8* %7046, align 1
  %7047 = lshr i32 %7024, 31
  %7048 = trunc i32 %7047 to i8
  %7049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7048, i8* %7049, align 1
  %7050 = lshr i32 %7023, 31
  %7051 = xor i32 %7047, %7050
  %7052 = add i32 %7051, %7047
  %7053 = icmp eq i32 %7052, 2
  %7054 = zext i1 %7053 to i8
  %7055 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7054, i8* %7055, align 1
  store %struct.Memory* %loadMem_400ec9, %struct.Memory** %MEMORY
  %loadMem_400ecc = load %struct.Memory*, %struct.Memory** %MEMORY
  %7056 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7057 = getelementptr inbounds %struct.GPR, %struct.GPR* %7056, i32 0, i32 33
  %7058 = getelementptr inbounds %struct.Reg, %struct.Reg* %7057, i32 0, i32 0
  %PC.i1287 = bitcast %union.anon* %7058 to i64*
  %7059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7060 = getelementptr inbounds %struct.GPR, %struct.GPR* %7059, i32 0, i32 7
  %7061 = getelementptr inbounds %struct.Reg, %struct.Reg* %7060, i32 0, i32 0
  %EDX.i1288 = bitcast %union.anon* %7061 to i32*
  %7062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7063 = getelementptr inbounds %struct.GPR, %struct.GPR* %7062, i32 0, i32 5
  %7064 = getelementptr inbounds %struct.Reg, %struct.Reg* %7063, i32 0, i32 0
  %RCX.i1289 = bitcast %union.anon* %7064 to i64*
  %7065 = load i32, i32* %EDX.i1288
  %7066 = zext i32 %7065 to i64
  %7067 = load i64, i64* %PC.i1287
  %7068 = add i64 %7067, 3
  store i64 %7068, i64* %PC.i1287
  %7069 = shl i64 %7066, 32
  %7070 = ashr exact i64 %7069, 32
  store i64 %7070, i64* %RCX.i1289, align 8
  store %struct.Memory* %loadMem_400ecc, %struct.Memory** %MEMORY
  %loadMem_400ecf = load %struct.Memory*, %struct.Memory** %MEMORY
  %7071 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7072 = getelementptr inbounds %struct.GPR, %struct.GPR* %7071, i32 0, i32 33
  %7073 = getelementptr inbounds %struct.Reg, %struct.Reg* %7072, i32 0, i32 0
  %PC.i1283 = bitcast %union.anon* %7073 to i64*
  %7074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7075 = getelementptr inbounds %struct.GPR, %struct.GPR* %7074, i32 0, i32 1
  %7076 = getelementptr inbounds %struct.Reg, %struct.Reg* %7075, i32 0, i32 0
  %EAX.i1284 = bitcast %union.anon* %7076 to i32*
  %7077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7078 = getelementptr inbounds %struct.GPR, %struct.GPR* %7077, i32 0, i32 5
  %7079 = getelementptr inbounds %struct.Reg, %struct.Reg* %7078, i32 0, i32 0
  %RCX.i1285 = bitcast %union.anon* %7079 to i64*
  %7080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7081 = getelementptr inbounds %struct.GPR, %struct.GPR* %7080, i32 0, i32 15
  %7082 = getelementptr inbounds %struct.Reg, %struct.Reg* %7081, i32 0, i32 0
  %RBP.i1286 = bitcast %union.anon* %7082 to i64*
  %7083 = load i64, i64* %RBP.i1286
  %7084 = load i64, i64* %RCX.i1285
  %7085 = mul i64 %7084, 4
  %7086 = add i64 %7083, -1248
  %7087 = add i64 %7086, %7085
  %7088 = load i32, i32* %EAX.i1284
  %7089 = zext i32 %7088 to i64
  %7090 = load i64, i64* %PC.i1283
  %7091 = add i64 %7090, 7
  store i64 %7091, i64* %PC.i1283
  %7092 = inttoptr i64 %7087 to i32*
  store i32 %7088, i32* %7092
  store %struct.Memory* %loadMem_400ecf, %struct.Memory** %MEMORY
  %loadMem_400ed6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7094 = getelementptr inbounds %struct.GPR, %struct.GPR* %7093, i32 0, i32 33
  %7095 = getelementptr inbounds %struct.Reg, %struct.Reg* %7094, i32 0, i32 0
  %PC.i1282 = bitcast %union.anon* %7095 to i64*
  %7096 = load i64, i64* %PC.i1282
  %7097 = add i64 %7096, 25
  %7098 = load i64, i64* %PC.i1282
  %7099 = add i64 %7098, 5
  store i64 %7099, i64* %PC.i1282
  %7100 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7097, i64* %7100, align 8
  store %struct.Memory* %loadMem_400ed6, %struct.Memory** %MEMORY
  br label %block_.L_400eef

block_.L_400edb:                                  ; preds = %block_400e97
  %loadMem_400edb = load %struct.Memory*, %struct.Memory** %MEMORY
  %7101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7102 = getelementptr inbounds %struct.GPR, %struct.GPR* %7101, i32 0, i32 33
  %7103 = getelementptr inbounds %struct.Reg, %struct.Reg* %7102, i32 0, i32 0
  %PC.i1279 = bitcast %union.anon* %7103 to i64*
  %7104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7105 = getelementptr inbounds %struct.GPR, %struct.GPR* %7104, i32 0, i32 1
  %7106 = getelementptr inbounds %struct.Reg, %struct.Reg* %7105, i32 0, i32 0
  %RAX.i1280 = bitcast %union.anon* %7106 to i64*
  %7107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7108 = getelementptr inbounds %struct.GPR, %struct.GPR* %7107, i32 0, i32 15
  %7109 = getelementptr inbounds %struct.Reg, %struct.Reg* %7108, i32 0, i32 0
  %RBP.i1281 = bitcast %union.anon* %7109 to i64*
  %7110 = load i64, i64* %RBP.i1281
  %7111 = sub i64 %7110, 12
  %7112 = load i64, i64* %PC.i1279
  %7113 = add i64 %7112, 3
  store i64 %7113, i64* %PC.i1279
  %7114 = inttoptr i64 %7111 to i32*
  %7115 = load i32, i32* %7114
  %7116 = zext i32 %7115 to i64
  store i64 %7116, i64* %RAX.i1280, align 8
  store %struct.Memory* %loadMem_400edb, %struct.Memory** %MEMORY
  %loadMem_400ede = load %struct.Memory*, %struct.Memory** %MEMORY
  %7117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7118 = getelementptr inbounds %struct.GPR, %struct.GPR* %7117, i32 0, i32 33
  %7119 = getelementptr inbounds %struct.Reg, %struct.Reg* %7118, i32 0, i32 0
  %PC.i1277 = bitcast %union.anon* %7119 to i64*
  %7120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7121 = getelementptr inbounds %struct.GPR, %struct.GPR* %7120, i32 0, i32 1
  %7122 = getelementptr inbounds %struct.Reg, %struct.Reg* %7121, i32 0, i32 0
  %RAX.i1278 = bitcast %union.anon* %7122 to i64*
  %7123 = load i64, i64* %RAX.i1278
  %7124 = load i64, i64* %PC.i1277
  %7125 = add i64 %7124, 3
  store i64 %7125, i64* %PC.i1277
  %7126 = trunc i64 %7123 to i32
  %7127 = add i32 1, %7126
  %7128 = zext i32 %7127 to i64
  store i64 %7128, i64* %RAX.i1278, align 8
  %7129 = icmp ult i32 %7127, %7126
  %7130 = icmp ult i32 %7127, 1
  %7131 = or i1 %7129, %7130
  %7132 = zext i1 %7131 to i8
  %7133 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7132, i8* %7133, align 1
  %7134 = and i32 %7127, 255
  %7135 = call i32 @llvm.ctpop.i32(i32 %7134)
  %7136 = trunc i32 %7135 to i8
  %7137 = and i8 %7136, 1
  %7138 = xor i8 %7137, 1
  %7139 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7138, i8* %7139, align 1
  %7140 = xor i64 1, %7123
  %7141 = trunc i64 %7140 to i32
  %7142 = xor i32 %7141, %7127
  %7143 = lshr i32 %7142, 4
  %7144 = trunc i32 %7143 to i8
  %7145 = and i8 %7144, 1
  %7146 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7145, i8* %7146, align 1
  %7147 = icmp eq i32 %7127, 0
  %7148 = zext i1 %7147 to i8
  %7149 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7148, i8* %7149, align 1
  %7150 = lshr i32 %7127, 31
  %7151 = trunc i32 %7150 to i8
  %7152 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7151, i8* %7152, align 1
  %7153 = lshr i32 %7126, 31
  %7154 = xor i32 %7150, %7153
  %7155 = add i32 %7154, %7150
  %7156 = icmp eq i32 %7155, 2
  %7157 = zext i1 %7156 to i8
  %7158 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7157, i8* %7158, align 1
  store %struct.Memory* %loadMem_400ede, %struct.Memory** %MEMORY
  %loadMem_400ee1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7160 = getelementptr inbounds %struct.GPR, %struct.GPR* %7159, i32 0, i32 33
  %7161 = getelementptr inbounds %struct.Reg, %struct.Reg* %7160, i32 0, i32 0
  %PC.i1274 = bitcast %union.anon* %7161 to i64*
  %7162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7163 = getelementptr inbounds %struct.GPR, %struct.GPR* %7162, i32 0, i32 1
  %7164 = getelementptr inbounds %struct.Reg, %struct.Reg* %7163, i32 0, i32 0
  %EAX.i1275 = bitcast %union.anon* %7164 to i32*
  %7165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7166 = getelementptr inbounds %struct.GPR, %struct.GPR* %7165, i32 0, i32 5
  %7167 = getelementptr inbounds %struct.Reg, %struct.Reg* %7166, i32 0, i32 0
  %RCX.i1276 = bitcast %union.anon* %7167 to i64*
  %7168 = load i32, i32* %EAX.i1275
  %7169 = zext i32 %7168 to i64
  %7170 = load i64, i64* %PC.i1274
  %7171 = add i64 %7170, 3
  store i64 %7171, i64* %PC.i1274
  %7172 = shl i64 %7169, 32
  %7173 = ashr exact i64 %7172, 32
  store i64 %7173, i64* %RCX.i1276, align 8
  store %struct.Memory* %loadMem_400ee1, %struct.Memory** %MEMORY
  %loadMem_400ee4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7175 = getelementptr inbounds %struct.GPR, %struct.GPR* %7174, i32 0, i32 33
  %7176 = getelementptr inbounds %struct.Reg, %struct.Reg* %7175, i32 0, i32 0
  %PC.i1271 = bitcast %union.anon* %7176 to i64*
  %7177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7178 = getelementptr inbounds %struct.GPR, %struct.GPR* %7177, i32 0, i32 5
  %7179 = getelementptr inbounds %struct.Reg, %struct.Reg* %7178, i32 0, i32 0
  %RCX.i1272 = bitcast %union.anon* %7179 to i64*
  %7180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7181 = getelementptr inbounds %struct.GPR, %struct.GPR* %7180, i32 0, i32 15
  %7182 = getelementptr inbounds %struct.Reg, %struct.Reg* %7181, i32 0, i32 0
  %RBP.i1273 = bitcast %union.anon* %7182 to i64*
  %7183 = load i64, i64* %RBP.i1273
  %7184 = load i64, i64* %RCX.i1272
  %7185 = mul i64 %7184, 4
  %7186 = add i64 %7183, -1248
  %7187 = add i64 %7186, %7185
  %7188 = load i64, i64* %PC.i1271
  %7189 = add i64 %7188, 11
  store i64 %7189, i64* %PC.i1271
  %7190 = inttoptr i64 %7187 to i32*
  store i32 0, i32* %7190
  store %struct.Memory* %loadMem_400ee4, %struct.Memory** %MEMORY
  br label %block_.L_400eef

block_.L_400eef:                                  ; preds = %block_.L_400edb, %block_400eae
  %loadMem_400eef = load %struct.Memory*, %struct.Memory** %MEMORY
  %7191 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7192 = getelementptr inbounds %struct.GPR, %struct.GPR* %7191, i32 0, i32 33
  %7193 = getelementptr inbounds %struct.Reg, %struct.Reg* %7192, i32 0, i32 0
  %PC.i1269 = bitcast %union.anon* %7193 to i64*
  %7194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7195 = getelementptr inbounds %struct.GPR, %struct.GPR* %7194, i32 0, i32 15
  %7196 = getelementptr inbounds %struct.Reg, %struct.Reg* %7195, i32 0, i32 0
  %RBP.i1270 = bitcast %union.anon* %7196 to i64*
  %7197 = load i64, i64* %RBP.i1270
  %7198 = sub i64 %7197, 4
  %7199 = load i64, i64* %PC.i1269
  %7200 = add i64 %7199, 7
  store i64 %7200, i64* %PC.i1269
  %7201 = inttoptr i64 %7198 to i32*
  store i32 1, i32* %7201
  store %struct.Memory* %loadMem_400eef, %struct.Memory** %MEMORY
  br label %block_.L_400ef6

block_.L_400ef6:                                  ; preds = %block_.L_400fc5, %block_.L_400eef
  %loadMem_400ef6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7203 = getelementptr inbounds %struct.GPR, %struct.GPR* %7202, i32 0, i32 33
  %7204 = getelementptr inbounds %struct.Reg, %struct.Reg* %7203, i32 0, i32 0
  %PC.i1266 = bitcast %union.anon* %7204 to i64*
  %7205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7206 = getelementptr inbounds %struct.GPR, %struct.GPR* %7205, i32 0, i32 1
  %7207 = getelementptr inbounds %struct.Reg, %struct.Reg* %7206, i32 0, i32 0
  %RAX.i1267 = bitcast %union.anon* %7207 to i64*
  %7208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7209 = getelementptr inbounds %struct.GPR, %struct.GPR* %7208, i32 0, i32 15
  %7210 = getelementptr inbounds %struct.Reg, %struct.Reg* %7209, i32 0, i32 0
  %RBP.i1268 = bitcast %union.anon* %7210 to i64*
  %7211 = load i64, i64* %RBP.i1268
  %7212 = sub i64 %7211, 4
  %7213 = load i64, i64* %PC.i1266
  %7214 = add i64 %7213, 3
  store i64 %7214, i64* %PC.i1266
  %7215 = inttoptr i64 %7212 to i32*
  %7216 = load i32, i32* %7215
  %7217 = zext i32 %7216 to i64
  store i64 %7217, i64* %RAX.i1267, align 8
  store %struct.Memory* %loadMem_400ef6, %struct.Memory** %MEMORY
  %loadMem_400ef9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7219 = getelementptr inbounds %struct.GPR, %struct.GPR* %7218, i32 0, i32 33
  %7220 = getelementptr inbounds %struct.Reg, %struct.Reg* %7219, i32 0, i32 0
  %PC.i1263 = bitcast %union.anon* %7220 to i64*
  %7221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7222 = getelementptr inbounds %struct.GPR, %struct.GPR* %7221, i32 0, i32 5
  %7223 = getelementptr inbounds %struct.Reg, %struct.Reg* %7222, i32 0, i32 0
  %RCX.i1264 = bitcast %union.anon* %7223 to i64*
  %7224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7225 = getelementptr inbounds %struct.GPR, %struct.GPR* %7224, i32 0, i32 15
  %7226 = getelementptr inbounds %struct.Reg, %struct.Reg* %7225, i32 0, i32 0
  %RBP.i1265 = bitcast %union.anon* %7226 to i64*
  %7227 = load i64, i64* %RBP.i1265
  %7228 = sub i64 %7227, 12
  %7229 = load i64, i64* %PC.i1263
  %7230 = add i64 %7229, 3
  store i64 %7230, i64* %PC.i1263
  %7231 = inttoptr i64 %7228 to i32*
  %7232 = load i32, i32* %7231
  %7233 = zext i32 %7232 to i64
  store i64 %7233, i64* %RCX.i1264, align 8
  store %struct.Memory* %loadMem_400ef9, %struct.Memory** %MEMORY
  %loadMem_400efc = load %struct.Memory*, %struct.Memory** %MEMORY
  %7234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7235 = getelementptr inbounds %struct.GPR, %struct.GPR* %7234, i32 0, i32 33
  %7236 = getelementptr inbounds %struct.Reg, %struct.Reg* %7235, i32 0, i32 0
  %PC.i1261 = bitcast %union.anon* %7236 to i64*
  %7237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7238 = getelementptr inbounds %struct.GPR, %struct.GPR* %7237, i32 0, i32 5
  %7239 = getelementptr inbounds %struct.Reg, %struct.Reg* %7238, i32 0, i32 0
  %RCX.i1262 = bitcast %union.anon* %7239 to i64*
  %7240 = load i64, i64* %RCX.i1262
  %7241 = load i64, i64* %PC.i1261
  %7242 = add i64 %7241, 3
  store i64 %7242, i64* %PC.i1261
  %7243 = trunc i64 %7240 to i32
  %7244 = add i32 1, %7243
  %7245 = zext i32 %7244 to i64
  store i64 %7245, i64* %RCX.i1262, align 8
  %7246 = icmp ult i32 %7244, %7243
  %7247 = icmp ult i32 %7244, 1
  %7248 = or i1 %7246, %7247
  %7249 = zext i1 %7248 to i8
  %7250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7249, i8* %7250, align 1
  %7251 = and i32 %7244, 255
  %7252 = call i32 @llvm.ctpop.i32(i32 %7251)
  %7253 = trunc i32 %7252 to i8
  %7254 = and i8 %7253, 1
  %7255 = xor i8 %7254, 1
  %7256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7255, i8* %7256, align 1
  %7257 = xor i64 1, %7240
  %7258 = trunc i64 %7257 to i32
  %7259 = xor i32 %7258, %7244
  %7260 = lshr i32 %7259, 4
  %7261 = trunc i32 %7260 to i8
  %7262 = and i8 %7261, 1
  %7263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7262, i8* %7263, align 1
  %7264 = icmp eq i32 %7244, 0
  %7265 = zext i1 %7264 to i8
  %7266 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7265, i8* %7266, align 1
  %7267 = lshr i32 %7244, 31
  %7268 = trunc i32 %7267 to i8
  %7269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7268, i8* %7269, align 1
  %7270 = lshr i32 %7243, 31
  %7271 = xor i32 %7267, %7270
  %7272 = add i32 %7271, %7267
  %7273 = icmp eq i32 %7272, 2
  %7274 = zext i1 %7273 to i8
  %7275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7274, i8* %7275, align 1
  store %struct.Memory* %loadMem_400efc, %struct.Memory** %MEMORY
  %loadMem_400eff = load %struct.Memory*, %struct.Memory** %MEMORY
  %7276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7277 = getelementptr inbounds %struct.GPR, %struct.GPR* %7276, i32 0, i32 33
  %7278 = getelementptr inbounds %struct.Reg, %struct.Reg* %7277, i32 0, i32 0
  %PC.i1258 = bitcast %union.anon* %7278 to i64*
  %7279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7280 = getelementptr inbounds %struct.GPR, %struct.GPR* %7279, i32 0, i32 5
  %7281 = getelementptr inbounds %struct.Reg, %struct.Reg* %7280, i32 0, i32 0
  %ECX.i1259 = bitcast %union.anon* %7281 to i32*
  %7282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7283 = getelementptr inbounds %struct.GPR, %struct.GPR* %7282, i32 0, i32 7
  %7284 = getelementptr inbounds %struct.Reg, %struct.Reg* %7283, i32 0, i32 0
  %RDX.i1260 = bitcast %union.anon* %7284 to i64*
  %7285 = load i32, i32* %ECX.i1259
  %7286 = zext i32 %7285 to i64
  %7287 = load i64, i64* %PC.i1258
  %7288 = add i64 %7287, 3
  store i64 %7288, i64* %PC.i1258
  %7289 = shl i64 %7286, 32
  %7290 = ashr exact i64 %7289, 32
  store i64 %7290, i64* %RDX.i1260, align 8
  store %struct.Memory* %loadMem_400eff, %struct.Memory** %MEMORY
  %loadMem_400f02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7292 = getelementptr inbounds %struct.GPR, %struct.GPR* %7291, i32 0, i32 33
  %7293 = getelementptr inbounds %struct.Reg, %struct.Reg* %7292, i32 0, i32 0
  %PC.i1254 = bitcast %union.anon* %7293 to i64*
  %7294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7295 = getelementptr inbounds %struct.GPR, %struct.GPR* %7294, i32 0, i32 1
  %7296 = getelementptr inbounds %struct.Reg, %struct.Reg* %7295, i32 0, i32 0
  %EAX.i1255 = bitcast %union.anon* %7296 to i32*
  %7297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7298 = getelementptr inbounds %struct.GPR, %struct.GPR* %7297, i32 0, i32 7
  %7299 = getelementptr inbounds %struct.Reg, %struct.Reg* %7298, i32 0, i32 0
  %RDX.i1256 = bitcast %union.anon* %7299 to i64*
  %7300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7301 = getelementptr inbounds %struct.GPR, %struct.GPR* %7300, i32 0, i32 15
  %7302 = getelementptr inbounds %struct.Reg, %struct.Reg* %7301, i32 0, i32 0
  %RBP.i1257 = bitcast %union.anon* %7302 to i64*
  %7303 = load i32, i32* %EAX.i1255
  %7304 = zext i32 %7303 to i64
  %7305 = load i64, i64* %RBP.i1257
  %7306 = load i64, i64* %RDX.i1256
  %7307 = mul i64 %7306, 4
  %7308 = add i64 %7305, -1328
  %7309 = add i64 %7308, %7307
  %7310 = load i64, i64* %PC.i1254
  %7311 = add i64 %7310, 7
  store i64 %7311, i64* %PC.i1254
  %7312 = inttoptr i64 %7309 to i32*
  %7313 = load i32, i32* %7312
  %7314 = sub i32 %7303, %7313
  %7315 = icmp ult i32 %7303, %7313
  %7316 = zext i1 %7315 to i8
  %7317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7316, i8* %7317, align 1
  %7318 = and i32 %7314, 255
  %7319 = call i32 @llvm.ctpop.i32(i32 %7318)
  %7320 = trunc i32 %7319 to i8
  %7321 = and i8 %7320, 1
  %7322 = xor i8 %7321, 1
  %7323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7322, i8* %7323, align 1
  %7324 = xor i32 %7313, %7303
  %7325 = xor i32 %7324, %7314
  %7326 = lshr i32 %7325, 4
  %7327 = trunc i32 %7326 to i8
  %7328 = and i8 %7327, 1
  %7329 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7328, i8* %7329, align 1
  %7330 = icmp eq i32 %7314, 0
  %7331 = zext i1 %7330 to i8
  %7332 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7331, i8* %7332, align 1
  %7333 = lshr i32 %7314, 31
  %7334 = trunc i32 %7333 to i8
  %7335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7334, i8* %7335, align 1
  %7336 = lshr i32 %7303, 31
  %7337 = lshr i32 %7313, 31
  %7338 = xor i32 %7337, %7336
  %7339 = xor i32 %7333, %7336
  %7340 = add i32 %7339, %7338
  %7341 = icmp eq i32 %7340, 2
  %7342 = zext i1 %7341 to i8
  %7343 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7342, i8* %7343, align 1
  store %struct.Memory* %loadMem_400f02, %struct.Memory** %MEMORY
  %loadMem_400f09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7345 = getelementptr inbounds %struct.GPR, %struct.GPR* %7344, i32 0, i32 33
  %7346 = getelementptr inbounds %struct.Reg, %struct.Reg* %7345, i32 0, i32 0
  %PC.i1253 = bitcast %union.anon* %7346 to i64*
  %7347 = load i64, i64* %PC.i1253
  %7348 = add i64 %7347, 202
  %7349 = load i64, i64* %PC.i1253
  %7350 = add i64 %7349, 6
  %7351 = load i64, i64* %PC.i1253
  %7352 = add i64 %7351, 6
  store i64 %7352, i64* %PC.i1253
  %7353 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7354 = load i8, i8* %7353, align 1
  %7355 = icmp eq i8 %7354, 0
  %7356 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7357 = load i8, i8* %7356, align 1
  %7358 = icmp ne i8 %7357, 0
  %7359 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %7360 = load i8, i8* %7359, align 1
  %7361 = icmp ne i8 %7360, 0
  %7362 = xor i1 %7358, %7361
  %7363 = xor i1 %7362, true
  %7364 = and i1 %7355, %7363
  %7365 = zext i1 %7364 to i8
  store i8 %7365, i8* %BRANCH_TAKEN, align 1
  %7366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7367 = select i1 %7364, i64 %7348, i64 %7350
  store i64 %7367, i64* %7366, align 8
  store %struct.Memory* %loadMem_400f09, %struct.Memory** %MEMORY
  %loadBr_400f09 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400f09 = icmp eq i8 %loadBr_400f09, 1
  br i1 %cmpBr_400f09, label %block_.L_400fd3, label %block_400f0f

block_400f0f:                                     ; preds = %block_.L_400ef6
  %loadMem_400f0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7369 = getelementptr inbounds %struct.GPR, %struct.GPR* %7368, i32 0, i32 33
  %7370 = getelementptr inbounds %struct.Reg, %struct.Reg* %7369, i32 0, i32 0
  %PC.i1250 = bitcast %union.anon* %7370 to i64*
  %7371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7372 = getelementptr inbounds %struct.GPR, %struct.GPR* %7371, i32 0, i32 1
  %7373 = getelementptr inbounds %struct.Reg, %struct.Reg* %7372, i32 0, i32 0
  %RAX.i1251 = bitcast %union.anon* %7373 to i64*
  %7374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7375 = getelementptr inbounds %struct.GPR, %struct.GPR* %7374, i32 0, i32 15
  %7376 = getelementptr inbounds %struct.Reg, %struct.Reg* %7375, i32 0, i32 0
  %RBP.i1252 = bitcast %union.anon* %7376 to i64*
  %7377 = load i64, i64* %RBP.i1252
  %7378 = sub i64 %7377, 12
  %7379 = load i64, i64* %PC.i1250
  %7380 = add i64 %7379, 3
  store i64 %7380, i64* %PC.i1250
  %7381 = inttoptr i64 %7378 to i32*
  %7382 = load i32, i32* %7381
  %7383 = zext i32 %7382 to i64
  store i64 %7383, i64* %RAX.i1251, align 8
  store %struct.Memory* %loadMem_400f0f, %struct.Memory** %MEMORY
  %loadMem_400f12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7385 = getelementptr inbounds %struct.GPR, %struct.GPR* %7384, i32 0, i32 33
  %7386 = getelementptr inbounds %struct.Reg, %struct.Reg* %7385, i32 0, i32 0
  %PC.i1248 = bitcast %union.anon* %7386 to i64*
  %7387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7388 = getelementptr inbounds %struct.GPR, %struct.GPR* %7387, i32 0, i32 1
  %7389 = getelementptr inbounds %struct.Reg, %struct.Reg* %7388, i32 0, i32 0
  %RAX.i1249 = bitcast %union.anon* %7389 to i64*
  %7390 = load i64, i64* %RAX.i1249
  %7391 = load i64, i64* %PC.i1248
  %7392 = add i64 %7391, 3
  store i64 %7392, i64* %PC.i1248
  %7393 = trunc i64 %7390 to i32
  %7394 = add i32 1, %7393
  %7395 = zext i32 %7394 to i64
  store i64 %7395, i64* %RAX.i1249, align 8
  %7396 = icmp ult i32 %7394, %7393
  %7397 = icmp ult i32 %7394, 1
  %7398 = or i1 %7396, %7397
  %7399 = zext i1 %7398 to i8
  %7400 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7399, i8* %7400, align 1
  %7401 = and i32 %7394, 255
  %7402 = call i32 @llvm.ctpop.i32(i32 %7401)
  %7403 = trunc i32 %7402 to i8
  %7404 = and i8 %7403, 1
  %7405 = xor i8 %7404, 1
  %7406 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7405, i8* %7406, align 1
  %7407 = xor i64 1, %7390
  %7408 = trunc i64 %7407 to i32
  %7409 = xor i32 %7408, %7394
  %7410 = lshr i32 %7409, 4
  %7411 = trunc i32 %7410 to i8
  %7412 = and i8 %7411, 1
  %7413 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7412, i8* %7413, align 1
  %7414 = icmp eq i32 %7394, 0
  %7415 = zext i1 %7414 to i8
  %7416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7415, i8* %7416, align 1
  %7417 = lshr i32 %7394, 31
  %7418 = trunc i32 %7417 to i8
  %7419 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7418, i8* %7419, align 1
  %7420 = lshr i32 %7393, 31
  %7421 = xor i32 %7417, %7420
  %7422 = add i32 %7421, %7417
  %7423 = icmp eq i32 %7422, 2
  %7424 = zext i1 %7423 to i8
  %7425 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7424, i8* %7425, align 1
  store %struct.Memory* %loadMem_400f12, %struct.Memory** %MEMORY
  %loadMem_400f15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7427 = getelementptr inbounds %struct.GPR, %struct.GPR* %7426, i32 0, i32 33
  %7428 = getelementptr inbounds %struct.Reg, %struct.Reg* %7427, i32 0, i32 0
  %PC.i1245 = bitcast %union.anon* %7428 to i64*
  %7429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7430 = getelementptr inbounds %struct.GPR, %struct.GPR* %7429, i32 0, i32 1
  %7431 = getelementptr inbounds %struct.Reg, %struct.Reg* %7430, i32 0, i32 0
  %RAX.i1246 = bitcast %union.anon* %7431 to i64*
  %7432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7433 = getelementptr inbounds %struct.GPR, %struct.GPR* %7432, i32 0, i32 15
  %7434 = getelementptr inbounds %struct.Reg, %struct.Reg* %7433, i32 0, i32 0
  %RBP.i1247 = bitcast %union.anon* %7434 to i64*
  %7435 = load i64, i64* %RAX.i1246
  %7436 = load i64, i64* %RBP.i1247
  %7437 = sub i64 %7436, 4
  %7438 = load i64, i64* %PC.i1245
  %7439 = add i64 %7438, 3
  store i64 %7439, i64* %PC.i1245
  %7440 = trunc i64 %7435 to i32
  %7441 = inttoptr i64 %7437 to i32*
  %7442 = load i32, i32* %7441
  %7443 = sub i32 %7440, %7442
  %7444 = zext i32 %7443 to i64
  store i64 %7444, i64* %RAX.i1246, align 8
  %7445 = icmp ult i32 %7440, %7442
  %7446 = zext i1 %7445 to i8
  %7447 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7446, i8* %7447, align 1
  %7448 = and i32 %7443, 255
  %7449 = call i32 @llvm.ctpop.i32(i32 %7448)
  %7450 = trunc i32 %7449 to i8
  %7451 = and i8 %7450, 1
  %7452 = xor i8 %7451, 1
  %7453 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7452, i8* %7453, align 1
  %7454 = xor i32 %7442, %7440
  %7455 = xor i32 %7454, %7443
  %7456 = lshr i32 %7455, 4
  %7457 = trunc i32 %7456 to i8
  %7458 = and i8 %7457, 1
  %7459 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7458, i8* %7459, align 1
  %7460 = icmp eq i32 %7443, 0
  %7461 = zext i1 %7460 to i8
  %7462 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7461, i8* %7462, align 1
  %7463 = lshr i32 %7443, 31
  %7464 = trunc i32 %7463 to i8
  %7465 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7464, i8* %7465, align 1
  %7466 = lshr i32 %7440, 31
  %7467 = lshr i32 %7442, 31
  %7468 = xor i32 %7467, %7466
  %7469 = xor i32 %7463, %7466
  %7470 = add i32 %7469, %7468
  %7471 = icmp eq i32 %7470, 2
  %7472 = zext i1 %7471 to i8
  %7473 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7472, i8* %7473, align 1
  store %struct.Memory* %loadMem_400f15, %struct.Memory** %MEMORY
  %loadMem_400f18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7475 = getelementptr inbounds %struct.GPR, %struct.GPR* %7474, i32 0, i32 33
  %7476 = getelementptr inbounds %struct.Reg, %struct.Reg* %7475, i32 0, i32 0
  %PC.i1242 = bitcast %union.anon* %7476 to i64*
  %7477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7478 = getelementptr inbounds %struct.GPR, %struct.GPR* %7477, i32 0, i32 1
  %7479 = getelementptr inbounds %struct.Reg, %struct.Reg* %7478, i32 0, i32 0
  %EAX.i1243 = bitcast %union.anon* %7479 to i32*
  %7480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7481 = getelementptr inbounds %struct.GPR, %struct.GPR* %7480, i32 0, i32 5
  %7482 = getelementptr inbounds %struct.Reg, %struct.Reg* %7481, i32 0, i32 0
  %RCX.i1244 = bitcast %union.anon* %7482 to i64*
  %7483 = load i32, i32* %EAX.i1243
  %7484 = zext i32 %7483 to i64
  %7485 = load i64, i64* %PC.i1242
  %7486 = add i64 %7485, 3
  store i64 %7486, i64* %PC.i1242
  %7487 = shl i64 %7484, 32
  %7488 = ashr exact i64 %7487, 32
  store i64 %7488, i64* %RCX.i1244, align 8
  store %struct.Memory* %loadMem_400f18, %struct.Memory** %MEMORY
  %loadMem_400f1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7490 = getelementptr inbounds %struct.GPR, %struct.GPR* %7489, i32 0, i32 33
  %7491 = getelementptr inbounds %struct.Reg, %struct.Reg* %7490, i32 0, i32 0
  %PC.i1239 = bitcast %union.anon* %7491 to i64*
  %7492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7493 = getelementptr inbounds %struct.GPR, %struct.GPR* %7492, i32 0, i32 5
  %7494 = getelementptr inbounds %struct.Reg, %struct.Reg* %7493, i32 0, i32 0
  %RCX.i1240 = bitcast %union.anon* %7494 to i64*
  %7495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7496 = getelementptr inbounds %struct.GPR, %struct.GPR* %7495, i32 0, i32 15
  %7497 = getelementptr inbounds %struct.Reg, %struct.Reg* %7496, i32 0, i32 0
  %RBP.i1241 = bitcast %union.anon* %7497 to i64*
  %7498 = load i64, i64* %RBP.i1241
  %7499 = load i64, i64* %RCX.i1240
  %7500 = mul i64 %7499, 4
  %7501 = add i64 %7498, -1488
  %7502 = add i64 %7501, %7500
  %7503 = load i64, i64* %PC.i1239
  %7504 = add i64 %7503, 8
  store i64 %7504, i64* %PC.i1239
  %7505 = inttoptr i64 %7502 to i32*
  %7506 = load i32, i32* %7505
  %7507 = sub i32 %7506, -1
  %7508 = icmp ult i32 %7506, -1
  %7509 = zext i1 %7508 to i8
  %7510 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7509, i8* %7510, align 1
  %7511 = and i32 %7507, 255
  %7512 = call i32 @llvm.ctpop.i32(i32 %7511)
  %7513 = trunc i32 %7512 to i8
  %7514 = and i8 %7513, 1
  %7515 = xor i8 %7514, 1
  %7516 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7515, i8* %7516, align 1
  %7517 = xor i32 %7506, -1
  %7518 = xor i32 %7517, %7507
  %7519 = lshr i32 %7518, 4
  %7520 = trunc i32 %7519 to i8
  %7521 = and i8 %7520, 1
  %7522 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7521, i8* %7522, align 1
  %7523 = icmp eq i32 %7507, 0
  %7524 = zext i1 %7523 to i8
  %7525 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7524, i8* %7525, align 1
  %7526 = lshr i32 %7507, 31
  %7527 = trunc i32 %7526 to i8
  %7528 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7527, i8* %7528, align 1
  %7529 = lshr i32 %7506, 31
  %7530 = xor i32 %7529, 1
  %7531 = xor i32 %7526, %7529
  %7532 = add i32 %7531, %7530
  %7533 = icmp eq i32 %7532, 2
  %7534 = zext i1 %7533 to i8
  %7535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7534, i8* %7535, align 1
  store %struct.Memory* %loadMem_400f1b, %struct.Memory** %MEMORY
  %loadMem_400f23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7537 = getelementptr inbounds %struct.GPR, %struct.GPR* %7536, i32 0, i32 33
  %7538 = getelementptr inbounds %struct.Reg, %struct.Reg* %7537, i32 0, i32 0
  %PC.i1238 = bitcast %union.anon* %7538 to i64*
  %7539 = load i64, i64* %PC.i1238
  %7540 = add i64 %7539, 157
  %7541 = load i64, i64* %PC.i1238
  %7542 = add i64 %7541, 6
  %7543 = load i64, i64* %PC.i1238
  %7544 = add i64 %7543, 6
  store i64 %7544, i64* %PC.i1238
  %7545 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7546 = load i8, i8* %7545, align 1
  store i8 %7546, i8* %BRANCH_TAKEN, align 1
  %7547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7548 = icmp ne i8 %7546, 0
  %7549 = select i1 %7548, i64 %7540, i64 %7542
  store i64 %7549, i64* %7547, align 8
  store %struct.Memory* %loadMem_400f23, %struct.Memory** %MEMORY
  %loadBr_400f23 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400f23 = icmp eq i8 %loadBr_400f23, 1
  br i1 %cmpBr_400f23, label %block_.L_400fc0, label %block_400f29

block_400f29:                                     ; preds = %block_400f0f
  %loadMem_400f29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7551 = getelementptr inbounds %struct.GPR, %struct.GPR* %7550, i32 0, i32 33
  %7552 = getelementptr inbounds %struct.Reg, %struct.Reg* %7551, i32 0, i32 0
  %PC.i1235 = bitcast %union.anon* %7552 to i64*
  %7553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7554 = getelementptr inbounds %struct.GPR, %struct.GPR* %7553, i32 0, i32 1
  %7555 = getelementptr inbounds %struct.Reg, %struct.Reg* %7554, i32 0, i32 0
  %RAX.i1236 = bitcast %union.anon* %7555 to i64*
  %7556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7557 = getelementptr inbounds %struct.GPR, %struct.GPR* %7556, i32 0, i32 15
  %7558 = getelementptr inbounds %struct.Reg, %struct.Reg* %7557, i32 0, i32 0
  %RBP.i1237 = bitcast %union.anon* %7558 to i64*
  %7559 = load i64, i64* %RBP.i1237
  %7560 = sub i64 %7559, 1168
  %7561 = load i64, i64* %PC.i1235
  %7562 = add i64 %7561, 7
  store i64 %7562, i64* %PC.i1235
  store i64 %7560, i64* %RAX.i1236, align 8
  store %struct.Memory* %loadMem_400f29, %struct.Memory** %MEMORY
  %loadMem_400f30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7564 = getelementptr inbounds %struct.GPR, %struct.GPR* %7563, i32 0, i32 33
  %7565 = getelementptr inbounds %struct.Reg, %struct.Reg* %7564, i32 0, i32 0
  %PC.i1232 = bitcast %union.anon* %7565 to i64*
  %7566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7567 = getelementptr inbounds %struct.GPR, %struct.GPR* %7566, i32 0, i32 5
  %7568 = getelementptr inbounds %struct.Reg, %struct.Reg* %7567, i32 0, i32 0
  %RCX.i1233 = bitcast %union.anon* %7568 to i64*
  %7569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7570 = getelementptr inbounds %struct.GPR, %struct.GPR* %7569, i32 0, i32 15
  %7571 = getelementptr inbounds %struct.Reg, %struct.Reg* %7570, i32 0, i32 0
  %RBP.i1234 = bitcast %union.anon* %7571 to i64*
  %7572 = load i64, i64* %RBP.i1234
  %7573 = sub i64 %7572, 12
  %7574 = load i64, i64* %PC.i1232
  %7575 = add i64 %7574, 3
  store i64 %7575, i64* %PC.i1232
  %7576 = inttoptr i64 %7573 to i32*
  %7577 = load i32, i32* %7576
  %7578 = zext i32 %7577 to i64
  store i64 %7578, i64* %RCX.i1233, align 8
  store %struct.Memory* %loadMem_400f30, %struct.Memory** %MEMORY
  %loadMem_400f33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7580 = getelementptr inbounds %struct.GPR, %struct.GPR* %7579, i32 0, i32 33
  %7581 = getelementptr inbounds %struct.Reg, %struct.Reg* %7580, i32 0, i32 0
  %PC.i1230 = bitcast %union.anon* %7581 to i64*
  %7582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7583 = getelementptr inbounds %struct.GPR, %struct.GPR* %7582, i32 0, i32 5
  %7584 = getelementptr inbounds %struct.Reg, %struct.Reg* %7583, i32 0, i32 0
  %RCX.i1231 = bitcast %union.anon* %7584 to i64*
  %7585 = load i64, i64* %RCX.i1231
  %7586 = load i64, i64* %PC.i1230
  %7587 = add i64 %7586, 3
  store i64 %7587, i64* %PC.i1230
  %7588 = trunc i64 %7585 to i32
  %7589 = add i32 1, %7588
  %7590 = zext i32 %7589 to i64
  store i64 %7590, i64* %RCX.i1231, align 8
  %7591 = icmp ult i32 %7589, %7588
  %7592 = icmp ult i32 %7589, 1
  %7593 = or i1 %7591, %7592
  %7594 = zext i1 %7593 to i8
  %7595 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7594, i8* %7595, align 1
  %7596 = and i32 %7589, 255
  %7597 = call i32 @llvm.ctpop.i32(i32 %7596)
  %7598 = trunc i32 %7597 to i8
  %7599 = and i8 %7598, 1
  %7600 = xor i8 %7599, 1
  %7601 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7600, i8* %7601, align 1
  %7602 = xor i64 1, %7585
  %7603 = trunc i64 %7602 to i32
  %7604 = xor i32 %7603, %7589
  %7605 = lshr i32 %7604, 4
  %7606 = trunc i32 %7605 to i8
  %7607 = and i8 %7606, 1
  %7608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7607, i8* %7608, align 1
  %7609 = icmp eq i32 %7589, 0
  %7610 = zext i1 %7609 to i8
  %7611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7610, i8* %7611, align 1
  %7612 = lshr i32 %7589, 31
  %7613 = trunc i32 %7612 to i8
  %7614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7613, i8* %7614, align 1
  %7615 = lshr i32 %7588, 31
  %7616 = xor i32 %7612, %7615
  %7617 = add i32 %7616, %7612
  %7618 = icmp eq i32 %7617, 2
  %7619 = zext i1 %7618 to i8
  %7620 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7619, i8* %7620, align 1
  store %struct.Memory* %loadMem_400f33, %struct.Memory** %MEMORY
  %loadMem_400f36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7622 = getelementptr inbounds %struct.GPR, %struct.GPR* %7621, i32 0, i32 33
  %7623 = getelementptr inbounds %struct.Reg, %struct.Reg* %7622, i32 0, i32 0
  %PC.i1227 = bitcast %union.anon* %7623 to i64*
  %7624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7625 = getelementptr inbounds %struct.GPR, %struct.GPR* %7624, i32 0, i32 5
  %7626 = getelementptr inbounds %struct.Reg, %struct.Reg* %7625, i32 0, i32 0
  %ECX.i1228 = bitcast %union.anon* %7626 to i32*
  %7627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7628 = getelementptr inbounds %struct.GPR, %struct.GPR* %7627, i32 0, i32 7
  %7629 = getelementptr inbounds %struct.Reg, %struct.Reg* %7628, i32 0, i32 0
  %RDX.i1229 = bitcast %union.anon* %7629 to i64*
  %7630 = load i32, i32* %ECX.i1228
  %7631 = zext i32 %7630 to i64
  %7632 = load i64, i64* %PC.i1227
  %7633 = add i64 %7632, 3
  store i64 %7633, i64* %PC.i1227
  %7634 = shl i64 %7631, 32
  %7635 = ashr exact i64 %7634, 32
  store i64 %7635, i64* %RDX.i1229, align 8
  store %struct.Memory* %loadMem_400f36, %struct.Memory** %MEMORY
  %loadMem_400f39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7637 = getelementptr inbounds %struct.GPR, %struct.GPR* %7636, i32 0, i32 33
  %7638 = getelementptr inbounds %struct.Reg, %struct.Reg* %7637, i32 0, i32 0
  %PC.i1225 = bitcast %union.anon* %7638 to i64*
  %7639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7640 = getelementptr inbounds %struct.GPR, %struct.GPR* %7639, i32 0, i32 7
  %7641 = getelementptr inbounds %struct.Reg, %struct.Reg* %7640, i32 0, i32 0
  %RDX.i1226 = bitcast %union.anon* %7641 to i64*
  %7642 = load i64, i64* %RDX.i1226
  %7643 = load i64, i64* %PC.i1225
  %7644 = add i64 %7643, 4
  store i64 %7644, i64* %PC.i1225
  %7645 = shl i64 %7642, 5
  %7646 = icmp slt i64 %7645, 0
  %7647 = shl i64 %7645, 1
  store i64 %7647, i64* %RDX.i1226, align 8
  %7648 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %7649 = zext i1 %7646 to i8
  store i8 %7649, i8* %7648, align 1
  %7650 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %7651 = trunc i64 %7647 to i32
  %7652 = and i32 %7651, 254
  %7653 = call i32 @llvm.ctpop.i32(i32 %7652)
  %7654 = trunc i32 %7653 to i8
  %7655 = and i8 %7654, 1
  %7656 = xor i8 %7655, 1
  store i8 %7656, i8* %7650, align 1
  %7657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7657, align 1
  %7658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7659 = icmp eq i64 %7647, 0
  %7660 = zext i1 %7659 to i8
  store i8 %7660, i8* %7658, align 1
  %7661 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7662 = lshr i64 %7647, 63
  %7663 = trunc i64 %7662 to i8
  store i8 %7663, i8* %7661, align 1
  %7664 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7664, align 1
  store %struct.Memory* %loadMem_400f39, %struct.Memory** %MEMORY
  %loadMem_400f3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7666 = getelementptr inbounds %struct.GPR, %struct.GPR* %7665, i32 0, i32 33
  %7667 = getelementptr inbounds %struct.Reg, %struct.Reg* %7666, i32 0, i32 0
  %PC.i1222 = bitcast %union.anon* %7667 to i64*
  %7668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7669 = getelementptr inbounds %struct.GPR, %struct.GPR* %7668, i32 0, i32 1
  %7670 = getelementptr inbounds %struct.Reg, %struct.Reg* %7669, i32 0, i32 0
  %RAX.i1223 = bitcast %union.anon* %7670 to i64*
  %7671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7672 = getelementptr inbounds %struct.GPR, %struct.GPR* %7671, i32 0, i32 7
  %7673 = getelementptr inbounds %struct.Reg, %struct.Reg* %7672, i32 0, i32 0
  %RDX.i1224 = bitcast %union.anon* %7673 to i64*
  %7674 = load i64, i64* %RAX.i1223
  %7675 = load i64, i64* %RDX.i1224
  %7676 = load i64, i64* %PC.i1222
  %7677 = add i64 %7676, 3
  store i64 %7677, i64* %PC.i1222
  %7678 = add i64 %7675, %7674
  store i64 %7678, i64* %RAX.i1223, align 8
  %7679 = icmp ult i64 %7678, %7674
  %7680 = icmp ult i64 %7678, %7675
  %7681 = or i1 %7679, %7680
  %7682 = zext i1 %7681 to i8
  %7683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7682, i8* %7683, align 1
  %7684 = trunc i64 %7678 to i32
  %7685 = and i32 %7684, 255
  %7686 = call i32 @llvm.ctpop.i32(i32 %7685)
  %7687 = trunc i32 %7686 to i8
  %7688 = and i8 %7687, 1
  %7689 = xor i8 %7688, 1
  %7690 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7689, i8* %7690, align 1
  %7691 = xor i64 %7675, %7674
  %7692 = xor i64 %7691, %7678
  %7693 = lshr i64 %7692, 4
  %7694 = trunc i64 %7693 to i8
  %7695 = and i8 %7694, 1
  %7696 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7695, i8* %7696, align 1
  %7697 = icmp eq i64 %7678, 0
  %7698 = zext i1 %7697 to i8
  %7699 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7698, i8* %7699, align 1
  %7700 = lshr i64 %7678, 63
  %7701 = trunc i64 %7700 to i8
  %7702 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7701, i8* %7702, align 1
  %7703 = lshr i64 %7674, 63
  %7704 = lshr i64 %7675, 63
  %7705 = xor i64 %7700, %7703
  %7706 = xor i64 %7700, %7704
  %7707 = add i64 %7705, %7706
  %7708 = icmp eq i64 %7707, 2
  %7709 = zext i1 %7708 to i8
  %7710 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7709, i8* %7710, align 1
  store %struct.Memory* %loadMem_400f3d, %struct.Memory** %MEMORY
  %loadMem_400f40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7712 = getelementptr inbounds %struct.GPR, %struct.GPR* %7711, i32 0, i32 33
  %7713 = getelementptr inbounds %struct.Reg, %struct.Reg* %7712, i32 0, i32 0
  %PC.i1219 = bitcast %union.anon* %7713 to i64*
  %7714 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7715 = getelementptr inbounds %struct.GPR, %struct.GPR* %7714, i32 0, i32 7
  %7716 = getelementptr inbounds %struct.Reg, %struct.Reg* %7715, i32 0, i32 0
  %RDX.i1220 = bitcast %union.anon* %7716 to i64*
  %7717 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7718 = getelementptr inbounds %struct.GPR, %struct.GPR* %7717, i32 0, i32 15
  %7719 = getelementptr inbounds %struct.Reg, %struct.Reg* %7718, i32 0, i32 0
  %RBP.i1221 = bitcast %union.anon* %7719 to i64*
  %7720 = load i64, i64* %RBP.i1221
  %7721 = sub i64 %7720, 4
  %7722 = load i64, i64* %PC.i1219
  %7723 = add i64 %7722, 4
  store i64 %7723, i64* %PC.i1219
  %7724 = inttoptr i64 %7721 to i32*
  %7725 = load i32, i32* %7724
  %7726 = sext i32 %7725 to i64
  store i64 %7726, i64* %RDX.i1220, align 8
  store %struct.Memory* %loadMem_400f40, %struct.Memory** %MEMORY
  %loadMem_400f44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7728 = getelementptr inbounds %struct.GPR, %struct.GPR* %7727, i32 0, i32 33
  %7729 = getelementptr inbounds %struct.Reg, %struct.Reg* %7728, i32 0, i32 0
  %PC.i1216 = bitcast %union.anon* %7729 to i64*
  %7730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7731 = getelementptr inbounds %struct.GPR, %struct.GPR* %7730, i32 0, i32 1
  %7732 = getelementptr inbounds %struct.Reg, %struct.Reg* %7731, i32 0, i32 0
  %RAX.i1217 = bitcast %union.anon* %7732 to i64*
  %7733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7734 = getelementptr inbounds %struct.GPR, %struct.GPR* %7733, i32 0, i32 7
  %7735 = getelementptr inbounds %struct.Reg, %struct.Reg* %7734, i32 0, i32 0
  %RDX.i1218 = bitcast %union.anon* %7735 to i64*
  %7736 = load i64, i64* %RAX.i1217
  %7737 = load i64, i64* %RDX.i1218
  %7738 = mul i64 %7737, 4
  %7739 = add i64 %7738, %7736
  %7740 = load i64, i64* %PC.i1216
  %7741 = add i64 %7740, 4
  store i64 %7741, i64* %PC.i1216
  %7742 = inttoptr i64 %7739 to i32*
  %7743 = load i32, i32* %7742
  %7744 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7744, align 1
  %7745 = and i32 %7743, 255
  %7746 = call i32 @llvm.ctpop.i32(i32 %7745)
  %7747 = trunc i32 %7746 to i8
  %7748 = and i8 %7747, 1
  %7749 = xor i8 %7748, 1
  %7750 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7749, i8* %7750, align 1
  %7751 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7751, align 1
  %7752 = icmp eq i32 %7743, 0
  %7753 = zext i1 %7752 to i8
  %7754 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7753, i8* %7754, align 1
  %7755 = lshr i32 %7743, 31
  %7756 = trunc i32 %7755 to i8
  %7757 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7756, i8* %7757, align 1
  %7758 = lshr i32 %7743, 31
  %7759 = xor i32 %7755, %7758
  %7760 = add i32 %7759, %7758
  %7761 = icmp eq i32 %7760, 2
  %7762 = zext i1 %7761 to i8
  %7763 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7762, i8* %7763, align 1
  store %struct.Memory* %loadMem_400f44, %struct.Memory** %MEMORY
  %loadMem_400f48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7765 = getelementptr inbounds %struct.GPR, %struct.GPR* %7764, i32 0, i32 33
  %7766 = getelementptr inbounds %struct.Reg, %struct.Reg* %7765, i32 0, i32 0
  %PC.i1215 = bitcast %union.anon* %7766 to i64*
  %7767 = load i64, i64* %PC.i1215
  %7768 = add i64 %7767, 120
  %7769 = load i64, i64* %PC.i1215
  %7770 = add i64 %7769, 6
  %7771 = load i64, i64* %PC.i1215
  %7772 = add i64 %7771, 6
  store i64 %7772, i64* %PC.i1215
  %7773 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7774 = load i8, i8* %7773, align 1
  store i8 %7774, i8* %BRANCH_TAKEN, align 1
  %7775 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7776 = icmp ne i8 %7774, 0
  %7777 = select i1 %7776, i64 %7768, i64 %7770
  store i64 %7777, i64* %7775, align 8
  store %struct.Memory* %loadMem_400f48, %struct.Memory** %MEMORY
  %loadBr_400f48 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400f48 = icmp eq i8 %loadBr_400f48, 1
  br i1 %cmpBr_400f48, label %block_.L_400fc0, label %block_400f4e

block_400f4e:                                     ; preds = %block_400f29
  %loadMem_400f4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7779 = getelementptr inbounds %struct.GPR, %struct.GPR* %7778, i32 0, i32 33
  %7780 = getelementptr inbounds %struct.Reg, %struct.Reg* %7779, i32 0, i32 0
  %PC.i1213 = bitcast %union.anon* %7780 to i64*
  %7781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7782 = getelementptr inbounds %struct.GPR, %struct.GPR* %7781, i32 0, i32 1
  %7783 = getelementptr inbounds %struct.Reg, %struct.Reg* %7782, i32 0, i32 0
  %RAX.i1214 = bitcast %union.anon* %7783 to i64*
  %7784 = load i64, i64* %PC.i1213
  %7785 = add i64 %7784, 5
  store i64 %7785, i64* %PC.i1213
  store i64 255, i64* %RAX.i1214, align 8
  store %struct.Memory* %loadMem_400f4e, %struct.Memory** %MEMORY
  %loadMem_400f53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7787 = getelementptr inbounds %struct.GPR, %struct.GPR* %7786, i32 0, i32 33
  %7788 = getelementptr inbounds %struct.Reg, %struct.Reg* %7787, i32 0, i32 0
  %PC.i1210 = bitcast %union.anon* %7788 to i64*
  %7789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7790 = getelementptr inbounds %struct.GPR, %struct.GPR* %7789, i32 0, i32 5
  %7791 = getelementptr inbounds %struct.Reg, %struct.Reg* %7790, i32 0, i32 0
  %RCX.i1211 = bitcast %union.anon* %7791 to i64*
  %7792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7793 = getelementptr inbounds %struct.GPR, %struct.GPR* %7792, i32 0, i32 15
  %7794 = getelementptr inbounds %struct.Reg, %struct.Reg* %7793, i32 0, i32 0
  %RBP.i1212 = bitcast %union.anon* %7794 to i64*
  %7795 = load i64, i64* %RBP.i1212
  %7796 = sub i64 %7795, 1168
  %7797 = load i64, i64* %PC.i1210
  %7798 = add i64 %7797, 7
  store i64 %7798, i64* %PC.i1210
  store i64 %7796, i64* %RCX.i1211, align 8
  store %struct.Memory* %loadMem_400f53, %struct.Memory** %MEMORY
  %loadMem_400f5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7799 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7800 = getelementptr inbounds %struct.GPR, %struct.GPR* %7799, i32 0, i32 33
  %7801 = getelementptr inbounds %struct.Reg, %struct.Reg* %7800, i32 0, i32 0
  %PC.i1207 = bitcast %union.anon* %7801 to i64*
  %7802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7803 = getelementptr inbounds %struct.GPR, %struct.GPR* %7802, i32 0, i32 7
  %7804 = getelementptr inbounds %struct.Reg, %struct.Reg* %7803, i32 0, i32 0
  %RDX.i1208 = bitcast %union.anon* %7804 to i64*
  %7805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7806 = getelementptr inbounds %struct.GPR, %struct.GPR* %7805, i32 0, i32 15
  %7807 = getelementptr inbounds %struct.Reg, %struct.Reg* %7806, i32 0, i32 0
  %RBP.i1209 = bitcast %union.anon* %7807 to i64*
  %7808 = load i64, i64* %RBP.i1209
  %7809 = sub i64 %7808, 12
  %7810 = load i64, i64* %PC.i1207
  %7811 = add i64 %7810, 3
  store i64 %7811, i64* %PC.i1207
  %7812 = inttoptr i64 %7809 to i32*
  %7813 = load i32, i32* %7812
  %7814 = zext i32 %7813 to i64
  store i64 %7814, i64* %RDX.i1208, align 8
  store %struct.Memory* %loadMem_400f5a, %struct.Memory** %MEMORY
  %loadMem_400f5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7816 = getelementptr inbounds %struct.GPR, %struct.GPR* %7815, i32 0, i32 33
  %7817 = getelementptr inbounds %struct.Reg, %struct.Reg* %7816, i32 0, i32 0
  %PC.i1205 = bitcast %union.anon* %7817 to i64*
  %7818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7819 = getelementptr inbounds %struct.GPR, %struct.GPR* %7818, i32 0, i32 7
  %7820 = getelementptr inbounds %struct.Reg, %struct.Reg* %7819, i32 0, i32 0
  %RDX.i1206 = bitcast %union.anon* %7820 to i64*
  %7821 = load i64, i64* %RDX.i1206
  %7822 = load i64, i64* %PC.i1205
  %7823 = add i64 %7822, 3
  store i64 %7823, i64* %PC.i1205
  %7824 = trunc i64 %7821 to i32
  %7825 = add i32 1, %7824
  %7826 = zext i32 %7825 to i64
  store i64 %7826, i64* %RDX.i1206, align 8
  %7827 = icmp ult i32 %7825, %7824
  %7828 = icmp ult i32 %7825, 1
  %7829 = or i1 %7827, %7828
  %7830 = zext i1 %7829 to i8
  %7831 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7830, i8* %7831, align 1
  %7832 = and i32 %7825, 255
  %7833 = call i32 @llvm.ctpop.i32(i32 %7832)
  %7834 = trunc i32 %7833 to i8
  %7835 = and i8 %7834, 1
  %7836 = xor i8 %7835, 1
  %7837 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7836, i8* %7837, align 1
  %7838 = xor i64 1, %7821
  %7839 = trunc i64 %7838 to i32
  %7840 = xor i32 %7839, %7825
  %7841 = lshr i32 %7840, 4
  %7842 = trunc i32 %7841 to i8
  %7843 = and i8 %7842, 1
  %7844 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7843, i8* %7844, align 1
  %7845 = icmp eq i32 %7825, 0
  %7846 = zext i1 %7845 to i8
  %7847 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7846, i8* %7847, align 1
  %7848 = lshr i32 %7825, 31
  %7849 = trunc i32 %7848 to i8
  %7850 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7849, i8* %7850, align 1
  %7851 = lshr i32 %7824, 31
  %7852 = xor i32 %7848, %7851
  %7853 = add i32 %7852, %7848
  %7854 = icmp eq i32 %7853, 2
  %7855 = zext i1 %7854 to i8
  %7856 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7855, i8* %7856, align 1
  store %struct.Memory* %loadMem_400f5d, %struct.Memory** %MEMORY
  %loadMem_400f60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7858 = getelementptr inbounds %struct.GPR, %struct.GPR* %7857, i32 0, i32 33
  %7859 = getelementptr inbounds %struct.Reg, %struct.Reg* %7858, i32 0, i32 0
  %PC.i1202 = bitcast %union.anon* %7859 to i64*
  %7860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7861 = getelementptr inbounds %struct.GPR, %struct.GPR* %7860, i32 0, i32 7
  %7862 = getelementptr inbounds %struct.Reg, %struct.Reg* %7861, i32 0, i32 0
  %RDX.i1203 = bitcast %union.anon* %7862 to i64*
  %7863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7864 = getelementptr inbounds %struct.GPR, %struct.GPR* %7863, i32 0, i32 15
  %7865 = getelementptr inbounds %struct.Reg, %struct.Reg* %7864, i32 0, i32 0
  %RBP.i1204 = bitcast %union.anon* %7865 to i64*
  %7866 = load i64, i64* %RDX.i1203
  %7867 = load i64, i64* %RBP.i1204
  %7868 = sub i64 %7867, 4
  %7869 = load i64, i64* %PC.i1202
  %7870 = add i64 %7869, 3
  store i64 %7870, i64* %PC.i1202
  %7871 = trunc i64 %7866 to i32
  %7872 = inttoptr i64 %7868 to i32*
  %7873 = load i32, i32* %7872
  %7874 = sub i32 %7871, %7873
  %7875 = zext i32 %7874 to i64
  store i64 %7875, i64* %RDX.i1203, align 8
  %7876 = icmp ult i32 %7871, %7873
  %7877 = zext i1 %7876 to i8
  %7878 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7877, i8* %7878, align 1
  %7879 = and i32 %7874, 255
  %7880 = call i32 @llvm.ctpop.i32(i32 %7879)
  %7881 = trunc i32 %7880 to i8
  %7882 = and i8 %7881, 1
  %7883 = xor i8 %7882, 1
  %7884 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7883, i8* %7884, align 1
  %7885 = xor i32 %7873, %7871
  %7886 = xor i32 %7885, %7874
  %7887 = lshr i32 %7886, 4
  %7888 = trunc i32 %7887 to i8
  %7889 = and i8 %7888, 1
  %7890 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7889, i8* %7890, align 1
  %7891 = icmp eq i32 %7874, 0
  %7892 = zext i1 %7891 to i8
  %7893 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7892, i8* %7893, align 1
  %7894 = lshr i32 %7874, 31
  %7895 = trunc i32 %7894 to i8
  %7896 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7895, i8* %7896, align 1
  %7897 = lshr i32 %7871, 31
  %7898 = lshr i32 %7873, 31
  %7899 = xor i32 %7898, %7897
  %7900 = xor i32 %7894, %7897
  %7901 = add i32 %7900, %7899
  %7902 = icmp eq i32 %7901, 2
  %7903 = zext i1 %7902 to i8
  %7904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7903, i8* %7904, align 1
  store %struct.Memory* %loadMem_400f60, %struct.Memory** %MEMORY
  %loadMem_400f63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7906 = getelementptr inbounds %struct.GPR, %struct.GPR* %7905, i32 0, i32 33
  %7907 = getelementptr inbounds %struct.Reg, %struct.Reg* %7906, i32 0, i32 0
  %PC.i1199 = bitcast %union.anon* %7907 to i64*
  %7908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7909 = getelementptr inbounds %struct.GPR, %struct.GPR* %7908, i32 0, i32 7
  %7910 = getelementptr inbounds %struct.Reg, %struct.Reg* %7909, i32 0, i32 0
  %EDX.i1200 = bitcast %union.anon* %7910 to i32*
  %7911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7912 = getelementptr inbounds %struct.GPR, %struct.GPR* %7911, i32 0, i32 9
  %7913 = getelementptr inbounds %struct.Reg, %struct.Reg* %7912, i32 0, i32 0
  %RSI.i1201 = bitcast %union.anon* %7913 to i64*
  %7914 = load i32, i32* %EDX.i1200
  %7915 = zext i32 %7914 to i64
  %7916 = load i64, i64* %PC.i1199
  %7917 = add i64 %7916, 3
  store i64 %7917, i64* %PC.i1199
  %7918 = shl i64 %7915, 32
  %7919 = ashr exact i64 %7918, 32
  store i64 %7919, i64* %RSI.i1201, align 8
  store %struct.Memory* %loadMem_400f63, %struct.Memory** %MEMORY
  %loadMem_400f66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7921 = getelementptr inbounds %struct.GPR, %struct.GPR* %7920, i32 0, i32 33
  %7922 = getelementptr inbounds %struct.Reg, %struct.Reg* %7921, i32 0, i32 0
  %PC.i1195 = bitcast %union.anon* %7922 to i64*
  %7923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7924 = getelementptr inbounds %struct.GPR, %struct.GPR* %7923, i32 0, i32 7
  %7925 = getelementptr inbounds %struct.Reg, %struct.Reg* %7924, i32 0, i32 0
  %RDX.i1196 = bitcast %union.anon* %7925 to i64*
  %7926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7927 = getelementptr inbounds %struct.GPR, %struct.GPR* %7926, i32 0, i32 9
  %7928 = getelementptr inbounds %struct.Reg, %struct.Reg* %7927, i32 0, i32 0
  %RSI.i1197 = bitcast %union.anon* %7928 to i64*
  %7929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7930 = getelementptr inbounds %struct.GPR, %struct.GPR* %7929, i32 0, i32 15
  %7931 = getelementptr inbounds %struct.Reg, %struct.Reg* %7930, i32 0, i32 0
  %RBP.i1198 = bitcast %union.anon* %7931 to i64*
  %7932 = load i64, i64* %RBP.i1198
  %7933 = load i64, i64* %RSI.i1197
  %7934 = mul i64 %7933, 4
  %7935 = add i64 %7932, -1488
  %7936 = add i64 %7935, %7934
  %7937 = load i64, i64* %PC.i1195
  %7938 = add i64 %7937, 7
  store i64 %7938, i64* %PC.i1195
  %7939 = inttoptr i64 %7936 to i32*
  %7940 = load i32, i32* %7939
  %7941 = zext i32 %7940 to i64
  store i64 %7941, i64* %RDX.i1196, align 8
  store %struct.Memory* %loadMem_400f66, %struct.Memory** %MEMORY
  %loadMem_400f6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7943 = getelementptr inbounds %struct.GPR, %struct.GPR* %7942, i32 0, i32 33
  %7944 = getelementptr inbounds %struct.Reg, %struct.Reg* %7943, i32 0, i32 0
  %PC.i1192 = bitcast %union.anon* %7944 to i64*
  %7945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7946 = getelementptr inbounds %struct.GPR, %struct.GPR* %7945, i32 0, i32 11
  %7947 = getelementptr inbounds %struct.Reg, %struct.Reg* %7946, i32 0, i32 0
  %RDI.i1193 = bitcast %union.anon* %7947 to i64*
  %7948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7949 = getelementptr inbounds %struct.GPR, %struct.GPR* %7948, i32 0, i32 15
  %7950 = getelementptr inbounds %struct.Reg, %struct.Reg* %7949, i32 0, i32 0
  %RBP.i1194 = bitcast %union.anon* %7950 to i64*
  %7951 = load i64, i64* %RBP.i1194
  %7952 = sub i64 %7951, 12
  %7953 = load i64, i64* %PC.i1192
  %7954 = add i64 %7953, 3
  store i64 %7954, i64* %PC.i1192
  %7955 = inttoptr i64 %7952 to i32*
  %7956 = load i32, i32* %7955
  %7957 = zext i32 %7956 to i64
  store i64 %7957, i64* %RDI.i1193, align 8
  store %struct.Memory* %loadMem_400f6d, %struct.Memory** %MEMORY
  %loadMem_400f70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7959 = getelementptr inbounds %struct.GPR, %struct.GPR* %7958, i32 0, i32 33
  %7960 = getelementptr inbounds %struct.Reg, %struct.Reg* %7959, i32 0, i32 0
  %PC.i1190 = bitcast %union.anon* %7960 to i64*
  %7961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7962 = getelementptr inbounds %struct.GPR, %struct.GPR* %7961, i32 0, i32 11
  %7963 = getelementptr inbounds %struct.Reg, %struct.Reg* %7962, i32 0, i32 0
  %RDI.i1191 = bitcast %union.anon* %7963 to i64*
  %7964 = load i64, i64* %RDI.i1191
  %7965 = load i64, i64* %PC.i1190
  %7966 = add i64 %7965, 3
  store i64 %7966, i64* %PC.i1190
  %7967 = trunc i64 %7964 to i32
  %7968 = add i32 1, %7967
  %7969 = zext i32 %7968 to i64
  store i64 %7969, i64* %RDI.i1191, align 8
  %7970 = icmp ult i32 %7968, %7967
  %7971 = icmp ult i32 %7968, 1
  %7972 = or i1 %7970, %7971
  %7973 = zext i1 %7972 to i8
  %7974 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7973, i8* %7974, align 1
  %7975 = and i32 %7968, 255
  %7976 = call i32 @llvm.ctpop.i32(i32 %7975)
  %7977 = trunc i32 %7976 to i8
  %7978 = and i8 %7977, 1
  %7979 = xor i8 %7978, 1
  %7980 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7979, i8* %7980, align 1
  %7981 = xor i64 1, %7964
  %7982 = trunc i64 %7981 to i32
  %7983 = xor i32 %7982, %7968
  %7984 = lshr i32 %7983, 4
  %7985 = trunc i32 %7984 to i8
  %7986 = and i8 %7985, 1
  %7987 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7986, i8* %7987, align 1
  %7988 = icmp eq i32 %7968, 0
  %7989 = zext i1 %7988 to i8
  %7990 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7989, i8* %7990, align 1
  %7991 = lshr i32 %7968, 31
  %7992 = trunc i32 %7991 to i8
  %7993 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7992, i8* %7993, align 1
  %7994 = lshr i32 %7967, 31
  %7995 = xor i32 %7991, %7994
  %7996 = add i32 %7995, %7991
  %7997 = icmp eq i32 %7996, 2
  %7998 = zext i1 %7997 to i8
  %7999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7998, i8* %7999, align 1
  store %struct.Memory* %loadMem_400f70, %struct.Memory** %MEMORY
  %loadMem_400f73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8001 = getelementptr inbounds %struct.GPR, %struct.GPR* %8000, i32 0, i32 33
  %8002 = getelementptr inbounds %struct.Reg, %struct.Reg* %8001, i32 0, i32 0
  %PC.i1187 = bitcast %union.anon* %8002 to i64*
  %8003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8004 = getelementptr inbounds %struct.GPR, %struct.GPR* %8003, i32 0, i32 11
  %8005 = getelementptr inbounds %struct.Reg, %struct.Reg* %8004, i32 0, i32 0
  %EDI.i1188 = bitcast %union.anon* %8005 to i32*
  %8006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8007 = getelementptr inbounds %struct.GPR, %struct.GPR* %8006, i32 0, i32 9
  %8008 = getelementptr inbounds %struct.Reg, %struct.Reg* %8007, i32 0, i32 0
  %RSI.i1189 = bitcast %union.anon* %8008 to i64*
  %8009 = load i32, i32* %EDI.i1188
  %8010 = zext i32 %8009 to i64
  %8011 = load i64, i64* %PC.i1187
  %8012 = add i64 %8011, 3
  store i64 %8012, i64* %PC.i1187
  %8013 = shl i64 %8010, 32
  %8014 = ashr exact i64 %8013, 32
  store i64 %8014, i64* %RSI.i1189, align 8
  store %struct.Memory* %loadMem_400f73, %struct.Memory** %MEMORY
  %loadMem_400f76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8016 = getelementptr inbounds %struct.GPR, %struct.GPR* %8015, i32 0, i32 33
  %8017 = getelementptr inbounds %struct.Reg, %struct.Reg* %8016, i32 0, i32 0
  %PC.i1185 = bitcast %union.anon* %8017 to i64*
  %8018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8019 = getelementptr inbounds %struct.GPR, %struct.GPR* %8018, i32 0, i32 9
  %8020 = getelementptr inbounds %struct.Reg, %struct.Reg* %8019, i32 0, i32 0
  %RSI.i1186 = bitcast %union.anon* %8020 to i64*
  %8021 = load i64, i64* %RSI.i1186
  %8022 = load i64, i64* %PC.i1185
  %8023 = add i64 %8022, 4
  store i64 %8023, i64* %PC.i1185
  %8024 = shl i64 %8021, 5
  %8025 = icmp slt i64 %8024, 0
  %8026 = shl i64 %8024, 1
  store i64 %8026, i64* %RSI.i1186, align 8
  %8027 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %8028 = zext i1 %8025 to i8
  store i8 %8028, i8* %8027, align 1
  %8029 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %8030 = trunc i64 %8026 to i32
  %8031 = and i32 %8030, 254
  %8032 = call i32 @llvm.ctpop.i32(i32 %8031)
  %8033 = trunc i32 %8032 to i8
  %8034 = and i8 %8033, 1
  %8035 = xor i8 %8034, 1
  store i8 %8035, i8* %8029, align 1
  %8036 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8036, align 1
  %8037 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8038 = icmp eq i64 %8026, 0
  %8039 = zext i1 %8038 to i8
  store i8 %8039, i8* %8037, align 1
  %8040 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8041 = lshr i64 %8026, 63
  %8042 = trunc i64 %8041 to i8
  store i8 %8042, i8* %8040, align 1
  %8043 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8043, align 1
  store %struct.Memory* %loadMem_400f76, %struct.Memory** %MEMORY
  %loadMem_400f7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8044 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8045 = getelementptr inbounds %struct.GPR, %struct.GPR* %8044, i32 0, i32 33
  %8046 = getelementptr inbounds %struct.Reg, %struct.Reg* %8045, i32 0, i32 0
  %PC.i1182 = bitcast %union.anon* %8046 to i64*
  %8047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8048 = getelementptr inbounds %struct.GPR, %struct.GPR* %8047, i32 0, i32 5
  %8049 = getelementptr inbounds %struct.Reg, %struct.Reg* %8048, i32 0, i32 0
  %RCX.i1183 = bitcast %union.anon* %8049 to i64*
  %8050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8051 = getelementptr inbounds %struct.GPR, %struct.GPR* %8050, i32 0, i32 9
  %8052 = getelementptr inbounds %struct.Reg, %struct.Reg* %8051, i32 0, i32 0
  %RSI.i1184 = bitcast %union.anon* %8052 to i64*
  %8053 = load i64, i64* %RCX.i1183
  %8054 = load i64, i64* %RSI.i1184
  %8055 = load i64, i64* %PC.i1182
  %8056 = add i64 %8055, 3
  store i64 %8056, i64* %PC.i1182
  %8057 = add i64 %8054, %8053
  store i64 %8057, i64* %RCX.i1183, align 8
  %8058 = icmp ult i64 %8057, %8053
  %8059 = icmp ult i64 %8057, %8054
  %8060 = or i1 %8058, %8059
  %8061 = zext i1 %8060 to i8
  %8062 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8061, i8* %8062, align 1
  %8063 = trunc i64 %8057 to i32
  %8064 = and i32 %8063, 255
  %8065 = call i32 @llvm.ctpop.i32(i32 %8064)
  %8066 = trunc i32 %8065 to i8
  %8067 = and i8 %8066, 1
  %8068 = xor i8 %8067, 1
  %8069 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8068, i8* %8069, align 1
  %8070 = xor i64 %8054, %8053
  %8071 = xor i64 %8070, %8057
  %8072 = lshr i64 %8071, 4
  %8073 = trunc i64 %8072 to i8
  %8074 = and i8 %8073, 1
  %8075 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8074, i8* %8075, align 1
  %8076 = icmp eq i64 %8057, 0
  %8077 = zext i1 %8076 to i8
  %8078 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8077, i8* %8078, align 1
  %8079 = lshr i64 %8057, 63
  %8080 = trunc i64 %8079 to i8
  %8081 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8080, i8* %8081, align 1
  %8082 = lshr i64 %8053, 63
  %8083 = lshr i64 %8054, 63
  %8084 = xor i64 %8079, %8082
  %8085 = xor i64 %8079, %8083
  %8086 = add i64 %8084, %8085
  %8087 = icmp eq i64 %8086, 2
  %8088 = zext i1 %8087 to i8
  %8089 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8088, i8* %8089, align 1
  store %struct.Memory* %loadMem_400f7a, %struct.Memory** %MEMORY
  %loadMem_400f7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8091 = getelementptr inbounds %struct.GPR, %struct.GPR* %8090, i32 0, i32 33
  %8092 = getelementptr inbounds %struct.Reg, %struct.Reg* %8091, i32 0, i32 0
  %PC.i1179 = bitcast %union.anon* %8092 to i64*
  %8093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8094 = getelementptr inbounds %struct.GPR, %struct.GPR* %8093, i32 0, i32 9
  %8095 = getelementptr inbounds %struct.Reg, %struct.Reg* %8094, i32 0, i32 0
  %RSI.i1180 = bitcast %union.anon* %8095 to i64*
  %8096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8097 = getelementptr inbounds %struct.GPR, %struct.GPR* %8096, i32 0, i32 15
  %8098 = getelementptr inbounds %struct.Reg, %struct.Reg* %8097, i32 0, i32 0
  %RBP.i1181 = bitcast %union.anon* %8098 to i64*
  %8099 = load i64, i64* %RBP.i1181
  %8100 = sub i64 %8099, 4
  %8101 = load i64, i64* %PC.i1179
  %8102 = add i64 %8101, 4
  store i64 %8102, i64* %PC.i1179
  %8103 = inttoptr i64 %8100 to i32*
  %8104 = load i32, i32* %8103
  %8105 = sext i32 %8104 to i64
  store i64 %8105, i64* %RSI.i1180, align 8
  store %struct.Memory* %loadMem_400f7d, %struct.Memory** %MEMORY
  %loadMem_400f81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8107 = getelementptr inbounds %struct.GPR, %struct.GPR* %8106, i32 0, i32 33
  %8108 = getelementptr inbounds %struct.Reg, %struct.Reg* %8107, i32 0, i32 0
  %PC.i1176 = bitcast %union.anon* %8108 to i64*
  %8109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8110 = getelementptr inbounds %struct.GPR, %struct.GPR* %8109, i32 0, i32 5
  %8111 = getelementptr inbounds %struct.Reg, %struct.Reg* %8110, i32 0, i32 0
  %RCX.i1177 = bitcast %union.anon* %8111 to i64*
  %8112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8113 = getelementptr inbounds %struct.GPR, %struct.GPR* %8112, i32 0, i32 9
  %8114 = getelementptr inbounds %struct.Reg, %struct.Reg* %8113, i32 0, i32 0
  %RSI.i1178 = bitcast %union.anon* %8114 to i64*
  %8115 = load i64, i64* %RCX.i1177
  %8116 = load i64, i64* %RSI.i1178
  %8117 = mul i64 %8116, 4
  %8118 = add i64 %8117, %8115
  %8119 = load i64, i64* %PC.i1176
  %8120 = add i64 %8119, 4
  store i64 %8120, i64* %PC.i1176
  %8121 = inttoptr i64 %8118 to i32*
  %8122 = load i32, i32* %8121
  %8123 = sext i32 %8122 to i64
  store i64 %8123, i64* %RCX.i1177, align 8
  store %struct.Memory* %loadMem_400f81, %struct.Memory** %MEMORY
  %loadMem_400f85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8125 = getelementptr inbounds %struct.GPR, %struct.GPR* %8124, i32 0, i32 33
  %8126 = getelementptr inbounds %struct.Reg, %struct.Reg* %8125, i32 0, i32 0
  %PC.i1173 = bitcast %union.anon* %8126 to i64*
  %8127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8128 = getelementptr inbounds %struct.GPR, %struct.GPR* %8127, i32 0, i32 5
  %8129 = getelementptr inbounds %struct.Reg, %struct.Reg* %8128, i32 0, i32 0
  %RCX.i1174 = bitcast %union.anon* %8129 to i64*
  %8130 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8131 = getelementptr inbounds %struct.GPR, %struct.GPR* %8130, i32 0, i32 7
  %8132 = getelementptr inbounds %struct.Reg, %struct.Reg* %8131, i32 0, i32 0
  %RDX.i1175 = bitcast %union.anon* %8132 to i64*
  %8133 = load i64, i64* %RDX.i1175
  %8134 = load i64, i64* %RCX.i1174
  %8135 = mul i64 %8134, 4
  %8136 = add i64 %8135, 6304896
  %8137 = load i64, i64* %PC.i1173
  %8138 = add i64 %8137, 7
  store i64 %8138, i64* %PC.i1173
  %8139 = trunc i64 %8133 to i32
  %8140 = inttoptr i64 %8136 to i32*
  %8141 = load i32, i32* %8140
  %8142 = add i32 %8141, %8139
  %8143 = zext i32 %8142 to i64
  store i64 %8143, i64* %RDX.i1175, align 8
  %8144 = icmp ult i32 %8142, %8139
  %8145 = icmp ult i32 %8142, %8141
  %8146 = or i1 %8144, %8145
  %8147 = zext i1 %8146 to i8
  %8148 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8147, i8* %8148, align 1
  %8149 = and i32 %8142, 255
  %8150 = call i32 @llvm.ctpop.i32(i32 %8149)
  %8151 = trunc i32 %8150 to i8
  %8152 = and i8 %8151, 1
  %8153 = xor i8 %8152, 1
  %8154 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8153, i8* %8154, align 1
  %8155 = xor i32 %8141, %8139
  %8156 = xor i32 %8155, %8142
  %8157 = lshr i32 %8156, 4
  %8158 = trunc i32 %8157 to i8
  %8159 = and i8 %8158, 1
  %8160 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8159, i8* %8160, align 1
  %8161 = icmp eq i32 %8142, 0
  %8162 = zext i1 %8161 to i8
  %8163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8162, i8* %8163, align 1
  %8164 = lshr i32 %8142, 31
  %8165 = trunc i32 %8164 to i8
  %8166 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8165, i8* %8166, align 1
  %8167 = lshr i32 %8139, 31
  %8168 = lshr i32 %8141, 31
  %8169 = xor i32 %8164, %8167
  %8170 = xor i32 %8164, %8168
  %8171 = add i32 %8169, %8170
  %8172 = icmp eq i32 %8171, 2
  %8173 = zext i1 %8172 to i8
  %8174 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8173, i8* %8174, align 1
  store %struct.Memory* %loadMem_400f85, %struct.Memory** %MEMORY
  %loadMem_400f8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8176 = getelementptr inbounds %struct.GPR, %struct.GPR* %8175, i32 0, i32 33
  %8177 = getelementptr inbounds %struct.Reg, %struct.Reg* %8176, i32 0, i32 0
  %PC.i1170 = bitcast %union.anon* %8177 to i64*
  %8178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8179 = getelementptr inbounds %struct.GPR, %struct.GPR* %8178, i32 0, i32 1
  %8180 = getelementptr inbounds %struct.Reg, %struct.Reg* %8179, i32 0, i32 0
  %EAX.i1171 = bitcast %union.anon* %8180 to i32*
  %8181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8182 = getelementptr inbounds %struct.GPR, %struct.GPR* %8181, i32 0, i32 15
  %8183 = getelementptr inbounds %struct.Reg, %struct.Reg* %8182, i32 0, i32 0
  %RBP.i1172 = bitcast %union.anon* %8183 to i64*
  %8184 = load i64, i64* %RBP.i1172
  %8185 = sub i64 %8184, 2708
  %8186 = load i32, i32* %EAX.i1171
  %8187 = zext i32 %8186 to i64
  %8188 = load i64, i64* %PC.i1170
  %8189 = add i64 %8188, 6
  store i64 %8189, i64* %PC.i1170
  %8190 = inttoptr i64 %8185 to i32*
  store i32 %8186, i32* %8190
  store %struct.Memory* %loadMem_400f8c, %struct.Memory** %MEMORY
  %loadMem_400f92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8191 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8192 = getelementptr inbounds %struct.GPR, %struct.GPR* %8191, i32 0, i32 33
  %8193 = getelementptr inbounds %struct.Reg, %struct.Reg* %8192, i32 0, i32 0
  %PC.i1167 = bitcast %union.anon* %8193 to i64*
  %8194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8195 = getelementptr inbounds %struct.GPR, %struct.GPR* %8194, i32 0, i32 7
  %8196 = getelementptr inbounds %struct.Reg, %struct.Reg* %8195, i32 0, i32 0
  %EDX.i1168 = bitcast %union.anon* %8196 to i32*
  %8197 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8198 = getelementptr inbounds %struct.GPR, %struct.GPR* %8197, i32 0, i32 1
  %8199 = getelementptr inbounds %struct.Reg, %struct.Reg* %8198, i32 0, i32 0
  %RAX.i1169 = bitcast %union.anon* %8199 to i64*
  %8200 = load i32, i32* %EDX.i1168
  %8201 = zext i32 %8200 to i64
  %8202 = load i64, i64* %PC.i1167
  %8203 = add i64 %8202, 2
  store i64 %8203, i64* %PC.i1167
  %8204 = and i64 %8201, 4294967295
  store i64 %8204, i64* %RAX.i1169, align 8
  store %struct.Memory* %loadMem_400f92, %struct.Memory** %MEMORY
  %loadMem_400f94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8206 = getelementptr inbounds %struct.GPR, %struct.GPR* %8205, i32 0, i32 33
  %8207 = getelementptr inbounds %struct.Reg, %struct.Reg* %8206, i32 0, i32 0
  %PC.i1166 = bitcast %union.anon* %8207 to i64*
  %8208 = load i64, i64* %PC.i1166
  %8209 = add i64 %8208, 1
  store i64 %8209, i64* %PC.i1166
  %8210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %8211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %8212 = bitcast %union.anon* %8211 to i32*
  %8213 = load i32, i32* %8212, align 8
  %8214 = sext i32 %8213 to i64
  %8215 = lshr i64 %8214, 32
  store i64 %8215, i64* %8210, align 8
  store %struct.Memory* %loadMem_400f94, %struct.Memory** %MEMORY
  %loadMem_400f95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8217 = getelementptr inbounds %struct.GPR, %struct.GPR* %8216, i32 0, i32 33
  %8218 = getelementptr inbounds %struct.Reg, %struct.Reg* %8217, i32 0, i32 0
  %PC.i1164 = bitcast %union.anon* %8218 to i64*
  %8219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8220 = getelementptr inbounds %struct.GPR, %struct.GPR* %8219, i32 0, i32 11
  %8221 = getelementptr inbounds %struct.Reg, %struct.Reg* %8220, i32 0, i32 0
  %RDI.i = bitcast %union.anon* %8221 to i64*
  %8222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8223 = getelementptr inbounds %struct.GPR, %struct.GPR* %8222, i32 0, i32 15
  %8224 = getelementptr inbounds %struct.Reg, %struct.Reg* %8223, i32 0, i32 0
  %RBP.i1165 = bitcast %union.anon* %8224 to i64*
  %8225 = load i64, i64* %RBP.i1165
  %8226 = sub i64 %8225, 2708
  %8227 = load i64, i64* %PC.i1164
  %8228 = add i64 %8227, 6
  store i64 %8228, i64* %PC.i1164
  %8229 = inttoptr i64 %8226 to i32*
  %8230 = load i32, i32* %8229
  %8231 = zext i32 %8230 to i64
  store i64 %8231, i64* %RDI.i, align 8
  store %struct.Memory* %loadMem_400f95, %struct.Memory** %MEMORY
  %loadMem_400f9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8233 = getelementptr inbounds %struct.GPR, %struct.GPR* %8232, i32 0, i32 33
  %8234 = getelementptr inbounds %struct.Reg, %struct.Reg* %8233, i32 0, i32 0
  %PC.i1162 = bitcast %union.anon* %8234 to i64*
  %8235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8236 = getelementptr inbounds %struct.GPR, %struct.GPR* %8235, i32 0, i32 11
  %8237 = getelementptr inbounds %struct.Reg, %struct.Reg* %8236, i32 0, i32 0
  %EDI.i = bitcast %union.anon* %8237 to i32*
  %8238 = load i32, i32* %EDI.i
  %8239 = zext i32 %8238 to i64
  %8240 = load i64, i64* %PC.i1162
  %8241 = add i64 %8240, 2
  store i64 %8241, i64* %PC.i1162
  %8242 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %8243 = bitcast %union.anon* %8242 to i32*
  %8244 = load i32, i32* %8243, align 8
  %8245 = zext i32 %8244 to i64
  %8246 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %8247 = bitcast %union.anon* %8246 to i32*
  %8248 = load i32, i32* %8247, align 8
  %8249 = zext i32 %8248 to i64
  %8250 = shl i64 %8239, 32
  %8251 = ashr exact i64 %8250, 32
  %8252 = shl i64 %8249, 32
  %8253 = or i64 %8252, %8245
  %8254 = sdiv i64 %8253, %8251
  %8255 = shl i64 %8254, 32
  %8256 = ashr exact i64 %8255, 32
  %8257 = icmp eq i64 %8254, %8256
  br i1 %8257, label %8262, label %8258

; <label>:8258:                                   ; preds = %block_400f4e
  %8259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8260 = load i64, i64* %8259, align 8
  %8261 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %8260, %struct.Memory* %loadMem_400f9b)
  br label %routine_idivl__edi.exit

; <label>:8262:                                   ; preds = %block_400f4e
  %8263 = srem i64 %8253, %8251
  %8264 = getelementptr inbounds %union.anon, %union.anon* %8242, i64 0, i32 0
  %8265 = and i64 %8254, 4294967295
  store i64 %8265, i64* %8264, align 8
  %8266 = getelementptr inbounds %union.anon, %union.anon* %8246, i64 0, i32 0
  %8267 = and i64 %8263, 4294967295
  store i64 %8267, i64* %8266, align 8
  %8268 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8268, align 1
  %8269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %8269, align 1
  %8270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8270, align 1
  %8271 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8271, align 1
  %8272 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %8272, align 1
  %8273 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8273, align 1
  br label %routine_idivl__edi.exit

routine_idivl__edi.exit:                          ; preds = %8258, %8262
  %8274 = phi %struct.Memory* [ %8261, %8258 ], [ %loadMem_400f9b, %8262 ]
  store %struct.Memory* %8274, %struct.Memory** %MEMORY
  %loadMem_400f9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8276 = getelementptr inbounds %struct.GPR, %struct.GPR* %8275, i32 0, i32 33
  %8277 = getelementptr inbounds %struct.Reg, %struct.Reg* %8276, i32 0, i32 0
  %PC.i1159 = bitcast %union.anon* %8277 to i64*
  %8278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8279 = getelementptr inbounds %struct.GPR, %struct.GPR* %8278, i32 0, i32 7
  %8280 = getelementptr inbounds %struct.Reg, %struct.Reg* %8279, i32 0, i32 0
  %EDX.i1160 = bitcast %union.anon* %8280 to i32*
  %8281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8282 = getelementptr inbounds %struct.GPR, %struct.GPR* %8281, i32 0, i32 5
  %8283 = getelementptr inbounds %struct.Reg, %struct.Reg* %8282, i32 0, i32 0
  %RCX.i1161 = bitcast %union.anon* %8283 to i64*
  %8284 = load i32, i32* %EDX.i1160
  %8285 = zext i32 %8284 to i64
  %8286 = load i64, i64* %PC.i1159
  %8287 = add i64 %8286, 3
  store i64 %8287, i64* %PC.i1159
  %8288 = shl i64 %8285, 32
  %8289 = ashr exact i64 %8288, 32
  store i64 %8289, i64* %RCX.i1161, align 8
  store %struct.Memory* %loadMem_400f9d, %struct.Memory** %MEMORY
  %loadMem_400fa0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8291 = getelementptr inbounds %struct.GPR, %struct.GPR* %8290, i32 0, i32 33
  %8292 = getelementptr inbounds %struct.Reg, %struct.Reg* %8291, i32 0, i32 0
  %PC.i1156 = bitcast %union.anon* %8292 to i64*
  %8293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8294 = getelementptr inbounds %struct.GPR, %struct.GPR* %8293, i32 0, i32 5
  %8295 = getelementptr inbounds %struct.Reg, %struct.Reg* %8294, i32 0, i32 0
  %RCX.i1157 = bitcast %union.anon* %8295 to i64*
  %8296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8297 = getelementptr inbounds %struct.GPR, %struct.GPR* %8296, i32 0, i32 7
  %8298 = getelementptr inbounds %struct.Reg, %struct.Reg* %8297, i32 0, i32 0
  %RDX.i1158 = bitcast %union.anon* %8298 to i64*
  %8299 = load i64, i64* %RCX.i1157
  %8300 = mul i64 %8299, 4
  %8301 = add i64 %8300, 6305920
  %8302 = load i64, i64* %PC.i1156
  %8303 = add i64 %8302, 7
  store i64 %8303, i64* %PC.i1156
  %8304 = inttoptr i64 %8301 to i32*
  %8305 = load i32, i32* %8304
  %8306 = zext i32 %8305 to i64
  store i64 %8306, i64* %RDX.i1158, align 8
  store %struct.Memory* %loadMem_400fa0, %struct.Memory** %MEMORY
  %loadMem_400fa7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8308 = getelementptr inbounds %struct.GPR, %struct.GPR* %8307, i32 0, i32 33
  %8309 = getelementptr inbounds %struct.Reg, %struct.Reg* %8308, i32 0, i32 0
  %PC.i1153 = bitcast %union.anon* %8309 to i64*
  %8310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8311 = getelementptr inbounds %struct.GPR, %struct.GPR* %8310, i32 0, i32 17
  %8312 = getelementptr inbounds %struct.Reg, %struct.Reg* %8311, i32 0, i32 0
  %R8D.i1154 = bitcast %union.anon* %8312 to i32*
  %8313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8314 = getelementptr inbounds %struct.GPR, %struct.GPR* %8313, i32 0, i32 15
  %8315 = getelementptr inbounds %struct.Reg, %struct.Reg* %8314, i32 0, i32 0
  %RBP.i1155 = bitcast %union.anon* %8315 to i64*
  %8316 = bitcast i32* %R8D.i1154 to i64*
  %8317 = load i64, i64* %RBP.i1155
  %8318 = sub i64 %8317, 12
  %8319 = load i64, i64* %PC.i1153
  %8320 = add i64 %8319, 4
  store i64 %8320, i64* %PC.i1153
  %8321 = inttoptr i64 %8318 to i32*
  %8322 = load i32, i32* %8321
  %8323 = zext i32 %8322 to i64
  store i64 %8323, i64* %8316, align 8
  store %struct.Memory* %loadMem_400fa7, %struct.Memory** %MEMORY
  %loadMem_400fab = load %struct.Memory*, %struct.Memory** %MEMORY
  %8324 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8325 = getelementptr inbounds %struct.GPR, %struct.GPR* %8324, i32 0, i32 33
  %8326 = getelementptr inbounds %struct.Reg, %struct.Reg* %8325, i32 0, i32 0
  %PC.i1151 = bitcast %union.anon* %8326 to i64*
  %8327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8328 = getelementptr inbounds %struct.GPR, %struct.GPR* %8327, i32 0, i32 17
  %8329 = getelementptr inbounds %struct.Reg, %struct.Reg* %8328, i32 0, i32 0
  %R8D.i1152 = bitcast %union.anon* %8329 to i32*
  %8330 = bitcast i32* %R8D.i1152 to i64*
  %8331 = load i32, i32* %R8D.i1152
  %8332 = zext i32 %8331 to i64
  %8333 = load i64, i64* %PC.i1151
  %8334 = add i64 %8333, 4
  store i64 %8334, i64* %PC.i1151
  %8335 = add i32 1, %8331
  %8336 = zext i32 %8335 to i64
  store i64 %8336, i64* %8330, align 8
  %8337 = icmp ult i32 %8335, %8331
  %8338 = icmp ult i32 %8335, 1
  %8339 = or i1 %8337, %8338
  %8340 = zext i1 %8339 to i8
  %8341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8340, i8* %8341, align 1
  %8342 = and i32 %8335, 255
  %8343 = call i32 @llvm.ctpop.i32(i32 %8342)
  %8344 = trunc i32 %8343 to i8
  %8345 = and i8 %8344, 1
  %8346 = xor i8 %8345, 1
  %8347 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8346, i8* %8347, align 1
  %8348 = xor i64 1, %8332
  %8349 = trunc i64 %8348 to i32
  %8350 = xor i32 %8349, %8335
  %8351 = lshr i32 %8350, 4
  %8352 = trunc i32 %8351 to i8
  %8353 = and i8 %8352, 1
  %8354 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8353, i8* %8354, align 1
  %8355 = icmp eq i32 %8335, 0
  %8356 = zext i1 %8355 to i8
  %8357 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8356, i8* %8357, align 1
  %8358 = lshr i32 %8335, 31
  %8359 = trunc i32 %8358 to i8
  %8360 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8359, i8* %8360, align 1
  %8361 = lshr i32 %8331, 31
  %8362 = xor i32 %8358, %8361
  %8363 = add i32 %8362, %8358
  %8364 = icmp eq i32 %8363, 2
  %8365 = zext i1 %8364 to i8
  %8366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8365, i8* %8366, align 1
  store %struct.Memory* %loadMem_400fab, %struct.Memory** %MEMORY
  %loadMem_400faf = load %struct.Memory*, %struct.Memory** %MEMORY
  %8367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8368 = getelementptr inbounds %struct.GPR, %struct.GPR* %8367, i32 0, i32 33
  %8369 = getelementptr inbounds %struct.Reg, %struct.Reg* %8368, i32 0, i32 0
  %PC.i1149 = bitcast %union.anon* %8369 to i64*
  %8370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8371 = getelementptr inbounds %struct.GPR, %struct.GPR* %8370, i32 0, i32 17
  %8372 = getelementptr inbounds %struct.Reg, %struct.Reg* %8371, i32 0, i32 0
  %R8D.i = bitcast %union.anon* %8372 to i32*
  %8373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8374 = getelementptr inbounds %struct.GPR, %struct.GPR* %8373, i32 0, i32 5
  %8375 = getelementptr inbounds %struct.Reg, %struct.Reg* %8374, i32 0, i32 0
  %RCX.i1150 = bitcast %union.anon* %8375 to i64*
  %8376 = load i32, i32* %R8D.i
  %8377 = zext i32 %8376 to i64
  %8378 = load i64, i64* %PC.i1149
  %8379 = add i64 %8378, 3
  store i64 %8379, i64* %PC.i1149
  %8380 = shl i64 %8377, 32
  %8381 = ashr exact i64 %8380, 32
  store i64 %8381, i64* %RCX.i1150, align 8
  store %struct.Memory* %loadMem_400faf, %struct.Memory** %MEMORY
  %loadMem_400fb2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8383 = getelementptr inbounds %struct.GPR, %struct.GPR* %8382, i32 0, i32 33
  %8384 = getelementptr inbounds %struct.Reg, %struct.Reg* %8383, i32 0, i32 0
  %PC.i1145 = bitcast %union.anon* %8384 to i64*
  %8385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8386 = getelementptr inbounds %struct.GPR, %struct.GPR* %8385, i32 0, i32 5
  %8387 = getelementptr inbounds %struct.Reg, %struct.Reg* %8386, i32 0, i32 0
  %RCX.i1146 = bitcast %union.anon* %8387 to i64*
  %8388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8389 = getelementptr inbounds %struct.GPR, %struct.GPR* %8388, i32 0, i32 7
  %8390 = getelementptr inbounds %struct.Reg, %struct.Reg* %8389, i32 0, i32 0
  %RDX.i1147 = bitcast %union.anon* %8390 to i64*
  %8391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8392 = getelementptr inbounds %struct.GPR, %struct.GPR* %8391, i32 0, i32 15
  %8393 = getelementptr inbounds %struct.Reg, %struct.Reg* %8392, i32 0, i32 0
  %RBP.i1148 = bitcast %union.anon* %8393 to i64*
  %8394 = load i64, i64* %RDX.i1147
  %8395 = load i64, i64* %RBP.i1148
  %8396 = load i64, i64* %RCX.i1146
  %8397 = mul i64 %8396, 4
  %8398 = add i64 %8395, -1248
  %8399 = add i64 %8398, %8397
  %8400 = load i64, i64* %PC.i1145
  %8401 = add i64 %8400, 7
  store i64 %8401, i64* %PC.i1145
  %8402 = trunc i64 %8394 to i32
  %8403 = inttoptr i64 %8399 to i32*
  %8404 = load i32, i32* %8403
  %8405 = xor i32 %8404, %8402
  %8406 = zext i32 %8405 to i64
  store i64 %8406, i64* %RDX.i1147, align 8
  %8407 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8407, align 1
  %8408 = and i32 %8405, 255
  %8409 = call i32 @llvm.ctpop.i32(i32 %8408)
  %8410 = trunc i32 %8409 to i8
  %8411 = and i8 %8410, 1
  %8412 = xor i8 %8411, 1
  %8413 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8412, i8* %8413, align 1
  %8414 = icmp eq i32 %8405, 0
  %8415 = zext i1 %8414 to i8
  %8416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8415, i8* %8416, align 1
  %8417 = lshr i32 %8405, 31
  %8418 = trunc i32 %8417 to i8
  %8419 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8418, i8* %8419, align 1
  %8420 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8420, align 1
  %8421 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8421, align 1
  store %struct.Memory* %loadMem_400fb2, %struct.Memory** %MEMORY
  %loadMem_400fb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8423 = getelementptr inbounds %struct.GPR, %struct.GPR* %8422, i32 0, i32 33
  %8424 = getelementptr inbounds %struct.Reg, %struct.Reg* %8423, i32 0, i32 0
  %PC.i1141 = bitcast %union.anon* %8424 to i64*
  %8425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8426 = getelementptr inbounds %struct.GPR, %struct.GPR* %8425, i32 0, i32 7
  %8427 = getelementptr inbounds %struct.Reg, %struct.Reg* %8426, i32 0, i32 0
  %EDX.i1142 = bitcast %union.anon* %8427 to i32*
  %8428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8429 = getelementptr inbounds %struct.GPR, %struct.GPR* %8428, i32 0, i32 5
  %8430 = getelementptr inbounds %struct.Reg, %struct.Reg* %8429, i32 0, i32 0
  %RCX.i1143 = bitcast %union.anon* %8430 to i64*
  %8431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8432 = getelementptr inbounds %struct.GPR, %struct.GPR* %8431, i32 0, i32 15
  %8433 = getelementptr inbounds %struct.Reg, %struct.Reg* %8432, i32 0, i32 0
  %RBP.i1144 = bitcast %union.anon* %8433 to i64*
  %8434 = load i64, i64* %RBP.i1144
  %8435 = load i64, i64* %RCX.i1143
  %8436 = mul i64 %8435, 4
  %8437 = add i64 %8434, -1248
  %8438 = add i64 %8437, %8436
  %8439 = load i32, i32* %EDX.i1142
  %8440 = zext i32 %8439 to i64
  %8441 = load i64, i64* %PC.i1141
  %8442 = add i64 %8441, 7
  store i64 %8442, i64* %PC.i1141
  %8443 = inttoptr i64 %8438 to i32*
  store i32 %8439, i32* %8443
  store %struct.Memory* %loadMem_400fb9, %struct.Memory** %MEMORY
  br label %block_.L_400fc0

block_.L_400fc0:                                  ; preds = %routine_idivl__edi.exit, %block_400f29, %block_400f0f
  %loadMem_400fc0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8445 = getelementptr inbounds %struct.GPR, %struct.GPR* %8444, i32 0, i32 33
  %8446 = getelementptr inbounds %struct.Reg, %struct.Reg* %8445, i32 0, i32 0
  %PC.i1140 = bitcast %union.anon* %8446 to i64*
  %8447 = load i64, i64* %PC.i1140
  %8448 = add i64 %8447, 5
  %8449 = load i64, i64* %PC.i1140
  %8450 = add i64 %8449, 5
  store i64 %8450, i64* %PC.i1140
  %8451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8448, i64* %8451, align 8
  store %struct.Memory* %loadMem_400fc0, %struct.Memory** %MEMORY
  br label %block_.L_400fc5

block_.L_400fc5:                                  ; preds = %block_.L_400fc0
  %loadMem_400fc5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8453 = getelementptr inbounds %struct.GPR, %struct.GPR* %8452, i32 0, i32 33
  %8454 = getelementptr inbounds %struct.Reg, %struct.Reg* %8453, i32 0, i32 0
  %PC.i1137 = bitcast %union.anon* %8454 to i64*
  %8455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8456 = getelementptr inbounds %struct.GPR, %struct.GPR* %8455, i32 0, i32 1
  %8457 = getelementptr inbounds %struct.Reg, %struct.Reg* %8456, i32 0, i32 0
  %RAX.i1138 = bitcast %union.anon* %8457 to i64*
  %8458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8459 = getelementptr inbounds %struct.GPR, %struct.GPR* %8458, i32 0, i32 15
  %8460 = getelementptr inbounds %struct.Reg, %struct.Reg* %8459, i32 0, i32 0
  %RBP.i1139 = bitcast %union.anon* %8460 to i64*
  %8461 = load i64, i64* %RBP.i1139
  %8462 = sub i64 %8461, 4
  %8463 = load i64, i64* %PC.i1137
  %8464 = add i64 %8463, 3
  store i64 %8464, i64* %PC.i1137
  %8465 = inttoptr i64 %8462 to i32*
  %8466 = load i32, i32* %8465
  %8467 = zext i32 %8466 to i64
  store i64 %8467, i64* %RAX.i1138, align 8
  store %struct.Memory* %loadMem_400fc5, %struct.Memory** %MEMORY
  %loadMem_400fc8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8469 = getelementptr inbounds %struct.GPR, %struct.GPR* %8468, i32 0, i32 33
  %8470 = getelementptr inbounds %struct.Reg, %struct.Reg* %8469, i32 0, i32 0
  %PC.i1135 = bitcast %union.anon* %8470 to i64*
  %8471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8472 = getelementptr inbounds %struct.GPR, %struct.GPR* %8471, i32 0, i32 1
  %8473 = getelementptr inbounds %struct.Reg, %struct.Reg* %8472, i32 0, i32 0
  %RAX.i1136 = bitcast %union.anon* %8473 to i64*
  %8474 = load i64, i64* %RAX.i1136
  %8475 = load i64, i64* %PC.i1135
  %8476 = add i64 %8475, 3
  store i64 %8476, i64* %PC.i1135
  %8477 = trunc i64 %8474 to i32
  %8478 = add i32 1, %8477
  %8479 = zext i32 %8478 to i64
  store i64 %8479, i64* %RAX.i1136, align 8
  %8480 = icmp ult i32 %8478, %8477
  %8481 = icmp ult i32 %8478, 1
  %8482 = or i1 %8480, %8481
  %8483 = zext i1 %8482 to i8
  %8484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8483, i8* %8484, align 1
  %8485 = and i32 %8478, 255
  %8486 = call i32 @llvm.ctpop.i32(i32 %8485)
  %8487 = trunc i32 %8486 to i8
  %8488 = and i8 %8487, 1
  %8489 = xor i8 %8488, 1
  %8490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8489, i8* %8490, align 1
  %8491 = xor i64 1, %8474
  %8492 = trunc i64 %8491 to i32
  %8493 = xor i32 %8492, %8478
  %8494 = lshr i32 %8493, 4
  %8495 = trunc i32 %8494 to i8
  %8496 = and i8 %8495, 1
  %8497 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8496, i8* %8497, align 1
  %8498 = icmp eq i32 %8478, 0
  %8499 = zext i1 %8498 to i8
  %8500 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8499, i8* %8500, align 1
  %8501 = lshr i32 %8478, 31
  %8502 = trunc i32 %8501 to i8
  %8503 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8502, i8* %8503, align 1
  %8504 = lshr i32 %8477, 31
  %8505 = xor i32 %8501, %8504
  %8506 = add i32 %8505, %8501
  %8507 = icmp eq i32 %8506, 2
  %8508 = zext i1 %8507 to i8
  %8509 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8508, i8* %8509, align 1
  store %struct.Memory* %loadMem_400fc8, %struct.Memory** %MEMORY
  %loadMem_400fcb = load %struct.Memory*, %struct.Memory** %MEMORY
  %8510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8511 = getelementptr inbounds %struct.GPR, %struct.GPR* %8510, i32 0, i32 33
  %8512 = getelementptr inbounds %struct.Reg, %struct.Reg* %8511, i32 0, i32 0
  %PC.i1132 = bitcast %union.anon* %8512 to i64*
  %8513 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8514 = getelementptr inbounds %struct.GPR, %struct.GPR* %8513, i32 0, i32 1
  %8515 = getelementptr inbounds %struct.Reg, %struct.Reg* %8514, i32 0, i32 0
  %EAX.i1133 = bitcast %union.anon* %8515 to i32*
  %8516 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8517 = getelementptr inbounds %struct.GPR, %struct.GPR* %8516, i32 0, i32 15
  %8518 = getelementptr inbounds %struct.Reg, %struct.Reg* %8517, i32 0, i32 0
  %RBP.i1134 = bitcast %union.anon* %8518 to i64*
  %8519 = load i64, i64* %RBP.i1134
  %8520 = sub i64 %8519, 4
  %8521 = load i32, i32* %EAX.i1133
  %8522 = zext i32 %8521 to i64
  %8523 = load i64, i64* %PC.i1132
  %8524 = add i64 %8523, 3
  store i64 %8524, i64* %PC.i1132
  %8525 = inttoptr i64 %8520 to i32*
  store i32 %8521, i32* %8525
  store %struct.Memory* %loadMem_400fcb, %struct.Memory** %MEMORY
  %loadMem_400fce = load %struct.Memory*, %struct.Memory** %MEMORY
  %8526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8527 = getelementptr inbounds %struct.GPR, %struct.GPR* %8526, i32 0, i32 33
  %8528 = getelementptr inbounds %struct.Reg, %struct.Reg* %8527, i32 0, i32 0
  %PC.i1131 = bitcast %union.anon* %8528 to i64*
  %8529 = load i64, i64* %PC.i1131
  %8530 = add i64 %8529, -216
  %8531 = load i64, i64* %PC.i1131
  %8532 = add i64 %8531, 5
  store i64 %8532, i64* %PC.i1131
  %8533 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8530, i64* %8533, align 8
  store %struct.Memory* %loadMem_400fce, %struct.Memory** %MEMORY
  br label %block_.L_400ef6

block_.L_400fd3:                                  ; preds = %block_.L_400ef6
  %loadMem_400fd3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8535 = getelementptr inbounds %struct.GPR, %struct.GPR* %8534, i32 0, i32 33
  %8536 = getelementptr inbounds %struct.Reg, %struct.Reg* %8535, i32 0, i32 0
  %PC.i1128 = bitcast %union.anon* %8536 to i64*
  %8537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8538 = getelementptr inbounds %struct.GPR, %struct.GPR* %8537, i32 0, i32 1
  %8539 = getelementptr inbounds %struct.Reg, %struct.Reg* %8538, i32 0, i32 0
  %RAX.i1129 = bitcast %union.anon* %8539 to i64*
  %8540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8541 = getelementptr inbounds %struct.GPR, %struct.GPR* %8540, i32 0, i32 15
  %8542 = getelementptr inbounds %struct.Reg, %struct.Reg* %8541, i32 0, i32 0
  %RBP.i1130 = bitcast %union.anon* %8542 to i64*
  %8543 = load i64, i64* %RBP.i1130
  %8544 = sub i64 %8543, 12
  %8545 = load i64, i64* %PC.i1128
  %8546 = add i64 %8545, 3
  store i64 %8546, i64* %PC.i1128
  %8547 = inttoptr i64 %8544 to i32*
  %8548 = load i32, i32* %8547
  %8549 = zext i32 %8548 to i64
  store i64 %8549, i64* %RAX.i1129, align 8
  store %struct.Memory* %loadMem_400fd3, %struct.Memory** %MEMORY
  %loadMem_400fd6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8551 = getelementptr inbounds %struct.GPR, %struct.GPR* %8550, i32 0, i32 33
  %8552 = getelementptr inbounds %struct.Reg, %struct.Reg* %8551, i32 0, i32 0
  %PC.i1126 = bitcast %union.anon* %8552 to i64*
  %8553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8554 = getelementptr inbounds %struct.GPR, %struct.GPR* %8553, i32 0, i32 1
  %8555 = getelementptr inbounds %struct.Reg, %struct.Reg* %8554, i32 0, i32 0
  %RAX.i1127 = bitcast %union.anon* %8555 to i64*
  %8556 = load i64, i64* %RAX.i1127
  %8557 = load i64, i64* %PC.i1126
  %8558 = add i64 %8557, 3
  store i64 %8558, i64* %PC.i1126
  %8559 = trunc i64 %8556 to i32
  %8560 = add i32 1, %8559
  %8561 = zext i32 %8560 to i64
  store i64 %8561, i64* %RAX.i1127, align 8
  %8562 = icmp ult i32 %8560, %8559
  %8563 = icmp ult i32 %8560, 1
  %8564 = or i1 %8562, %8563
  %8565 = zext i1 %8564 to i8
  %8566 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8565, i8* %8566, align 1
  %8567 = and i32 %8560, 255
  %8568 = call i32 @llvm.ctpop.i32(i32 %8567)
  %8569 = trunc i32 %8568 to i8
  %8570 = and i8 %8569, 1
  %8571 = xor i8 %8570, 1
  %8572 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8571, i8* %8572, align 1
  %8573 = xor i64 1, %8556
  %8574 = trunc i64 %8573 to i32
  %8575 = xor i32 %8574, %8560
  %8576 = lshr i32 %8575, 4
  %8577 = trunc i32 %8576 to i8
  %8578 = and i8 %8577, 1
  %8579 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8578, i8* %8579, align 1
  %8580 = icmp eq i32 %8560, 0
  %8581 = zext i1 %8580 to i8
  %8582 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8581, i8* %8582, align 1
  %8583 = lshr i32 %8560, 31
  %8584 = trunc i32 %8583 to i8
  %8585 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8584, i8* %8585, align 1
  %8586 = lshr i32 %8559, 31
  %8587 = xor i32 %8583, %8586
  %8588 = add i32 %8587, %8583
  %8589 = icmp eq i32 %8588, 2
  %8590 = zext i1 %8589 to i8
  %8591 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8590, i8* %8591, align 1
  store %struct.Memory* %loadMem_400fd6, %struct.Memory** %MEMORY
  %loadMem_400fd9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8593 = getelementptr inbounds %struct.GPR, %struct.GPR* %8592, i32 0, i32 33
  %8594 = getelementptr inbounds %struct.Reg, %struct.Reg* %8593, i32 0, i32 0
  %PC.i1123 = bitcast %union.anon* %8594 to i64*
  %8595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8596 = getelementptr inbounds %struct.GPR, %struct.GPR* %8595, i32 0, i32 1
  %8597 = getelementptr inbounds %struct.Reg, %struct.Reg* %8596, i32 0, i32 0
  %EAX.i1124 = bitcast %union.anon* %8597 to i32*
  %8598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8599 = getelementptr inbounds %struct.GPR, %struct.GPR* %8598, i32 0, i32 5
  %8600 = getelementptr inbounds %struct.Reg, %struct.Reg* %8599, i32 0, i32 0
  %RCX.i1125 = bitcast %union.anon* %8600 to i64*
  %8601 = load i32, i32* %EAX.i1124
  %8602 = zext i32 %8601 to i64
  %8603 = load i64, i64* %PC.i1123
  %8604 = add i64 %8603, 3
  store i64 %8604, i64* %PC.i1123
  %8605 = shl i64 %8602, 32
  %8606 = ashr exact i64 %8605, 32
  store i64 %8606, i64* %RCX.i1125, align 8
  store %struct.Memory* %loadMem_400fd9, %struct.Memory** %MEMORY
  %loadMem_400fdc = load %struct.Memory*, %struct.Memory** %MEMORY
  %8607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8608 = getelementptr inbounds %struct.GPR, %struct.GPR* %8607, i32 0, i32 33
  %8609 = getelementptr inbounds %struct.Reg, %struct.Reg* %8608, i32 0, i32 0
  %PC.i1120 = bitcast %union.anon* %8609 to i64*
  %8610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8611 = getelementptr inbounds %struct.GPR, %struct.GPR* %8610, i32 0, i32 5
  %8612 = getelementptr inbounds %struct.Reg, %struct.Reg* %8611, i32 0, i32 0
  %RCX.i1121 = bitcast %union.anon* %8612 to i64*
  %8613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8614 = getelementptr inbounds %struct.GPR, %struct.GPR* %8613, i32 0, i32 15
  %8615 = getelementptr inbounds %struct.Reg, %struct.Reg* %8614, i32 0, i32 0
  %RBP.i1122 = bitcast %union.anon* %8615 to i64*
  %8616 = load i64, i64* %RBP.i1122
  %8617 = load i64, i64* %RCX.i1121
  %8618 = mul i64 %8617, 4
  %8619 = add i64 %8616, -1248
  %8620 = add i64 %8619, %8618
  %8621 = load i64, i64* %PC.i1120
  %8622 = add i64 %8621, 8
  store i64 %8622, i64* %PC.i1120
  %8623 = inttoptr i64 %8620 to i32*
  %8624 = load i32, i32* %8623
  %8625 = sext i32 %8624 to i64
  store i64 %8625, i64* %RCX.i1121, align 8
  store %struct.Memory* %loadMem_400fdc, %struct.Memory** %MEMORY
  %loadMem_400fe4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8626 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8627 = getelementptr inbounds %struct.GPR, %struct.GPR* %8626, i32 0, i32 33
  %8628 = getelementptr inbounds %struct.Reg, %struct.Reg* %8627, i32 0, i32 0
  %PC.i1117 = bitcast %union.anon* %8628 to i64*
  %8629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8630 = getelementptr inbounds %struct.GPR, %struct.GPR* %8629, i32 0, i32 1
  %8631 = getelementptr inbounds %struct.Reg, %struct.Reg* %8630, i32 0, i32 0
  %RAX.i1118 = bitcast %union.anon* %8631 to i64*
  %8632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8633 = getelementptr inbounds %struct.GPR, %struct.GPR* %8632, i32 0, i32 5
  %8634 = getelementptr inbounds %struct.Reg, %struct.Reg* %8633, i32 0, i32 0
  %RCX.i1119 = bitcast %union.anon* %8634 to i64*
  %8635 = load i64, i64* %RCX.i1119
  %8636 = mul i64 %8635, 4
  %8637 = add i64 %8636, 6304896
  %8638 = load i64, i64* %PC.i1117
  %8639 = add i64 %8638, 7
  store i64 %8639, i64* %PC.i1117
  %8640 = inttoptr i64 %8637 to i32*
  %8641 = load i32, i32* %8640
  %8642 = zext i32 %8641 to i64
  store i64 %8642, i64* %RAX.i1118, align 8
  store %struct.Memory* %loadMem_400fe4, %struct.Memory** %MEMORY
  %loadMem_400feb = load %struct.Memory*, %struct.Memory** %MEMORY
  %8643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8644 = getelementptr inbounds %struct.GPR, %struct.GPR* %8643, i32 0, i32 33
  %8645 = getelementptr inbounds %struct.Reg, %struct.Reg* %8644, i32 0, i32 0
  %PC.i1114 = bitcast %union.anon* %8645 to i64*
  %8646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8647 = getelementptr inbounds %struct.GPR, %struct.GPR* %8646, i32 0, i32 7
  %8648 = getelementptr inbounds %struct.Reg, %struct.Reg* %8647, i32 0, i32 0
  %RDX.i1115 = bitcast %union.anon* %8648 to i64*
  %8649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8650 = getelementptr inbounds %struct.GPR, %struct.GPR* %8649, i32 0, i32 15
  %8651 = getelementptr inbounds %struct.Reg, %struct.Reg* %8650, i32 0, i32 0
  %RBP.i1116 = bitcast %union.anon* %8651 to i64*
  %8652 = load i64, i64* %RBP.i1116
  %8653 = sub i64 %8652, 12
  %8654 = load i64, i64* %PC.i1114
  %8655 = add i64 %8654, 3
  store i64 %8655, i64* %PC.i1114
  %8656 = inttoptr i64 %8653 to i32*
  %8657 = load i32, i32* %8656
  %8658 = zext i32 %8657 to i64
  store i64 %8658, i64* %RDX.i1115, align 8
  store %struct.Memory* %loadMem_400feb, %struct.Memory** %MEMORY
  %loadMem_400fee = load %struct.Memory*, %struct.Memory** %MEMORY
  %8659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8660 = getelementptr inbounds %struct.GPR, %struct.GPR* %8659, i32 0, i32 33
  %8661 = getelementptr inbounds %struct.Reg, %struct.Reg* %8660, i32 0, i32 0
  %PC.i1112 = bitcast %union.anon* %8661 to i64*
  %8662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8663 = getelementptr inbounds %struct.GPR, %struct.GPR* %8662, i32 0, i32 7
  %8664 = getelementptr inbounds %struct.Reg, %struct.Reg* %8663, i32 0, i32 0
  %RDX.i1113 = bitcast %union.anon* %8664 to i64*
  %8665 = load i64, i64* %RDX.i1113
  %8666 = load i64, i64* %PC.i1112
  %8667 = add i64 %8666, 3
  store i64 %8667, i64* %PC.i1112
  %8668 = trunc i64 %8665 to i32
  %8669 = add i32 1, %8668
  %8670 = zext i32 %8669 to i64
  store i64 %8670, i64* %RDX.i1113, align 8
  %8671 = icmp ult i32 %8669, %8668
  %8672 = icmp ult i32 %8669, 1
  %8673 = or i1 %8671, %8672
  %8674 = zext i1 %8673 to i8
  %8675 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8674, i8* %8675, align 1
  %8676 = and i32 %8669, 255
  %8677 = call i32 @llvm.ctpop.i32(i32 %8676)
  %8678 = trunc i32 %8677 to i8
  %8679 = and i8 %8678, 1
  %8680 = xor i8 %8679, 1
  %8681 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8680, i8* %8681, align 1
  %8682 = xor i64 1, %8665
  %8683 = trunc i64 %8682 to i32
  %8684 = xor i32 %8683, %8669
  %8685 = lshr i32 %8684, 4
  %8686 = trunc i32 %8685 to i8
  %8687 = and i8 %8686, 1
  %8688 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8687, i8* %8688, align 1
  %8689 = icmp eq i32 %8669, 0
  %8690 = zext i1 %8689 to i8
  %8691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8690, i8* %8691, align 1
  %8692 = lshr i32 %8669, 31
  %8693 = trunc i32 %8692 to i8
  %8694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8693, i8* %8694, align 1
  %8695 = lshr i32 %8668, 31
  %8696 = xor i32 %8692, %8695
  %8697 = add i32 %8696, %8692
  %8698 = icmp eq i32 %8697, 2
  %8699 = zext i1 %8698 to i8
  %8700 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8699, i8* %8700, align 1
  store %struct.Memory* %loadMem_400fee, %struct.Memory** %MEMORY
  %loadMem_400ff1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8702 = getelementptr inbounds %struct.GPR, %struct.GPR* %8701, i32 0, i32 33
  %8703 = getelementptr inbounds %struct.Reg, %struct.Reg* %8702, i32 0, i32 0
  %PC.i1109 = bitcast %union.anon* %8703 to i64*
  %8704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8705 = getelementptr inbounds %struct.GPR, %struct.GPR* %8704, i32 0, i32 7
  %8706 = getelementptr inbounds %struct.Reg, %struct.Reg* %8705, i32 0, i32 0
  %EDX.i1110 = bitcast %union.anon* %8706 to i32*
  %8707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8708 = getelementptr inbounds %struct.GPR, %struct.GPR* %8707, i32 0, i32 5
  %8709 = getelementptr inbounds %struct.Reg, %struct.Reg* %8708, i32 0, i32 0
  %RCX.i1111 = bitcast %union.anon* %8709 to i64*
  %8710 = load i32, i32* %EDX.i1110
  %8711 = zext i32 %8710 to i64
  %8712 = load i64, i64* %PC.i1109
  %8713 = add i64 %8712, 3
  store i64 %8713, i64* %PC.i1109
  %8714 = shl i64 %8711, 32
  %8715 = ashr exact i64 %8714, 32
  store i64 %8715, i64* %RCX.i1111, align 8
  store %struct.Memory* %loadMem_400ff1, %struct.Memory** %MEMORY
  %loadMem_400ff4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8717 = getelementptr inbounds %struct.GPR, %struct.GPR* %8716, i32 0, i32 33
  %8718 = getelementptr inbounds %struct.Reg, %struct.Reg* %8717, i32 0, i32 0
  %PC.i1105 = bitcast %union.anon* %8718 to i64*
  %8719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8720 = getelementptr inbounds %struct.GPR, %struct.GPR* %8719, i32 0, i32 1
  %8721 = getelementptr inbounds %struct.Reg, %struct.Reg* %8720, i32 0, i32 0
  %EAX.i1106 = bitcast %union.anon* %8721 to i32*
  %8722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8723 = getelementptr inbounds %struct.GPR, %struct.GPR* %8722, i32 0, i32 5
  %8724 = getelementptr inbounds %struct.Reg, %struct.Reg* %8723, i32 0, i32 0
  %RCX.i1107 = bitcast %union.anon* %8724 to i64*
  %8725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8726 = getelementptr inbounds %struct.GPR, %struct.GPR* %8725, i32 0, i32 15
  %8727 = getelementptr inbounds %struct.Reg, %struct.Reg* %8726, i32 0, i32 0
  %RBP.i1108 = bitcast %union.anon* %8727 to i64*
  %8728 = load i64, i64* %RBP.i1108
  %8729 = load i64, i64* %RCX.i1107
  %8730 = mul i64 %8729, 4
  %8731 = add i64 %8728, -1248
  %8732 = add i64 %8731, %8730
  %8733 = load i32, i32* %EAX.i1106
  %8734 = zext i32 %8733 to i64
  %8735 = load i64, i64* %PC.i1105
  %8736 = add i64 %8735, 7
  store i64 %8736, i64* %PC.i1105
  %8737 = inttoptr i64 %8732 to i32*
  store i32 %8733, i32* %8737
  store %struct.Memory* %loadMem_400ff4, %struct.Memory** %MEMORY
  br label %block_.L_400ffb

block_.L_400ffb:                                  ; preds = %block_.L_400fd3, %block_.L_400e6a
  %loadMem_400ffb = load %struct.Memory*, %struct.Memory** %MEMORY
  %8738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8739 = getelementptr inbounds %struct.GPR, %struct.GPR* %8738, i32 0, i32 33
  %8740 = getelementptr inbounds %struct.Reg, %struct.Reg* %8739, i32 0, i32 0
  %PC.i1104 = bitcast %union.anon* %8740 to i64*
  %8741 = load i64, i64* %PC.i1104
  %8742 = add i64 %8741, 5
  %8743 = load i64, i64* %PC.i1104
  %8744 = add i64 %8743, 5
  store i64 %8744, i64* %PC.i1104
  %8745 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8742, i64* %8745, align 8
  store %struct.Memory* %loadMem_400ffb, %struct.Memory** %MEMORY
  br label %block_.L_401000

block_.L_401000:                                  ; preds = %block_.L_400ffb
  %loadMem_401000 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8747 = getelementptr inbounds %struct.GPR, %struct.GPR* %8746, i32 0, i32 33
  %8748 = getelementptr inbounds %struct.Reg, %struct.Reg* %8747, i32 0, i32 0
  %PC.i1101 = bitcast %union.anon* %8748 to i64*
  %8749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8750 = getelementptr inbounds %struct.GPR, %struct.GPR* %8749, i32 0, i32 1
  %8751 = getelementptr inbounds %struct.Reg, %struct.Reg* %8750, i32 0, i32 0
  %EAX.i1102 = bitcast %union.anon* %8751 to i32*
  %8752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8753 = getelementptr inbounds %struct.GPR, %struct.GPR* %8752, i32 0, i32 1
  %8754 = getelementptr inbounds %struct.Reg, %struct.Reg* %8753, i32 0, i32 0
  %RAX.i1103 = bitcast %union.anon* %8754 to i64*
  %8755 = load i64, i64* %RAX.i1103
  %8756 = load i32, i32* %EAX.i1102
  %8757 = zext i32 %8756 to i64
  %8758 = load i64, i64* %PC.i1101
  %8759 = add i64 %8758, 2
  store i64 %8759, i64* %PC.i1101
  %8760 = xor i64 %8757, %8755
  %8761 = trunc i64 %8760 to i32
  %8762 = and i64 %8760, 4294967295
  store i64 %8762, i64* %RAX.i1103, align 8
  %8763 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8763, align 1
  %8764 = and i32 %8761, 255
  %8765 = call i32 @llvm.ctpop.i32(i32 %8764)
  %8766 = trunc i32 %8765 to i8
  %8767 = and i8 %8766, 1
  %8768 = xor i8 %8767, 1
  %8769 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8768, i8* %8769, align 1
  %8770 = icmp eq i32 %8761, 0
  %8771 = zext i1 %8770 to i8
  %8772 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8771, i8* %8772, align 1
  %8773 = lshr i32 %8761, 31
  %8774 = trunc i32 %8773 to i8
  %8775 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8774, i8* %8775, align 1
  %8776 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8776, align 1
  %8777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8777, align 1
  store %struct.Memory* %loadMem_401000, %struct.Memory** %MEMORY
  %loadMem_401002 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8779 = getelementptr inbounds %struct.GPR, %struct.GPR* %8778, i32 0, i32 33
  %8780 = getelementptr inbounds %struct.Reg, %struct.Reg* %8779, i32 0, i32 0
  %PC.i1098 = bitcast %union.anon* %8780 to i64*
  %8781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8782 = getelementptr inbounds %struct.GPR, %struct.GPR* %8781, i32 0, i32 1
  %8783 = getelementptr inbounds %struct.Reg, %struct.Reg* %8782, i32 0, i32 0
  %8784 = bitcast %union.anon* %8783 to %struct.anon.2*
  %AL.i1099 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8784, i32 0, i32 0
  %8785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8786 = getelementptr inbounds %struct.GPR, %struct.GPR* %8785, i32 0, i32 5
  %8787 = getelementptr inbounds %struct.Reg, %struct.Reg* %8786, i32 0, i32 0
  %8788 = bitcast %union.anon* %8787 to %struct.anon.2*
  %CL.i1100 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8788, i32 0, i32 0
  %8789 = load i8, i8* %AL.i1099
  %8790 = zext i8 %8789 to i64
  %8791 = load i64, i64* %PC.i1098
  %8792 = add i64 %8791, 2
  store i64 %8792, i64* %PC.i1098
  store i8 %8789, i8* %CL.i1100, align 1
  store %struct.Memory* %loadMem_401002, %struct.Memory** %MEMORY
  %loadMem_401004 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8794 = getelementptr inbounds %struct.GPR, %struct.GPR* %8793, i32 0, i32 33
  %8795 = getelementptr inbounds %struct.Reg, %struct.Reg* %8794, i32 0, i32 0
  %PC.i1096 = bitcast %union.anon* %8795 to i64*
  %8796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8797 = getelementptr inbounds %struct.GPR, %struct.GPR* %8796, i32 0, i32 15
  %8798 = getelementptr inbounds %struct.Reg, %struct.Reg* %8797, i32 0, i32 0
  %RBP.i1097 = bitcast %union.anon* %8798 to i64*
  %8799 = load i64, i64* %RBP.i1097
  %8800 = sub i64 %8799, 12
  %8801 = load i64, i64* %PC.i1096
  %8802 = add i64 %8801, 4
  store i64 %8802, i64* %PC.i1096
  %8803 = inttoptr i64 %8800 to i32*
  %8804 = load i32, i32* %8803
  %8805 = sub i32 %8804, 16
  %8806 = icmp ult i32 %8804, 16
  %8807 = zext i1 %8806 to i8
  %8808 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8807, i8* %8808, align 1
  %8809 = and i32 %8805, 255
  %8810 = call i32 @llvm.ctpop.i32(i32 %8809)
  %8811 = trunc i32 %8810 to i8
  %8812 = and i8 %8811, 1
  %8813 = xor i8 %8812, 1
  %8814 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8813, i8* %8814, align 1
  %8815 = xor i32 %8804, 16
  %8816 = xor i32 %8815, %8805
  %8817 = lshr i32 %8816, 4
  %8818 = trunc i32 %8817 to i8
  %8819 = and i8 %8818, 1
  %8820 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8819, i8* %8820, align 1
  %8821 = icmp eq i32 %8805, 0
  %8822 = zext i1 %8821 to i8
  %8823 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8822, i8* %8823, align 1
  %8824 = lshr i32 %8805, 31
  %8825 = trunc i32 %8824 to i8
  %8826 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8825, i8* %8826, align 1
  %8827 = lshr i32 %8804, 31
  %8828 = xor i32 %8824, %8827
  %8829 = add i32 %8828, %8827
  %8830 = icmp eq i32 %8829, 2
  %8831 = zext i1 %8830 to i8
  %8832 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8831, i8* %8832, align 1
  store %struct.Memory* %loadMem_401004, %struct.Memory** %MEMORY
  %loadMem_401008 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8834 = getelementptr inbounds %struct.GPR, %struct.GPR* %8833, i32 0, i32 33
  %8835 = getelementptr inbounds %struct.Reg, %struct.Reg* %8834, i32 0, i32 0
  %PC.i1094 = bitcast %union.anon* %8835 to i64*
  %8836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8837 = getelementptr inbounds %struct.GPR, %struct.GPR* %8836, i32 0, i32 5
  %8838 = getelementptr inbounds %struct.Reg, %struct.Reg* %8837, i32 0, i32 0
  %8839 = bitcast %union.anon* %8838 to %struct.anon.2*
  %CL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8839, i32 0, i32 0
  %8840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8841 = getelementptr inbounds %struct.GPR, %struct.GPR* %8840, i32 0, i32 15
  %8842 = getelementptr inbounds %struct.Reg, %struct.Reg* %8841, i32 0, i32 0
  %RBP.i1095 = bitcast %union.anon* %8842 to i64*
  %8843 = load i64, i64* %RBP.i1095
  %8844 = sub i64 %8843, 2709
  %8845 = load i8, i8* %CL.i
  %8846 = zext i8 %8845 to i64
  %8847 = load i64, i64* %PC.i1094
  %8848 = add i64 %8847, 6
  store i64 %8848, i64* %PC.i1094
  %8849 = inttoptr i64 %8844 to i8*
  store i8 %8845, i8* %8849
  store %struct.Memory* %loadMem_401008, %struct.Memory** %MEMORY
  %loadMem_40100e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8851 = getelementptr inbounds %struct.GPR, %struct.GPR* %8850, i32 0, i32 33
  %8852 = getelementptr inbounds %struct.Reg, %struct.Reg* %8851, i32 0, i32 0
  %PC.i1093 = bitcast %union.anon* %8852 to i64*
  %8853 = load i64, i64* %PC.i1093
  %8854 = add i64 %8853, 32
  %8855 = load i64, i64* %PC.i1093
  %8856 = add i64 %8855, 6
  %8857 = load i64, i64* %PC.i1093
  %8858 = add i64 %8857, 6
  store i64 %8858, i64* %PC.i1093
  %8859 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8860 = load i8, i8* %8859, align 1
  %8861 = icmp ne i8 %8860, 0
  %8862 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8863 = load i8, i8* %8862, align 1
  %8864 = icmp ne i8 %8863, 0
  %8865 = xor i1 %8861, %8864
  %8866 = xor i1 %8865, true
  %8867 = zext i1 %8866 to i8
  store i8 %8867, i8* %BRANCH_TAKEN, align 1
  %8868 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8869 = select i1 %8865, i64 %8856, i64 %8854
  store i64 %8869, i64* %8868, align 8
  store %struct.Memory* %loadMem_40100e, %struct.Memory** %MEMORY
  %loadBr_40100e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40100e = icmp eq i8 %loadBr_40100e, 1
  br i1 %cmpBr_40100e, label %block_.L_40102e, label %block_401014

block_401014:                                     ; preds = %block_.L_401000
  %loadMem_401014 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8871 = getelementptr inbounds %struct.GPR, %struct.GPR* %8870, i32 0, i32 33
  %8872 = getelementptr inbounds %struct.Reg, %struct.Reg* %8871, i32 0, i32 0
  %PC.i1090 = bitcast %union.anon* %8872 to i64*
  %8873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8874 = getelementptr inbounds %struct.GPR, %struct.GPR* %8873, i32 0, i32 1
  %8875 = getelementptr inbounds %struct.Reg, %struct.Reg* %8874, i32 0, i32 0
  %RAX.i1091 = bitcast %union.anon* %8875 to i64*
  %8876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8877 = getelementptr inbounds %struct.GPR, %struct.GPR* %8876, i32 0, i32 15
  %8878 = getelementptr inbounds %struct.Reg, %struct.Reg* %8877, i32 0, i32 0
  %RBP.i1092 = bitcast %union.anon* %8878 to i64*
  %8879 = load i64, i64* %RBP.i1092
  %8880 = sub i64 %8879, 12
  %8881 = load i64, i64* %PC.i1090
  %8882 = add i64 %8881, 3
  store i64 %8882, i64* %PC.i1090
  %8883 = inttoptr i64 %8880 to i32*
  %8884 = load i32, i32* %8883
  %8885 = zext i32 %8884 to i64
  store i64 %8885, i64* %RAX.i1091, align 8
  store %struct.Memory* %loadMem_401014, %struct.Memory** %MEMORY
  %loadMem_401017 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8887 = getelementptr inbounds %struct.GPR, %struct.GPR* %8886, i32 0, i32 33
  %8888 = getelementptr inbounds %struct.Reg, %struct.Reg* %8887, i32 0, i32 0
  %PC.i1088 = bitcast %union.anon* %8888 to i64*
  %8889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8890 = getelementptr inbounds %struct.GPR, %struct.GPR* %8889, i32 0, i32 1
  %8891 = getelementptr inbounds %struct.Reg, %struct.Reg* %8890, i32 0, i32 0
  %RAX.i1089 = bitcast %union.anon* %8891 to i64*
  %8892 = load i64, i64* %RAX.i1089
  %8893 = load i64, i64* %PC.i1088
  %8894 = add i64 %8893, 3
  store i64 %8894, i64* %PC.i1088
  %8895 = trunc i64 %8892 to i32
  %8896 = add i32 1, %8895
  %8897 = zext i32 %8896 to i64
  store i64 %8897, i64* %RAX.i1089, align 8
  %8898 = icmp ult i32 %8896, %8895
  %8899 = icmp ult i32 %8896, 1
  %8900 = or i1 %8898, %8899
  %8901 = zext i1 %8900 to i8
  %8902 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8901, i8* %8902, align 1
  %8903 = and i32 %8896, 255
  %8904 = call i32 @llvm.ctpop.i32(i32 %8903)
  %8905 = trunc i32 %8904 to i8
  %8906 = and i8 %8905, 1
  %8907 = xor i8 %8906, 1
  %8908 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8907, i8* %8908, align 1
  %8909 = xor i64 1, %8892
  %8910 = trunc i64 %8909 to i32
  %8911 = xor i32 %8910, %8896
  %8912 = lshr i32 %8911, 4
  %8913 = trunc i32 %8912 to i8
  %8914 = and i8 %8913, 1
  %8915 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8914, i8* %8915, align 1
  %8916 = icmp eq i32 %8896, 0
  %8917 = zext i1 %8916 to i8
  %8918 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8917, i8* %8918, align 1
  %8919 = lshr i32 %8896, 31
  %8920 = trunc i32 %8919 to i8
  %8921 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8920, i8* %8921, align 1
  %8922 = lshr i32 %8895, 31
  %8923 = xor i32 %8919, %8922
  %8924 = add i32 %8923, %8919
  %8925 = icmp eq i32 %8924, 2
  %8926 = zext i1 %8925 to i8
  %8927 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8926, i8* %8927, align 1
  store %struct.Memory* %loadMem_401017, %struct.Memory** %MEMORY
  %loadMem_40101a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8929 = getelementptr inbounds %struct.GPR, %struct.GPR* %8928, i32 0, i32 33
  %8930 = getelementptr inbounds %struct.Reg, %struct.Reg* %8929, i32 0, i32 0
  %PC.i1085 = bitcast %union.anon* %8930 to i64*
  %8931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8932 = getelementptr inbounds %struct.GPR, %struct.GPR* %8931, i32 0, i32 1
  %8933 = getelementptr inbounds %struct.Reg, %struct.Reg* %8932, i32 0, i32 0
  %EAX.i1086 = bitcast %union.anon* %8933 to i32*
  %8934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8935 = getelementptr inbounds %struct.GPR, %struct.GPR* %8934, i32 0, i32 5
  %8936 = getelementptr inbounds %struct.Reg, %struct.Reg* %8935, i32 0, i32 0
  %RCX.i1087 = bitcast %union.anon* %8936 to i64*
  %8937 = load i32, i32* %EAX.i1086
  %8938 = zext i32 %8937 to i64
  %8939 = load i64, i64* %PC.i1085
  %8940 = add i64 %8939, 3
  store i64 %8940, i64* %PC.i1085
  %8941 = shl i64 %8938, 32
  %8942 = ashr exact i64 %8941, 32
  store i64 %8942, i64* %RCX.i1087, align 8
  store %struct.Memory* %loadMem_40101a, %struct.Memory** %MEMORY
  %loadMem_40101d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8944 = getelementptr inbounds %struct.GPR, %struct.GPR* %8943, i32 0, i32 33
  %8945 = getelementptr inbounds %struct.Reg, %struct.Reg* %8944, i32 0, i32 0
  %PC.i1082 = bitcast %union.anon* %8945 to i64*
  %8946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8947 = getelementptr inbounds %struct.GPR, %struct.GPR* %8946, i32 0, i32 5
  %8948 = getelementptr inbounds %struct.Reg, %struct.Reg* %8947, i32 0, i32 0
  %RCX.i1083 = bitcast %union.anon* %8948 to i64*
  %8949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8950 = getelementptr inbounds %struct.GPR, %struct.GPR* %8949, i32 0, i32 15
  %8951 = getelementptr inbounds %struct.Reg, %struct.Reg* %8950, i32 0, i32 0
  %RBP.i1084 = bitcast %union.anon* %8951 to i64*
  %8952 = load i64, i64* %RBP.i1084
  %8953 = load i64, i64* %RCX.i1083
  %8954 = mul i64 %8953, 4
  %8955 = add i64 %8952, -1328
  %8956 = add i64 %8955, %8954
  %8957 = load i64, i64* %PC.i1082
  %8958 = add i64 %8957, 8
  store i64 %8958, i64* %PC.i1082
  %8959 = inttoptr i64 %8956 to i32*
  %8960 = load i32, i32* %8959
  %8961 = sub i32 %8960, 8
  %8962 = icmp ult i32 %8960, 8
  %8963 = zext i1 %8962 to i8
  %8964 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8963, i8* %8964, align 1
  %8965 = and i32 %8961, 255
  %8966 = call i32 @llvm.ctpop.i32(i32 %8965)
  %8967 = trunc i32 %8966 to i8
  %8968 = and i8 %8967, 1
  %8969 = xor i8 %8968, 1
  %8970 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8969, i8* %8970, align 1
  %8971 = xor i32 %8960, 8
  %8972 = xor i32 %8971, %8961
  %8973 = lshr i32 %8972, 4
  %8974 = trunc i32 %8973 to i8
  %8975 = and i8 %8974, 1
  %8976 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8975, i8* %8976, align 1
  %8977 = icmp eq i32 %8961, 0
  %8978 = zext i1 %8977 to i8
  %8979 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8978, i8* %8979, align 1
  %8980 = lshr i32 %8961, 31
  %8981 = trunc i32 %8980 to i8
  %8982 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8981, i8* %8982, align 1
  %8983 = lshr i32 %8960, 31
  %8984 = xor i32 %8980, %8983
  %8985 = add i32 %8984, %8983
  %8986 = icmp eq i32 %8985, 2
  %8987 = zext i1 %8986 to i8
  %8988 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8987, i8* %8988, align 1
  store %struct.Memory* %loadMem_40101d, %struct.Memory** %MEMORY
  %loadMem_401025 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8990 = getelementptr inbounds %struct.GPR, %struct.GPR* %8989, i32 0, i32 33
  %8991 = getelementptr inbounds %struct.Reg, %struct.Reg* %8990, i32 0, i32 0
  %PC.i1080 = bitcast %union.anon* %8991 to i64*
  %8992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8993 = getelementptr inbounds %struct.GPR, %struct.GPR* %8992, i32 0, i32 7
  %8994 = getelementptr inbounds %struct.Reg, %struct.Reg* %8993, i32 0, i32 0
  %8995 = bitcast %union.anon* %8994 to %struct.anon.2*
  %DL.i1081 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8995, i32 0, i32 0
  %8996 = load i64, i64* %PC.i1080
  %8997 = add i64 %8996, 3
  store i64 %8997, i64* %PC.i1080
  %8998 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8999 = load i8, i8* %8998, align 1
  %9000 = icmp ne i8 %8999, 0
  %9001 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9002 = load i8, i8* %9001, align 1
  %9003 = icmp ne i8 %9002, 0
  %9004 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %9005 = load i8, i8* %9004, align 1
  %9006 = icmp ne i8 %9005, 0
  %9007 = xor i1 %9003, %9006
  %9008 = or i1 %9000, %9007
  %9009 = zext i1 %9008 to i8
  store i8 %9009, i8* %DL.i1081, align 1
  store %struct.Memory* %loadMem_401025, %struct.Memory** %MEMORY
  %loadMem_401028 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9011 = getelementptr inbounds %struct.GPR, %struct.GPR* %9010, i32 0, i32 33
  %9012 = getelementptr inbounds %struct.Reg, %struct.Reg* %9011, i32 0, i32 0
  %PC.i1078 = bitcast %union.anon* %9012 to i64*
  %9013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9014 = getelementptr inbounds %struct.GPR, %struct.GPR* %9013, i32 0, i32 7
  %9015 = getelementptr inbounds %struct.Reg, %struct.Reg* %9014, i32 0, i32 0
  %9016 = bitcast %union.anon* %9015 to %struct.anon.2*
  %DL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9016, i32 0, i32 0
  %9017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9018 = getelementptr inbounds %struct.GPR, %struct.GPR* %9017, i32 0, i32 15
  %9019 = getelementptr inbounds %struct.Reg, %struct.Reg* %9018, i32 0, i32 0
  %RBP.i1079 = bitcast %union.anon* %9019 to i64*
  %9020 = load i64, i64* %RBP.i1079
  %9021 = sub i64 %9020, 2709
  %9022 = load i8, i8* %DL.i
  %9023 = zext i8 %9022 to i64
  %9024 = load i64, i64* %PC.i1078
  %9025 = add i64 %9024, 6
  store i64 %9025, i64* %PC.i1078
  %9026 = inttoptr i64 %9021 to i8*
  store i8 %9022, i8* %9026
  store %struct.Memory* %loadMem_401028, %struct.Memory** %MEMORY
  br label %block_.L_40102e

block_.L_40102e:                                  ; preds = %block_401014, %block_.L_401000
  %loadMem_40102e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9028 = getelementptr inbounds %struct.GPR, %struct.GPR* %9027, i32 0, i32 33
  %9029 = getelementptr inbounds %struct.Reg, %struct.Reg* %9028, i32 0, i32 0
  %PC.i1075 = bitcast %union.anon* %9029 to i64*
  %9030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9031 = getelementptr inbounds %struct.GPR, %struct.GPR* %9030, i32 0, i32 1
  %9032 = getelementptr inbounds %struct.Reg, %struct.Reg* %9031, i32 0, i32 0
  %9033 = bitcast %union.anon* %9032 to %struct.anon.2*
  %AL.i1076 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9033, i32 0, i32 0
  %9034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9035 = getelementptr inbounds %struct.GPR, %struct.GPR* %9034, i32 0, i32 15
  %9036 = getelementptr inbounds %struct.Reg, %struct.Reg* %9035, i32 0, i32 0
  %RBP.i1077 = bitcast %union.anon* %9036 to i64*
  %9037 = load i64, i64* %RBP.i1077
  %9038 = sub i64 %9037, 2709
  %9039 = load i64, i64* %PC.i1075
  %9040 = add i64 %9039, 6
  store i64 %9040, i64* %PC.i1075
  %9041 = inttoptr i64 %9038 to i8*
  %9042 = load i8, i8* %9041
  store i8 %9042, i8* %AL.i1076, align 1
  store %struct.Memory* %loadMem_40102e, %struct.Memory** %MEMORY
  %loadMem_401034 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9044 = getelementptr inbounds %struct.GPR, %struct.GPR* %9043, i32 0, i32 33
  %9045 = getelementptr inbounds %struct.Reg, %struct.Reg* %9044, i32 0, i32 0
  %PC.i1074 = bitcast %union.anon* %9045 to i64*
  %9046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9047 = getelementptr inbounds %struct.GPR, %struct.GPR* %9046, i32 0, i32 1
  %9048 = getelementptr inbounds %struct.Reg, %struct.Reg* %9047, i32 0, i32 0
  %9049 = bitcast %union.anon* %9048 to %struct.anon.2*
  %AL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9049, i32 0, i32 0
  %9050 = load i8, i8* %AL.i
  %9051 = zext i8 %9050 to i64
  %9052 = load i64, i64* %PC.i1074
  %9053 = add i64 %9052, 2
  store i64 %9053, i64* %PC.i1074
  %9054 = and i64 1, %9051
  %9055 = trunc i64 %9054 to i8
  %9056 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9056, align 1
  %9057 = trunc i64 %9054 to i32
  %9058 = and i32 %9057, 255
  %9059 = call i32 @llvm.ctpop.i32(i32 %9058)
  %9060 = trunc i32 %9059 to i8
  %9061 = and i8 %9060, 1
  %9062 = xor i8 %9061, 1
  %9063 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9062, i8* %9063, align 1
  %9064 = icmp eq i8 %9055, 0
  %9065 = zext i1 %9064 to i8
  %9066 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9065, i8* %9066, align 1
  %9067 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %9067, align 1
  %9068 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9068, align 1
  %9069 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9069, align 1
  store %struct.Memory* %loadMem_401034, %struct.Memory** %MEMORY
  %loadMem_401036 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9071 = getelementptr inbounds %struct.GPR, %struct.GPR* %9070, i32 0, i32 33
  %9072 = getelementptr inbounds %struct.Reg, %struct.Reg* %9071, i32 0, i32 0
  %PC.i1073 = bitcast %union.anon* %9072 to i64*
  %9073 = load i64, i64* %PC.i1073
  %9074 = add i64 %9073, -1357
  %9075 = load i64, i64* %PC.i1073
  %9076 = add i64 %9075, 6
  %9077 = load i64, i64* %PC.i1073
  %9078 = add i64 %9077, 6
  store i64 %9078, i64* %PC.i1073
  %9079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9080 = load i8, i8* %9079, align 1
  %9081 = icmp eq i8 %9080, 0
  %9082 = zext i1 %9081 to i8
  store i8 %9082, i8* %BRANCH_TAKEN, align 1
  %9083 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9084 = select i1 %9081, i64 %9074, i64 %9076
  store i64 %9084, i64* %9083, align 8
  store %struct.Memory* %loadMem_401036, %struct.Memory** %MEMORY
  %loadBr_401036 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_401036 = icmp eq i8 %loadBr_401036, 1
  br i1 %cmpBr_401036, label %block_.L_400ae9, label %block_40103c

block_40103c:                                     ; preds = %block_.L_40102e
  %loadMem_40103c = load %struct.Memory*, %struct.Memory** %MEMORY
  %9085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9086 = getelementptr inbounds %struct.GPR, %struct.GPR* %9085, i32 0, i32 33
  %9087 = getelementptr inbounds %struct.Reg, %struct.Reg* %9086, i32 0, i32 0
  %PC.i1070 = bitcast %union.anon* %9087 to i64*
  %9088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9089 = getelementptr inbounds %struct.GPR, %struct.GPR* %9088, i32 0, i32 1
  %9090 = getelementptr inbounds %struct.Reg, %struct.Reg* %9089, i32 0, i32 0
  %RAX.i1071 = bitcast %union.anon* %9090 to i64*
  %9091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9092 = getelementptr inbounds %struct.GPR, %struct.GPR* %9091, i32 0, i32 15
  %9093 = getelementptr inbounds %struct.Reg, %struct.Reg* %9092, i32 0, i32 0
  %RBP.i1072 = bitcast %union.anon* %9093 to i64*
  %9094 = load i64, i64* %RBP.i1072
  %9095 = sub i64 %9094, 12
  %9096 = load i64, i64* %PC.i1070
  %9097 = add i64 %9096, 3
  store i64 %9097, i64* %PC.i1070
  %9098 = inttoptr i64 %9095 to i32*
  %9099 = load i32, i32* %9098
  %9100 = zext i32 %9099 to i64
  store i64 %9100, i64* %RAX.i1071, align 8
  store %struct.Memory* %loadMem_40103c, %struct.Memory** %MEMORY
  %loadMem_40103f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9102 = getelementptr inbounds %struct.GPR, %struct.GPR* %9101, i32 0, i32 33
  %9103 = getelementptr inbounds %struct.Reg, %struct.Reg* %9102, i32 0, i32 0
  %PC.i1068 = bitcast %union.anon* %9103 to i64*
  %9104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9105 = getelementptr inbounds %struct.GPR, %struct.GPR* %9104, i32 0, i32 1
  %9106 = getelementptr inbounds %struct.Reg, %struct.Reg* %9105, i32 0, i32 0
  %RAX.i1069 = bitcast %union.anon* %9106 to i64*
  %9107 = load i64, i64* %RAX.i1069
  %9108 = load i64, i64* %PC.i1068
  %9109 = add i64 %9108, 3
  store i64 %9109, i64* %PC.i1068
  %9110 = trunc i64 %9107 to i32
  %9111 = add i32 1, %9110
  %9112 = zext i32 %9111 to i64
  store i64 %9112, i64* %RAX.i1069, align 8
  %9113 = icmp ult i32 %9111, %9110
  %9114 = icmp ult i32 %9111, 1
  %9115 = or i1 %9113, %9114
  %9116 = zext i1 %9115 to i8
  %9117 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9116, i8* %9117, align 1
  %9118 = and i32 %9111, 255
  %9119 = call i32 @llvm.ctpop.i32(i32 %9118)
  %9120 = trunc i32 %9119 to i8
  %9121 = and i8 %9120, 1
  %9122 = xor i8 %9121, 1
  %9123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9122, i8* %9123, align 1
  %9124 = xor i64 1, %9107
  %9125 = trunc i64 %9124 to i32
  %9126 = xor i32 %9125, %9111
  %9127 = lshr i32 %9126, 4
  %9128 = trunc i32 %9127 to i8
  %9129 = and i8 %9128, 1
  %9130 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9129, i8* %9130, align 1
  %9131 = icmp eq i32 %9111, 0
  %9132 = zext i1 %9131 to i8
  %9133 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9132, i8* %9133, align 1
  %9134 = lshr i32 %9111, 31
  %9135 = trunc i32 %9134 to i8
  %9136 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9135, i8* %9136, align 1
  %9137 = lshr i32 %9110, 31
  %9138 = xor i32 %9134, %9137
  %9139 = add i32 %9138, %9134
  %9140 = icmp eq i32 %9139, 2
  %9141 = zext i1 %9140 to i8
  %9142 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9141, i8* %9142, align 1
  store %struct.Memory* %loadMem_40103f, %struct.Memory** %MEMORY
  %loadMem_401042 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9144 = getelementptr inbounds %struct.GPR, %struct.GPR* %9143, i32 0, i32 33
  %9145 = getelementptr inbounds %struct.Reg, %struct.Reg* %9144, i32 0, i32 0
  %PC.i1065 = bitcast %union.anon* %9145 to i64*
  %9146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9147 = getelementptr inbounds %struct.GPR, %struct.GPR* %9146, i32 0, i32 1
  %9148 = getelementptr inbounds %struct.Reg, %struct.Reg* %9147, i32 0, i32 0
  %EAX.i1066 = bitcast %union.anon* %9148 to i32*
  %9149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9150 = getelementptr inbounds %struct.GPR, %struct.GPR* %9149, i32 0, i32 15
  %9151 = getelementptr inbounds %struct.Reg, %struct.Reg* %9150, i32 0, i32 0
  %RBP.i1067 = bitcast %union.anon* %9151 to i64*
  %9152 = load i64, i64* %RBP.i1067
  %9153 = sub i64 %9152, 12
  %9154 = load i32, i32* %EAX.i1066
  %9155 = zext i32 %9154 to i64
  %9156 = load i64, i64* %PC.i1065
  %9157 = add i64 %9156, 3
  store i64 %9157, i64* %PC.i1065
  %9158 = inttoptr i64 %9153 to i32*
  store i32 %9154, i32* %9158
  store %struct.Memory* %loadMem_401042, %struct.Memory** %MEMORY
  %loadMem_401045 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9160 = getelementptr inbounds %struct.GPR, %struct.GPR* %9159, i32 0, i32 33
  %9161 = getelementptr inbounds %struct.Reg, %struct.Reg* %9160, i32 0, i32 0
  %PC.i1062 = bitcast %union.anon* %9161 to i64*
  %9162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9163 = getelementptr inbounds %struct.GPR, %struct.GPR* %9162, i32 0, i32 5
  %9164 = getelementptr inbounds %struct.Reg, %struct.Reg* %9163, i32 0, i32 0
  %RCX.i1063 = bitcast %union.anon* %9164 to i64*
  %9165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9166 = getelementptr inbounds %struct.GPR, %struct.GPR* %9165, i32 0, i32 15
  %9167 = getelementptr inbounds %struct.Reg, %struct.Reg* %9166, i32 0, i32 0
  %RBP.i1064 = bitcast %union.anon* %9167 to i64*
  %9168 = load i64, i64* %RBP.i1064
  %9169 = sub i64 %9168, 12
  %9170 = load i64, i64* %PC.i1062
  %9171 = add i64 %9170, 4
  store i64 %9171, i64* %PC.i1062
  %9172 = inttoptr i64 %9169 to i32*
  %9173 = load i32, i32* %9172
  %9174 = sext i32 %9173 to i64
  store i64 %9174, i64* %RCX.i1063, align 8
  store %struct.Memory* %loadMem_401045, %struct.Memory** %MEMORY
  %loadMem_401049 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9176 = getelementptr inbounds %struct.GPR, %struct.GPR* %9175, i32 0, i32 33
  %9177 = getelementptr inbounds %struct.Reg, %struct.Reg* %9176, i32 0, i32 0
  %PC.i1059 = bitcast %union.anon* %9177 to i64*
  %9178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9179 = getelementptr inbounds %struct.GPR, %struct.GPR* %9178, i32 0, i32 5
  %9180 = getelementptr inbounds %struct.Reg, %struct.Reg* %9179, i32 0, i32 0
  %RCX.i1060 = bitcast %union.anon* %9180 to i64*
  %9181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9182 = getelementptr inbounds %struct.GPR, %struct.GPR* %9181, i32 0, i32 15
  %9183 = getelementptr inbounds %struct.Reg, %struct.Reg* %9182, i32 0, i32 0
  %RBP.i1061 = bitcast %union.anon* %9183 to i64*
  %9184 = load i64, i64* %RBP.i1061
  %9185 = load i64, i64* %RCX.i1060
  %9186 = mul i64 %9185, 4
  %9187 = add i64 %9184, -1328
  %9188 = add i64 %9187, %9186
  %9189 = load i64, i64* %PC.i1059
  %9190 = add i64 %9189, 8
  store i64 %9190, i64* %PC.i1059
  %9191 = inttoptr i64 %9188 to i32*
  %9192 = load i32, i32* %9191
  %9193 = sub i32 %9192, 8
  %9194 = icmp ult i32 %9192, 8
  %9195 = zext i1 %9194 to i8
  %9196 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9195, i8* %9196, align 1
  %9197 = and i32 %9193, 255
  %9198 = call i32 @llvm.ctpop.i32(i32 %9197)
  %9199 = trunc i32 %9198 to i8
  %9200 = and i8 %9199, 1
  %9201 = xor i8 %9200, 1
  %9202 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9201, i8* %9202, align 1
  %9203 = xor i32 %9192, 8
  %9204 = xor i32 %9203, %9193
  %9205 = lshr i32 %9204, 4
  %9206 = trunc i32 %9205 to i8
  %9207 = and i8 %9206, 1
  %9208 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9207, i8* %9208, align 1
  %9209 = icmp eq i32 %9193, 0
  %9210 = zext i1 %9209 to i8
  %9211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9210, i8* %9211, align 1
  %9212 = lshr i32 %9193, 31
  %9213 = trunc i32 %9212 to i8
  %9214 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9213, i8* %9214, align 1
  %9215 = lshr i32 %9192, 31
  %9216 = xor i32 %9212, %9215
  %9217 = add i32 %9216, %9215
  %9218 = icmp eq i32 %9217, 2
  %9219 = zext i1 %9218 to i8
  %9220 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9219, i8* %9220, align 1
  store %struct.Memory* %loadMem_401049, %struct.Memory** %MEMORY
  %loadMem_401051 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9222 = getelementptr inbounds %struct.GPR, %struct.GPR* %9221, i32 0, i32 33
  %9223 = getelementptr inbounds %struct.Reg, %struct.Reg* %9222, i32 0, i32 0
  %PC.i1058 = bitcast %union.anon* %9223 to i64*
  %9224 = load i64, i64* %PC.i1058
  %9225 = add i64 %9224, 1847
  %9226 = load i64, i64* %PC.i1058
  %9227 = add i64 %9226, 6
  %9228 = load i64, i64* %PC.i1058
  %9229 = add i64 %9228, 6
  store i64 %9229, i64* %PC.i1058
  %9230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9231 = load i8, i8* %9230, align 1
  %9232 = icmp eq i8 %9231, 0
  %9233 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9234 = load i8, i8* %9233, align 1
  %9235 = icmp ne i8 %9234, 0
  %9236 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %9237 = load i8, i8* %9236, align 1
  %9238 = icmp ne i8 %9237, 0
  %9239 = xor i1 %9235, %9238
  %9240 = xor i1 %9239, true
  %9241 = and i1 %9232, %9240
  %9242 = zext i1 %9241 to i8
  store i8 %9242, i8* %BRANCH_TAKEN, align 1
  %9243 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9244 = select i1 %9241, i64 %9225, i64 %9227
  store i64 %9244, i64* %9243, align 8
  store %struct.Memory* %loadMem_401051, %struct.Memory** %MEMORY
  %loadBr_401051 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_401051 = icmp eq i8 %loadBr_401051, 1
  br i1 %cmpBr_401051, label %block_.L_401788, label %block_401057

block_401057:                                     ; preds = %block_40103c
  %loadMem_401057 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9246 = getelementptr inbounds %struct.GPR, %struct.GPR* %9245, i32 0, i32 33
  %9247 = getelementptr inbounds %struct.Reg, %struct.Reg* %9246, i32 0, i32 0
  %PC.i1056 = bitcast %union.anon* %9247 to i64*
  %9248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9249 = getelementptr inbounds %struct.GPR, %struct.GPR* %9248, i32 0, i32 15
  %9250 = getelementptr inbounds %struct.Reg, %struct.Reg* %9249, i32 0, i32 0
  %RBP.i1057 = bitcast %union.anon* %9250 to i64*
  %9251 = load i64, i64* %RBP.i1057
  %9252 = sub i64 %9251, 4
  %9253 = load i64, i64* %PC.i1056
  %9254 = add i64 %9253, 7
  store i64 %9254, i64* %PC.i1056
  %9255 = inttoptr i64 %9252 to i32*
  store i32 0, i32* %9255
  store %struct.Memory* %loadMem_401057, %struct.Memory** %MEMORY
  br label %block_.L_40105e

block_.L_40105e:                                  ; preds = %block_401072, %block_401057
  %loadMem_40105e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9257 = getelementptr inbounds %struct.GPR, %struct.GPR* %9256, i32 0, i32 33
  %9258 = getelementptr inbounds %struct.Reg, %struct.Reg* %9257, i32 0, i32 0
  %PC.i1053 = bitcast %union.anon* %9258 to i64*
  %9259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9260 = getelementptr inbounds %struct.GPR, %struct.GPR* %9259, i32 0, i32 1
  %9261 = getelementptr inbounds %struct.Reg, %struct.Reg* %9260, i32 0, i32 0
  %RAX.i1054 = bitcast %union.anon* %9261 to i64*
  %9262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9263 = getelementptr inbounds %struct.GPR, %struct.GPR* %9262, i32 0, i32 15
  %9264 = getelementptr inbounds %struct.Reg, %struct.Reg* %9263, i32 0, i32 0
  %RBP.i1055 = bitcast %union.anon* %9264 to i64*
  %9265 = load i64, i64* %RBP.i1055
  %9266 = sub i64 %9265, 4
  %9267 = load i64, i64* %PC.i1053
  %9268 = add i64 %9267, 3
  store i64 %9268, i64* %PC.i1053
  %9269 = inttoptr i64 %9266 to i32*
  %9270 = load i32, i32* %9269
  %9271 = zext i32 %9270 to i64
  store i64 %9271, i64* %RAX.i1054, align 8
  store %struct.Memory* %loadMem_40105e, %struct.Memory** %MEMORY
  %loadMem_401061 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9273 = getelementptr inbounds %struct.GPR, %struct.GPR* %9272, i32 0, i32 33
  %9274 = getelementptr inbounds %struct.Reg, %struct.Reg* %9273, i32 0, i32 0
  %PC.i1050 = bitcast %union.anon* %9274 to i64*
  %9275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9276 = getelementptr inbounds %struct.GPR, %struct.GPR* %9275, i32 0, i32 5
  %9277 = getelementptr inbounds %struct.Reg, %struct.Reg* %9276, i32 0, i32 0
  %RCX.i1051 = bitcast %union.anon* %9277 to i64*
  %9278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9279 = getelementptr inbounds %struct.GPR, %struct.GPR* %9278, i32 0, i32 15
  %9280 = getelementptr inbounds %struct.Reg, %struct.Reg* %9279, i32 0, i32 0
  %RBP.i1052 = bitcast %union.anon* %9280 to i64*
  %9281 = load i64, i64* %RBP.i1052
  %9282 = sub i64 %9281, 12
  %9283 = load i64, i64* %PC.i1050
  %9284 = add i64 %9283, 4
  store i64 %9284, i64* %PC.i1050
  %9285 = inttoptr i64 %9282 to i32*
  %9286 = load i32, i32* %9285
  %9287 = sext i32 %9286 to i64
  store i64 %9287, i64* %RCX.i1051, align 8
  store %struct.Memory* %loadMem_401061, %struct.Memory** %MEMORY
  %loadMem_401065 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9289 = getelementptr inbounds %struct.GPR, %struct.GPR* %9288, i32 0, i32 33
  %9290 = getelementptr inbounds %struct.Reg, %struct.Reg* %9289, i32 0, i32 0
  %PC.i1046 = bitcast %union.anon* %9290 to i64*
  %9291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9292 = getelementptr inbounds %struct.GPR, %struct.GPR* %9291, i32 0, i32 1
  %9293 = getelementptr inbounds %struct.Reg, %struct.Reg* %9292, i32 0, i32 0
  %EAX.i1047 = bitcast %union.anon* %9293 to i32*
  %9294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9295 = getelementptr inbounds %struct.GPR, %struct.GPR* %9294, i32 0, i32 5
  %9296 = getelementptr inbounds %struct.Reg, %struct.Reg* %9295, i32 0, i32 0
  %RCX.i1048 = bitcast %union.anon* %9296 to i64*
  %9297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9298 = getelementptr inbounds %struct.GPR, %struct.GPR* %9297, i32 0, i32 15
  %9299 = getelementptr inbounds %struct.Reg, %struct.Reg* %9298, i32 0, i32 0
  %RBP.i1049 = bitcast %union.anon* %9299 to i64*
  %9300 = load i32, i32* %EAX.i1047
  %9301 = zext i32 %9300 to i64
  %9302 = load i64, i64* %RBP.i1049
  %9303 = load i64, i64* %RCX.i1048
  %9304 = mul i64 %9303, 4
  %9305 = add i64 %9302, -1328
  %9306 = add i64 %9305, %9304
  %9307 = load i64, i64* %PC.i1046
  %9308 = add i64 %9307, 7
  store i64 %9308, i64* %PC.i1046
  %9309 = inttoptr i64 %9306 to i32*
  %9310 = load i32, i32* %9309
  %9311 = sub i32 %9300, %9310
  %9312 = icmp ult i32 %9300, %9310
  %9313 = zext i1 %9312 to i8
  %9314 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9313, i8* %9314, align 1
  %9315 = and i32 %9311, 255
  %9316 = call i32 @llvm.ctpop.i32(i32 %9315)
  %9317 = trunc i32 %9316 to i8
  %9318 = and i8 %9317, 1
  %9319 = xor i8 %9318, 1
  %9320 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9319, i8* %9320, align 1
  %9321 = xor i32 %9310, %9300
  %9322 = xor i32 %9321, %9311
  %9323 = lshr i32 %9322, 4
  %9324 = trunc i32 %9323 to i8
  %9325 = and i8 %9324, 1
  %9326 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9325, i8* %9326, align 1
  %9327 = icmp eq i32 %9311, 0
  %9328 = zext i1 %9327 to i8
  %9329 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9328, i8* %9329, align 1
  %9330 = lshr i32 %9311, 31
  %9331 = trunc i32 %9330 to i8
  %9332 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9331, i8* %9332, align 1
  %9333 = lshr i32 %9300, 31
  %9334 = lshr i32 %9310, 31
  %9335 = xor i32 %9334, %9333
  %9336 = xor i32 %9330, %9333
  %9337 = add i32 %9336, %9335
  %9338 = icmp eq i32 %9337, 2
  %9339 = zext i1 %9338 to i8
  %9340 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9339, i8* %9340, align 1
  store %struct.Memory* %loadMem_401065, %struct.Memory** %MEMORY
  %loadMem_40106c = load %struct.Memory*, %struct.Memory** %MEMORY
  %9341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9342 = getelementptr inbounds %struct.GPR, %struct.GPR* %9341, i32 0, i32 33
  %9343 = getelementptr inbounds %struct.Reg, %struct.Reg* %9342, i32 0, i32 0
  %PC.i1045 = bitcast %union.anon* %9343 to i64*
  %9344 = load i64, i64* %PC.i1045
  %9345 = add i64 %9344, 74
  %9346 = load i64, i64* %PC.i1045
  %9347 = add i64 %9346, 6
  %9348 = load i64, i64* %PC.i1045
  %9349 = add i64 %9348, 6
  store i64 %9349, i64* %PC.i1045
  %9350 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9351 = load i8, i8* %9350, align 1
  %9352 = icmp eq i8 %9351, 0
  %9353 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9354 = load i8, i8* %9353, align 1
  %9355 = icmp ne i8 %9354, 0
  %9356 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %9357 = load i8, i8* %9356, align 1
  %9358 = icmp ne i8 %9357, 0
  %9359 = xor i1 %9355, %9358
  %9360 = xor i1 %9359, true
  %9361 = and i1 %9352, %9360
  %9362 = zext i1 %9361 to i8
  store i8 %9362, i8* %BRANCH_TAKEN, align 1
  %9363 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9364 = select i1 %9361, i64 %9345, i64 %9347
  store i64 %9364, i64* %9363, align 8
  store %struct.Memory* %loadMem_40106c, %struct.Memory** %MEMORY
  %loadBr_40106c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40106c = icmp eq i8 %loadBr_40106c, 1
  br i1 %cmpBr_40106c, label %block_.L_4010b6, label %block_401072

block_401072:                                     ; preds = %block_.L_40105e
  %loadMem_401072 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9366 = getelementptr inbounds %struct.GPR, %struct.GPR* %9365, i32 0, i32 33
  %9367 = getelementptr inbounds %struct.Reg, %struct.Reg* %9366, i32 0, i32 0
  %PC.i1042 = bitcast %union.anon* %9367 to i64*
  %9368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9369 = getelementptr inbounds %struct.GPR, %struct.GPR* %9368, i32 0, i32 1
  %9370 = getelementptr inbounds %struct.Reg, %struct.Reg* %9369, i32 0, i32 0
  %RAX.i1043 = bitcast %union.anon* %9370 to i64*
  %9371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9372 = getelementptr inbounds %struct.GPR, %struct.GPR* %9371, i32 0, i32 15
  %9373 = getelementptr inbounds %struct.Reg, %struct.Reg* %9372, i32 0, i32 0
  %RBP.i1044 = bitcast %union.anon* %9373 to i64*
  %9374 = load i64, i64* %RBP.i1044
  %9375 = sub i64 %9374, 1168
  %9376 = load i64, i64* %PC.i1042
  %9377 = add i64 %9376, 7
  store i64 %9377, i64* %PC.i1042
  store i64 %9375, i64* %RAX.i1043, align 8
  store %struct.Memory* %loadMem_401072, %struct.Memory** %MEMORY
  %loadMem_401079 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9379 = getelementptr inbounds %struct.GPR, %struct.GPR* %9378, i32 0, i32 33
  %9380 = getelementptr inbounds %struct.Reg, %struct.Reg* %9379, i32 0, i32 0
  %PC.i1039 = bitcast %union.anon* %9380 to i64*
  %9381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9382 = getelementptr inbounds %struct.GPR, %struct.GPR* %9381, i32 0, i32 5
  %9383 = getelementptr inbounds %struct.Reg, %struct.Reg* %9382, i32 0, i32 0
  %RCX.i1040 = bitcast %union.anon* %9383 to i64*
  %9384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9385 = getelementptr inbounds %struct.GPR, %struct.GPR* %9384, i32 0, i32 15
  %9386 = getelementptr inbounds %struct.Reg, %struct.Reg* %9385, i32 0, i32 0
  %RBP.i1041 = bitcast %union.anon* %9386 to i64*
  %9387 = load i64, i64* %RBP.i1041
  %9388 = sub i64 %9387, 12
  %9389 = load i64, i64* %PC.i1039
  %9390 = add i64 %9389, 4
  store i64 %9390, i64* %PC.i1039
  %9391 = inttoptr i64 %9388 to i32*
  %9392 = load i32, i32* %9391
  %9393 = sext i32 %9392 to i64
  store i64 %9393, i64* %RCX.i1040, align 8
  store %struct.Memory* %loadMem_401079, %struct.Memory** %MEMORY
  %loadMem_40107d = load %struct.Memory*, %struct.Memory** %MEMORY
  %9394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9395 = getelementptr inbounds %struct.GPR, %struct.GPR* %9394, i32 0, i32 33
  %9396 = getelementptr inbounds %struct.Reg, %struct.Reg* %9395, i32 0, i32 0
  %PC.i1037 = bitcast %union.anon* %9396 to i64*
  %9397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9398 = getelementptr inbounds %struct.GPR, %struct.GPR* %9397, i32 0, i32 5
  %9399 = getelementptr inbounds %struct.Reg, %struct.Reg* %9398, i32 0, i32 0
  %RCX.i1038 = bitcast %union.anon* %9399 to i64*
  %9400 = load i64, i64* %RCX.i1038
  %9401 = load i64, i64* %PC.i1037
  %9402 = add i64 %9401, 4
  store i64 %9402, i64* %PC.i1037
  %9403 = shl i64 %9400, 5
  %9404 = icmp slt i64 %9403, 0
  %9405 = shl i64 %9403, 1
  store i64 %9405, i64* %RCX.i1038, align 8
  %9406 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %9407 = zext i1 %9404 to i8
  store i8 %9407, i8* %9406, align 1
  %9408 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %9409 = trunc i64 %9405 to i32
  %9410 = and i32 %9409, 254
  %9411 = call i32 @llvm.ctpop.i32(i32 %9410)
  %9412 = trunc i32 %9411 to i8
  %9413 = and i8 %9412, 1
  %9414 = xor i8 %9413, 1
  store i8 %9414, i8* %9408, align 1
  %9415 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9415, align 1
  %9416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9417 = icmp eq i64 %9405, 0
  %9418 = zext i1 %9417 to i8
  store i8 %9418, i8* %9416, align 1
  %9419 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9420 = lshr i64 %9405, 63
  %9421 = trunc i64 %9420 to i8
  store i8 %9421, i8* %9419, align 1
  %9422 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9422, align 1
  store %struct.Memory* %loadMem_40107d, %struct.Memory** %MEMORY
  %loadMem_401081 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9424 = getelementptr inbounds %struct.GPR, %struct.GPR* %9423, i32 0, i32 33
  %9425 = getelementptr inbounds %struct.Reg, %struct.Reg* %9424, i32 0, i32 0
  %PC.i1034 = bitcast %union.anon* %9425 to i64*
  %9426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9427 = getelementptr inbounds %struct.GPR, %struct.GPR* %9426, i32 0, i32 1
  %9428 = getelementptr inbounds %struct.Reg, %struct.Reg* %9427, i32 0, i32 0
  %RAX.i1035 = bitcast %union.anon* %9428 to i64*
  %9429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9430 = getelementptr inbounds %struct.GPR, %struct.GPR* %9429, i32 0, i32 7
  %9431 = getelementptr inbounds %struct.Reg, %struct.Reg* %9430, i32 0, i32 0
  %RDX.i1036 = bitcast %union.anon* %9431 to i64*
  %9432 = load i64, i64* %RAX.i1035
  %9433 = load i64, i64* %PC.i1034
  %9434 = add i64 %9433, 3
  store i64 %9434, i64* %PC.i1034
  store i64 %9432, i64* %RDX.i1036, align 8
  store %struct.Memory* %loadMem_401081, %struct.Memory** %MEMORY
  %loadMem_401084 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9436 = getelementptr inbounds %struct.GPR, %struct.GPR* %9435, i32 0, i32 33
  %9437 = getelementptr inbounds %struct.Reg, %struct.Reg* %9436, i32 0, i32 0
  %PC.i1031 = bitcast %union.anon* %9437 to i64*
  %9438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9439 = getelementptr inbounds %struct.GPR, %struct.GPR* %9438, i32 0, i32 5
  %9440 = getelementptr inbounds %struct.Reg, %struct.Reg* %9439, i32 0, i32 0
  %RCX.i1032 = bitcast %union.anon* %9440 to i64*
  %9441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9442 = getelementptr inbounds %struct.GPR, %struct.GPR* %9441, i32 0, i32 7
  %9443 = getelementptr inbounds %struct.Reg, %struct.Reg* %9442, i32 0, i32 0
  %RDX.i1033 = bitcast %union.anon* %9443 to i64*
  %9444 = load i64, i64* %RDX.i1033
  %9445 = load i64, i64* %RCX.i1032
  %9446 = load i64, i64* %PC.i1031
  %9447 = add i64 %9446, 3
  store i64 %9447, i64* %PC.i1031
  %9448 = add i64 %9445, %9444
  store i64 %9448, i64* %RDX.i1033, align 8
  %9449 = icmp ult i64 %9448, %9444
  %9450 = icmp ult i64 %9448, %9445
  %9451 = or i1 %9449, %9450
  %9452 = zext i1 %9451 to i8
  %9453 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9452, i8* %9453, align 1
  %9454 = trunc i64 %9448 to i32
  %9455 = and i32 %9454, 255
  %9456 = call i32 @llvm.ctpop.i32(i32 %9455)
  %9457 = trunc i32 %9456 to i8
  %9458 = and i8 %9457, 1
  %9459 = xor i8 %9458, 1
  %9460 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9459, i8* %9460, align 1
  %9461 = xor i64 %9445, %9444
  %9462 = xor i64 %9461, %9448
  %9463 = lshr i64 %9462, 4
  %9464 = trunc i64 %9463 to i8
  %9465 = and i8 %9464, 1
  %9466 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9465, i8* %9466, align 1
  %9467 = icmp eq i64 %9448, 0
  %9468 = zext i1 %9467 to i8
  %9469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9468, i8* %9469, align 1
  %9470 = lshr i64 %9448, 63
  %9471 = trunc i64 %9470 to i8
  %9472 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9471, i8* %9472, align 1
  %9473 = lshr i64 %9444, 63
  %9474 = lshr i64 %9445, 63
  %9475 = xor i64 %9470, %9473
  %9476 = xor i64 %9470, %9474
  %9477 = add i64 %9475, %9476
  %9478 = icmp eq i64 %9477, 2
  %9479 = zext i1 %9478 to i8
  %9480 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9479, i8* %9480, align 1
  store %struct.Memory* %loadMem_401084, %struct.Memory** %MEMORY
  %loadMem_401087 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9482 = getelementptr inbounds %struct.GPR, %struct.GPR* %9481, i32 0, i32 33
  %9483 = getelementptr inbounds %struct.Reg, %struct.Reg* %9482, i32 0, i32 0
  %PC.i1028 = bitcast %union.anon* %9483 to i64*
  %9484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9485 = getelementptr inbounds %struct.GPR, %struct.GPR* %9484, i32 0, i32 5
  %9486 = getelementptr inbounds %struct.Reg, %struct.Reg* %9485, i32 0, i32 0
  %RCX.i1029 = bitcast %union.anon* %9486 to i64*
  %9487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9488 = getelementptr inbounds %struct.GPR, %struct.GPR* %9487, i32 0, i32 15
  %9489 = getelementptr inbounds %struct.Reg, %struct.Reg* %9488, i32 0, i32 0
  %RBP.i1030 = bitcast %union.anon* %9489 to i64*
  %9490 = load i64, i64* %RBP.i1030
  %9491 = sub i64 %9490, 4
  %9492 = load i64, i64* %PC.i1028
  %9493 = add i64 %9492, 4
  store i64 %9493, i64* %PC.i1028
  %9494 = inttoptr i64 %9491 to i32*
  %9495 = load i32, i32* %9494
  %9496 = sext i32 %9495 to i64
  store i64 %9496, i64* %RCX.i1029, align 8
  store %struct.Memory* %loadMem_401087, %struct.Memory** %MEMORY
  %loadMem_40108b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9498 = getelementptr inbounds %struct.GPR, %struct.GPR* %9497, i32 0, i32 33
  %9499 = getelementptr inbounds %struct.Reg, %struct.Reg* %9498, i32 0, i32 0
  %PC.i1025 = bitcast %union.anon* %9499 to i64*
  %9500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9501 = getelementptr inbounds %struct.GPR, %struct.GPR* %9500, i32 0, i32 5
  %9502 = getelementptr inbounds %struct.Reg, %struct.Reg* %9501, i32 0, i32 0
  %RCX.i1026 = bitcast %union.anon* %9502 to i64*
  %9503 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9504 = getelementptr inbounds %struct.GPR, %struct.GPR* %9503, i32 0, i32 7
  %9505 = getelementptr inbounds %struct.Reg, %struct.Reg* %9504, i32 0, i32 0
  %RDX.i1027 = bitcast %union.anon* %9505 to i64*
  %9506 = load i64, i64* %RDX.i1027
  %9507 = load i64, i64* %RCX.i1026
  %9508 = mul i64 %9507, 4
  %9509 = add i64 %9508, %9506
  %9510 = load i64, i64* %PC.i1025
  %9511 = add i64 %9510, 4
  store i64 %9511, i64* %PC.i1025
  %9512 = inttoptr i64 %9509 to i32*
  %9513 = load i32, i32* %9512
  %9514 = sext i32 %9513 to i64
  store i64 %9514, i64* %RCX.i1026, align 8
  store %struct.Memory* %loadMem_40108b, %struct.Memory** %MEMORY
  %loadMem_40108f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9516 = getelementptr inbounds %struct.GPR, %struct.GPR* %9515, i32 0, i32 33
  %9517 = getelementptr inbounds %struct.Reg, %struct.Reg* %9516, i32 0, i32 0
  %PC.i1022 = bitcast %union.anon* %9517 to i64*
  %9518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9519 = getelementptr inbounds %struct.GPR, %struct.GPR* %9518, i32 0, i32 5
  %9520 = getelementptr inbounds %struct.Reg, %struct.Reg* %9519, i32 0, i32 0
  %RCX.i1023 = bitcast %union.anon* %9520 to i64*
  %9521 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9522 = getelementptr inbounds %struct.GPR, %struct.GPR* %9521, i32 0, i32 9
  %9523 = getelementptr inbounds %struct.Reg, %struct.Reg* %9522, i32 0, i32 0
  %RSI.i1024 = bitcast %union.anon* %9523 to i64*
  %9524 = load i64, i64* %RCX.i1023
  %9525 = mul i64 %9524, 4
  %9526 = add i64 %9525, 6304896
  %9527 = load i64, i64* %PC.i1022
  %9528 = add i64 %9527, 7
  store i64 %9528, i64* %PC.i1022
  %9529 = inttoptr i64 %9526 to i32*
  %9530 = load i32, i32* %9529
  %9531 = zext i32 %9530 to i64
  store i64 %9531, i64* %RSI.i1024, align 8
  store %struct.Memory* %loadMem_40108f, %struct.Memory** %MEMORY
  %loadMem_401096 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9533 = getelementptr inbounds %struct.GPR, %struct.GPR* %9532, i32 0, i32 33
  %9534 = getelementptr inbounds %struct.Reg, %struct.Reg* %9533, i32 0, i32 0
  %PC.i1019 = bitcast %union.anon* %9534 to i64*
  %9535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9536 = getelementptr inbounds %struct.GPR, %struct.GPR* %9535, i32 0, i32 5
  %9537 = getelementptr inbounds %struct.Reg, %struct.Reg* %9536, i32 0, i32 0
  %RCX.i1020 = bitcast %union.anon* %9537 to i64*
  %9538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9539 = getelementptr inbounds %struct.GPR, %struct.GPR* %9538, i32 0, i32 15
  %9540 = getelementptr inbounds %struct.Reg, %struct.Reg* %9539, i32 0, i32 0
  %RBP.i1021 = bitcast %union.anon* %9540 to i64*
  %9541 = load i64, i64* %RBP.i1021
  %9542 = sub i64 %9541, 12
  %9543 = load i64, i64* %PC.i1019
  %9544 = add i64 %9543, 4
  store i64 %9544, i64* %PC.i1019
  %9545 = inttoptr i64 %9542 to i32*
  %9546 = load i32, i32* %9545
  %9547 = sext i32 %9546 to i64
  store i64 %9547, i64* %RCX.i1020, align 8
  store %struct.Memory* %loadMem_401096, %struct.Memory** %MEMORY
  %loadMem_40109a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9549 = getelementptr inbounds %struct.GPR, %struct.GPR* %9548, i32 0, i32 33
  %9550 = getelementptr inbounds %struct.Reg, %struct.Reg* %9549, i32 0, i32 0
  %PC.i1017 = bitcast %union.anon* %9550 to i64*
  %9551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9552 = getelementptr inbounds %struct.GPR, %struct.GPR* %9551, i32 0, i32 5
  %9553 = getelementptr inbounds %struct.Reg, %struct.Reg* %9552, i32 0, i32 0
  %RCX.i1018 = bitcast %union.anon* %9553 to i64*
  %9554 = load i64, i64* %RCX.i1018
  %9555 = load i64, i64* %PC.i1017
  %9556 = add i64 %9555, 4
  store i64 %9556, i64* %PC.i1017
  %9557 = shl i64 %9554, 5
  %9558 = icmp slt i64 %9557, 0
  %9559 = shl i64 %9557, 1
  store i64 %9559, i64* %RCX.i1018, align 8
  %9560 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %9561 = zext i1 %9558 to i8
  store i8 %9561, i8* %9560, align 1
  %9562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %9563 = trunc i64 %9559 to i32
  %9564 = and i32 %9563, 254
  %9565 = call i32 @llvm.ctpop.i32(i32 %9564)
  %9566 = trunc i32 %9565 to i8
  %9567 = and i8 %9566, 1
  %9568 = xor i8 %9567, 1
  store i8 %9568, i8* %9562, align 1
  %9569 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9569, align 1
  %9570 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9571 = icmp eq i64 %9559, 0
  %9572 = zext i1 %9571 to i8
  store i8 %9572, i8* %9570, align 1
  %9573 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9574 = lshr i64 %9559, 63
  %9575 = trunc i64 %9574 to i8
  store i8 %9575, i8* %9573, align 1
  %9576 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9576, align 1
  store %struct.Memory* %loadMem_40109a, %struct.Memory** %MEMORY
  %loadMem_40109e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9578 = getelementptr inbounds %struct.GPR, %struct.GPR* %9577, i32 0, i32 33
  %9579 = getelementptr inbounds %struct.Reg, %struct.Reg* %9578, i32 0, i32 0
  %PC.i1014 = bitcast %union.anon* %9579 to i64*
  %9580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9581 = getelementptr inbounds %struct.GPR, %struct.GPR* %9580, i32 0, i32 1
  %9582 = getelementptr inbounds %struct.Reg, %struct.Reg* %9581, i32 0, i32 0
  %RAX.i1015 = bitcast %union.anon* %9582 to i64*
  %9583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9584 = getelementptr inbounds %struct.GPR, %struct.GPR* %9583, i32 0, i32 5
  %9585 = getelementptr inbounds %struct.Reg, %struct.Reg* %9584, i32 0, i32 0
  %RCX.i1016 = bitcast %union.anon* %9585 to i64*
  %9586 = load i64, i64* %RAX.i1015
  %9587 = load i64, i64* %RCX.i1016
  %9588 = load i64, i64* %PC.i1014
  %9589 = add i64 %9588, 3
  store i64 %9589, i64* %PC.i1014
  %9590 = add i64 %9587, %9586
  store i64 %9590, i64* %RAX.i1015, align 8
  %9591 = icmp ult i64 %9590, %9586
  %9592 = icmp ult i64 %9590, %9587
  %9593 = or i1 %9591, %9592
  %9594 = zext i1 %9593 to i8
  %9595 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9594, i8* %9595, align 1
  %9596 = trunc i64 %9590 to i32
  %9597 = and i32 %9596, 255
  %9598 = call i32 @llvm.ctpop.i32(i32 %9597)
  %9599 = trunc i32 %9598 to i8
  %9600 = and i8 %9599, 1
  %9601 = xor i8 %9600, 1
  %9602 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9601, i8* %9602, align 1
  %9603 = xor i64 %9587, %9586
  %9604 = xor i64 %9603, %9590
  %9605 = lshr i64 %9604, 4
  %9606 = trunc i64 %9605 to i8
  %9607 = and i8 %9606, 1
  %9608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9607, i8* %9608, align 1
  %9609 = icmp eq i64 %9590, 0
  %9610 = zext i1 %9609 to i8
  %9611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9610, i8* %9611, align 1
  %9612 = lshr i64 %9590, 63
  %9613 = trunc i64 %9612 to i8
  %9614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9613, i8* %9614, align 1
  %9615 = lshr i64 %9586, 63
  %9616 = lshr i64 %9587, 63
  %9617 = xor i64 %9612, %9615
  %9618 = xor i64 %9612, %9616
  %9619 = add i64 %9617, %9618
  %9620 = icmp eq i64 %9619, 2
  %9621 = zext i1 %9620 to i8
  %9622 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9621, i8* %9622, align 1
  store %struct.Memory* %loadMem_40109e, %struct.Memory** %MEMORY
  %loadMem_4010a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9624 = getelementptr inbounds %struct.GPR, %struct.GPR* %9623, i32 0, i32 33
  %9625 = getelementptr inbounds %struct.Reg, %struct.Reg* %9624, i32 0, i32 0
  %PC.i1011 = bitcast %union.anon* %9625 to i64*
  %9626 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9627 = getelementptr inbounds %struct.GPR, %struct.GPR* %9626, i32 0, i32 5
  %9628 = getelementptr inbounds %struct.Reg, %struct.Reg* %9627, i32 0, i32 0
  %RCX.i1012 = bitcast %union.anon* %9628 to i64*
  %9629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9630 = getelementptr inbounds %struct.GPR, %struct.GPR* %9629, i32 0, i32 15
  %9631 = getelementptr inbounds %struct.Reg, %struct.Reg* %9630, i32 0, i32 0
  %RBP.i1013 = bitcast %union.anon* %9631 to i64*
  %9632 = load i64, i64* %RBP.i1013
  %9633 = sub i64 %9632, 4
  %9634 = load i64, i64* %PC.i1011
  %9635 = add i64 %9634, 4
  store i64 %9635, i64* %PC.i1011
  %9636 = inttoptr i64 %9633 to i32*
  %9637 = load i32, i32* %9636
  %9638 = sext i32 %9637 to i64
  store i64 %9638, i64* %RCX.i1012, align 8
  store %struct.Memory* %loadMem_4010a1, %struct.Memory** %MEMORY
  %loadMem_4010a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9640 = getelementptr inbounds %struct.GPR, %struct.GPR* %9639, i32 0, i32 33
  %9641 = getelementptr inbounds %struct.Reg, %struct.Reg* %9640, i32 0, i32 0
  %PC.i1007 = bitcast %union.anon* %9641 to i64*
  %9642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9643 = getelementptr inbounds %struct.GPR, %struct.GPR* %9642, i32 0, i32 9
  %9644 = getelementptr inbounds %struct.Reg, %struct.Reg* %9643, i32 0, i32 0
  %ESI.i1008 = bitcast %union.anon* %9644 to i32*
  %9645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9646 = getelementptr inbounds %struct.GPR, %struct.GPR* %9645, i32 0, i32 1
  %9647 = getelementptr inbounds %struct.Reg, %struct.Reg* %9646, i32 0, i32 0
  %RAX.i1009 = bitcast %union.anon* %9647 to i64*
  %9648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9649 = getelementptr inbounds %struct.GPR, %struct.GPR* %9648, i32 0, i32 5
  %9650 = getelementptr inbounds %struct.Reg, %struct.Reg* %9649, i32 0, i32 0
  %RCX.i1010 = bitcast %union.anon* %9650 to i64*
  %9651 = load i64, i64* %RAX.i1009
  %9652 = load i64, i64* %RCX.i1010
  %9653 = mul i64 %9652, 4
  %9654 = add i64 %9653, %9651
  %9655 = load i32, i32* %ESI.i1008
  %9656 = zext i32 %9655 to i64
  %9657 = load i64, i64* %PC.i1007
  %9658 = add i64 %9657, 3
  store i64 %9658, i64* %PC.i1007
  %9659 = inttoptr i64 %9654 to i32*
  store i32 %9655, i32* %9659
  store %struct.Memory* %loadMem_4010a5, %struct.Memory** %MEMORY
  %loadMem_4010a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9661 = getelementptr inbounds %struct.GPR, %struct.GPR* %9660, i32 0, i32 33
  %9662 = getelementptr inbounds %struct.Reg, %struct.Reg* %9661, i32 0, i32 0
  %PC.i1004 = bitcast %union.anon* %9662 to i64*
  %9663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9664 = getelementptr inbounds %struct.GPR, %struct.GPR* %9663, i32 0, i32 1
  %9665 = getelementptr inbounds %struct.Reg, %struct.Reg* %9664, i32 0, i32 0
  %RAX.i1005 = bitcast %union.anon* %9665 to i64*
  %9666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9667 = getelementptr inbounds %struct.GPR, %struct.GPR* %9666, i32 0, i32 15
  %9668 = getelementptr inbounds %struct.Reg, %struct.Reg* %9667, i32 0, i32 0
  %RBP.i1006 = bitcast %union.anon* %9668 to i64*
  %9669 = load i64, i64* %RBP.i1006
  %9670 = sub i64 %9669, 4
  %9671 = load i64, i64* %PC.i1004
  %9672 = add i64 %9671, 3
  store i64 %9672, i64* %PC.i1004
  %9673 = inttoptr i64 %9670 to i32*
  %9674 = load i32, i32* %9673
  %9675 = zext i32 %9674 to i64
  store i64 %9675, i64* %RAX.i1005, align 8
  store %struct.Memory* %loadMem_4010a8, %struct.Memory** %MEMORY
  %loadMem_4010ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %9676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9677 = getelementptr inbounds %struct.GPR, %struct.GPR* %9676, i32 0, i32 33
  %9678 = getelementptr inbounds %struct.Reg, %struct.Reg* %9677, i32 0, i32 0
  %PC.i1002 = bitcast %union.anon* %9678 to i64*
  %9679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9680 = getelementptr inbounds %struct.GPR, %struct.GPR* %9679, i32 0, i32 1
  %9681 = getelementptr inbounds %struct.Reg, %struct.Reg* %9680, i32 0, i32 0
  %RAX.i1003 = bitcast %union.anon* %9681 to i64*
  %9682 = load i64, i64* %RAX.i1003
  %9683 = load i64, i64* %PC.i1002
  %9684 = add i64 %9683, 3
  store i64 %9684, i64* %PC.i1002
  %9685 = trunc i64 %9682 to i32
  %9686 = add i32 1, %9685
  %9687 = zext i32 %9686 to i64
  store i64 %9687, i64* %RAX.i1003, align 8
  %9688 = icmp ult i32 %9686, %9685
  %9689 = icmp ult i32 %9686, 1
  %9690 = or i1 %9688, %9689
  %9691 = zext i1 %9690 to i8
  %9692 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9691, i8* %9692, align 1
  %9693 = and i32 %9686, 255
  %9694 = call i32 @llvm.ctpop.i32(i32 %9693)
  %9695 = trunc i32 %9694 to i8
  %9696 = and i8 %9695, 1
  %9697 = xor i8 %9696, 1
  %9698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9697, i8* %9698, align 1
  %9699 = xor i64 1, %9682
  %9700 = trunc i64 %9699 to i32
  %9701 = xor i32 %9700, %9686
  %9702 = lshr i32 %9701, 4
  %9703 = trunc i32 %9702 to i8
  %9704 = and i8 %9703, 1
  %9705 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9704, i8* %9705, align 1
  %9706 = icmp eq i32 %9686, 0
  %9707 = zext i1 %9706 to i8
  %9708 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9707, i8* %9708, align 1
  %9709 = lshr i32 %9686, 31
  %9710 = trunc i32 %9709 to i8
  %9711 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9710, i8* %9711, align 1
  %9712 = lshr i32 %9685, 31
  %9713 = xor i32 %9709, %9712
  %9714 = add i32 %9713, %9709
  %9715 = icmp eq i32 %9714, 2
  %9716 = zext i1 %9715 to i8
  %9717 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9716, i8* %9717, align 1
  store %struct.Memory* %loadMem_4010ab, %struct.Memory** %MEMORY
  %loadMem_4010ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %9718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9719 = getelementptr inbounds %struct.GPR, %struct.GPR* %9718, i32 0, i32 33
  %9720 = getelementptr inbounds %struct.Reg, %struct.Reg* %9719, i32 0, i32 0
  %PC.i999 = bitcast %union.anon* %9720 to i64*
  %9721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9722 = getelementptr inbounds %struct.GPR, %struct.GPR* %9721, i32 0, i32 1
  %9723 = getelementptr inbounds %struct.Reg, %struct.Reg* %9722, i32 0, i32 0
  %EAX.i1000 = bitcast %union.anon* %9723 to i32*
  %9724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9725 = getelementptr inbounds %struct.GPR, %struct.GPR* %9724, i32 0, i32 15
  %9726 = getelementptr inbounds %struct.Reg, %struct.Reg* %9725, i32 0, i32 0
  %RBP.i1001 = bitcast %union.anon* %9726 to i64*
  %9727 = load i64, i64* %RBP.i1001
  %9728 = sub i64 %9727, 4
  %9729 = load i32, i32* %EAX.i1000
  %9730 = zext i32 %9729 to i64
  %9731 = load i64, i64* %PC.i999
  %9732 = add i64 %9731, 3
  store i64 %9732, i64* %PC.i999
  %9733 = inttoptr i64 %9728 to i32*
  store i32 %9729, i32* %9733
  store %struct.Memory* %loadMem_4010ae, %struct.Memory** %MEMORY
  %loadMem_4010b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9735 = getelementptr inbounds %struct.GPR, %struct.GPR* %9734, i32 0, i32 33
  %9736 = getelementptr inbounds %struct.Reg, %struct.Reg* %9735, i32 0, i32 0
  %PC.i998 = bitcast %union.anon* %9736 to i64*
  %9737 = load i64, i64* %PC.i998
  %9738 = add i64 %9737, -83
  %9739 = load i64, i64* %PC.i998
  %9740 = add i64 %9739, 5
  store i64 %9740, i64* %PC.i998
  %9741 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9738, i64* %9741, align 8
  store %struct.Memory* %loadMem_4010b1, %struct.Memory** %MEMORY
  br label %block_.L_40105e

block_.L_4010b6:                                  ; preds = %block_.L_40105e
  %loadMem_4010b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9743 = getelementptr inbounds %struct.GPR, %struct.GPR* %9742, i32 0, i32 33
  %9744 = getelementptr inbounds %struct.Reg, %struct.Reg* %9743, i32 0, i32 0
  %PC.i996 = bitcast %union.anon* %9744 to i64*
  %9745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9746 = getelementptr inbounds %struct.GPR, %struct.GPR* %9745, i32 0, i32 15
  %9747 = getelementptr inbounds %struct.Reg, %struct.Reg* %9746, i32 0, i32 0
  %RBP.i997 = bitcast %union.anon* %9747 to i64*
  %9748 = load i64, i64* %RBP.i997
  %9749 = sub i64 %9748, 4
  %9750 = load i64, i64* %PC.i996
  %9751 = add i64 %9750, 7
  store i64 %9751, i64* %PC.i996
  %9752 = inttoptr i64 %9749 to i32*
  store i32 1, i32* %9752
  store %struct.Memory* %loadMem_4010b6, %struct.Memory** %MEMORY
  br label %block_.L_4010bd

block_.L_4010bd:                                  ; preds = %block_4010d1, %block_.L_4010b6
  %loadMem_4010bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %9753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9754 = getelementptr inbounds %struct.GPR, %struct.GPR* %9753, i32 0, i32 33
  %9755 = getelementptr inbounds %struct.Reg, %struct.Reg* %9754, i32 0, i32 0
  %PC.i993 = bitcast %union.anon* %9755 to i64*
  %9756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9757 = getelementptr inbounds %struct.GPR, %struct.GPR* %9756, i32 0, i32 1
  %9758 = getelementptr inbounds %struct.Reg, %struct.Reg* %9757, i32 0, i32 0
  %RAX.i994 = bitcast %union.anon* %9758 to i64*
  %9759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9760 = getelementptr inbounds %struct.GPR, %struct.GPR* %9759, i32 0, i32 15
  %9761 = getelementptr inbounds %struct.Reg, %struct.Reg* %9760, i32 0, i32 0
  %RBP.i995 = bitcast %union.anon* %9761 to i64*
  %9762 = load i64, i64* %RBP.i995
  %9763 = sub i64 %9762, 4
  %9764 = load i64, i64* %PC.i993
  %9765 = add i64 %9764, 3
  store i64 %9765, i64* %PC.i993
  %9766 = inttoptr i64 %9763 to i32*
  %9767 = load i32, i32* %9766
  %9768 = zext i32 %9767 to i64
  store i64 %9768, i64* %RAX.i994, align 8
  store %struct.Memory* %loadMem_4010bd, %struct.Memory** %MEMORY
  %loadMem_4010c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9769 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9770 = getelementptr inbounds %struct.GPR, %struct.GPR* %9769, i32 0, i32 33
  %9771 = getelementptr inbounds %struct.Reg, %struct.Reg* %9770, i32 0, i32 0
  %PC.i990 = bitcast %union.anon* %9771 to i64*
  %9772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9773 = getelementptr inbounds %struct.GPR, %struct.GPR* %9772, i32 0, i32 5
  %9774 = getelementptr inbounds %struct.Reg, %struct.Reg* %9773, i32 0, i32 0
  %RCX.i991 = bitcast %union.anon* %9774 to i64*
  %9775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9776 = getelementptr inbounds %struct.GPR, %struct.GPR* %9775, i32 0, i32 15
  %9777 = getelementptr inbounds %struct.Reg, %struct.Reg* %9776, i32 0, i32 0
  %RBP.i992 = bitcast %union.anon* %9777 to i64*
  %9778 = load i64, i64* %RBP.i992
  %9779 = sub i64 %9778, 12
  %9780 = load i64, i64* %PC.i990
  %9781 = add i64 %9780, 4
  store i64 %9781, i64* %PC.i990
  %9782 = inttoptr i64 %9779 to i32*
  %9783 = load i32, i32* %9782
  %9784 = sext i32 %9783 to i64
  store i64 %9784, i64* %RCX.i991, align 8
  store %struct.Memory* %loadMem_4010c0, %struct.Memory** %MEMORY
  %loadMem_4010c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9786 = getelementptr inbounds %struct.GPR, %struct.GPR* %9785, i32 0, i32 33
  %9787 = getelementptr inbounds %struct.Reg, %struct.Reg* %9786, i32 0, i32 0
  %PC.i986 = bitcast %union.anon* %9787 to i64*
  %9788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9789 = getelementptr inbounds %struct.GPR, %struct.GPR* %9788, i32 0, i32 1
  %9790 = getelementptr inbounds %struct.Reg, %struct.Reg* %9789, i32 0, i32 0
  %EAX.i987 = bitcast %union.anon* %9790 to i32*
  %9791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9792 = getelementptr inbounds %struct.GPR, %struct.GPR* %9791, i32 0, i32 5
  %9793 = getelementptr inbounds %struct.Reg, %struct.Reg* %9792, i32 0, i32 0
  %RCX.i988 = bitcast %union.anon* %9793 to i64*
  %9794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9795 = getelementptr inbounds %struct.GPR, %struct.GPR* %9794, i32 0, i32 15
  %9796 = getelementptr inbounds %struct.Reg, %struct.Reg* %9795, i32 0, i32 0
  %RBP.i989 = bitcast %union.anon* %9796 to i64*
  %9797 = load i32, i32* %EAX.i987
  %9798 = zext i32 %9797 to i64
  %9799 = load i64, i64* %RBP.i989
  %9800 = load i64, i64* %RCX.i988
  %9801 = mul i64 %9800, 4
  %9802 = add i64 %9799, -1328
  %9803 = add i64 %9802, %9801
  %9804 = load i64, i64* %PC.i986
  %9805 = add i64 %9804, 7
  store i64 %9805, i64* %PC.i986
  %9806 = inttoptr i64 %9803 to i32*
  %9807 = load i32, i32* %9806
  %9808 = sub i32 %9797, %9807
  %9809 = icmp ult i32 %9797, %9807
  %9810 = zext i1 %9809 to i8
  %9811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9810, i8* %9811, align 1
  %9812 = and i32 %9808, 255
  %9813 = call i32 @llvm.ctpop.i32(i32 %9812)
  %9814 = trunc i32 %9813 to i8
  %9815 = and i8 %9814, 1
  %9816 = xor i8 %9815, 1
  %9817 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9816, i8* %9817, align 1
  %9818 = xor i32 %9807, %9797
  %9819 = xor i32 %9818, %9808
  %9820 = lshr i32 %9819, 4
  %9821 = trunc i32 %9820 to i8
  %9822 = and i8 %9821, 1
  %9823 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9822, i8* %9823, align 1
  %9824 = icmp eq i32 %9808, 0
  %9825 = zext i1 %9824 to i8
  %9826 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9825, i8* %9826, align 1
  %9827 = lshr i32 %9808, 31
  %9828 = trunc i32 %9827 to i8
  %9829 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9828, i8* %9829, align 1
  %9830 = lshr i32 %9797, 31
  %9831 = lshr i32 %9807, 31
  %9832 = xor i32 %9831, %9830
  %9833 = xor i32 %9827, %9830
  %9834 = add i32 %9833, %9832
  %9835 = icmp eq i32 %9834, 2
  %9836 = zext i1 %9835 to i8
  %9837 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9836, i8* %9837, align 1
  store %struct.Memory* %loadMem_4010c4, %struct.Memory** %MEMORY
  %loadMem_4010cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %9838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9839 = getelementptr inbounds %struct.GPR, %struct.GPR* %9838, i32 0, i32 33
  %9840 = getelementptr inbounds %struct.Reg, %struct.Reg* %9839, i32 0, i32 0
  %PC.i985 = bitcast %union.anon* %9840 to i64*
  %9841 = load i64, i64* %PC.i985
  %9842 = add i64 %9841, 56
  %9843 = load i64, i64* %PC.i985
  %9844 = add i64 %9843, 6
  %9845 = load i64, i64* %PC.i985
  %9846 = add i64 %9845, 6
  store i64 %9846, i64* %PC.i985
  %9847 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9848 = load i8, i8* %9847, align 1
  %9849 = icmp eq i8 %9848, 0
  %9850 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9851 = load i8, i8* %9850, align 1
  %9852 = icmp ne i8 %9851, 0
  %9853 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %9854 = load i8, i8* %9853, align 1
  %9855 = icmp ne i8 %9854, 0
  %9856 = xor i1 %9852, %9855
  %9857 = xor i1 %9856, true
  %9858 = and i1 %9849, %9857
  %9859 = zext i1 %9858 to i8
  store i8 %9859, i8* %BRANCH_TAKEN, align 1
  %9860 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9861 = select i1 %9858, i64 %9842, i64 %9844
  store i64 %9861, i64* %9860, align 8
  store %struct.Memory* %loadMem_4010cb, %struct.Memory** %MEMORY
  %loadBr_4010cb = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4010cb = icmp eq i8 %loadBr_4010cb, 1
  br i1 %cmpBr_4010cb, label %block_.L_401103, label %block_4010d1

block_4010d1:                                     ; preds = %block_.L_4010bd
  %loadMem_4010d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9863 = getelementptr inbounds %struct.GPR, %struct.GPR* %9862, i32 0, i32 33
  %9864 = getelementptr inbounds %struct.Reg, %struct.Reg* %9863, i32 0, i32 0
  %PC.i982 = bitcast %union.anon* %9864 to i64*
  %9865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9866 = getelementptr inbounds %struct.GPR, %struct.GPR* %9865, i32 0, i32 1
  %9867 = getelementptr inbounds %struct.Reg, %struct.Reg* %9866, i32 0, i32 0
  %RAX.i983 = bitcast %union.anon* %9867 to i64*
  %9868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9869 = getelementptr inbounds %struct.GPR, %struct.GPR* %9868, i32 0, i32 15
  %9870 = getelementptr inbounds %struct.Reg, %struct.Reg* %9869, i32 0, i32 0
  %RBP.i984 = bitcast %union.anon* %9870 to i64*
  %9871 = load i64, i64* %RBP.i984
  %9872 = sub i64 %9871, 1168
  %9873 = load i64, i64* %PC.i982
  %9874 = add i64 %9873, 7
  store i64 %9874, i64* %PC.i982
  store i64 %9872, i64* %RAX.i983, align 8
  store %struct.Memory* %loadMem_4010d1, %struct.Memory** %MEMORY
  %loadMem_4010d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9876 = getelementptr inbounds %struct.GPR, %struct.GPR* %9875, i32 0, i32 33
  %9877 = getelementptr inbounds %struct.Reg, %struct.Reg* %9876, i32 0, i32 0
  %PC.i979 = bitcast %union.anon* %9877 to i64*
  %9878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9879 = getelementptr inbounds %struct.GPR, %struct.GPR* %9878, i32 0, i32 5
  %9880 = getelementptr inbounds %struct.Reg, %struct.Reg* %9879, i32 0, i32 0
  %RCX.i980 = bitcast %union.anon* %9880 to i64*
  %9881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9882 = getelementptr inbounds %struct.GPR, %struct.GPR* %9881, i32 0, i32 15
  %9883 = getelementptr inbounds %struct.Reg, %struct.Reg* %9882, i32 0, i32 0
  %RBP.i981 = bitcast %union.anon* %9883 to i64*
  %9884 = load i64, i64* %RBP.i981
  %9885 = sub i64 %9884, 12
  %9886 = load i64, i64* %PC.i979
  %9887 = add i64 %9886, 4
  store i64 %9887, i64* %PC.i979
  %9888 = inttoptr i64 %9885 to i32*
  %9889 = load i32, i32* %9888
  %9890 = sext i32 %9889 to i64
  store i64 %9890, i64* %RCX.i980, align 8
  store %struct.Memory* %loadMem_4010d8, %struct.Memory** %MEMORY
  %loadMem_4010dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %9891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9892 = getelementptr inbounds %struct.GPR, %struct.GPR* %9891, i32 0, i32 33
  %9893 = getelementptr inbounds %struct.Reg, %struct.Reg* %9892, i32 0, i32 0
  %PC.i977 = bitcast %union.anon* %9893 to i64*
  %9894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9895 = getelementptr inbounds %struct.GPR, %struct.GPR* %9894, i32 0, i32 5
  %9896 = getelementptr inbounds %struct.Reg, %struct.Reg* %9895, i32 0, i32 0
  %RCX.i978 = bitcast %union.anon* %9896 to i64*
  %9897 = load i64, i64* %RCX.i978
  %9898 = load i64, i64* %PC.i977
  %9899 = add i64 %9898, 4
  store i64 %9899, i64* %PC.i977
  %9900 = shl i64 %9897, 5
  %9901 = icmp slt i64 %9900, 0
  %9902 = shl i64 %9900, 1
  store i64 %9902, i64* %RCX.i978, align 8
  %9903 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %9904 = zext i1 %9901 to i8
  store i8 %9904, i8* %9903, align 1
  %9905 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %9906 = trunc i64 %9902 to i32
  %9907 = and i32 %9906, 254
  %9908 = call i32 @llvm.ctpop.i32(i32 %9907)
  %9909 = trunc i32 %9908 to i8
  %9910 = and i8 %9909, 1
  %9911 = xor i8 %9910, 1
  store i8 %9911, i8* %9905, align 1
  %9912 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9912, align 1
  %9913 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9914 = icmp eq i64 %9902, 0
  %9915 = zext i1 %9914 to i8
  store i8 %9915, i8* %9913, align 1
  %9916 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9917 = lshr i64 %9902, 63
  %9918 = trunc i64 %9917 to i8
  store i8 %9918, i8* %9916, align 1
  %9919 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9919, align 1
  store %struct.Memory* %loadMem_4010dc, %struct.Memory** %MEMORY
  %loadMem_4010e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9921 = getelementptr inbounds %struct.GPR, %struct.GPR* %9920, i32 0, i32 33
  %9922 = getelementptr inbounds %struct.Reg, %struct.Reg* %9921, i32 0, i32 0
  %PC.i974 = bitcast %union.anon* %9922 to i64*
  %9923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9924 = getelementptr inbounds %struct.GPR, %struct.GPR* %9923, i32 0, i32 1
  %9925 = getelementptr inbounds %struct.Reg, %struct.Reg* %9924, i32 0, i32 0
  %RAX.i975 = bitcast %union.anon* %9925 to i64*
  %9926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9927 = getelementptr inbounds %struct.GPR, %struct.GPR* %9926, i32 0, i32 5
  %9928 = getelementptr inbounds %struct.Reg, %struct.Reg* %9927, i32 0, i32 0
  %RCX.i976 = bitcast %union.anon* %9928 to i64*
  %9929 = load i64, i64* %RAX.i975
  %9930 = load i64, i64* %RCX.i976
  %9931 = load i64, i64* %PC.i974
  %9932 = add i64 %9931, 3
  store i64 %9932, i64* %PC.i974
  %9933 = add i64 %9930, %9929
  store i64 %9933, i64* %RAX.i975, align 8
  %9934 = icmp ult i64 %9933, %9929
  %9935 = icmp ult i64 %9933, %9930
  %9936 = or i1 %9934, %9935
  %9937 = zext i1 %9936 to i8
  %9938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9937, i8* %9938, align 1
  %9939 = trunc i64 %9933 to i32
  %9940 = and i32 %9939, 255
  %9941 = call i32 @llvm.ctpop.i32(i32 %9940)
  %9942 = trunc i32 %9941 to i8
  %9943 = and i8 %9942, 1
  %9944 = xor i8 %9943, 1
  %9945 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9944, i8* %9945, align 1
  %9946 = xor i64 %9930, %9929
  %9947 = xor i64 %9946, %9933
  %9948 = lshr i64 %9947, 4
  %9949 = trunc i64 %9948 to i8
  %9950 = and i8 %9949, 1
  %9951 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9950, i8* %9951, align 1
  %9952 = icmp eq i64 %9933, 0
  %9953 = zext i1 %9952 to i8
  %9954 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9953, i8* %9954, align 1
  %9955 = lshr i64 %9933, 63
  %9956 = trunc i64 %9955 to i8
  %9957 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9956, i8* %9957, align 1
  %9958 = lshr i64 %9929, 63
  %9959 = lshr i64 %9930, 63
  %9960 = xor i64 %9955, %9958
  %9961 = xor i64 %9955, %9959
  %9962 = add i64 %9960, %9961
  %9963 = icmp eq i64 %9962, 2
  %9964 = zext i1 %9963 to i8
  %9965 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9964, i8* %9965, align 1
  store %struct.Memory* %loadMem_4010e0, %struct.Memory** %MEMORY
  %loadMem_4010e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9967 = getelementptr inbounds %struct.GPR, %struct.GPR* %9966, i32 0, i32 33
  %9968 = getelementptr inbounds %struct.Reg, %struct.Reg* %9967, i32 0, i32 0
  %PC.i971 = bitcast %union.anon* %9968 to i64*
  %9969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9970 = getelementptr inbounds %struct.GPR, %struct.GPR* %9969, i32 0, i32 5
  %9971 = getelementptr inbounds %struct.Reg, %struct.Reg* %9970, i32 0, i32 0
  %RCX.i972 = bitcast %union.anon* %9971 to i64*
  %9972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9973 = getelementptr inbounds %struct.GPR, %struct.GPR* %9972, i32 0, i32 15
  %9974 = getelementptr inbounds %struct.Reg, %struct.Reg* %9973, i32 0, i32 0
  %RBP.i973 = bitcast %union.anon* %9974 to i64*
  %9975 = load i64, i64* %RBP.i973
  %9976 = sub i64 %9975, 4
  %9977 = load i64, i64* %PC.i971
  %9978 = add i64 %9977, 4
  store i64 %9978, i64* %PC.i971
  %9979 = inttoptr i64 %9976 to i32*
  %9980 = load i32, i32* %9979
  %9981 = sext i32 %9980 to i64
  store i64 %9981, i64* %RCX.i972, align 8
  store %struct.Memory* %loadMem_4010e3, %struct.Memory** %MEMORY
  %loadMem_4010e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9983 = getelementptr inbounds %struct.GPR, %struct.GPR* %9982, i32 0, i32 33
  %9984 = getelementptr inbounds %struct.Reg, %struct.Reg* %9983, i32 0, i32 0
  %PC.i967 = bitcast %union.anon* %9984 to i64*
  %9985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9986 = getelementptr inbounds %struct.GPR, %struct.GPR* %9985, i32 0, i32 1
  %9987 = getelementptr inbounds %struct.Reg, %struct.Reg* %9986, i32 0, i32 0
  %RAX.i968 = bitcast %union.anon* %9987 to i64*
  %9988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9989 = getelementptr inbounds %struct.GPR, %struct.GPR* %9988, i32 0, i32 5
  %9990 = getelementptr inbounds %struct.Reg, %struct.Reg* %9989, i32 0, i32 0
  %RCX.i969 = bitcast %union.anon* %9990 to i64*
  %9991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9992 = getelementptr inbounds %struct.GPR, %struct.GPR* %9991, i32 0, i32 7
  %9993 = getelementptr inbounds %struct.Reg, %struct.Reg* %9992, i32 0, i32 0
  %RDX.i970 = bitcast %union.anon* %9993 to i64*
  %9994 = load i64, i64* %RAX.i968
  %9995 = load i64, i64* %RCX.i969
  %9996 = mul i64 %9995, 4
  %9997 = add i64 %9996, %9994
  %9998 = load i64, i64* %PC.i967
  %9999 = add i64 %9998, 3
  store i64 %9999, i64* %PC.i967
  %10000 = inttoptr i64 %9997 to i32*
  %10001 = load i32, i32* %10000
  %10002 = zext i32 %10001 to i64
  store i64 %10002, i64* %RDX.i970, align 8
  store %struct.Memory* %loadMem_4010e7, %struct.Memory** %MEMORY
  %loadMem_4010ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %10003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10004 = getelementptr inbounds %struct.GPR, %struct.GPR* %10003, i32 0, i32 33
  %10005 = getelementptr inbounds %struct.Reg, %struct.Reg* %10004, i32 0, i32 0
  %PC.i964 = bitcast %union.anon* %10005 to i64*
  %10006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10007 = getelementptr inbounds %struct.GPR, %struct.GPR* %10006, i32 0, i32 1
  %10008 = getelementptr inbounds %struct.Reg, %struct.Reg* %10007, i32 0, i32 0
  %RAX.i965 = bitcast %union.anon* %10008 to i64*
  %10009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10010 = getelementptr inbounds %struct.GPR, %struct.GPR* %10009, i32 0, i32 15
  %10011 = getelementptr inbounds %struct.Reg, %struct.Reg* %10010, i32 0, i32 0
  %RBP.i966 = bitcast %union.anon* %10011 to i64*
  %10012 = load i64, i64* %RBP.i966
  %10013 = sub i64 %10012, 4
  %10014 = load i64, i64* %PC.i964
  %10015 = add i64 %10014, 4
  store i64 %10015, i64* %PC.i964
  %10016 = inttoptr i64 %10013 to i32*
  %10017 = load i32, i32* %10016
  %10018 = sext i32 %10017 to i64
  store i64 %10018, i64* %RAX.i965, align 8
  store %struct.Memory* %loadMem_4010ea, %struct.Memory** %MEMORY
  %loadMem_4010ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %10019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10020 = getelementptr inbounds %struct.GPR, %struct.GPR* %10019, i32 0, i32 33
  %10021 = getelementptr inbounds %struct.Reg, %struct.Reg* %10020, i32 0, i32 0
  %PC.i960 = bitcast %union.anon* %10021 to i64*
  %10022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10023 = getelementptr inbounds %struct.GPR, %struct.GPR* %10022, i32 0, i32 7
  %10024 = getelementptr inbounds %struct.Reg, %struct.Reg* %10023, i32 0, i32 0
  %EDX.i961 = bitcast %union.anon* %10024 to i32*
  %10025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10026 = getelementptr inbounds %struct.GPR, %struct.GPR* %10025, i32 0, i32 1
  %10027 = getelementptr inbounds %struct.Reg, %struct.Reg* %10026, i32 0, i32 0
  %RAX.i962 = bitcast %union.anon* %10027 to i64*
  %10028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10029 = getelementptr inbounds %struct.GPR, %struct.GPR* %10028, i32 0, i32 15
  %10030 = getelementptr inbounds %struct.Reg, %struct.Reg* %10029, i32 0, i32 0
  %RBP.i963 = bitcast %union.anon* %10030 to i64*
  %10031 = load i64, i64* %RBP.i963
  %10032 = load i64, i64* %RAX.i962
  %10033 = mul i64 %10032, 4
  %10034 = add i64 %10031, -2688
  %10035 = add i64 %10034, %10033
  %10036 = load i32, i32* %EDX.i961
  %10037 = zext i32 %10036 to i64
  %10038 = load i64, i64* %PC.i960
  %10039 = add i64 %10038, 7
  store i64 %10039, i64* %PC.i960
  %10040 = inttoptr i64 %10035 to i32*
  store i32 %10036, i32* %10040
  store %struct.Memory* %loadMem_4010ee, %struct.Memory** %MEMORY
  %loadMem_4010f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10042 = getelementptr inbounds %struct.GPR, %struct.GPR* %10041, i32 0, i32 33
  %10043 = getelementptr inbounds %struct.Reg, %struct.Reg* %10042, i32 0, i32 0
  %PC.i957 = bitcast %union.anon* %10043 to i64*
  %10044 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10045 = getelementptr inbounds %struct.GPR, %struct.GPR* %10044, i32 0, i32 1
  %10046 = getelementptr inbounds %struct.Reg, %struct.Reg* %10045, i32 0, i32 0
  %RAX.i958 = bitcast %union.anon* %10046 to i64*
  %10047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10048 = getelementptr inbounds %struct.GPR, %struct.GPR* %10047, i32 0, i32 15
  %10049 = getelementptr inbounds %struct.Reg, %struct.Reg* %10048, i32 0, i32 0
  %RBP.i959 = bitcast %union.anon* %10049 to i64*
  %10050 = load i64, i64* %RBP.i959
  %10051 = sub i64 %10050, 4
  %10052 = load i64, i64* %PC.i957
  %10053 = add i64 %10052, 3
  store i64 %10053, i64* %PC.i957
  %10054 = inttoptr i64 %10051 to i32*
  %10055 = load i32, i32* %10054
  %10056 = zext i32 %10055 to i64
  store i64 %10056, i64* %RAX.i958, align 8
  store %struct.Memory* %loadMem_4010f5, %struct.Memory** %MEMORY
  %loadMem_4010f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10058 = getelementptr inbounds %struct.GPR, %struct.GPR* %10057, i32 0, i32 33
  %10059 = getelementptr inbounds %struct.Reg, %struct.Reg* %10058, i32 0, i32 0
  %PC.i955 = bitcast %union.anon* %10059 to i64*
  %10060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10061 = getelementptr inbounds %struct.GPR, %struct.GPR* %10060, i32 0, i32 1
  %10062 = getelementptr inbounds %struct.Reg, %struct.Reg* %10061, i32 0, i32 0
  %RAX.i956 = bitcast %union.anon* %10062 to i64*
  %10063 = load i64, i64* %RAX.i956
  %10064 = load i64, i64* %PC.i955
  %10065 = add i64 %10064, 3
  store i64 %10065, i64* %PC.i955
  %10066 = trunc i64 %10063 to i32
  %10067 = add i32 1, %10066
  %10068 = zext i32 %10067 to i64
  store i64 %10068, i64* %RAX.i956, align 8
  %10069 = icmp ult i32 %10067, %10066
  %10070 = icmp ult i32 %10067, 1
  %10071 = or i1 %10069, %10070
  %10072 = zext i1 %10071 to i8
  %10073 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10072, i8* %10073, align 1
  %10074 = and i32 %10067, 255
  %10075 = call i32 @llvm.ctpop.i32(i32 %10074)
  %10076 = trunc i32 %10075 to i8
  %10077 = and i8 %10076, 1
  %10078 = xor i8 %10077, 1
  %10079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10078, i8* %10079, align 1
  %10080 = xor i64 1, %10063
  %10081 = trunc i64 %10080 to i32
  %10082 = xor i32 %10081, %10067
  %10083 = lshr i32 %10082, 4
  %10084 = trunc i32 %10083 to i8
  %10085 = and i8 %10084, 1
  %10086 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10085, i8* %10086, align 1
  %10087 = icmp eq i32 %10067, 0
  %10088 = zext i1 %10087 to i8
  %10089 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10088, i8* %10089, align 1
  %10090 = lshr i32 %10067, 31
  %10091 = trunc i32 %10090 to i8
  %10092 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10091, i8* %10092, align 1
  %10093 = lshr i32 %10066, 31
  %10094 = xor i32 %10090, %10093
  %10095 = add i32 %10094, %10090
  %10096 = icmp eq i32 %10095, 2
  %10097 = zext i1 %10096 to i8
  %10098 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10097, i8* %10098, align 1
  store %struct.Memory* %loadMem_4010f8, %struct.Memory** %MEMORY
  %loadMem_4010fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %10099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10100 = getelementptr inbounds %struct.GPR, %struct.GPR* %10099, i32 0, i32 33
  %10101 = getelementptr inbounds %struct.Reg, %struct.Reg* %10100, i32 0, i32 0
  %PC.i952 = bitcast %union.anon* %10101 to i64*
  %10102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10103 = getelementptr inbounds %struct.GPR, %struct.GPR* %10102, i32 0, i32 1
  %10104 = getelementptr inbounds %struct.Reg, %struct.Reg* %10103, i32 0, i32 0
  %EAX.i953 = bitcast %union.anon* %10104 to i32*
  %10105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10106 = getelementptr inbounds %struct.GPR, %struct.GPR* %10105, i32 0, i32 15
  %10107 = getelementptr inbounds %struct.Reg, %struct.Reg* %10106, i32 0, i32 0
  %RBP.i954 = bitcast %union.anon* %10107 to i64*
  %10108 = load i64, i64* %RBP.i954
  %10109 = sub i64 %10108, 4
  %10110 = load i32, i32* %EAX.i953
  %10111 = zext i32 %10110 to i64
  %10112 = load i64, i64* %PC.i952
  %10113 = add i64 %10112, 3
  store i64 %10113, i64* %PC.i952
  %10114 = inttoptr i64 %10109 to i32*
  store i32 %10110, i32* %10114
  store %struct.Memory* %loadMem_4010fb, %struct.Memory** %MEMORY
  %loadMem_4010fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %10115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10116 = getelementptr inbounds %struct.GPR, %struct.GPR* %10115, i32 0, i32 33
  %10117 = getelementptr inbounds %struct.Reg, %struct.Reg* %10116, i32 0, i32 0
  %PC.i951 = bitcast %union.anon* %10117 to i64*
  %10118 = load i64, i64* %PC.i951
  %10119 = add i64 %10118, -65
  %10120 = load i64, i64* %PC.i951
  %10121 = add i64 %10120, 5
  store i64 %10121, i64* %PC.i951
  %10122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10119, i64* %10122, align 8
  store %struct.Memory* %loadMem_4010fe, %struct.Memory** %MEMORY
  br label %block_.L_4010bd

block_.L_401103:                                  ; preds = %block_.L_4010bd
  %loadMem_401103 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10124 = getelementptr inbounds %struct.GPR, %struct.GPR* %10123, i32 0, i32 33
  %10125 = getelementptr inbounds %struct.Reg, %struct.Reg* %10124, i32 0, i32 0
  %PC.i949 = bitcast %union.anon* %10125 to i64*
  %10126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10127 = getelementptr inbounds %struct.GPR, %struct.GPR* %10126, i32 0, i32 15
  %10128 = getelementptr inbounds %struct.Reg, %struct.Reg* %10127, i32 0, i32 0
  %RBP.i950 = bitcast %union.anon* %10128 to i64*
  %10129 = load i64, i64* %RBP.i950
  %10130 = sub i64 %10129, 1492
  %10131 = load i64, i64* %PC.i949
  %10132 = add i64 %10131, 10
  store i64 %10132, i64* %PC.i949
  %10133 = inttoptr i64 %10130 to i32*
  store i32 0, i32* %10133
  store %struct.Memory* %loadMem_401103, %struct.Memory** %MEMORY
  %loadMem_40110d = load %struct.Memory*, %struct.Memory** %MEMORY
  %10134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10135 = getelementptr inbounds %struct.GPR, %struct.GPR* %10134, i32 0, i32 33
  %10136 = getelementptr inbounds %struct.Reg, %struct.Reg* %10135, i32 0, i32 0
  %PC.i947 = bitcast %union.anon* %10136 to i64*
  %10137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10138 = getelementptr inbounds %struct.GPR, %struct.GPR* %10137, i32 0, i32 15
  %10139 = getelementptr inbounds %struct.Reg, %struct.Reg* %10138, i32 0, i32 0
  %RBP.i948 = bitcast %union.anon* %10139 to i64*
  %10140 = load i64, i64* %RBP.i948
  %10141 = sub i64 %10140, 4
  %10142 = load i64, i64* %PC.i947
  %10143 = add i64 %10142, 7
  store i64 %10143, i64* %PC.i947
  %10144 = inttoptr i64 %10141 to i32*
  store i32 1, i32* %10144
  store %struct.Memory* %loadMem_40110d, %struct.Memory** %MEMORY
  br label %block_.L_401114

block_.L_401114:                                  ; preds = %block_.L_4011f5, %block_.L_401103
  %loadMem_401114 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10146 = getelementptr inbounds %struct.GPR, %struct.GPR* %10145, i32 0, i32 33
  %10147 = getelementptr inbounds %struct.Reg, %struct.Reg* %10146, i32 0, i32 0
  %PC.i945 = bitcast %union.anon* %10147 to i64*
  %10148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10149 = getelementptr inbounds %struct.GPR, %struct.GPR* %10148, i32 0, i32 15
  %10150 = getelementptr inbounds %struct.Reg, %struct.Reg* %10149, i32 0, i32 0
  %RBP.i946 = bitcast %union.anon* %10150 to i64*
  %10151 = load i64, i64* %RBP.i946
  %10152 = sub i64 %10151, 4
  %10153 = load i64, i64* %PC.i945
  %10154 = add i64 %10153, 7
  store i64 %10154, i64* %PC.i945
  %10155 = inttoptr i64 %10152 to i32*
  %10156 = load i32, i32* %10155
  %10157 = sub i32 %10156, 255
  %10158 = icmp ult i32 %10156, 255
  %10159 = zext i1 %10158 to i8
  %10160 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10159, i8* %10160, align 1
  %10161 = and i32 %10157, 255
  %10162 = call i32 @llvm.ctpop.i32(i32 %10161)
  %10163 = trunc i32 %10162 to i8
  %10164 = and i8 %10163, 1
  %10165 = xor i8 %10164, 1
  %10166 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10165, i8* %10166, align 1
  %10167 = xor i32 %10156, 255
  %10168 = xor i32 %10167, %10157
  %10169 = lshr i32 %10168, 4
  %10170 = trunc i32 %10169 to i8
  %10171 = and i8 %10170, 1
  %10172 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10171, i8* %10172, align 1
  %10173 = icmp eq i32 %10157, 0
  %10174 = zext i1 %10173 to i8
  %10175 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10174, i8* %10175, align 1
  %10176 = lshr i32 %10157, 31
  %10177 = trunc i32 %10176 to i8
  %10178 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10177, i8* %10178, align 1
  %10179 = lshr i32 %10156, 31
  %10180 = xor i32 %10176, %10179
  %10181 = add i32 %10180, %10179
  %10182 = icmp eq i32 %10181, 2
  %10183 = zext i1 %10182 to i8
  %10184 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10183, i8* %10184, align 1
  store %struct.Memory* %loadMem_401114, %struct.Memory** %MEMORY
  %loadMem_40111b = load %struct.Memory*, %struct.Memory** %MEMORY
  %10185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10186 = getelementptr inbounds %struct.GPR, %struct.GPR* %10185, i32 0, i32 33
  %10187 = getelementptr inbounds %struct.Reg, %struct.Reg* %10186, i32 0, i32 0
  %PC.i944 = bitcast %union.anon* %10187 to i64*
  %10188 = load i64, i64* %PC.i944
  %10189 = add i64 %10188, 232
  %10190 = load i64, i64* %PC.i944
  %10191 = add i64 %10190, 6
  %10192 = load i64, i64* %PC.i944
  %10193 = add i64 %10192, 6
  store i64 %10193, i64* %PC.i944
  %10194 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10195 = load i8, i8* %10194, align 1
  %10196 = icmp eq i8 %10195, 0
  %10197 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10198 = load i8, i8* %10197, align 1
  %10199 = icmp ne i8 %10198, 0
  %10200 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %10201 = load i8, i8* %10200, align 1
  %10202 = icmp ne i8 %10201, 0
  %10203 = xor i1 %10199, %10202
  %10204 = xor i1 %10203, true
  %10205 = and i1 %10196, %10204
  %10206 = zext i1 %10205 to i8
  store i8 %10206, i8* %BRANCH_TAKEN, align 1
  %10207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10208 = select i1 %10205, i64 %10189, i64 %10191
  store i64 %10208, i64* %10207, align 8
  store %struct.Memory* %loadMem_40111b, %struct.Memory** %MEMORY
  %loadBr_40111b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40111b = icmp eq i8 %loadBr_40111b, 1
  br i1 %cmpBr_40111b, label %block_.L_401203, label %block_401121

block_401121:                                     ; preds = %block_.L_401114
  %loadMem_401121 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10210 = getelementptr inbounds %struct.GPR, %struct.GPR* %10209, i32 0, i32 33
  %10211 = getelementptr inbounds %struct.Reg, %struct.Reg* %10210, i32 0, i32 0
  %PC.i942 = bitcast %union.anon* %10211 to i64*
  %10212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10213 = getelementptr inbounds %struct.GPR, %struct.GPR* %10212, i32 0, i32 15
  %10214 = getelementptr inbounds %struct.Reg, %struct.Reg* %10213, i32 0, i32 0
  %RBP.i943 = bitcast %union.anon* %10214 to i64*
  %10215 = load i64, i64* %RBP.i943
  %10216 = sub i64 %10215, 16
  %10217 = load i64, i64* %PC.i942
  %10218 = add i64 %10217, 7
  store i64 %10218, i64* %PC.i942
  %10219 = inttoptr i64 %10216 to i32*
  store i32 1, i32* %10219
  store %struct.Memory* %loadMem_401121, %struct.Memory** %MEMORY
  %loadMem_401128 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10221 = getelementptr inbounds %struct.GPR, %struct.GPR* %10220, i32 0, i32 33
  %10222 = getelementptr inbounds %struct.Reg, %struct.Reg* %10221, i32 0, i32 0
  %PC.i940 = bitcast %union.anon* %10222 to i64*
  %10223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10224 = getelementptr inbounds %struct.GPR, %struct.GPR* %10223, i32 0, i32 15
  %10225 = getelementptr inbounds %struct.Reg, %struct.Reg* %10224, i32 0, i32 0
  %RBP.i941 = bitcast %union.anon* %10225 to i64*
  %10226 = load i64, i64* %RBP.i941
  %10227 = sub i64 %10226, 8
  %10228 = load i64, i64* %PC.i940
  %10229 = add i64 %10228, 7
  store i64 %10229, i64* %PC.i940
  %10230 = inttoptr i64 %10227 to i32*
  store i32 1, i32* %10230
  store %struct.Memory* %loadMem_401128, %struct.Memory** %MEMORY
  br label %block_.L_40112f

block_.L_40112f:                                  ; preds = %block_.L_4011a2, %block_401121
  %loadMem_40112f = load %struct.Memory*, %struct.Memory** %MEMORY
  %10231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10232 = getelementptr inbounds %struct.GPR, %struct.GPR* %10231, i32 0, i32 33
  %10233 = getelementptr inbounds %struct.Reg, %struct.Reg* %10232, i32 0, i32 0
  %PC.i937 = bitcast %union.anon* %10233 to i64*
  %10234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10235 = getelementptr inbounds %struct.GPR, %struct.GPR* %10234, i32 0, i32 1
  %10236 = getelementptr inbounds %struct.Reg, %struct.Reg* %10235, i32 0, i32 0
  %RAX.i938 = bitcast %union.anon* %10236 to i64*
  %10237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10238 = getelementptr inbounds %struct.GPR, %struct.GPR* %10237, i32 0, i32 15
  %10239 = getelementptr inbounds %struct.Reg, %struct.Reg* %10238, i32 0, i32 0
  %RBP.i939 = bitcast %union.anon* %10239 to i64*
  %10240 = load i64, i64* %RBP.i939
  %10241 = sub i64 %10240, 8
  %10242 = load i64, i64* %PC.i937
  %10243 = add i64 %10242, 3
  store i64 %10243, i64* %PC.i937
  %10244 = inttoptr i64 %10241 to i32*
  %10245 = load i32, i32* %10244
  %10246 = zext i32 %10245 to i64
  store i64 %10246, i64* %RAX.i938, align 8
  store %struct.Memory* %loadMem_40112f, %struct.Memory** %MEMORY
  %loadMem_401132 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10248 = getelementptr inbounds %struct.GPR, %struct.GPR* %10247, i32 0, i32 33
  %10249 = getelementptr inbounds %struct.Reg, %struct.Reg* %10248, i32 0, i32 0
  %PC.i934 = bitcast %union.anon* %10249 to i64*
  %10250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10251 = getelementptr inbounds %struct.GPR, %struct.GPR* %10250, i32 0, i32 5
  %10252 = getelementptr inbounds %struct.Reg, %struct.Reg* %10251, i32 0, i32 0
  %RCX.i935 = bitcast %union.anon* %10252 to i64*
  %10253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10254 = getelementptr inbounds %struct.GPR, %struct.GPR* %10253, i32 0, i32 15
  %10255 = getelementptr inbounds %struct.Reg, %struct.Reg* %10254, i32 0, i32 0
  %RBP.i936 = bitcast %union.anon* %10255 to i64*
  %10256 = load i64, i64* %RBP.i936
  %10257 = sub i64 %10256, 12
  %10258 = load i64, i64* %PC.i934
  %10259 = add i64 %10258, 4
  store i64 %10259, i64* %PC.i934
  %10260 = inttoptr i64 %10257 to i32*
  %10261 = load i32, i32* %10260
  %10262 = sext i32 %10261 to i64
  store i64 %10262, i64* %RCX.i935, align 8
  store %struct.Memory* %loadMem_401132, %struct.Memory** %MEMORY
  %loadMem_401136 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10264 = getelementptr inbounds %struct.GPR, %struct.GPR* %10263, i32 0, i32 33
  %10265 = getelementptr inbounds %struct.Reg, %struct.Reg* %10264, i32 0, i32 0
  %PC.i930 = bitcast %union.anon* %10265 to i64*
  %10266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10267 = getelementptr inbounds %struct.GPR, %struct.GPR* %10266, i32 0, i32 1
  %10268 = getelementptr inbounds %struct.Reg, %struct.Reg* %10267, i32 0, i32 0
  %EAX.i931 = bitcast %union.anon* %10268 to i32*
  %10269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10270 = getelementptr inbounds %struct.GPR, %struct.GPR* %10269, i32 0, i32 5
  %10271 = getelementptr inbounds %struct.Reg, %struct.Reg* %10270, i32 0, i32 0
  %RCX.i932 = bitcast %union.anon* %10271 to i64*
  %10272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10273 = getelementptr inbounds %struct.GPR, %struct.GPR* %10272, i32 0, i32 15
  %10274 = getelementptr inbounds %struct.Reg, %struct.Reg* %10273, i32 0, i32 0
  %RBP.i933 = bitcast %union.anon* %10274 to i64*
  %10275 = load i32, i32* %EAX.i931
  %10276 = zext i32 %10275 to i64
  %10277 = load i64, i64* %RBP.i933
  %10278 = load i64, i64* %RCX.i932
  %10279 = mul i64 %10278, 4
  %10280 = add i64 %10277, -1328
  %10281 = add i64 %10280, %10279
  %10282 = load i64, i64* %PC.i930
  %10283 = add i64 %10282, 7
  store i64 %10283, i64* %PC.i930
  %10284 = inttoptr i64 %10281 to i32*
  %10285 = load i32, i32* %10284
  %10286 = sub i32 %10275, %10285
  %10287 = icmp ult i32 %10275, %10285
  %10288 = zext i1 %10287 to i8
  %10289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10288, i8* %10289, align 1
  %10290 = and i32 %10286, 255
  %10291 = call i32 @llvm.ctpop.i32(i32 %10290)
  %10292 = trunc i32 %10291 to i8
  %10293 = and i8 %10292, 1
  %10294 = xor i8 %10293, 1
  %10295 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10294, i8* %10295, align 1
  %10296 = xor i32 %10285, %10275
  %10297 = xor i32 %10296, %10286
  %10298 = lshr i32 %10297, 4
  %10299 = trunc i32 %10298 to i8
  %10300 = and i8 %10299, 1
  %10301 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10300, i8* %10301, align 1
  %10302 = icmp eq i32 %10286, 0
  %10303 = zext i1 %10302 to i8
  %10304 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10303, i8* %10304, align 1
  %10305 = lshr i32 %10286, 31
  %10306 = trunc i32 %10305 to i8
  %10307 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10306, i8* %10307, align 1
  %10308 = lshr i32 %10275, 31
  %10309 = lshr i32 %10285, 31
  %10310 = xor i32 %10309, %10308
  %10311 = xor i32 %10305, %10308
  %10312 = add i32 %10311, %10310
  %10313 = icmp eq i32 %10312, 2
  %10314 = zext i1 %10313 to i8
  %10315 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10314, i8* %10315, align 1
  store %struct.Memory* %loadMem_401136, %struct.Memory** %MEMORY
  %loadMem_40113d = load %struct.Memory*, %struct.Memory** %MEMORY
  %10316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10317 = getelementptr inbounds %struct.GPR, %struct.GPR* %10316, i32 0, i32 33
  %10318 = getelementptr inbounds %struct.Reg, %struct.Reg* %10317, i32 0, i32 0
  %PC.i929 = bitcast %union.anon* %10318 to i64*
  %10319 = load i64, i64* %PC.i929
  %10320 = add i64 %10319, 115
  %10321 = load i64, i64* %PC.i929
  %10322 = add i64 %10321, 6
  %10323 = load i64, i64* %PC.i929
  %10324 = add i64 %10323, 6
  store i64 %10324, i64* %PC.i929
  %10325 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10326 = load i8, i8* %10325, align 1
  %10327 = icmp eq i8 %10326, 0
  %10328 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10329 = load i8, i8* %10328, align 1
  %10330 = icmp ne i8 %10329, 0
  %10331 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %10332 = load i8, i8* %10331, align 1
  %10333 = icmp ne i8 %10332, 0
  %10334 = xor i1 %10330, %10333
  %10335 = xor i1 %10334, true
  %10336 = and i1 %10327, %10335
  %10337 = zext i1 %10336 to i8
  store i8 %10337, i8* %BRANCH_TAKEN, align 1
  %10338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10339 = select i1 %10336, i64 %10320, i64 %10322
  store i64 %10339, i64* %10338, align 8
  store %struct.Memory* %loadMem_40113d, %struct.Memory** %MEMORY
  %loadBr_40113d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40113d = icmp eq i8 %loadBr_40113d, 1
  br i1 %cmpBr_40113d, label %block_.L_4011b0, label %block_401143

block_401143:                                     ; preds = %block_.L_40112f
  %loadMem_401143 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10341 = getelementptr inbounds %struct.GPR, %struct.GPR* %10340, i32 0, i32 33
  %10342 = getelementptr inbounds %struct.Reg, %struct.Reg* %10341, i32 0, i32 0
  %PC.i926 = bitcast %union.anon* %10342 to i64*
  %10343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10344 = getelementptr inbounds %struct.GPR, %struct.GPR* %10343, i32 0, i32 1
  %10345 = getelementptr inbounds %struct.Reg, %struct.Reg* %10344, i32 0, i32 0
  %RAX.i927 = bitcast %union.anon* %10345 to i64*
  %10346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10347 = getelementptr inbounds %struct.GPR, %struct.GPR* %10346, i32 0, i32 15
  %10348 = getelementptr inbounds %struct.Reg, %struct.Reg* %10347, i32 0, i32 0
  %RBP.i928 = bitcast %union.anon* %10348 to i64*
  %10349 = load i64, i64* %RBP.i928
  %10350 = sub i64 %10349, 8
  %10351 = load i64, i64* %PC.i926
  %10352 = add i64 %10351, 4
  store i64 %10352, i64* %PC.i926
  %10353 = inttoptr i64 %10350 to i32*
  %10354 = load i32, i32* %10353
  %10355 = sext i32 %10354 to i64
  store i64 %10355, i64* %RAX.i927, align 8
  store %struct.Memory* %loadMem_401143, %struct.Memory** %MEMORY
  %loadMem_401147 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10357 = getelementptr inbounds %struct.GPR, %struct.GPR* %10356, i32 0, i32 33
  %10358 = getelementptr inbounds %struct.Reg, %struct.Reg* %10357, i32 0, i32 0
  %PC.i923 = bitcast %union.anon* %10358 to i64*
  %10359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10360 = getelementptr inbounds %struct.GPR, %struct.GPR* %10359, i32 0, i32 1
  %10361 = getelementptr inbounds %struct.Reg, %struct.Reg* %10360, i32 0, i32 0
  %RAX.i924 = bitcast %union.anon* %10361 to i64*
  %10362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10363 = getelementptr inbounds %struct.GPR, %struct.GPR* %10362, i32 0, i32 15
  %10364 = getelementptr inbounds %struct.Reg, %struct.Reg* %10363, i32 0, i32 0
  %RBP.i925 = bitcast %union.anon* %10364 to i64*
  %10365 = load i64, i64* %RBP.i925
  %10366 = load i64, i64* %RAX.i924
  %10367 = mul i64 %10366, 4
  %10368 = add i64 %10365, -2688
  %10369 = add i64 %10368, %10367
  %10370 = load i64, i64* %PC.i923
  %10371 = add i64 %10370, 8
  store i64 %10371, i64* %PC.i923
  %10372 = inttoptr i64 %10369 to i32*
  %10373 = load i32, i32* %10372
  %10374 = sub i32 %10373, -1
  %10375 = icmp ult i32 %10373, -1
  %10376 = zext i1 %10375 to i8
  %10377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10376, i8* %10377, align 1
  %10378 = and i32 %10374, 255
  %10379 = call i32 @llvm.ctpop.i32(i32 %10378)
  %10380 = trunc i32 %10379 to i8
  %10381 = and i8 %10380, 1
  %10382 = xor i8 %10381, 1
  %10383 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10382, i8* %10383, align 1
  %10384 = xor i32 %10373, -1
  %10385 = xor i32 %10384, %10374
  %10386 = lshr i32 %10385, 4
  %10387 = trunc i32 %10386 to i8
  %10388 = and i8 %10387, 1
  %10389 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10388, i8* %10389, align 1
  %10390 = icmp eq i32 %10374, 0
  %10391 = zext i1 %10390 to i8
  %10392 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10391, i8* %10392, align 1
  %10393 = lshr i32 %10374, 31
  %10394 = trunc i32 %10393 to i8
  %10395 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10394, i8* %10395, align 1
  %10396 = lshr i32 %10373, 31
  %10397 = xor i32 %10396, 1
  %10398 = xor i32 %10393, %10396
  %10399 = add i32 %10398, %10397
  %10400 = icmp eq i32 %10399, 2
  %10401 = zext i1 %10400 to i8
  %10402 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10401, i8* %10402, align 1
  store %struct.Memory* %loadMem_401147, %struct.Memory** %MEMORY
  %loadMem_40114f = load %struct.Memory*, %struct.Memory** %MEMORY
  %10403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10404 = getelementptr inbounds %struct.GPR, %struct.GPR* %10403, i32 0, i32 33
  %10405 = getelementptr inbounds %struct.Reg, %struct.Reg* %10404, i32 0, i32 0
  %PC.i922 = bitcast %union.anon* %10405 to i64*
  %10406 = load i64, i64* %PC.i922
  %10407 = add i64 %10406, 78
  %10408 = load i64, i64* %PC.i922
  %10409 = add i64 %10408, 6
  %10410 = load i64, i64* %PC.i922
  %10411 = add i64 %10410, 6
  store i64 %10411, i64* %PC.i922
  %10412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10413 = load i8, i8* %10412, align 1
  store i8 %10413, i8* %BRANCH_TAKEN, align 1
  %10414 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10415 = icmp ne i8 %10413, 0
  %10416 = select i1 %10415, i64 %10407, i64 %10409
  store i64 %10416, i64* %10414, align 8
  store %struct.Memory* %loadMem_40114f, %struct.Memory** %MEMORY
  %loadBr_40114f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40114f = icmp eq i8 %loadBr_40114f, 1
  br i1 %cmpBr_40114f, label %block_.L_40119d, label %block_401155

block_401155:                                     ; preds = %block_401143
  %loadMem_401155 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10418 = getelementptr inbounds %struct.GPR, %struct.GPR* %10417, i32 0, i32 33
  %10419 = getelementptr inbounds %struct.Reg, %struct.Reg* %10418, i32 0, i32 0
  %PC.i920 = bitcast %union.anon* %10419 to i64*
  %10420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10421 = getelementptr inbounds %struct.GPR, %struct.GPR* %10420, i32 0, i32 1
  %10422 = getelementptr inbounds %struct.Reg, %struct.Reg* %10421, i32 0, i32 0
  %RAX.i921 = bitcast %union.anon* %10422 to i64*
  %10423 = load i64, i64* %PC.i920
  %10424 = add i64 %10423, 5
  store i64 %10424, i64* %PC.i920
  store i64 255, i64* %RAX.i921, align 8
  store %struct.Memory* %loadMem_401155, %struct.Memory** %MEMORY
  %loadMem_40115a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10426 = getelementptr inbounds %struct.GPR, %struct.GPR* %10425, i32 0, i32 33
  %10427 = getelementptr inbounds %struct.Reg, %struct.Reg* %10426, i32 0, i32 0
  %PC.i917 = bitcast %union.anon* %10427 to i64*
  %10428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10429 = getelementptr inbounds %struct.GPR, %struct.GPR* %10428, i32 0, i32 5
  %10430 = getelementptr inbounds %struct.Reg, %struct.Reg* %10429, i32 0, i32 0
  %RCX.i918 = bitcast %union.anon* %10430 to i64*
  %10431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10432 = getelementptr inbounds %struct.GPR, %struct.GPR* %10431, i32 0, i32 15
  %10433 = getelementptr inbounds %struct.Reg, %struct.Reg* %10432, i32 0, i32 0
  %RBP.i919 = bitcast %union.anon* %10433 to i64*
  %10434 = load i64, i64* %RBP.i919
  %10435 = sub i64 %10434, 8
  %10436 = load i64, i64* %PC.i917
  %10437 = add i64 %10436, 4
  store i64 %10437, i64* %PC.i917
  %10438 = inttoptr i64 %10435 to i32*
  %10439 = load i32, i32* %10438
  %10440 = sext i32 %10439 to i64
  store i64 %10440, i64* %RCX.i918, align 8
  store %struct.Memory* %loadMem_40115a, %struct.Memory** %MEMORY
  %loadMem_40115e = load %struct.Memory*, %struct.Memory** %MEMORY
  %10441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10442 = getelementptr inbounds %struct.GPR, %struct.GPR* %10441, i32 0, i32 33
  %10443 = getelementptr inbounds %struct.Reg, %struct.Reg* %10442, i32 0, i32 0
  %PC.i913 = bitcast %union.anon* %10443 to i64*
  %10444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10445 = getelementptr inbounds %struct.GPR, %struct.GPR* %10444, i32 0, i32 5
  %10446 = getelementptr inbounds %struct.Reg, %struct.Reg* %10445, i32 0, i32 0
  %RCX.i914 = bitcast %union.anon* %10446 to i64*
  %10447 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10448 = getelementptr inbounds %struct.GPR, %struct.GPR* %10447, i32 0, i32 7
  %10449 = getelementptr inbounds %struct.Reg, %struct.Reg* %10448, i32 0, i32 0
  %RDX.i915 = bitcast %union.anon* %10449 to i64*
  %10450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10451 = getelementptr inbounds %struct.GPR, %struct.GPR* %10450, i32 0, i32 15
  %10452 = getelementptr inbounds %struct.Reg, %struct.Reg* %10451, i32 0, i32 0
  %RBP.i916 = bitcast %union.anon* %10452 to i64*
  %10453 = load i64, i64* %RBP.i916
  %10454 = load i64, i64* %RCX.i914
  %10455 = mul i64 %10454, 4
  %10456 = add i64 %10453, -2688
  %10457 = add i64 %10456, %10455
  %10458 = load i64, i64* %PC.i913
  %10459 = add i64 %10458, 7
  store i64 %10459, i64* %PC.i913
  %10460 = inttoptr i64 %10457 to i32*
  %10461 = load i32, i32* %10460
  %10462 = zext i32 %10461 to i64
  store i64 %10462, i64* %RDX.i915, align 8
  store %struct.Memory* %loadMem_40115e, %struct.Memory** %MEMORY
  %loadMem_401165 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10464 = getelementptr inbounds %struct.GPR, %struct.GPR* %10463, i32 0, i32 33
  %10465 = getelementptr inbounds %struct.Reg, %struct.Reg* %10464, i32 0, i32 0
  %PC.i910 = bitcast %union.anon* %10465 to i64*
  %10466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10467 = getelementptr inbounds %struct.GPR, %struct.GPR* %10466, i32 0, i32 7
  %10468 = getelementptr inbounds %struct.Reg, %struct.Reg* %10467, i32 0, i32 0
  %RDX.i911 = bitcast %union.anon* %10468 to i64*
  %10469 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10470 = getelementptr inbounds %struct.GPR, %struct.GPR* %10469, i32 0, i32 15
  %10471 = getelementptr inbounds %struct.Reg, %struct.Reg* %10470, i32 0, i32 0
  %RBP.i912 = bitcast %union.anon* %10471 to i64*
  %10472 = load i64, i64* %RDX.i911
  %10473 = load i64, i64* %RBP.i912
  %10474 = sub i64 %10473, 8
  %10475 = load i64, i64* %PC.i910
  %10476 = add i64 %10475, 3
  store i64 %10476, i64* %PC.i910
  %10477 = trunc i64 %10472 to i32
  %10478 = inttoptr i64 %10474 to i32*
  %10479 = load i32, i32* %10478
  %10480 = add i32 %10479, %10477
  %10481 = zext i32 %10480 to i64
  store i64 %10481, i64* %RDX.i911, align 8
  %10482 = icmp ult i32 %10480, %10477
  %10483 = icmp ult i32 %10480, %10479
  %10484 = or i1 %10482, %10483
  %10485 = zext i1 %10484 to i8
  %10486 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10485, i8* %10486, align 1
  %10487 = and i32 %10480, 255
  %10488 = call i32 @llvm.ctpop.i32(i32 %10487)
  %10489 = trunc i32 %10488 to i8
  %10490 = and i8 %10489, 1
  %10491 = xor i8 %10490, 1
  %10492 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10491, i8* %10492, align 1
  %10493 = xor i32 %10479, %10477
  %10494 = xor i32 %10493, %10480
  %10495 = lshr i32 %10494, 4
  %10496 = trunc i32 %10495 to i8
  %10497 = and i8 %10496, 1
  %10498 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10497, i8* %10498, align 1
  %10499 = icmp eq i32 %10480, 0
  %10500 = zext i1 %10499 to i8
  %10501 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10500, i8* %10501, align 1
  %10502 = lshr i32 %10480, 31
  %10503 = trunc i32 %10502 to i8
  %10504 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10503, i8* %10504, align 1
  %10505 = lshr i32 %10477, 31
  %10506 = lshr i32 %10479, 31
  %10507 = xor i32 %10502, %10505
  %10508 = xor i32 %10502, %10506
  %10509 = add i32 %10507, %10508
  %10510 = icmp eq i32 %10509, 2
  %10511 = zext i1 %10510 to i8
  %10512 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10511, i8* %10512, align 1
  store %struct.Memory* %loadMem_401165, %struct.Memory** %MEMORY
  %loadMem_401168 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10513 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10514 = getelementptr inbounds %struct.GPR, %struct.GPR* %10513, i32 0, i32 33
  %10515 = getelementptr inbounds %struct.Reg, %struct.Reg* %10514, i32 0, i32 0
  %PC.i907 = bitcast %union.anon* %10515 to i64*
  %10516 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10517 = getelementptr inbounds %struct.GPR, %struct.GPR* %10516, i32 0, i32 1
  %10518 = getelementptr inbounds %struct.Reg, %struct.Reg* %10517, i32 0, i32 0
  %EAX.i908 = bitcast %union.anon* %10518 to i32*
  %10519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10520 = getelementptr inbounds %struct.GPR, %struct.GPR* %10519, i32 0, i32 15
  %10521 = getelementptr inbounds %struct.Reg, %struct.Reg* %10520, i32 0, i32 0
  %RBP.i909 = bitcast %union.anon* %10521 to i64*
  %10522 = load i64, i64* %RBP.i909
  %10523 = sub i64 %10522, 2716
  %10524 = load i32, i32* %EAX.i908
  %10525 = zext i32 %10524 to i64
  %10526 = load i64, i64* %PC.i907
  %10527 = add i64 %10526, 6
  store i64 %10527, i64* %PC.i907
  %10528 = inttoptr i64 %10523 to i32*
  store i32 %10524, i32* %10528
  store %struct.Memory* %loadMem_401168, %struct.Memory** %MEMORY
  %loadMem_40116e = load %struct.Memory*, %struct.Memory** %MEMORY
  %10529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10530 = getelementptr inbounds %struct.GPR, %struct.GPR* %10529, i32 0, i32 33
  %10531 = getelementptr inbounds %struct.Reg, %struct.Reg* %10530, i32 0, i32 0
  %PC.i904 = bitcast %union.anon* %10531 to i64*
  %10532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10533 = getelementptr inbounds %struct.GPR, %struct.GPR* %10532, i32 0, i32 7
  %10534 = getelementptr inbounds %struct.Reg, %struct.Reg* %10533, i32 0, i32 0
  %EDX.i905 = bitcast %union.anon* %10534 to i32*
  %10535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10536 = getelementptr inbounds %struct.GPR, %struct.GPR* %10535, i32 0, i32 1
  %10537 = getelementptr inbounds %struct.Reg, %struct.Reg* %10536, i32 0, i32 0
  %RAX.i906 = bitcast %union.anon* %10537 to i64*
  %10538 = load i32, i32* %EDX.i905
  %10539 = zext i32 %10538 to i64
  %10540 = load i64, i64* %PC.i904
  %10541 = add i64 %10540, 2
  store i64 %10541, i64* %PC.i904
  %10542 = and i64 %10539, 4294967295
  store i64 %10542, i64* %RAX.i906, align 8
  store %struct.Memory* %loadMem_40116e, %struct.Memory** %MEMORY
  %loadMem_401170 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10544 = getelementptr inbounds %struct.GPR, %struct.GPR* %10543, i32 0, i32 33
  %10545 = getelementptr inbounds %struct.Reg, %struct.Reg* %10544, i32 0, i32 0
  %PC.i903 = bitcast %union.anon* %10545 to i64*
  %10546 = load i64, i64* %PC.i903
  %10547 = add i64 %10546, 1
  store i64 %10547, i64* %PC.i903
  %10548 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %10549 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %10550 = bitcast %union.anon* %10549 to i32*
  %10551 = load i32, i32* %10550, align 8
  %10552 = sext i32 %10551 to i64
  %10553 = lshr i64 %10552, 32
  store i64 %10553, i64* %10548, align 8
  store %struct.Memory* %loadMem_401170, %struct.Memory** %MEMORY
  %loadMem_401171 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10555 = getelementptr inbounds %struct.GPR, %struct.GPR* %10554, i32 0, i32 33
  %10556 = getelementptr inbounds %struct.Reg, %struct.Reg* %10555, i32 0, i32 0
  %PC.i900 = bitcast %union.anon* %10556 to i64*
  %10557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10558 = getelementptr inbounds %struct.GPR, %struct.GPR* %10557, i32 0, i32 9
  %10559 = getelementptr inbounds %struct.Reg, %struct.Reg* %10558, i32 0, i32 0
  %RSI.i901 = bitcast %union.anon* %10559 to i64*
  %10560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10561 = getelementptr inbounds %struct.GPR, %struct.GPR* %10560, i32 0, i32 15
  %10562 = getelementptr inbounds %struct.Reg, %struct.Reg* %10561, i32 0, i32 0
  %RBP.i902 = bitcast %union.anon* %10562 to i64*
  %10563 = load i64, i64* %RBP.i902
  %10564 = sub i64 %10563, 2716
  %10565 = load i64, i64* %PC.i900
  %10566 = add i64 %10565, 6
  store i64 %10566, i64* %PC.i900
  %10567 = inttoptr i64 %10564 to i32*
  %10568 = load i32, i32* %10567
  %10569 = zext i32 %10568 to i64
  store i64 %10569, i64* %RSI.i901, align 8
  store %struct.Memory* %loadMem_401171, %struct.Memory** %MEMORY
  %loadMem_401177 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10571 = getelementptr inbounds %struct.GPR, %struct.GPR* %10570, i32 0, i32 33
  %10572 = getelementptr inbounds %struct.Reg, %struct.Reg* %10571, i32 0, i32 0
  %PC.i895 = bitcast %union.anon* %10572 to i64*
  %10573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10574 = getelementptr inbounds %struct.GPR, %struct.GPR* %10573, i32 0, i32 9
  %10575 = getelementptr inbounds %struct.Reg, %struct.Reg* %10574, i32 0, i32 0
  %ESI.i896 = bitcast %union.anon* %10575 to i32*
  %10576 = load i32, i32* %ESI.i896
  %10577 = zext i32 %10576 to i64
  %10578 = load i64, i64* %PC.i895
  %10579 = add i64 %10578, 2
  store i64 %10579, i64* %PC.i895
  %10580 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %10581 = bitcast %union.anon* %10580 to i32*
  %10582 = load i32, i32* %10581, align 8
  %10583 = zext i32 %10582 to i64
  %10584 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %10585 = bitcast %union.anon* %10584 to i32*
  %10586 = load i32, i32* %10585, align 8
  %10587 = zext i32 %10586 to i64
  %10588 = shl i64 %10577, 32
  %10589 = ashr exact i64 %10588, 32
  %10590 = shl i64 %10587, 32
  %10591 = or i64 %10590, %10583
  %10592 = sdiv i64 %10591, %10589
  %10593 = shl i64 %10592, 32
  %10594 = ashr exact i64 %10593, 32
  %10595 = icmp eq i64 %10592, %10594
  br i1 %10595, label %10600, label %10596

; <label>:10596:                                  ; preds = %block_401155
  %10597 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10598 = load i64, i64* %10597, align 8
  %10599 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %10598, %struct.Memory* %loadMem_401177)
  br label %routine_idivl__esi.exit897

; <label>:10600:                                  ; preds = %block_401155
  %10601 = srem i64 %10591, %10589
  %10602 = getelementptr inbounds %union.anon, %union.anon* %10580, i64 0, i32 0
  %10603 = and i64 %10592, 4294967295
  store i64 %10603, i64* %10602, align 8
  %10604 = getelementptr inbounds %union.anon, %union.anon* %10584, i64 0, i32 0
  %10605 = and i64 %10601, 4294967295
  store i64 %10605, i64* %10604, align 8
  %10606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %10606, align 1
  %10607 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %10607, align 1
  %10608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10608, align 1
  %10609 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %10609, align 1
  %10610 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %10610, align 1
  %10611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10611, align 1
  br label %routine_idivl__esi.exit897

routine_idivl__esi.exit897:                       ; preds = %10596, %10600
  %10612 = phi %struct.Memory* [ %10599, %10596 ], [ %loadMem_401177, %10600 ]
  store %struct.Memory* %10612, %struct.Memory** %MEMORY
  %loadMem_401179 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10614 = getelementptr inbounds %struct.GPR, %struct.GPR* %10613, i32 0, i32 33
  %10615 = getelementptr inbounds %struct.Reg, %struct.Reg* %10614, i32 0, i32 0
  %PC.i892 = bitcast %union.anon* %10615 to i64*
  %10616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10617 = getelementptr inbounds %struct.GPR, %struct.GPR* %10616, i32 0, i32 5
  %10618 = getelementptr inbounds %struct.Reg, %struct.Reg* %10617, i32 0, i32 0
  %RCX.i893 = bitcast %union.anon* %10618 to i64*
  %10619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10620 = getelementptr inbounds %struct.GPR, %struct.GPR* %10619, i32 0, i32 15
  %10621 = getelementptr inbounds %struct.Reg, %struct.Reg* %10620, i32 0, i32 0
  %RBP.i894 = bitcast %union.anon* %10621 to i64*
  %10622 = load i64, i64* %RBP.i894
  %10623 = sub i64 %10622, 8
  %10624 = load i64, i64* %PC.i892
  %10625 = add i64 %10624, 4
  store i64 %10625, i64* %PC.i892
  %10626 = inttoptr i64 %10623 to i32*
  %10627 = load i32, i32* %10626
  %10628 = sext i32 %10627 to i64
  store i64 %10628, i64* %RCX.i893, align 8
  store %struct.Memory* %loadMem_401179, %struct.Memory** %MEMORY
  %loadMem_40117d = load %struct.Memory*, %struct.Memory** %MEMORY
  %10629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10630 = getelementptr inbounds %struct.GPR, %struct.GPR* %10629, i32 0, i32 33
  %10631 = getelementptr inbounds %struct.Reg, %struct.Reg* %10630, i32 0, i32 0
  %PC.i888 = bitcast %union.anon* %10631 to i64*
  %10632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10633 = getelementptr inbounds %struct.GPR, %struct.GPR* %10632, i32 0, i32 7
  %10634 = getelementptr inbounds %struct.Reg, %struct.Reg* %10633, i32 0, i32 0
  %EDX.i889 = bitcast %union.anon* %10634 to i32*
  %10635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10636 = getelementptr inbounds %struct.GPR, %struct.GPR* %10635, i32 0, i32 5
  %10637 = getelementptr inbounds %struct.Reg, %struct.Reg* %10636, i32 0, i32 0
  %RCX.i890 = bitcast %union.anon* %10637 to i64*
  %10638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10639 = getelementptr inbounds %struct.GPR, %struct.GPR* %10638, i32 0, i32 15
  %10640 = getelementptr inbounds %struct.Reg, %struct.Reg* %10639, i32 0, i32 0
  %RBP.i891 = bitcast %union.anon* %10640 to i64*
  %10641 = load i64, i64* %RBP.i891
  %10642 = load i64, i64* %RCX.i890
  %10643 = mul i64 %10642, 4
  %10644 = add i64 %10641, -2688
  %10645 = add i64 %10644, %10643
  %10646 = load i32, i32* %EDX.i889
  %10647 = zext i32 %10646 to i64
  %10648 = load i64, i64* %PC.i888
  %10649 = add i64 %10648, 7
  store i64 %10649, i64* %PC.i888
  %10650 = inttoptr i64 %10645 to i32*
  store i32 %10646, i32* %10650
  store %struct.Memory* %loadMem_40117d, %struct.Memory** %MEMORY
  %loadMem_401184 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10652 = getelementptr inbounds %struct.GPR, %struct.GPR* %10651, i32 0, i32 33
  %10653 = getelementptr inbounds %struct.Reg, %struct.Reg* %10652, i32 0, i32 0
  %PC.i885 = bitcast %union.anon* %10653 to i64*
  %10654 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10655 = getelementptr inbounds %struct.GPR, %struct.GPR* %10654, i32 0, i32 5
  %10656 = getelementptr inbounds %struct.Reg, %struct.Reg* %10655, i32 0, i32 0
  %RCX.i886 = bitcast %union.anon* %10656 to i64*
  %10657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10658 = getelementptr inbounds %struct.GPR, %struct.GPR* %10657, i32 0, i32 15
  %10659 = getelementptr inbounds %struct.Reg, %struct.Reg* %10658, i32 0, i32 0
  %RBP.i887 = bitcast %union.anon* %10659 to i64*
  %10660 = load i64, i64* %RBP.i887
  %10661 = sub i64 %10660, 8
  %10662 = load i64, i64* %PC.i885
  %10663 = add i64 %10662, 4
  store i64 %10663, i64* %PC.i885
  %10664 = inttoptr i64 %10661 to i32*
  %10665 = load i32, i32* %10664
  %10666 = sext i32 %10665 to i64
  store i64 %10666, i64* %RCX.i886, align 8
  store %struct.Memory* %loadMem_401184, %struct.Memory** %MEMORY
  %loadMem_401188 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10668 = getelementptr inbounds %struct.GPR, %struct.GPR* %10667, i32 0, i32 33
  %10669 = getelementptr inbounds %struct.Reg, %struct.Reg* %10668, i32 0, i32 0
  %PC.i882 = bitcast %union.anon* %10669 to i64*
  %10670 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10671 = getelementptr inbounds %struct.GPR, %struct.GPR* %10670, i32 0, i32 5
  %10672 = getelementptr inbounds %struct.Reg, %struct.Reg* %10671, i32 0, i32 0
  %RCX.i883 = bitcast %union.anon* %10672 to i64*
  %10673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10674 = getelementptr inbounds %struct.GPR, %struct.GPR* %10673, i32 0, i32 15
  %10675 = getelementptr inbounds %struct.Reg, %struct.Reg* %10674, i32 0, i32 0
  %RBP.i884 = bitcast %union.anon* %10675 to i64*
  %10676 = load i64, i64* %RBP.i884
  %10677 = load i64, i64* %RCX.i883
  %10678 = mul i64 %10677, 4
  %10679 = add i64 %10676, -2688
  %10680 = add i64 %10679, %10678
  %10681 = load i64, i64* %PC.i882
  %10682 = add i64 %10681, 8
  store i64 %10682, i64* %PC.i882
  %10683 = inttoptr i64 %10680 to i32*
  %10684 = load i32, i32* %10683
  %10685 = sext i32 %10684 to i64
  store i64 %10685, i64* %RCX.i883, align 8
  store %struct.Memory* %loadMem_401188, %struct.Memory** %MEMORY
  %loadMem_401190 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10687 = getelementptr inbounds %struct.GPR, %struct.GPR* %10686, i32 0, i32 33
  %10688 = getelementptr inbounds %struct.Reg, %struct.Reg* %10687, i32 0, i32 0
  %PC.i879 = bitcast %union.anon* %10688 to i64*
  %10689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10690 = getelementptr inbounds %struct.GPR, %struct.GPR* %10689, i32 0, i32 5
  %10691 = getelementptr inbounds %struct.Reg, %struct.Reg* %10690, i32 0, i32 0
  %RCX.i880 = bitcast %union.anon* %10691 to i64*
  %10692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10693 = getelementptr inbounds %struct.GPR, %struct.GPR* %10692, i32 0, i32 7
  %10694 = getelementptr inbounds %struct.Reg, %struct.Reg* %10693, i32 0, i32 0
  %RDX.i881 = bitcast %union.anon* %10694 to i64*
  %10695 = load i64, i64* %RCX.i880
  %10696 = mul i64 %10695, 4
  %10697 = add i64 %10696, 6305920
  %10698 = load i64, i64* %PC.i879
  %10699 = add i64 %10698, 7
  store i64 %10699, i64* %PC.i879
  %10700 = inttoptr i64 %10697 to i32*
  %10701 = load i32, i32* %10700
  %10702 = zext i32 %10701 to i64
  store i64 %10702, i64* %RDX.i881, align 8
  store %struct.Memory* %loadMem_401190, %struct.Memory** %MEMORY
  %loadMem_401197 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10704 = getelementptr inbounds %struct.GPR, %struct.GPR* %10703, i32 0, i32 33
  %10705 = getelementptr inbounds %struct.Reg, %struct.Reg* %10704, i32 0, i32 0
  %PC.i876 = bitcast %union.anon* %10705 to i64*
  %10706 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10707 = getelementptr inbounds %struct.GPR, %struct.GPR* %10706, i32 0, i32 7
  %10708 = getelementptr inbounds %struct.Reg, %struct.Reg* %10707, i32 0, i32 0
  %RDX.i877 = bitcast %union.anon* %10708 to i64*
  %10709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10710 = getelementptr inbounds %struct.GPR, %struct.GPR* %10709, i32 0, i32 15
  %10711 = getelementptr inbounds %struct.Reg, %struct.Reg* %10710, i32 0, i32 0
  %RBP.i878 = bitcast %union.anon* %10711 to i64*
  %10712 = load i64, i64* %RDX.i877
  %10713 = load i64, i64* %RBP.i878
  %10714 = sub i64 %10713, 16
  %10715 = load i64, i64* %PC.i876
  %10716 = add i64 %10715, 3
  store i64 %10716, i64* %PC.i876
  %10717 = trunc i64 %10712 to i32
  %10718 = inttoptr i64 %10714 to i32*
  %10719 = load i32, i32* %10718
  %10720 = xor i32 %10719, %10717
  %10721 = zext i32 %10720 to i64
  store i64 %10721, i64* %RDX.i877, align 8
  %10722 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %10722, align 1
  %10723 = and i32 %10720, 255
  %10724 = call i32 @llvm.ctpop.i32(i32 %10723)
  %10725 = trunc i32 %10724 to i8
  %10726 = and i8 %10725, 1
  %10727 = xor i8 %10726, 1
  %10728 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10727, i8* %10728, align 1
  %10729 = icmp eq i32 %10720, 0
  %10730 = zext i1 %10729 to i8
  %10731 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10730, i8* %10731, align 1
  %10732 = lshr i32 %10720, 31
  %10733 = trunc i32 %10732 to i8
  %10734 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10733, i8* %10734, align 1
  %10735 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10735, align 1
  %10736 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10736, align 1
  store %struct.Memory* %loadMem_401197, %struct.Memory** %MEMORY
  %loadMem_40119a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10738 = getelementptr inbounds %struct.GPR, %struct.GPR* %10737, i32 0, i32 33
  %10739 = getelementptr inbounds %struct.Reg, %struct.Reg* %10738, i32 0, i32 0
  %PC.i873 = bitcast %union.anon* %10739 to i64*
  %10740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10741 = getelementptr inbounds %struct.GPR, %struct.GPR* %10740, i32 0, i32 7
  %10742 = getelementptr inbounds %struct.Reg, %struct.Reg* %10741, i32 0, i32 0
  %EDX.i874 = bitcast %union.anon* %10742 to i32*
  %10743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10744 = getelementptr inbounds %struct.GPR, %struct.GPR* %10743, i32 0, i32 15
  %10745 = getelementptr inbounds %struct.Reg, %struct.Reg* %10744, i32 0, i32 0
  %RBP.i875 = bitcast %union.anon* %10745 to i64*
  %10746 = load i64, i64* %RBP.i875
  %10747 = sub i64 %10746, 16
  %10748 = load i32, i32* %EDX.i874
  %10749 = zext i32 %10748 to i64
  %10750 = load i64, i64* %PC.i873
  %10751 = add i64 %10750, 3
  store i64 %10751, i64* %PC.i873
  %10752 = inttoptr i64 %10747 to i32*
  store i32 %10748, i32* %10752
  store %struct.Memory* %loadMem_40119a, %struct.Memory** %MEMORY
  br label %block_.L_40119d

block_.L_40119d:                                  ; preds = %routine_idivl__esi.exit897, %block_401143
  %loadMem_40119d = load %struct.Memory*, %struct.Memory** %MEMORY
  %10753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10754 = getelementptr inbounds %struct.GPR, %struct.GPR* %10753, i32 0, i32 33
  %10755 = getelementptr inbounds %struct.Reg, %struct.Reg* %10754, i32 0, i32 0
  %PC.i872 = bitcast %union.anon* %10755 to i64*
  %10756 = load i64, i64* %PC.i872
  %10757 = add i64 %10756, 5
  %10758 = load i64, i64* %PC.i872
  %10759 = add i64 %10758, 5
  store i64 %10759, i64* %PC.i872
  %10760 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10757, i64* %10760, align 8
  store %struct.Memory* %loadMem_40119d, %struct.Memory** %MEMORY
  br label %block_.L_4011a2

block_.L_4011a2:                                  ; preds = %block_.L_40119d
  %loadMem_4011a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10762 = getelementptr inbounds %struct.GPR, %struct.GPR* %10761, i32 0, i32 33
  %10763 = getelementptr inbounds %struct.Reg, %struct.Reg* %10762, i32 0, i32 0
  %PC.i869 = bitcast %union.anon* %10763 to i64*
  %10764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10765 = getelementptr inbounds %struct.GPR, %struct.GPR* %10764, i32 0, i32 1
  %10766 = getelementptr inbounds %struct.Reg, %struct.Reg* %10765, i32 0, i32 0
  %RAX.i870 = bitcast %union.anon* %10766 to i64*
  %10767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10768 = getelementptr inbounds %struct.GPR, %struct.GPR* %10767, i32 0, i32 15
  %10769 = getelementptr inbounds %struct.Reg, %struct.Reg* %10768, i32 0, i32 0
  %RBP.i871 = bitcast %union.anon* %10769 to i64*
  %10770 = load i64, i64* %RBP.i871
  %10771 = sub i64 %10770, 8
  %10772 = load i64, i64* %PC.i869
  %10773 = add i64 %10772, 3
  store i64 %10773, i64* %PC.i869
  %10774 = inttoptr i64 %10771 to i32*
  %10775 = load i32, i32* %10774
  %10776 = zext i32 %10775 to i64
  store i64 %10776, i64* %RAX.i870, align 8
  store %struct.Memory* %loadMem_4011a2, %struct.Memory** %MEMORY
  %loadMem_4011a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10778 = getelementptr inbounds %struct.GPR, %struct.GPR* %10777, i32 0, i32 33
  %10779 = getelementptr inbounds %struct.Reg, %struct.Reg* %10778, i32 0, i32 0
  %PC.i867 = bitcast %union.anon* %10779 to i64*
  %10780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10781 = getelementptr inbounds %struct.GPR, %struct.GPR* %10780, i32 0, i32 1
  %10782 = getelementptr inbounds %struct.Reg, %struct.Reg* %10781, i32 0, i32 0
  %RAX.i868 = bitcast %union.anon* %10782 to i64*
  %10783 = load i64, i64* %RAX.i868
  %10784 = load i64, i64* %PC.i867
  %10785 = add i64 %10784, 3
  store i64 %10785, i64* %PC.i867
  %10786 = trunc i64 %10783 to i32
  %10787 = add i32 1, %10786
  %10788 = zext i32 %10787 to i64
  store i64 %10788, i64* %RAX.i868, align 8
  %10789 = icmp ult i32 %10787, %10786
  %10790 = icmp ult i32 %10787, 1
  %10791 = or i1 %10789, %10790
  %10792 = zext i1 %10791 to i8
  %10793 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10792, i8* %10793, align 1
  %10794 = and i32 %10787, 255
  %10795 = call i32 @llvm.ctpop.i32(i32 %10794)
  %10796 = trunc i32 %10795 to i8
  %10797 = and i8 %10796, 1
  %10798 = xor i8 %10797, 1
  %10799 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10798, i8* %10799, align 1
  %10800 = xor i64 1, %10783
  %10801 = trunc i64 %10800 to i32
  %10802 = xor i32 %10801, %10787
  %10803 = lshr i32 %10802, 4
  %10804 = trunc i32 %10803 to i8
  %10805 = and i8 %10804, 1
  %10806 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10805, i8* %10806, align 1
  %10807 = icmp eq i32 %10787, 0
  %10808 = zext i1 %10807 to i8
  %10809 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10808, i8* %10809, align 1
  %10810 = lshr i32 %10787, 31
  %10811 = trunc i32 %10810 to i8
  %10812 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10811, i8* %10812, align 1
  %10813 = lshr i32 %10786, 31
  %10814 = xor i32 %10810, %10813
  %10815 = add i32 %10814, %10810
  %10816 = icmp eq i32 %10815, 2
  %10817 = zext i1 %10816 to i8
  %10818 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10817, i8* %10818, align 1
  store %struct.Memory* %loadMem_4011a5, %struct.Memory** %MEMORY
  %loadMem_4011a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10820 = getelementptr inbounds %struct.GPR, %struct.GPR* %10819, i32 0, i32 33
  %10821 = getelementptr inbounds %struct.Reg, %struct.Reg* %10820, i32 0, i32 0
  %PC.i864 = bitcast %union.anon* %10821 to i64*
  %10822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10823 = getelementptr inbounds %struct.GPR, %struct.GPR* %10822, i32 0, i32 1
  %10824 = getelementptr inbounds %struct.Reg, %struct.Reg* %10823, i32 0, i32 0
  %EAX.i865 = bitcast %union.anon* %10824 to i32*
  %10825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10826 = getelementptr inbounds %struct.GPR, %struct.GPR* %10825, i32 0, i32 15
  %10827 = getelementptr inbounds %struct.Reg, %struct.Reg* %10826, i32 0, i32 0
  %RBP.i866 = bitcast %union.anon* %10827 to i64*
  %10828 = load i64, i64* %RBP.i866
  %10829 = sub i64 %10828, 8
  %10830 = load i32, i32* %EAX.i865
  %10831 = zext i32 %10830 to i64
  %10832 = load i64, i64* %PC.i864
  %10833 = add i64 %10832, 3
  store i64 %10833, i64* %PC.i864
  %10834 = inttoptr i64 %10829 to i32*
  store i32 %10830, i32* %10834
  store %struct.Memory* %loadMem_4011a8, %struct.Memory** %MEMORY
  %loadMem_4011ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %10835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10836 = getelementptr inbounds %struct.GPR, %struct.GPR* %10835, i32 0, i32 33
  %10837 = getelementptr inbounds %struct.Reg, %struct.Reg* %10836, i32 0, i32 0
  %PC.i863 = bitcast %union.anon* %10837 to i64*
  %10838 = load i64, i64* %PC.i863
  %10839 = add i64 %10838, -124
  %10840 = load i64, i64* %PC.i863
  %10841 = add i64 %10840, 5
  store i64 %10841, i64* %PC.i863
  %10842 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10839, i64* %10842, align 8
  store %struct.Memory* %loadMem_4011ab, %struct.Memory** %MEMORY
  br label %block_.L_40112f

block_.L_4011b0:                                  ; preds = %block_.L_40112f
  %loadMem_4011b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10844 = getelementptr inbounds %struct.GPR, %struct.GPR* %10843, i32 0, i32 33
  %10845 = getelementptr inbounds %struct.Reg, %struct.Reg* %10844, i32 0, i32 0
  %PC.i861 = bitcast %union.anon* %10845 to i64*
  %10846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10847 = getelementptr inbounds %struct.GPR, %struct.GPR* %10846, i32 0, i32 15
  %10848 = getelementptr inbounds %struct.Reg, %struct.Reg* %10847, i32 0, i32 0
  %RBP.i862 = bitcast %union.anon* %10848 to i64*
  %10849 = load i64, i64* %RBP.i862
  %10850 = sub i64 %10849, 16
  %10851 = load i64, i64* %PC.i861
  %10852 = add i64 %10851, 4
  store i64 %10852, i64* %PC.i861
  %10853 = inttoptr i64 %10850 to i32*
  %10854 = load i32, i32* %10853
  %10855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %10855, align 1
  %10856 = and i32 %10854, 255
  %10857 = call i32 @llvm.ctpop.i32(i32 %10856)
  %10858 = trunc i32 %10857 to i8
  %10859 = and i8 %10858, 1
  %10860 = xor i8 %10859, 1
  %10861 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10860, i8* %10861, align 1
  %10862 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10862, align 1
  %10863 = icmp eq i32 %10854, 0
  %10864 = zext i1 %10863 to i8
  %10865 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10864, i8* %10865, align 1
  %10866 = lshr i32 %10854, 31
  %10867 = trunc i32 %10866 to i8
  %10868 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10867, i8* %10868, align 1
  %10869 = lshr i32 %10854, 31
  %10870 = xor i32 %10866, %10869
  %10871 = add i32 %10870, %10869
  %10872 = icmp eq i32 %10871, 2
  %10873 = zext i1 %10872 to i8
  %10874 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10873, i8* %10874, align 1
  store %struct.Memory* %loadMem_4011b0, %struct.Memory** %MEMORY
  %loadMem_4011b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10876 = getelementptr inbounds %struct.GPR, %struct.GPR* %10875, i32 0, i32 33
  %10877 = getelementptr inbounds %struct.Reg, %struct.Reg* %10876, i32 0, i32 0
  %PC.i860 = bitcast %union.anon* %10877 to i64*
  %10878 = load i64, i64* %PC.i860
  %10879 = add i64 %10878, 60
  %10880 = load i64, i64* %PC.i860
  %10881 = add i64 %10880, 6
  %10882 = load i64, i64* %PC.i860
  %10883 = add i64 %10882, 6
  store i64 %10883, i64* %PC.i860
  %10884 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10885 = load i8, i8* %10884, align 1
  %10886 = icmp eq i8 %10885, 0
  %10887 = zext i1 %10886 to i8
  store i8 %10887, i8* %BRANCH_TAKEN, align 1
  %10888 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10889 = select i1 %10886, i64 %10879, i64 %10881
  store i64 %10889, i64* %10888, align 8
  store %struct.Memory* %loadMem_4011b4, %struct.Memory** %MEMORY
  %loadBr_4011b4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4011b4 = icmp eq i8 %loadBr_4011b4, 1
  br i1 %cmpBr_4011b4, label %block_.L_4011f0, label %block_4011ba

block_4011ba:                                     ; preds = %block_.L_4011b0
  %loadMem_4011ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %10890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10891 = getelementptr inbounds %struct.GPR, %struct.GPR* %10890, i32 0, i32 33
  %10892 = getelementptr inbounds %struct.Reg, %struct.Reg* %10891, i32 0, i32 0
  %PC.i858 = bitcast %union.anon* %10892 to i64*
  %10893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10894 = getelementptr inbounds %struct.GPR, %struct.GPR* %10893, i32 0, i32 1
  %10895 = getelementptr inbounds %struct.Reg, %struct.Reg* %10894, i32 0, i32 0
  %RAX.i859 = bitcast %union.anon* %10895 to i64*
  %10896 = load i64, i64* %PC.i858
  %10897 = add i64 %10896, 5
  store i64 %10897, i64* %PC.i858
  store i64 255, i64* %RAX.i859, align 8
  store %struct.Memory* %loadMem_4011ba, %struct.Memory** %MEMORY
  %loadMem_4011bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %10898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10899 = getelementptr inbounds %struct.GPR, %struct.GPR* %10898, i32 0, i32 33
  %10900 = getelementptr inbounds %struct.Reg, %struct.Reg* %10899, i32 0, i32 0
  %PC.i855 = bitcast %union.anon* %10900 to i64*
  %10901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10902 = getelementptr inbounds %struct.GPR, %struct.GPR* %10901, i32 0, i32 5
  %10903 = getelementptr inbounds %struct.Reg, %struct.Reg* %10902, i32 0, i32 0
  %RCX.i856 = bitcast %union.anon* %10903 to i64*
  %10904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10905 = getelementptr inbounds %struct.GPR, %struct.GPR* %10904, i32 0, i32 15
  %10906 = getelementptr inbounds %struct.Reg, %struct.Reg* %10905, i32 0, i32 0
  %RBP.i857 = bitcast %union.anon* %10906 to i64*
  %10907 = load i64, i64* %RBP.i857
  %10908 = sub i64 %10907, 4
  %10909 = load i64, i64* %PC.i855
  %10910 = add i64 %10909, 3
  store i64 %10910, i64* %PC.i855
  %10911 = inttoptr i64 %10908 to i32*
  %10912 = load i32, i32* %10911
  %10913 = zext i32 %10912 to i64
  store i64 %10913, i64* %RCX.i856, align 8
  store %struct.Memory* %loadMem_4011bf, %struct.Memory** %MEMORY
  %loadMem_4011c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10915 = getelementptr inbounds %struct.GPR, %struct.GPR* %10914, i32 0, i32 33
  %10916 = getelementptr inbounds %struct.Reg, %struct.Reg* %10915, i32 0, i32 0
  %PC.i852 = bitcast %union.anon* %10916 to i64*
  %10917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10918 = getelementptr inbounds %struct.GPR, %struct.GPR* %10917, i32 0, i32 7
  %10919 = getelementptr inbounds %struct.Reg, %struct.Reg* %10918, i32 0, i32 0
  %RDX.i853 = bitcast %union.anon* %10919 to i64*
  %10920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10921 = getelementptr inbounds %struct.GPR, %struct.GPR* %10920, i32 0, i32 15
  %10922 = getelementptr inbounds %struct.Reg, %struct.Reg* %10921, i32 0, i32 0
  %RBP.i854 = bitcast %union.anon* %10922 to i64*
  %10923 = load i64, i64* %RBP.i854
  %10924 = sub i64 %10923, 1492
  %10925 = load i64, i64* %PC.i852
  %10926 = add i64 %10925, 7
  store i64 %10926, i64* %PC.i852
  %10927 = inttoptr i64 %10924 to i32*
  %10928 = load i32, i32* %10927
  %10929 = sext i32 %10928 to i64
  store i64 %10929, i64* %RDX.i853, align 8
  store %struct.Memory* %loadMem_4011c2, %struct.Memory** %MEMORY
  %loadMem_4011c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10931 = getelementptr inbounds %struct.GPR, %struct.GPR* %10930, i32 0, i32 33
  %10932 = getelementptr inbounds %struct.Reg, %struct.Reg* %10931, i32 0, i32 0
  %PC.i848 = bitcast %union.anon* %10932 to i64*
  %10933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10934 = getelementptr inbounds %struct.GPR, %struct.GPR* %10933, i32 0, i32 5
  %10935 = getelementptr inbounds %struct.Reg, %struct.Reg* %10934, i32 0, i32 0
  %ECX.i849 = bitcast %union.anon* %10935 to i32*
  %10936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10937 = getelementptr inbounds %struct.GPR, %struct.GPR* %10936, i32 0, i32 7
  %10938 = getelementptr inbounds %struct.Reg, %struct.Reg* %10937, i32 0, i32 0
  %RDX.i850 = bitcast %union.anon* %10938 to i64*
  %10939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10940 = getelementptr inbounds %struct.GPR, %struct.GPR* %10939, i32 0, i32 15
  %10941 = getelementptr inbounds %struct.Reg, %struct.Reg* %10940, i32 0, i32 0
  %RBP.i851 = bitcast %union.anon* %10941 to i64*
  %10942 = load i64, i64* %RBP.i851
  %10943 = load i64, i64* %RDX.i850
  %10944 = mul i64 %10943, 4
  %10945 = add i64 %10942, -1536
  %10946 = add i64 %10945, %10944
  %10947 = load i32, i32* %ECX.i849
  %10948 = zext i32 %10947 to i64
  %10949 = load i64, i64* %PC.i848
  %10950 = add i64 %10949, 7
  store i64 %10950, i64* %PC.i848
  %10951 = inttoptr i64 %10946 to i32*
  store i32 %10947, i32* %10951
  store %struct.Memory* %loadMem_4011c9, %struct.Memory** %MEMORY
  %loadMem_4011d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10953 = getelementptr inbounds %struct.GPR, %struct.GPR* %10952, i32 0, i32 33
  %10954 = getelementptr inbounds %struct.Reg, %struct.Reg* %10953, i32 0, i32 0
  %PC.i845 = bitcast %union.anon* %10954 to i64*
  %10955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10956 = getelementptr inbounds %struct.GPR, %struct.GPR* %10955, i32 0, i32 1
  %10957 = getelementptr inbounds %struct.Reg, %struct.Reg* %10956, i32 0, i32 0
  %RAX.i846 = bitcast %union.anon* %10957 to i64*
  %10958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10959 = getelementptr inbounds %struct.GPR, %struct.GPR* %10958, i32 0, i32 15
  %10960 = getelementptr inbounds %struct.Reg, %struct.Reg* %10959, i32 0, i32 0
  %RBP.i847 = bitcast %union.anon* %10960 to i64*
  %10961 = load i64, i64* %RAX.i846
  %10962 = load i64, i64* %RBP.i847
  %10963 = sub i64 %10962, 4
  %10964 = load i64, i64* %PC.i845
  %10965 = add i64 %10964, 3
  store i64 %10965, i64* %PC.i845
  %10966 = trunc i64 %10961 to i32
  %10967 = inttoptr i64 %10963 to i32*
  %10968 = load i32, i32* %10967
  %10969 = sub i32 %10966, %10968
  %10970 = zext i32 %10969 to i64
  store i64 %10970, i64* %RAX.i846, align 8
  %10971 = icmp ult i32 %10966, %10968
  %10972 = zext i1 %10971 to i8
  %10973 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10972, i8* %10973, align 1
  %10974 = and i32 %10969, 255
  %10975 = call i32 @llvm.ctpop.i32(i32 %10974)
  %10976 = trunc i32 %10975 to i8
  %10977 = and i8 %10976, 1
  %10978 = xor i8 %10977, 1
  %10979 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10978, i8* %10979, align 1
  %10980 = xor i32 %10968, %10966
  %10981 = xor i32 %10980, %10969
  %10982 = lshr i32 %10981, 4
  %10983 = trunc i32 %10982 to i8
  %10984 = and i8 %10983, 1
  %10985 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10984, i8* %10985, align 1
  %10986 = icmp eq i32 %10969, 0
  %10987 = zext i1 %10986 to i8
  %10988 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10987, i8* %10988, align 1
  %10989 = lshr i32 %10969, 31
  %10990 = trunc i32 %10989 to i8
  %10991 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10990, i8* %10991, align 1
  %10992 = lshr i32 %10966, 31
  %10993 = lshr i32 %10968, 31
  %10994 = xor i32 %10993, %10992
  %10995 = xor i32 %10989, %10992
  %10996 = add i32 %10995, %10994
  %10997 = icmp eq i32 %10996, 2
  %10998 = zext i1 %10997 to i8
  %10999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10998, i8* %10999, align 1
  store %struct.Memory* %loadMem_4011d0, %struct.Memory** %MEMORY
  %loadMem_4011d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11001 = getelementptr inbounds %struct.GPR, %struct.GPR* %11000, i32 0, i32 33
  %11002 = getelementptr inbounds %struct.Reg, %struct.Reg* %11001, i32 0, i32 0
  %PC.i842 = bitcast %union.anon* %11002 to i64*
  %11003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11004 = getelementptr inbounds %struct.GPR, %struct.GPR* %11003, i32 0, i32 7
  %11005 = getelementptr inbounds %struct.Reg, %struct.Reg* %11004, i32 0, i32 0
  %RDX.i843 = bitcast %union.anon* %11005 to i64*
  %11006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11007 = getelementptr inbounds %struct.GPR, %struct.GPR* %11006, i32 0, i32 15
  %11008 = getelementptr inbounds %struct.Reg, %struct.Reg* %11007, i32 0, i32 0
  %RBP.i844 = bitcast %union.anon* %11008 to i64*
  %11009 = load i64, i64* %RBP.i844
  %11010 = sub i64 %11009, 1492
  %11011 = load i64, i64* %PC.i842
  %11012 = add i64 %11011, 7
  store i64 %11012, i64* %PC.i842
  %11013 = inttoptr i64 %11010 to i32*
  %11014 = load i32, i32* %11013
  %11015 = sext i32 %11014 to i64
  store i64 %11015, i64* %RDX.i843, align 8
  store %struct.Memory* %loadMem_4011d3, %struct.Memory** %MEMORY
  %loadMem_4011da = load %struct.Memory*, %struct.Memory** %MEMORY
  %11016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11017 = getelementptr inbounds %struct.GPR, %struct.GPR* %11016, i32 0, i32 33
  %11018 = getelementptr inbounds %struct.Reg, %struct.Reg* %11017, i32 0, i32 0
  %PC.i838 = bitcast %union.anon* %11018 to i64*
  %11019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11020 = getelementptr inbounds %struct.GPR, %struct.GPR* %11019, i32 0, i32 1
  %11021 = getelementptr inbounds %struct.Reg, %struct.Reg* %11020, i32 0, i32 0
  %EAX.i839 = bitcast %union.anon* %11021 to i32*
  %11022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11023 = getelementptr inbounds %struct.GPR, %struct.GPR* %11022, i32 0, i32 7
  %11024 = getelementptr inbounds %struct.Reg, %struct.Reg* %11023, i32 0, i32 0
  %RDX.i840 = bitcast %union.anon* %11024 to i64*
  %11025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11026 = getelementptr inbounds %struct.GPR, %struct.GPR* %11025, i32 0, i32 15
  %11027 = getelementptr inbounds %struct.Reg, %struct.Reg* %11026, i32 0, i32 0
  %RBP.i841 = bitcast %union.anon* %11027 to i64*
  %11028 = load i64, i64* %RBP.i841
  %11029 = load i64, i64* %RDX.i840
  %11030 = mul i64 %11029, 4
  %11031 = add i64 %11028, -1568
  %11032 = add i64 %11031, %11030
  %11033 = load i32, i32* %EAX.i839
  %11034 = zext i32 %11033 to i64
  %11035 = load i64, i64* %PC.i838
  %11036 = add i64 %11035, 7
  store i64 %11036, i64* %PC.i838
  %11037 = inttoptr i64 %11032 to i32*
  store i32 %11033, i32* %11037
  store %struct.Memory* %loadMem_4011da, %struct.Memory** %MEMORY
  %loadMem_4011e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11039 = getelementptr inbounds %struct.GPR, %struct.GPR* %11038, i32 0, i32 33
  %11040 = getelementptr inbounds %struct.Reg, %struct.Reg* %11039, i32 0, i32 0
  %PC.i835 = bitcast %union.anon* %11040 to i64*
  %11041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11042 = getelementptr inbounds %struct.GPR, %struct.GPR* %11041, i32 0, i32 1
  %11043 = getelementptr inbounds %struct.Reg, %struct.Reg* %11042, i32 0, i32 0
  %RAX.i836 = bitcast %union.anon* %11043 to i64*
  %11044 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11045 = getelementptr inbounds %struct.GPR, %struct.GPR* %11044, i32 0, i32 15
  %11046 = getelementptr inbounds %struct.Reg, %struct.Reg* %11045, i32 0, i32 0
  %RBP.i837 = bitcast %union.anon* %11046 to i64*
  %11047 = load i64, i64* %RBP.i837
  %11048 = sub i64 %11047, 1492
  %11049 = load i64, i64* %PC.i835
  %11050 = add i64 %11049, 6
  store i64 %11050, i64* %PC.i835
  %11051 = inttoptr i64 %11048 to i32*
  %11052 = load i32, i32* %11051
  %11053 = zext i32 %11052 to i64
  store i64 %11053, i64* %RAX.i836, align 8
  store %struct.Memory* %loadMem_4011e1, %struct.Memory** %MEMORY
  %loadMem_4011e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11055 = getelementptr inbounds %struct.GPR, %struct.GPR* %11054, i32 0, i32 33
  %11056 = getelementptr inbounds %struct.Reg, %struct.Reg* %11055, i32 0, i32 0
  %PC.i833 = bitcast %union.anon* %11056 to i64*
  %11057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11058 = getelementptr inbounds %struct.GPR, %struct.GPR* %11057, i32 0, i32 1
  %11059 = getelementptr inbounds %struct.Reg, %struct.Reg* %11058, i32 0, i32 0
  %RAX.i834 = bitcast %union.anon* %11059 to i64*
  %11060 = load i64, i64* %RAX.i834
  %11061 = load i64, i64* %PC.i833
  %11062 = add i64 %11061, 3
  store i64 %11062, i64* %PC.i833
  %11063 = trunc i64 %11060 to i32
  %11064 = add i32 1, %11063
  %11065 = zext i32 %11064 to i64
  store i64 %11065, i64* %RAX.i834, align 8
  %11066 = icmp ult i32 %11064, %11063
  %11067 = icmp ult i32 %11064, 1
  %11068 = or i1 %11066, %11067
  %11069 = zext i1 %11068 to i8
  %11070 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11069, i8* %11070, align 1
  %11071 = and i32 %11064, 255
  %11072 = call i32 @llvm.ctpop.i32(i32 %11071)
  %11073 = trunc i32 %11072 to i8
  %11074 = and i8 %11073, 1
  %11075 = xor i8 %11074, 1
  %11076 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11075, i8* %11076, align 1
  %11077 = xor i64 1, %11060
  %11078 = trunc i64 %11077 to i32
  %11079 = xor i32 %11078, %11064
  %11080 = lshr i32 %11079, 4
  %11081 = trunc i32 %11080 to i8
  %11082 = and i8 %11081, 1
  %11083 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11082, i8* %11083, align 1
  %11084 = icmp eq i32 %11064, 0
  %11085 = zext i1 %11084 to i8
  %11086 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11085, i8* %11086, align 1
  %11087 = lshr i32 %11064, 31
  %11088 = trunc i32 %11087 to i8
  %11089 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11088, i8* %11089, align 1
  %11090 = lshr i32 %11063, 31
  %11091 = xor i32 %11087, %11090
  %11092 = add i32 %11091, %11087
  %11093 = icmp eq i32 %11092, 2
  %11094 = zext i1 %11093 to i8
  %11095 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11094, i8* %11095, align 1
  store %struct.Memory* %loadMem_4011e7, %struct.Memory** %MEMORY
  %loadMem_4011ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %11096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11097 = getelementptr inbounds %struct.GPR, %struct.GPR* %11096, i32 0, i32 33
  %11098 = getelementptr inbounds %struct.Reg, %struct.Reg* %11097, i32 0, i32 0
  %PC.i830 = bitcast %union.anon* %11098 to i64*
  %11099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11100 = getelementptr inbounds %struct.GPR, %struct.GPR* %11099, i32 0, i32 1
  %11101 = getelementptr inbounds %struct.Reg, %struct.Reg* %11100, i32 0, i32 0
  %EAX.i831 = bitcast %union.anon* %11101 to i32*
  %11102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11103 = getelementptr inbounds %struct.GPR, %struct.GPR* %11102, i32 0, i32 15
  %11104 = getelementptr inbounds %struct.Reg, %struct.Reg* %11103, i32 0, i32 0
  %RBP.i832 = bitcast %union.anon* %11104 to i64*
  %11105 = load i64, i64* %RBP.i832
  %11106 = sub i64 %11105, 1492
  %11107 = load i32, i32* %EAX.i831
  %11108 = zext i32 %11107 to i64
  %11109 = load i64, i64* %PC.i830
  %11110 = add i64 %11109, 6
  store i64 %11110, i64* %PC.i830
  %11111 = inttoptr i64 %11106 to i32*
  store i32 %11107, i32* %11111
  store %struct.Memory* %loadMem_4011ea, %struct.Memory** %MEMORY
  br label %block_.L_4011f0

block_.L_4011f0:                                  ; preds = %block_4011ba, %block_.L_4011b0
  %loadMem_4011f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11113 = getelementptr inbounds %struct.GPR, %struct.GPR* %11112, i32 0, i32 33
  %11114 = getelementptr inbounds %struct.Reg, %struct.Reg* %11113, i32 0, i32 0
  %PC.i829 = bitcast %union.anon* %11114 to i64*
  %11115 = load i64, i64* %PC.i829
  %11116 = add i64 %11115, 5
  %11117 = load i64, i64* %PC.i829
  %11118 = add i64 %11117, 5
  store i64 %11118, i64* %PC.i829
  %11119 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11116, i64* %11119, align 8
  store %struct.Memory* %loadMem_4011f0, %struct.Memory** %MEMORY
  br label %block_.L_4011f5

block_.L_4011f5:                                  ; preds = %block_.L_4011f0
  %loadMem_4011f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11121 = getelementptr inbounds %struct.GPR, %struct.GPR* %11120, i32 0, i32 33
  %11122 = getelementptr inbounds %struct.Reg, %struct.Reg* %11121, i32 0, i32 0
  %PC.i826 = bitcast %union.anon* %11122 to i64*
  %11123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11124 = getelementptr inbounds %struct.GPR, %struct.GPR* %11123, i32 0, i32 1
  %11125 = getelementptr inbounds %struct.Reg, %struct.Reg* %11124, i32 0, i32 0
  %RAX.i827 = bitcast %union.anon* %11125 to i64*
  %11126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11127 = getelementptr inbounds %struct.GPR, %struct.GPR* %11126, i32 0, i32 15
  %11128 = getelementptr inbounds %struct.Reg, %struct.Reg* %11127, i32 0, i32 0
  %RBP.i828 = bitcast %union.anon* %11128 to i64*
  %11129 = load i64, i64* %RBP.i828
  %11130 = sub i64 %11129, 4
  %11131 = load i64, i64* %PC.i826
  %11132 = add i64 %11131, 3
  store i64 %11132, i64* %PC.i826
  %11133 = inttoptr i64 %11130 to i32*
  %11134 = load i32, i32* %11133
  %11135 = zext i32 %11134 to i64
  store i64 %11135, i64* %RAX.i827, align 8
  store %struct.Memory* %loadMem_4011f5, %struct.Memory** %MEMORY
  %loadMem_4011f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11136 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11137 = getelementptr inbounds %struct.GPR, %struct.GPR* %11136, i32 0, i32 33
  %11138 = getelementptr inbounds %struct.Reg, %struct.Reg* %11137, i32 0, i32 0
  %PC.i824 = bitcast %union.anon* %11138 to i64*
  %11139 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11140 = getelementptr inbounds %struct.GPR, %struct.GPR* %11139, i32 0, i32 1
  %11141 = getelementptr inbounds %struct.Reg, %struct.Reg* %11140, i32 0, i32 0
  %RAX.i825 = bitcast %union.anon* %11141 to i64*
  %11142 = load i64, i64* %RAX.i825
  %11143 = load i64, i64* %PC.i824
  %11144 = add i64 %11143, 3
  store i64 %11144, i64* %PC.i824
  %11145 = trunc i64 %11142 to i32
  %11146 = add i32 1, %11145
  %11147 = zext i32 %11146 to i64
  store i64 %11147, i64* %RAX.i825, align 8
  %11148 = icmp ult i32 %11146, %11145
  %11149 = icmp ult i32 %11146, 1
  %11150 = or i1 %11148, %11149
  %11151 = zext i1 %11150 to i8
  %11152 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11151, i8* %11152, align 1
  %11153 = and i32 %11146, 255
  %11154 = call i32 @llvm.ctpop.i32(i32 %11153)
  %11155 = trunc i32 %11154 to i8
  %11156 = and i8 %11155, 1
  %11157 = xor i8 %11156, 1
  %11158 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11157, i8* %11158, align 1
  %11159 = xor i64 1, %11142
  %11160 = trunc i64 %11159 to i32
  %11161 = xor i32 %11160, %11146
  %11162 = lshr i32 %11161, 4
  %11163 = trunc i32 %11162 to i8
  %11164 = and i8 %11163, 1
  %11165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11164, i8* %11165, align 1
  %11166 = icmp eq i32 %11146, 0
  %11167 = zext i1 %11166 to i8
  %11168 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11167, i8* %11168, align 1
  %11169 = lshr i32 %11146, 31
  %11170 = trunc i32 %11169 to i8
  %11171 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11170, i8* %11171, align 1
  %11172 = lshr i32 %11145, 31
  %11173 = xor i32 %11169, %11172
  %11174 = add i32 %11173, %11169
  %11175 = icmp eq i32 %11174, 2
  %11176 = zext i1 %11175 to i8
  %11177 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11176, i8* %11177, align 1
  store %struct.Memory* %loadMem_4011f8, %struct.Memory** %MEMORY
  %loadMem_4011fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %11178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11179 = getelementptr inbounds %struct.GPR, %struct.GPR* %11178, i32 0, i32 33
  %11180 = getelementptr inbounds %struct.Reg, %struct.Reg* %11179, i32 0, i32 0
  %PC.i821 = bitcast %union.anon* %11180 to i64*
  %11181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11182 = getelementptr inbounds %struct.GPR, %struct.GPR* %11181, i32 0, i32 1
  %11183 = getelementptr inbounds %struct.Reg, %struct.Reg* %11182, i32 0, i32 0
  %EAX.i822 = bitcast %union.anon* %11183 to i32*
  %11184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11185 = getelementptr inbounds %struct.GPR, %struct.GPR* %11184, i32 0, i32 15
  %11186 = getelementptr inbounds %struct.Reg, %struct.Reg* %11185, i32 0, i32 0
  %RBP.i823 = bitcast %union.anon* %11186 to i64*
  %11187 = load i64, i64* %RBP.i823
  %11188 = sub i64 %11187, 4
  %11189 = load i32, i32* %EAX.i822
  %11190 = zext i32 %11189 to i64
  %11191 = load i64, i64* %PC.i821
  %11192 = add i64 %11191, 3
  store i64 %11192, i64* %PC.i821
  %11193 = inttoptr i64 %11188 to i32*
  store i32 %11189, i32* %11193
  store %struct.Memory* %loadMem_4011fb, %struct.Memory** %MEMORY
  %loadMem_4011fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %11194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11195 = getelementptr inbounds %struct.GPR, %struct.GPR* %11194, i32 0, i32 33
  %11196 = getelementptr inbounds %struct.Reg, %struct.Reg* %11195, i32 0, i32 0
  %PC.i820 = bitcast %union.anon* %11196 to i64*
  %11197 = load i64, i64* %PC.i820
  %11198 = add i64 %11197, -234
  %11199 = load i64, i64* %PC.i820
  %11200 = add i64 %11199, 5
  store i64 %11200, i64* %PC.i820
  %11201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11198, i64* %11201, align 8
  store %struct.Memory* %loadMem_4011fe, %struct.Memory** %MEMORY
  br label %block_.L_401114

block_.L_401203:                                  ; preds = %block_.L_401114
  %loadMem_401203 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11203 = getelementptr inbounds %struct.GPR, %struct.GPR* %11202, i32 0, i32 33
  %11204 = getelementptr inbounds %struct.Reg, %struct.Reg* %11203, i32 0, i32 0
  %PC.i817 = bitcast %union.anon* %11204 to i64*
  %11205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11206 = getelementptr inbounds %struct.GPR, %struct.GPR* %11205, i32 0, i32 1
  %11207 = getelementptr inbounds %struct.Reg, %struct.Reg* %11206, i32 0, i32 0
  %RAX.i818 = bitcast %union.anon* %11207 to i64*
  %11208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11209 = getelementptr inbounds %struct.GPR, %struct.GPR* %11208, i32 0, i32 15
  %11210 = getelementptr inbounds %struct.Reg, %struct.Reg* %11209, i32 0, i32 0
  %RBP.i819 = bitcast %union.anon* %11210 to i64*
  %11211 = load i64, i64* %RBP.i819
  %11212 = sub i64 %11211, 1492
  %11213 = load i64, i64* %PC.i817
  %11214 = add i64 %11213, 6
  store i64 %11214, i64* %PC.i817
  %11215 = inttoptr i64 %11212 to i32*
  %11216 = load i32, i32* %11215
  %11217 = zext i32 %11216 to i64
  store i64 %11217, i64* %RAX.i818, align 8
  store %struct.Memory* %loadMem_401203, %struct.Memory** %MEMORY
  %loadMem_401209 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11219 = getelementptr inbounds %struct.GPR, %struct.GPR* %11218, i32 0, i32 33
  %11220 = getelementptr inbounds %struct.Reg, %struct.Reg* %11219, i32 0, i32 0
  %PC.i814 = bitcast %union.anon* %11220 to i64*
  %11221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11222 = getelementptr inbounds %struct.GPR, %struct.GPR* %11221, i32 0, i32 5
  %11223 = getelementptr inbounds %struct.Reg, %struct.Reg* %11222, i32 0, i32 0
  %RCX.i815 = bitcast %union.anon* %11223 to i64*
  %11224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11225 = getelementptr inbounds %struct.GPR, %struct.GPR* %11224, i32 0, i32 15
  %11226 = getelementptr inbounds %struct.Reg, %struct.Reg* %11225, i32 0, i32 0
  %RBP.i816 = bitcast %union.anon* %11226 to i64*
  %11227 = load i64, i64* %RBP.i816
  %11228 = sub i64 %11227, 12
  %11229 = load i64, i64* %PC.i814
  %11230 = add i64 %11229, 4
  store i64 %11230, i64* %PC.i814
  %11231 = inttoptr i64 %11228 to i32*
  %11232 = load i32, i32* %11231
  %11233 = sext i32 %11232 to i64
  store i64 %11233, i64* %RCX.i815, align 8
  store %struct.Memory* %loadMem_401209, %struct.Memory** %MEMORY
  %loadMem_40120d = load %struct.Memory*, %struct.Memory** %MEMORY
  %11234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11235 = getelementptr inbounds %struct.GPR, %struct.GPR* %11234, i32 0, i32 33
  %11236 = getelementptr inbounds %struct.Reg, %struct.Reg* %11235, i32 0, i32 0
  %PC.i810 = bitcast %union.anon* %11236 to i64*
  %11237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11238 = getelementptr inbounds %struct.GPR, %struct.GPR* %11237, i32 0, i32 1
  %11239 = getelementptr inbounds %struct.Reg, %struct.Reg* %11238, i32 0, i32 0
  %EAX.i811 = bitcast %union.anon* %11239 to i32*
  %11240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11241 = getelementptr inbounds %struct.GPR, %struct.GPR* %11240, i32 0, i32 5
  %11242 = getelementptr inbounds %struct.Reg, %struct.Reg* %11241, i32 0, i32 0
  %RCX.i812 = bitcast %union.anon* %11242 to i64*
  %11243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11244 = getelementptr inbounds %struct.GPR, %struct.GPR* %11243, i32 0, i32 15
  %11245 = getelementptr inbounds %struct.Reg, %struct.Reg* %11244, i32 0, i32 0
  %RBP.i813 = bitcast %union.anon* %11245 to i64*
  %11246 = load i32, i32* %EAX.i811
  %11247 = zext i32 %11246 to i64
  %11248 = load i64, i64* %RBP.i813
  %11249 = load i64, i64* %RCX.i812
  %11250 = mul i64 %11249, 4
  %11251 = add i64 %11248, -1328
  %11252 = add i64 %11251, %11250
  %11253 = load i64, i64* %PC.i810
  %11254 = add i64 %11253, 7
  store i64 %11254, i64* %PC.i810
  %11255 = inttoptr i64 %11252 to i32*
  %11256 = load i32, i32* %11255
  %11257 = sub i32 %11246, %11256
  %11258 = icmp ult i32 %11246, %11256
  %11259 = zext i1 %11258 to i8
  %11260 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11259, i8* %11260, align 1
  %11261 = and i32 %11257, 255
  %11262 = call i32 @llvm.ctpop.i32(i32 %11261)
  %11263 = trunc i32 %11262 to i8
  %11264 = and i8 %11263, 1
  %11265 = xor i8 %11264, 1
  %11266 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11265, i8* %11266, align 1
  %11267 = xor i32 %11256, %11246
  %11268 = xor i32 %11267, %11257
  %11269 = lshr i32 %11268, 4
  %11270 = trunc i32 %11269 to i8
  %11271 = and i8 %11270, 1
  %11272 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11271, i8* %11272, align 1
  %11273 = icmp eq i32 %11257, 0
  %11274 = zext i1 %11273 to i8
  %11275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11274, i8* %11275, align 1
  %11276 = lshr i32 %11257, 31
  %11277 = trunc i32 %11276 to i8
  %11278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11277, i8* %11278, align 1
  %11279 = lshr i32 %11246, 31
  %11280 = lshr i32 %11256, 31
  %11281 = xor i32 %11280, %11279
  %11282 = xor i32 %11276, %11279
  %11283 = add i32 %11282, %11281
  %11284 = icmp eq i32 %11283, 2
  %11285 = zext i1 %11284 to i8
  %11286 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11285, i8* %11286, align 1
  store %struct.Memory* %loadMem_40120d, %struct.Memory** %MEMORY
  %loadMem_401214 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11288 = getelementptr inbounds %struct.GPR, %struct.GPR* %11287, i32 0, i32 33
  %11289 = getelementptr inbounds %struct.Reg, %struct.Reg* %11288, i32 0, i32 0
  %PC.i809 = bitcast %union.anon* %11289 to i64*
  %11290 = load i64, i64* %PC.i809
  %11291 = add i64 %11290, 1279
  %11292 = load i64, i64* %PC.i809
  %11293 = add i64 %11292, 6
  %11294 = load i64, i64* %PC.i809
  %11295 = add i64 %11294, 6
  store i64 %11295, i64* %PC.i809
  %11296 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11297 = load i8, i8* %11296, align 1
  %11298 = icmp eq i8 %11297, 0
  %11299 = zext i1 %11298 to i8
  store i8 %11299, i8* %BRANCH_TAKEN, align 1
  %11300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11301 = select i1 %11298, i64 %11291, i64 %11293
  store i64 %11301, i64* %11300, align 8
  store %struct.Memory* %loadMem_401214, %struct.Memory** %MEMORY
  %loadBr_401214 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_401214 = icmp eq i8 %loadBr_401214, 1
  br i1 %cmpBr_401214, label %block_.L_401713, label %block_40121a

block_40121a:                                     ; preds = %block_.L_401203
  %loadMem_40121a = load %struct.Memory*, %struct.Memory** %MEMORY
  %11302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11303 = getelementptr inbounds %struct.GPR, %struct.GPR* %11302, i32 0, i32 33
  %11304 = getelementptr inbounds %struct.Reg, %struct.Reg* %11303, i32 0, i32 0
  %PC.i807 = bitcast %union.anon* %11304 to i64*
  %11305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11306 = getelementptr inbounds %struct.GPR, %struct.GPR* %11305, i32 0, i32 15
  %11307 = getelementptr inbounds %struct.Reg, %struct.Reg* %11306, i32 0, i32 0
  %RBP.i808 = bitcast %union.anon* %11307 to i64*
  %11308 = load i64, i64* %RBP.i808
  %11309 = sub i64 %11308, 4
  %11310 = load i64, i64* %PC.i807
  %11311 = add i64 %11310, 7
  store i64 %11311, i64* %PC.i807
  %11312 = inttoptr i64 %11309 to i32*
  store i32 1, i32* %11312
  store %struct.Memory* %loadMem_40121a, %struct.Memory** %MEMORY
  br label %block_.L_401221

block_.L_401221:                                  ; preds = %block_.L_401434, %block_40121a
  %loadMem_401221 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11314 = getelementptr inbounds %struct.GPR, %struct.GPR* %11313, i32 0, i32 33
  %11315 = getelementptr inbounds %struct.Reg, %struct.Reg* %11314, i32 0, i32 0
  %PC.i804 = bitcast %union.anon* %11315 to i64*
  %11316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11317 = getelementptr inbounds %struct.GPR, %struct.GPR* %11316, i32 0, i32 1
  %11318 = getelementptr inbounds %struct.Reg, %struct.Reg* %11317, i32 0, i32 0
  %RAX.i805 = bitcast %union.anon* %11318 to i64*
  %11319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11320 = getelementptr inbounds %struct.GPR, %struct.GPR* %11319, i32 0, i32 15
  %11321 = getelementptr inbounds %struct.Reg, %struct.Reg* %11320, i32 0, i32 0
  %RBP.i806 = bitcast %union.anon* %11321 to i64*
  %11322 = load i64, i64* %RBP.i806
  %11323 = sub i64 %11322, 4
  %11324 = load i64, i64* %PC.i804
  %11325 = add i64 %11324, 3
  store i64 %11325, i64* %PC.i804
  %11326 = inttoptr i64 %11323 to i32*
  %11327 = load i32, i32* %11326
  %11328 = zext i32 %11327 to i64
  store i64 %11328, i64* %RAX.i805, align 8
  store %struct.Memory* %loadMem_401221, %struct.Memory** %MEMORY
  %loadMem_401224 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11330 = getelementptr inbounds %struct.GPR, %struct.GPR* %11329, i32 0, i32 33
  %11331 = getelementptr inbounds %struct.Reg, %struct.Reg* %11330, i32 0, i32 0
  %PC.i801 = bitcast %union.anon* %11331 to i64*
  %11332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11333 = getelementptr inbounds %struct.GPR, %struct.GPR* %11332, i32 0, i32 5
  %11334 = getelementptr inbounds %struct.Reg, %struct.Reg* %11333, i32 0, i32 0
  %RCX.i802 = bitcast %union.anon* %11334 to i64*
  %11335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11336 = getelementptr inbounds %struct.GPR, %struct.GPR* %11335, i32 0, i32 15
  %11337 = getelementptr inbounds %struct.Reg, %struct.Reg* %11336, i32 0, i32 0
  %RBP.i803 = bitcast %union.anon* %11337 to i64*
  %11338 = load i64, i64* %RBP.i803
  %11339 = sub i64 %11338, 12
  %11340 = load i64, i64* %PC.i801
  %11341 = add i64 %11340, 4
  store i64 %11341, i64* %PC.i801
  %11342 = inttoptr i64 %11339 to i32*
  %11343 = load i32, i32* %11342
  %11344 = sext i32 %11343 to i64
  store i64 %11344, i64* %RCX.i802, align 8
  store %struct.Memory* %loadMem_401224, %struct.Memory** %MEMORY
  %loadMem_401228 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11346 = getelementptr inbounds %struct.GPR, %struct.GPR* %11345, i32 0, i32 33
  %11347 = getelementptr inbounds %struct.Reg, %struct.Reg* %11346, i32 0, i32 0
  %PC.i797 = bitcast %union.anon* %11347 to i64*
  %11348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11349 = getelementptr inbounds %struct.GPR, %struct.GPR* %11348, i32 0, i32 1
  %11350 = getelementptr inbounds %struct.Reg, %struct.Reg* %11349, i32 0, i32 0
  %EAX.i798 = bitcast %union.anon* %11350 to i32*
  %11351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11352 = getelementptr inbounds %struct.GPR, %struct.GPR* %11351, i32 0, i32 5
  %11353 = getelementptr inbounds %struct.Reg, %struct.Reg* %11352, i32 0, i32 0
  %RCX.i799 = bitcast %union.anon* %11353 to i64*
  %11354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11355 = getelementptr inbounds %struct.GPR, %struct.GPR* %11354, i32 0, i32 15
  %11356 = getelementptr inbounds %struct.Reg, %struct.Reg* %11355, i32 0, i32 0
  %RBP.i800 = bitcast %union.anon* %11356 to i64*
  %11357 = load i32, i32* %EAX.i798
  %11358 = zext i32 %11357 to i64
  %11359 = load i64, i64* %RBP.i800
  %11360 = load i64, i64* %RCX.i799
  %11361 = mul i64 %11360, 4
  %11362 = add i64 %11359, -1328
  %11363 = add i64 %11362, %11361
  %11364 = load i64, i64* %PC.i797
  %11365 = add i64 %11364, 7
  store i64 %11365, i64* %PC.i797
  %11366 = inttoptr i64 %11363 to i32*
  %11367 = load i32, i32* %11366
  %11368 = sub i32 %11357, %11367
  %11369 = icmp ult i32 %11357, %11367
  %11370 = zext i1 %11369 to i8
  %11371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11370, i8* %11371, align 1
  %11372 = and i32 %11368, 255
  %11373 = call i32 @llvm.ctpop.i32(i32 %11372)
  %11374 = trunc i32 %11373 to i8
  %11375 = and i8 %11374, 1
  %11376 = xor i8 %11375, 1
  %11377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11376, i8* %11377, align 1
  %11378 = xor i32 %11367, %11357
  %11379 = xor i32 %11378, %11368
  %11380 = lshr i32 %11379, 4
  %11381 = trunc i32 %11380 to i8
  %11382 = and i8 %11381, 1
  %11383 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11382, i8* %11383, align 1
  %11384 = icmp eq i32 %11368, 0
  %11385 = zext i1 %11384 to i8
  %11386 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11385, i8* %11386, align 1
  %11387 = lshr i32 %11368, 31
  %11388 = trunc i32 %11387 to i8
  %11389 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11388, i8* %11389, align 1
  %11390 = lshr i32 %11357, 31
  %11391 = lshr i32 %11367, 31
  %11392 = xor i32 %11391, %11390
  %11393 = xor i32 %11387, %11390
  %11394 = add i32 %11393, %11392
  %11395 = icmp eq i32 %11394, 2
  %11396 = zext i1 %11395 to i8
  %11397 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11396, i8* %11397, align 1
  store %struct.Memory* %loadMem_401228, %struct.Memory** %MEMORY
  %loadMem_40122f = load %struct.Memory*, %struct.Memory** %MEMORY
  %11398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11399 = getelementptr inbounds %struct.GPR, %struct.GPR* %11398, i32 0, i32 33
  %11400 = getelementptr inbounds %struct.Reg, %struct.Reg* %11399, i32 0, i32 0
  %PC.i796 = bitcast %union.anon* %11400 to i64*
  %11401 = load i64, i64* %PC.i796
  %11402 = add i64 %11401, 561
  %11403 = load i64, i64* %PC.i796
  %11404 = add i64 %11403, 6
  %11405 = load i64, i64* %PC.i796
  %11406 = add i64 %11405, 6
  store i64 %11406, i64* %PC.i796
  %11407 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11408 = load i8, i8* %11407, align 1
  %11409 = icmp eq i8 %11408, 0
  %11410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11411 = load i8, i8* %11410, align 1
  %11412 = icmp ne i8 %11411, 0
  %11413 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %11414 = load i8, i8* %11413, align 1
  %11415 = icmp ne i8 %11414, 0
  %11416 = xor i1 %11412, %11415
  %11417 = xor i1 %11416, true
  %11418 = and i1 %11409, %11417
  %11419 = zext i1 %11418 to i8
  store i8 %11419, i8* %BRANCH_TAKEN, align 1
  %11420 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11421 = select i1 %11418, i64 %11402, i64 %11404
  store i64 %11421, i64* %11420, align 8
  store %struct.Memory* %loadMem_40122f, %struct.Memory** %MEMORY
  %loadBr_40122f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40122f = icmp eq i8 %loadBr_40122f, 1
  br i1 %cmpBr_40122f, label %block_.L_401460, label %block_401235

block_401235:                                     ; preds = %block_.L_401221
  %loadMem_401235 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11423 = getelementptr inbounds %struct.GPR, %struct.GPR* %11422, i32 0, i32 33
  %11424 = getelementptr inbounds %struct.Reg, %struct.Reg* %11423, i32 0, i32 0
  %PC.i793 = bitcast %union.anon* %11424 to i64*
  %11425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11426 = getelementptr inbounds %struct.GPR, %struct.GPR* %11425, i32 0, i32 1
  %11427 = getelementptr inbounds %struct.Reg, %struct.Reg* %11426, i32 0, i32 0
  %RAX.i794 = bitcast %union.anon* %11427 to i64*
  %11428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11429 = getelementptr inbounds %struct.GPR, %struct.GPR* %11428, i32 0, i32 15
  %11430 = getelementptr inbounds %struct.Reg, %struct.Reg* %11429, i32 0, i32 0
  %RBP.i795 = bitcast %union.anon* %11430 to i64*
  %11431 = load i64, i64* %RBP.i795
  %11432 = sub i64 %11431, 4
  %11433 = load i64, i64* %PC.i793
  %11434 = add i64 %11433, 4
  store i64 %11434, i64* %PC.i793
  %11435 = inttoptr i64 %11432 to i32*
  %11436 = load i32, i32* %11435
  %11437 = sext i32 %11436 to i64
  store i64 %11437, i64* %RAX.i794, align 8
  store %struct.Memory* %loadMem_401235, %struct.Memory** %MEMORY
  %loadMem_401239 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11439 = getelementptr inbounds %struct.GPR, %struct.GPR* %11438, i32 0, i32 33
  %11440 = getelementptr inbounds %struct.Reg, %struct.Reg* %11439, i32 0, i32 0
  %PC.i790 = bitcast %union.anon* %11440 to i64*
  %11441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11442 = getelementptr inbounds %struct.GPR, %struct.GPR* %11441, i32 0, i32 1
  %11443 = getelementptr inbounds %struct.Reg, %struct.Reg* %11442, i32 0, i32 0
  %RAX.i791 = bitcast %union.anon* %11443 to i64*
  %11444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11445 = getelementptr inbounds %struct.GPR, %struct.GPR* %11444, i32 0, i32 15
  %11446 = getelementptr inbounds %struct.Reg, %struct.Reg* %11445, i32 0, i32 0
  %RBP.i792 = bitcast %union.anon* %11446 to i64*
  %11447 = load i64, i64* %RBP.i792
  %11448 = load i64, i64* %RAX.i791
  %11449 = mul i64 %11448, 4
  %11450 = add i64 %11447, -1488
  %11451 = add i64 %11450, %11449
  %11452 = load i64, i64* %PC.i790
  %11453 = add i64 %11452, 8
  store i64 %11453, i64* %PC.i790
  %11454 = inttoptr i64 %11451 to i32*
  %11455 = load i32, i32* %11454
  %11456 = sub i32 %11455, -1
  %11457 = icmp ult i32 %11455, -1
  %11458 = zext i1 %11457 to i8
  %11459 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11458, i8* %11459, align 1
  %11460 = and i32 %11456, 255
  %11461 = call i32 @llvm.ctpop.i32(i32 %11460)
  %11462 = trunc i32 %11461 to i8
  %11463 = and i8 %11462, 1
  %11464 = xor i8 %11463, 1
  %11465 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11464, i8* %11465, align 1
  %11466 = xor i32 %11455, -1
  %11467 = xor i32 %11466, %11456
  %11468 = lshr i32 %11467, 4
  %11469 = trunc i32 %11468 to i8
  %11470 = and i8 %11469, 1
  %11471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11470, i8* %11471, align 1
  %11472 = icmp eq i32 %11456, 0
  %11473 = zext i1 %11472 to i8
  %11474 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11473, i8* %11474, align 1
  %11475 = lshr i32 %11456, 31
  %11476 = trunc i32 %11475 to i8
  %11477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11476, i8* %11477, align 1
  %11478 = lshr i32 %11455, 31
  %11479 = xor i32 %11478, 1
  %11480 = xor i32 %11475, %11478
  %11481 = add i32 %11480, %11479
  %11482 = icmp eq i32 %11481, 2
  %11483 = zext i1 %11482 to i8
  %11484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11483, i8* %11484, align 1
  store %struct.Memory* %loadMem_401239, %struct.Memory** %MEMORY
  %loadMem_401241 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11486 = getelementptr inbounds %struct.GPR, %struct.GPR* %11485, i32 0, i32 33
  %11487 = getelementptr inbounds %struct.Reg, %struct.Reg* %11486, i32 0, i32 0
  %PC.i789 = bitcast %union.anon* %11487 to i64*
  %11488 = load i64, i64* %PC.i789
  %11489 = add i64 %11488, 106
  %11490 = load i64, i64* %PC.i789
  %11491 = add i64 %11490, 6
  %11492 = load i64, i64* %PC.i789
  %11493 = add i64 %11492, 6
  store i64 %11493, i64* %PC.i789
  %11494 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11495 = load i8, i8* %11494, align 1
  store i8 %11495, i8* %BRANCH_TAKEN, align 1
  %11496 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11497 = icmp ne i8 %11495, 0
  %11498 = select i1 %11497, i64 %11489, i64 %11491
  store i64 %11498, i64* %11496, align 8
  store %struct.Memory* %loadMem_401241, %struct.Memory** %MEMORY
  %loadBr_401241 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_401241 = icmp eq i8 %loadBr_401241, 1
  br i1 %cmpBr_401241, label %block_.L_4012ab, label %block_401247

block_401247:                                     ; preds = %block_401235
  %loadMem_401247 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11500 = getelementptr inbounds %struct.GPR, %struct.GPR* %11499, i32 0, i32 33
  %11501 = getelementptr inbounds %struct.Reg, %struct.Reg* %11500, i32 0, i32 0
  %PC.i786 = bitcast %union.anon* %11501 to i64*
  %11502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11503 = getelementptr inbounds %struct.GPR, %struct.GPR* %11502, i32 0, i32 1
  %11504 = getelementptr inbounds %struct.Reg, %struct.Reg* %11503, i32 0, i32 0
  %RAX.i787 = bitcast %union.anon* %11504 to i64*
  %11505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11506 = getelementptr inbounds %struct.GPR, %struct.GPR* %11505, i32 0, i32 15
  %11507 = getelementptr inbounds %struct.Reg, %struct.Reg* %11506, i32 0, i32 0
  %RBP.i788 = bitcast %union.anon* %11507 to i64*
  %11508 = load i64, i64* %RBP.i788
  %11509 = sub i64 %11508, 1168
  %11510 = load i64, i64* %PC.i786
  %11511 = add i64 %11510, 7
  store i64 %11511, i64* %PC.i786
  store i64 %11509, i64* %RAX.i787, align 8
  store %struct.Memory* %loadMem_401247, %struct.Memory** %MEMORY
  %loadMem_40124e = load %struct.Memory*, %struct.Memory** %MEMORY
  %11512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11513 = getelementptr inbounds %struct.GPR, %struct.GPR* %11512, i32 0, i32 33
  %11514 = getelementptr inbounds %struct.Reg, %struct.Reg* %11513, i32 0, i32 0
  %PC.i783 = bitcast %union.anon* %11514 to i64*
  %11515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11516 = getelementptr inbounds %struct.GPR, %struct.GPR* %11515, i32 0, i32 5
  %11517 = getelementptr inbounds %struct.Reg, %struct.Reg* %11516, i32 0, i32 0
  %RCX.i784 = bitcast %union.anon* %11517 to i64*
  %11518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11519 = getelementptr inbounds %struct.GPR, %struct.GPR* %11518, i32 0, i32 15
  %11520 = getelementptr inbounds %struct.Reg, %struct.Reg* %11519, i32 0, i32 0
  %RBP.i785 = bitcast %union.anon* %11520 to i64*
  %11521 = load i64, i64* %RBP.i785
  %11522 = sub i64 %11521, 12
  %11523 = load i64, i64* %PC.i783
  %11524 = add i64 %11523, 4
  store i64 %11524, i64* %PC.i783
  %11525 = inttoptr i64 %11522 to i32*
  %11526 = load i32, i32* %11525
  %11527 = sext i32 %11526 to i64
  store i64 %11527, i64* %RCX.i784, align 8
  store %struct.Memory* %loadMem_40124e, %struct.Memory** %MEMORY
  %loadMem_401252 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11529 = getelementptr inbounds %struct.GPR, %struct.GPR* %11528, i32 0, i32 33
  %11530 = getelementptr inbounds %struct.Reg, %struct.Reg* %11529, i32 0, i32 0
  %PC.i781 = bitcast %union.anon* %11530 to i64*
  %11531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11532 = getelementptr inbounds %struct.GPR, %struct.GPR* %11531, i32 0, i32 5
  %11533 = getelementptr inbounds %struct.Reg, %struct.Reg* %11532, i32 0, i32 0
  %RCX.i782 = bitcast %union.anon* %11533 to i64*
  %11534 = load i64, i64* %RCX.i782
  %11535 = load i64, i64* %PC.i781
  %11536 = add i64 %11535, 4
  store i64 %11536, i64* %PC.i781
  %11537 = shl i64 %11534, 5
  %11538 = icmp slt i64 %11537, 0
  %11539 = shl i64 %11537, 1
  store i64 %11539, i64* %RCX.i782, align 8
  %11540 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %11541 = zext i1 %11538 to i8
  store i8 %11541, i8* %11540, align 1
  %11542 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %11543 = trunc i64 %11539 to i32
  %11544 = and i32 %11543, 254
  %11545 = call i32 @llvm.ctpop.i32(i32 %11544)
  %11546 = trunc i32 %11545 to i8
  %11547 = and i8 %11546, 1
  %11548 = xor i8 %11547, 1
  store i8 %11548, i8* %11542, align 1
  %11549 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11549, align 1
  %11550 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11551 = icmp eq i64 %11539, 0
  %11552 = zext i1 %11551 to i8
  store i8 %11552, i8* %11550, align 1
  %11553 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11554 = lshr i64 %11539, 63
  %11555 = trunc i64 %11554 to i8
  store i8 %11555, i8* %11553, align 1
  %11556 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11556, align 1
  store %struct.Memory* %loadMem_401252, %struct.Memory** %MEMORY
  %loadMem_401256 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11558 = getelementptr inbounds %struct.GPR, %struct.GPR* %11557, i32 0, i32 33
  %11559 = getelementptr inbounds %struct.Reg, %struct.Reg* %11558, i32 0, i32 0
  %PC.i778 = bitcast %union.anon* %11559 to i64*
  %11560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11561 = getelementptr inbounds %struct.GPR, %struct.GPR* %11560, i32 0, i32 1
  %11562 = getelementptr inbounds %struct.Reg, %struct.Reg* %11561, i32 0, i32 0
  %RAX.i779 = bitcast %union.anon* %11562 to i64*
  %11563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11564 = getelementptr inbounds %struct.GPR, %struct.GPR* %11563, i32 0, i32 5
  %11565 = getelementptr inbounds %struct.Reg, %struct.Reg* %11564, i32 0, i32 0
  %RCX.i780 = bitcast %union.anon* %11565 to i64*
  %11566 = load i64, i64* %RAX.i779
  %11567 = load i64, i64* %RCX.i780
  %11568 = load i64, i64* %PC.i778
  %11569 = add i64 %11568, 3
  store i64 %11569, i64* %PC.i778
  %11570 = add i64 %11567, %11566
  store i64 %11570, i64* %RAX.i779, align 8
  %11571 = icmp ult i64 %11570, %11566
  %11572 = icmp ult i64 %11570, %11567
  %11573 = or i1 %11571, %11572
  %11574 = zext i1 %11573 to i8
  %11575 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11574, i8* %11575, align 1
  %11576 = trunc i64 %11570 to i32
  %11577 = and i32 %11576, 255
  %11578 = call i32 @llvm.ctpop.i32(i32 %11577)
  %11579 = trunc i32 %11578 to i8
  %11580 = and i8 %11579, 1
  %11581 = xor i8 %11580, 1
  %11582 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11581, i8* %11582, align 1
  %11583 = xor i64 %11567, %11566
  %11584 = xor i64 %11583, %11570
  %11585 = lshr i64 %11584, 4
  %11586 = trunc i64 %11585 to i8
  %11587 = and i8 %11586, 1
  %11588 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11587, i8* %11588, align 1
  %11589 = icmp eq i64 %11570, 0
  %11590 = zext i1 %11589 to i8
  %11591 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11590, i8* %11591, align 1
  %11592 = lshr i64 %11570, 63
  %11593 = trunc i64 %11592 to i8
  %11594 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11593, i8* %11594, align 1
  %11595 = lshr i64 %11566, 63
  %11596 = lshr i64 %11567, 63
  %11597 = xor i64 %11592, %11595
  %11598 = xor i64 %11592, %11596
  %11599 = add i64 %11597, %11598
  %11600 = icmp eq i64 %11599, 2
  %11601 = zext i1 %11600 to i8
  %11602 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11601, i8* %11602, align 1
  store %struct.Memory* %loadMem_401256, %struct.Memory** %MEMORY
  %loadMem_401259 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11603 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11604 = getelementptr inbounds %struct.GPR, %struct.GPR* %11603, i32 0, i32 33
  %11605 = getelementptr inbounds %struct.Reg, %struct.Reg* %11604, i32 0, i32 0
  %PC.i775 = bitcast %union.anon* %11605 to i64*
  %11606 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11607 = getelementptr inbounds %struct.GPR, %struct.GPR* %11606, i32 0, i32 5
  %11608 = getelementptr inbounds %struct.Reg, %struct.Reg* %11607, i32 0, i32 0
  %RCX.i776 = bitcast %union.anon* %11608 to i64*
  %11609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11610 = getelementptr inbounds %struct.GPR, %struct.GPR* %11609, i32 0, i32 15
  %11611 = getelementptr inbounds %struct.Reg, %struct.Reg* %11610, i32 0, i32 0
  %RBP.i777 = bitcast %union.anon* %11611 to i64*
  %11612 = load i64, i64* %RBP.i777
  %11613 = sub i64 %11612, 4
  %11614 = load i64, i64* %PC.i775
  %11615 = add i64 %11614, 4
  store i64 %11615, i64* %PC.i775
  %11616 = inttoptr i64 %11613 to i32*
  %11617 = load i32, i32* %11616
  %11618 = sext i32 %11617 to i64
  store i64 %11618, i64* %RCX.i776, align 8
  store %struct.Memory* %loadMem_401259, %struct.Memory** %MEMORY
  %loadMem_40125d = load %struct.Memory*, %struct.Memory** %MEMORY
  %11619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11620 = getelementptr inbounds %struct.GPR, %struct.GPR* %11619, i32 0, i32 33
  %11621 = getelementptr inbounds %struct.Reg, %struct.Reg* %11620, i32 0, i32 0
  %PC.i772 = bitcast %union.anon* %11621 to i64*
  %11622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11623 = getelementptr inbounds %struct.GPR, %struct.GPR* %11622, i32 0, i32 1
  %11624 = getelementptr inbounds %struct.Reg, %struct.Reg* %11623, i32 0, i32 0
  %RAX.i773 = bitcast %union.anon* %11624 to i64*
  %11625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11626 = getelementptr inbounds %struct.GPR, %struct.GPR* %11625, i32 0, i32 5
  %11627 = getelementptr inbounds %struct.Reg, %struct.Reg* %11626, i32 0, i32 0
  %RCX.i774 = bitcast %union.anon* %11627 to i64*
  %11628 = load i64, i64* %RAX.i773
  %11629 = load i64, i64* %RCX.i774
  %11630 = mul i64 %11629, 4
  %11631 = add i64 %11630, %11628
  %11632 = load i64, i64* %PC.i772
  %11633 = add i64 %11632, 4
  store i64 %11633, i64* %PC.i772
  %11634 = inttoptr i64 %11631 to i32*
  %11635 = load i32, i32* %11634
  %11636 = sub i32 %11635, -1
  %11637 = icmp ult i32 %11635, -1
  %11638 = zext i1 %11637 to i8
  %11639 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11638, i8* %11639, align 1
  %11640 = and i32 %11636, 255
  %11641 = call i32 @llvm.ctpop.i32(i32 %11640)
  %11642 = trunc i32 %11641 to i8
  %11643 = and i8 %11642, 1
  %11644 = xor i8 %11643, 1
  %11645 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11644, i8* %11645, align 1
  %11646 = xor i32 %11635, -1
  %11647 = xor i32 %11646, %11636
  %11648 = lshr i32 %11647, 4
  %11649 = trunc i32 %11648 to i8
  %11650 = and i8 %11649, 1
  %11651 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11650, i8* %11651, align 1
  %11652 = icmp eq i32 %11636, 0
  %11653 = zext i1 %11652 to i8
  %11654 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11653, i8* %11654, align 1
  %11655 = lshr i32 %11636, 31
  %11656 = trunc i32 %11655 to i8
  %11657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11656, i8* %11657, align 1
  %11658 = lshr i32 %11635, 31
  %11659 = xor i32 %11658, 1
  %11660 = xor i32 %11655, %11658
  %11661 = add i32 %11660, %11659
  %11662 = icmp eq i32 %11661, 2
  %11663 = zext i1 %11662 to i8
  %11664 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11663, i8* %11664, align 1
  store %struct.Memory* %loadMem_40125d, %struct.Memory** %MEMORY
  %loadMem_401261 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11666 = getelementptr inbounds %struct.GPR, %struct.GPR* %11665, i32 0, i32 33
  %11667 = getelementptr inbounds %struct.Reg, %struct.Reg* %11666, i32 0, i32 0
  %PC.i771 = bitcast %union.anon* %11667 to i64*
  %11668 = load i64, i64* %PC.i771
  %11669 = add i64 %11668, 74
  %11670 = load i64, i64* %PC.i771
  %11671 = add i64 %11670, 6
  %11672 = load i64, i64* %PC.i771
  %11673 = add i64 %11672, 6
  store i64 %11673, i64* %PC.i771
  %11674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11675 = load i8, i8* %11674, align 1
  store i8 %11675, i8* %BRANCH_TAKEN, align 1
  %11676 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11677 = icmp ne i8 %11675, 0
  %11678 = select i1 %11677, i64 %11669, i64 %11671
  store i64 %11678, i64* %11676, align 8
  store %struct.Memory* %loadMem_401261, %struct.Memory** %MEMORY
  %loadBr_401261 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_401261 = icmp eq i8 %loadBr_401261, 1
  br i1 %cmpBr_401261, label %block_.L_4012ab, label %block_401267

block_401267:                                     ; preds = %block_401247
  %loadMem_401267 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11680 = getelementptr inbounds %struct.GPR, %struct.GPR* %11679, i32 0, i32 33
  %11681 = getelementptr inbounds %struct.Reg, %struct.Reg* %11680, i32 0, i32 0
  %PC.i768 = bitcast %union.anon* %11681 to i64*
  %11682 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11683 = getelementptr inbounds %struct.GPR, %struct.GPR* %11682, i32 0, i32 1
  %11684 = getelementptr inbounds %struct.Reg, %struct.Reg* %11683, i32 0, i32 0
  %RAX.i769 = bitcast %union.anon* %11684 to i64*
  %11685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11686 = getelementptr inbounds %struct.GPR, %struct.GPR* %11685, i32 0, i32 15
  %11687 = getelementptr inbounds %struct.Reg, %struct.Reg* %11686, i32 0, i32 0
  %RBP.i770 = bitcast %union.anon* %11687 to i64*
  %11688 = load i64, i64* %RBP.i770
  %11689 = sub i64 %11688, 1168
  %11690 = load i64, i64* %PC.i768
  %11691 = add i64 %11690, 7
  store i64 %11691, i64* %PC.i768
  store i64 %11689, i64* %RAX.i769, align 8
  store %struct.Memory* %loadMem_401267, %struct.Memory** %MEMORY
  %loadMem_40126e = load %struct.Memory*, %struct.Memory** %MEMORY
  %11692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11693 = getelementptr inbounds %struct.GPR, %struct.GPR* %11692, i32 0, i32 33
  %11694 = getelementptr inbounds %struct.Reg, %struct.Reg* %11693, i32 0, i32 0
  %PC.i765 = bitcast %union.anon* %11694 to i64*
  %11695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11696 = getelementptr inbounds %struct.GPR, %struct.GPR* %11695, i32 0, i32 5
  %11697 = getelementptr inbounds %struct.Reg, %struct.Reg* %11696, i32 0, i32 0
  %RCX.i766 = bitcast %union.anon* %11697 to i64*
  %11698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11699 = getelementptr inbounds %struct.GPR, %struct.GPR* %11698, i32 0, i32 15
  %11700 = getelementptr inbounds %struct.Reg, %struct.Reg* %11699, i32 0, i32 0
  %RBP.i767 = bitcast %union.anon* %11700 to i64*
  %11701 = load i64, i64* %RBP.i767
  %11702 = sub i64 %11701, 4
  %11703 = load i64, i64* %PC.i765
  %11704 = add i64 %11703, 4
  store i64 %11704, i64* %PC.i765
  %11705 = inttoptr i64 %11702 to i32*
  %11706 = load i32, i32* %11705
  %11707 = sext i32 %11706 to i64
  store i64 %11707, i64* %RCX.i766, align 8
  store %struct.Memory* %loadMem_40126e, %struct.Memory** %MEMORY
  %loadMem_401272 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11709 = getelementptr inbounds %struct.GPR, %struct.GPR* %11708, i32 0, i32 33
  %11710 = getelementptr inbounds %struct.Reg, %struct.Reg* %11709, i32 0, i32 0
  %PC.i762 = bitcast %union.anon* %11710 to i64*
  %11711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11712 = getelementptr inbounds %struct.GPR, %struct.GPR* %11711, i32 0, i32 5
  %11713 = getelementptr inbounds %struct.Reg, %struct.Reg* %11712, i32 0, i32 0
  %RCX.i763 = bitcast %union.anon* %11713 to i64*
  %11714 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11715 = getelementptr inbounds %struct.GPR, %struct.GPR* %11714, i32 0, i32 15
  %11716 = getelementptr inbounds %struct.Reg, %struct.Reg* %11715, i32 0, i32 0
  %RBP.i764 = bitcast %union.anon* %11716 to i64*
  %11717 = load i64, i64* %RBP.i764
  %11718 = load i64, i64* %RCX.i763
  %11719 = mul i64 %11718, 4
  %11720 = add i64 %11717, -1488
  %11721 = add i64 %11720, %11719
  %11722 = load i64, i64* %PC.i762
  %11723 = add i64 %11722, 8
  store i64 %11723, i64* %PC.i762
  %11724 = inttoptr i64 %11721 to i32*
  %11725 = load i32, i32* %11724
  %11726 = sext i32 %11725 to i64
  store i64 %11726, i64* %RCX.i763, align 8
  store %struct.Memory* %loadMem_401272, %struct.Memory** %MEMORY
  %loadMem_40127a = load %struct.Memory*, %struct.Memory** %MEMORY
  %11727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11728 = getelementptr inbounds %struct.GPR, %struct.GPR* %11727, i32 0, i32 33
  %11729 = getelementptr inbounds %struct.Reg, %struct.Reg* %11728, i32 0, i32 0
  %PC.i759 = bitcast %union.anon* %11729 to i64*
  %11730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11731 = getelementptr inbounds %struct.GPR, %struct.GPR* %11730, i32 0, i32 5
  %11732 = getelementptr inbounds %struct.Reg, %struct.Reg* %11731, i32 0, i32 0
  %RCX.i760 = bitcast %union.anon* %11732 to i64*
  %11733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11734 = getelementptr inbounds %struct.GPR, %struct.GPR* %11733, i32 0, i32 7
  %11735 = getelementptr inbounds %struct.Reg, %struct.Reg* %11734, i32 0, i32 0
  %RDX.i761 = bitcast %union.anon* %11735 to i64*
  %11736 = load i64, i64* %RCX.i760
  %11737 = mul i64 %11736, 4
  %11738 = add i64 %11737, 6305920
  %11739 = load i64, i64* %PC.i759
  %11740 = add i64 %11739, 7
  store i64 %11740, i64* %PC.i759
  %11741 = inttoptr i64 %11738 to i32*
  %11742 = load i32, i32* %11741
  %11743 = zext i32 %11742 to i64
  store i64 %11743, i64* %RDX.i761, align 8
  store %struct.Memory* %loadMem_40127a, %struct.Memory** %MEMORY
  %loadMem_401281 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11745 = getelementptr inbounds %struct.GPR, %struct.GPR* %11744, i32 0, i32 33
  %11746 = getelementptr inbounds %struct.Reg, %struct.Reg* %11745, i32 0, i32 0
  %PC.i756 = bitcast %union.anon* %11746 to i64*
  %11747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11748 = getelementptr inbounds %struct.GPR, %struct.GPR* %11747, i32 0, i32 5
  %11749 = getelementptr inbounds %struct.Reg, %struct.Reg* %11748, i32 0, i32 0
  %RCX.i757 = bitcast %union.anon* %11749 to i64*
  %11750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11751 = getelementptr inbounds %struct.GPR, %struct.GPR* %11750, i32 0, i32 15
  %11752 = getelementptr inbounds %struct.Reg, %struct.Reg* %11751, i32 0, i32 0
  %RBP.i758 = bitcast %union.anon* %11752 to i64*
  %11753 = load i64, i64* %RBP.i758
  %11754 = sub i64 %11753, 12
  %11755 = load i64, i64* %PC.i756
  %11756 = add i64 %11755, 4
  store i64 %11756, i64* %PC.i756
  %11757 = inttoptr i64 %11754 to i32*
  %11758 = load i32, i32* %11757
  %11759 = sext i32 %11758 to i64
  store i64 %11759, i64* %RCX.i757, align 8
  store %struct.Memory* %loadMem_401281, %struct.Memory** %MEMORY
  %loadMem_401285 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11761 = getelementptr inbounds %struct.GPR, %struct.GPR* %11760, i32 0, i32 33
  %11762 = getelementptr inbounds %struct.Reg, %struct.Reg* %11761, i32 0, i32 0
  %PC.i754 = bitcast %union.anon* %11762 to i64*
  %11763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11764 = getelementptr inbounds %struct.GPR, %struct.GPR* %11763, i32 0, i32 5
  %11765 = getelementptr inbounds %struct.Reg, %struct.Reg* %11764, i32 0, i32 0
  %RCX.i755 = bitcast %union.anon* %11765 to i64*
  %11766 = load i64, i64* %RCX.i755
  %11767 = load i64, i64* %PC.i754
  %11768 = add i64 %11767, 4
  store i64 %11768, i64* %PC.i754
  %11769 = shl i64 %11766, 5
  %11770 = icmp slt i64 %11769, 0
  %11771 = shl i64 %11769, 1
  store i64 %11771, i64* %RCX.i755, align 8
  %11772 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %11773 = zext i1 %11770 to i8
  store i8 %11773, i8* %11772, align 1
  %11774 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %11775 = trunc i64 %11771 to i32
  %11776 = and i32 %11775, 254
  %11777 = call i32 @llvm.ctpop.i32(i32 %11776)
  %11778 = trunc i32 %11777 to i8
  %11779 = and i8 %11778, 1
  %11780 = xor i8 %11779, 1
  store i8 %11780, i8* %11774, align 1
  %11781 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11781, align 1
  %11782 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11783 = icmp eq i64 %11771, 0
  %11784 = zext i1 %11783 to i8
  store i8 %11784, i8* %11782, align 1
  %11785 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11786 = lshr i64 %11771, 63
  %11787 = trunc i64 %11786 to i8
  store i8 %11787, i8* %11785, align 1
  %11788 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11788, align 1
  store %struct.Memory* %loadMem_401285, %struct.Memory** %MEMORY
  %loadMem_401289 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11790 = getelementptr inbounds %struct.GPR, %struct.GPR* %11789, i32 0, i32 33
  %11791 = getelementptr inbounds %struct.Reg, %struct.Reg* %11790, i32 0, i32 0
  %PC.i751 = bitcast %union.anon* %11791 to i64*
  %11792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11793 = getelementptr inbounds %struct.GPR, %struct.GPR* %11792, i32 0, i32 1
  %11794 = getelementptr inbounds %struct.Reg, %struct.Reg* %11793, i32 0, i32 0
  %RAX.i752 = bitcast %union.anon* %11794 to i64*
  %11795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11796 = getelementptr inbounds %struct.GPR, %struct.GPR* %11795, i32 0, i32 5
  %11797 = getelementptr inbounds %struct.Reg, %struct.Reg* %11796, i32 0, i32 0
  %RCX.i753 = bitcast %union.anon* %11797 to i64*
  %11798 = load i64, i64* %RAX.i752
  %11799 = load i64, i64* %RCX.i753
  %11800 = load i64, i64* %PC.i751
  %11801 = add i64 %11800, 3
  store i64 %11801, i64* %PC.i751
  %11802 = add i64 %11799, %11798
  store i64 %11802, i64* %RAX.i752, align 8
  %11803 = icmp ult i64 %11802, %11798
  %11804 = icmp ult i64 %11802, %11799
  %11805 = or i1 %11803, %11804
  %11806 = zext i1 %11805 to i8
  %11807 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11806, i8* %11807, align 1
  %11808 = trunc i64 %11802 to i32
  %11809 = and i32 %11808, 255
  %11810 = call i32 @llvm.ctpop.i32(i32 %11809)
  %11811 = trunc i32 %11810 to i8
  %11812 = and i8 %11811, 1
  %11813 = xor i8 %11812, 1
  %11814 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11813, i8* %11814, align 1
  %11815 = xor i64 %11799, %11798
  %11816 = xor i64 %11815, %11802
  %11817 = lshr i64 %11816, 4
  %11818 = trunc i64 %11817 to i8
  %11819 = and i8 %11818, 1
  %11820 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11819, i8* %11820, align 1
  %11821 = icmp eq i64 %11802, 0
  %11822 = zext i1 %11821 to i8
  %11823 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11822, i8* %11823, align 1
  %11824 = lshr i64 %11802, 63
  %11825 = trunc i64 %11824 to i8
  %11826 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11825, i8* %11826, align 1
  %11827 = lshr i64 %11798, 63
  %11828 = lshr i64 %11799, 63
  %11829 = xor i64 %11824, %11827
  %11830 = xor i64 %11824, %11828
  %11831 = add i64 %11829, %11830
  %11832 = icmp eq i64 %11831, 2
  %11833 = zext i1 %11832 to i8
  %11834 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11833, i8* %11834, align 1
  store %struct.Memory* %loadMem_401289, %struct.Memory** %MEMORY
  %loadMem_40128c = load %struct.Memory*, %struct.Memory** %MEMORY
  %11835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11836 = getelementptr inbounds %struct.GPR, %struct.GPR* %11835, i32 0, i32 33
  %11837 = getelementptr inbounds %struct.Reg, %struct.Reg* %11836, i32 0, i32 0
  %PC.i748 = bitcast %union.anon* %11837 to i64*
  %11838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11839 = getelementptr inbounds %struct.GPR, %struct.GPR* %11838, i32 0, i32 5
  %11840 = getelementptr inbounds %struct.Reg, %struct.Reg* %11839, i32 0, i32 0
  %RCX.i749 = bitcast %union.anon* %11840 to i64*
  %11841 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11842 = getelementptr inbounds %struct.GPR, %struct.GPR* %11841, i32 0, i32 15
  %11843 = getelementptr inbounds %struct.Reg, %struct.Reg* %11842, i32 0, i32 0
  %RBP.i750 = bitcast %union.anon* %11843 to i64*
  %11844 = load i64, i64* %RBP.i750
  %11845 = sub i64 %11844, 4
  %11846 = load i64, i64* %PC.i748
  %11847 = add i64 %11846, 4
  store i64 %11847, i64* %PC.i748
  %11848 = inttoptr i64 %11845 to i32*
  %11849 = load i32, i32* %11848
  %11850 = sext i32 %11849 to i64
  store i64 %11850, i64* %RCX.i749, align 8
  store %struct.Memory* %loadMem_40128c, %struct.Memory** %MEMORY
  %loadMem_401290 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11852 = getelementptr inbounds %struct.GPR, %struct.GPR* %11851, i32 0, i32 33
  %11853 = getelementptr inbounds %struct.Reg, %struct.Reg* %11852, i32 0, i32 0
  %PC.i745 = bitcast %union.anon* %11853 to i64*
  %11854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11855 = getelementptr inbounds %struct.GPR, %struct.GPR* %11854, i32 0, i32 1
  %11856 = getelementptr inbounds %struct.Reg, %struct.Reg* %11855, i32 0, i32 0
  %RAX.i746 = bitcast %union.anon* %11856 to i64*
  %11857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11858 = getelementptr inbounds %struct.GPR, %struct.GPR* %11857, i32 0, i32 5
  %11859 = getelementptr inbounds %struct.Reg, %struct.Reg* %11858, i32 0, i32 0
  %RCX.i747 = bitcast %union.anon* %11859 to i64*
  %11860 = load i64, i64* %RAX.i746
  %11861 = load i64, i64* %RCX.i747
  %11862 = mul i64 %11861, 4
  %11863 = add i64 %11862, %11860
  %11864 = load i64, i64* %PC.i745
  %11865 = add i64 %11864, 4
  store i64 %11865, i64* %PC.i745
  %11866 = inttoptr i64 %11863 to i32*
  %11867 = load i32, i32* %11866
  %11868 = sext i32 %11867 to i64
  store i64 %11868, i64* %RAX.i746, align 8
  store %struct.Memory* %loadMem_401290, %struct.Memory** %MEMORY
  %loadMem_401294 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11870 = getelementptr inbounds %struct.GPR, %struct.GPR* %11869, i32 0, i32 33
  %11871 = getelementptr inbounds %struct.Reg, %struct.Reg* %11870, i32 0, i32 0
  %PC.i742 = bitcast %union.anon* %11871 to i64*
  %11872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11873 = getelementptr inbounds %struct.GPR, %struct.GPR* %11872, i32 0, i32 1
  %11874 = getelementptr inbounds %struct.Reg, %struct.Reg* %11873, i32 0, i32 0
  %RAX.i743 = bitcast %union.anon* %11874 to i64*
  %11875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11876 = getelementptr inbounds %struct.GPR, %struct.GPR* %11875, i32 0, i32 7
  %11877 = getelementptr inbounds %struct.Reg, %struct.Reg* %11876, i32 0, i32 0
  %RDX.i744 = bitcast %union.anon* %11877 to i64*
  %11878 = load i64, i64* %RDX.i744
  %11879 = load i64, i64* %RAX.i743
  %11880 = mul i64 %11879, 4
  %11881 = add i64 %11880, 6305920
  %11882 = load i64, i64* %PC.i742
  %11883 = add i64 %11882, 7
  store i64 %11883, i64* %PC.i742
  %11884 = trunc i64 %11878 to i32
  %11885 = inttoptr i64 %11881 to i32*
  %11886 = load i32, i32* %11885
  %11887 = xor i32 %11886, %11884
  %11888 = zext i32 %11887 to i64
  store i64 %11888, i64* %RDX.i744, align 8
  %11889 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %11889, align 1
  %11890 = and i32 %11887, 255
  %11891 = call i32 @llvm.ctpop.i32(i32 %11890)
  %11892 = trunc i32 %11891 to i8
  %11893 = and i8 %11892, 1
  %11894 = xor i8 %11893, 1
  %11895 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11894, i8* %11895, align 1
  %11896 = icmp eq i32 %11887, 0
  %11897 = zext i1 %11896 to i8
  %11898 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11897, i8* %11898, align 1
  %11899 = lshr i32 %11887, 31
  %11900 = trunc i32 %11899 to i8
  %11901 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11900, i8* %11901, align 1
  %11902 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11902, align 1
  %11903 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11903, align 1
  store %struct.Memory* %loadMem_401294, %struct.Memory** %MEMORY
  %loadMem_40129b = load %struct.Memory*, %struct.Memory** %MEMORY
  %11904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11905 = getelementptr inbounds %struct.GPR, %struct.GPR* %11904, i32 0, i32 33
  %11906 = getelementptr inbounds %struct.Reg, %struct.Reg* %11905, i32 0, i32 0
  %PC.i739 = bitcast %union.anon* %11906 to i64*
  %11907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11908 = getelementptr inbounds %struct.GPR, %struct.GPR* %11907, i32 0, i32 1
  %11909 = getelementptr inbounds %struct.Reg, %struct.Reg* %11908, i32 0, i32 0
  %RAX.i740 = bitcast %union.anon* %11909 to i64*
  %11910 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11911 = getelementptr inbounds %struct.GPR, %struct.GPR* %11910, i32 0, i32 15
  %11912 = getelementptr inbounds %struct.Reg, %struct.Reg* %11911, i32 0, i32 0
  %RBP.i741 = bitcast %union.anon* %11912 to i64*
  %11913 = load i64, i64* %RBP.i741
  %11914 = sub i64 %11913, 4
  %11915 = load i64, i64* %PC.i739
  %11916 = add i64 %11915, 4
  store i64 %11916, i64* %PC.i739
  %11917 = inttoptr i64 %11914 to i32*
  %11918 = load i32, i32* %11917
  %11919 = sext i32 %11918 to i64
  store i64 %11919, i64* %RAX.i740, align 8
  store %struct.Memory* %loadMem_40129b, %struct.Memory** %MEMORY
  %loadMem_40129f = load %struct.Memory*, %struct.Memory** %MEMORY
  %11920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11921 = getelementptr inbounds %struct.GPR, %struct.GPR* %11920, i32 0, i32 33
  %11922 = getelementptr inbounds %struct.Reg, %struct.Reg* %11921, i32 0, i32 0
  %PC.i735 = bitcast %union.anon* %11922 to i64*
  %11923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11924 = getelementptr inbounds %struct.GPR, %struct.GPR* %11923, i32 0, i32 7
  %11925 = getelementptr inbounds %struct.Reg, %struct.Reg* %11924, i32 0, i32 0
  %EDX.i736 = bitcast %union.anon* %11925 to i32*
  %11926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11927 = getelementptr inbounds %struct.GPR, %struct.GPR* %11926, i32 0, i32 1
  %11928 = getelementptr inbounds %struct.Reg, %struct.Reg* %11927, i32 0, i32 0
  %RAX.i737 = bitcast %union.anon* %11928 to i64*
  %11929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11930 = getelementptr inbounds %struct.GPR, %struct.GPR* %11929, i32 0, i32 15
  %11931 = getelementptr inbounds %struct.Reg, %struct.Reg* %11930, i32 0, i32 0
  %RBP.i738 = bitcast %union.anon* %11931 to i64*
  %11932 = load i64, i64* %RBP.i738
  %11933 = load i64, i64* %RAX.i737
  %11934 = mul i64 %11933, 4
  %11935 = add i64 %11932, -1616
  %11936 = add i64 %11935, %11934
  %11937 = load i32, i32* %EDX.i736
  %11938 = zext i32 %11937 to i64
  %11939 = load i64, i64* %PC.i735
  %11940 = add i64 %11939, 7
  store i64 %11940, i64* %PC.i735
  %11941 = inttoptr i64 %11936 to i32*
  store i32 %11937, i32* %11941
  store %struct.Memory* %loadMem_40129f, %struct.Memory** %MEMORY
  %loadMem_4012a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11943 = getelementptr inbounds %struct.GPR, %struct.GPR* %11942, i32 0, i32 33
  %11944 = getelementptr inbounds %struct.Reg, %struct.Reg* %11943, i32 0, i32 0
  %PC.i734 = bitcast %union.anon* %11944 to i64*
  %11945 = load i64, i64* %PC.i734
  %11946 = add i64 %11945, 214
  %11947 = load i64, i64* %PC.i734
  %11948 = add i64 %11947, 5
  store i64 %11948, i64* %PC.i734
  %11949 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11946, i64* %11949, align 8
  store %struct.Memory* %loadMem_4012a6, %struct.Memory** %MEMORY
  br label %block_.L_40137c

block_.L_4012ab:                                  ; preds = %block_401247, %block_401235
  %loadMem_4012ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %11950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11951 = getelementptr inbounds %struct.GPR, %struct.GPR* %11950, i32 0, i32 33
  %11952 = getelementptr inbounds %struct.Reg, %struct.Reg* %11951, i32 0, i32 0
  %PC.i731 = bitcast %union.anon* %11952 to i64*
  %11953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11954 = getelementptr inbounds %struct.GPR, %struct.GPR* %11953, i32 0, i32 1
  %11955 = getelementptr inbounds %struct.Reg, %struct.Reg* %11954, i32 0, i32 0
  %RAX.i732 = bitcast %union.anon* %11955 to i64*
  %11956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11957 = getelementptr inbounds %struct.GPR, %struct.GPR* %11956, i32 0, i32 15
  %11958 = getelementptr inbounds %struct.Reg, %struct.Reg* %11957, i32 0, i32 0
  %RBP.i733 = bitcast %union.anon* %11958 to i64*
  %11959 = load i64, i64* %RBP.i733
  %11960 = sub i64 %11959, 4
  %11961 = load i64, i64* %PC.i731
  %11962 = add i64 %11961, 4
  store i64 %11962, i64* %PC.i731
  %11963 = inttoptr i64 %11960 to i32*
  %11964 = load i32, i32* %11963
  %11965 = sext i32 %11964 to i64
  store i64 %11965, i64* %RAX.i732, align 8
  store %struct.Memory* %loadMem_4012ab, %struct.Memory** %MEMORY
  %loadMem_4012af = load %struct.Memory*, %struct.Memory** %MEMORY
  %11966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11967 = getelementptr inbounds %struct.GPR, %struct.GPR* %11966, i32 0, i32 33
  %11968 = getelementptr inbounds %struct.Reg, %struct.Reg* %11967, i32 0, i32 0
  %PC.i728 = bitcast %union.anon* %11968 to i64*
  %11969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11970 = getelementptr inbounds %struct.GPR, %struct.GPR* %11969, i32 0, i32 1
  %11971 = getelementptr inbounds %struct.Reg, %struct.Reg* %11970, i32 0, i32 0
  %RAX.i729 = bitcast %union.anon* %11971 to i64*
  %11972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11973 = getelementptr inbounds %struct.GPR, %struct.GPR* %11972, i32 0, i32 15
  %11974 = getelementptr inbounds %struct.Reg, %struct.Reg* %11973, i32 0, i32 0
  %RBP.i730 = bitcast %union.anon* %11974 to i64*
  %11975 = load i64, i64* %RBP.i730
  %11976 = load i64, i64* %RAX.i729
  %11977 = mul i64 %11976, 4
  %11978 = add i64 %11975, -1488
  %11979 = add i64 %11978, %11977
  %11980 = load i64, i64* %PC.i728
  %11981 = add i64 %11980, 8
  store i64 %11981, i64* %PC.i728
  %11982 = inttoptr i64 %11979 to i32*
  %11983 = load i32, i32* %11982
  %11984 = sub i32 %11983, -1
  %11985 = icmp ult i32 %11983, -1
  %11986 = zext i1 %11985 to i8
  %11987 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11986, i8* %11987, align 1
  %11988 = and i32 %11984, 255
  %11989 = call i32 @llvm.ctpop.i32(i32 %11988)
  %11990 = trunc i32 %11989 to i8
  %11991 = and i8 %11990, 1
  %11992 = xor i8 %11991, 1
  %11993 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11992, i8* %11993, align 1
  %11994 = xor i32 %11983, -1
  %11995 = xor i32 %11994, %11984
  %11996 = lshr i32 %11995, 4
  %11997 = trunc i32 %11996 to i8
  %11998 = and i8 %11997, 1
  %11999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11998, i8* %11999, align 1
  %12000 = icmp eq i32 %11984, 0
  %12001 = zext i1 %12000 to i8
  %12002 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12001, i8* %12002, align 1
  %12003 = lshr i32 %11984, 31
  %12004 = trunc i32 %12003 to i8
  %12005 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12004, i8* %12005, align 1
  %12006 = lshr i32 %11983, 31
  %12007 = xor i32 %12006, 1
  %12008 = xor i32 %12003, %12006
  %12009 = add i32 %12008, %12007
  %12010 = icmp eq i32 %12009, 2
  %12011 = zext i1 %12010 to i8
  %12012 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12011, i8* %12012, align 1
  store %struct.Memory* %loadMem_4012af, %struct.Memory** %MEMORY
  %loadMem_4012b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12014 = getelementptr inbounds %struct.GPR, %struct.GPR* %12013, i32 0, i32 33
  %12015 = getelementptr inbounds %struct.Reg, %struct.Reg* %12014, i32 0, i32 0
  %PC.i727 = bitcast %union.anon* %12015 to i64*
  %12016 = load i64, i64* %PC.i727
  %12017 = add i64 %12016, 73
  %12018 = load i64, i64* %PC.i727
  %12019 = add i64 %12018, 6
  %12020 = load i64, i64* %PC.i727
  %12021 = add i64 %12020, 6
  store i64 %12021, i64* %PC.i727
  %12022 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12023 = load i8, i8* %12022, align 1
  store i8 %12023, i8* %BRANCH_TAKEN, align 1
  %12024 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12025 = icmp ne i8 %12023, 0
  %12026 = select i1 %12025, i64 %12017, i64 %12019
  store i64 %12026, i64* %12024, align 8
  store %struct.Memory* %loadMem_4012b7, %struct.Memory** %MEMORY
  %loadBr_4012b7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4012b7 = icmp eq i8 %loadBr_4012b7, 1
  br i1 %cmpBr_4012b7, label %block_.L_401300, label %block_4012bd

block_4012bd:                                     ; preds = %block_.L_4012ab
  %loadMem_4012bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %12027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12028 = getelementptr inbounds %struct.GPR, %struct.GPR* %12027, i32 0, i32 33
  %12029 = getelementptr inbounds %struct.Reg, %struct.Reg* %12028, i32 0, i32 0
  %PC.i724 = bitcast %union.anon* %12029 to i64*
  %12030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12031 = getelementptr inbounds %struct.GPR, %struct.GPR* %12030, i32 0, i32 1
  %12032 = getelementptr inbounds %struct.Reg, %struct.Reg* %12031, i32 0, i32 0
  %RAX.i725 = bitcast %union.anon* %12032 to i64*
  %12033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12034 = getelementptr inbounds %struct.GPR, %struct.GPR* %12033, i32 0, i32 15
  %12035 = getelementptr inbounds %struct.Reg, %struct.Reg* %12034, i32 0, i32 0
  %RBP.i726 = bitcast %union.anon* %12035 to i64*
  %12036 = load i64, i64* %RBP.i726
  %12037 = sub i64 %12036, 1168
  %12038 = load i64, i64* %PC.i724
  %12039 = add i64 %12038, 7
  store i64 %12039, i64* %PC.i724
  store i64 %12037, i64* %RAX.i725, align 8
  store %struct.Memory* %loadMem_4012bd, %struct.Memory** %MEMORY
  %loadMem_4012c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12041 = getelementptr inbounds %struct.GPR, %struct.GPR* %12040, i32 0, i32 33
  %12042 = getelementptr inbounds %struct.Reg, %struct.Reg* %12041, i32 0, i32 0
  %PC.i721 = bitcast %union.anon* %12042 to i64*
  %12043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12044 = getelementptr inbounds %struct.GPR, %struct.GPR* %12043, i32 0, i32 5
  %12045 = getelementptr inbounds %struct.Reg, %struct.Reg* %12044, i32 0, i32 0
  %RCX.i722 = bitcast %union.anon* %12045 to i64*
  %12046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12047 = getelementptr inbounds %struct.GPR, %struct.GPR* %12046, i32 0, i32 15
  %12048 = getelementptr inbounds %struct.Reg, %struct.Reg* %12047, i32 0, i32 0
  %RBP.i723 = bitcast %union.anon* %12048 to i64*
  %12049 = load i64, i64* %RBP.i723
  %12050 = sub i64 %12049, 12
  %12051 = load i64, i64* %PC.i721
  %12052 = add i64 %12051, 4
  store i64 %12052, i64* %PC.i721
  %12053 = inttoptr i64 %12050 to i32*
  %12054 = load i32, i32* %12053
  %12055 = sext i32 %12054 to i64
  store i64 %12055, i64* %RCX.i722, align 8
  store %struct.Memory* %loadMem_4012c4, %struct.Memory** %MEMORY
  %loadMem_4012c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12056 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12057 = getelementptr inbounds %struct.GPR, %struct.GPR* %12056, i32 0, i32 33
  %12058 = getelementptr inbounds %struct.Reg, %struct.Reg* %12057, i32 0, i32 0
  %PC.i719 = bitcast %union.anon* %12058 to i64*
  %12059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12060 = getelementptr inbounds %struct.GPR, %struct.GPR* %12059, i32 0, i32 5
  %12061 = getelementptr inbounds %struct.Reg, %struct.Reg* %12060, i32 0, i32 0
  %RCX.i720 = bitcast %union.anon* %12061 to i64*
  %12062 = load i64, i64* %RCX.i720
  %12063 = load i64, i64* %PC.i719
  %12064 = add i64 %12063, 4
  store i64 %12064, i64* %PC.i719
  %12065 = shl i64 %12062, 5
  %12066 = icmp slt i64 %12065, 0
  %12067 = shl i64 %12065, 1
  store i64 %12067, i64* %RCX.i720, align 8
  %12068 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %12069 = zext i1 %12066 to i8
  store i8 %12069, i8* %12068, align 1
  %12070 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %12071 = trunc i64 %12067 to i32
  %12072 = and i32 %12071, 254
  %12073 = call i32 @llvm.ctpop.i32(i32 %12072)
  %12074 = trunc i32 %12073 to i8
  %12075 = and i8 %12074, 1
  %12076 = xor i8 %12075, 1
  store i8 %12076, i8* %12070, align 1
  %12077 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12077, align 1
  %12078 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12079 = icmp eq i64 %12067, 0
  %12080 = zext i1 %12079 to i8
  store i8 %12080, i8* %12078, align 1
  %12081 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %12082 = lshr i64 %12067, 63
  %12083 = trunc i64 %12082 to i8
  store i8 %12083, i8* %12081, align 1
  %12084 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %12084, align 1
  store %struct.Memory* %loadMem_4012c8, %struct.Memory** %MEMORY
  %loadMem_4012cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %12085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12086 = getelementptr inbounds %struct.GPR, %struct.GPR* %12085, i32 0, i32 33
  %12087 = getelementptr inbounds %struct.Reg, %struct.Reg* %12086, i32 0, i32 0
  %PC.i716 = bitcast %union.anon* %12087 to i64*
  %12088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12089 = getelementptr inbounds %struct.GPR, %struct.GPR* %12088, i32 0, i32 1
  %12090 = getelementptr inbounds %struct.Reg, %struct.Reg* %12089, i32 0, i32 0
  %RAX.i717 = bitcast %union.anon* %12090 to i64*
  %12091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12092 = getelementptr inbounds %struct.GPR, %struct.GPR* %12091, i32 0, i32 5
  %12093 = getelementptr inbounds %struct.Reg, %struct.Reg* %12092, i32 0, i32 0
  %RCX.i718 = bitcast %union.anon* %12093 to i64*
  %12094 = load i64, i64* %RAX.i717
  %12095 = load i64, i64* %RCX.i718
  %12096 = load i64, i64* %PC.i716
  %12097 = add i64 %12096, 3
  store i64 %12097, i64* %PC.i716
  %12098 = add i64 %12095, %12094
  store i64 %12098, i64* %RAX.i717, align 8
  %12099 = icmp ult i64 %12098, %12094
  %12100 = icmp ult i64 %12098, %12095
  %12101 = or i1 %12099, %12100
  %12102 = zext i1 %12101 to i8
  %12103 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12102, i8* %12103, align 1
  %12104 = trunc i64 %12098 to i32
  %12105 = and i32 %12104, 255
  %12106 = call i32 @llvm.ctpop.i32(i32 %12105)
  %12107 = trunc i32 %12106 to i8
  %12108 = and i8 %12107, 1
  %12109 = xor i8 %12108, 1
  %12110 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12109, i8* %12110, align 1
  %12111 = xor i64 %12095, %12094
  %12112 = xor i64 %12111, %12098
  %12113 = lshr i64 %12112, 4
  %12114 = trunc i64 %12113 to i8
  %12115 = and i8 %12114, 1
  %12116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12115, i8* %12116, align 1
  %12117 = icmp eq i64 %12098, 0
  %12118 = zext i1 %12117 to i8
  %12119 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12118, i8* %12119, align 1
  %12120 = lshr i64 %12098, 63
  %12121 = trunc i64 %12120 to i8
  %12122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12121, i8* %12122, align 1
  %12123 = lshr i64 %12094, 63
  %12124 = lshr i64 %12095, 63
  %12125 = xor i64 %12120, %12123
  %12126 = xor i64 %12120, %12124
  %12127 = add i64 %12125, %12126
  %12128 = icmp eq i64 %12127, 2
  %12129 = zext i1 %12128 to i8
  %12130 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12129, i8* %12130, align 1
  store %struct.Memory* %loadMem_4012cc, %struct.Memory** %MEMORY
  %loadMem_4012cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %12131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12132 = getelementptr inbounds %struct.GPR, %struct.GPR* %12131, i32 0, i32 33
  %12133 = getelementptr inbounds %struct.Reg, %struct.Reg* %12132, i32 0, i32 0
  %PC.i713 = bitcast %union.anon* %12133 to i64*
  %12134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12135 = getelementptr inbounds %struct.GPR, %struct.GPR* %12134, i32 0, i32 5
  %12136 = getelementptr inbounds %struct.Reg, %struct.Reg* %12135, i32 0, i32 0
  %RCX.i714 = bitcast %union.anon* %12136 to i64*
  %12137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12138 = getelementptr inbounds %struct.GPR, %struct.GPR* %12137, i32 0, i32 15
  %12139 = getelementptr inbounds %struct.Reg, %struct.Reg* %12138, i32 0, i32 0
  %RBP.i715 = bitcast %union.anon* %12139 to i64*
  %12140 = load i64, i64* %RBP.i715
  %12141 = sub i64 %12140, 4
  %12142 = load i64, i64* %PC.i713
  %12143 = add i64 %12142, 4
  store i64 %12143, i64* %PC.i713
  %12144 = inttoptr i64 %12141 to i32*
  %12145 = load i32, i32* %12144
  %12146 = sext i32 %12145 to i64
  store i64 %12146, i64* %RCX.i714, align 8
  store %struct.Memory* %loadMem_4012cf, %struct.Memory** %MEMORY
  %loadMem_4012d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12148 = getelementptr inbounds %struct.GPR, %struct.GPR* %12147, i32 0, i32 33
  %12149 = getelementptr inbounds %struct.Reg, %struct.Reg* %12148, i32 0, i32 0
  %PC.i710 = bitcast %union.anon* %12149 to i64*
  %12150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12151 = getelementptr inbounds %struct.GPR, %struct.GPR* %12150, i32 0, i32 1
  %12152 = getelementptr inbounds %struct.Reg, %struct.Reg* %12151, i32 0, i32 0
  %RAX.i711 = bitcast %union.anon* %12152 to i64*
  %12153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12154 = getelementptr inbounds %struct.GPR, %struct.GPR* %12153, i32 0, i32 5
  %12155 = getelementptr inbounds %struct.Reg, %struct.Reg* %12154, i32 0, i32 0
  %RCX.i712 = bitcast %union.anon* %12155 to i64*
  %12156 = load i64, i64* %RAX.i711
  %12157 = load i64, i64* %RCX.i712
  %12158 = mul i64 %12157, 4
  %12159 = add i64 %12158, %12156
  %12160 = load i64, i64* %PC.i710
  %12161 = add i64 %12160, 4
  store i64 %12161, i64* %PC.i710
  %12162 = inttoptr i64 %12159 to i32*
  %12163 = load i32, i32* %12162
  %12164 = sub i32 %12163, -1
  %12165 = icmp ult i32 %12163, -1
  %12166 = zext i1 %12165 to i8
  %12167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12166, i8* %12167, align 1
  %12168 = and i32 %12164, 255
  %12169 = call i32 @llvm.ctpop.i32(i32 %12168)
  %12170 = trunc i32 %12169 to i8
  %12171 = and i8 %12170, 1
  %12172 = xor i8 %12171, 1
  %12173 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12172, i8* %12173, align 1
  %12174 = xor i32 %12163, -1
  %12175 = xor i32 %12174, %12164
  %12176 = lshr i32 %12175, 4
  %12177 = trunc i32 %12176 to i8
  %12178 = and i8 %12177, 1
  %12179 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12178, i8* %12179, align 1
  %12180 = icmp eq i32 %12164, 0
  %12181 = zext i1 %12180 to i8
  %12182 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12181, i8* %12182, align 1
  %12183 = lshr i32 %12164, 31
  %12184 = trunc i32 %12183 to i8
  %12185 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12184, i8* %12185, align 1
  %12186 = lshr i32 %12163, 31
  %12187 = xor i32 %12186, 1
  %12188 = xor i32 %12183, %12186
  %12189 = add i32 %12188, %12187
  %12190 = icmp eq i32 %12189, 2
  %12191 = zext i1 %12190 to i8
  %12192 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12191, i8* %12192, align 1
  store %struct.Memory* %loadMem_4012d3, %struct.Memory** %MEMORY
  %loadMem_4012d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12194 = getelementptr inbounds %struct.GPR, %struct.GPR* %12193, i32 0, i32 33
  %12195 = getelementptr inbounds %struct.Reg, %struct.Reg* %12194, i32 0, i32 0
  %PC.i709 = bitcast %union.anon* %12195 to i64*
  %12196 = load i64, i64* %PC.i709
  %12197 = add i64 %12196, 41
  %12198 = load i64, i64* %PC.i709
  %12199 = add i64 %12198, 6
  %12200 = load i64, i64* %PC.i709
  %12201 = add i64 %12200, 6
  store i64 %12201, i64* %PC.i709
  %12202 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12203 = load i8, i8* %12202, align 1
  %12204 = icmp eq i8 %12203, 0
  %12205 = zext i1 %12204 to i8
  store i8 %12205, i8* %BRANCH_TAKEN, align 1
  %12206 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12207 = select i1 %12204, i64 %12197, i64 %12199
  store i64 %12207, i64* %12206, align 8
  store %struct.Memory* %loadMem_4012d7, %struct.Memory** %MEMORY
  %loadBr_4012d7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4012d7 = icmp eq i8 %loadBr_4012d7, 1
  br i1 %cmpBr_4012d7, label %block_.L_401300, label %block_4012dd

block_4012dd:                                     ; preds = %block_4012bd
  %loadMem_4012dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %12208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12209 = getelementptr inbounds %struct.GPR, %struct.GPR* %12208, i32 0, i32 33
  %12210 = getelementptr inbounds %struct.Reg, %struct.Reg* %12209, i32 0, i32 0
  %PC.i706 = bitcast %union.anon* %12210 to i64*
  %12211 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12212 = getelementptr inbounds %struct.GPR, %struct.GPR* %12211, i32 0, i32 1
  %12213 = getelementptr inbounds %struct.Reg, %struct.Reg* %12212, i32 0, i32 0
  %RAX.i707 = bitcast %union.anon* %12213 to i64*
  %12214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12215 = getelementptr inbounds %struct.GPR, %struct.GPR* %12214, i32 0, i32 15
  %12216 = getelementptr inbounds %struct.Reg, %struct.Reg* %12215, i32 0, i32 0
  %RBP.i708 = bitcast %union.anon* %12216 to i64*
  %12217 = load i64, i64* %RBP.i708
  %12218 = sub i64 %12217, 4
  %12219 = load i64, i64* %PC.i706
  %12220 = add i64 %12219, 4
  store i64 %12220, i64* %PC.i706
  %12221 = inttoptr i64 %12218 to i32*
  %12222 = load i32, i32* %12221
  %12223 = sext i32 %12222 to i64
  store i64 %12223, i64* %RAX.i707, align 8
  store %struct.Memory* %loadMem_4012dd, %struct.Memory** %MEMORY
  %loadMem_4012e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12225 = getelementptr inbounds %struct.GPR, %struct.GPR* %12224, i32 0, i32 33
  %12226 = getelementptr inbounds %struct.Reg, %struct.Reg* %12225, i32 0, i32 0
  %PC.i703 = bitcast %union.anon* %12226 to i64*
  %12227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12228 = getelementptr inbounds %struct.GPR, %struct.GPR* %12227, i32 0, i32 1
  %12229 = getelementptr inbounds %struct.Reg, %struct.Reg* %12228, i32 0, i32 0
  %RAX.i704 = bitcast %union.anon* %12229 to i64*
  %12230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12231 = getelementptr inbounds %struct.GPR, %struct.GPR* %12230, i32 0, i32 15
  %12232 = getelementptr inbounds %struct.Reg, %struct.Reg* %12231, i32 0, i32 0
  %RBP.i705 = bitcast %union.anon* %12232 to i64*
  %12233 = load i64, i64* %RBP.i705
  %12234 = load i64, i64* %RAX.i704
  %12235 = mul i64 %12234, 4
  %12236 = add i64 %12233, -1488
  %12237 = add i64 %12236, %12235
  %12238 = load i64, i64* %PC.i703
  %12239 = add i64 %12238, 8
  store i64 %12239, i64* %PC.i703
  %12240 = inttoptr i64 %12237 to i32*
  %12241 = load i32, i32* %12240
  %12242 = sext i32 %12241 to i64
  store i64 %12242, i64* %RAX.i704, align 8
  store %struct.Memory* %loadMem_4012e1, %struct.Memory** %MEMORY
  %loadMem_4012e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12244 = getelementptr inbounds %struct.GPR, %struct.GPR* %12243, i32 0, i32 33
  %12245 = getelementptr inbounds %struct.Reg, %struct.Reg* %12244, i32 0, i32 0
  %PC.i700 = bitcast %union.anon* %12245 to i64*
  %12246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12247 = getelementptr inbounds %struct.GPR, %struct.GPR* %12246, i32 0, i32 1
  %12248 = getelementptr inbounds %struct.Reg, %struct.Reg* %12247, i32 0, i32 0
  %RAX.i701 = bitcast %union.anon* %12248 to i64*
  %12249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12250 = getelementptr inbounds %struct.GPR, %struct.GPR* %12249, i32 0, i32 5
  %12251 = getelementptr inbounds %struct.Reg, %struct.Reg* %12250, i32 0, i32 0
  %RCX.i702 = bitcast %union.anon* %12251 to i64*
  %12252 = load i64, i64* %RAX.i701
  %12253 = mul i64 %12252, 4
  %12254 = add i64 %12253, 6305920
  %12255 = load i64, i64* %PC.i700
  %12256 = add i64 %12255, 7
  store i64 %12256, i64* %PC.i700
  %12257 = inttoptr i64 %12254 to i32*
  %12258 = load i32, i32* %12257
  %12259 = zext i32 %12258 to i64
  store i64 %12259, i64* %RCX.i702, align 8
  store %struct.Memory* %loadMem_4012e9, %struct.Memory** %MEMORY
  %loadMem_4012f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12261 = getelementptr inbounds %struct.GPR, %struct.GPR* %12260, i32 0, i32 33
  %12262 = getelementptr inbounds %struct.Reg, %struct.Reg* %12261, i32 0, i32 0
  %PC.i697 = bitcast %union.anon* %12262 to i64*
  %12263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12264 = getelementptr inbounds %struct.GPR, %struct.GPR* %12263, i32 0, i32 1
  %12265 = getelementptr inbounds %struct.Reg, %struct.Reg* %12264, i32 0, i32 0
  %RAX.i698 = bitcast %union.anon* %12265 to i64*
  %12266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12267 = getelementptr inbounds %struct.GPR, %struct.GPR* %12266, i32 0, i32 15
  %12268 = getelementptr inbounds %struct.Reg, %struct.Reg* %12267, i32 0, i32 0
  %RBP.i699 = bitcast %union.anon* %12268 to i64*
  %12269 = load i64, i64* %RBP.i699
  %12270 = sub i64 %12269, 4
  %12271 = load i64, i64* %PC.i697
  %12272 = add i64 %12271, 4
  store i64 %12272, i64* %PC.i697
  %12273 = inttoptr i64 %12270 to i32*
  %12274 = load i32, i32* %12273
  %12275 = sext i32 %12274 to i64
  store i64 %12275, i64* %RAX.i698, align 8
  store %struct.Memory* %loadMem_4012f0, %struct.Memory** %MEMORY
  %loadMem_4012f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12277 = getelementptr inbounds %struct.GPR, %struct.GPR* %12276, i32 0, i32 33
  %12278 = getelementptr inbounds %struct.Reg, %struct.Reg* %12277, i32 0, i32 0
  %PC.i693 = bitcast %union.anon* %12278 to i64*
  %12279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12280 = getelementptr inbounds %struct.GPR, %struct.GPR* %12279, i32 0, i32 5
  %12281 = getelementptr inbounds %struct.Reg, %struct.Reg* %12280, i32 0, i32 0
  %ECX.i694 = bitcast %union.anon* %12281 to i32*
  %12282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12283 = getelementptr inbounds %struct.GPR, %struct.GPR* %12282, i32 0, i32 1
  %12284 = getelementptr inbounds %struct.Reg, %struct.Reg* %12283, i32 0, i32 0
  %RAX.i695 = bitcast %union.anon* %12284 to i64*
  %12285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12286 = getelementptr inbounds %struct.GPR, %struct.GPR* %12285, i32 0, i32 15
  %12287 = getelementptr inbounds %struct.Reg, %struct.Reg* %12286, i32 0, i32 0
  %RBP.i696 = bitcast %union.anon* %12287 to i64*
  %12288 = load i64, i64* %RBP.i696
  %12289 = load i64, i64* %RAX.i695
  %12290 = mul i64 %12289, 4
  %12291 = add i64 %12288, -1616
  %12292 = add i64 %12291, %12290
  %12293 = load i32, i32* %ECX.i694
  %12294 = zext i32 %12293 to i64
  %12295 = load i64, i64* %PC.i693
  %12296 = add i64 %12295, 7
  store i64 %12296, i64* %PC.i693
  %12297 = inttoptr i64 %12292 to i32*
  store i32 %12293, i32* %12297
  store %struct.Memory* %loadMem_4012f4, %struct.Memory** %MEMORY
  %loadMem_4012fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %12298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12299 = getelementptr inbounds %struct.GPR, %struct.GPR* %12298, i32 0, i32 33
  %12300 = getelementptr inbounds %struct.Reg, %struct.Reg* %12299, i32 0, i32 0
  %PC.i692 = bitcast %union.anon* %12300 to i64*
  %12301 = load i64, i64* %PC.i692
  %12302 = add i64 %12301, 124
  %12303 = load i64, i64* %PC.i692
  %12304 = add i64 %12303, 5
  store i64 %12304, i64* %PC.i692
  %12305 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12302, i64* %12305, align 8
  store %struct.Memory* %loadMem_4012fb, %struct.Memory** %MEMORY
  br label %block_.L_401377

block_.L_401300:                                  ; preds = %block_4012bd, %block_.L_4012ab
  %loadMem_401300 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12307 = getelementptr inbounds %struct.GPR, %struct.GPR* %12306, i32 0, i32 33
  %12308 = getelementptr inbounds %struct.Reg, %struct.Reg* %12307, i32 0, i32 0
  %PC.i689 = bitcast %union.anon* %12308 to i64*
  %12309 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12310 = getelementptr inbounds %struct.GPR, %struct.GPR* %12309, i32 0, i32 1
  %12311 = getelementptr inbounds %struct.Reg, %struct.Reg* %12310, i32 0, i32 0
  %RAX.i690 = bitcast %union.anon* %12311 to i64*
  %12312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12313 = getelementptr inbounds %struct.GPR, %struct.GPR* %12312, i32 0, i32 15
  %12314 = getelementptr inbounds %struct.Reg, %struct.Reg* %12313, i32 0, i32 0
  %RBP.i691 = bitcast %union.anon* %12314 to i64*
  %12315 = load i64, i64* %RBP.i691
  %12316 = sub i64 %12315, 4
  %12317 = load i64, i64* %PC.i689
  %12318 = add i64 %12317, 4
  store i64 %12318, i64* %PC.i689
  %12319 = inttoptr i64 %12316 to i32*
  %12320 = load i32, i32* %12319
  %12321 = sext i32 %12320 to i64
  store i64 %12321, i64* %RAX.i690, align 8
  store %struct.Memory* %loadMem_401300, %struct.Memory** %MEMORY
  %loadMem_401304 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12323 = getelementptr inbounds %struct.GPR, %struct.GPR* %12322, i32 0, i32 33
  %12324 = getelementptr inbounds %struct.Reg, %struct.Reg* %12323, i32 0, i32 0
  %PC.i686 = bitcast %union.anon* %12324 to i64*
  %12325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12326 = getelementptr inbounds %struct.GPR, %struct.GPR* %12325, i32 0, i32 1
  %12327 = getelementptr inbounds %struct.Reg, %struct.Reg* %12326, i32 0, i32 0
  %RAX.i687 = bitcast %union.anon* %12327 to i64*
  %12328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12329 = getelementptr inbounds %struct.GPR, %struct.GPR* %12328, i32 0, i32 15
  %12330 = getelementptr inbounds %struct.Reg, %struct.Reg* %12329, i32 0, i32 0
  %RBP.i688 = bitcast %union.anon* %12330 to i64*
  %12331 = load i64, i64* %RBP.i688
  %12332 = load i64, i64* %RAX.i687
  %12333 = mul i64 %12332, 4
  %12334 = add i64 %12331, -1488
  %12335 = add i64 %12334, %12333
  %12336 = load i64, i64* %PC.i686
  %12337 = add i64 %12336, 8
  store i64 %12337, i64* %PC.i686
  %12338 = inttoptr i64 %12335 to i32*
  %12339 = load i32, i32* %12338
  %12340 = sub i32 %12339, -1
  %12341 = icmp ult i32 %12339, -1
  %12342 = zext i1 %12341 to i8
  %12343 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12342, i8* %12343, align 1
  %12344 = and i32 %12340, 255
  %12345 = call i32 @llvm.ctpop.i32(i32 %12344)
  %12346 = trunc i32 %12345 to i8
  %12347 = and i8 %12346, 1
  %12348 = xor i8 %12347, 1
  %12349 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12348, i8* %12349, align 1
  %12350 = xor i32 %12339, -1
  %12351 = xor i32 %12350, %12340
  %12352 = lshr i32 %12351, 4
  %12353 = trunc i32 %12352 to i8
  %12354 = and i8 %12353, 1
  %12355 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12354, i8* %12355, align 1
  %12356 = icmp eq i32 %12340, 0
  %12357 = zext i1 %12356 to i8
  %12358 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12357, i8* %12358, align 1
  %12359 = lshr i32 %12340, 31
  %12360 = trunc i32 %12359 to i8
  %12361 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12360, i8* %12361, align 1
  %12362 = lshr i32 %12339, 31
  %12363 = xor i32 %12362, 1
  %12364 = xor i32 %12359, %12362
  %12365 = add i32 %12364, %12363
  %12366 = icmp eq i32 %12365, 2
  %12367 = zext i1 %12366 to i8
  %12368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12367, i8* %12368, align 1
  store %struct.Memory* %loadMem_401304, %struct.Memory** %MEMORY
  %loadMem_40130c = load %struct.Memory*, %struct.Memory** %MEMORY
  %12369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12370 = getelementptr inbounds %struct.GPR, %struct.GPR* %12369, i32 0, i32 33
  %12371 = getelementptr inbounds %struct.Reg, %struct.Reg* %12370, i32 0, i32 0
  %PC.i685 = bitcast %union.anon* %12371 to i64*
  %12372 = load i64, i64* %PC.i685
  %12373 = add i64 %12372, 87
  %12374 = load i64, i64* %PC.i685
  %12375 = add i64 %12374, 6
  %12376 = load i64, i64* %PC.i685
  %12377 = add i64 %12376, 6
  store i64 %12377, i64* %PC.i685
  %12378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12379 = load i8, i8* %12378, align 1
  %12380 = icmp eq i8 %12379, 0
  %12381 = zext i1 %12380 to i8
  store i8 %12381, i8* %BRANCH_TAKEN, align 1
  %12382 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12383 = select i1 %12380, i64 %12373, i64 %12375
  store i64 %12383, i64* %12382, align 8
  store %struct.Memory* %loadMem_40130c, %struct.Memory** %MEMORY
  %loadBr_40130c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40130c = icmp eq i8 %loadBr_40130c, 1
  br i1 %cmpBr_40130c, label %block_.L_401363, label %block_401312

block_401312:                                     ; preds = %block_.L_401300
  %loadMem_401312 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12385 = getelementptr inbounds %struct.GPR, %struct.GPR* %12384, i32 0, i32 33
  %12386 = getelementptr inbounds %struct.Reg, %struct.Reg* %12385, i32 0, i32 0
  %PC.i682 = bitcast %union.anon* %12386 to i64*
  %12387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12388 = getelementptr inbounds %struct.GPR, %struct.GPR* %12387, i32 0, i32 1
  %12389 = getelementptr inbounds %struct.Reg, %struct.Reg* %12388, i32 0, i32 0
  %RAX.i683 = bitcast %union.anon* %12389 to i64*
  %12390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12391 = getelementptr inbounds %struct.GPR, %struct.GPR* %12390, i32 0, i32 15
  %12392 = getelementptr inbounds %struct.Reg, %struct.Reg* %12391, i32 0, i32 0
  %RBP.i684 = bitcast %union.anon* %12392 to i64*
  %12393 = load i64, i64* %RBP.i684
  %12394 = sub i64 %12393, 1168
  %12395 = load i64, i64* %PC.i682
  %12396 = add i64 %12395, 7
  store i64 %12396, i64* %PC.i682
  store i64 %12394, i64* %RAX.i683, align 8
  store %struct.Memory* %loadMem_401312, %struct.Memory** %MEMORY
  %loadMem_401319 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12398 = getelementptr inbounds %struct.GPR, %struct.GPR* %12397, i32 0, i32 33
  %12399 = getelementptr inbounds %struct.Reg, %struct.Reg* %12398, i32 0, i32 0
  %PC.i679 = bitcast %union.anon* %12399 to i64*
  %12400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12401 = getelementptr inbounds %struct.GPR, %struct.GPR* %12400, i32 0, i32 5
  %12402 = getelementptr inbounds %struct.Reg, %struct.Reg* %12401, i32 0, i32 0
  %RCX.i680 = bitcast %union.anon* %12402 to i64*
  %12403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12404 = getelementptr inbounds %struct.GPR, %struct.GPR* %12403, i32 0, i32 15
  %12405 = getelementptr inbounds %struct.Reg, %struct.Reg* %12404, i32 0, i32 0
  %RBP.i681 = bitcast %union.anon* %12405 to i64*
  %12406 = load i64, i64* %RBP.i681
  %12407 = sub i64 %12406, 12
  %12408 = load i64, i64* %PC.i679
  %12409 = add i64 %12408, 4
  store i64 %12409, i64* %PC.i679
  %12410 = inttoptr i64 %12407 to i32*
  %12411 = load i32, i32* %12410
  %12412 = sext i32 %12411 to i64
  store i64 %12412, i64* %RCX.i680, align 8
  store %struct.Memory* %loadMem_401319, %struct.Memory** %MEMORY
  %loadMem_40131d = load %struct.Memory*, %struct.Memory** %MEMORY
  %12413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12414 = getelementptr inbounds %struct.GPR, %struct.GPR* %12413, i32 0, i32 33
  %12415 = getelementptr inbounds %struct.Reg, %struct.Reg* %12414, i32 0, i32 0
  %PC.i677 = bitcast %union.anon* %12415 to i64*
  %12416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12417 = getelementptr inbounds %struct.GPR, %struct.GPR* %12416, i32 0, i32 5
  %12418 = getelementptr inbounds %struct.Reg, %struct.Reg* %12417, i32 0, i32 0
  %RCX.i678 = bitcast %union.anon* %12418 to i64*
  %12419 = load i64, i64* %RCX.i678
  %12420 = load i64, i64* %PC.i677
  %12421 = add i64 %12420, 4
  store i64 %12421, i64* %PC.i677
  %12422 = shl i64 %12419, 5
  %12423 = icmp slt i64 %12422, 0
  %12424 = shl i64 %12422, 1
  store i64 %12424, i64* %RCX.i678, align 8
  %12425 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %12426 = zext i1 %12423 to i8
  store i8 %12426, i8* %12425, align 1
  %12427 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %12428 = trunc i64 %12424 to i32
  %12429 = and i32 %12428, 254
  %12430 = call i32 @llvm.ctpop.i32(i32 %12429)
  %12431 = trunc i32 %12430 to i8
  %12432 = and i8 %12431, 1
  %12433 = xor i8 %12432, 1
  store i8 %12433, i8* %12427, align 1
  %12434 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12434, align 1
  %12435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12436 = icmp eq i64 %12424, 0
  %12437 = zext i1 %12436 to i8
  store i8 %12437, i8* %12435, align 1
  %12438 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %12439 = lshr i64 %12424, 63
  %12440 = trunc i64 %12439 to i8
  store i8 %12440, i8* %12438, align 1
  %12441 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %12441, align 1
  store %struct.Memory* %loadMem_40131d, %struct.Memory** %MEMORY
  %loadMem_401321 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12443 = getelementptr inbounds %struct.GPR, %struct.GPR* %12442, i32 0, i32 33
  %12444 = getelementptr inbounds %struct.Reg, %struct.Reg* %12443, i32 0, i32 0
  %PC.i674 = bitcast %union.anon* %12444 to i64*
  %12445 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12446 = getelementptr inbounds %struct.GPR, %struct.GPR* %12445, i32 0, i32 1
  %12447 = getelementptr inbounds %struct.Reg, %struct.Reg* %12446, i32 0, i32 0
  %RAX.i675 = bitcast %union.anon* %12447 to i64*
  %12448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12449 = getelementptr inbounds %struct.GPR, %struct.GPR* %12448, i32 0, i32 5
  %12450 = getelementptr inbounds %struct.Reg, %struct.Reg* %12449, i32 0, i32 0
  %RCX.i676 = bitcast %union.anon* %12450 to i64*
  %12451 = load i64, i64* %RAX.i675
  %12452 = load i64, i64* %RCX.i676
  %12453 = load i64, i64* %PC.i674
  %12454 = add i64 %12453, 3
  store i64 %12454, i64* %PC.i674
  %12455 = add i64 %12452, %12451
  store i64 %12455, i64* %RAX.i675, align 8
  %12456 = icmp ult i64 %12455, %12451
  %12457 = icmp ult i64 %12455, %12452
  %12458 = or i1 %12456, %12457
  %12459 = zext i1 %12458 to i8
  %12460 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12459, i8* %12460, align 1
  %12461 = trunc i64 %12455 to i32
  %12462 = and i32 %12461, 255
  %12463 = call i32 @llvm.ctpop.i32(i32 %12462)
  %12464 = trunc i32 %12463 to i8
  %12465 = and i8 %12464, 1
  %12466 = xor i8 %12465, 1
  %12467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12466, i8* %12467, align 1
  %12468 = xor i64 %12452, %12451
  %12469 = xor i64 %12468, %12455
  %12470 = lshr i64 %12469, 4
  %12471 = trunc i64 %12470 to i8
  %12472 = and i8 %12471, 1
  %12473 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12472, i8* %12473, align 1
  %12474 = icmp eq i64 %12455, 0
  %12475 = zext i1 %12474 to i8
  %12476 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12475, i8* %12476, align 1
  %12477 = lshr i64 %12455, 63
  %12478 = trunc i64 %12477 to i8
  %12479 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12478, i8* %12479, align 1
  %12480 = lshr i64 %12451, 63
  %12481 = lshr i64 %12452, 63
  %12482 = xor i64 %12477, %12480
  %12483 = xor i64 %12477, %12481
  %12484 = add i64 %12482, %12483
  %12485 = icmp eq i64 %12484, 2
  %12486 = zext i1 %12485 to i8
  %12487 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12486, i8* %12487, align 1
  store %struct.Memory* %loadMem_401321, %struct.Memory** %MEMORY
  %loadMem_401324 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12488 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12489 = getelementptr inbounds %struct.GPR, %struct.GPR* %12488, i32 0, i32 33
  %12490 = getelementptr inbounds %struct.Reg, %struct.Reg* %12489, i32 0, i32 0
  %PC.i671 = bitcast %union.anon* %12490 to i64*
  %12491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12492 = getelementptr inbounds %struct.GPR, %struct.GPR* %12491, i32 0, i32 5
  %12493 = getelementptr inbounds %struct.Reg, %struct.Reg* %12492, i32 0, i32 0
  %RCX.i672 = bitcast %union.anon* %12493 to i64*
  %12494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12495 = getelementptr inbounds %struct.GPR, %struct.GPR* %12494, i32 0, i32 15
  %12496 = getelementptr inbounds %struct.Reg, %struct.Reg* %12495, i32 0, i32 0
  %RBP.i673 = bitcast %union.anon* %12496 to i64*
  %12497 = load i64, i64* %RBP.i673
  %12498 = sub i64 %12497, 4
  %12499 = load i64, i64* %PC.i671
  %12500 = add i64 %12499, 4
  store i64 %12500, i64* %PC.i671
  %12501 = inttoptr i64 %12498 to i32*
  %12502 = load i32, i32* %12501
  %12503 = sext i32 %12502 to i64
  store i64 %12503, i64* %RCX.i672, align 8
  store %struct.Memory* %loadMem_401324, %struct.Memory** %MEMORY
  %loadMem_401328 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12505 = getelementptr inbounds %struct.GPR, %struct.GPR* %12504, i32 0, i32 33
  %12506 = getelementptr inbounds %struct.Reg, %struct.Reg* %12505, i32 0, i32 0
  %PC.i668 = bitcast %union.anon* %12506 to i64*
  %12507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12508 = getelementptr inbounds %struct.GPR, %struct.GPR* %12507, i32 0, i32 1
  %12509 = getelementptr inbounds %struct.Reg, %struct.Reg* %12508, i32 0, i32 0
  %RAX.i669 = bitcast %union.anon* %12509 to i64*
  %12510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12511 = getelementptr inbounds %struct.GPR, %struct.GPR* %12510, i32 0, i32 5
  %12512 = getelementptr inbounds %struct.Reg, %struct.Reg* %12511, i32 0, i32 0
  %RCX.i670 = bitcast %union.anon* %12512 to i64*
  %12513 = load i64, i64* %RAX.i669
  %12514 = load i64, i64* %RCX.i670
  %12515 = mul i64 %12514, 4
  %12516 = add i64 %12515, %12513
  %12517 = load i64, i64* %PC.i668
  %12518 = add i64 %12517, 4
  store i64 %12518, i64* %PC.i668
  %12519 = inttoptr i64 %12516 to i32*
  %12520 = load i32, i32* %12519
  %12521 = sub i32 %12520, -1
  %12522 = icmp ult i32 %12520, -1
  %12523 = zext i1 %12522 to i8
  %12524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12523, i8* %12524, align 1
  %12525 = and i32 %12521, 255
  %12526 = call i32 @llvm.ctpop.i32(i32 %12525)
  %12527 = trunc i32 %12526 to i8
  %12528 = and i8 %12527, 1
  %12529 = xor i8 %12528, 1
  %12530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12529, i8* %12530, align 1
  %12531 = xor i32 %12520, -1
  %12532 = xor i32 %12531, %12521
  %12533 = lshr i32 %12532, 4
  %12534 = trunc i32 %12533 to i8
  %12535 = and i8 %12534, 1
  %12536 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12535, i8* %12536, align 1
  %12537 = icmp eq i32 %12521, 0
  %12538 = zext i1 %12537 to i8
  %12539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12538, i8* %12539, align 1
  %12540 = lshr i32 %12521, 31
  %12541 = trunc i32 %12540 to i8
  %12542 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12541, i8* %12542, align 1
  %12543 = lshr i32 %12520, 31
  %12544 = xor i32 %12543, 1
  %12545 = xor i32 %12540, %12543
  %12546 = add i32 %12545, %12544
  %12547 = icmp eq i32 %12546, 2
  %12548 = zext i1 %12547 to i8
  %12549 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12548, i8* %12549, align 1
  store %struct.Memory* %loadMem_401328, %struct.Memory** %MEMORY
  %loadMem_40132c = load %struct.Memory*, %struct.Memory** %MEMORY
  %12550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12551 = getelementptr inbounds %struct.GPR, %struct.GPR* %12550, i32 0, i32 33
  %12552 = getelementptr inbounds %struct.Reg, %struct.Reg* %12551, i32 0, i32 0
  %PC.i667 = bitcast %union.anon* %12552 to i64*
  %12553 = load i64, i64* %PC.i667
  %12554 = add i64 %12553, 55
  %12555 = load i64, i64* %PC.i667
  %12556 = add i64 %12555, 6
  %12557 = load i64, i64* %PC.i667
  %12558 = add i64 %12557, 6
  store i64 %12558, i64* %PC.i667
  %12559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12560 = load i8, i8* %12559, align 1
  store i8 %12560, i8* %BRANCH_TAKEN, align 1
  %12561 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12562 = icmp ne i8 %12560, 0
  %12563 = select i1 %12562, i64 %12554, i64 %12556
  store i64 %12563, i64* %12561, align 8
  store %struct.Memory* %loadMem_40132c, %struct.Memory** %MEMORY
  %loadBr_40132c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40132c = icmp eq i8 %loadBr_40132c, 1
  br i1 %cmpBr_40132c, label %block_.L_401363, label %block_401332

block_401332:                                     ; preds = %block_401312
  %loadMem_401332 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12565 = getelementptr inbounds %struct.GPR, %struct.GPR* %12564, i32 0, i32 33
  %12566 = getelementptr inbounds %struct.Reg, %struct.Reg* %12565, i32 0, i32 0
  %PC.i664 = bitcast %union.anon* %12566 to i64*
  %12567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12568 = getelementptr inbounds %struct.GPR, %struct.GPR* %12567, i32 0, i32 1
  %12569 = getelementptr inbounds %struct.Reg, %struct.Reg* %12568, i32 0, i32 0
  %RAX.i665 = bitcast %union.anon* %12569 to i64*
  %12570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12571 = getelementptr inbounds %struct.GPR, %struct.GPR* %12570, i32 0, i32 15
  %12572 = getelementptr inbounds %struct.Reg, %struct.Reg* %12571, i32 0, i32 0
  %RBP.i666 = bitcast %union.anon* %12572 to i64*
  %12573 = load i64, i64* %RBP.i666
  %12574 = sub i64 %12573, 1168
  %12575 = load i64, i64* %PC.i664
  %12576 = add i64 %12575, 7
  store i64 %12576, i64* %PC.i664
  store i64 %12574, i64* %RAX.i665, align 8
  store %struct.Memory* %loadMem_401332, %struct.Memory** %MEMORY
  %loadMem_401339 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12578 = getelementptr inbounds %struct.GPR, %struct.GPR* %12577, i32 0, i32 33
  %12579 = getelementptr inbounds %struct.Reg, %struct.Reg* %12578, i32 0, i32 0
  %PC.i661 = bitcast %union.anon* %12579 to i64*
  %12580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12581 = getelementptr inbounds %struct.GPR, %struct.GPR* %12580, i32 0, i32 5
  %12582 = getelementptr inbounds %struct.Reg, %struct.Reg* %12581, i32 0, i32 0
  %RCX.i662 = bitcast %union.anon* %12582 to i64*
  %12583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12584 = getelementptr inbounds %struct.GPR, %struct.GPR* %12583, i32 0, i32 15
  %12585 = getelementptr inbounds %struct.Reg, %struct.Reg* %12584, i32 0, i32 0
  %RBP.i663 = bitcast %union.anon* %12585 to i64*
  %12586 = load i64, i64* %RBP.i663
  %12587 = sub i64 %12586, 12
  %12588 = load i64, i64* %PC.i661
  %12589 = add i64 %12588, 4
  store i64 %12589, i64* %PC.i661
  %12590 = inttoptr i64 %12587 to i32*
  %12591 = load i32, i32* %12590
  %12592 = sext i32 %12591 to i64
  store i64 %12592, i64* %RCX.i662, align 8
  store %struct.Memory* %loadMem_401339, %struct.Memory** %MEMORY
  %loadMem_40133d = load %struct.Memory*, %struct.Memory** %MEMORY
  %12593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12594 = getelementptr inbounds %struct.GPR, %struct.GPR* %12593, i32 0, i32 33
  %12595 = getelementptr inbounds %struct.Reg, %struct.Reg* %12594, i32 0, i32 0
  %PC.i659 = bitcast %union.anon* %12595 to i64*
  %12596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12597 = getelementptr inbounds %struct.GPR, %struct.GPR* %12596, i32 0, i32 5
  %12598 = getelementptr inbounds %struct.Reg, %struct.Reg* %12597, i32 0, i32 0
  %RCX.i660 = bitcast %union.anon* %12598 to i64*
  %12599 = load i64, i64* %RCX.i660
  %12600 = load i64, i64* %PC.i659
  %12601 = add i64 %12600, 4
  store i64 %12601, i64* %PC.i659
  %12602 = shl i64 %12599, 5
  %12603 = icmp slt i64 %12602, 0
  %12604 = shl i64 %12602, 1
  store i64 %12604, i64* %RCX.i660, align 8
  %12605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %12606 = zext i1 %12603 to i8
  store i8 %12606, i8* %12605, align 1
  %12607 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %12608 = trunc i64 %12604 to i32
  %12609 = and i32 %12608, 254
  %12610 = call i32 @llvm.ctpop.i32(i32 %12609)
  %12611 = trunc i32 %12610 to i8
  %12612 = and i8 %12611, 1
  %12613 = xor i8 %12612, 1
  store i8 %12613, i8* %12607, align 1
  %12614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12614, align 1
  %12615 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12616 = icmp eq i64 %12604, 0
  %12617 = zext i1 %12616 to i8
  store i8 %12617, i8* %12615, align 1
  %12618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %12619 = lshr i64 %12604, 63
  %12620 = trunc i64 %12619 to i8
  store i8 %12620, i8* %12618, align 1
  %12621 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %12621, align 1
  store %struct.Memory* %loadMem_40133d, %struct.Memory** %MEMORY
  %loadMem_401341 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12623 = getelementptr inbounds %struct.GPR, %struct.GPR* %12622, i32 0, i32 33
  %12624 = getelementptr inbounds %struct.Reg, %struct.Reg* %12623, i32 0, i32 0
  %PC.i656 = bitcast %union.anon* %12624 to i64*
  %12625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12626 = getelementptr inbounds %struct.GPR, %struct.GPR* %12625, i32 0, i32 1
  %12627 = getelementptr inbounds %struct.Reg, %struct.Reg* %12626, i32 0, i32 0
  %RAX.i657 = bitcast %union.anon* %12627 to i64*
  %12628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12629 = getelementptr inbounds %struct.GPR, %struct.GPR* %12628, i32 0, i32 5
  %12630 = getelementptr inbounds %struct.Reg, %struct.Reg* %12629, i32 0, i32 0
  %RCX.i658 = bitcast %union.anon* %12630 to i64*
  %12631 = load i64, i64* %RAX.i657
  %12632 = load i64, i64* %RCX.i658
  %12633 = load i64, i64* %PC.i656
  %12634 = add i64 %12633, 3
  store i64 %12634, i64* %PC.i656
  %12635 = add i64 %12632, %12631
  store i64 %12635, i64* %RAX.i657, align 8
  %12636 = icmp ult i64 %12635, %12631
  %12637 = icmp ult i64 %12635, %12632
  %12638 = or i1 %12636, %12637
  %12639 = zext i1 %12638 to i8
  %12640 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12639, i8* %12640, align 1
  %12641 = trunc i64 %12635 to i32
  %12642 = and i32 %12641, 255
  %12643 = call i32 @llvm.ctpop.i32(i32 %12642)
  %12644 = trunc i32 %12643 to i8
  %12645 = and i8 %12644, 1
  %12646 = xor i8 %12645, 1
  %12647 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12646, i8* %12647, align 1
  %12648 = xor i64 %12632, %12631
  %12649 = xor i64 %12648, %12635
  %12650 = lshr i64 %12649, 4
  %12651 = trunc i64 %12650 to i8
  %12652 = and i8 %12651, 1
  %12653 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12652, i8* %12653, align 1
  %12654 = icmp eq i64 %12635, 0
  %12655 = zext i1 %12654 to i8
  %12656 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12655, i8* %12656, align 1
  %12657 = lshr i64 %12635, 63
  %12658 = trunc i64 %12657 to i8
  %12659 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12658, i8* %12659, align 1
  %12660 = lshr i64 %12631, 63
  %12661 = lshr i64 %12632, 63
  %12662 = xor i64 %12657, %12660
  %12663 = xor i64 %12657, %12661
  %12664 = add i64 %12662, %12663
  %12665 = icmp eq i64 %12664, 2
  %12666 = zext i1 %12665 to i8
  %12667 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12666, i8* %12667, align 1
  store %struct.Memory* %loadMem_401341, %struct.Memory** %MEMORY
  %loadMem_401344 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12669 = getelementptr inbounds %struct.GPR, %struct.GPR* %12668, i32 0, i32 33
  %12670 = getelementptr inbounds %struct.Reg, %struct.Reg* %12669, i32 0, i32 0
  %PC.i653 = bitcast %union.anon* %12670 to i64*
  %12671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12672 = getelementptr inbounds %struct.GPR, %struct.GPR* %12671, i32 0, i32 5
  %12673 = getelementptr inbounds %struct.Reg, %struct.Reg* %12672, i32 0, i32 0
  %RCX.i654 = bitcast %union.anon* %12673 to i64*
  %12674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12675 = getelementptr inbounds %struct.GPR, %struct.GPR* %12674, i32 0, i32 15
  %12676 = getelementptr inbounds %struct.Reg, %struct.Reg* %12675, i32 0, i32 0
  %RBP.i655 = bitcast %union.anon* %12676 to i64*
  %12677 = load i64, i64* %RBP.i655
  %12678 = sub i64 %12677, 4
  %12679 = load i64, i64* %PC.i653
  %12680 = add i64 %12679, 4
  store i64 %12680, i64* %PC.i653
  %12681 = inttoptr i64 %12678 to i32*
  %12682 = load i32, i32* %12681
  %12683 = sext i32 %12682 to i64
  store i64 %12683, i64* %RCX.i654, align 8
  store %struct.Memory* %loadMem_401344, %struct.Memory** %MEMORY
  %loadMem_401348 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12685 = getelementptr inbounds %struct.GPR, %struct.GPR* %12684, i32 0, i32 33
  %12686 = getelementptr inbounds %struct.Reg, %struct.Reg* %12685, i32 0, i32 0
  %PC.i650 = bitcast %union.anon* %12686 to i64*
  %12687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12688 = getelementptr inbounds %struct.GPR, %struct.GPR* %12687, i32 0, i32 1
  %12689 = getelementptr inbounds %struct.Reg, %struct.Reg* %12688, i32 0, i32 0
  %RAX.i651 = bitcast %union.anon* %12689 to i64*
  %12690 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12691 = getelementptr inbounds %struct.GPR, %struct.GPR* %12690, i32 0, i32 5
  %12692 = getelementptr inbounds %struct.Reg, %struct.Reg* %12691, i32 0, i32 0
  %RCX.i652 = bitcast %union.anon* %12692 to i64*
  %12693 = load i64, i64* %RAX.i651
  %12694 = load i64, i64* %RCX.i652
  %12695 = mul i64 %12694, 4
  %12696 = add i64 %12695, %12693
  %12697 = load i64, i64* %PC.i650
  %12698 = add i64 %12697, 4
  store i64 %12698, i64* %PC.i650
  %12699 = inttoptr i64 %12696 to i32*
  %12700 = load i32, i32* %12699
  %12701 = sext i32 %12700 to i64
  store i64 %12701, i64* %RAX.i651, align 8
  store %struct.Memory* %loadMem_401348, %struct.Memory** %MEMORY
  %loadMem_40134c = load %struct.Memory*, %struct.Memory** %MEMORY
  %12702 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12703 = getelementptr inbounds %struct.GPR, %struct.GPR* %12702, i32 0, i32 33
  %12704 = getelementptr inbounds %struct.Reg, %struct.Reg* %12703, i32 0, i32 0
  %PC.i647 = bitcast %union.anon* %12704 to i64*
  %12705 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12706 = getelementptr inbounds %struct.GPR, %struct.GPR* %12705, i32 0, i32 1
  %12707 = getelementptr inbounds %struct.Reg, %struct.Reg* %12706, i32 0, i32 0
  %RAX.i648 = bitcast %union.anon* %12707 to i64*
  %12708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12709 = getelementptr inbounds %struct.GPR, %struct.GPR* %12708, i32 0, i32 7
  %12710 = getelementptr inbounds %struct.Reg, %struct.Reg* %12709, i32 0, i32 0
  %RDX.i649 = bitcast %union.anon* %12710 to i64*
  %12711 = load i64, i64* %RAX.i648
  %12712 = mul i64 %12711, 4
  %12713 = add i64 %12712, 6305920
  %12714 = load i64, i64* %PC.i647
  %12715 = add i64 %12714, 7
  store i64 %12715, i64* %PC.i647
  %12716 = inttoptr i64 %12713 to i32*
  %12717 = load i32, i32* %12716
  %12718 = zext i32 %12717 to i64
  store i64 %12718, i64* %RDX.i649, align 8
  store %struct.Memory* %loadMem_40134c, %struct.Memory** %MEMORY
  %loadMem_401353 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12720 = getelementptr inbounds %struct.GPR, %struct.GPR* %12719, i32 0, i32 33
  %12721 = getelementptr inbounds %struct.Reg, %struct.Reg* %12720, i32 0, i32 0
  %PC.i644 = bitcast %union.anon* %12721 to i64*
  %12722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12723 = getelementptr inbounds %struct.GPR, %struct.GPR* %12722, i32 0, i32 1
  %12724 = getelementptr inbounds %struct.Reg, %struct.Reg* %12723, i32 0, i32 0
  %RAX.i645 = bitcast %union.anon* %12724 to i64*
  %12725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12726 = getelementptr inbounds %struct.GPR, %struct.GPR* %12725, i32 0, i32 15
  %12727 = getelementptr inbounds %struct.Reg, %struct.Reg* %12726, i32 0, i32 0
  %RBP.i646 = bitcast %union.anon* %12727 to i64*
  %12728 = load i64, i64* %RBP.i646
  %12729 = sub i64 %12728, 4
  %12730 = load i64, i64* %PC.i644
  %12731 = add i64 %12730, 4
  store i64 %12731, i64* %PC.i644
  %12732 = inttoptr i64 %12729 to i32*
  %12733 = load i32, i32* %12732
  %12734 = sext i32 %12733 to i64
  store i64 %12734, i64* %RAX.i645, align 8
  store %struct.Memory* %loadMem_401353, %struct.Memory** %MEMORY
  %loadMem_401357 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12736 = getelementptr inbounds %struct.GPR, %struct.GPR* %12735, i32 0, i32 33
  %12737 = getelementptr inbounds %struct.Reg, %struct.Reg* %12736, i32 0, i32 0
  %PC.i640 = bitcast %union.anon* %12737 to i64*
  %12738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12739 = getelementptr inbounds %struct.GPR, %struct.GPR* %12738, i32 0, i32 7
  %12740 = getelementptr inbounds %struct.Reg, %struct.Reg* %12739, i32 0, i32 0
  %EDX.i641 = bitcast %union.anon* %12740 to i32*
  %12741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12742 = getelementptr inbounds %struct.GPR, %struct.GPR* %12741, i32 0, i32 1
  %12743 = getelementptr inbounds %struct.Reg, %struct.Reg* %12742, i32 0, i32 0
  %RAX.i642 = bitcast %union.anon* %12743 to i64*
  %12744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12745 = getelementptr inbounds %struct.GPR, %struct.GPR* %12744, i32 0, i32 15
  %12746 = getelementptr inbounds %struct.Reg, %struct.Reg* %12745, i32 0, i32 0
  %RBP.i643 = bitcast %union.anon* %12746 to i64*
  %12747 = load i64, i64* %RBP.i643
  %12748 = load i64, i64* %RAX.i642
  %12749 = mul i64 %12748, 4
  %12750 = add i64 %12747, -1616
  %12751 = add i64 %12750, %12749
  %12752 = load i32, i32* %EDX.i641
  %12753 = zext i32 %12752 to i64
  %12754 = load i64, i64* %PC.i640
  %12755 = add i64 %12754, 7
  store i64 %12755, i64* %PC.i640
  %12756 = inttoptr i64 %12751 to i32*
  store i32 %12752, i32* %12756
  store %struct.Memory* %loadMem_401357, %struct.Memory** %MEMORY
  %loadMem_40135e = load %struct.Memory*, %struct.Memory** %MEMORY
  %12757 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12758 = getelementptr inbounds %struct.GPR, %struct.GPR* %12757, i32 0, i32 33
  %12759 = getelementptr inbounds %struct.Reg, %struct.Reg* %12758, i32 0, i32 0
  %PC.i639 = bitcast %union.anon* %12759 to i64*
  %12760 = load i64, i64* %PC.i639
  %12761 = add i64 %12760, 20
  %12762 = load i64, i64* %PC.i639
  %12763 = add i64 %12762, 5
  store i64 %12763, i64* %PC.i639
  %12764 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12761, i64* %12764, align 8
  store %struct.Memory* %loadMem_40135e, %struct.Memory** %MEMORY
  br label %block_.L_401372

block_.L_401363:                                  ; preds = %block_401312, %block_.L_401300
  %loadMem_401363 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12766 = getelementptr inbounds %struct.GPR, %struct.GPR* %12765, i32 0, i32 33
  %12767 = getelementptr inbounds %struct.Reg, %struct.Reg* %12766, i32 0, i32 0
  %PC.i636 = bitcast %union.anon* %12767 to i64*
  %12768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12769 = getelementptr inbounds %struct.GPR, %struct.GPR* %12768, i32 0, i32 1
  %12770 = getelementptr inbounds %struct.Reg, %struct.Reg* %12769, i32 0, i32 0
  %RAX.i637 = bitcast %union.anon* %12770 to i64*
  %12771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12772 = getelementptr inbounds %struct.GPR, %struct.GPR* %12771, i32 0, i32 15
  %12773 = getelementptr inbounds %struct.Reg, %struct.Reg* %12772, i32 0, i32 0
  %RBP.i638 = bitcast %union.anon* %12773 to i64*
  %12774 = load i64, i64* %RBP.i638
  %12775 = sub i64 %12774, 4
  %12776 = load i64, i64* %PC.i636
  %12777 = add i64 %12776, 4
  store i64 %12777, i64* %PC.i636
  %12778 = inttoptr i64 %12775 to i32*
  %12779 = load i32, i32* %12778
  %12780 = sext i32 %12779 to i64
  store i64 %12780, i64* %RAX.i637, align 8
  store %struct.Memory* %loadMem_401363, %struct.Memory** %MEMORY
  %loadMem_401367 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12782 = getelementptr inbounds %struct.GPR, %struct.GPR* %12781, i32 0, i32 33
  %12783 = getelementptr inbounds %struct.Reg, %struct.Reg* %12782, i32 0, i32 0
  %PC.i633 = bitcast %union.anon* %12783 to i64*
  %12784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12785 = getelementptr inbounds %struct.GPR, %struct.GPR* %12784, i32 0, i32 1
  %12786 = getelementptr inbounds %struct.Reg, %struct.Reg* %12785, i32 0, i32 0
  %RAX.i634 = bitcast %union.anon* %12786 to i64*
  %12787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12788 = getelementptr inbounds %struct.GPR, %struct.GPR* %12787, i32 0, i32 15
  %12789 = getelementptr inbounds %struct.Reg, %struct.Reg* %12788, i32 0, i32 0
  %RBP.i635 = bitcast %union.anon* %12789 to i64*
  %12790 = load i64, i64* %RBP.i635
  %12791 = load i64, i64* %RAX.i634
  %12792 = mul i64 %12791, 4
  %12793 = add i64 %12790, -1616
  %12794 = add i64 %12793, %12792
  %12795 = load i64, i64* %PC.i633
  %12796 = add i64 %12795, 11
  store i64 %12796, i64* %PC.i633
  %12797 = inttoptr i64 %12794 to i32*
  store i32 0, i32* %12797
  store %struct.Memory* %loadMem_401367, %struct.Memory** %MEMORY
  br label %block_.L_401372

block_.L_401372:                                  ; preds = %block_.L_401363, %block_401332
  %loadMem_401372 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12799 = getelementptr inbounds %struct.GPR, %struct.GPR* %12798, i32 0, i32 33
  %12800 = getelementptr inbounds %struct.Reg, %struct.Reg* %12799, i32 0, i32 0
  %PC.i632 = bitcast %union.anon* %12800 to i64*
  %12801 = load i64, i64* %PC.i632
  %12802 = add i64 %12801, 5
  %12803 = load i64, i64* %PC.i632
  %12804 = add i64 %12803, 5
  store i64 %12804, i64* %PC.i632
  %12805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12802, i64* %12805, align 8
  store %struct.Memory* %loadMem_401372, %struct.Memory** %MEMORY
  br label %block_.L_401377

block_.L_401377:                                  ; preds = %block_.L_401372, %block_4012dd
  %loadMem_401377 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12807 = getelementptr inbounds %struct.GPR, %struct.GPR* %12806, i32 0, i32 33
  %12808 = getelementptr inbounds %struct.Reg, %struct.Reg* %12807, i32 0, i32 0
  %PC.i631 = bitcast %union.anon* %12808 to i64*
  %12809 = load i64, i64* %PC.i631
  %12810 = add i64 %12809, 5
  %12811 = load i64, i64* %PC.i631
  %12812 = add i64 %12811, 5
  store i64 %12812, i64* %PC.i631
  %12813 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12810, i64* %12813, align 8
  store %struct.Memory* %loadMem_401377, %struct.Memory** %MEMORY
  br label %block_.L_40137c

block_.L_40137c:                                  ; preds = %block_.L_401377, %block_401267
  %loadMem_40137c = load %struct.Memory*, %struct.Memory** %MEMORY
  %12814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12815 = getelementptr inbounds %struct.GPR, %struct.GPR* %12814, i32 0, i32 33
  %12816 = getelementptr inbounds %struct.Reg, %struct.Reg* %12815, i32 0, i32 0
  %PC.i629 = bitcast %union.anon* %12816 to i64*
  %12817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12818 = getelementptr inbounds %struct.GPR, %struct.GPR* %12817, i32 0, i32 15
  %12819 = getelementptr inbounds %struct.Reg, %struct.Reg* %12818, i32 0, i32 0
  %RBP.i630 = bitcast %union.anon* %12819 to i64*
  %12820 = load i64, i64* %RBP.i630
  %12821 = sub i64 %12820, 8
  %12822 = load i64, i64* %PC.i629
  %12823 = add i64 %12822, 7
  store i64 %12823, i64* %PC.i629
  %12824 = inttoptr i64 %12821 to i32*
  store i32 1, i32* %12824
  store %struct.Memory* %loadMem_40137c, %struct.Memory** %MEMORY
  br label %block_.L_401383

block_.L_401383:                                  ; preds = %block_.L_401426, %block_.L_40137c
  %loadMem_401383 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12826 = getelementptr inbounds %struct.GPR, %struct.GPR* %12825, i32 0, i32 33
  %12827 = getelementptr inbounds %struct.Reg, %struct.Reg* %12826, i32 0, i32 0
  %PC.i626 = bitcast %union.anon* %12827 to i64*
  %12828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12829 = getelementptr inbounds %struct.GPR, %struct.GPR* %12828, i32 0, i32 1
  %12830 = getelementptr inbounds %struct.Reg, %struct.Reg* %12829, i32 0, i32 0
  %RAX.i627 = bitcast %union.anon* %12830 to i64*
  %12831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12832 = getelementptr inbounds %struct.GPR, %struct.GPR* %12831, i32 0, i32 15
  %12833 = getelementptr inbounds %struct.Reg, %struct.Reg* %12832, i32 0, i32 0
  %RBP.i628 = bitcast %union.anon* %12833 to i64*
  %12834 = load i64, i64* %RBP.i628
  %12835 = sub i64 %12834, 8
  %12836 = load i64, i64* %PC.i626
  %12837 = add i64 %12836, 3
  store i64 %12837, i64* %PC.i626
  %12838 = inttoptr i64 %12835 to i32*
  %12839 = load i32, i32* %12838
  %12840 = zext i32 %12839 to i64
  store i64 %12840, i64* %RAX.i627, align 8
  store %struct.Memory* %loadMem_401383, %struct.Memory** %MEMORY
  %loadMem_401386 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12841 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12842 = getelementptr inbounds %struct.GPR, %struct.GPR* %12841, i32 0, i32 33
  %12843 = getelementptr inbounds %struct.Reg, %struct.Reg* %12842, i32 0, i32 0
  %PC.i623 = bitcast %union.anon* %12843 to i64*
  %12844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12845 = getelementptr inbounds %struct.GPR, %struct.GPR* %12844, i32 0, i32 1
  %12846 = getelementptr inbounds %struct.Reg, %struct.Reg* %12845, i32 0, i32 0
  %EAX.i624 = bitcast %union.anon* %12846 to i32*
  %12847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12848 = getelementptr inbounds %struct.GPR, %struct.GPR* %12847, i32 0, i32 15
  %12849 = getelementptr inbounds %struct.Reg, %struct.Reg* %12848, i32 0, i32 0
  %RBP.i625 = bitcast %union.anon* %12849 to i64*
  %12850 = load i32, i32* %EAX.i624
  %12851 = zext i32 %12850 to i64
  %12852 = load i64, i64* %RBP.i625
  %12853 = sub i64 %12852, 4
  %12854 = load i64, i64* %PC.i623
  %12855 = add i64 %12854, 3
  store i64 %12855, i64* %PC.i623
  %12856 = inttoptr i64 %12853 to i32*
  %12857 = load i32, i32* %12856
  %12858 = sub i32 %12850, %12857
  %12859 = icmp ult i32 %12850, %12857
  %12860 = zext i1 %12859 to i8
  %12861 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12860, i8* %12861, align 1
  %12862 = and i32 %12858, 255
  %12863 = call i32 @llvm.ctpop.i32(i32 %12862)
  %12864 = trunc i32 %12863 to i8
  %12865 = and i8 %12864, 1
  %12866 = xor i8 %12865, 1
  %12867 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12866, i8* %12867, align 1
  %12868 = xor i32 %12857, %12850
  %12869 = xor i32 %12868, %12858
  %12870 = lshr i32 %12869, 4
  %12871 = trunc i32 %12870 to i8
  %12872 = and i8 %12871, 1
  %12873 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12872, i8* %12873, align 1
  %12874 = icmp eq i32 %12858, 0
  %12875 = zext i1 %12874 to i8
  %12876 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12875, i8* %12876, align 1
  %12877 = lshr i32 %12858, 31
  %12878 = trunc i32 %12877 to i8
  %12879 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12878, i8* %12879, align 1
  %12880 = lshr i32 %12850, 31
  %12881 = lshr i32 %12857, 31
  %12882 = xor i32 %12881, %12880
  %12883 = xor i32 %12877, %12880
  %12884 = add i32 %12883, %12882
  %12885 = icmp eq i32 %12884, 2
  %12886 = zext i1 %12885 to i8
  %12887 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12886, i8* %12887, align 1
  store %struct.Memory* %loadMem_401386, %struct.Memory** %MEMORY
  %loadMem_401389 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12889 = getelementptr inbounds %struct.GPR, %struct.GPR* %12888, i32 0, i32 33
  %12890 = getelementptr inbounds %struct.Reg, %struct.Reg* %12889, i32 0, i32 0
  %PC.i622 = bitcast %union.anon* %12890 to i64*
  %12891 = load i64, i64* %PC.i622
  %12892 = add i64 %12891, 171
  %12893 = load i64, i64* %PC.i622
  %12894 = add i64 %12893, 6
  %12895 = load i64, i64* %PC.i622
  %12896 = add i64 %12895, 6
  store i64 %12896, i64* %PC.i622
  %12897 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %12898 = load i8, i8* %12897, align 1
  %12899 = icmp ne i8 %12898, 0
  %12900 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %12901 = load i8, i8* %12900, align 1
  %12902 = icmp ne i8 %12901, 0
  %12903 = xor i1 %12899, %12902
  %12904 = xor i1 %12903, true
  %12905 = zext i1 %12904 to i8
  store i8 %12905, i8* %BRANCH_TAKEN, align 1
  %12906 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12907 = select i1 %12903, i64 %12894, i64 %12892
  store i64 %12907, i64* %12906, align 8
  store %struct.Memory* %loadMem_401389, %struct.Memory** %MEMORY
  %loadBr_401389 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_401389 = icmp eq i8 %loadBr_401389, 1
  br i1 %cmpBr_401389, label %block_.L_401434, label %block_40138f

block_40138f:                                     ; preds = %block_.L_401383
  %loadMem_40138f = load %struct.Memory*, %struct.Memory** %MEMORY
  %12908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12909 = getelementptr inbounds %struct.GPR, %struct.GPR* %12908, i32 0, i32 33
  %12910 = getelementptr inbounds %struct.Reg, %struct.Reg* %12909, i32 0, i32 0
  %PC.i619 = bitcast %union.anon* %12910 to i64*
  %12911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12912 = getelementptr inbounds %struct.GPR, %struct.GPR* %12911, i32 0, i32 1
  %12913 = getelementptr inbounds %struct.Reg, %struct.Reg* %12912, i32 0, i32 0
  %RAX.i620 = bitcast %union.anon* %12913 to i64*
  %12914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12915 = getelementptr inbounds %struct.GPR, %struct.GPR* %12914, i32 0, i32 15
  %12916 = getelementptr inbounds %struct.Reg, %struct.Reg* %12915, i32 0, i32 0
  %RBP.i621 = bitcast %union.anon* %12916 to i64*
  %12917 = load i64, i64* %RBP.i621
  %12918 = sub i64 %12917, 8
  %12919 = load i64, i64* %PC.i619
  %12920 = add i64 %12919, 4
  store i64 %12920, i64* %PC.i619
  %12921 = inttoptr i64 %12918 to i32*
  %12922 = load i32, i32* %12921
  %12923 = sext i32 %12922 to i64
  store i64 %12923, i64* %RAX.i620, align 8
  store %struct.Memory* %loadMem_40138f, %struct.Memory** %MEMORY
  %loadMem_401393 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12925 = getelementptr inbounds %struct.GPR, %struct.GPR* %12924, i32 0, i32 33
  %12926 = getelementptr inbounds %struct.Reg, %struct.Reg* %12925, i32 0, i32 0
  %PC.i616 = bitcast %union.anon* %12926 to i64*
  %12927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12928 = getelementptr inbounds %struct.GPR, %struct.GPR* %12927, i32 0, i32 1
  %12929 = getelementptr inbounds %struct.Reg, %struct.Reg* %12928, i32 0, i32 0
  %RAX.i617 = bitcast %union.anon* %12929 to i64*
  %12930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12931 = getelementptr inbounds %struct.GPR, %struct.GPR* %12930, i32 0, i32 15
  %12932 = getelementptr inbounds %struct.Reg, %struct.Reg* %12931, i32 0, i32 0
  %RBP.i618 = bitcast %union.anon* %12932 to i64*
  %12933 = load i64, i64* %RBP.i618
  %12934 = load i64, i64* %RAX.i617
  %12935 = mul i64 %12934, 4
  %12936 = add i64 %12933, -1488
  %12937 = add i64 %12936, %12935
  %12938 = load i64, i64* %PC.i616
  %12939 = add i64 %12938, 8
  store i64 %12939, i64* %PC.i616
  %12940 = inttoptr i64 %12937 to i32*
  %12941 = load i32, i32* %12940
  %12942 = sub i32 %12941, -1
  %12943 = icmp ult i32 %12941, -1
  %12944 = zext i1 %12943 to i8
  %12945 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12944, i8* %12945, align 1
  %12946 = and i32 %12942, 255
  %12947 = call i32 @llvm.ctpop.i32(i32 %12946)
  %12948 = trunc i32 %12947 to i8
  %12949 = and i8 %12948, 1
  %12950 = xor i8 %12949, 1
  %12951 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12950, i8* %12951, align 1
  %12952 = xor i32 %12941, -1
  %12953 = xor i32 %12952, %12942
  %12954 = lshr i32 %12953, 4
  %12955 = trunc i32 %12954 to i8
  %12956 = and i8 %12955, 1
  %12957 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12956, i8* %12957, align 1
  %12958 = icmp eq i32 %12942, 0
  %12959 = zext i1 %12958 to i8
  %12960 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12959, i8* %12960, align 1
  %12961 = lshr i32 %12942, 31
  %12962 = trunc i32 %12961 to i8
  %12963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12962, i8* %12963, align 1
  %12964 = lshr i32 %12941, 31
  %12965 = xor i32 %12964, 1
  %12966 = xor i32 %12961, %12964
  %12967 = add i32 %12966, %12965
  %12968 = icmp eq i32 %12967, 2
  %12969 = zext i1 %12968 to i8
  %12970 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12969, i8* %12970, align 1
  store %struct.Memory* %loadMem_401393, %struct.Memory** %MEMORY
  %loadMem_40139b = load %struct.Memory*, %struct.Memory** %MEMORY
  %12971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12972 = getelementptr inbounds %struct.GPR, %struct.GPR* %12971, i32 0, i32 33
  %12973 = getelementptr inbounds %struct.Reg, %struct.Reg* %12972, i32 0, i32 0
  %PC.i615 = bitcast %union.anon* %12973 to i64*
  %12974 = load i64, i64* %PC.i615
  %12975 = add i64 %12974, 134
  %12976 = load i64, i64* %PC.i615
  %12977 = add i64 %12976, 6
  %12978 = load i64, i64* %PC.i615
  %12979 = add i64 %12978, 6
  store i64 %12979, i64* %PC.i615
  %12980 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12981 = load i8, i8* %12980, align 1
  store i8 %12981, i8* %BRANCH_TAKEN, align 1
  %12982 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12983 = icmp ne i8 %12981, 0
  %12984 = select i1 %12983, i64 %12975, i64 %12977
  store i64 %12984, i64* %12982, align 8
  store %struct.Memory* %loadMem_40139b, %struct.Memory** %MEMORY
  %loadBr_40139b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40139b = icmp eq i8 %loadBr_40139b, 1
  br i1 %cmpBr_40139b, label %block_.L_401421, label %block_4013a1

block_4013a1:                                     ; preds = %block_40138f
  %loadMem_4013a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12986 = getelementptr inbounds %struct.GPR, %struct.GPR* %12985, i32 0, i32 33
  %12987 = getelementptr inbounds %struct.Reg, %struct.Reg* %12986, i32 0, i32 0
  %PC.i612 = bitcast %union.anon* %12987 to i64*
  %12988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12989 = getelementptr inbounds %struct.GPR, %struct.GPR* %12988, i32 0, i32 1
  %12990 = getelementptr inbounds %struct.Reg, %struct.Reg* %12989, i32 0, i32 0
  %RAX.i613 = bitcast %union.anon* %12990 to i64*
  %12991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12992 = getelementptr inbounds %struct.GPR, %struct.GPR* %12991, i32 0, i32 15
  %12993 = getelementptr inbounds %struct.Reg, %struct.Reg* %12992, i32 0, i32 0
  %RBP.i614 = bitcast %union.anon* %12993 to i64*
  %12994 = load i64, i64* %RBP.i614
  %12995 = sub i64 %12994, 1168
  %12996 = load i64, i64* %PC.i612
  %12997 = add i64 %12996, 7
  store i64 %12997, i64* %PC.i612
  store i64 %12995, i64* %RAX.i613, align 8
  store %struct.Memory* %loadMem_4013a1, %struct.Memory** %MEMORY
  %loadMem_4013a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12999 = getelementptr inbounds %struct.GPR, %struct.GPR* %12998, i32 0, i32 33
  %13000 = getelementptr inbounds %struct.Reg, %struct.Reg* %12999, i32 0, i32 0
  %PC.i609 = bitcast %union.anon* %13000 to i64*
  %13001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13002 = getelementptr inbounds %struct.GPR, %struct.GPR* %13001, i32 0, i32 5
  %13003 = getelementptr inbounds %struct.Reg, %struct.Reg* %13002, i32 0, i32 0
  %RCX.i610 = bitcast %union.anon* %13003 to i64*
  %13004 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13005 = getelementptr inbounds %struct.GPR, %struct.GPR* %13004, i32 0, i32 15
  %13006 = getelementptr inbounds %struct.Reg, %struct.Reg* %13005, i32 0, i32 0
  %RBP.i611 = bitcast %union.anon* %13006 to i64*
  %13007 = load i64, i64* %RBP.i611
  %13008 = sub i64 %13007, 12
  %13009 = load i64, i64* %PC.i609
  %13010 = add i64 %13009, 4
  store i64 %13010, i64* %PC.i609
  %13011 = inttoptr i64 %13008 to i32*
  %13012 = load i32, i32* %13011
  %13013 = sext i32 %13012 to i64
  store i64 %13013, i64* %RCX.i610, align 8
  store %struct.Memory* %loadMem_4013a8, %struct.Memory** %MEMORY
  %loadMem_4013ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %13014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13015 = getelementptr inbounds %struct.GPR, %struct.GPR* %13014, i32 0, i32 33
  %13016 = getelementptr inbounds %struct.Reg, %struct.Reg* %13015, i32 0, i32 0
  %PC.i607 = bitcast %union.anon* %13016 to i64*
  %13017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13018 = getelementptr inbounds %struct.GPR, %struct.GPR* %13017, i32 0, i32 5
  %13019 = getelementptr inbounds %struct.Reg, %struct.Reg* %13018, i32 0, i32 0
  %RCX.i608 = bitcast %union.anon* %13019 to i64*
  %13020 = load i64, i64* %RCX.i608
  %13021 = load i64, i64* %PC.i607
  %13022 = add i64 %13021, 4
  store i64 %13022, i64* %PC.i607
  %13023 = shl i64 %13020, 5
  %13024 = icmp slt i64 %13023, 0
  %13025 = shl i64 %13023, 1
  store i64 %13025, i64* %RCX.i608, align 8
  %13026 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13027 = zext i1 %13024 to i8
  store i8 %13027, i8* %13026, align 1
  %13028 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %13029 = trunc i64 %13025 to i32
  %13030 = and i32 %13029, 254
  %13031 = call i32 @llvm.ctpop.i32(i32 %13030)
  %13032 = trunc i32 %13031 to i8
  %13033 = and i8 %13032, 1
  %13034 = xor i8 %13033, 1
  store i8 %13034, i8* %13028, align 1
  %13035 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13035, align 1
  %13036 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13037 = icmp eq i64 %13025, 0
  %13038 = zext i1 %13037 to i8
  store i8 %13038, i8* %13036, align 1
  %13039 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13040 = lshr i64 %13025, 63
  %13041 = trunc i64 %13040 to i8
  store i8 %13041, i8* %13039, align 1
  %13042 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %13042, align 1
  store %struct.Memory* %loadMem_4013ac, %struct.Memory** %MEMORY
  %loadMem_4013b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13044 = getelementptr inbounds %struct.GPR, %struct.GPR* %13043, i32 0, i32 33
  %13045 = getelementptr inbounds %struct.Reg, %struct.Reg* %13044, i32 0, i32 0
  %PC.i604 = bitcast %union.anon* %13045 to i64*
  %13046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13047 = getelementptr inbounds %struct.GPR, %struct.GPR* %13046, i32 0, i32 1
  %13048 = getelementptr inbounds %struct.Reg, %struct.Reg* %13047, i32 0, i32 0
  %RAX.i605 = bitcast %union.anon* %13048 to i64*
  %13049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13050 = getelementptr inbounds %struct.GPR, %struct.GPR* %13049, i32 0, i32 5
  %13051 = getelementptr inbounds %struct.Reg, %struct.Reg* %13050, i32 0, i32 0
  %RCX.i606 = bitcast %union.anon* %13051 to i64*
  %13052 = load i64, i64* %RAX.i605
  %13053 = load i64, i64* %RCX.i606
  %13054 = load i64, i64* %PC.i604
  %13055 = add i64 %13054, 3
  store i64 %13055, i64* %PC.i604
  %13056 = add i64 %13053, %13052
  store i64 %13056, i64* %RAX.i605, align 8
  %13057 = icmp ult i64 %13056, %13052
  %13058 = icmp ult i64 %13056, %13053
  %13059 = or i1 %13057, %13058
  %13060 = zext i1 %13059 to i8
  %13061 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13060, i8* %13061, align 1
  %13062 = trunc i64 %13056 to i32
  %13063 = and i32 %13062, 255
  %13064 = call i32 @llvm.ctpop.i32(i32 %13063)
  %13065 = trunc i32 %13064 to i8
  %13066 = and i8 %13065, 1
  %13067 = xor i8 %13066, 1
  %13068 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13067, i8* %13068, align 1
  %13069 = xor i64 %13053, %13052
  %13070 = xor i64 %13069, %13056
  %13071 = lshr i64 %13070, 4
  %13072 = trunc i64 %13071 to i8
  %13073 = and i8 %13072, 1
  %13074 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13073, i8* %13074, align 1
  %13075 = icmp eq i64 %13056, 0
  %13076 = zext i1 %13075 to i8
  %13077 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13076, i8* %13077, align 1
  %13078 = lshr i64 %13056, 63
  %13079 = trunc i64 %13078 to i8
  %13080 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13079, i8* %13080, align 1
  %13081 = lshr i64 %13052, 63
  %13082 = lshr i64 %13053, 63
  %13083 = xor i64 %13078, %13081
  %13084 = xor i64 %13078, %13082
  %13085 = add i64 %13083, %13084
  %13086 = icmp eq i64 %13085, 2
  %13087 = zext i1 %13086 to i8
  %13088 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13087, i8* %13088, align 1
  store %struct.Memory* %loadMem_4013b0, %struct.Memory** %MEMORY
  %loadMem_4013b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13090 = getelementptr inbounds %struct.GPR, %struct.GPR* %13089, i32 0, i32 33
  %13091 = getelementptr inbounds %struct.Reg, %struct.Reg* %13090, i32 0, i32 0
  %PC.i601 = bitcast %union.anon* %13091 to i64*
  %13092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13093 = getelementptr inbounds %struct.GPR, %struct.GPR* %13092, i32 0, i32 7
  %13094 = getelementptr inbounds %struct.Reg, %struct.Reg* %13093, i32 0, i32 0
  %RDX.i602 = bitcast %union.anon* %13094 to i64*
  %13095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13096 = getelementptr inbounds %struct.GPR, %struct.GPR* %13095, i32 0, i32 15
  %13097 = getelementptr inbounds %struct.Reg, %struct.Reg* %13096, i32 0, i32 0
  %RBP.i603 = bitcast %union.anon* %13097 to i64*
  %13098 = load i64, i64* %RBP.i603
  %13099 = sub i64 %13098, 4
  %13100 = load i64, i64* %PC.i601
  %13101 = add i64 %13100, 3
  store i64 %13101, i64* %PC.i601
  %13102 = inttoptr i64 %13099 to i32*
  %13103 = load i32, i32* %13102
  %13104 = zext i32 %13103 to i64
  store i64 %13104, i64* %RDX.i602, align 8
  store %struct.Memory* %loadMem_4013b3, %struct.Memory** %MEMORY
  %loadMem_4013b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13106 = getelementptr inbounds %struct.GPR, %struct.GPR* %13105, i32 0, i32 33
  %13107 = getelementptr inbounds %struct.Reg, %struct.Reg* %13106, i32 0, i32 0
  %PC.i598 = bitcast %union.anon* %13107 to i64*
  %13108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13109 = getelementptr inbounds %struct.GPR, %struct.GPR* %13108, i32 0, i32 7
  %13110 = getelementptr inbounds %struct.Reg, %struct.Reg* %13109, i32 0, i32 0
  %RDX.i599 = bitcast %union.anon* %13110 to i64*
  %13111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13112 = getelementptr inbounds %struct.GPR, %struct.GPR* %13111, i32 0, i32 15
  %13113 = getelementptr inbounds %struct.Reg, %struct.Reg* %13112, i32 0, i32 0
  %RBP.i600 = bitcast %union.anon* %13113 to i64*
  %13114 = load i64, i64* %RDX.i599
  %13115 = load i64, i64* %RBP.i600
  %13116 = sub i64 %13115, 8
  %13117 = load i64, i64* %PC.i598
  %13118 = add i64 %13117, 3
  store i64 %13118, i64* %PC.i598
  %13119 = trunc i64 %13114 to i32
  %13120 = inttoptr i64 %13116 to i32*
  %13121 = load i32, i32* %13120
  %13122 = sub i32 %13119, %13121
  %13123 = zext i32 %13122 to i64
  store i64 %13123, i64* %RDX.i599, align 8
  %13124 = icmp ult i32 %13119, %13121
  %13125 = zext i1 %13124 to i8
  %13126 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13125, i8* %13126, align 1
  %13127 = and i32 %13122, 255
  %13128 = call i32 @llvm.ctpop.i32(i32 %13127)
  %13129 = trunc i32 %13128 to i8
  %13130 = and i8 %13129, 1
  %13131 = xor i8 %13130, 1
  %13132 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13131, i8* %13132, align 1
  %13133 = xor i32 %13121, %13119
  %13134 = xor i32 %13133, %13122
  %13135 = lshr i32 %13134, 4
  %13136 = trunc i32 %13135 to i8
  %13137 = and i8 %13136, 1
  %13138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13137, i8* %13138, align 1
  %13139 = icmp eq i32 %13122, 0
  %13140 = zext i1 %13139 to i8
  %13141 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13140, i8* %13141, align 1
  %13142 = lshr i32 %13122, 31
  %13143 = trunc i32 %13142 to i8
  %13144 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13143, i8* %13144, align 1
  %13145 = lshr i32 %13119, 31
  %13146 = lshr i32 %13121, 31
  %13147 = xor i32 %13146, %13145
  %13148 = xor i32 %13142, %13145
  %13149 = add i32 %13148, %13147
  %13150 = icmp eq i32 %13149, 2
  %13151 = zext i1 %13150 to i8
  %13152 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13151, i8* %13152, align 1
  store %struct.Memory* %loadMem_4013b6, %struct.Memory** %MEMORY
  %loadMem_4013b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13154 = getelementptr inbounds %struct.GPR, %struct.GPR* %13153, i32 0, i32 33
  %13155 = getelementptr inbounds %struct.Reg, %struct.Reg* %13154, i32 0, i32 0
  %PC.i595 = bitcast %union.anon* %13155 to i64*
  %13156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13157 = getelementptr inbounds %struct.GPR, %struct.GPR* %13156, i32 0, i32 7
  %13158 = getelementptr inbounds %struct.Reg, %struct.Reg* %13157, i32 0, i32 0
  %EDX.i596 = bitcast %union.anon* %13158 to i32*
  %13159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13160 = getelementptr inbounds %struct.GPR, %struct.GPR* %13159, i32 0, i32 5
  %13161 = getelementptr inbounds %struct.Reg, %struct.Reg* %13160, i32 0, i32 0
  %RCX.i597 = bitcast %union.anon* %13161 to i64*
  %13162 = load i32, i32* %EDX.i596
  %13163 = zext i32 %13162 to i64
  %13164 = load i64, i64* %PC.i595
  %13165 = add i64 %13164, 3
  store i64 %13165, i64* %PC.i595
  %13166 = shl i64 %13163, 32
  %13167 = ashr exact i64 %13166, 32
  store i64 %13167, i64* %RCX.i597, align 8
  store %struct.Memory* %loadMem_4013b9, %struct.Memory** %MEMORY
  %loadMem_4013bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %13168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13169 = getelementptr inbounds %struct.GPR, %struct.GPR* %13168, i32 0, i32 33
  %13170 = getelementptr inbounds %struct.Reg, %struct.Reg* %13169, i32 0, i32 0
  %PC.i592 = bitcast %union.anon* %13170 to i64*
  %13171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13172 = getelementptr inbounds %struct.GPR, %struct.GPR* %13171, i32 0, i32 1
  %13173 = getelementptr inbounds %struct.Reg, %struct.Reg* %13172, i32 0, i32 0
  %RAX.i593 = bitcast %union.anon* %13173 to i64*
  %13174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13175 = getelementptr inbounds %struct.GPR, %struct.GPR* %13174, i32 0, i32 5
  %13176 = getelementptr inbounds %struct.Reg, %struct.Reg* %13175, i32 0, i32 0
  %RCX.i594 = bitcast %union.anon* %13176 to i64*
  %13177 = load i64, i64* %RAX.i593
  %13178 = load i64, i64* %RCX.i594
  %13179 = mul i64 %13178, 4
  %13180 = add i64 %13179, %13177
  %13181 = load i64, i64* %PC.i592
  %13182 = add i64 %13181, 4
  store i64 %13182, i64* %PC.i592
  %13183 = inttoptr i64 %13180 to i32*
  %13184 = load i32, i32* %13183
  %13185 = sub i32 %13184, -1
  %13186 = icmp ult i32 %13184, -1
  %13187 = zext i1 %13186 to i8
  %13188 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13187, i8* %13188, align 1
  %13189 = and i32 %13185, 255
  %13190 = call i32 @llvm.ctpop.i32(i32 %13189)
  %13191 = trunc i32 %13190 to i8
  %13192 = and i8 %13191, 1
  %13193 = xor i8 %13192, 1
  %13194 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13193, i8* %13194, align 1
  %13195 = xor i32 %13184, -1
  %13196 = xor i32 %13195, %13185
  %13197 = lshr i32 %13196, 4
  %13198 = trunc i32 %13197 to i8
  %13199 = and i8 %13198, 1
  %13200 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13199, i8* %13200, align 1
  %13201 = icmp eq i32 %13185, 0
  %13202 = zext i1 %13201 to i8
  %13203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13202, i8* %13203, align 1
  %13204 = lshr i32 %13185, 31
  %13205 = trunc i32 %13204 to i8
  %13206 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13205, i8* %13206, align 1
  %13207 = lshr i32 %13184, 31
  %13208 = xor i32 %13207, 1
  %13209 = xor i32 %13204, %13207
  %13210 = add i32 %13209, %13208
  %13211 = icmp eq i32 %13210, 2
  %13212 = zext i1 %13211 to i8
  %13213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13212, i8* %13213, align 1
  store %struct.Memory* %loadMem_4013bc, %struct.Memory** %MEMORY
  %loadMem_4013c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13215 = getelementptr inbounds %struct.GPR, %struct.GPR* %13214, i32 0, i32 33
  %13216 = getelementptr inbounds %struct.Reg, %struct.Reg* %13215, i32 0, i32 0
  %PC.i591 = bitcast %union.anon* %13216 to i64*
  %13217 = load i64, i64* %PC.i591
  %13218 = add i64 %13217, 97
  %13219 = load i64, i64* %PC.i591
  %13220 = add i64 %13219, 6
  %13221 = load i64, i64* %PC.i591
  %13222 = add i64 %13221, 6
  store i64 %13222, i64* %PC.i591
  %13223 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13224 = load i8, i8* %13223, align 1
  store i8 %13224, i8* %BRANCH_TAKEN, align 1
  %13225 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13226 = icmp ne i8 %13224, 0
  %13227 = select i1 %13226, i64 %13218, i64 %13220
  store i64 %13227, i64* %13225, align 8
  store %struct.Memory* %loadMem_4013c0, %struct.Memory** %MEMORY
  %loadBr_4013c0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4013c0 = icmp eq i8 %loadBr_4013c0, 1
  br i1 %cmpBr_4013c0, label %block_.L_401421, label %block_4013c6

block_4013c6:                                     ; preds = %block_4013a1
  %loadMem_4013c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13229 = getelementptr inbounds %struct.GPR, %struct.GPR* %13228, i32 0, i32 33
  %13230 = getelementptr inbounds %struct.Reg, %struct.Reg* %13229, i32 0, i32 0
  %PC.i589 = bitcast %union.anon* %13230 to i64*
  %13231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13232 = getelementptr inbounds %struct.GPR, %struct.GPR* %13231, i32 0, i32 1
  %13233 = getelementptr inbounds %struct.Reg, %struct.Reg* %13232, i32 0, i32 0
  %RAX.i590 = bitcast %union.anon* %13233 to i64*
  %13234 = load i64, i64* %PC.i589
  %13235 = add i64 %13234, 5
  store i64 %13235, i64* %PC.i589
  store i64 255, i64* %RAX.i590, align 8
  store %struct.Memory* %loadMem_4013c6, %struct.Memory** %MEMORY
  %loadMem_4013cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %13236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13237 = getelementptr inbounds %struct.GPR, %struct.GPR* %13236, i32 0, i32 33
  %13238 = getelementptr inbounds %struct.Reg, %struct.Reg* %13237, i32 0, i32 0
  %PC.i586 = bitcast %union.anon* %13238 to i64*
  %13239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13240 = getelementptr inbounds %struct.GPR, %struct.GPR* %13239, i32 0, i32 5
  %13241 = getelementptr inbounds %struct.Reg, %struct.Reg* %13240, i32 0, i32 0
  %RCX.i587 = bitcast %union.anon* %13241 to i64*
  %13242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13243 = getelementptr inbounds %struct.GPR, %struct.GPR* %13242, i32 0, i32 15
  %13244 = getelementptr inbounds %struct.Reg, %struct.Reg* %13243, i32 0, i32 0
  %RBP.i588 = bitcast %union.anon* %13244 to i64*
  %13245 = load i64, i64* %RBP.i588
  %13246 = sub i64 %13245, 1168
  %13247 = load i64, i64* %PC.i586
  %13248 = add i64 %13247, 7
  store i64 %13248, i64* %PC.i586
  store i64 %13246, i64* %RCX.i587, align 8
  store %struct.Memory* %loadMem_4013cb, %struct.Memory** %MEMORY
  %loadMem_4013d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13250 = getelementptr inbounds %struct.GPR, %struct.GPR* %13249, i32 0, i32 33
  %13251 = getelementptr inbounds %struct.Reg, %struct.Reg* %13250, i32 0, i32 0
  %PC.i583 = bitcast %union.anon* %13251 to i64*
  %13252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13253 = getelementptr inbounds %struct.GPR, %struct.GPR* %13252, i32 0, i32 7
  %13254 = getelementptr inbounds %struct.Reg, %struct.Reg* %13253, i32 0, i32 0
  %RDX.i584 = bitcast %union.anon* %13254 to i64*
  %13255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13256 = getelementptr inbounds %struct.GPR, %struct.GPR* %13255, i32 0, i32 15
  %13257 = getelementptr inbounds %struct.Reg, %struct.Reg* %13256, i32 0, i32 0
  %RBP.i585 = bitcast %union.anon* %13257 to i64*
  %13258 = load i64, i64* %RBP.i585
  %13259 = sub i64 %13258, 12
  %13260 = load i64, i64* %PC.i583
  %13261 = add i64 %13260, 4
  store i64 %13261, i64* %PC.i583
  %13262 = inttoptr i64 %13259 to i32*
  %13263 = load i32, i32* %13262
  %13264 = sext i32 %13263 to i64
  store i64 %13264, i64* %RDX.i584, align 8
  store %struct.Memory* %loadMem_4013d2, %struct.Memory** %MEMORY
  %loadMem_4013d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13266 = getelementptr inbounds %struct.GPR, %struct.GPR* %13265, i32 0, i32 33
  %13267 = getelementptr inbounds %struct.Reg, %struct.Reg* %13266, i32 0, i32 0
  %PC.i581 = bitcast %union.anon* %13267 to i64*
  %13268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13269 = getelementptr inbounds %struct.GPR, %struct.GPR* %13268, i32 0, i32 7
  %13270 = getelementptr inbounds %struct.Reg, %struct.Reg* %13269, i32 0, i32 0
  %RDX.i582 = bitcast %union.anon* %13270 to i64*
  %13271 = load i64, i64* %RDX.i582
  %13272 = load i64, i64* %PC.i581
  %13273 = add i64 %13272, 4
  store i64 %13273, i64* %PC.i581
  %13274 = shl i64 %13271, 5
  %13275 = icmp slt i64 %13274, 0
  %13276 = shl i64 %13274, 1
  store i64 %13276, i64* %RDX.i582, align 8
  %13277 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13278 = zext i1 %13275 to i8
  store i8 %13278, i8* %13277, align 1
  %13279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %13280 = trunc i64 %13276 to i32
  %13281 = and i32 %13280, 254
  %13282 = call i32 @llvm.ctpop.i32(i32 %13281)
  %13283 = trunc i32 %13282 to i8
  %13284 = and i8 %13283, 1
  %13285 = xor i8 %13284, 1
  store i8 %13285, i8* %13279, align 1
  %13286 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13286, align 1
  %13287 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13288 = icmp eq i64 %13276, 0
  %13289 = zext i1 %13288 to i8
  store i8 %13289, i8* %13287, align 1
  %13290 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13291 = lshr i64 %13276, 63
  %13292 = trunc i64 %13291 to i8
  store i8 %13292, i8* %13290, align 1
  %13293 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %13293, align 1
  store %struct.Memory* %loadMem_4013d6, %struct.Memory** %MEMORY
  %loadMem_4013da = load %struct.Memory*, %struct.Memory** %MEMORY
  %13294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13295 = getelementptr inbounds %struct.GPR, %struct.GPR* %13294, i32 0, i32 33
  %13296 = getelementptr inbounds %struct.Reg, %struct.Reg* %13295, i32 0, i32 0
  %PC.i578 = bitcast %union.anon* %13296 to i64*
  %13297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13298 = getelementptr inbounds %struct.GPR, %struct.GPR* %13297, i32 0, i32 5
  %13299 = getelementptr inbounds %struct.Reg, %struct.Reg* %13298, i32 0, i32 0
  %RCX.i579 = bitcast %union.anon* %13299 to i64*
  %13300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13301 = getelementptr inbounds %struct.GPR, %struct.GPR* %13300, i32 0, i32 7
  %13302 = getelementptr inbounds %struct.Reg, %struct.Reg* %13301, i32 0, i32 0
  %RDX.i580 = bitcast %union.anon* %13302 to i64*
  %13303 = load i64, i64* %RCX.i579
  %13304 = load i64, i64* %RDX.i580
  %13305 = load i64, i64* %PC.i578
  %13306 = add i64 %13305, 3
  store i64 %13306, i64* %PC.i578
  %13307 = add i64 %13304, %13303
  store i64 %13307, i64* %RCX.i579, align 8
  %13308 = icmp ult i64 %13307, %13303
  %13309 = icmp ult i64 %13307, %13304
  %13310 = or i1 %13308, %13309
  %13311 = zext i1 %13310 to i8
  %13312 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13311, i8* %13312, align 1
  %13313 = trunc i64 %13307 to i32
  %13314 = and i32 %13313, 255
  %13315 = call i32 @llvm.ctpop.i32(i32 %13314)
  %13316 = trunc i32 %13315 to i8
  %13317 = and i8 %13316, 1
  %13318 = xor i8 %13317, 1
  %13319 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13318, i8* %13319, align 1
  %13320 = xor i64 %13304, %13303
  %13321 = xor i64 %13320, %13307
  %13322 = lshr i64 %13321, 4
  %13323 = trunc i64 %13322 to i8
  %13324 = and i8 %13323, 1
  %13325 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13324, i8* %13325, align 1
  %13326 = icmp eq i64 %13307, 0
  %13327 = zext i1 %13326 to i8
  %13328 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13327, i8* %13328, align 1
  %13329 = lshr i64 %13307, 63
  %13330 = trunc i64 %13329 to i8
  %13331 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13330, i8* %13331, align 1
  %13332 = lshr i64 %13303, 63
  %13333 = lshr i64 %13304, 63
  %13334 = xor i64 %13329, %13332
  %13335 = xor i64 %13329, %13333
  %13336 = add i64 %13334, %13335
  %13337 = icmp eq i64 %13336, 2
  %13338 = zext i1 %13337 to i8
  %13339 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13338, i8* %13339, align 1
  store %struct.Memory* %loadMem_4013da, %struct.Memory** %MEMORY
  %loadMem_4013dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %13340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13341 = getelementptr inbounds %struct.GPR, %struct.GPR* %13340, i32 0, i32 33
  %13342 = getelementptr inbounds %struct.Reg, %struct.Reg* %13341, i32 0, i32 0
  %PC.i575 = bitcast %union.anon* %13342 to i64*
  %13343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13344 = getelementptr inbounds %struct.GPR, %struct.GPR* %13343, i32 0, i32 9
  %13345 = getelementptr inbounds %struct.Reg, %struct.Reg* %13344, i32 0, i32 0
  %RSI.i576 = bitcast %union.anon* %13345 to i64*
  %13346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13347 = getelementptr inbounds %struct.GPR, %struct.GPR* %13346, i32 0, i32 15
  %13348 = getelementptr inbounds %struct.Reg, %struct.Reg* %13347, i32 0, i32 0
  %RBP.i577 = bitcast %union.anon* %13348 to i64*
  %13349 = load i64, i64* %RBP.i577
  %13350 = sub i64 %13349, 4
  %13351 = load i64, i64* %PC.i575
  %13352 = add i64 %13351, 3
  store i64 %13352, i64* %PC.i575
  %13353 = inttoptr i64 %13350 to i32*
  %13354 = load i32, i32* %13353
  %13355 = zext i32 %13354 to i64
  store i64 %13355, i64* %RSI.i576, align 8
  store %struct.Memory* %loadMem_4013dd, %struct.Memory** %MEMORY
  %loadMem_4013e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13357 = getelementptr inbounds %struct.GPR, %struct.GPR* %13356, i32 0, i32 33
  %13358 = getelementptr inbounds %struct.Reg, %struct.Reg* %13357, i32 0, i32 0
  %PC.i572 = bitcast %union.anon* %13358 to i64*
  %13359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13360 = getelementptr inbounds %struct.GPR, %struct.GPR* %13359, i32 0, i32 9
  %13361 = getelementptr inbounds %struct.Reg, %struct.Reg* %13360, i32 0, i32 0
  %RSI.i573 = bitcast %union.anon* %13361 to i64*
  %13362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13363 = getelementptr inbounds %struct.GPR, %struct.GPR* %13362, i32 0, i32 15
  %13364 = getelementptr inbounds %struct.Reg, %struct.Reg* %13363, i32 0, i32 0
  %RBP.i574 = bitcast %union.anon* %13364 to i64*
  %13365 = load i64, i64* %RSI.i573
  %13366 = load i64, i64* %RBP.i574
  %13367 = sub i64 %13366, 8
  %13368 = load i64, i64* %PC.i572
  %13369 = add i64 %13368, 3
  store i64 %13369, i64* %PC.i572
  %13370 = trunc i64 %13365 to i32
  %13371 = inttoptr i64 %13367 to i32*
  %13372 = load i32, i32* %13371
  %13373 = sub i32 %13370, %13372
  %13374 = zext i32 %13373 to i64
  store i64 %13374, i64* %RSI.i573, align 8
  %13375 = icmp ult i32 %13370, %13372
  %13376 = zext i1 %13375 to i8
  %13377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13376, i8* %13377, align 1
  %13378 = and i32 %13373, 255
  %13379 = call i32 @llvm.ctpop.i32(i32 %13378)
  %13380 = trunc i32 %13379 to i8
  %13381 = and i8 %13380, 1
  %13382 = xor i8 %13381, 1
  %13383 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13382, i8* %13383, align 1
  %13384 = xor i32 %13372, %13370
  %13385 = xor i32 %13384, %13373
  %13386 = lshr i32 %13385, 4
  %13387 = trunc i32 %13386 to i8
  %13388 = and i8 %13387, 1
  %13389 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13388, i8* %13389, align 1
  %13390 = icmp eq i32 %13373, 0
  %13391 = zext i1 %13390 to i8
  %13392 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13391, i8* %13392, align 1
  %13393 = lshr i32 %13373, 31
  %13394 = trunc i32 %13393 to i8
  %13395 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13394, i8* %13395, align 1
  %13396 = lshr i32 %13370, 31
  %13397 = lshr i32 %13372, 31
  %13398 = xor i32 %13397, %13396
  %13399 = xor i32 %13393, %13396
  %13400 = add i32 %13399, %13398
  %13401 = icmp eq i32 %13400, 2
  %13402 = zext i1 %13401 to i8
  %13403 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13402, i8* %13403, align 1
  store %struct.Memory* %loadMem_4013e0, %struct.Memory** %MEMORY
  %loadMem_4013e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13405 = getelementptr inbounds %struct.GPR, %struct.GPR* %13404, i32 0, i32 33
  %13406 = getelementptr inbounds %struct.Reg, %struct.Reg* %13405, i32 0, i32 0
  %PC.i569 = bitcast %union.anon* %13406 to i64*
  %13407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13408 = getelementptr inbounds %struct.GPR, %struct.GPR* %13407, i32 0, i32 9
  %13409 = getelementptr inbounds %struct.Reg, %struct.Reg* %13408, i32 0, i32 0
  %ESI.i570 = bitcast %union.anon* %13409 to i32*
  %13410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13411 = getelementptr inbounds %struct.GPR, %struct.GPR* %13410, i32 0, i32 7
  %13412 = getelementptr inbounds %struct.Reg, %struct.Reg* %13411, i32 0, i32 0
  %RDX.i571 = bitcast %union.anon* %13412 to i64*
  %13413 = load i32, i32* %ESI.i570
  %13414 = zext i32 %13413 to i64
  %13415 = load i64, i64* %PC.i569
  %13416 = add i64 %13415, 3
  store i64 %13416, i64* %PC.i569
  %13417 = shl i64 %13414, 32
  %13418 = ashr exact i64 %13417, 32
  store i64 %13418, i64* %RDX.i571, align 8
  store %struct.Memory* %loadMem_4013e3, %struct.Memory** %MEMORY
  %loadMem_4013e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13420 = getelementptr inbounds %struct.GPR, %struct.GPR* %13419, i32 0, i32 33
  %13421 = getelementptr inbounds %struct.Reg, %struct.Reg* %13420, i32 0, i32 0
  %PC.i565 = bitcast %union.anon* %13421 to i64*
  %13422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13423 = getelementptr inbounds %struct.GPR, %struct.GPR* %13422, i32 0, i32 5
  %13424 = getelementptr inbounds %struct.Reg, %struct.Reg* %13423, i32 0, i32 0
  %RCX.i566 = bitcast %union.anon* %13424 to i64*
  %13425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13426 = getelementptr inbounds %struct.GPR, %struct.GPR* %13425, i32 0, i32 7
  %13427 = getelementptr inbounds %struct.Reg, %struct.Reg* %13426, i32 0, i32 0
  %RDX.i567 = bitcast %union.anon* %13427 to i64*
  %13428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13429 = getelementptr inbounds %struct.GPR, %struct.GPR* %13428, i32 0, i32 9
  %13430 = getelementptr inbounds %struct.Reg, %struct.Reg* %13429, i32 0, i32 0
  %RSI.i568 = bitcast %union.anon* %13430 to i64*
  %13431 = load i64, i64* %RCX.i566
  %13432 = load i64, i64* %RDX.i567
  %13433 = mul i64 %13432, 4
  %13434 = add i64 %13433, %13431
  %13435 = load i64, i64* %PC.i565
  %13436 = add i64 %13435, 3
  store i64 %13436, i64* %PC.i565
  %13437 = inttoptr i64 %13434 to i32*
  %13438 = load i32, i32* %13437
  %13439 = zext i32 %13438 to i64
  store i64 %13439, i64* %RSI.i568, align 8
  store %struct.Memory* %loadMem_4013e6, %struct.Memory** %MEMORY
  %loadMem_4013e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13441 = getelementptr inbounds %struct.GPR, %struct.GPR* %13440, i32 0, i32 33
  %13442 = getelementptr inbounds %struct.Reg, %struct.Reg* %13441, i32 0, i32 0
  %PC.i562 = bitcast %union.anon* %13442 to i64*
  %13443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13444 = getelementptr inbounds %struct.GPR, %struct.GPR* %13443, i32 0, i32 5
  %13445 = getelementptr inbounds %struct.Reg, %struct.Reg* %13444, i32 0, i32 0
  %RCX.i563 = bitcast %union.anon* %13445 to i64*
  %13446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13447 = getelementptr inbounds %struct.GPR, %struct.GPR* %13446, i32 0, i32 15
  %13448 = getelementptr inbounds %struct.Reg, %struct.Reg* %13447, i32 0, i32 0
  %RBP.i564 = bitcast %union.anon* %13448 to i64*
  %13449 = load i64, i64* %RBP.i564
  %13450 = sub i64 %13449, 8
  %13451 = load i64, i64* %PC.i562
  %13452 = add i64 %13451, 4
  store i64 %13452, i64* %PC.i562
  %13453 = inttoptr i64 %13450 to i32*
  %13454 = load i32, i32* %13453
  %13455 = sext i32 %13454 to i64
  store i64 %13455, i64* %RCX.i563, align 8
  store %struct.Memory* %loadMem_4013e9, %struct.Memory** %MEMORY
  %loadMem_4013ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %13456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13457 = getelementptr inbounds %struct.GPR, %struct.GPR* %13456, i32 0, i32 33
  %13458 = getelementptr inbounds %struct.Reg, %struct.Reg* %13457, i32 0, i32 0
  %PC.i558 = bitcast %union.anon* %13458 to i64*
  %13459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13460 = getelementptr inbounds %struct.GPR, %struct.GPR* %13459, i32 0, i32 5
  %13461 = getelementptr inbounds %struct.Reg, %struct.Reg* %13460, i32 0, i32 0
  %RCX.i559 = bitcast %union.anon* %13461 to i64*
  %13462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13463 = getelementptr inbounds %struct.GPR, %struct.GPR* %13462, i32 0, i32 9
  %13464 = getelementptr inbounds %struct.Reg, %struct.Reg* %13463, i32 0, i32 0
  %RSI.i560 = bitcast %union.anon* %13464 to i64*
  %13465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13466 = getelementptr inbounds %struct.GPR, %struct.GPR* %13465, i32 0, i32 15
  %13467 = getelementptr inbounds %struct.Reg, %struct.Reg* %13466, i32 0, i32 0
  %RBP.i561 = bitcast %union.anon* %13467 to i64*
  %13468 = load i64, i64* %RSI.i560
  %13469 = load i64, i64* %RBP.i561
  %13470 = load i64, i64* %RCX.i559
  %13471 = mul i64 %13470, 4
  %13472 = add i64 %13469, -1488
  %13473 = add i64 %13472, %13471
  %13474 = load i64, i64* %PC.i558
  %13475 = add i64 %13474, 7
  store i64 %13475, i64* %PC.i558
  %13476 = trunc i64 %13468 to i32
  %13477 = inttoptr i64 %13473 to i32*
  %13478 = load i32, i32* %13477
  %13479 = add i32 %13478, %13476
  %13480 = zext i32 %13479 to i64
  store i64 %13480, i64* %RSI.i560, align 8
  %13481 = icmp ult i32 %13479, %13476
  %13482 = icmp ult i32 %13479, %13478
  %13483 = or i1 %13481, %13482
  %13484 = zext i1 %13483 to i8
  %13485 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13484, i8* %13485, align 1
  %13486 = and i32 %13479, 255
  %13487 = call i32 @llvm.ctpop.i32(i32 %13486)
  %13488 = trunc i32 %13487 to i8
  %13489 = and i8 %13488, 1
  %13490 = xor i8 %13489, 1
  %13491 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13490, i8* %13491, align 1
  %13492 = xor i32 %13478, %13476
  %13493 = xor i32 %13492, %13479
  %13494 = lshr i32 %13493, 4
  %13495 = trunc i32 %13494 to i8
  %13496 = and i8 %13495, 1
  %13497 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13496, i8* %13497, align 1
  %13498 = icmp eq i32 %13479, 0
  %13499 = zext i1 %13498 to i8
  %13500 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13499, i8* %13500, align 1
  %13501 = lshr i32 %13479, 31
  %13502 = trunc i32 %13501 to i8
  %13503 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13502, i8* %13503, align 1
  %13504 = lshr i32 %13476, 31
  %13505 = lshr i32 %13478, 31
  %13506 = xor i32 %13501, %13504
  %13507 = xor i32 %13501, %13505
  %13508 = add i32 %13506, %13507
  %13509 = icmp eq i32 %13508, 2
  %13510 = zext i1 %13509 to i8
  %13511 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13510, i8* %13511, align 1
  store %struct.Memory* %loadMem_4013ed, %struct.Memory** %MEMORY
  %loadMem_4013f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13513 = getelementptr inbounds %struct.GPR, %struct.GPR* %13512, i32 0, i32 33
  %13514 = getelementptr inbounds %struct.Reg, %struct.Reg* %13513, i32 0, i32 0
  %PC.i555 = bitcast %union.anon* %13514 to i64*
  %13515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13516 = getelementptr inbounds %struct.GPR, %struct.GPR* %13515, i32 0, i32 1
  %13517 = getelementptr inbounds %struct.Reg, %struct.Reg* %13516, i32 0, i32 0
  %EAX.i556 = bitcast %union.anon* %13517 to i32*
  %13518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13519 = getelementptr inbounds %struct.GPR, %struct.GPR* %13518, i32 0, i32 15
  %13520 = getelementptr inbounds %struct.Reg, %struct.Reg* %13519, i32 0, i32 0
  %RBP.i557 = bitcast %union.anon* %13520 to i64*
  %13521 = load i64, i64* %RBP.i557
  %13522 = sub i64 %13521, 2720
  %13523 = load i32, i32* %EAX.i556
  %13524 = zext i32 %13523 to i64
  %13525 = load i64, i64* %PC.i555
  %13526 = add i64 %13525, 6
  store i64 %13526, i64* %PC.i555
  %13527 = inttoptr i64 %13522 to i32*
  store i32 %13523, i32* %13527
  store %struct.Memory* %loadMem_4013f4, %struct.Memory** %MEMORY
  %loadMem_4013fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %13528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13529 = getelementptr inbounds %struct.GPR, %struct.GPR* %13528, i32 0, i32 33
  %13530 = getelementptr inbounds %struct.Reg, %struct.Reg* %13529, i32 0, i32 0
  %PC.i552 = bitcast %union.anon* %13530 to i64*
  %13531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13532 = getelementptr inbounds %struct.GPR, %struct.GPR* %13531, i32 0, i32 9
  %13533 = getelementptr inbounds %struct.Reg, %struct.Reg* %13532, i32 0, i32 0
  %ESI.i553 = bitcast %union.anon* %13533 to i32*
  %13534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13535 = getelementptr inbounds %struct.GPR, %struct.GPR* %13534, i32 0, i32 1
  %13536 = getelementptr inbounds %struct.Reg, %struct.Reg* %13535, i32 0, i32 0
  %RAX.i554 = bitcast %union.anon* %13536 to i64*
  %13537 = load i32, i32* %ESI.i553
  %13538 = zext i32 %13537 to i64
  %13539 = load i64, i64* %PC.i552
  %13540 = add i64 %13539, 2
  store i64 %13540, i64* %PC.i552
  %13541 = and i64 %13538, 4294967295
  store i64 %13541, i64* %RAX.i554, align 8
  store %struct.Memory* %loadMem_4013fa, %struct.Memory** %MEMORY
  %loadMem_4013fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %13542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13543 = getelementptr inbounds %struct.GPR, %struct.GPR* %13542, i32 0, i32 33
  %13544 = getelementptr inbounds %struct.Reg, %struct.Reg* %13543, i32 0, i32 0
  %PC.i551 = bitcast %union.anon* %13544 to i64*
  %13545 = load i64, i64* %PC.i551
  %13546 = add i64 %13545, 1
  store i64 %13546, i64* %PC.i551
  %13547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %13548 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %13549 = bitcast %union.anon* %13548 to i32*
  %13550 = load i32, i32* %13549, align 8
  %13551 = sext i32 %13550 to i64
  %13552 = lshr i64 %13551, 32
  store i64 %13552, i64* %13547, align 8
  store %struct.Memory* %loadMem_4013fc, %struct.Memory** %MEMORY
  %loadMem_4013fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %13553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13554 = getelementptr inbounds %struct.GPR, %struct.GPR* %13553, i32 0, i32 33
  %13555 = getelementptr inbounds %struct.Reg, %struct.Reg* %13554, i32 0, i32 0
  %PC.i548 = bitcast %union.anon* %13555 to i64*
  %13556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13557 = getelementptr inbounds %struct.GPR, %struct.GPR* %13556, i32 0, i32 9
  %13558 = getelementptr inbounds %struct.Reg, %struct.Reg* %13557, i32 0, i32 0
  %RSI.i549 = bitcast %union.anon* %13558 to i64*
  %13559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13560 = getelementptr inbounds %struct.GPR, %struct.GPR* %13559, i32 0, i32 15
  %13561 = getelementptr inbounds %struct.Reg, %struct.Reg* %13560, i32 0, i32 0
  %RBP.i550 = bitcast %union.anon* %13561 to i64*
  %13562 = load i64, i64* %RBP.i550
  %13563 = sub i64 %13562, 2720
  %13564 = load i64, i64* %PC.i548
  %13565 = add i64 %13564, 6
  store i64 %13565, i64* %PC.i548
  %13566 = inttoptr i64 %13563 to i32*
  %13567 = load i32, i32* %13566
  %13568 = zext i32 %13567 to i64
  store i64 %13568, i64* %RSI.i549, align 8
  store %struct.Memory* %loadMem_4013fd, %struct.Memory** %MEMORY
  %loadMem_401403 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13570 = getelementptr inbounds %struct.GPR, %struct.GPR* %13569, i32 0, i32 33
  %13571 = getelementptr inbounds %struct.Reg, %struct.Reg* %13570, i32 0, i32 0
  %PC.i543 = bitcast %union.anon* %13571 to i64*
  %13572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13573 = getelementptr inbounds %struct.GPR, %struct.GPR* %13572, i32 0, i32 9
  %13574 = getelementptr inbounds %struct.Reg, %struct.Reg* %13573, i32 0, i32 0
  %ESI.i544 = bitcast %union.anon* %13574 to i32*
  %13575 = load i32, i32* %ESI.i544
  %13576 = zext i32 %13575 to i64
  %13577 = load i64, i64* %PC.i543
  %13578 = add i64 %13577, 2
  store i64 %13578, i64* %PC.i543
  %13579 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %13580 = bitcast %union.anon* %13579 to i32*
  %13581 = load i32, i32* %13580, align 8
  %13582 = zext i32 %13581 to i64
  %13583 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %13584 = bitcast %union.anon* %13583 to i32*
  %13585 = load i32, i32* %13584, align 8
  %13586 = zext i32 %13585 to i64
  %13587 = shl i64 %13576, 32
  %13588 = ashr exact i64 %13587, 32
  %13589 = shl i64 %13586, 32
  %13590 = or i64 %13589, %13582
  %13591 = sdiv i64 %13590, %13588
  %13592 = shl i64 %13591, 32
  %13593 = ashr exact i64 %13592, 32
  %13594 = icmp eq i64 %13591, %13593
  br i1 %13594, label %13599, label %13595

; <label>:13595:                                  ; preds = %block_4013c6
  %13596 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13597 = load i64, i64* %13596, align 8
  %13598 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %13597, %struct.Memory* %loadMem_401403)
  br label %routine_idivl__esi.exit545

; <label>:13599:                                  ; preds = %block_4013c6
  %13600 = srem i64 %13590, %13588
  %13601 = getelementptr inbounds %union.anon, %union.anon* %13579, i64 0, i32 0
  %13602 = and i64 %13591, 4294967295
  store i64 %13602, i64* %13601, align 8
  %13603 = getelementptr inbounds %union.anon, %union.anon* %13583, i64 0, i32 0
  %13604 = and i64 %13600, 4294967295
  store i64 %13604, i64* %13603, align 8
  %13605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13605, align 1
  %13606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %13606, align 1
  %13607 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13607, align 1
  %13608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %13608, align 1
  %13609 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %13609, align 1
  %13610 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %13610, align 1
  br label %routine_idivl__esi.exit545

routine_idivl__esi.exit545:                       ; preds = %13595, %13599
  %13611 = phi %struct.Memory* [ %13598, %13595 ], [ %loadMem_401403, %13599 ]
  store %struct.Memory* %13611, %struct.Memory** %MEMORY
  %loadMem_401405 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13613 = getelementptr inbounds %struct.GPR, %struct.GPR* %13612, i32 0, i32 33
  %13614 = getelementptr inbounds %struct.Reg, %struct.Reg* %13613, i32 0, i32 0
  %PC.i540 = bitcast %union.anon* %13614 to i64*
  %13615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13616 = getelementptr inbounds %struct.GPR, %struct.GPR* %13615, i32 0, i32 7
  %13617 = getelementptr inbounds %struct.Reg, %struct.Reg* %13616, i32 0, i32 0
  %EDX.i541 = bitcast %union.anon* %13617 to i32*
  %13618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13619 = getelementptr inbounds %struct.GPR, %struct.GPR* %13618, i32 0, i32 5
  %13620 = getelementptr inbounds %struct.Reg, %struct.Reg* %13619, i32 0, i32 0
  %RCX.i542 = bitcast %union.anon* %13620 to i64*
  %13621 = load i32, i32* %EDX.i541
  %13622 = zext i32 %13621 to i64
  %13623 = load i64, i64* %PC.i540
  %13624 = add i64 %13623, 3
  store i64 %13624, i64* %PC.i540
  %13625 = shl i64 %13622, 32
  %13626 = ashr exact i64 %13625, 32
  store i64 %13626, i64* %RCX.i542, align 8
  store %struct.Memory* %loadMem_401405, %struct.Memory** %MEMORY
  %loadMem_401408 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13628 = getelementptr inbounds %struct.GPR, %struct.GPR* %13627, i32 0, i32 33
  %13629 = getelementptr inbounds %struct.Reg, %struct.Reg* %13628, i32 0, i32 0
  %PC.i537 = bitcast %union.anon* %13629 to i64*
  %13630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13631 = getelementptr inbounds %struct.GPR, %struct.GPR* %13630, i32 0, i32 5
  %13632 = getelementptr inbounds %struct.Reg, %struct.Reg* %13631, i32 0, i32 0
  %RCX.i538 = bitcast %union.anon* %13632 to i64*
  %13633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13634 = getelementptr inbounds %struct.GPR, %struct.GPR* %13633, i32 0, i32 7
  %13635 = getelementptr inbounds %struct.Reg, %struct.Reg* %13634, i32 0, i32 0
  %RDX.i539 = bitcast %union.anon* %13635 to i64*
  %13636 = load i64, i64* %RCX.i538
  %13637 = mul i64 %13636, 4
  %13638 = add i64 %13637, 6305920
  %13639 = load i64, i64* %PC.i537
  %13640 = add i64 %13639, 7
  store i64 %13640, i64* %PC.i537
  %13641 = inttoptr i64 %13638 to i32*
  %13642 = load i32, i32* %13641
  %13643 = zext i32 %13642 to i64
  store i64 %13643, i64* %RDX.i539, align 8
  store %struct.Memory* %loadMem_401408, %struct.Memory** %MEMORY
  %loadMem_40140f = load %struct.Memory*, %struct.Memory** %MEMORY
  %13644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13645 = getelementptr inbounds %struct.GPR, %struct.GPR* %13644, i32 0, i32 33
  %13646 = getelementptr inbounds %struct.Reg, %struct.Reg* %13645, i32 0, i32 0
  %PC.i534 = bitcast %union.anon* %13646 to i64*
  %13647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13648 = getelementptr inbounds %struct.GPR, %struct.GPR* %13647, i32 0, i32 5
  %13649 = getelementptr inbounds %struct.Reg, %struct.Reg* %13648, i32 0, i32 0
  %RCX.i535 = bitcast %union.anon* %13649 to i64*
  %13650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13651 = getelementptr inbounds %struct.GPR, %struct.GPR* %13650, i32 0, i32 15
  %13652 = getelementptr inbounds %struct.Reg, %struct.Reg* %13651, i32 0, i32 0
  %RBP.i536 = bitcast %union.anon* %13652 to i64*
  %13653 = load i64, i64* %RBP.i536
  %13654 = sub i64 %13653, 4
  %13655 = load i64, i64* %PC.i534
  %13656 = add i64 %13655, 4
  store i64 %13656, i64* %PC.i534
  %13657 = inttoptr i64 %13654 to i32*
  %13658 = load i32, i32* %13657
  %13659 = sext i32 %13658 to i64
  store i64 %13659, i64* %RCX.i535, align 8
  store %struct.Memory* %loadMem_40140f, %struct.Memory** %MEMORY
  %loadMem_401413 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13661 = getelementptr inbounds %struct.GPR, %struct.GPR* %13660, i32 0, i32 33
  %13662 = getelementptr inbounds %struct.Reg, %struct.Reg* %13661, i32 0, i32 0
  %PC.i530 = bitcast %union.anon* %13662 to i64*
  %13663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13664 = getelementptr inbounds %struct.GPR, %struct.GPR* %13663, i32 0, i32 5
  %13665 = getelementptr inbounds %struct.Reg, %struct.Reg* %13664, i32 0, i32 0
  %RCX.i531 = bitcast %union.anon* %13665 to i64*
  %13666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13667 = getelementptr inbounds %struct.GPR, %struct.GPR* %13666, i32 0, i32 7
  %13668 = getelementptr inbounds %struct.Reg, %struct.Reg* %13667, i32 0, i32 0
  %RDX.i532 = bitcast %union.anon* %13668 to i64*
  %13669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13670 = getelementptr inbounds %struct.GPR, %struct.GPR* %13669, i32 0, i32 15
  %13671 = getelementptr inbounds %struct.Reg, %struct.Reg* %13670, i32 0, i32 0
  %RBP.i533 = bitcast %union.anon* %13671 to i64*
  %13672 = load i64, i64* %RDX.i532
  %13673 = load i64, i64* %RBP.i533
  %13674 = load i64, i64* %RCX.i531
  %13675 = mul i64 %13674, 4
  %13676 = add i64 %13673, -1616
  %13677 = add i64 %13676, %13675
  %13678 = load i64, i64* %PC.i530
  %13679 = add i64 %13678, 7
  store i64 %13679, i64* %PC.i530
  %13680 = trunc i64 %13672 to i32
  %13681 = inttoptr i64 %13677 to i32*
  %13682 = load i32, i32* %13681
  %13683 = xor i32 %13682, %13680
  %13684 = zext i32 %13683 to i64
  store i64 %13684, i64* %RDX.i532, align 8
  %13685 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13685, align 1
  %13686 = and i32 %13683, 255
  %13687 = call i32 @llvm.ctpop.i32(i32 %13686)
  %13688 = trunc i32 %13687 to i8
  %13689 = and i8 %13688, 1
  %13690 = xor i8 %13689, 1
  %13691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13690, i8* %13691, align 1
  %13692 = icmp eq i32 %13683, 0
  %13693 = zext i1 %13692 to i8
  %13694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13693, i8* %13694, align 1
  %13695 = lshr i32 %13683, 31
  %13696 = trunc i32 %13695 to i8
  %13697 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13696, i8* %13697, align 1
  %13698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %13698, align 1
  %13699 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13699, align 1
  store %struct.Memory* %loadMem_401413, %struct.Memory** %MEMORY
  %loadMem_40141a = load %struct.Memory*, %struct.Memory** %MEMORY
  %13700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13701 = getelementptr inbounds %struct.GPR, %struct.GPR* %13700, i32 0, i32 33
  %13702 = getelementptr inbounds %struct.Reg, %struct.Reg* %13701, i32 0, i32 0
  %PC.i526 = bitcast %union.anon* %13702 to i64*
  %13703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13704 = getelementptr inbounds %struct.GPR, %struct.GPR* %13703, i32 0, i32 7
  %13705 = getelementptr inbounds %struct.Reg, %struct.Reg* %13704, i32 0, i32 0
  %EDX.i527 = bitcast %union.anon* %13705 to i32*
  %13706 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13707 = getelementptr inbounds %struct.GPR, %struct.GPR* %13706, i32 0, i32 5
  %13708 = getelementptr inbounds %struct.Reg, %struct.Reg* %13707, i32 0, i32 0
  %RCX.i528 = bitcast %union.anon* %13708 to i64*
  %13709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13710 = getelementptr inbounds %struct.GPR, %struct.GPR* %13709, i32 0, i32 15
  %13711 = getelementptr inbounds %struct.Reg, %struct.Reg* %13710, i32 0, i32 0
  %RBP.i529 = bitcast %union.anon* %13711 to i64*
  %13712 = load i64, i64* %RBP.i529
  %13713 = load i64, i64* %RCX.i528
  %13714 = mul i64 %13713, 4
  %13715 = add i64 %13712, -1616
  %13716 = add i64 %13715, %13714
  %13717 = load i32, i32* %EDX.i527
  %13718 = zext i32 %13717 to i64
  %13719 = load i64, i64* %PC.i526
  %13720 = add i64 %13719, 7
  store i64 %13720, i64* %PC.i526
  %13721 = inttoptr i64 %13716 to i32*
  store i32 %13717, i32* %13721
  store %struct.Memory* %loadMem_40141a, %struct.Memory** %MEMORY
  br label %block_.L_401421

block_.L_401421:                                  ; preds = %routine_idivl__esi.exit545, %block_4013a1, %block_40138f
  %loadMem_401421 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13723 = getelementptr inbounds %struct.GPR, %struct.GPR* %13722, i32 0, i32 33
  %13724 = getelementptr inbounds %struct.Reg, %struct.Reg* %13723, i32 0, i32 0
  %PC.i525 = bitcast %union.anon* %13724 to i64*
  %13725 = load i64, i64* %PC.i525
  %13726 = add i64 %13725, 5
  %13727 = load i64, i64* %PC.i525
  %13728 = add i64 %13727, 5
  store i64 %13728, i64* %PC.i525
  %13729 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13726, i64* %13729, align 8
  store %struct.Memory* %loadMem_401421, %struct.Memory** %MEMORY
  br label %block_.L_401426

block_.L_401426:                                  ; preds = %block_.L_401421
  %loadMem_401426 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13731 = getelementptr inbounds %struct.GPR, %struct.GPR* %13730, i32 0, i32 33
  %13732 = getelementptr inbounds %struct.Reg, %struct.Reg* %13731, i32 0, i32 0
  %PC.i522 = bitcast %union.anon* %13732 to i64*
  %13733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13734 = getelementptr inbounds %struct.GPR, %struct.GPR* %13733, i32 0, i32 1
  %13735 = getelementptr inbounds %struct.Reg, %struct.Reg* %13734, i32 0, i32 0
  %RAX.i523 = bitcast %union.anon* %13735 to i64*
  %13736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13737 = getelementptr inbounds %struct.GPR, %struct.GPR* %13736, i32 0, i32 15
  %13738 = getelementptr inbounds %struct.Reg, %struct.Reg* %13737, i32 0, i32 0
  %RBP.i524 = bitcast %union.anon* %13738 to i64*
  %13739 = load i64, i64* %RBP.i524
  %13740 = sub i64 %13739, 8
  %13741 = load i64, i64* %PC.i522
  %13742 = add i64 %13741, 3
  store i64 %13742, i64* %PC.i522
  %13743 = inttoptr i64 %13740 to i32*
  %13744 = load i32, i32* %13743
  %13745 = zext i32 %13744 to i64
  store i64 %13745, i64* %RAX.i523, align 8
  store %struct.Memory* %loadMem_401426, %struct.Memory** %MEMORY
  %loadMem_401429 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13747 = getelementptr inbounds %struct.GPR, %struct.GPR* %13746, i32 0, i32 33
  %13748 = getelementptr inbounds %struct.Reg, %struct.Reg* %13747, i32 0, i32 0
  %PC.i520 = bitcast %union.anon* %13748 to i64*
  %13749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13750 = getelementptr inbounds %struct.GPR, %struct.GPR* %13749, i32 0, i32 1
  %13751 = getelementptr inbounds %struct.Reg, %struct.Reg* %13750, i32 0, i32 0
  %RAX.i521 = bitcast %union.anon* %13751 to i64*
  %13752 = load i64, i64* %RAX.i521
  %13753 = load i64, i64* %PC.i520
  %13754 = add i64 %13753, 3
  store i64 %13754, i64* %PC.i520
  %13755 = trunc i64 %13752 to i32
  %13756 = add i32 1, %13755
  %13757 = zext i32 %13756 to i64
  store i64 %13757, i64* %RAX.i521, align 8
  %13758 = icmp ult i32 %13756, %13755
  %13759 = icmp ult i32 %13756, 1
  %13760 = or i1 %13758, %13759
  %13761 = zext i1 %13760 to i8
  %13762 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13761, i8* %13762, align 1
  %13763 = and i32 %13756, 255
  %13764 = call i32 @llvm.ctpop.i32(i32 %13763)
  %13765 = trunc i32 %13764 to i8
  %13766 = and i8 %13765, 1
  %13767 = xor i8 %13766, 1
  %13768 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13767, i8* %13768, align 1
  %13769 = xor i64 1, %13752
  %13770 = trunc i64 %13769 to i32
  %13771 = xor i32 %13770, %13756
  %13772 = lshr i32 %13771, 4
  %13773 = trunc i32 %13772 to i8
  %13774 = and i8 %13773, 1
  %13775 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13774, i8* %13775, align 1
  %13776 = icmp eq i32 %13756, 0
  %13777 = zext i1 %13776 to i8
  %13778 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13777, i8* %13778, align 1
  %13779 = lshr i32 %13756, 31
  %13780 = trunc i32 %13779 to i8
  %13781 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13780, i8* %13781, align 1
  %13782 = lshr i32 %13755, 31
  %13783 = xor i32 %13779, %13782
  %13784 = add i32 %13783, %13779
  %13785 = icmp eq i32 %13784, 2
  %13786 = zext i1 %13785 to i8
  %13787 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13786, i8* %13787, align 1
  store %struct.Memory* %loadMem_401429, %struct.Memory** %MEMORY
  %loadMem_40142c = load %struct.Memory*, %struct.Memory** %MEMORY
  %13788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13789 = getelementptr inbounds %struct.GPR, %struct.GPR* %13788, i32 0, i32 33
  %13790 = getelementptr inbounds %struct.Reg, %struct.Reg* %13789, i32 0, i32 0
  %PC.i517 = bitcast %union.anon* %13790 to i64*
  %13791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13792 = getelementptr inbounds %struct.GPR, %struct.GPR* %13791, i32 0, i32 1
  %13793 = getelementptr inbounds %struct.Reg, %struct.Reg* %13792, i32 0, i32 0
  %EAX.i518 = bitcast %union.anon* %13793 to i32*
  %13794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13795 = getelementptr inbounds %struct.GPR, %struct.GPR* %13794, i32 0, i32 15
  %13796 = getelementptr inbounds %struct.Reg, %struct.Reg* %13795, i32 0, i32 0
  %RBP.i519 = bitcast %union.anon* %13796 to i64*
  %13797 = load i64, i64* %RBP.i519
  %13798 = sub i64 %13797, 8
  %13799 = load i32, i32* %EAX.i518
  %13800 = zext i32 %13799 to i64
  %13801 = load i64, i64* %PC.i517
  %13802 = add i64 %13801, 3
  store i64 %13802, i64* %PC.i517
  %13803 = inttoptr i64 %13798 to i32*
  store i32 %13799, i32* %13803
  store %struct.Memory* %loadMem_40142c, %struct.Memory** %MEMORY
  %loadMem_40142f = load %struct.Memory*, %struct.Memory** %MEMORY
  %13804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13805 = getelementptr inbounds %struct.GPR, %struct.GPR* %13804, i32 0, i32 33
  %13806 = getelementptr inbounds %struct.Reg, %struct.Reg* %13805, i32 0, i32 0
  %PC.i516 = bitcast %union.anon* %13806 to i64*
  %13807 = load i64, i64* %PC.i516
  %13808 = add i64 %13807, -172
  %13809 = load i64, i64* %PC.i516
  %13810 = add i64 %13809, 5
  store i64 %13810, i64* %PC.i516
  %13811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13808, i64* %13811, align 8
  store %struct.Memory* %loadMem_40142f, %struct.Memory** %MEMORY
  br label %block_.L_401383

block_.L_401434:                                  ; preds = %block_.L_401383
  %loadMem_401434 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13813 = getelementptr inbounds %struct.GPR, %struct.GPR* %13812, i32 0, i32 33
  %13814 = getelementptr inbounds %struct.Reg, %struct.Reg* %13813, i32 0, i32 0
  %PC.i513 = bitcast %union.anon* %13814 to i64*
  %13815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13816 = getelementptr inbounds %struct.GPR, %struct.GPR* %13815, i32 0, i32 1
  %13817 = getelementptr inbounds %struct.Reg, %struct.Reg* %13816, i32 0, i32 0
  %RAX.i514 = bitcast %union.anon* %13817 to i64*
  %13818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13819 = getelementptr inbounds %struct.GPR, %struct.GPR* %13818, i32 0, i32 15
  %13820 = getelementptr inbounds %struct.Reg, %struct.Reg* %13819, i32 0, i32 0
  %RBP.i515 = bitcast %union.anon* %13820 to i64*
  %13821 = load i64, i64* %RBP.i515
  %13822 = sub i64 %13821, 4
  %13823 = load i64, i64* %PC.i513
  %13824 = add i64 %13823, 4
  store i64 %13824, i64* %PC.i513
  %13825 = inttoptr i64 %13822 to i32*
  %13826 = load i32, i32* %13825
  %13827 = sext i32 %13826 to i64
  store i64 %13827, i64* %RAX.i514, align 8
  store %struct.Memory* %loadMem_401434, %struct.Memory** %MEMORY
  %loadMem_401438 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13829 = getelementptr inbounds %struct.GPR, %struct.GPR* %13828, i32 0, i32 33
  %13830 = getelementptr inbounds %struct.Reg, %struct.Reg* %13829, i32 0, i32 0
  %PC.i510 = bitcast %union.anon* %13830 to i64*
  %13831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13832 = getelementptr inbounds %struct.GPR, %struct.GPR* %13831, i32 0, i32 1
  %13833 = getelementptr inbounds %struct.Reg, %struct.Reg* %13832, i32 0, i32 0
  %RAX.i511 = bitcast %union.anon* %13833 to i64*
  %13834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13835 = getelementptr inbounds %struct.GPR, %struct.GPR* %13834, i32 0, i32 15
  %13836 = getelementptr inbounds %struct.Reg, %struct.Reg* %13835, i32 0, i32 0
  %RBP.i512 = bitcast %union.anon* %13836 to i64*
  %13837 = load i64, i64* %RBP.i512
  %13838 = load i64, i64* %RAX.i511
  %13839 = mul i64 %13838, 4
  %13840 = add i64 %13837, -1616
  %13841 = add i64 %13840, %13839
  %13842 = load i64, i64* %PC.i510
  %13843 = add i64 %13842, 8
  store i64 %13843, i64* %PC.i510
  %13844 = inttoptr i64 %13841 to i32*
  %13845 = load i32, i32* %13844
  %13846 = sext i32 %13845 to i64
  store i64 %13846, i64* %RAX.i511, align 8
  store %struct.Memory* %loadMem_401438, %struct.Memory** %MEMORY
  %loadMem_401440 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13848 = getelementptr inbounds %struct.GPR, %struct.GPR* %13847, i32 0, i32 33
  %13849 = getelementptr inbounds %struct.Reg, %struct.Reg* %13848, i32 0, i32 0
  %PC.i507 = bitcast %union.anon* %13849 to i64*
  %13850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13851 = getelementptr inbounds %struct.GPR, %struct.GPR* %13850, i32 0, i32 1
  %13852 = getelementptr inbounds %struct.Reg, %struct.Reg* %13851, i32 0, i32 0
  %RAX.i508 = bitcast %union.anon* %13852 to i64*
  %13853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13854 = getelementptr inbounds %struct.GPR, %struct.GPR* %13853, i32 0, i32 5
  %13855 = getelementptr inbounds %struct.Reg, %struct.Reg* %13854, i32 0, i32 0
  %RCX.i509 = bitcast %union.anon* %13855 to i64*
  %13856 = load i64, i64* %RAX.i508
  %13857 = mul i64 %13856, 4
  %13858 = add i64 %13857, 6304896
  %13859 = load i64, i64* %PC.i507
  %13860 = add i64 %13859, 7
  store i64 %13860, i64* %PC.i507
  %13861 = inttoptr i64 %13858 to i32*
  %13862 = load i32, i32* %13861
  %13863 = zext i32 %13862 to i64
  store i64 %13863, i64* %RCX.i509, align 8
  store %struct.Memory* %loadMem_401440, %struct.Memory** %MEMORY
  %loadMem_401447 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13865 = getelementptr inbounds %struct.GPR, %struct.GPR* %13864, i32 0, i32 33
  %13866 = getelementptr inbounds %struct.Reg, %struct.Reg* %13865, i32 0, i32 0
  %PC.i504 = bitcast %union.anon* %13866 to i64*
  %13867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13868 = getelementptr inbounds %struct.GPR, %struct.GPR* %13867, i32 0, i32 1
  %13869 = getelementptr inbounds %struct.Reg, %struct.Reg* %13868, i32 0, i32 0
  %RAX.i505 = bitcast %union.anon* %13869 to i64*
  %13870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13871 = getelementptr inbounds %struct.GPR, %struct.GPR* %13870, i32 0, i32 15
  %13872 = getelementptr inbounds %struct.Reg, %struct.Reg* %13871, i32 0, i32 0
  %RBP.i506 = bitcast %union.anon* %13872 to i64*
  %13873 = load i64, i64* %RBP.i506
  %13874 = sub i64 %13873, 4
  %13875 = load i64, i64* %PC.i504
  %13876 = add i64 %13875, 4
  store i64 %13876, i64* %PC.i504
  %13877 = inttoptr i64 %13874 to i32*
  %13878 = load i32, i32* %13877
  %13879 = sext i32 %13878 to i64
  store i64 %13879, i64* %RAX.i505, align 8
  store %struct.Memory* %loadMem_401447, %struct.Memory** %MEMORY
  %loadMem_40144b = load %struct.Memory*, %struct.Memory** %MEMORY
  %13880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13881 = getelementptr inbounds %struct.GPR, %struct.GPR* %13880, i32 0, i32 33
  %13882 = getelementptr inbounds %struct.Reg, %struct.Reg* %13881, i32 0, i32 0
  %PC.i500 = bitcast %union.anon* %13882 to i64*
  %13883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13884 = getelementptr inbounds %struct.GPR, %struct.GPR* %13883, i32 0, i32 5
  %13885 = getelementptr inbounds %struct.Reg, %struct.Reg* %13884, i32 0, i32 0
  %ECX.i501 = bitcast %union.anon* %13885 to i32*
  %13886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13887 = getelementptr inbounds %struct.GPR, %struct.GPR* %13886, i32 0, i32 1
  %13888 = getelementptr inbounds %struct.Reg, %struct.Reg* %13887, i32 0, i32 0
  %RAX.i502 = bitcast %union.anon* %13888 to i64*
  %13889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13890 = getelementptr inbounds %struct.GPR, %struct.GPR* %13889, i32 0, i32 15
  %13891 = getelementptr inbounds %struct.Reg, %struct.Reg* %13890, i32 0, i32 0
  %RBP.i503 = bitcast %union.anon* %13891 to i64*
  %13892 = load i64, i64* %RBP.i503
  %13893 = load i64, i64* %RAX.i502
  %13894 = mul i64 %13893, 4
  %13895 = add i64 %13892, -1616
  %13896 = add i64 %13895, %13894
  %13897 = load i32, i32* %ECX.i501
  %13898 = zext i32 %13897 to i64
  %13899 = load i64, i64* %PC.i500
  %13900 = add i64 %13899, 7
  store i64 %13900, i64* %PC.i500
  %13901 = inttoptr i64 %13896 to i32*
  store i32 %13897, i32* %13901
  store %struct.Memory* %loadMem_40144b, %struct.Memory** %MEMORY
  %loadMem_401452 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13903 = getelementptr inbounds %struct.GPR, %struct.GPR* %13902, i32 0, i32 33
  %13904 = getelementptr inbounds %struct.Reg, %struct.Reg* %13903, i32 0, i32 0
  %PC.i497 = bitcast %union.anon* %13904 to i64*
  %13905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13906 = getelementptr inbounds %struct.GPR, %struct.GPR* %13905, i32 0, i32 1
  %13907 = getelementptr inbounds %struct.Reg, %struct.Reg* %13906, i32 0, i32 0
  %RAX.i498 = bitcast %union.anon* %13907 to i64*
  %13908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13909 = getelementptr inbounds %struct.GPR, %struct.GPR* %13908, i32 0, i32 15
  %13910 = getelementptr inbounds %struct.Reg, %struct.Reg* %13909, i32 0, i32 0
  %RBP.i499 = bitcast %union.anon* %13910 to i64*
  %13911 = load i64, i64* %RBP.i499
  %13912 = sub i64 %13911, 4
  %13913 = load i64, i64* %PC.i497
  %13914 = add i64 %13913, 3
  store i64 %13914, i64* %PC.i497
  %13915 = inttoptr i64 %13912 to i32*
  %13916 = load i32, i32* %13915
  %13917 = zext i32 %13916 to i64
  store i64 %13917, i64* %RAX.i498, align 8
  store %struct.Memory* %loadMem_401452, %struct.Memory** %MEMORY
  %loadMem_401455 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13919 = getelementptr inbounds %struct.GPR, %struct.GPR* %13918, i32 0, i32 33
  %13920 = getelementptr inbounds %struct.Reg, %struct.Reg* %13919, i32 0, i32 0
  %PC.i495 = bitcast %union.anon* %13920 to i64*
  %13921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13922 = getelementptr inbounds %struct.GPR, %struct.GPR* %13921, i32 0, i32 1
  %13923 = getelementptr inbounds %struct.Reg, %struct.Reg* %13922, i32 0, i32 0
  %RAX.i496 = bitcast %union.anon* %13923 to i64*
  %13924 = load i64, i64* %RAX.i496
  %13925 = load i64, i64* %PC.i495
  %13926 = add i64 %13925, 3
  store i64 %13926, i64* %PC.i495
  %13927 = trunc i64 %13924 to i32
  %13928 = add i32 1, %13927
  %13929 = zext i32 %13928 to i64
  store i64 %13929, i64* %RAX.i496, align 8
  %13930 = icmp ult i32 %13928, %13927
  %13931 = icmp ult i32 %13928, 1
  %13932 = or i1 %13930, %13931
  %13933 = zext i1 %13932 to i8
  %13934 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13933, i8* %13934, align 1
  %13935 = and i32 %13928, 255
  %13936 = call i32 @llvm.ctpop.i32(i32 %13935)
  %13937 = trunc i32 %13936 to i8
  %13938 = and i8 %13937, 1
  %13939 = xor i8 %13938, 1
  %13940 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13939, i8* %13940, align 1
  %13941 = xor i64 1, %13924
  %13942 = trunc i64 %13941 to i32
  %13943 = xor i32 %13942, %13928
  %13944 = lshr i32 %13943, 4
  %13945 = trunc i32 %13944 to i8
  %13946 = and i8 %13945, 1
  %13947 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13946, i8* %13947, align 1
  %13948 = icmp eq i32 %13928, 0
  %13949 = zext i1 %13948 to i8
  %13950 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13949, i8* %13950, align 1
  %13951 = lshr i32 %13928, 31
  %13952 = trunc i32 %13951 to i8
  %13953 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13952, i8* %13953, align 1
  %13954 = lshr i32 %13927, 31
  %13955 = xor i32 %13951, %13954
  %13956 = add i32 %13955, %13951
  %13957 = icmp eq i32 %13956, 2
  %13958 = zext i1 %13957 to i8
  %13959 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13958, i8* %13959, align 1
  store %struct.Memory* %loadMem_401455, %struct.Memory** %MEMORY
  %loadMem_401458 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13961 = getelementptr inbounds %struct.GPR, %struct.GPR* %13960, i32 0, i32 33
  %13962 = getelementptr inbounds %struct.Reg, %struct.Reg* %13961, i32 0, i32 0
  %PC.i492 = bitcast %union.anon* %13962 to i64*
  %13963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13964 = getelementptr inbounds %struct.GPR, %struct.GPR* %13963, i32 0, i32 1
  %13965 = getelementptr inbounds %struct.Reg, %struct.Reg* %13964, i32 0, i32 0
  %EAX.i493 = bitcast %union.anon* %13965 to i32*
  %13966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13967 = getelementptr inbounds %struct.GPR, %struct.GPR* %13966, i32 0, i32 15
  %13968 = getelementptr inbounds %struct.Reg, %struct.Reg* %13967, i32 0, i32 0
  %RBP.i494 = bitcast %union.anon* %13968 to i64*
  %13969 = load i64, i64* %RBP.i494
  %13970 = sub i64 %13969, 4
  %13971 = load i32, i32* %EAX.i493
  %13972 = zext i32 %13971 to i64
  %13973 = load i64, i64* %PC.i492
  %13974 = add i64 %13973, 3
  store i64 %13974, i64* %PC.i492
  %13975 = inttoptr i64 %13970 to i32*
  store i32 %13971, i32* %13975
  store %struct.Memory* %loadMem_401458, %struct.Memory** %MEMORY
  %loadMem_40145b = load %struct.Memory*, %struct.Memory** %MEMORY
  %13976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13977 = getelementptr inbounds %struct.GPR, %struct.GPR* %13976, i32 0, i32 33
  %13978 = getelementptr inbounds %struct.Reg, %struct.Reg* %13977, i32 0, i32 0
  %PC.i491 = bitcast %union.anon* %13978 to i64*
  %13979 = load i64, i64* %PC.i491
  %13980 = add i64 %13979, -570
  %13981 = load i64, i64* %PC.i491
  %13982 = add i64 %13981, 5
  store i64 %13982, i64* %PC.i491
  %13983 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13980, i64* %13983, align 8
  store %struct.Memory* %loadMem_40145b, %struct.Memory** %MEMORY
  br label %block_.L_401221

block_.L_401460:                                  ; preds = %block_.L_401221
  %loadMem_401460 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13985 = getelementptr inbounds %struct.GPR, %struct.GPR* %13984, i32 0, i32 33
  %13986 = getelementptr inbounds %struct.Reg, %struct.Reg* %13985, i32 0, i32 0
  %PC.i489 = bitcast %union.anon* %13986 to i64*
  %13987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13988 = getelementptr inbounds %struct.GPR, %struct.GPR* %13987, i32 0, i32 15
  %13989 = getelementptr inbounds %struct.Reg, %struct.Reg* %13988, i32 0, i32 0
  %RBP.i490 = bitcast %union.anon* %13989 to i64*
  %13990 = load i64, i64* %RBP.i490
  %13991 = sub i64 %13990, 4
  %13992 = load i64, i64* %PC.i489
  %13993 = add i64 %13992, 7
  store i64 %13993, i64* %PC.i489
  %13994 = inttoptr i64 %13991 to i32*
  store i32 0, i32* %13994
  store %struct.Memory* %loadMem_401460, %struct.Memory** %MEMORY
  br label %block_.L_401467

block_.L_401467:                                  ; preds = %block_.L_4014cc, %block_.L_401460
  %loadMem_401467 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13996 = getelementptr inbounds %struct.GPR, %struct.GPR* %13995, i32 0, i32 33
  %13997 = getelementptr inbounds %struct.Reg, %struct.Reg* %13996, i32 0, i32 0
  %PC.i487 = bitcast %union.anon* %13997 to i64*
  %13998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13999 = getelementptr inbounds %struct.GPR, %struct.GPR* %13998, i32 0, i32 15
  %14000 = getelementptr inbounds %struct.Reg, %struct.Reg* %13999, i32 0, i32 0
  %RBP.i488 = bitcast %union.anon* %14000 to i64*
  %14001 = load i64, i64* %RBP.i488
  %14002 = sub i64 %14001, 4
  %14003 = load i64, i64* %PC.i487
  %14004 = add i64 %14003, 7
  store i64 %14004, i64* %PC.i487
  %14005 = inttoptr i64 %14002 to i32*
  %14006 = load i32, i32* %14005
  %14007 = sub i32 %14006, 255
  %14008 = icmp ult i32 %14006, 255
  %14009 = zext i1 %14008 to i8
  %14010 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14009, i8* %14010, align 1
  %14011 = and i32 %14007, 255
  %14012 = call i32 @llvm.ctpop.i32(i32 %14011)
  %14013 = trunc i32 %14012 to i8
  %14014 = and i8 %14013, 1
  %14015 = xor i8 %14014, 1
  %14016 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14015, i8* %14016, align 1
  %14017 = xor i32 %14006, 255
  %14018 = xor i32 %14017, %14007
  %14019 = lshr i32 %14018, 4
  %14020 = trunc i32 %14019 to i8
  %14021 = and i8 %14020, 1
  %14022 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14021, i8* %14022, align 1
  %14023 = icmp eq i32 %14007, 0
  %14024 = zext i1 %14023 to i8
  %14025 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14024, i8* %14025, align 1
  %14026 = lshr i32 %14007, 31
  %14027 = trunc i32 %14026 to i8
  %14028 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14027, i8* %14028, align 1
  %14029 = lshr i32 %14006, 31
  %14030 = xor i32 %14026, %14029
  %14031 = add i32 %14030, %14029
  %14032 = icmp eq i32 %14031, 2
  %14033 = zext i1 %14032 to i8
  %14034 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14033, i8* %14034, align 1
  store %struct.Memory* %loadMem_401467, %struct.Memory** %MEMORY
  %loadMem_40146e = load %struct.Memory*, %struct.Memory** %MEMORY
  %14035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14036 = getelementptr inbounds %struct.GPR, %struct.GPR* %14035, i32 0, i32 33
  %14037 = getelementptr inbounds %struct.Reg, %struct.Reg* %14036, i32 0, i32 0
  %PC.i486 = bitcast %union.anon* %14037 to i64*
  %14038 = load i64, i64* %PC.i486
  %14039 = add i64 %14038, 108
  %14040 = load i64, i64* %PC.i486
  %14041 = add i64 %14040, 6
  %14042 = load i64, i64* %PC.i486
  %14043 = add i64 %14042, 6
  store i64 %14043, i64* %PC.i486
  %14044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %14045 = load i8, i8* %14044, align 1
  %14046 = icmp ne i8 %14045, 0
  %14047 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %14048 = load i8, i8* %14047, align 1
  %14049 = icmp ne i8 %14048, 0
  %14050 = xor i1 %14046, %14049
  %14051 = xor i1 %14050, true
  %14052 = zext i1 %14051 to i8
  store i8 %14052, i8* %BRANCH_TAKEN, align 1
  %14053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %14054 = select i1 %14050, i64 %14041, i64 %14039
  store i64 %14054, i64* %14053, align 8
  store %struct.Memory* %loadMem_40146e, %struct.Memory** %MEMORY
  %loadBr_40146e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40146e = icmp eq i8 %loadBr_40146e, 1
  br i1 %cmpBr_40146e, label %block_.L_4014da, label %block_401474

block_401474:                                     ; preds = %block_.L_401467
  %loadMem_401474 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14055 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14056 = getelementptr inbounds %struct.GPR, %struct.GPR* %14055, i32 0, i32 33
  %14057 = getelementptr inbounds %struct.Reg, %struct.Reg* %14056, i32 0, i32 0
  %PC.i483 = bitcast %union.anon* %14057 to i64*
  %14058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14059 = getelementptr inbounds %struct.GPR, %struct.GPR* %14058, i32 0, i32 1
  %14060 = getelementptr inbounds %struct.Reg, %struct.Reg* %14059, i32 0, i32 0
  %RAX.i484 = bitcast %union.anon* %14060 to i64*
  %14061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14062 = getelementptr inbounds %struct.GPR, %struct.GPR* %14061, i32 0, i32 15
  %14063 = getelementptr inbounds %struct.Reg, %struct.Reg* %14062, i32 0, i32 0
  %RBP.i485 = bitcast %union.anon* %14063 to i64*
  %14064 = load i64, i64* %RBP.i485
  %14065 = sub i64 %14064, 4
  %14066 = load i64, i64* %PC.i483
  %14067 = add i64 %14066, 4
  store i64 %14067, i64* %PC.i483
  %14068 = inttoptr i64 %14065 to i32*
  %14069 = load i32, i32* %14068
  %14070 = sext i32 %14069 to i64
  store i64 %14070, i64* %RAX.i484, align 8
  store %struct.Memory* %loadMem_401474, %struct.Memory** %MEMORY
  %loadMem_401478 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14071 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14072 = getelementptr inbounds %struct.GPR, %struct.GPR* %14071, i32 0, i32 33
  %14073 = getelementptr inbounds %struct.Reg, %struct.Reg* %14072, i32 0, i32 0
  %PC.i480 = bitcast %union.anon* %14073 to i64*
  %14074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14075 = getelementptr inbounds %struct.GPR, %struct.GPR* %14074, i32 0, i32 1
  %14076 = getelementptr inbounds %struct.Reg, %struct.Reg* %14075, i32 0, i32 0
  %RAX.i481 = bitcast %union.anon* %14076 to i64*
  %14077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14078 = getelementptr inbounds %struct.GPR, %struct.GPR* %14077, i32 0, i32 15
  %14079 = getelementptr inbounds %struct.Reg, %struct.Reg* %14078, i32 0, i32 0
  %RBP.i482 = bitcast %union.anon* %14079 to i64*
  %14080 = load i64, i64* %RBP.i482
  %14081 = load i64, i64* %RAX.i481
  %14082 = mul i64 %14081, 4
  %14083 = add i64 %14080, -2640
  %14084 = add i64 %14083, %14082
  %14085 = load i64, i64* %PC.i480
  %14086 = add i64 %14085, 11
  store i64 %14086, i64* %PC.i480
  %14087 = inttoptr i64 %14084 to i32*
  store i32 0, i32* %14087
  store %struct.Memory* %loadMem_401478, %struct.Memory** %MEMORY
  %loadMem_401483 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14089 = getelementptr inbounds %struct.GPR, %struct.GPR* %14088, i32 0, i32 33
  %14090 = getelementptr inbounds %struct.Reg, %struct.Reg* %14089, i32 0, i32 0
  %PC.i477 = bitcast %union.anon* %14090 to i64*
  %14091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14092 = getelementptr inbounds %struct.GPR, %struct.GPR* %14091, i32 0, i32 1
  %14093 = getelementptr inbounds %struct.Reg, %struct.Reg* %14092, i32 0, i32 0
  %RAX.i478 = bitcast %union.anon* %14093 to i64*
  %14094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14095 = getelementptr inbounds %struct.GPR, %struct.GPR* %14094, i32 0, i32 15
  %14096 = getelementptr inbounds %struct.Reg, %struct.Reg* %14095, i32 0, i32 0
  %RBP.i479 = bitcast %union.anon* %14096 to i64*
  %14097 = load i64, i64* %RBP.i479
  %14098 = sub i64 %14097, 4
  %14099 = load i64, i64* %PC.i477
  %14100 = add i64 %14099, 4
  store i64 %14100, i64* %PC.i477
  %14101 = inttoptr i64 %14098 to i32*
  %14102 = load i32, i32* %14101
  %14103 = sext i32 %14102 to i64
  store i64 %14103, i64* %RAX.i478, align 8
  store %struct.Memory* %loadMem_401483, %struct.Memory** %MEMORY
  %loadMem_401487 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14105 = getelementptr inbounds %struct.GPR, %struct.GPR* %14104, i32 0, i32 33
  %14106 = getelementptr inbounds %struct.Reg, %struct.Reg* %14105, i32 0, i32 0
  %PC.i475 = bitcast %union.anon* %14106 to i64*
  %14107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14108 = getelementptr inbounds %struct.GPR, %struct.GPR* %14107, i32 0, i32 1
  %14109 = getelementptr inbounds %struct.Reg, %struct.Reg* %14108, i32 0, i32 0
  %RAX.i476 = bitcast %union.anon* %14109 to i64*
  %14110 = load i64, i64* %RAX.i476
  %14111 = mul i64 %14110, 4
  %14112 = add i64 %14111, 6303872
  %14113 = load i64, i64* %PC.i475
  %14114 = add i64 %14113, 8
  store i64 %14114, i64* %PC.i475
  %14115 = inttoptr i64 %14112 to i32*
  %14116 = load i32, i32* %14115
  %14117 = sub i32 %14116, -1
  %14118 = icmp ult i32 %14116, -1
  %14119 = zext i1 %14118 to i8
  %14120 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14119, i8* %14120, align 1
  %14121 = and i32 %14117, 255
  %14122 = call i32 @llvm.ctpop.i32(i32 %14121)
  %14123 = trunc i32 %14122 to i8
  %14124 = and i8 %14123, 1
  %14125 = xor i8 %14124, 1
  %14126 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14125, i8* %14126, align 1
  %14127 = xor i32 %14116, -1
  %14128 = xor i32 %14127, %14117
  %14129 = lshr i32 %14128, 4
  %14130 = trunc i32 %14129 to i8
  %14131 = and i8 %14130, 1
  %14132 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14131, i8* %14132, align 1
  %14133 = icmp eq i32 %14117, 0
  %14134 = zext i1 %14133 to i8
  %14135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14134, i8* %14135, align 1
  %14136 = lshr i32 %14117, 31
  %14137 = trunc i32 %14136 to i8
  %14138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14137, i8* %14138, align 1
  %14139 = lshr i32 %14116, 31
  %14140 = xor i32 %14139, 1
  %14141 = xor i32 %14136, %14139
  %14142 = add i32 %14141, %14140
  %14143 = icmp eq i32 %14142, 2
  %14144 = zext i1 %14143 to i8
  %14145 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14144, i8* %14145, align 1
  store %struct.Memory* %loadMem_401487, %struct.Memory** %MEMORY
  %loadMem_40148f = load %struct.Memory*, %struct.Memory** %MEMORY
  %14146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14147 = getelementptr inbounds %struct.GPR, %struct.GPR* %14146, i32 0, i32 33
  %14148 = getelementptr inbounds %struct.Reg, %struct.Reg* %14147, i32 0, i32 0
  %PC.i474 = bitcast %union.anon* %14148 to i64*
  %14149 = load i64, i64* %PC.i474
  %14150 = add i64 %14149, 41
  %14151 = load i64, i64* %PC.i474
  %14152 = add i64 %14151, 6
  %14153 = load i64, i64* %PC.i474
  %14154 = add i64 %14153, 6
  store i64 %14154, i64* %PC.i474
  %14155 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %14156 = load i8, i8* %14155, align 1
  store i8 %14156, i8* %BRANCH_TAKEN, align 1
  %14157 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %14158 = icmp ne i8 %14156, 0
  %14159 = select i1 %14158, i64 %14150, i64 %14152
  store i64 %14159, i64* %14157, align 8
  store %struct.Memory* %loadMem_40148f, %struct.Memory** %MEMORY
  %loadBr_40148f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40148f = icmp eq i8 %loadBr_40148f, 1
  br i1 %cmpBr_40148f, label %block_.L_4014b8, label %block_401495

block_401495:                                     ; preds = %block_401474
  %loadMem_401495 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14161 = getelementptr inbounds %struct.GPR, %struct.GPR* %14160, i32 0, i32 33
  %14162 = getelementptr inbounds %struct.Reg, %struct.Reg* %14161, i32 0, i32 0
  %PC.i471 = bitcast %union.anon* %14162 to i64*
  %14163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14164 = getelementptr inbounds %struct.GPR, %struct.GPR* %14163, i32 0, i32 1
  %14165 = getelementptr inbounds %struct.Reg, %struct.Reg* %14164, i32 0, i32 0
  %RAX.i472 = bitcast %union.anon* %14165 to i64*
  %14166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14167 = getelementptr inbounds %struct.GPR, %struct.GPR* %14166, i32 0, i32 15
  %14168 = getelementptr inbounds %struct.Reg, %struct.Reg* %14167, i32 0, i32 0
  %RBP.i473 = bitcast %union.anon* %14168 to i64*
  %14169 = load i64, i64* %RBP.i473
  %14170 = sub i64 %14169, 4
  %14171 = load i64, i64* %PC.i471
  %14172 = add i64 %14171, 4
  store i64 %14172, i64* %PC.i471
  %14173 = inttoptr i64 %14170 to i32*
  %14174 = load i32, i32* %14173
  %14175 = sext i32 %14174 to i64
  store i64 %14175, i64* %RAX.i472, align 8
  store %struct.Memory* %loadMem_401495, %struct.Memory** %MEMORY
  %loadMem_401499 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14177 = getelementptr inbounds %struct.GPR, %struct.GPR* %14176, i32 0, i32 33
  %14178 = getelementptr inbounds %struct.Reg, %struct.Reg* %14177, i32 0, i32 0
  %PC.i469 = bitcast %union.anon* %14178 to i64*
  %14179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14180 = getelementptr inbounds %struct.GPR, %struct.GPR* %14179, i32 0, i32 1
  %14181 = getelementptr inbounds %struct.Reg, %struct.Reg* %14180, i32 0, i32 0
  %RAX.i470 = bitcast %union.anon* %14181 to i64*
  %14182 = load i64, i64* %RAX.i470
  %14183 = mul i64 %14182, 4
  %14184 = add i64 %14183, 6303872
  %14185 = load i64, i64* %PC.i469
  %14186 = add i64 %14185, 8
  store i64 %14186, i64* %PC.i469
  %14187 = inttoptr i64 %14184 to i32*
  %14188 = load i32, i32* %14187
  %14189 = sext i32 %14188 to i64
  store i64 %14189, i64* %RAX.i470, align 8
  store %struct.Memory* %loadMem_401499, %struct.Memory** %MEMORY
  %loadMem_4014a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14191 = getelementptr inbounds %struct.GPR, %struct.GPR* %14190, i32 0, i32 33
  %14192 = getelementptr inbounds %struct.Reg, %struct.Reg* %14191, i32 0, i32 0
  %PC.i466 = bitcast %union.anon* %14192 to i64*
  %14193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14194 = getelementptr inbounds %struct.GPR, %struct.GPR* %14193, i32 0, i32 1
  %14195 = getelementptr inbounds %struct.Reg, %struct.Reg* %14194, i32 0, i32 0
  %RAX.i467 = bitcast %union.anon* %14195 to i64*
  %14196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14197 = getelementptr inbounds %struct.GPR, %struct.GPR* %14196, i32 0, i32 5
  %14198 = getelementptr inbounds %struct.Reg, %struct.Reg* %14197, i32 0, i32 0
  %RCX.i468 = bitcast %union.anon* %14198 to i64*
  %14199 = load i64, i64* %RAX.i467
  %14200 = mul i64 %14199, 4
  %14201 = add i64 %14200, 6305920
  %14202 = load i64, i64* %PC.i466
  %14203 = add i64 %14202, 7
  store i64 %14203, i64* %PC.i466
  %14204 = inttoptr i64 %14201 to i32*
  %14205 = load i32, i32* %14204
  %14206 = zext i32 %14205 to i64
  store i64 %14206, i64* %RCX.i468, align 8
  store %struct.Memory* %loadMem_4014a1, %struct.Memory** %MEMORY
  %loadMem_4014a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14208 = getelementptr inbounds %struct.GPR, %struct.GPR* %14207, i32 0, i32 33
  %14209 = getelementptr inbounds %struct.Reg, %struct.Reg* %14208, i32 0, i32 0
  %PC.i463 = bitcast %union.anon* %14209 to i64*
  %14210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14211 = getelementptr inbounds %struct.GPR, %struct.GPR* %14210, i32 0, i32 1
  %14212 = getelementptr inbounds %struct.Reg, %struct.Reg* %14211, i32 0, i32 0
  %RAX.i464 = bitcast %union.anon* %14212 to i64*
  %14213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14214 = getelementptr inbounds %struct.GPR, %struct.GPR* %14213, i32 0, i32 15
  %14215 = getelementptr inbounds %struct.Reg, %struct.Reg* %14214, i32 0, i32 0
  %RBP.i465 = bitcast %union.anon* %14215 to i64*
  %14216 = load i64, i64* %RBP.i465
  %14217 = sub i64 %14216, 4
  %14218 = load i64, i64* %PC.i463
  %14219 = add i64 %14218, 4
  store i64 %14219, i64* %PC.i463
  %14220 = inttoptr i64 %14217 to i32*
  %14221 = load i32, i32* %14220
  %14222 = sext i32 %14221 to i64
  store i64 %14222, i64* %RAX.i464, align 8
  store %struct.Memory* %loadMem_4014a8, %struct.Memory** %MEMORY
  %loadMem_4014ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %14223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14224 = getelementptr inbounds %struct.GPR, %struct.GPR* %14223, i32 0, i32 33
  %14225 = getelementptr inbounds %struct.Reg, %struct.Reg* %14224, i32 0, i32 0
  %PC.i460 = bitcast %union.anon* %14225 to i64*
  %14226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14227 = getelementptr inbounds %struct.GPR, %struct.GPR* %14226, i32 0, i32 5
  %14228 = getelementptr inbounds %struct.Reg, %struct.Reg* %14227, i32 0, i32 0
  %ECX.i461 = bitcast %union.anon* %14228 to i32*
  %14229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14230 = getelementptr inbounds %struct.GPR, %struct.GPR* %14229, i32 0, i32 1
  %14231 = getelementptr inbounds %struct.Reg, %struct.Reg* %14230, i32 0, i32 0
  %RAX.i462 = bitcast %union.anon* %14231 to i64*
  %14232 = load i64, i64* %RAX.i462
  %14233 = mul i64 %14232, 4
  %14234 = add i64 %14233, 6303872
  %14235 = load i32, i32* %ECX.i461
  %14236 = zext i32 %14235 to i64
  %14237 = load i64, i64* %PC.i460
  %14238 = add i64 %14237, 7
  store i64 %14238, i64* %PC.i460
  %14239 = inttoptr i64 %14234 to i32*
  store i32 %14235, i32* %14239
  store %struct.Memory* %loadMem_4014ac, %struct.Memory** %MEMORY
  %loadMem_4014b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14241 = getelementptr inbounds %struct.GPR, %struct.GPR* %14240, i32 0, i32 33
  %14242 = getelementptr inbounds %struct.Reg, %struct.Reg* %14241, i32 0, i32 0
  %PC.i459 = bitcast %union.anon* %14242 to i64*
  %14243 = load i64, i64* %PC.i459
  %14244 = add i64 %14243, 20
  %14245 = load i64, i64* %PC.i459
  %14246 = add i64 %14245, 5
  store i64 %14246, i64* %PC.i459
  %14247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %14244, i64* %14247, align 8
  store %struct.Memory* %loadMem_4014b3, %struct.Memory** %MEMORY
  br label %block_.L_4014c7

block_.L_4014b8:                                  ; preds = %block_401474
  %loadMem_4014b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14249 = getelementptr inbounds %struct.GPR, %struct.GPR* %14248, i32 0, i32 33
  %14250 = getelementptr inbounds %struct.Reg, %struct.Reg* %14249, i32 0, i32 0
  %PC.i456 = bitcast %union.anon* %14250 to i64*
  %14251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14252 = getelementptr inbounds %struct.GPR, %struct.GPR* %14251, i32 0, i32 1
  %14253 = getelementptr inbounds %struct.Reg, %struct.Reg* %14252, i32 0, i32 0
  %RAX.i457 = bitcast %union.anon* %14253 to i64*
  %14254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14255 = getelementptr inbounds %struct.GPR, %struct.GPR* %14254, i32 0, i32 15
  %14256 = getelementptr inbounds %struct.Reg, %struct.Reg* %14255, i32 0, i32 0
  %RBP.i458 = bitcast %union.anon* %14256 to i64*
  %14257 = load i64, i64* %RBP.i458
  %14258 = sub i64 %14257, 4
  %14259 = load i64, i64* %PC.i456
  %14260 = add i64 %14259, 4
  store i64 %14260, i64* %PC.i456
  %14261 = inttoptr i64 %14258 to i32*
  %14262 = load i32, i32* %14261
  %14263 = sext i32 %14262 to i64
  store i64 %14263, i64* %RAX.i457, align 8
  store %struct.Memory* %loadMem_4014b8, %struct.Memory** %MEMORY
  %loadMem_4014bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %14264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14265 = getelementptr inbounds %struct.GPR, %struct.GPR* %14264, i32 0, i32 33
  %14266 = getelementptr inbounds %struct.Reg, %struct.Reg* %14265, i32 0, i32 0
  %PC.i454 = bitcast %union.anon* %14266 to i64*
  %14267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14268 = getelementptr inbounds %struct.GPR, %struct.GPR* %14267, i32 0, i32 1
  %14269 = getelementptr inbounds %struct.Reg, %struct.Reg* %14268, i32 0, i32 0
  %RAX.i455 = bitcast %union.anon* %14269 to i64*
  %14270 = load i64, i64* %RAX.i455
  %14271 = mul i64 %14270, 4
  %14272 = add i64 %14271, 6303872
  %14273 = load i64, i64* %PC.i454
  %14274 = add i64 %14273, 11
  store i64 %14274, i64* %PC.i454
  %14275 = inttoptr i64 %14272 to i32*
  store i32 0, i32* %14275
  store %struct.Memory* %loadMem_4014bc, %struct.Memory** %MEMORY
  br label %block_.L_4014c7

block_.L_4014c7:                                  ; preds = %block_.L_4014b8, %block_401495
  %loadMem_4014c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14277 = getelementptr inbounds %struct.GPR, %struct.GPR* %14276, i32 0, i32 33
  %14278 = getelementptr inbounds %struct.Reg, %struct.Reg* %14277, i32 0, i32 0
  %PC.i453 = bitcast %union.anon* %14278 to i64*
  %14279 = load i64, i64* %PC.i453
  %14280 = add i64 %14279, 5
  %14281 = load i64, i64* %PC.i453
  %14282 = add i64 %14281, 5
  store i64 %14282, i64* %PC.i453
  %14283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %14280, i64* %14283, align 8
  store %struct.Memory* %loadMem_4014c7, %struct.Memory** %MEMORY
  br label %block_.L_4014cc

block_.L_4014cc:                                  ; preds = %block_.L_4014c7
  %loadMem_4014cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %14284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14285 = getelementptr inbounds %struct.GPR, %struct.GPR* %14284, i32 0, i32 33
  %14286 = getelementptr inbounds %struct.Reg, %struct.Reg* %14285, i32 0, i32 0
  %PC.i450 = bitcast %union.anon* %14286 to i64*
  %14287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14288 = getelementptr inbounds %struct.GPR, %struct.GPR* %14287, i32 0, i32 1
  %14289 = getelementptr inbounds %struct.Reg, %struct.Reg* %14288, i32 0, i32 0
  %RAX.i451 = bitcast %union.anon* %14289 to i64*
  %14290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14291 = getelementptr inbounds %struct.GPR, %struct.GPR* %14290, i32 0, i32 15
  %14292 = getelementptr inbounds %struct.Reg, %struct.Reg* %14291, i32 0, i32 0
  %RBP.i452 = bitcast %union.anon* %14292 to i64*
  %14293 = load i64, i64* %RBP.i452
  %14294 = sub i64 %14293, 4
  %14295 = load i64, i64* %PC.i450
  %14296 = add i64 %14295, 3
  store i64 %14296, i64* %PC.i450
  %14297 = inttoptr i64 %14294 to i32*
  %14298 = load i32, i32* %14297
  %14299 = zext i32 %14298 to i64
  store i64 %14299, i64* %RAX.i451, align 8
  store %struct.Memory* %loadMem_4014cc, %struct.Memory** %MEMORY
  %loadMem_4014cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %14300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14301 = getelementptr inbounds %struct.GPR, %struct.GPR* %14300, i32 0, i32 33
  %14302 = getelementptr inbounds %struct.Reg, %struct.Reg* %14301, i32 0, i32 0
  %PC.i448 = bitcast %union.anon* %14302 to i64*
  %14303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14304 = getelementptr inbounds %struct.GPR, %struct.GPR* %14303, i32 0, i32 1
  %14305 = getelementptr inbounds %struct.Reg, %struct.Reg* %14304, i32 0, i32 0
  %RAX.i449 = bitcast %union.anon* %14305 to i64*
  %14306 = load i64, i64* %RAX.i449
  %14307 = load i64, i64* %PC.i448
  %14308 = add i64 %14307, 3
  store i64 %14308, i64* %PC.i448
  %14309 = trunc i64 %14306 to i32
  %14310 = add i32 1, %14309
  %14311 = zext i32 %14310 to i64
  store i64 %14311, i64* %RAX.i449, align 8
  %14312 = icmp ult i32 %14310, %14309
  %14313 = icmp ult i32 %14310, 1
  %14314 = or i1 %14312, %14313
  %14315 = zext i1 %14314 to i8
  %14316 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14315, i8* %14316, align 1
  %14317 = and i32 %14310, 255
  %14318 = call i32 @llvm.ctpop.i32(i32 %14317)
  %14319 = trunc i32 %14318 to i8
  %14320 = and i8 %14319, 1
  %14321 = xor i8 %14320, 1
  %14322 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14321, i8* %14322, align 1
  %14323 = xor i64 1, %14306
  %14324 = trunc i64 %14323 to i32
  %14325 = xor i32 %14324, %14310
  %14326 = lshr i32 %14325, 4
  %14327 = trunc i32 %14326 to i8
  %14328 = and i8 %14327, 1
  %14329 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14328, i8* %14329, align 1
  %14330 = icmp eq i32 %14310, 0
  %14331 = zext i1 %14330 to i8
  %14332 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14331, i8* %14332, align 1
  %14333 = lshr i32 %14310, 31
  %14334 = trunc i32 %14333 to i8
  %14335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14334, i8* %14335, align 1
  %14336 = lshr i32 %14309, 31
  %14337 = xor i32 %14333, %14336
  %14338 = add i32 %14337, %14333
  %14339 = icmp eq i32 %14338, 2
  %14340 = zext i1 %14339 to i8
  %14341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14340, i8* %14341, align 1
  store %struct.Memory* %loadMem_4014cf, %struct.Memory** %MEMORY
  %loadMem_4014d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14343 = getelementptr inbounds %struct.GPR, %struct.GPR* %14342, i32 0, i32 33
  %14344 = getelementptr inbounds %struct.Reg, %struct.Reg* %14343, i32 0, i32 0
  %PC.i445 = bitcast %union.anon* %14344 to i64*
  %14345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14346 = getelementptr inbounds %struct.GPR, %struct.GPR* %14345, i32 0, i32 1
  %14347 = getelementptr inbounds %struct.Reg, %struct.Reg* %14346, i32 0, i32 0
  %EAX.i446 = bitcast %union.anon* %14347 to i32*
  %14348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14349 = getelementptr inbounds %struct.GPR, %struct.GPR* %14348, i32 0, i32 15
  %14350 = getelementptr inbounds %struct.Reg, %struct.Reg* %14349, i32 0, i32 0
  %RBP.i447 = bitcast %union.anon* %14350 to i64*
  %14351 = load i64, i64* %RBP.i447
  %14352 = sub i64 %14351, 4
  %14353 = load i32, i32* %EAX.i446
  %14354 = zext i32 %14353 to i64
  %14355 = load i64, i64* %PC.i445
  %14356 = add i64 %14355, 3
  store i64 %14356, i64* %PC.i445
  %14357 = inttoptr i64 %14352 to i32*
  store i32 %14353, i32* %14357
  store %struct.Memory* %loadMem_4014d2, %struct.Memory** %MEMORY
  %loadMem_4014d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14359 = getelementptr inbounds %struct.GPR, %struct.GPR* %14358, i32 0, i32 33
  %14360 = getelementptr inbounds %struct.Reg, %struct.Reg* %14359, i32 0, i32 0
  %PC.i444 = bitcast %union.anon* %14360 to i64*
  %14361 = load i64, i64* %PC.i444
  %14362 = add i64 %14361, -110
  %14363 = load i64, i64* %PC.i444
  %14364 = add i64 %14363, 5
  store i64 %14364, i64* %PC.i444
  %14365 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %14362, i64* %14365, align 8
  store %struct.Memory* %loadMem_4014d5, %struct.Memory** %MEMORY
  br label %block_.L_401467

block_.L_4014da:                                  ; preds = %block_.L_401467
  %loadMem_4014da = load %struct.Memory*, %struct.Memory** %MEMORY
  %14366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14367 = getelementptr inbounds %struct.GPR, %struct.GPR* %14366, i32 0, i32 33
  %14368 = getelementptr inbounds %struct.Reg, %struct.Reg* %14367, i32 0, i32 0
  %PC.i442 = bitcast %union.anon* %14368 to i64*
  %14369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14370 = getelementptr inbounds %struct.GPR, %struct.GPR* %14369, i32 0, i32 15
  %14371 = getelementptr inbounds %struct.Reg, %struct.Reg* %14370, i32 0, i32 0
  %RBP.i443 = bitcast %union.anon* %14371 to i64*
  %14372 = load i64, i64* %RBP.i443
  %14373 = sub i64 %14372, 4
  %14374 = load i64, i64* %PC.i442
  %14375 = add i64 %14374, 7
  store i64 %14375, i64* %PC.i442
  %14376 = inttoptr i64 %14373 to i32*
  store i32 0, i32* %14376
  store %struct.Memory* %loadMem_4014da, %struct.Memory** %MEMORY
  br label %block_.L_4014e1

block_.L_4014e1:                                  ; preds = %block_.L_401700, %block_.L_4014da
  %loadMem_4014e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14378 = getelementptr inbounds %struct.GPR, %struct.GPR* %14377, i32 0, i32 33
  %14379 = getelementptr inbounds %struct.Reg, %struct.Reg* %14378, i32 0, i32 0
  %PC.i439 = bitcast %union.anon* %14379 to i64*
  %14380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14381 = getelementptr inbounds %struct.GPR, %struct.GPR* %14380, i32 0, i32 1
  %14382 = getelementptr inbounds %struct.Reg, %struct.Reg* %14381, i32 0, i32 0
  %RAX.i440 = bitcast %union.anon* %14382 to i64*
  %14383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14384 = getelementptr inbounds %struct.GPR, %struct.GPR* %14383, i32 0, i32 15
  %14385 = getelementptr inbounds %struct.Reg, %struct.Reg* %14384, i32 0, i32 0
  %RBP.i441 = bitcast %union.anon* %14385 to i64*
  %14386 = load i64, i64* %RBP.i441
  %14387 = sub i64 %14386, 4
  %14388 = load i64, i64* %PC.i439
  %14389 = add i64 %14388, 3
  store i64 %14389, i64* %PC.i439
  %14390 = inttoptr i64 %14387 to i32*
  %14391 = load i32, i32* %14390
  %14392 = zext i32 %14391 to i64
  store i64 %14392, i64* %RAX.i440, align 8
  store %struct.Memory* %loadMem_4014e1, %struct.Memory** %MEMORY
  %loadMem_4014e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14394 = getelementptr inbounds %struct.GPR, %struct.GPR* %14393, i32 0, i32 33
  %14395 = getelementptr inbounds %struct.Reg, %struct.Reg* %14394, i32 0, i32 0
  %PC.i436 = bitcast %union.anon* %14395 to i64*
  %14396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14397 = getelementptr inbounds %struct.GPR, %struct.GPR* %14396, i32 0, i32 5
  %14398 = getelementptr inbounds %struct.Reg, %struct.Reg* %14397, i32 0, i32 0
  %RCX.i437 = bitcast %union.anon* %14398 to i64*
  %14399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14400 = getelementptr inbounds %struct.GPR, %struct.GPR* %14399, i32 0, i32 15
  %14401 = getelementptr inbounds %struct.Reg, %struct.Reg* %14400, i32 0, i32 0
  %RBP.i438 = bitcast %union.anon* %14401 to i64*
  %14402 = load i64, i64* %RBP.i438
  %14403 = sub i64 %14402, 12
  %14404 = load i64, i64* %PC.i436
  %14405 = add i64 %14404, 4
  store i64 %14405, i64* %PC.i436
  %14406 = inttoptr i64 %14403 to i32*
  %14407 = load i32, i32* %14406
  %14408 = sext i32 %14407 to i64
  store i64 %14408, i64* %RCX.i437, align 8
  store %struct.Memory* %loadMem_4014e4, %struct.Memory** %MEMORY
  %loadMem_4014e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14410 = getelementptr inbounds %struct.GPR, %struct.GPR* %14409, i32 0, i32 33
  %14411 = getelementptr inbounds %struct.Reg, %struct.Reg* %14410, i32 0, i32 0
  %PC.i432 = bitcast %union.anon* %14411 to i64*
  %14412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14413 = getelementptr inbounds %struct.GPR, %struct.GPR* %14412, i32 0, i32 1
  %14414 = getelementptr inbounds %struct.Reg, %struct.Reg* %14413, i32 0, i32 0
  %EAX.i433 = bitcast %union.anon* %14414 to i32*
  %14415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14416 = getelementptr inbounds %struct.GPR, %struct.GPR* %14415, i32 0, i32 5
  %14417 = getelementptr inbounds %struct.Reg, %struct.Reg* %14416, i32 0, i32 0
  %RCX.i434 = bitcast %union.anon* %14417 to i64*
  %14418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14419 = getelementptr inbounds %struct.GPR, %struct.GPR* %14418, i32 0, i32 15
  %14420 = getelementptr inbounds %struct.Reg, %struct.Reg* %14419, i32 0, i32 0
  %RBP.i435 = bitcast %union.anon* %14420 to i64*
  %14421 = load i32, i32* %EAX.i433
  %14422 = zext i32 %14421 to i64
  %14423 = load i64, i64* %RBP.i435
  %14424 = load i64, i64* %RCX.i434
  %14425 = mul i64 %14424, 4
  %14426 = add i64 %14423, -1328
  %14427 = add i64 %14426, %14425
  %14428 = load i64, i64* %PC.i432
  %14429 = add i64 %14428, 7
  store i64 %14429, i64* %PC.i432
  %14430 = inttoptr i64 %14427 to i32*
  %14431 = load i32, i32* %14430
  %14432 = sub i32 %14421, %14431
  %14433 = icmp ult i32 %14421, %14431
  %14434 = zext i1 %14433 to i8
  %14435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14434, i8* %14435, align 1
  %14436 = and i32 %14432, 255
  %14437 = call i32 @llvm.ctpop.i32(i32 %14436)
  %14438 = trunc i32 %14437 to i8
  %14439 = and i8 %14438, 1
  %14440 = xor i8 %14439, 1
  %14441 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14440, i8* %14441, align 1
  %14442 = xor i32 %14431, %14421
  %14443 = xor i32 %14442, %14432
  %14444 = lshr i32 %14443, 4
  %14445 = trunc i32 %14444 to i8
  %14446 = and i8 %14445, 1
  %14447 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14446, i8* %14447, align 1
  %14448 = icmp eq i32 %14432, 0
  %14449 = zext i1 %14448 to i8
  %14450 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14449, i8* %14450, align 1
  %14451 = lshr i32 %14432, 31
  %14452 = trunc i32 %14451 to i8
  %14453 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14452, i8* %14453, align 1
  %14454 = lshr i32 %14421, 31
  %14455 = lshr i32 %14431, 31
  %14456 = xor i32 %14455, %14454
  %14457 = xor i32 %14451, %14454
  %14458 = add i32 %14457, %14456
  %14459 = icmp eq i32 %14458, 2
  %14460 = zext i1 %14459 to i8
  %14461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14460, i8* %14461, align 1
  store %struct.Memory* %loadMem_4014e8, %struct.Memory** %MEMORY
  %loadMem_4014ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %14462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14463 = getelementptr inbounds %struct.GPR, %struct.GPR* %14462, i32 0, i32 33
  %14464 = getelementptr inbounds %struct.Reg, %struct.Reg* %14463, i32 0, i32 0
  %PC.i431 = bitcast %union.anon* %14464 to i64*
  %14465 = load i64, i64* %PC.i431
  %14466 = add i64 %14465, 543
  %14467 = load i64, i64* %PC.i431
  %14468 = add i64 %14467, 6
  %14469 = load i64, i64* %PC.i431
  %14470 = add i64 %14469, 6
  store i64 %14470, i64* %PC.i431
  %14471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %14472 = load i8, i8* %14471, align 1
  %14473 = icmp ne i8 %14472, 0
  %14474 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %14475 = load i8, i8* %14474, align 1
  %14476 = icmp ne i8 %14475, 0
  %14477 = xor i1 %14473, %14476
  %14478 = xor i1 %14477, true
  %14479 = zext i1 %14478 to i8
  store i8 %14479, i8* %BRANCH_TAKEN, align 1
  %14480 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %14481 = select i1 %14477, i64 %14468, i64 %14466
  store i64 %14481, i64* %14480, align 8
  store %struct.Memory* %loadMem_4014ef, %struct.Memory** %MEMORY
  %loadBr_4014ef = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4014ef = icmp eq i8 %loadBr_4014ef, 1
  br i1 %cmpBr_4014ef, label %block_.L_40170e, label %block_4014f5

block_4014f5:                                     ; preds = %block_.L_4014e1
  %loadMem_4014f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14483 = getelementptr inbounds %struct.GPR, %struct.GPR* %14482, i32 0, i32 33
  %14484 = getelementptr inbounds %struct.Reg, %struct.Reg* %14483, i32 0, i32 0
  %PC.i428 = bitcast %union.anon* %14484 to i64*
  %14485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14486 = getelementptr inbounds %struct.GPR, %struct.GPR* %14485, i32 0, i32 1
  %14487 = getelementptr inbounds %struct.Reg, %struct.Reg* %14486, i32 0, i32 0
  %RAX.i429 = bitcast %union.anon* %14487 to i64*
  %14488 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14489 = getelementptr inbounds %struct.GPR, %struct.GPR* %14488, i32 0, i32 15
  %14490 = getelementptr inbounds %struct.Reg, %struct.Reg* %14489, i32 0, i32 0
  %RBP.i430 = bitcast %union.anon* %14490 to i64*
  %14491 = load i64, i64* %RBP.i430
  %14492 = sub i64 %14491, 4
  %14493 = load i64, i64* %PC.i428
  %14494 = add i64 %14493, 4
  store i64 %14494, i64* %PC.i428
  %14495 = inttoptr i64 %14492 to i32*
  %14496 = load i32, i32* %14495
  %14497 = sext i32 %14496 to i64
  store i64 %14497, i64* %RAX.i429, align 8
  store %struct.Memory* %loadMem_4014f5, %struct.Memory** %MEMORY
  %loadMem_4014f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14499 = getelementptr inbounds %struct.GPR, %struct.GPR* %14498, i32 0, i32 33
  %14500 = getelementptr inbounds %struct.Reg, %struct.Reg* %14499, i32 0, i32 0
  %PC.i425 = bitcast %union.anon* %14500 to i64*
  %14501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14502 = getelementptr inbounds %struct.GPR, %struct.GPR* %14501, i32 0, i32 1
  %14503 = getelementptr inbounds %struct.Reg, %struct.Reg* %14502, i32 0, i32 0
  %RAX.i426 = bitcast %union.anon* %14503 to i64*
  %14504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14505 = getelementptr inbounds %struct.GPR, %struct.GPR* %14504, i32 0, i32 15
  %14506 = getelementptr inbounds %struct.Reg, %struct.Reg* %14505, i32 0, i32 0
  %RBP.i427 = bitcast %union.anon* %14506 to i64*
  %14507 = load i64, i64* %RBP.i427
  %14508 = load i64, i64* %RAX.i426
  %14509 = mul i64 %14508, 4
  %14510 = add i64 %14507, -1568
  %14511 = add i64 %14510, %14509
  %14512 = load i64, i64* %PC.i425
  %14513 = add i64 %14512, 8
  store i64 %14513, i64* %PC.i425
  %14514 = inttoptr i64 %14511 to i32*
  %14515 = load i32, i32* %14514
  %14516 = sext i32 %14515 to i64
  store i64 %14516, i64* %RAX.i426, align 8
  store %struct.Memory* %loadMem_4014f9, %struct.Memory** %MEMORY
  %loadMem_401501 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14518 = getelementptr inbounds %struct.GPR, %struct.GPR* %14517, i32 0, i32 33
  %14519 = getelementptr inbounds %struct.Reg, %struct.Reg* %14518, i32 0, i32 0
  %PC.i422 = bitcast %union.anon* %14519 to i64*
  %14520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14521 = getelementptr inbounds %struct.GPR, %struct.GPR* %14520, i32 0, i32 1
  %14522 = getelementptr inbounds %struct.Reg, %struct.Reg* %14521, i32 0, i32 0
  %RAX.i423 = bitcast %union.anon* %14522 to i64*
  %14523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14524 = getelementptr inbounds %struct.GPR, %struct.GPR* %14523, i32 0, i32 15
  %14525 = getelementptr inbounds %struct.Reg, %struct.Reg* %14524, i32 0, i32 0
  %RBP.i424 = bitcast %union.anon* %14525 to i64*
  %14526 = load i64, i64* %RBP.i424
  %14527 = load i64, i64* %RAX.i423
  %14528 = mul i64 %14527, 4
  %14529 = add i64 %14526, -2640
  %14530 = add i64 %14529, %14528
  %14531 = load i64, i64* %PC.i422
  %14532 = add i64 %14531, 11
  store i64 %14532, i64* %PC.i422
  %14533 = inttoptr i64 %14530 to i32*
  store i32 1, i32* %14533
  store %struct.Memory* %loadMem_401501, %struct.Memory** %MEMORY
  %loadMem_40150c = load %struct.Memory*, %struct.Memory** %MEMORY
  %14534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14535 = getelementptr inbounds %struct.GPR, %struct.GPR* %14534, i32 0, i32 33
  %14536 = getelementptr inbounds %struct.Reg, %struct.Reg* %14535, i32 0, i32 0
  %PC.i420 = bitcast %union.anon* %14536 to i64*
  %14537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14538 = getelementptr inbounds %struct.GPR, %struct.GPR* %14537, i32 0, i32 15
  %14539 = getelementptr inbounds %struct.Reg, %struct.Reg* %14538, i32 0, i32 0
  %RBP.i421 = bitcast %union.anon* %14539 to i64*
  %14540 = load i64, i64* %RBP.i421
  %14541 = sub i64 %14540, 8
  %14542 = load i64, i64* %PC.i420
  %14543 = add i64 %14542, 7
  store i64 %14543, i64* %PC.i420
  %14544 = inttoptr i64 %14541 to i32*
  store i32 1, i32* %14544
  store %struct.Memory* %loadMem_40150c, %struct.Memory** %MEMORY
  br label %block_.L_401513

block_.L_401513:                                  ; preds = %block_.L_401594, %block_4014f5
  %loadMem_401513 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14546 = getelementptr inbounds %struct.GPR, %struct.GPR* %14545, i32 0, i32 33
  %14547 = getelementptr inbounds %struct.Reg, %struct.Reg* %14546, i32 0, i32 0
  %PC.i417 = bitcast %union.anon* %14547 to i64*
  %14548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14549 = getelementptr inbounds %struct.GPR, %struct.GPR* %14548, i32 0, i32 1
  %14550 = getelementptr inbounds %struct.Reg, %struct.Reg* %14549, i32 0, i32 0
  %RAX.i418 = bitcast %union.anon* %14550 to i64*
  %14551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14552 = getelementptr inbounds %struct.GPR, %struct.GPR* %14551, i32 0, i32 15
  %14553 = getelementptr inbounds %struct.Reg, %struct.Reg* %14552, i32 0, i32 0
  %RBP.i419 = bitcast %union.anon* %14553 to i64*
  %14554 = load i64, i64* %RBP.i419
  %14555 = sub i64 %14554, 8
  %14556 = load i64, i64* %PC.i417
  %14557 = add i64 %14556, 3
  store i64 %14557, i64* %PC.i417
  %14558 = inttoptr i64 %14555 to i32*
  %14559 = load i32, i32* %14558
  %14560 = zext i32 %14559 to i64
  store i64 %14560, i64* %RAX.i418, align 8
  store %struct.Memory* %loadMem_401513, %struct.Memory** %MEMORY
  %loadMem_401516 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14562 = getelementptr inbounds %struct.GPR, %struct.GPR* %14561, i32 0, i32 33
  %14563 = getelementptr inbounds %struct.Reg, %struct.Reg* %14562, i32 0, i32 0
  %PC.i414 = bitcast %union.anon* %14563 to i64*
  %14564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14565 = getelementptr inbounds %struct.GPR, %struct.GPR* %14564, i32 0, i32 5
  %14566 = getelementptr inbounds %struct.Reg, %struct.Reg* %14565, i32 0, i32 0
  %RCX.i415 = bitcast %union.anon* %14566 to i64*
  %14567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14568 = getelementptr inbounds %struct.GPR, %struct.GPR* %14567, i32 0, i32 15
  %14569 = getelementptr inbounds %struct.Reg, %struct.Reg* %14568, i32 0, i32 0
  %RBP.i416 = bitcast %union.anon* %14569 to i64*
  %14570 = load i64, i64* %RBP.i416
  %14571 = sub i64 %14570, 12
  %14572 = load i64, i64* %PC.i414
  %14573 = add i64 %14572, 4
  store i64 %14573, i64* %PC.i414
  %14574 = inttoptr i64 %14571 to i32*
  %14575 = load i32, i32* %14574
  %14576 = sext i32 %14575 to i64
  store i64 %14576, i64* %RCX.i415, align 8
  store %struct.Memory* %loadMem_401516, %struct.Memory** %MEMORY
  %loadMem_40151a = load %struct.Memory*, %struct.Memory** %MEMORY
  %14577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14578 = getelementptr inbounds %struct.GPR, %struct.GPR* %14577, i32 0, i32 33
  %14579 = getelementptr inbounds %struct.Reg, %struct.Reg* %14578, i32 0, i32 0
  %PC.i410 = bitcast %union.anon* %14579 to i64*
  %14580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14581 = getelementptr inbounds %struct.GPR, %struct.GPR* %14580, i32 0, i32 1
  %14582 = getelementptr inbounds %struct.Reg, %struct.Reg* %14581, i32 0, i32 0
  %EAX.i411 = bitcast %union.anon* %14582 to i32*
  %14583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14584 = getelementptr inbounds %struct.GPR, %struct.GPR* %14583, i32 0, i32 5
  %14585 = getelementptr inbounds %struct.Reg, %struct.Reg* %14584, i32 0, i32 0
  %RCX.i412 = bitcast %union.anon* %14585 to i64*
  %14586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14587 = getelementptr inbounds %struct.GPR, %struct.GPR* %14586, i32 0, i32 15
  %14588 = getelementptr inbounds %struct.Reg, %struct.Reg* %14587, i32 0, i32 0
  %RBP.i413 = bitcast %union.anon* %14588 to i64*
  %14589 = load i32, i32* %EAX.i411
  %14590 = zext i32 %14589 to i64
  %14591 = load i64, i64* %RBP.i413
  %14592 = load i64, i64* %RCX.i412
  %14593 = mul i64 %14592, 4
  %14594 = add i64 %14591, -1328
  %14595 = add i64 %14594, %14593
  %14596 = load i64, i64* %PC.i410
  %14597 = add i64 %14596, 7
  store i64 %14597, i64* %PC.i410
  %14598 = inttoptr i64 %14595 to i32*
  %14599 = load i32, i32* %14598
  %14600 = sub i32 %14589, %14599
  %14601 = icmp ult i32 %14589, %14599
  %14602 = zext i1 %14601 to i8
  %14603 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14602, i8* %14603, align 1
  %14604 = and i32 %14600, 255
  %14605 = call i32 @llvm.ctpop.i32(i32 %14604)
  %14606 = trunc i32 %14605 to i8
  %14607 = and i8 %14606, 1
  %14608 = xor i8 %14607, 1
  %14609 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14608, i8* %14609, align 1
  %14610 = xor i32 %14599, %14589
  %14611 = xor i32 %14610, %14600
  %14612 = lshr i32 %14611, 4
  %14613 = trunc i32 %14612 to i8
  %14614 = and i8 %14613, 1
  %14615 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14614, i8* %14615, align 1
  %14616 = icmp eq i32 %14600, 0
  %14617 = zext i1 %14616 to i8
  %14618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14617, i8* %14618, align 1
  %14619 = lshr i32 %14600, 31
  %14620 = trunc i32 %14619 to i8
  %14621 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14620, i8* %14621, align 1
  %14622 = lshr i32 %14589, 31
  %14623 = lshr i32 %14599, 31
  %14624 = xor i32 %14623, %14622
  %14625 = xor i32 %14619, %14622
  %14626 = add i32 %14625, %14624
  %14627 = icmp eq i32 %14626, 2
  %14628 = zext i1 %14627 to i8
  %14629 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14628, i8* %14629, align 1
  store %struct.Memory* %loadMem_40151a, %struct.Memory** %MEMORY
  %loadMem_401521 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14631 = getelementptr inbounds %struct.GPR, %struct.GPR* %14630, i32 0, i32 33
  %14632 = getelementptr inbounds %struct.Reg, %struct.Reg* %14631, i32 0, i32 0
  %PC.i409 = bitcast %union.anon* %14632 to i64*
  %14633 = load i64, i64* %PC.i409
  %14634 = add i64 %14633, 129
  %14635 = load i64, i64* %PC.i409
  %14636 = add i64 %14635, 6
  %14637 = load i64, i64* %PC.i409
  %14638 = add i64 %14637, 6
  store i64 %14638, i64* %PC.i409
  %14639 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %14640 = load i8, i8* %14639, align 1
  %14641 = icmp eq i8 %14640, 0
  %14642 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %14643 = load i8, i8* %14642, align 1
  %14644 = icmp ne i8 %14643, 0
  %14645 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %14646 = load i8, i8* %14645, align 1
  %14647 = icmp ne i8 %14646, 0
  %14648 = xor i1 %14644, %14647
  %14649 = xor i1 %14648, true
  %14650 = and i1 %14641, %14649
  %14651 = zext i1 %14650 to i8
  store i8 %14651, i8* %BRANCH_TAKEN, align 1
  %14652 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %14653 = select i1 %14650, i64 %14634, i64 %14636
  store i64 %14653, i64* %14652, align 8
  store %struct.Memory* %loadMem_401521, %struct.Memory** %MEMORY
  %loadBr_401521 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_401521 = icmp eq i8 %loadBr_401521, 1
  br i1 %cmpBr_401521, label %block_.L_4015a2, label %block_401527

block_401527:                                     ; preds = %block_.L_401513
  %loadMem_401527 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14654 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14655 = getelementptr inbounds %struct.GPR, %struct.GPR* %14654, i32 0, i32 33
  %14656 = getelementptr inbounds %struct.Reg, %struct.Reg* %14655, i32 0, i32 0
  %PC.i406 = bitcast %union.anon* %14656 to i64*
  %14657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14658 = getelementptr inbounds %struct.GPR, %struct.GPR* %14657, i32 0, i32 1
  %14659 = getelementptr inbounds %struct.Reg, %struct.Reg* %14658, i32 0, i32 0
  %RAX.i407 = bitcast %union.anon* %14659 to i64*
  %14660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14661 = getelementptr inbounds %struct.GPR, %struct.GPR* %14660, i32 0, i32 15
  %14662 = getelementptr inbounds %struct.Reg, %struct.Reg* %14661, i32 0, i32 0
  %RBP.i408 = bitcast %union.anon* %14662 to i64*
  %14663 = load i64, i64* %RBP.i408
  %14664 = sub i64 %14663, 8
  %14665 = load i64, i64* %PC.i406
  %14666 = add i64 %14665, 4
  store i64 %14666, i64* %PC.i406
  %14667 = inttoptr i64 %14664 to i32*
  %14668 = load i32, i32* %14667
  %14669 = sext i32 %14668 to i64
  store i64 %14669, i64* %RAX.i407, align 8
  store %struct.Memory* %loadMem_401527, %struct.Memory** %MEMORY
  %loadMem_40152b = load %struct.Memory*, %struct.Memory** %MEMORY
  %14670 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14671 = getelementptr inbounds %struct.GPR, %struct.GPR* %14670, i32 0, i32 33
  %14672 = getelementptr inbounds %struct.Reg, %struct.Reg* %14671, i32 0, i32 0
  %PC.i403 = bitcast %union.anon* %14672 to i64*
  %14673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14674 = getelementptr inbounds %struct.GPR, %struct.GPR* %14673, i32 0, i32 1
  %14675 = getelementptr inbounds %struct.Reg, %struct.Reg* %14674, i32 0, i32 0
  %RAX.i404 = bitcast %union.anon* %14675 to i64*
  %14676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14677 = getelementptr inbounds %struct.GPR, %struct.GPR* %14676, i32 0, i32 15
  %14678 = getelementptr inbounds %struct.Reg, %struct.Reg* %14677, i32 0, i32 0
  %RBP.i405 = bitcast %union.anon* %14678 to i64*
  %14679 = load i64, i64* %RBP.i405
  %14680 = load i64, i64* %RAX.i404
  %14681 = mul i64 %14680, 4
  %14682 = add i64 %14679, -1616
  %14683 = add i64 %14682, %14681
  %14684 = load i64, i64* %PC.i403
  %14685 = add i64 %14684, 8
  store i64 %14685, i64* %PC.i403
  %14686 = inttoptr i64 %14683 to i32*
  %14687 = load i32, i32* %14686
  %14688 = sub i32 %14687, -1
  %14689 = icmp ult i32 %14687, -1
  %14690 = zext i1 %14689 to i8
  %14691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14690, i8* %14691, align 1
  %14692 = and i32 %14688, 255
  %14693 = call i32 @llvm.ctpop.i32(i32 %14692)
  %14694 = trunc i32 %14693 to i8
  %14695 = and i8 %14694, 1
  %14696 = xor i8 %14695, 1
  %14697 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14696, i8* %14697, align 1
  %14698 = xor i32 %14687, -1
  %14699 = xor i32 %14698, %14688
  %14700 = lshr i32 %14699, 4
  %14701 = trunc i32 %14700 to i8
  %14702 = and i8 %14701, 1
  %14703 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14702, i8* %14703, align 1
  %14704 = icmp eq i32 %14688, 0
  %14705 = zext i1 %14704 to i8
  %14706 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14705, i8* %14706, align 1
  %14707 = lshr i32 %14688, 31
  %14708 = trunc i32 %14707 to i8
  %14709 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14708, i8* %14709, align 1
  %14710 = lshr i32 %14687, 31
  %14711 = xor i32 %14710, 1
  %14712 = xor i32 %14707, %14710
  %14713 = add i32 %14712, %14711
  %14714 = icmp eq i32 %14713, 2
  %14715 = zext i1 %14714 to i8
  %14716 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14715, i8* %14716, align 1
  store %struct.Memory* %loadMem_40152b, %struct.Memory** %MEMORY
  %loadMem_401533 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14717 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14718 = getelementptr inbounds %struct.GPR, %struct.GPR* %14717, i32 0, i32 33
  %14719 = getelementptr inbounds %struct.Reg, %struct.Reg* %14718, i32 0, i32 0
  %PC.i402 = bitcast %union.anon* %14719 to i64*
  %14720 = load i64, i64* %PC.i402
  %14721 = add i64 %14720, 92
  %14722 = load i64, i64* %PC.i402
  %14723 = add i64 %14722, 6
  %14724 = load i64, i64* %PC.i402
  %14725 = add i64 %14724, 6
  store i64 %14725, i64* %PC.i402
  %14726 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %14727 = load i8, i8* %14726, align 1
  store i8 %14727, i8* %BRANCH_TAKEN, align 1
  %14728 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %14729 = icmp ne i8 %14727, 0
  %14730 = select i1 %14729, i64 %14721, i64 %14723
  store i64 %14730, i64* %14728, align 8
  store %struct.Memory* %loadMem_401533, %struct.Memory** %MEMORY
  %loadBr_401533 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_401533 = icmp eq i8 %loadBr_401533, 1
  br i1 %cmpBr_401533, label %block_.L_40158f, label %block_401539

block_401539:                                     ; preds = %block_401527
  %loadMem_401539 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14732 = getelementptr inbounds %struct.GPR, %struct.GPR* %14731, i32 0, i32 33
  %14733 = getelementptr inbounds %struct.Reg, %struct.Reg* %14732, i32 0, i32 0
  %PC.i400 = bitcast %union.anon* %14733 to i64*
  %14734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14735 = getelementptr inbounds %struct.GPR, %struct.GPR* %14734, i32 0, i32 1
  %14736 = getelementptr inbounds %struct.Reg, %struct.Reg* %14735, i32 0, i32 0
  %RAX.i401 = bitcast %union.anon* %14736 to i64*
  %14737 = load i64, i64* %PC.i400
  %14738 = add i64 %14737, 5
  store i64 %14738, i64* %PC.i400
  store i64 255, i64* %RAX.i401, align 8
  store %struct.Memory* %loadMem_401539, %struct.Memory** %MEMORY
  %loadMem_40153e = load %struct.Memory*, %struct.Memory** %MEMORY
  %14739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14740 = getelementptr inbounds %struct.GPR, %struct.GPR* %14739, i32 0, i32 33
  %14741 = getelementptr inbounds %struct.Reg, %struct.Reg* %14740, i32 0, i32 0
  %PC.i397 = bitcast %union.anon* %14741 to i64*
  %14742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14743 = getelementptr inbounds %struct.GPR, %struct.GPR* %14742, i32 0, i32 5
  %14744 = getelementptr inbounds %struct.Reg, %struct.Reg* %14743, i32 0, i32 0
  %RCX.i398 = bitcast %union.anon* %14744 to i64*
  %14745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14746 = getelementptr inbounds %struct.GPR, %struct.GPR* %14745, i32 0, i32 15
  %14747 = getelementptr inbounds %struct.Reg, %struct.Reg* %14746, i32 0, i32 0
  %RBP.i399 = bitcast %union.anon* %14747 to i64*
  %14748 = load i64, i64* %RBP.i399
  %14749 = sub i64 %14748, 8
  %14750 = load i64, i64* %PC.i397
  %14751 = add i64 %14750, 4
  store i64 %14751, i64* %PC.i397
  %14752 = inttoptr i64 %14749 to i32*
  %14753 = load i32, i32* %14752
  %14754 = sext i32 %14753 to i64
  store i64 %14754, i64* %RCX.i398, align 8
  store %struct.Memory* %loadMem_40153e, %struct.Memory** %MEMORY
  %loadMem_401542 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14756 = getelementptr inbounds %struct.GPR, %struct.GPR* %14755, i32 0, i32 33
  %14757 = getelementptr inbounds %struct.Reg, %struct.Reg* %14756, i32 0, i32 0
  %PC.i393 = bitcast %union.anon* %14757 to i64*
  %14758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14759 = getelementptr inbounds %struct.GPR, %struct.GPR* %14758, i32 0, i32 5
  %14760 = getelementptr inbounds %struct.Reg, %struct.Reg* %14759, i32 0, i32 0
  %RCX.i394 = bitcast %union.anon* %14760 to i64*
  %14761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14762 = getelementptr inbounds %struct.GPR, %struct.GPR* %14761, i32 0, i32 7
  %14763 = getelementptr inbounds %struct.Reg, %struct.Reg* %14762, i32 0, i32 0
  %RDX.i395 = bitcast %union.anon* %14763 to i64*
  %14764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14765 = getelementptr inbounds %struct.GPR, %struct.GPR* %14764, i32 0, i32 15
  %14766 = getelementptr inbounds %struct.Reg, %struct.Reg* %14765, i32 0, i32 0
  %RBP.i396 = bitcast %union.anon* %14766 to i64*
  %14767 = load i64, i64* %RBP.i396
  %14768 = load i64, i64* %RCX.i394
  %14769 = mul i64 %14768, 4
  %14770 = add i64 %14767, -1616
  %14771 = add i64 %14770, %14769
  %14772 = load i64, i64* %PC.i393
  %14773 = add i64 %14772, 7
  store i64 %14773, i64* %PC.i393
  %14774 = inttoptr i64 %14771 to i32*
  %14775 = load i32, i32* %14774
  %14776 = zext i32 %14775 to i64
  store i64 %14776, i64* %RDX.i395, align 8
  store %struct.Memory* %loadMem_401542, %struct.Memory** %MEMORY
  %loadMem_401549 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14778 = getelementptr inbounds %struct.GPR, %struct.GPR* %14777, i32 0, i32 33
  %14779 = getelementptr inbounds %struct.Reg, %struct.Reg* %14778, i32 0, i32 0
  %PC.i390 = bitcast %union.anon* %14779 to i64*
  %14780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14781 = getelementptr inbounds %struct.GPR, %struct.GPR* %14780, i32 0, i32 9
  %14782 = getelementptr inbounds %struct.Reg, %struct.Reg* %14781, i32 0, i32 0
  %RSI.i391 = bitcast %union.anon* %14782 to i64*
  %14783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14784 = getelementptr inbounds %struct.GPR, %struct.GPR* %14783, i32 0, i32 15
  %14785 = getelementptr inbounds %struct.Reg, %struct.Reg* %14784, i32 0, i32 0
  %RBP.i392 = bitcast %union.anon* %14785 to i64*
  %14786 = load i64, i64* %RBP.i392
  %14787 = sub i64 %14786, 8
  %14788 = load i64, i64* %PC.i390
  %14789 = add i64 %14788, 3
  store i64 %14789, i64* %PC.i390
  %14790 = inttoptr i64 %14787 to i32*
  %14791 = load i32, i32* %14790
  %14792 = zext i32 %14791 to i64
  store i64 %14792, i64* %RSI.i391, align 8
  store %struct.Memory* %loadMem_401549, %struct.Memory** %MEMORY
  %loadMem_40154c = load %struct.Memory*, %struct.Memory** %MEMORY
  %14793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14794 = getelementptr inbounds %struct.GPR, %struct.GPR* %14793, i32 0, i32 33
  %14795 = getelementptr inbounds %struct.Reg, %struct.Reg* %14794, i32 0, i32 0
  %PC.i387 = bitcast %union.anon* %14795 to i64*
  %14796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14797 = getelementptr inbounds %struct.GPR, %struct.GPR* %14796, i32 0, i32 5
  %14798 = getelementptr inbounds %struct.Reg, %struct.Reg* %14797, i32 0, i32 0
  %RCX.i388 = bitcast %union.anon* %14798 to i64*
  %14799 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14800 = getelementptr inbounds %struct.GPR, %struct.GPR* %14799, i32 0, i32 15
  %14801 = getelementptr inbounds %struct.Reg, %struct.Reg* %14800, i32 0, i32 0
  %RBP.i389 = bitcast %union.anon* %14801 to i64*
  %14802 = load i64, i64* %RBP.i389
  %14803 = sub i64 %14802, 4
  %14804 = load i64, i64* %PC.i387
  %14805 = add i64 %14804, 4
  store i64 %14805, i64* %PC.i387
  %14806 = inttoptr i64 %14803 to i32*
  %14807 = load i32, i32* %14806
  %14808 = sext i32 %14807 to i64
  store i64 %14808, i64* %RCX.i388, align 8
  store %struct.Memory* %loadMem_40154c, %struct.Memory** %MEMORY
  %loadMem_401550 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14810 = getelementptr inbounds %struct.GPR, %struct.GPR* %14809, i32 0, i32 33
  %14811 = getelementptr inbounds %struct.Reg, %struct.Reg* %14810, i32 0, i32 0
  %PC.i383 = bitcast %union.anon* %14811 to i64*
  %14812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14813 = getelementptr inbounds %struct.GPR, %struct.GPR* %14812, i32 0, i32 5
  %14814 = getelementptr inbounds %struct.Reg, %struct.Reg* %14813, i32 0, i32 0
  %RCX.i384 = bitcast %union.anon* %14814 to i64*
  %14815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14816 = getelementptr inbounds %struct.GPR, %struct.GPR* %14815, i32 0, i32 9
  %14817 = getelementptr inbounds %struct.Reg, %struct.Reg* %14816, i32 0, i32 0
  %RSI.i385 = bitcast %union.anon* %14817 to i64*
  %14818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14819 = getelementptr inbounds %struct.GPR, %struct.GPR* %14818, i32 0, i32 15
  %14820 = getelementptr inbounds %struct.Reg, %struct.Reg* %14819, i32 0, i32 0
  %RBP.i386 = bitcast %union.anon* %14820 to i64*
  %14821 = load i64, i64* %RSI.i385
  %14822 = load i64, i64* %RBP.i386
  %14823 = load i64, i64* %RCX.i384
  %14824 = mul i64 %14823, 4
  %14825 = add i64 %14822, -1536
  %14826 = add i64 %14825, %14824
  %14827 = load i64, i64* %PC.i383
  %14828 = add i64 %14827, 8
  store i64 %14828, i64* %PC.i383
  %14829 = inttoptr i64 %14826 to i32*
  %14830 = load i32, i32* %14829
  %14831 = shl i64 %14821, 32
  %14832 = ashr exact i64 %14831, 32
  %14833 = sext i32 %14830 to i64
  %14834 = mul i64 %14833, %14832
  %14835 = trunc i64 %14834 to i32
  %14836 = and i64 %14834, 4294967295
  store i64 %14836, i64* %RSI.i385, align 8
  %14837 = shl i64 %14834, 32
  %14838 = ashr exact i64 %14837, 32
  %14839 = icmp ne i64 %14838, %14834
  %14840 = zext i1 %14839 to i8
  %14841 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14840, i8* %14841, align 1
  %14842 = and i32 %14835, 255
  %14843 = call i32 @llvm.ctpop.i32(i32 %14842)
  %14844 = trunc i32 %14843 to i8
  %14845 = and i8 %14844, 1
  %14846 = xor i8 %14845, 1
  %14847 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14846, i8* %14847, align 1
  %14848 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14848, align 1
  %14849 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %14849, align 1
  %14850 = lshr i32 %14835, 31
  %14851 = trunc i32 %14850 to i8
  %14852 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14851, i8* %14852, align 1
  %14853 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14840, i8* %14853, align 1
  store %struct.Memory* %loadMem_401550, %struct.Memory** %MEMORY
  %loadMem_401558 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14855 = getelementptr inbounds %struct.GPR, %struct.GPR* %14854, i32 0, i32 33
  %14856 = getelementptr inbounds %struct.Reg, %struct.Reg* %14855, i32 0, i32 0
  %PC.i380 = bitcast %union.anon* %14856 to i64*
  %14857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14858 = getelementptr inbounds %struct.GPR, %struct.GPR* %14857, i32 0, i32 9
  %14859 = getelementptr inbounds %struct.Reg, %struct.Reg* %14858, i32 0, i32 0
  %ESI.i381 = bitcast %union.anon* %14859 to i32*
  %14860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14861 = getelementptr inbounds %struct.GPR, %struct.GPR* %14860, i32 0, i32 7
  %14862 = getelementptr inbounds %struct.Reg, %struct.Reg* %14861, i32 0, i32 0
  %RDX.i382 = bitcast %union.anon* %14862 to i64*
  %14863 = load i64, i64* %RDX.i382
  %14864 = load i32, i32* %ESI.i381
  %14865 = zext i32 %14864 to i64
  %14866 = load i64, i64* %PC.i380
  %14867 = add i64 %14866, 2
  store i64 %14867, i64* %PC.i380
  %14868 = trunc i64 %14863 to i32
  %14869 = add i32 %14864, %14868
  %14870 = zext i32 %14869 to i64
  store i64 %14870, i64* %RDX.i382, align 8
  %14871 = icmp ult i32 %14869, %14868
  %14872 = icmp ult i32 %14869, %14864
  %14873 = or i1 %14871, %14872
  %14874 = zext i1 %14873 to i8
  %14875 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14874, i8* %14875, align 1
  %14876 = and i32 %14869, 255
  %14877 = call i32 @llvm.ctpop.i32(i32 %14876)
  %14878 = trunc i32 %14877 to i8
  %14879 = and i8 %14878, 1
  %14880 = xor i8 %14879, 1
  %14881 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14880, i8* %14881, align 1
  %14882 = xor i64 %14865, %14863
  %14883 = trunc i64 %14882 to i32
  %14884 = xor i32 %14883, %14869
  %14885 = lshr i32 %14884, 4
  %14886 = trunc i32 %14885 to i8
  %14887 = and i8 %14886, 1
  %14888 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14887, i8* %14888, align 1
  %14889 = icmp eq i32 %14869, 0
  %14890 = zext i1 %14889 to i8
  %14891 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14890, i8* %14891, align 1
  %14892 = lshr i32 %14869, 31
  %14893 = trunc i32 %14892 to i8
  %14894 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14893, i8* %14894, align 1
  %14895 = lshr i32 %14868, 31
  %14896 = lshr i32 %14864, 31
  %14897 = xor i32 %14892, %14895
  %14898 = xor i32 %14892, %14896
  %14899 = add i32 %14897, %14898
  %14900 = icmp eq i32 %14899, 2
  %14901 = zext i1 %14900 to i8
  %14902 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14901, i8* %14902, align 1
  store %struct.Memory* %loadMem_401558, %struct.Memory** %MEMORY
  %loadMem_40155a = load %struct.Memory*, %struct.Memory** %MEMORY
  %14903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14904 = getelementptr inbounds %struct.GPR, %struct.GPR* %14903, i32 0, i32 33
  %14905 = getelementptr inbounds %struct.Reg, %struct.Reg* %14904, i32 0, i32 0
  %PC.i377 = bitcast %union.anon* %14905 to i64*
  %14906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14907 = getelementptr inbounds %struct.GPR, %struct.GPR* %14906, i32 0, i32 1
  %14908 = getelementptr inbounds %struct.Reg, %struct.Reg* %14907, i32 0, i32 0
  %EAX.i378 = bitcast %union.anon* %14908 to i32*
  %14909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14910 = getelementptr inbounds %struct.GPR, %struct.GPR* %14909, i32 0, i32 15
  %14911 = getelementptr inbounds %struct.Reg, %struct.Reg* %14910, i32 0, i32 0
  %RBP.i379 = bitcast %union.anon* %14911 to i64*
  %14912 = load i64, i64* %RBP.i379
  %14913 = sub i64 %14912, 2724
  %14914 = load i32, i32* %EAX.i378
  %14915 = zext i32 %14914 to i64
  %14916 = load i64, i64* %PC.i377
  %14917 = add i64 %14916, 6
  store i64 %14917, i64* %PC.i377
  %14918 = inttoptr i64 %14913 to i32*
  store i32 %14914, i32* %14918
  store %struct.Memory* %loadMem_40155a, %struct.Memory** %MEMORY
  %loadMem_401560 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14920 = getelementptr inbounds %struct.GPR, %struct.GPR* %14919, i32 0, i32 33
  %14921 = getelementptr inbounds %struct.Reg, %struct.Reg* %14920, i32 0, i32 0
  %PC.i374 = bitcast %union.anon* %14921 to i64*
  %14922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14923 = getelementptr inbounds %struct.GPR, %struct.GPR* %14922, i32 0, i32 7
  %14924 = getelementptr inbounds %struct.Reg, %struct.Reg* %14923, i32 0, i32 0
  %EDX.i375 = bitcast %union.anon* %14924 to i32*
  %14925 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14926 = getelementptr inbounds %struct.GPR, %struct.GPR* %14925, i32 0, i32 1
  %14927 = getelementptr inbounds %struct.Reg, %struct.Reg* %14926, i32 0, i32 0
  %RAX.i376 = bitcast %union.anon* %14927 to i64*
  %14928 = load i32, i32* %EDX.i375
  %14929 = zext i32 %14928 to i64
  %14930 = load i64, i64* %PC.i374
  %14931 = add i64 %14930, 2
  store i64 %14931, i64* %PC.i374
  %14932 = and i64 %14929, 4294967295
  store i64 %14932, i64* %RAX.i376, align 8
  store %struct.Memory* %loadMem_401560, %struct.Memory** %MEMORY
  %loadMem_401562 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14934 = getelementptr inbounds %struct.GPR, %struct.GPR* %14933, i32 0, i32 33
  %14935 = getelementptr inbounds %struct.Reg, %struct.Reg* %14934, i32 0, i32 0
  %PC.i373 = bitcast %union.anon* %14935 to i64*
  %14936 = load i64, i64* %PC.i373
  %14937 = add i64 %14936, 1
  store i64 %14937, i64* %PC.i373
  %14938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %14939 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %14940 = bitcast %union.anon* %14939 to i32*
  %14941 = load i32, i32* %14940, align 8
  %14942 = sext i32 %14941 to i64
  %14943 = lshr i64 %14942, 32
  store i64 %14943, i64* %14938, align 8
  store %struct.Memory* %loadMem_401562, %struct.Memory** %MEMORY
  %loadMem_401563 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14945 = getelementptr inbounds %struct.GPR, %struct.GPR* %14944, i32 0, i32 33
  %14946 = getelementptr inbounds %struct.Reg, %struct.Reg* %14945, i32 0, i32 0
  %PC.i370 = bitcast %union.anon* %14946 to i64*
  %14947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14948 = getelementptr inbounds %struct.GPR, %struct.GPR* %14947, i32 0, i32 9
  %14949 = getelementptr inbounds %struct.Reg, %struct.Reg* %14948, i32 0, i32 0
  %RSI.i371 = bitcast %union.anon* %14949 to i64*
  %14950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14951 = getelementptr inbounds %struct.GPR, %struct.GPR* %14950, i32 0, i32 15
  %14952 = getelementptr inbounds %struct.Reg, %struct.Reg* %14951, i32 0, i32 0
  %RBP.i372 = bitcast %union.anon* %14952 to i64*
  %14953 = load i64, i64* %RBP.i372
  %14954 = sub i64 %14953, 2724
  %14955 = load i64, i64* %PC.i370
  %14956 = add i64 %14955, 6
  store i64 %14956, i64* %PC.i370
  %14957 = inttoptr i64 %14954 to i32*
  %14958 = load i32, i32* %14957
  %14959 = zext i32 %14958 to i64
  store i64 %14959, i64* %RSI.i371, align 8
  store %struct.Memory* %loadMem_401563, %struct.Memory** %MEMORY
  %loadMem_401569 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14961 = getelementptr inbounds %struct.GPR, %struct.GPR* %14960, i32 0, i32 33
  %14962 = getelementptr inbounds %struct.Reg, %struct.Reg* %14961, i32 0, i32 0
  %PC.i365 = bitcast %union.anon* %14962 to i64*
  %14963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14964 = getelementptr inbounds %struct.GPR, %struct.GPR* %14963, i32 0, i32 9
  %14965 = getelementptr inbounds %struct.Reg, %struct.Reg* %14964, i32 0, i32 0
  %ESI.i366 = bitcast %union.anon* %14965 to i32*
  %14966 = load i32, i32* %ESI.i366
  %14967 = zext i32 %14966 to i64
  %14968 = load i64, i64* %PC.i365
  %14969 = add i64 %14968, 2
  store i64 %14969, i64* %PC.i365
  %14970 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %14971 = bitcast %union.anon* %14970 to i32*
  %14972 = load i32, i32* %14971, align 8
  %14973 = zext i32 %14972 to i64
  %14974 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %14975 = bitcast %union.anon* %14974 to i32*
  %14976 = load i32, i32* %14975, align 8
  %14977 = zext i32 %14976 to i64
  %14978 = shl i64 %14967, 32
  %14979 = ashr exact i64 %14978, 32
  %14980 = shl i64 %14977, 32
  %14981 = or i64 %14980, %14973
  %14982 = sdiv i64 %14981, %14979
  %14983 = shl i64 %14982, 32
  %14984 = ashr exact i64 %14983, 32
  %14985 = icmp eq i64 %14982, %14984
  br i1 %14985, label %14990, label %14986

; <label>:14986:                                  ; preds = %block_401539
  %14987 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %14988 = load i64, i64* %14987, align 8
  %14989 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %14988, %struct.Memory* %loadMem_401569)
  br label %routine_idivl__esi.exit367

; <label>:14990:                                  ; preds = %block_401539
  %14991 = srem i64 %14981, %14979
  %14992 = getelementptr inbounds %union.anon, %union.anon* %14970, i64 0, i32 0
  %14993 = and i64 %14982, 4294967295
  store i64 %14993, i64* %14992, align 8
  %14994 = getelementptr inbounds %union.anon, %union.anon* %14974, i64 0, i32 0
  %14995 = and i64 %14991, 4294967295
  store i64 %14995, i64* %14994, align 8
  %14996 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %14996, align 1
  %14997 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %14997, align 1
  %14998 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14998, align 1
  %14999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %14999, align 1
  %15000 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %15000, align 1
  %15001 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %15001, align 1
  br label %routine_idivl__esi.exit367

routine_idivl__esi.exit367:                       ; preds = %14986, %14990
  %15002 = phi %struct.Memory* [ %14989, %14986 ], [ %loadMem_401569, %14990 ]
  store %struct.Memory* %15002, %struct.Memory** %MEMORY
  %loadMem_40156b = load %struct.Memory*, %struct.Memory** %MEMORY
  %15003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15004 = getelementptr inbounds %struct.GPR, %struct.GPR* %15003, i32 0, i32 33
  %15005 = getelementptr inbounds %struct.Reg, %struct.Reg* %15004, i32 0, i32 0
  %PC.i362 = bitcast %union.anon* %15005 to i64*
  %15006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15007 = getelementptr inbounds %struct.GPR, %struct.GPR* %15006, i32 0, i32 7
  %15008 = getelementptr inbounds %struct.Reg, %struct.Reg* %15007, i32 0, i32 0
  %EDX.i363 = bitcast %union.anon* %15008 to i32*
  %15009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15010 = getelementptr inbounds %struct.GPR, %struct.GPR* %15009, i32 0, i32 5
  %15011 = getelementptr inbounds %struct.Reg, %struct.Reg* %15010, i32 0, i32 0
  %RCX.i364 = bitcast %union.anon* %15011 to i64*
  %15012 = load i32, i32* %EDX.i363
  %15013 = zext i32 %15012 to i64
  %15014 = load i64, i64* %PC.i362
  %15015 = add i64 %15014, 3
  store i64 %15015, i64* %PC.i362
  %15016 = shl i64 %15013, 32
  %15017 = ashr exact i64 %15016, 32
  store i64 %15017, i64* %RCX.i364, align 8
  store %struct.Memory* %loadMem_40156b, %struct.Memory** %MEMORY
  %loadMem_40156e = load %struct.Memory*, %struct.Memory** %MEMORY
  %15018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15019 = getelementptr inbounds %struct.GPR, %struct.GPR* %15018, i32 0, i32 33
  %15020 = getelementptr inbounds %struct.Reg, %struct.Reg* %15019, i32 0, i32 0
  %PC.i359 = bitcast %union.anon* %15020 to i64*
  %15021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15022 = getelementptr inbounds %struct.GPR, %struct.GPR* %15021, i32 0, i32 5
  %15023 = getelementptr inbounds %struct.Reg, %struct.Reg* %15022, i32 0, i32 0
  %RCX.i360 = bitcast %union.anon* %15023 to i64*
  %15024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15025 = getelementptr inbounds %struct.GPR, %struct.GPR* %15024, i32 0, i32 7
  %15026 = getelementptr inbounds %struct.Reg, %struct.Reg* %15025, i32 0, i32 0
  %RDX.i361 = bitcast %union.anon* %15026 to i64*
  %15027 = load i64, i64* %RCX.i360
  %15028 = mul i64 %15027, 4
  %15029 = add i64 %15028, 6305920
  %15030 = load i64, i64* %PC.i359
  %15031 = add i64 %15030, 7
  store i64 %15031, i64* %PC.i359
  %15032 = inttoptr i64 %15029 to i32*
  %15033 = load i32, i32* %15032
  %15034 = zext i32 %15033 to i64
  store i64 %15034, i64* %RDX.i361, align 8
  store %struct.Memory* %loadMem_40156e, %struct.Memory** %MEMORY
  %loadMem_401575 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15036 = getelementptr inbounds %struct.GPR, %struct.GPR* %15035, i32 0, i32 33
  %15037 = getelementptr inbounds %struct.Reg, %struct.Reg* %15036, i32 0, i32 0
  %PC.i356 = bitcast %union.anon* %15037 to i64*
  %15038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15039 = getelementptr inbounds %struct.GPR, %struct.GPR* %15038, i32 0, i32 5
  %15040 = getelementptr inbounds %struct.Reg, %struct.Reg* %15039, i32 0, i32 0
  %RCX.i357 = bitcast %union.anon* %15040 to i64*
  %15041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15042 = getelementptr inbounds %struct.GPR, %struct.GPR* %15041, i32 0, i32 15
  %15043 = getelementptr inbounds %struct.Reg, %struct.Reg* %15042, i32 0, i32 0
  %RBP.i358 = bitcast %union.anon* %15043 to i64*
  %15044 = load i64, i64* %RBP.i358
  %15045 = sub i64 %15044, 4
  %15046 = load i64, i64* %PC.i356
  %15047 = add i64 %15046, 4
  store i64 %15047, i64* %PC.i356
  %15048 = inttoptr i64 %15045 to i32*
  %15049 = load i32, i32* %15048
  %15050 = sext i32 %15049 to i64
  store i64 %15050, i64* %RCX.i357, align 8
  store %struct.Memory* %loadMem_401575, %struct.Memory** %MEMORY
  %loadMem_401579 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15052 = getelementptr inbounds %struct.GPR, %struct.GPR* %15051, i32 0, i32 33
  %15053 = getelementptr inbounds %struct.Reg, %struct.Reg* %15052, i32 0, i32 0
  %PC.i353 = bitcast %union.anon* %15053 to i64*
  %15054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15055 = getelementptr inbounds %struct.GPR, %struct.GPR* %15054, i32 0, i32 5
  %15056 = getelementptr inbounds %struct.Reg, %struct.Reg* %15055, i32 0, i32 0
  %RCX.i354 = bitcast %union.anon* %15056 to i64*
  %15057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15058 = getelementptr inbounds %struct.GPR, %struct.GPR* %15057, i32 0, i32 15
  %15059 = getelementptr inbounds %struct.Reg, %struct.Reg* %15058, i32 0, i32 0
  %RBP.i355 = bitcast %union.anon* %15059 to i64*
  %15060 = load i64, i64* %RBP.i355
  %15061 = load i64, i64* %RCX.i354
  %15062 = mul i64 %15061, 4
  %15063 = add i64 %15060, -1568
  %15064 = add i64 %15063, %15062
  %15065 = load i64, i64* %PC.i353
  %15066 = add i64 %15065, 8
  store i64 %15066, i64* %PC.i353
  %15067 = inttoptr i64 %15064 to i32*
  %15068 = load i32, i32* %15067
  %15069 = sext i32 %15068 to i64
  store i64 %15069, i64* %RCX.i354, align 8
  store %struct.Memory* %loadMem_401579, %struct.Memory** %MEMORY
  %loadMem_401581 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15071 = getelementptr inbounds %struct.GPR, %struct.GPR* %15070, i32 0, i32 33
  %15072 = getelementptr inbounds %struct.Reg, %struct.Reg* %15071, i32 0, i32 0
  %PC.i349 = bitcast %union.anon* %15072 to i64*
  %15073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15074 = getelementptr inbounds %struct.GPR, %struct.GPR* %15073, i32 0, i32 5
  %15075 = getelementptr inbounds %struct.Reg, %struct.Reg* %15074, i32 0, i32 0
  %RCX.i350 = bitcast %union.anon* %15075 to i64*
  %15076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15077 = getelementptr inbounds %struct.GPR, %struct.GPR* %15076, i32 0, i32 7
  %15078 = getelementptr inbounds %struct.Reg, %struct.Reg* %15077, i32 0, i32 0
  %RDX.i351 = bitcast %union.anon* %15078 to i64*
  %15079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15080 = getelementptr inbounds %struct.GPR, %struct.GPR* %15079, i32 0, i32 15
  %15081 = getelementptr inbounds %struct.Reg, %struct.Reg* %15080, i32 0, i32 0
  %RBP.i352 = bitcast %union.anon* %15081 to i64*
  %15082 = load i64, i64* %RDX.i351
  %15083 = load i64, i64* %RBP.i352
  %15084 = load i64, i64* %RCX.i350
  %15085 = mul i64 %15084, 4
  %15086 = add i64 %15083, -2640
  %15087 = add i64 %15086, %15085
  %15088 = load i64, i64* %PC.i349
  %15089 = add i64 %15088, 7
  store i64 %15089, i64* %PC.i349
  %15090 = trunc i64 %15082 to i32
  %15091 = inttoptr i64 %15087 to i32*
  %15092 = load i32, i32* %15091
  %15093 = xor i32 %15092, %15090
  %15094 = zext i32 %15093 to i64
  store i64 %15094, i64* %RDX.i351, align 8
  %15095 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15095, align 1
  %15096 = and i32 %15093, 255
  %15097 = call i32 @llvm.ctpop.i32(i32 %15096)
  %15098 = trunc i32 %15097 to i8
  %15099 = and i8 %15098, 1
  %15100 = xor i8 %15099, 1
  %15101 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15100, i8* %15101, align 1
  %15102 = icmp eq i32 %15093, 0
  %15103 = zext i1 %15102 to i8
  %15104 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15103, i8* %15104, align 1
  %15105 = lshr i32 %15093, 31
  %15106 = trunc i32 %15105 to i8
  %15107 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15106, i8* %15107, align 1
  %15108 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %15108, align 1
  %15109 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %15109, align 1
  store %struct.Memory* %loadMem_401581, %struct.Memory** %MEMORY
  %loadMem_401588 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15111 = getelementptr inbounds %struct.GPR, %struct.GPR* %15110, i32 0, i32 33
  %15112 = getelementptr inbounds %struct.Reg, %struct.Reg* %15111, i32 0, i32 0
  %PC.i345 = bitcast %union.anon* %15112 to i64*
  %15113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15114 = getelementptr inbounds %struct.GPR, %struct.GPR* %15113, i32 0, i32 7
  %15115 = getelementptr inbounds %struct.Reg, %struct.Reg* %15114, i32 0, i32 0
  %EDX.i346 = bitcast %union.anon* %15115 to i32*
  %15116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15117 = getelementptr inbounds %struct.GPR, %struct.GPR* %15116, i32 0, i32 5
  %15118 = getelementptr inbounds %struct.Reg, %struct.Reg* %15117, i32 0, i32 0
  %RCX.i347 = bitcast %union.anon* %15118 to i64*
  %15119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15120 = getelementptr inbounds %struct.GPR, %struct.GPR* %15119, i32 0, i32 15
  %15121 = getelementptr inbounds %struct.Reg, %struct.Reg* %15120, i32 0, i32 0
  %RBP.i348 = bitcast %union.anon* %15121 to i64*
  %15122 = load i64, i64* %RBP.i348
  %15123 = load i64, i64* %RCX.i347
  %15124 = mul i64 %15123, 4
  %15125 = add i64 %15122, -2640
  %15126 = add i64 %15125, %15124
  %15127 = load i32, i32* %EDX.i346
  %15128 = zext i32 %15127 to i64
  %15129 = load i64, i64* %PC.i345
  %15130 = add i64 %15129, 7
  store i64 %15130, i64* %PC.i345
  %15131 = inttoptr i64 %15126 to i32*
  store i32 %15127, i32* %15131
  store %struct.Memory* %loadMem_401588, %struct.Memory** %MEMORY
  br label %block_.L_40158f

block_.L_40158f:                                  ; preds = %routine_idivl__esi.exit367, %block_401527
  %loadMem_40158f = load %struct.Memory*, %struct.Memory** %MEMORY
  %15132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15133 = getelementptr inbounds %struct.GPR, %struct.GPR* %15132, i32 0, i32 33
  %15134 = getelementptr inbounds %struct.Reg, %struct.Reg* %15133, i32 0, i32 0
  %PC.i344 = bitcast %union.anon* %15134 to i64*
  %15135 = load i64, i64* %PC.i344
  %15136 = add i64 %15135, 5
  %15137 = load i64, i64* %PC.i344
  %15138 = add i64 %15137, 5
  store i64 %15138, i64* %PC.i344
  %15139 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %15136, i64* %15139, align 8
  store %struct.Memory* %loadMem_40158f, %struct.Memory** %MEMORY
  br label %block_.L_401594

block_.L_401594:                                  ; preds = %block_.L_40158f
  %loadMem_401594 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15141 = getelementptr inbounds %struct.GPR, %struct.GPR* %15140, i32 0, i32 33
  %15142 = getelementptr inbounds %struct.Reg, %struct.Reg* %15141, i32 0, i32 0
  %PC.i341 = bitcast %union.anon* %15142 to i64*
  %15143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15144 = getelementptr inbounds %struct.GPR, %struct.GPR* %15143, i32 0, i32 1
  %15145 = getelementptr inbounds %struct.Reg, %struct.Reg* %15144, i32 0, i32 0
  %RAX.i342 = bitcast %union.anon* %15145 to i64*
  %15146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15147 = getelementptr inbounds %struct.GPR, %struct.GPR* %15146, i32 0, i32 15
  %15148 = getelementptr inbounds %struct.Reg, %struct.Reg* %15147, i32 0, i32 0
  %RBP.i343 = bitcast %union.anon* %15148 to i64*
  %15149 = load i64, i64* %RBP.i343
  %15150 = sub i64 %15149, 8
  %15151 = load i64, i64* %PC.i341
  %15152 = add i64 %15151, 3
  store i64 %15152, i64* %PC.i341
  %15153 = inttoptr i64 %15150 to i32*
  %15154 = load i32, i32* %15153
  %15155 = zext i32 %15154 to i64
  store i64 %15155, i64* %RAX.i342, align 8
  store %struct.Memory* %loadMem_401594, %struct.Memory** %MEMORY
  %loadMem_401597 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15157 = getelementptr inbounds %struct.GPR, %struct.GPR* %15156, i32 0, i32 33
  %15158 = getelementptr inbounds %struct.Reg, %struct.Reg* %15157, i32 0, i32 0
  %PC.i339 = bitcast %union.anon* %15158 to i64*
  %15159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15160 = getelementptr inbounds %struct.GPR, %struct.GPR* %15159, i32 0, i32 1
  %15161 = getelementptr inbounds %struct.Reg, %struct.Reg* %15160, i32 0, i32 0
  %RAX.i340 = bitcast %union.anon* %15161 to i64*
  %15162 = load i64, i64* %RAX.i340
  %15163 = load i64, i64* %PC.i339
  %15164 = add i64 %15163, 3
  store i64 %15164, i64* %PC.i339
  %15165 = trunc i64 %15162 to i32
  %15166 = add i32 1, %15165
  %15167 = zext i32 %15166 to i64
  store i64 %15167, i64* %RAX.i340, align 8
  %15168 = icmp ult i32 %15166, %15165
  %15169 = icmp ult i32 %15166, 1
  %15170 = or i1 %15168, %15169
  %15171 = zext i1 %15170 to i8
  %15172 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15171, i8* %15172, align 1
  %15173 = and i32 %15166, 255
  %15174 = call i32 @llvm.ctpop.i32(i32 %15173)
  %15175 = trunc i32 %15174 to i8
  %15176 = and i8 %15175, 1
  %15177 = xor i8 %15176, 1
  %15178 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15177, i8* %15178, align 1
  %15179 = xor i64 1, %15162
  %15180 = trunc i64 %15179 to i32
  %15181 = xor i32 %15180, %15166
  %15182 = lshr i32 %15181, 4
  %15183 = trunc i32 %15182 to i8
  %15184 = and i8 %15183, 1
  %15185 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15184, i8* %15185, align 1
  %15186 = icmp eq i32 %15166, 0
  %15187 = zext i1 %15186 to i8
  %15188 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15187, i8* %15188, align 1
  %15189 = lshr i32 %15166, 31
  %15190 = trunc i32 %15189 to i8
  %15191 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15190, i8* %15191, align 1
  %15192 = lshr i32 %15165, 31
  %15193 = xor i32 %15189, %15192
  %15194 = add i32 %15193, %15189
  %15195 = icmp eq i32 %15194, 2
  %15196 = zext i1 %15195 to i8
  %15197 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15196, i8* %15197, align 1
  store %struct.Memory* %loadMem_401597, %struct.Memory** %MEMORY
  %loadMem_40159a = load %struct.Memory*, %struct.Memory** %MEMORY
  %15198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15199 = getelementptr inbounds %struct.GPR, %struct.GPR* %15198, i32 0, i32 33
  %15200 = getelementptr inbounds %struct.Reg, %struct.Reg* %15199, i32 0, i32 0
  %PC.i336 = bitcast %union.anon* %15200 to i64*
  %15201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15202 = getelementptr inbounds %struct.GPR, %struct.GPR* %15201, i32 0, i32 1
  %15203 = getelementptr inbounds %struct.Reg, %struct.Reg* %15202, i32 0, i32 0
  %EAX.i337 = bitcast %union.anon* %15203 to i32*
  %15204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15205 = getelementptr inbounds %struct.GPR, %struct.GPR* %15204, i32 0, i32 15
  %15206 = getelementptr inbounds %struct.Reg, %struct.Reg* %15205, i32 0, i32 0
  %RBP.i338 = bitcast %union.anon* %15206 to i64*
  %15207 = load i64, i64* %RBP.i338
  %15208 = sub i64 %15207, 8
  %15209 = load i32, i32* %EAX.i337
  %15210 = zext i32 %15209 to i64
  %15211 = load i64, i64* %PC.i336
  %15212 = add i64 %15211, 3
  store i64 %15212, i64* %PC.i336
  %15213 = inttoptr i64 %15208 to i32*
  store i32 %15209, i32* %15213
  store %struct.Memory* %loadMem_40159a, %struct.Memory** %MEMORY
  %loadMem_40159d = load %struct.Memory*, %struct.Memory** %MEMORY
  %15214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15215 = getelementptr inbounds %struct.GPR, %struct.GPR* %15214, i32 0, i32 33
  %15216 = getelementptr inbounds %struct.Reg, %struct.Reg* %15215, i32 0, i32 0
  %PC.i335 = bitcast %union.anon* %15216 to i64*
  %15217 = load i64, i64* %PC.i335
  %15218 = add i64 %15217, -138
  %15219 = load i64, i64* %PC.i335
  %15220 = add i64 %15219, 5
  store i64 %15220, i64* %PC.i335
  %15221 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %15218, i64* %15221, align 8
  store %struct.Memory* %loadMem_40159d, %struct.Memory** %MEMORY
  br label %block_.L_401513

block_.L_4015a2:                                  ; preds = %block_.L_401513
  %loadMem_4015a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15223 = getelementptr inbounds %struct.GPR, %struct.GPR* %15222, i32 0, i32 33
  %15224 = getelementptr inbounds %struct.Reg, %struct.Reg* %15223, i32 0, i32 0
  %PC.i332 = bitcast %union.anon* %15224 to i64*
  %15225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15226 = getelementptr inbounds %struct.GPR, %struct.GPR* %15225, i32 0, i32 1
  %15227 = getelementptr inbounds %struct.Reg, %struct.Reg* %15226, i32 0, i32 0
  %RAX.i333 = bitcast %union.anon* %15227 to i64*
  %15228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15229 = getelementptr inbounds %struct.GPR, %struct.GPR* %15228, i32 0, i32 15
  %15230 = getelementptr inbounds %struct.Reg, %struct.Reg* %15229, i32 0, i32 0
  %RBP.i334 = bitcast %union.anon* %15230 to i64*
  %15231 = load i64, i64* %RBP.i334
  %15232 = sub i64 %15231, 4
  %15233 = load i64, i64* %PC.i332
  %15234 = add i64 %15233, 4
  store i64 %15234, i64* %PC.i332
  %15235 = inttoptr i64 %15232 to i32*
  %15236 = load i32, i32* %15235
  %15237 = sext i32 %15236 to i64
  store i64 %15237, i64* %RAX.i333, align 8
  store %struct.Memory* %loadMem_4015a2, %struct.Memory** %MEMORY
  %loadMem_4015a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15239 = getelementptr inbounds %struct.GPR, %struct.GPR* %15238, i32 0, i32 33
  %15240 = getelementptr inbounds %struct.Reg, %struct.Reg* %15239, i32 0, i32 0
  %PC.i329 = bitcast %union.anon* %15240 to i64*
  %15241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15242 = getelementptr inbounds %struct.GPR, %struct.GPR* %15241, i32 0, i32 1
  %15243 = getelementptr inbounds %struct.Reg, %struct.Reg* %15242, i32 0, i32 0
  %RAX.i330 = bitcast %union.anon* %15243 to i64*
  %15244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15245 = getelementptr inbounds %struct.GPR, %struct.GPR* %15244, i32 0, i32 15
  %15246 = getelementptr inbounds %struct.Reg, %struct.Reg* %15245, i32 0, i32 0
  %RBP.i331 = bitcast %union.anon* %15246 to i64*
  %15247 = load i64, i64* %RBP.i331
  %15248 = load i64, i64* %RAX.i330
  %15249 = mul i64 %15248, 4
  %15250 = add i64 %15247, -1568
  %15251 = add i64 %15250, %15249
  %15252 = load i64, i64* %PC.i329
  %15253 = add i64 %15252, 8
  store i64 %15253, i64* %PC.i329
  %15254 = inttoptr i64 %15251 to i32*
  %15255 = load i32, i32* %15254
  %15256 = sext i32 %15255 to i64
  store i64 %15256, i64* %RAX.i330, align 8
  store %struct.Memory* %loadMem_4015a6, %struct.Memory** %MEMORY
  %loadMem_4015ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %15257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15258 = getelementptr inbounds %struct.GPR, %struct.GPR* %15257, i32 0, i32 33
  %15259 = getelementptr inbounds %struct.Reg, %struct.Reg* %15258, i32 0, i32 0
  %PC.i326 = bitcast %union.anon* %15259 to i64*
  %15260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15261 = getelementptr inbounds %struct.GPR, %struct.GPR* %15260, i32 0, i32 1
  %15262 = getelementptr inbounds %struct.Reg, %struct.Reg* %15261, i32 0, i32 0
  %RAX.i327 = bitcast %union.anon* %15262 to i64*
  %15263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15264 = getelementptr inbounds %struct.GPR, %struct.GPR* %15263, i32 0, i32 15
  %15265 = getelementptr inbounds %struct.Reg, %struct.Reg* %15264, i32 0, i32 0
  %RBP.i328 = bitcast %union.anon* %15265 to i64*
  %15266 = load i64, i64* %RBP.i328
  %15267 = load i64, i64* %RAX.i327
  %15268 = mul i64 %15267, 4
  %15269 = add i64 %15266, -2640
  %15270 = add i64 %15269, %15268
  %15271 = load i64, i64* %PC.i326
  %15272 = add i64 %15271, 8
  store i64 %15272, i64* %PC.i326
  %15273 = inttoptr i64 %15270 to i32*
  %15274 = load i32, i32* %15273
  %15275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15275, align 1
  %15276 = and i32 %15274, 255
  %15277 = call i32 @llvm.ctpop.i32(i32 %15276)
  %15278 = trunc i32 %15277 to i8
  %15279 = and i8 %15278, 1
  %15280 = xor i8 %15279, 1
  %15281 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15280, i8* %15281, align 1
  %15282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %15282, align 1
  %15283 = icmp eq i32 %15274, 0
  %15284 = zext i1 %15283 to i8
  %15285 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15284, i8* %15285, align 1
  %15286 = lshr i32 %15274, 31
  %15287 = trunc i32 %15286 to i8
  %15288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15287, i8* %15288, align 1
  %15289 = lshr i32 %15274, 31
  %15290 = xor i32 %15286, %15289
  %15291 = add i32 %15290, %15289
  %15292 = icmp eq i32 %15291, 2
  %15293 = zext i1 %15292 to i8
  %15294 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15293, i8* %15294, align 1
  store %struct.Memory* %loadMem_4015ae, %struct.Memory** %MEMORY
  %loadMem_4015b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15296 = getelementptr inbounds %struct.GPR, %struct.GPR* %15295, i32 0, i32 33
  %15297 = getelementptr inbounds %struct.Reg, %struct.Reg* %15296, i32 0, i32 0
  %PC.i325 = bitcast %union.anon* %15297 to i64*
  %15298 = load i64, i64* %PC.i325
  %15299 = add i64 %15298, 325
  %15300 = load i64, i64* %PC.i325
  %15301 = add i64 %15300, 6
  %15302 = load i64, i64* %PC.i325
  %15303 = add i64 %15302, 6
  store i64 %15303, i64* %PC.i325
  %15304 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15305 = load i8, i8* %15304, align 1
  store i8 %15305, i8* %BRANCH_TAKEN, align 1
  %15306 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15307 = icmp ne i8 %15305, 0
  %15308 = select i1 %15307, i64 %15299, i64 %15301
  store i64 %15308, i64* %15306, align 8
  store %struct.Memory* %loadMem_4015b6, %struct.Memory** %MEMORY
  %loadBr_4015b6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4015b6 = icmp eq i8 %loadBr_4015b6, 1
  br i1 %cmpBr_4015b6, label %block_.L_4016fb, label %block_4015bc

block_4015bc:                                     ; preds = %block_.L_4015a2
  %loadMem_4015bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %15309 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15310 = getelementptr inbounds %struct.GPR, %struct.GPR* %15309, i32 0, i32 33
  %15311 = getelementptr inbounds %struct.Reg, %struct.Reg* %15310, i32 0, i32 0
  %PC.i322 = bitcast %union.anon* %15311 to i64*
  %15312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15313 = getelementptr inbounds %struct.GPR, %struct.GPR* %15312, i32 0, i32 1
  %15314 = getelementptr inbounds %struct.Reg, %struct.Reg* %15313, i32 0, i32 0
  %RAX.i323 = bitcast %union.anon* %15314 to i64*
  %15315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15316 = getelementptr inbounds %struct.GPR, %struct.GPR* %15315, i32 0, i32 15
  %15317 = getelementptr inbounds %struct.Reg, %struct.Reg* %15316, i32 0, i32 0
  %RBP.i324 = bitcast %union.anon* %15317 to i64*
  %15318 = load i64, i64* %RBP.i324
  %15319 = sub i64 %15318, 4
  %15320 = load i64, i64* %PC.i322
  %15321 = add i64 %15320, 4
  store i64 %15321, i64* %PC.i322
  %15322 = inttoptr i64 %15319 to i32*
  %15323 = load i32, i32* %15322
  %15324 = sext i32 %15323 to i64
  store i64 %15324, i64* %RAX.i323, align 8
  store %struct.Memory* %loadMem_4015bc, %struct.Memory** %MEMORY
  %loadMem_4015c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15326 = getelementptr inbounds %struct.GPR, %struct.GPR* %15325, i32 0, i32 33
  %15327 = getelementptr inbounds %struct.Reg, %struct.Reg* %15326, i32 0, i32 0
  %PC.i319 = bitcast %union.anon* %15327 to i64*
  %15328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15329 = getelementptr inbounds %struct.GPR, %struct.GPR* %15328, i32 0, i32 1
  %15330 = getelementptr inbounds %struct.Reg, %struct.Reg* %15329, i32 0, i32 0
  %RAX.i320 = bitcast %union.anon* %15330 to i64*
  %15331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15332 = getelementptr inbounds %struct.GPR, %struct.GPR* %15331, i32 0, i32 15
  %15333 = getelementptr inbounds %struct.Reg, %struct.Reg* %15332, i32 0, i32 0
  %RBP.i321 = bitcast %union.anon* %15333 to i64*
  %15334 = load i64, i64* %RBP.i321
  %15335 = load i64, i64* %RAX.i320
  %15336 = mul i64 %15335, 4
  %15337 = add i64 %15334, -1568
  %15338 = add i64 %15337, %15336
  %15339 = load i64, i64* %PC.i319
  %15340 = add i64 %15339, 8
  store i64 %15340, i64* %PC.i319
  %15341 = inttoptr i64 %15338 to i32*
  %15342 = load i32, i32* %15341
  %15343 = sext i32 %15342 to i64
  store i64 %15343, i64* %RAX.i320, align 8
  store %struct.Memory* %loadMem_4015c0, %struct.Memory** %MEMORY
  %loadMem_4015c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15345 = getelementptr inbounds %struct.GPR, %struct.GPR* %15344, i32 0, i32 33
  %15346 = getelementptr inbounds %struct.Reg, %struct.Reg* %15345, i32 0, i32 0
  %PC.i316 = bitcast %union.anon* %15346 to i64*
  %15347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15348 = getelementptr inbounds %struct.GPR, %struct.GPR* %15347, i32 0, i32 1
  %15349 = getelementptr inbounds %struct.Reg, %struct.Reg* %15348, i32 0, i32 0
  %RAX.i317 = bitcast %union.anon* %15349 to i64*
  %15350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15351 = getelementptr inbounds %struct.GPR, %struct.GPR* %15350, i32 0, i32 15
  %15352 = getelementptr inbounds %struct.Reg, %struct.Reg* %15351, i32 0, i32 0
  %RBP.i318 = bitcast %union.anon* %15352 to i64*
  %15353 = load i64, i64* %RBP.i318
  %15354 = load i64, i64* %RAX.i317
  %15355 = mul i64 %15354, 4
  %15356 = add i64 %15353, -2640
  %15357 = add i64 %15356, %15355
  %15358 = load i64, i64* %PC.i316
  %15359 = add i64 %15358, 8
  store i64 %15359, i64* %PC.i316
  %15360 = inttoptr i64 %15357 to i32*
  %15361 = load i32, i32* %15360
  %15362 = sext i32 %15361 to i64
  store i64 %15362, i64* %RAX.i317, align 8
  store %struct.Memory* %loadMem_4015c8, %struct.Memory** %MEMORY
  %loadMem_4015d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15364 = getelementptr inbounds %struct.GPR, %struct.GPR* %15363, i32 0, i32 33
  %15365 = getelementptr inbounds %struct.Reg, %struct.Reg* %15364, i32 0, i32 0
  %PC.i313 = bitcast %union.anon* %15365 to i64*
  %15366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15367 = getelementptr inbounds %struct.GPR, %struct.GPR* %15366, i32 0, i32 1
  %15368 = getelementptr inbounds %struct.Reg, %struct.Reg* %15367, i32 0, i32 0
  %RAX.i314 = bitcast %union.anon* %15368 to i64*
  %15369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15370 = getelementptr inbounds %struct.GPR, %struct.GPR* %15369, i32 0, i32 5
  %15371 = getelementptr inbounds %struct.Reg, %struct.Reg* %15370, i32 0, i32 0
  %RCX.i315 = bitcast %union.anon* %15371 to i64*
  %15372 = load i64, i64* %RAX.i314
  %15373 = mul i64 %15372, 4
  %15374 = add i64 %15373, 6304896
  %15375 = load i64, i64* %PC.i313
  %15376 = add i64 %15375, 7
  store i64 %15376, i64* %PC.i313
  %15377 = inttoptr i64 %15374 to i32*
  %15378 = load i32, i32* %15377
  %15379 = zext i32 %15378 to i64
  store i64 %15379, i64* %RCX.i315, align 8
  store %struct.Memory* %loadMem_4015d0, %struct.Memory** %MEMORY
  %loadMem_4015d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15381 = getelementptr inbounds %struct.GPR, %struct.GPR* %15380, i32 0, i32 33
  %15382 = getelementptr inbounds %struct.Reg, %struct.Reg* %15381, i32 0, i32 0
  %PC.i310 = bitcast %union.anon* %15382 to i64*
  %15383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15384 = getelementptr inbounds %struct.GPR, %struct.GPR* %15383, i32 0, i32 1
  %15385 = getelementptr inbounds %struct.Reg, %struct.Reg* %15384, i32 0, i32 0
  %RAX.i311 = bitcast %union.anon* %15385 to i64*
  %15386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15387 = getelementptr inbounds %struct.GPR, %struct.GPR* %15386, i32 0, i32 15
  %15388 = getelementptr inbounds %struct.Reg, %struct.Reg* %15387, i32 0, i32 0
  %RBP.i312 = bitcast %union.anon* %15388 to i64*
  %15389 = load i64, i64* %RBP.i312
  %15390 = sub i64 %15389, 4
  %15391 = load i64, i64* %PC.i310
  %15392 = add i64 %15391, 4
  store i64 %15392, i64* %PC.i310
  %15393 = inttoptr i64 %15390 to i32*
  %15394 = load i32, i32* %15393
  %15395 = sext i32 %15394 to i64
  store i64 %15395, i64* %RAX.i311, align 8
  store %struct.Memory* %loadMem_4015d7, %struct.Memory** %MEMORY
  %loadMem_4015db = load %struct.Memory*, %struct.Memory** %MEMORY
  %15396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15397 = getelementptr inbounds %struct.GPR, %struct.GPR* %15396, i32 0, i32 33
  %15398 = getelementptr inbounds %struct.Reg, %struct.Reg* %15397, i32 0, i32 0
  %PC.i307 = bitcast %union.anon* %15398 to i64*
  %15399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15400 = getelementptr inbounds %struct.GPR, %struct.GPR* %15399, i32 0, i32 1
  %15401 = getelementptr inbounds %struct.Reg, %struct.Reg* %15400, i32 0, i32 0
  %RAX.i308 = bitcast %union.anon* %15401 to i64*
  %15402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15403 = getelementptr inbounds %struct.GPR, %struct.GPR* %15402, i32 0, i32 15
  %15404 = getelementptr inbounds %struct.Reg, %struct.Reg* %15403, i32 0, i32 0
  %RBP.i309 = bitcast %union.anon* %15404 to i64*
  %15405 = load i64, i64* %RBP.i309
  %15406 = load i64, i64* %RAX.i308
  %15407 = mul i64 %15406, 4
  %15408 = add i64 %15405, -1568
  %15409 = add i64 %15408, %15407
  %15410 = load i64, i64* %PC.i307
  %15411 = add i64 %15410, 8
  store i64 %15411, i64* %PC.i307
  %15412 = inttoptr i64 %15409 to i32*
  %15413 = load i32, i32* %15412
  %15414 = sext i32 %15413 to i64
  store i64 %15414, i64* %RAX.i308, align 8
  store %struct.Memory* %loadMem_4015db, %struct.Memory** %MEMORY
  %loadMem_4015e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15416 = getelementptr inbounds %struct.GPR, %struct.GPR* %15415, i32 0, i32 33
  %15417 = getelementptr inbounds %struct.Reg, %struct.Reg* %15416, i32 0, i32 0
  %PC.i303 = bitcast %union.anon* %15417 to i64*
  %15418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15419 = getelementptr inbounds %struct.GPR, %struct.GPR* %15418, i32 0, i32 5
  %15420 = getelementptr inbounds %struct.Reg, %struct.Reg* %15419, i32 0, i32 0
  %ECX.i304 = bitcast %union.anon* %15420 to i32*
  %15421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15422 = getelementptr inbounds %struct.GPR, %struct.GPR* %15421, i32 0, i32 1
  %15423 = getelementptr inbounds %struct.Reg, %struct.Reg* %15422, i32 0, i32 0
  %RAX.i305 = bitcast %union.anon* %15423 to i64*
  %15424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15425 = getelementptr inbounds %struct.GPR, %struct.GPR* %15424, i32 0, i32 15
  %15426 = getelementptr inbounds %struct.Reg, %struct.Reg* %15425, i32 0, i32 0
  %RBP.i306 = bitcast %union.anon* %15426 to i64*
  %15427 = load i64, i64* %RBP.i306
  %15428 = load i64, i64* %RAX.i305
  %15429 = mul i64 %15428, 4
  %15430 = add i64 %15427, -2640
  %15431 = add i64 %15430, %15429
  %15432 = load i32, i32* %ECX.i304
  %15433 = zext i32 %15432 to i64
  %15434 = load i64, i64* %PC.i303
  %15435 = add i64 %15434, 7
  store i64 %15435, i64* %PC.i303
  %15436 = inttoptr i64 %15431 to i32*
  store i32 %15432, i32* %15436
  store %struct.Memory* %loadMem_4015e3, %struct.Memory** %MEMORY
  %loadMem_4015ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %15437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15438 = getelementptr inbounds %struct.GPR, %struct.GPR* %15437, i32 0, i32 33
  %15439 = getelementptr inbounds %struct.Reg, %struct.Reg* %15438, i32 0, i32 0
  %PC.i301 = bitcast %union.anon* %15439 to i64*
  %15440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15441 = getelementptr inbounds %struct.GPR, %struct.GPR* %15440, i32 0, i32 15
  %15442 = getelementptr inbounds %struct.Reg, %struct.Reg* %15441, i32 0, i32 0
  %RBP.i302 = bitcast %union.anon* %15442 to i64*
  %15443 = load i64, i64* %RBP.i302
  %15444 = sub i64 %15443, 16
  %15445 = load i64, i64* %PC.i301
  %15446 = add i64 %15445, 7
  store i64 %15446, i64* %PC.i301
  %15447 = inttoptr i64 %15444 to i32*
  store i32 0, i32* %15447
  store %struct.Memory* %loadMem_4015ea, %struct.Memory** %MEMORY
  %loadMem_4015f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15449 = getelementptr inbounds %struct.GPR, %struct.GPR* %15448, i32 0, i32 33
  %15450 = getelementptr inbounds %struct.Reg, %struct.Reg* %15449, i32 0, i32 0
  %PC.i299 = bitcast %union.anon* %15450 to i64*
  %15451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15452 = getelementptr inbounds %struct.GPR, %struct.GPR* %15451, i32 0, i32 15
  %15453 = getelementptr inbounds %struct.Reg, %struct.Reg* %15452, i32 0, i32 0
  %RBP.i300 = bitcast %union.anon* %15453 to i64*
  %15454 = load i64, i64* %RBP.i300
  %15455 = sub i64 %15454, 8
  %15456 = load i64, i64* %PC.i299
  %15457 = add i64 %15456, 7
  store i64 %15457, i64* %PC.i299
  %15458 = inttoptr i64 %15455 to i32*
  store i32 0, i32* %15458
  store %struct.Memory* %loadMem_4015f1, %struct.Memory** %MEMORY
  br label %block_.L_4015f8

block_.L_4015f8:                                  ; preds = %block_.L_401666, %block_4015bc
  %loadMem_4015f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15460 = getelementptr inbounds %struct.GPR, %struct.GPR* %15459, i32 0, i32 33
  %15461 = getelementptr inbounds %struct.Reg, %struct.Reg* %15460, i32 0, i32 0
  %PC.i296 = bitcast %union.anon* %15461 to i64*
  %15462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15463 = getelementptr inbounds %struct.GPR, %struct.GPR* %15462, i32 0, i32 1
  %15464 = getelementptr inbounds %struct.Reg, %struct.Reg* %15463, i32 0, i32 0
  %RAX.i297 = bitcast %union.anon* %15464 to i64*
  %15465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15466 = getelementptr inbounds %struct.GPR, %struct.GPR* %15465, i32 0, i32 15
  %15467 = getelementptr inbounds %struct.Reg, %struct.Reg* %15466, i32 0, i32 0
  %RBP.i298 = bitcast %union.anon* %15467 to i64*
  %15468 = load i64, i64* %RBP.i298
  %15469 = sub i64 %15468, 8
  %15470 = load i64, i64* %PC.i296
  %15471 = add i64 %15470, 3
  store i64 %15471, i64* %PC.i296
  %15472 = inttoptr i64 %15469 to i32*
  %15473 = load i32, i32* %15472
  %15474 = zext i32 %15473 to i64
  store i64 %15474, i64* %RAX.i297, align 8
  store %struct.Memory* %loadMem_4015f8, %struct.Memory** %MEMORY
  %loadMem_4015fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %15475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15476 = getelementptr inbounds %struct.GPR, %struct.GPR* %15475, i32 0, i32 33
  %15477 = getelementptr inbounds %struct.Reg, %struct.Reg* %15476, i32 0, i32 0
  %PC.i293 = bitcast %union.anon* %15477 to i64*
  %15478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15479 = getelementptr inbounds %struct.GPR, %struct.GPR* %15478, i32 0, i32 5
  %15480 = getelementptr inbounds %struct.Reg, %struct.Reg* %15479, i32 0, i32 0
  %RCX.i294 = bitcast %union.anon* %15480 to i64*
  %15481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15482 = getelementptr inbounds %struct.GPR, %struct.GPR* %15481, i32 0, i32 15
  %15483 = getelementptr inbounds %struct.Reg, %struct.Reg* %15482, i32 0, i32 0
  %RBP.i295 = bitcast %union.anon* %15483 to i64*
  %15484 = load i64, i64* %RBP.i295
  %15485 = sub i64 %15484, 12
  %15486 = load i64, i64* %PC.i293
  %15487 = add i64 %15486, 4
  store i64 %15487, i64* %PC.i293
  %15488 = inttoptr i64 %15485 to i32*
  %15489 = load i32, i32* %15488
  %15490 = sext i32 %15489 to i64
  store i64 %15490, i64* %RCX.i294, align 8
  store %struct.Memory* %loadMem_4015fb, %struct.Memory** %MEMORY
  %loadMem_4015ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %15491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15492 = getelementptr inbounds %struct.GPR, %struct.GPR* %15491, i32 0, i32 33
  %15493 = getelementptr inbounds %struct.Reg, %struct.Reg* %15492, i32 0, i32 0
  %PC.i289 = bitcast %union.anon* %15493 to i64*
  %15494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15495 = getelementptr inbounds %struct.GPR, %struct.GPR* %15494, i32 0, i32 1
  %15496 = getelementptr inbounds %struct.Reg, %struct.Reg* %15495, i32 0, i32 0
  %EAX.i290 = bitcast %union.anon* %15496 to i32*
  %15497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15498 = getelementptr inbounds %struct.GPR, %struct.GPR* %15497, i32 0, i32 5
  %15499 = getelementptr inbounds %struct.Reg, %struct.Reg* %15498, i32 0, i32 0
  %RCX.i291 = bitcast %union.anon* %15499 to i64*
  %15500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15501 = getelementptr inbounds %struct.GPR, %struct.GPR* %15500, i32 0, i32 15
  %15502 = getelementptr inbounds %struct.Reg, %struct.Reg* %15501, i32 0, i32 0
  %RBP.i292 = bitcast %union.anon* %15502 to i64*
  %15503 = load i32, i32* %EAX.i290
  %15504 = zext i32 %15503 to i64
  %15505 = load i64, i64* %RBP.i292
  %15506 = load i64, i64* %RCX.i291
  %15507 = mul i64 %15506, 4
  %15508 = add i64 %15505, -1328
  %15509 = add i64 %15508, %15507
  %15510 = load i64, i64* %PC.i289
  %15511 = add i64 %15510, 7
  store i64 %15511, i64* %PC.i289
  %15512 = inttoptr i64 %15509 to i32*
  %15513 = load i32, i32* %15512
  %15514 = sub i32 %15503, %15513
  %15515 = icmp ult i32 %15503, %15513
  %15516 = zext i1 %15515 to i8
  %15517 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15516, i8* %15517, align 1
  %15518 = and i32 %15514, 255
  %15519 = call i32 @llvm.ctpop.i32(i32 %15518)
  %15520 = trunc i32 %15519 to i8
  %15521 = and i8 %15520, 1
  %15522 = xor i8 %15521, 1
  %15523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15522, i8* %15523, align 1
  %15524 = xor i32 %15513, %15503
  %15525 = xor i32 %15524, %15514
  %15526 = lshr i32 %15525, 4
  %15527 = trunc i32 %15526 to i8
  %15528 = and i8 %15527, 1
  %15529 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15528, i8* %15529, align 1
  %15530 = icmp eq i32 %15514, 0
  %15531 = zext i1 %15530 to i8
  %15532 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15531, i8* %15532, align 1
  %15533 = lshr i32 %15514, 31
  %15534 = trunc i32 %15533 to i8
  %15535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15534, i8* %15535, align 1
  %15536 = lshr i32 %15503, 31
  %15537 = lshr i32 %15513, 31
  %15538 = xor i32 %15537, %15536
  %15539 = xor i32 %15533, %15536
  %15540 = add i32 %15539, %15538
  %15541 = icmp eq i32 %15540, 2
  %15542 = zext i1 %15541 to i8
  %15543 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15542, i8* %15543, align 1
  store %struct.Memory* %loadMem_4015ff, %struct.Memory** %MEMORY
  %loadMem_401606 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15545 = getelementptr inbounds %struct.GPR, %struct.GPR* %15544, i32 0, i32 33
  %15546 = getelementptr inbounds %struct.Reg, %struct.Reg* %15545, i32 0, i32 0
  %PC.i288 = bitcast %union.anon* %15546 to i64*
  %15547 = load i64, i64* %PC.i288
  %15548 = add i64 %15547, 110
  %15549 = load i64, i64* %PC.i288
  %15550 = add i64 %15549, 6
  %15551 = load i64, i64* %PC.i288
  %15552 = add i64 %15551, 6
  store i64 %15552, i64* %PC.i288
  %15553 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %15554 = load i8, i8* %15553, align 1
  %15555 = icmp ne i8 %15554, 0
  %15556 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %15557 = load i8, i8* %15556, align 1
  %15558 = icmp ne i8 %15557, 0
  %15559 = xor i1 %15555, %15558
  %15560 = xor i1 %15559, true
  %15561 = zext i1 %15560 to i8
  store i8 %15561, i8* %BRANCH_TAKEN, align 1
  %15562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15563 = select i1 %15559, i64 %15550, i64 %15548
  store i64 %15563, i64* %15562, align 8
  store %struct.Memory* %loadMem_401606, %struct.Memory** %MEMORY
  %loadBr_401606 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_401606 = icmp eq i8 %loadBr_401606, 1
  br i1 %cmpBr_401606, label %block_.L_401674, label %block_40160c

block_40160c:                                     ; preds = %block_.L_4015f8
  %loadMem_40160c = load %struct.Memory*, %struct.Memory** %MEMORY
  %15564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15565 = getelementptr inbounds %struct.GPR, %struct.GPR* %15564, i32 0, i32 33
  %15566 = getelementptr inbounds %struct.Reg, %struct.Reg* %15565, i32 0, i32 0
  %PC.i285 = bitcast %union.anon* %15566 to i64*
  %15567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15568 = getelementptr inbounds %struct.GPR, %struct.GPR* %15567, i32 0, i32 1
  %15569 = getelementptr inbounds %struct.Reg, %struct.Reg* %15568, i32 0, i32 0
  %RAX.i286 = bitcast %union.anon* %15569 to i64*
  %15570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15571 = getelementptr inbounds %struct.GPR, %struct.GPR* %15570, i32 0, i32 15
  %15572 = getelementptr inbounds %struct.Reg, %struct.Reg* %15571, i32 0, i32 0
  %RBP.i287 = bitcast %union.anon* %15572 to i64*
  %15573 = load i64, i64* %RBP.i287
  %15574 = sub i64 %15573, 8
  %15575 = load i64, i64* %PC.i285
  %15576 = add i64 %15575, 3
  store i64 %15576, i64* %PC.i285
  %15577 = inttoptr i64 %15574 to i32*
  %15578 = load i32, i32* %15577
  %15579 = zext i32 %15578 to i64
  store i64 %15579, i64* %RAX.i286, align 8
  store %struct.Memory* %loadMem_40160c, %struct.Memory** %MEMORY
  %loadMem_40160f = load %struct.Memory*, %struct.Memory** %MEMORY
  %15580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15581 = getelementptr inbounds %struct.GPR, %struct.GPR* %15580, i32 0, i32 33
  %15582 = getelementptr inbounds %struct.Reg, %struct.Reg* %15581, i32 0, i32 0
  %PC.i282 = bitcast %union.anon* %15582 to i64*
  %15583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15584 = getelementptr inbounds %struct.GPR, %struct.GPR* %15583, i32 0, i32 1
  %15585 = getelementptr inbounds %struct.Reg, %struct.Reg* %15584, i32 0, i32 0
  %EAX.i283 = bitcast %union.anon* %15585 to i32*
  %15586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15587 = getelementptr inbounds %struct.GPR, %struct.GPR* %15586, i32 0, i32 15
  %15588 = getelementptr inbounds %struct.Reg, %struct.Reg* %15587, i32 0, i32 0
  %RBP.i284 = bitcast %union.anon* %15588 to i64*
  %15589 = load i32, i32* %EAX.i283
  %15590 = zext i32 %15589 to i64
  %15591 = load i64, i64* %RBP.i284
  %15592 = sub i64 %15591, 4
  %15593 = load i64, i64* %PC.i282
  %15594 = add i64 %15593, 3
  store i64 %15594, i64* %PC.i282
  %15595 = inttoptr i64 %15592 to i32*
  %15596 = load i32, i32* %15595
  %15597 = sub i32 %15589, %15596
  %15598 = icmp ult i32 %15589, %15596
  %15599 = zext i1 %15598 to i8
  %15600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15599, i8* %15600, align 1
  %15601 = and i32 %15597, 255
  %15602 = call i32 @llvm.ctpop.i32(i32 %15601)
  %15603 = trunc i32 %15602 to i8
  %15604 = and i8 %15603, 1
  %15605 = xor i8 %15604, 1
  %15606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15605, i8* %15606, align 1
  %15607 = xor i32 %15596, %15589
  %15608 = xor i32 %15607, %15597
  %15609 = lshr i32 %15608, 4
  %15610 = trunc i32 %15609 to i8
  %15611 = and i8 %15610, 1
  %15612 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15611, i8* %15612, align 1
  %15613 = icmp eq i32 %15597, 0
  %15614 = zext i1 %15613 to i8
  %15615 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15614, i8* %15615, align 1
  %15616 = lshr i32 %15597, 31
  %15617 = trunc i32 %15616 to i8
  %15618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15617, i8* %15618, align 1
  %15619 = lshr i32 %15589, 31
  %15620 = lshr i32 %15596, 31
  %15621 = xor i32 %15620, %15619
  %15622 = xor i32 %15616, %15619
  %15623 = add i32 %15622, %15621
  %15624 = icmp eq i32 %15623, 2
  %15625 = zext i1 %15624 to i8
  %15626 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15625, i8* %15626, align 1
  store %struct.Memory* %loadMem_40160f, %struct.Memory** %MEMORY
  %loadMem_401612 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15628 = getelementptr inbounds %struct.GPR, %struct.GPR* %15627, i32 0, i32 33
  %15629 = getelementptr inbounds %struct.Reg, %struct.Reg* %15628, i32 0, i32 0
  %PC.i281 = bitcast %union.anon* %15629 to i64*
  %15630 = load i64, i64* %PC.i281
  %15631 = add i64 %15630, 79
  %15632 = load i64, i64* %PC.i281
  %15633 = add i64 %15632, 6
  %15634 = load i64, i64* %PC.i281
  %15635 = add i64 %15634, 6
  store i64 %15635, i64* %PC.i281
  %15636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15637 = load i8, i8* %15636, align 1
  store i8 %15637, i8* %BRANCH_TAKEN, align 1
  %15638 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15639 = icmp ne i8 %15637, 0
  %15640 = select i1 %15639, i64 %15631, i64 %15633
  store i64 %15640, i64* %15638, align 8
  store %struct.Memory* %loadMem_401612, %struct.Memory** %MEMORY
  %loadBr_401612 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_401612 = icmp eq i8 %loadBr_401612, 1
  br i1 %cmpBr_401612, label %block_.L_401661, label %block_401618

block_401618:                                     ; preds = %block_40160c
  %loadMem_401618 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15641 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15642 = getelementptr inbounds %struct.GPR, %struct.GPR* %15641, i32 0, i32 33
  %15643 = getelementptr inbounds %struct.Reg, %struct.Reg* %15642, i32 0, i32 0
  %PC.i279 = bitcast %union.anon* %15643 to i64*
  %15644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15645 = getelementptr inbounds %struct.GPR, %struct.GPR* %15644, i32 0, i32 1
  %15646 = getelementptr inbounds %struct.Reg, %struct.Reg* %15645, i32 0, i32 0
  %RAX.i280 = bitcast %union.anon* %15646 to i64*
  %15647 = load i64, i64* %PC.i279
  %15648 = add i64 %15647, 5
  store i64 %15648, i64* %PC.i279
  store i64 255, i64* %RAX.i280, align 8
  store %struct.Memory* %loadMem_401618, %struct.Memory** %MEMORY
  %loadMem_40161d = load %struct.Memory*, %struct.Memory** %MEMORY
  %15649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15650 = getelementptr inbounds %struct.GPR, %struct.GPR* %15649, i32 0, i32 33
  %15651 = getelementptr inbounds %struct.Reg, %struct.Reg* %15650, i32 0, i32 0
  %PC.i276 = bitcast %union.anon* %15651 to i64*
  %15652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15653 = getelementptr inbounds %struct.GPR, %struct.GPR* %15652, i32 0, i32 5
  %15654 = getelementptr inbounds %struct.Reg, %struct.Reg* %15653, i32 0, i32 0
  %RCX.i277 = bitcast %union.anon* %15654 to i64*
  %15655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15656 = getelementptr inbounds %struct.GPR, %struct.GPR* %15655, i32 0, i32 15
  %15657 = getelementptr inbounds %struct.Reg, %struct.Reg* %15656, i32 0, i32 0
  %RBP.i278 = bitcast %union.anon* %15657 to i64*
  %15658 = load i64, i64* %RBP.i278
  %15659 = sub i64 %15658, 8
  %15660 = load i64, i64* %PC.i276
  %15661 = add i64 %15660, 4
  store i64 %15661, i64* %PC.i276
  %15662 = inttoptr i64 %15659 to i32*
  %15663 = load i32, i32* %15662
  %15664 = sext i32 %15663 to i64
  store i64 %15664, i64* %RCX.i277, align 8
  store %struct.Memory* %loadMem_40161d, %struct.Memory** %MEMORY
  %loadMem_401621 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15666 = getelementptr inbounds %struct.GPR, %struct.GPR* %15665, i32 0, i32 33
  %15667 = getelementptr inbounds %struct.Reg, %struct.Reg* %15666, i32 0, i32 0
  %PC.i272 = bitcast %union.anon* %15667 to i64*
  %15668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15669 = getelementptr inbounds %struct.GPR, %struct.GPR* %15668, i32 0, i32 5
  %15670 = getelementptr inbounds %struct.Reg, %struct.Reg* %15669, i32 0, i32 0
  %RCX.i273 = bitcast %union.anon* %15670 to i64*
  %15671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15672 = getelementptr inbounds %struct.GPR, %struct.GPR* %15671, i32 0, i32 7
  %15673 = getelementptr inbounds %struct.Reg, %struct.Reg* %15672, i32 0, i32 0
  %RDX.i274 = bitcast %union.anon* %15673 to i64*
  %15674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15675 = getelementptr inbounds %struct.GPR, %struct.GPR* %15674, i32 0, i32 15
  %15676 = getelementptr inbounds %struct.Reg, %struct.Reg* %15675, i32 0, i32 0
  %RBP.i275 = bitcast %union.anon* %15676 to i64*
  %15677 = load i64, i64* %RBP.i275
  %15678 = load i64, i64* %RCX.i273
  %15679 = mul i64 %15678, 4
  %15680 = add i64 %15677, -1568
  %15681 = add i64 %15680, %15679
  %15682 = load i64, i64* %PC.i272
  %15683 = add i64 %15682, 7
  store i64 %15683, i64* %PC.i272
  %15684 = inttoptr i64 %15681 to i32*
  %15685 = load i32, i32* %15684
  %15686 = zext i32 %15685 to i64
  store i64 %15686, i64* %RDX.i274, align 8
  store %struct.Memory* %loadMem_401621, %struct.Memory** %MEMORY
  %loadMem_401628 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15688 = getelementptr inbounds %struct.GPR, %struct.GPR* %15687, i32 0, i32 33
  %15689 = getelementptr inbounds %struct.Reg, %struct.Reg* %15688, i32 0, i32 0
  %PC.i269 = bitcast %union.anon* %15689 to i64*
  %15690 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15691 = getelementptr inbounds %struct.GPR, %struct.GPR* %15690, i32 0, i32 5
  %15692 = getelementptr inbounds %struct.Reg, %struct.Reg* %15691, i32 0, i32 0
  %RCX.i270 = bitcast %union.anon* %15692 to i64*
  %15693 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15694 = getelementptr inbounds %struct.GPR, %struct.GPR* %15693, i32 0, i32 15
  %15695 = getelementptr inbounds %struct.Reg, %struct.Reg* %15694, i32 0, i32 0
  %RBP.i271 = bitcast %union.anon* %15695 to i64*
  %15696 = load i64, i64* %RBP.i271
  %15697 = sub i64 %15696, 4
  %15698 = load i64, i64* %PC.i269
  %15699 = add i64 %15698, 4
  store i64 %15699, i64* %PC.i269
  %15700 = inttoptr i64 %15697 to i32*
  %15701 = load i32, i32* %15700
  %15702 = sext i32 %15701 to i64
  store i64 %15702, i64* %RCX.i270, align 8
  store %struct.Memory* %loadMem_401628, %struct.Memory** %MEMORY
  %loadMem_40162c = load %struct.Memory*, %struct.Memory** %MEMORY
  %15703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15704 = getelementptr inbounds %struct.GPR, %struct.GPR* %15703, i32 0, i32 33
  %15705 = getelementptr inbounds %struct.Reg, %struct.Reg* %15704, i32 0, i32 0
  %PC.i265 = bitcast %union.anon* %15705 to i64*
  %15706 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15707 = getelementptr inbounds %struct.GPR, %struct.GPR* %15706, i32 0, i32 5
  %15708 = getelementptr inbounds %struct.Reg, %struct.Reg* %15707, i32 0, i32 0
  %RCX.i266 = bitcast %union.anon* %15708 to i64*
  %15709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15710 = getelementptr inbounds %struct.GPR, %struct.GPR* %15709, i32 0, i32 7
  %15711 = getelementptr inbounds %struct.Reg, %struct.Reg* %15710, i32 0, i32 0
  %RDX.i267 = bitcast %union.anon* %15711 to i64*
  %15712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15713 = getelementptr inbounds %struct.GPR, %struct.GPR* %15712, i32 0, i32 15
  %15714 = getelementptr inbounds %struct.Reg, %struct.Reg* %15713, i32 0, i32 0
  %RBP.i268 = bitcast %union.anon* %15714 to i64*
  %15715 = load i64, i64* %RDX.i267
  %15716 = load i64, i64* %RBP.i268
  %15717 = load i64, i64* %RCX.i266
  %15718 = mul i64 %15717, 4
  %15719 = add i64 %15716, -1536
  %15720 = add i64 %15719, %15718
  %15721 = load i64, i64* %PC.i265
  %15722 = add i64 %15721, 7
  store i64 %15722, i64* %PC.i265
  %15723 = trunc i64 %15715 to i32
  %15724 = inttoptr i64 %15720 to i32*
  %15725 = load i32, i32* %15724
  %15726 = add i32 %15725, %15723
  %15727 = zext i32 %15726 to i64
  store i64 %15727, i64* %RDX.i267, align 8
  %15728 = icmp ult i32 %15726, %15723
  %15729 = icmp ult i32 %15726, %15725
  %15730 = or i1 %15728, %15729
  %15731 = zext i1 %15730 to i8
  %15732 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15731, i8* %15732, align 1
  %15733 = and i32 %15726, 255
  %15734 = call i32 @llvm.ctpop.i32(i32 %15733)
  %15735 = trunc i32 %15734 to i8
  %15736 = and i8 %15735, 1
  %15737 = xor i8 %15736, 1
  %15738 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15737, i8* %15738, align 1
  %15739 = xor i32 %15725, %15723
  %15740 = xor i32 %15739, %15726
  %15741 = lshr i32 %15740, 4
  %15742 = trunc i32 %15741 to i8
  %15743 = and i8 %15742, 1
  %15744 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15743, i8* %15744, align 1
  %15745 = icmp eq i32 %15726, 0
  %15746 = zext i1 %15745 to i8
  %15747 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15746, i8* %15747, align 1
  %15748 = lshr i32 %15726, 31
  %15749 = trunc i32 %15748 to i8
  %15750 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15749, i8* %15750, align 1
  %15751 = lshr i32 %15723, 31
  %15752 = lshr i32 %15725, 31
  %15753 = xor i32 %15748, %15751
  %15754 = xor i32 %15748, %15752
  %15755 = add i32 %15753, %15754
  %15756 = icmp eq i32 %15755, 2
  %15757 = zext i1 %15756 to i8
  %15758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15757, i8* %15758, align 1
  store %struct.Memory* %loadMem_40162c, %struct.Memory** %MEMORY
  %loadMem_401633 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15760 = getelementptr inbounds %struct.GPR, %struct.GPR* %15759, i32 0, i32 33
  %15761 = getelementptr inbounds %struct.Reg, %struct.Reg* %15760, i32 0, i32 0
  %PC.i262 = bitcast %union.anon* %15761 to i64*
  %15762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15763 = getelementptr inbounds %struct.GPR, %struct.GPR* %15762, i32 0, i32 1
  %15764 = getelementptr inbounds %struct.Reg, %struct.Reg* %15763, i32 0, i32 0
  %EAX.i263 = bitcast %union.anon* %15764 to i32*
  %15765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15766 = getelementptr inbounds %struct.GPR, %struct.GPR* %15765, i32 0, i32 15
  %15767 = getelementptr inbounds %struct.Reg, %struct.Reg* %15766, i32 0, i32 0
  %RBP.i264 = bitcast %union.anon* %15767 to i64*
  %15768 = load i64, i64* %RBP.i264
  %15769 = sub i64 %15768, 2728
  %15770 = load i32, i32* %EAX.i263
  %15771 = zext i32 %15770 to i64
  %15772 = load i64, i64* %PC.i262
  %15773 = add i64 %15772, 6
  store i64 %15773, i64* %PC.i262
  %15774 = inttoptr i64 %15769 to i32*
  store i32 %15770, i32* %15774
  store %struct.Memory* %loadMem_401633, %struct.Memory** %MEMORY
  %loadMem_401639 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15776 = getelementptr inbounds %struct.GPR, %struct.GPR* %15775, i32 0, i32 33
  %15777 = getelementptr inbounds %struct.Reg, %struct.Reg* %15776, i32 0, i32 0
  %PC.i259 = bitcast %union.anon* %15777 to i64*
  %15778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15779 = getelementptr inbounds %struct.GPR, %struct.GPR* %15778, i32 0, i32 7
  %15780 = getelementptr inbounds %struct.Reg, %struct.Reg* %15779, i32 0, i32 0
  %EDX.i260 = bitcast %union.anon* %15780 to i32*
  %15781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15782 = getelementptr inbounds %struct.GPR, %struct.GPR* %15781, i32 0, i32 1
  %15783 = getelementptr inbounds %struct.Reg, %struct.Reg* %15782, i32 0, i32 0
  %RAX.i261 = bitcast %union.anon* %15783 to i64*
  %15784 = load i32, i32* %EDX.i260
  %15785 = zext i32 %15784 to i64
  %15786 = load i64, i64* %PC.i259
  %15787 = add i64 %15786, 2
  store i64 %15787, i64* %PC.i259
  %15788 = and i64 %15785, 4294967295
  store i64 %15788, i64* %RAX.i261, align 8
  store %struct.Memory* %loadMem_401639, %struct.Memory** %MEMORY
  %loadMem_40163b = load %struct.Memory*, %struct.Memory** %MEMORY
  %15789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15790 = getelementptr inbounds %struct.GPR, %struct.GPR* %15789, i32 0, i32 33
  %15791 = getelementptr inbounds %struct.Reg, %struct.Reg* %15790, i32 0, i32 0
  %PC.i258 = bitcast %union.anon* %15791 to i64*
  %15792 = load i64, i64* %PC.i258
  %15793 = add i64 %15792, 1
  store i64 %15793, i64* %PC.i258
  %15794 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %15795 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %15796 = bitcast %union.anon* %15795 to i32*
  %15797 = load i32, i32* %15796, align 8
  %15798 = sext i32 %15797 to i64
  %15799 = lshr i64 %15798, 32
  store i64 %15799, i64* %15794, align 8
  store %struct.Memory* %loadMem_40163b, %struct.Memory** %MEMORY
  %loadMem_40163c = load %struct.Memory*, %struct.Memory** %MEMORY
  %15800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15801 = getelementptr inbounds %struct.GPR, %struct.GPR* %15800, i32 0, i32 33
  %15802 = getelementptr inbounds %struct.Reg, %struct.Reg* %15801, i32 0, i32 0
  %PC.i255 = bitcast %union.anon* %15802 to i64*
  %15803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15804 = getelementptr inbounds %struct.GPR, %struct.GPR* %15803, i32 0, i32 9
  %15805 = getelementptr inbounds %struct.Reg, %struct.Reg* %15804, i32 0, i32 0
  %RSI.i256 = bitcast %union.anon* %15805 to i64*
  %15806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15807 = getelementptr inbounds %struct.GPR, %struct.GPR* %15806, i32 0, i32 15
  %15808 = getelementptr inbounds %struct.Reg, %struct.Reg* %15807, i32 0, i32 0
  %RBP.i257 = bitcast %union.anon* %15808 to i64*
  %15809 = load i64, i64* %RBP.i257
  %15810 = sub i64 %15809, 2728
  %15811 = load i64, i64* %PC.i255
  %15812 = add i64 %15811, 6
  store i64 %15812, i64* %PC.i255
  %15813 = inttoptr i64 %15810 to i32*
  %15814 = load i32, i32* %15813
  %15815 = zext i32 %15814 to i64
  store i64 %15815, i64* %RSI.i256, align 8
  store %struct.Memory* %loadMem_40163c, %struct.Memory** %MEMORY
  %loadMem_401642 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15817 = getelementptr inbounds %struct.GPR, %struct.GPR* %15816, i32 0, i32 33
  %15818 = getelementptr inbounds %struct.Reg, %struct.Reg* %15817, i32 0, i32 0
  %PC.i252 = bitcast %union.anon* %15818 to i64*
  %15819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15820 = getelementptr inbounds %struct.GPR, %struct.GPR* %15819, i32 0, i32 9
  %15821 = getelementptr inbounds %struct.Reg, %struct.Reg* %15820, i32 0, i32 0
  %ESI.i = bitcast %union.anon* %15821 to i32*
  %15822 = load i32, i32* %ESI.i
  %15823 = zext i32 %15822 to i64
  %15824 = load i64, i64* %PC.i252
  %15825 = add i64 %15824, 2
  store i64 %15825, i64* %PC.i252
  %15826 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %15827 = bitcast %union.anon* %15826 to i32*
  %15828 = load i32, i32* %15827, align 8
  %15829 = zext i32 %15828 to i64
  %15830 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %15831 = bitcast %union.anon* %15830 to i32*
  %15832 = load i32, i32* %15831, align 8
  %15833 = zext i32 %15832 to i64
  %15834 = shl i64 %15823, 32
  %15835 = ashr exact i64 %15834, 32
  %15836 = shl i64 %15833, 32
  %15837 = or i64 %15836, %15829
  %15838 = sdiv i64 %15837, %15835
  %15839 = shl i64 %15838, 32
  %15840 = ashr exact i64 %15839, 32
  %15841 = icmp eq i64 %15838, %15840
  br i1 %15841, label %15846, label %15842

; <label>:15842:                                  ; preds = %block_401618
  %15843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15844 = load i64, i64* %15843, align 8
  %15845 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %15844, %struct.Memory* %loadMem_401642)
  br label %routine_idivl__esi.exit

; <label>:15846:                                  ; preds = %block_401618
  %15847 = srem i64 %15837, %15835
  %15848 = getelementptr inbounds %union.anon, %union.anon* %15826, i64 0, i32 0
  %15849 = and i64 %15838, 4294967295
  store i64 %15849, i64* %15848, align 8
  %15850 = getelementptr inbounds %union.anon, %union.anon* %15830, i64 0, i32 0
  %15851 = and i64 %15847, 4294967295
  store i64 %15851, i64* %15850, align 8
  %15852 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15852, align 1
  %15853 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %15853, align 1
  %15854 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %15854, align 1
  %15855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %15855, align 1
  %15856 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %15856, align 1
  %15857 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %15857, align 1
  br label %routine_idivl__esi.exit

routine_idivl__esi.exit:                          ; preds = %15842, %15846
  %15858 = phi %struct.Memory* [ %15845, %15842 ], [ %loadMem_401642, %15846 ]
  store %struct.Memory* %15858, %struct.Memory** %MEMORY
  %loadMem_401644 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15860 = getelementptr inbounds %struct.GPR, %struct.GPR* %15859, i32 0, i32 33
  %15861 = getelementptr inbounds %struct.Reg, %struct.Reg* %15860, i32 0, i32 0
  %PC.i249 = bitcast %union.anon* %15861 to i64*
  %15862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15863 = getelementptr inbounds %struct.GPR, %struct.GPR* %15862, i32 0, i32 7
  %15864 = getelementptr inbounds %struct.Reg, %struct.Reg* %15863, i32 0, i32 0
  %EDX.i250 = bitcast %union.anon* %15864 to i32*
  %15865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15866 = getelementptr inbounds %struct.GPR, %struct.GPR* %15865, i32 0, i32 5
  %15867 = getelementptr inbounds %struct.Reg, %struct.Reg* %15866, i32 0, i32 0
  %RCX.i251 = bitcast %union.anon* %15867 to i64*
  %15868 = load i32, i32* %EDX.i250
  %15869 = zext i32 %15868 to i64
  %15870 = load i64, i64* %PC.i249
  %15871 = add i64 %15870, 3
  store i64 %15871, i64* %PC.i249
  %15872 = shl i64 %15869, 32
  %15873 = ashr exact i64 %15872, 32
  store i64 %15873, i64* %RCX.i251, align 8
  store %struct.Memory* %loadMem_401644, %struct.Memory** %MEMORY
  %loadMem_401647 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15875 = getelementptr inbounds %struct.GPR, %struct.GPR* %15874, i32 0, i32 33
  %15876 = getelementptr inbounds %struct.Reg, %struct.Reg* %15875, i32 0, i32 0
  %PC.i246 = bitcast %union.anon* %15876 to i64*
  %15877 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15878 = getelementptr inbounds %struct.GPR, %struct.GPR* %15877, i32 0, i32 5
  %15879 = getelementptr inbounds %struct.Reg, %struct.Reg* %15878, i32 0, i32 0
  %RCX.i247 = bitcast %union.anon* %15879 to i64*
  %15880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15881 = getelementptr inbounds %struct.GPR, %struct.GPR* %15880, i32 0, i32 7
  %15882 = getelementptr inbounds %struct.Reg, %struct.Reg* %15881, i32 0, i32 0
  %RDX.i248 = bitcast %union.anon* %15882 to i64*
  %15883 = load i64, i64* %RCX.i247
  %15884 = mul i64 %15883, 4
  %15885 = add i64 %15884, 6305920
  %15886 = load i64, i64* %PC.i246
  %15887 = add i64 %15886, 7
  store i64 %15887, i64* %PC.i246
  %15888 = inttoptr i64 %15885 to i32*
  %15889 = load i32, i32* %15888
  %15890 = zext i32 %15889 to i64
  store i64 %15890, i64* %RDX.i248, align 8
  store %struct.Memory* %loadMem_401647, %struct.Memory** %MEMORY
  %loadMem_40164e = load %struct.Memory*, %struct.Memory** %MEMORY
  %15891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15892 = getelementptr inbounds %struct.GPR, %struct.GPR* %15891, i32 0, i32 33
  %15893 = getelementptr inbounds %struct.Reg, %struct.Reg* %15892, i32 0, i32 0
  %PC.i244 = bitcast %union.anon* %15893 to i64*
  %15894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15895 = getelementptr inbounds %struct.GPR, %struct.GPR* %15894, i32 0, i32 7
  %15896 = getelementptr inbounds %struct.Reg, %struct.Reg* %15895, i32 0, i32 0
  %RDX.i245 = bitcast %union.anon* %15896 to i64*
  %15897 = load i64, i64* %RDX.i245
  %15898 = load i64, i64* %PC.i244
  %15899 = add i64 %15898, 3
  store i64 %15899, i64* %PC.i244
  %15900 = xor i64 1, %15897
  %15901 = trunc i64 %15900 to i32
  %15902 = and i64 %15900, 4294967295
  store i64 %15902, i64* %RDX.i245, align 8
  %15903 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15903, align 1
  %15904 = and i32 %15901, 255
  %15905 = call i32 @llvm.ctpop.i32(i32 %15904)
  %15906 = trunc i32 %15905 to i8
  %15907 = and i8 %15906, 1
  %15908 = xor i8 %15907, 1
  %15909 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15908, i8* %15909, align 1
  %15910 = icmp eq i32 %15901, 0
  %15911 = zext i1 %15910 to i8
  %15912 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15911, i8* %15912, align 1
  %15913 = lshr i32 %15901, 31
  %15914 = trunc i32 %15913 to i8
  %15915 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15914, i8* %15915, align 1
  %15916 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %15916, align 1
  %15917 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %15917, align 1
  store %struct.Memory* %loadMem_40164e, %struct.Memory** %MEMORY
  %loadMem_401651 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15919 = getelementptr inbounds %struct.GPR, %struct.GPR* %15918, i32 0, i32 33
  %15920 = getelementptr inbounds %struct.Reg, %struct.Reg* %15919, i32 0, i32 0
  %PC.i241 = bitcast %union.anon* %15920 to i64*
  %15921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15922 = getelementptr inbounds %struct.GPR, %struct.GPR* %15921, i32 0, i32 7
  %15923 = getelementptr inbounds %struct.Reg, %struct.Reg* %15922, i32 0, i32 0
  %EDX.i242 = bitcast %union.anon* %15923 to i32*
  %15924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15925 = getelementptr inbounds %struct.GPR, %struct.GPR* %15924, i32 0, i32 5
  %15926 = getelementptr inbounds %struct.Reg, %struct.Reg* %15925, i32 0, i32 0
  %RCX.i243 = bitcast %union.anon* %15926 to i64*
  %15927 = load i32, i32* %EDX.i242
  %15928 = zext i32 %15927 to i64
  %15929 = load i64, i64* %PC.i241
  %15930 = add i64 %15929, 3
  store i64 %15930, i64* %PC.i241
  %15931 = shl i64 %15928, 32
  %15932 = ashr exact i64 %15931, 32
  store i64 %15932, i64* %RCX.i243, align 8
  store %struct.Memory* %loadMem_401651, %struct.Memory** %MEMORY
  %loadMem_401654 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15934 = getelementptr inbounds %struct.GPR, %struct.GPR* %15933, i32 0, i32 33
  %15935 = getelementptr inbounds %struct.Reg, %struct.Reg* %15934, i32 0, i32 0
  %PC.i238 = bitcast %union.anon* %15935 to i64*
  %15936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15937 = getelementptr inbounds %struct.GPR, %struct.GPR* %15936, i32 0, i32 5
  %15938 = getelementptr inbounds %struct.Reg, %struct.Reg* %15937, i32 0, i32 0
  %RCX.i239 = bitcast %union.anon* %15938 to i64*
  %15939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15940 = getelementptr inbounds %struct.GPR, %struct.GPR* %15939, i32 0, i32 7
  %15941 = getelementptr inbounds %struct.Reg, %struct.Reg* %15940, i32 0, i32 0
  %RDX.i240 = bitcast %union.anon* %15941 to i64*
  %15942 = load i64, i64* %RCX.i239
  %15943 = mul i64 %15942, 4
  %15944 = add i64 %15943, 6304896
  %15945 = load i64, i64* %PC.i238
  %15946 = add i64 %15945, 7
  store i64 %15946, i64* %PC.i238
  %15947 = inttoptr i64 %15944 to i32*
  %15948 = load i32, i32* %15947
  %15949 = zext i32 %15948 to i64
  store i64 %15949, i64* %RDX.i240, align 8
  store %struct.Memory* %loadMem_401654, %struct.Memory** %MEMORY
  %loadMem_40165b = load %struct.Memory*, %struct.Memory** %MEMORY
  %15950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15951 = getelementptr inbounds %struct.GPR, %struct.GPR* %15950, i32 0, i32 33
  %15952 = getelementptr inbounds %struct.Reg, %struct.Reg* %15951, i32 0, i32 0
  %PC.i235 = bitcast %union.anon* %15952 to i64*
  %15953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15954 = getelementptr inbounds %struct.GPR, %struct.GPR* %15953, i32 0, i32 7
  %15955 = getelementptr inbounds %struct.Reg, %struct.Reg* %15954, i32 0, i32 0
  %RDX.i236 = bitcast %union.anon* %15955 to i64*
  %15956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15957 = getelementptr inbounds %struct.GPR, %struct.GPR* %15956, i32 0, i32 15
  %15958 = getelementptr inbounds %struct.Reg, %struct.Reg* %15957, i32 0, i32 0
  %RBP.i237 = bitcast %union.anon* %15958 to i64*
  %15959 = load i64, i64* %RDX.i236
  %15960 = load i64, i64* %RBP.i237
  %15961 = sub i64 %15960, 16
  %15962 = load i64, i64* %PC.i235
  %15963 = add i64 %15962, 3
  store i64 %15963, i64* %PC.i235
  %15964 = trunc i64 %15959 to i32
  %15965 = inttoptr i64 %15961 to i32*
  %15966 = load i32, i32* %15965
  %15967 = add i32 %15966, %15964
  %15968 = zext i32 %15967 to i64
  store i64 %15968, i64* %RDX.i236, align 8
  %15969 = icmp ult i32 %15967, %15964
  %15970 = icmp ult i32 %15967, %15966
  %15971 = or i1 %15969, %15970
  %15972 = zext i1 %15971 to i8
  %15973 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15972, i8* %15973, align 1
  %15974 = and i32 %15967, 255
  %15975 = call i32 @llvm.ctpop.i32(i32 %15974)
  %15976 = trunc i32 %15975 to i8
  %15977 = and i8 %15976, 1
  %15978 = xor i8 %15977, 1
  %15979 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15978, i8* %15979, align 1
  %15980 = xor i32 %15966, %15964
  %15981 = xor i32 %15980, %15967
  %15982 = lshr i32 %15981, 4
  %15983 = trunc i32 %15982 to i8
  %15984 = and i8 %15983, 1
  %15985 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15984, i8* %15985, align 1
  %15986 = icmp eq i32 %15967, 0
  %15987 = zext i1 %15986 to i8
  %15988 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15987, i8* %15988, align 1
  %15989 = lshr i32 %15967, 31
  %15990 = trunc i32 %15989 to i8
  %15991 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15990, i8* %15991, align 1
  %15992 = lshr i32 %15964, 31
  %15993 = lshr i32 %15966, 31
  %15994 = xor i32 %15989, %15992
  %15995 = xor i32 %15989, %15993
  %15996 = add i32 %15994, %15995
  %15997 = icmp eq i32 %15996, 2
  %15998 = zext i1 %15997 to i8
  %15999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15998, i8* %15999, align 1
  store %struct.Memory* %loadMem_40165b, %struct.Memory** %MEMORY
  %loadMem_40165e = load %struct.Memory*, %struct.Memory** %MEMORY
  %16000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16001 = getelementptr inbounds %struct.GPR, %struct.GPR* %16000, i32 0, i32 33
  %16002 = getelementptr inbounds %struct.Reg, %struct.Reg* %16001, i32 0, i32 0
  %PC.i232 = bitcast %union.anon* %16002 to i64*
  %16003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16004 = getelementptr inbounds %struct.GPR, %struct.GPR* %16003, i32 0, i32 7
  %16005 = getelementptr inbounds %struct.Reg, %struct.Reg* %16004, i32 0, i32 0
  %EDX.i233 = bitcast %union.anon* %16005 to i32*
  %16006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16007 = getelementptr inbounds %struct.GPR, %struct.GPR* %16006, i32 0, i32 15
  %16008 = getelementptr inbounds %struct.Reg, %struct.Reg* %16007, i32 0, i32 0
  %RBP.i234 = bitcast %union.anon* %16008 to i64*
  %16009 = load i64, i64* %RBP.i234
  %16010 = sub i64 %16009, 16
  %16011 = load i32, i32* %EDX.i233
  %16012 = zext i32 %16011 to i64
  %16013 = load i64, i64* %PC.i232
  %16014 = add i64 %16013, 3
  store i64 %16014, i64* %PC.i232
  %16015 = inttoptr i64 %16010 to i32*
  store i32 %16011, i32* %16015
  store %struct.Memory* %loadMem_40165e, %struct.Memory** %MEMORY
  br label %block_.L_401661

block_.L_401661:                                  ; preds = %routine_idivl__esi.exit, %block_40160c
  %loadMem_401661 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16017 = getelementptr inbounds %struct.GPR, %struct.GPR* %16016, i32 0, i32 33
  %16018 = getelementptr inbounds %struct.Reg, %struct.Reg* %16017, i32 0, i32 0
  %PC.i231 = bitcast %union.anon* %16018 to i64*
  %16019 = load i64, i64* %PC.i231
  %16020 = add i64 %16019, 5
  %16021 = load i64, i64* %PC.i231
  %16022 = add i64 %16021, 5
  store i64 %16022, i64* %PC.i231
  %16023 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %16020, i64* %16023, align 8
  store %struct.Memory* %loadMem_401661, %struct.Memory** %MEMORY
  br label %block_.L_401666

block_.L_401666:                                  ; preds = %block_.L_401661
  %loadMem_401666 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16025 = getelementptr inbounds %struct.GPR, %struct.GPR* %16024, i32 0, i32 33
  %16026 = getelementptr inbounds %struct.Reg, %struct.Reg* %16025, i32 0, i32 0
  %PC.i228 = bitcast %union.anon* %16026 to i64*
  %16027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16028 = getelementptr inbounds %struct.GPR, %struct.GPR* %16027, i32 0, i32 1
  %16029 = getelementptr inbounds %struct.Reg, %struct.Reg* %16028, i32 0, i32 0
  %RAX.i229 = bitcast %union.anon* %16029 to i64*
  %16030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16031 = getelementptr inbounds %struct.GPR, %struct.GPR* %16030, i32 0, i32 15
  %16032 = getelementptr inbounds %struct.Reg, %struct.Reg* %16031, i32 0, i32 0
  %RBP.i230 = bitcast %union.anon* %16032 to i64*
  %16033 = load i64, i64* %RBP.i230
  %16034 = sub i64 %16033, 8
  %16035 = load i64, i64* %PC.i228
  %16036 = add i64 %16035, 3
  store i64 %16036, i64* %PC.i228
  %16037 = inttoptr i64 %16034 to i32*
  %16038 = load i32, i32* %16037
  %16039 = zext i32 %16038 to i64
  store i64 %16039, i64* %RAX.i229, align 8
  store %struct.Memory* %loadMem_401666, %struct.Memory** %MEMORY
  %loadMem_401669 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16041 = getelementptr inbounds %struct.GPR, %struct.GPR* %16040, i32 0, i32 33
  %16042 = getelementptr inbounds %struct.Reg, %struct.Reg* %16041, i32 0, i32 0
  %PC.i226 = bitcast %union.anon* %16042 to i64*
  %16043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16044 = getelementptr inbounds %struct.GPR, %struct.GPR* %16043, i32 0, i32 1
  %16045 = getelementptr inbounds %struct.Reg, %struct.Reg* %16044, i32 0, i32 0
  %RAX.i227 = bitcast %union.anon* %16045 to i64*
  %16046 = load i64, i64* %RAX.i227
  %16047 = load i64, i64* %PC.i226
  %16048 = add i64 %16047, 3
  store i64 %16048, i64* %PC.i226
  %16049 = trunc i64 %16046 to i32
  %16050 = add i32 1, %16049
  %16051 = zext i32 %16050 to i64
  store i64 %16051, i64* %RAX.i227, align 8
  %16052 = icmp ult i32 %16050, %16049
  %16053 = icmp ult i32 %16050, 1
  %16054 = or i1 %16052, %16053
  %16055 = zext i1 %16054 to i8
  %16056 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16055, i8* %16056, align 1
  %16057 = and i32 %16050, 255
  %16058 = call i32 @llvm.ctpop.i32(i32 %16057)
  %16059 = trunc i32 %16058 to i8
  %16060 = and i8 %16059, 1
  %16061 = xor i8 %16060, 1
  %16062 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16061, i8* %16062, align 1
  %16063 = xor i64 1, %16046
  %16064 = trunc i64 %16063 to i32
  %16065 = xor i32 %16064, %16050
  %16066 = lshr i32 %16065, 4
  %16067 = trunc i32 %16066 to i8
  %16068 = and i8 %16067, 1
  %16069 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16068, i8* %16069, align 1
  %16070 = icmp eq i32 %16050, 0
  %16071 = zext i1 %16070 to i8
  %16072 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16071, i8* %16072, align 1
  %16073 = lshr i32 %16050, 31
  %16074 = trunc i32 %16073 to i8
  %16075 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16074, i8* %16075, align 1
  %16076 = lshr i32 %16049, 31
  %16077 = xor i32 %16073, %16076
  %16078 = add i32 %16077, %16073
  %16079 = icmp eq i32 %16078, 2
  %16080 = zext i1 %16079 to i8
  %16081 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16080, i8* %16081, align 1
  store %struct.Memory* %loadMem_401669, %struct.Memory** %MEMORY
  %loadMem_40166c = load %struct.Memory*, %struct.Memory** %MEMORY
  %16082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16083 = getelementptr inbounds %struct.GPR, %struct.GPR* %16082, i32 0, i32 33
  %16084 = getelementptr inbounds %struct.Reg, %struct.Reg* %16083, i32 0, i32 0
  %PC.i223 = bitcast %union.anon* %16084 to i64*
  %16085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16086 = getelementptr inbounds %struct.GPR, %struct.GPR* %16085, i32 0, i32 1
  %16087 = getelementptr inbounds %struct.Reg, %struct.Reg* %16086, i32 0, i32 0
  %EAX.i224 = bitcast %union.anon* %16087 to i32*
  %16088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16089 = getelementptr inbounds %struct.GPR, %struct.GPR* %16088, i32 0, i32 15
  %16090 = getelementptr inbounds %struct.Reg, %struct.Reg* %16089, i32 0, i32 0
  %RBP.i225 = bitcast %union.anon* %16090 to i64*
  %16091 = load i64, i64* %RBP.i225
  %16092 = sub i64 %16091, 8
  %16093 = load i32, i32* %EAX.i224
  %16094 = zext i32 %16093 to i64
  %16095 = load i64, i64* %PC.i223
  %16096 = add i64 %16095, 3
  store i64 %16096, i64* %PC.i223
  %16097 = inttoptr i64 %16092 to i32*
  store i32 %16093, i32* %16097
  store %struct.Memory* %loadMem_40166c, %struct.Memory** %MEMORY
  %loadMem_40166f = load %struct.Memory*, %struct.Memory** %MEMORY
  %16098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16099 = getelementptr inbounds %struct.GPR, %struct.GPR* %16098, i32 0, i32 33
  %16100 = getelementptr inbounds %struct.Reg, %struct.Reg* %16099, i32 0, i32 0
  %PC.i222 = bitcast %union.anon* %16100 to i64*
  %16101 = load i64, i64* %PC.i222
  %16102 = add i64 %16101, -119
  %16103 = load i64, i64* %PC.i222
  %16104 = add i64 %16103, 5
  store i64 %16104, i64* %PC.i222
  %16105 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %16102, i64* %16105, align 8
  store %struct.Memory* %loadMem_40166f, %struct.Memory** %MEMORY
  br label %block_.L_4015f8

block_.L_401674:                                  ; preds = %block_.L_4015f8
  %loadMem_401674 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16107 = getelementptr inbounds %struct.GPR, %struct.GPR* %16106, i32 0, i32 33
  %16108 = getelementptr inbounds %struct.Reg, %struct.Reg* %16107, i32 0, i32 0
  %PC.i220 = bitcast %union.anon* %16108 to i64*
  %16109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16110 = getelementptr inbounds %struct.GPR, %struct.GPR* %16109, i32 0, i32 1
  %16111 = getelementptr inbounds %struct.Reg, %struct.Reg* %16110, i32 0, i32 0
  %RAX.i221 = bitcast %union.anon* %16111 to i64*
  %16112 = load i64, i64* %PC.i220
  %16113 = add i64 %16112, 5
  store i64 %16113, i64* %PC.i220
  store i64 255, i64* %RAX.i221, align 8
  store %struct.Memory* %loadMem_401674, %struct.Memory** %MEMORY
  %loadMem_401679 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16115 = getelementptr inbounds %struct.GPR, %struct.GPR* %16114, i32 0, i32 33
  %16116 = getelementptr inbounds %struct.Reg, %struct.Reg* %16115, i32 0, i32 0
  %PC.i217 = bitcast %union.anon* %16116 to i64*
  %16117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16118 = getelementptr inbounds %struct.GPR, %struct.GPR* %16117, i32 0, i32 5
  %16119 = getelementptr inbounds %struct.Reg, %struct.Reg* %16118, i32 0, i32 0
  %RCX.i218 = bitcast %union.anon* %16119 to i64*
  %16120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16121 = getelementptr inbounds %struct.GPR, %struct.GPR* %16120, i32 0, i32 15
  %16122 = getelementptr inbounds %struct.Reg, %struct.Reg* %16121, i32 0, i32 0
  %RBP.i219 = bitcast %union.anon* %16122 to i64*
  %16123 = load i64, i64* %RBP.i219
  %16124 = sub i64 %16123, 16
  %16125 = load i64, i64* %PC.i217
  %16126 = add i64 %16125, 3
  store i64 %16126, i64* %PC.i217
  %16127 = inttoptr i64 %16124 to i32*
  %16128 = load i32, i32* %16127
  %16129 = zext i32 %16128 to i64
  store i64 %16129, i64* %RCX.i218, align 8
  store %struct.Memory* %loadMem_401679, %struct.Memory** %MEMORY
  %loadMem_40167c = load %struct.Memory*, %struct.Memory** %MEMORY
  %16130 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16131 = getelementptr inbounds %struct.GPR, %struct.GPR* %16130, i32 0, i32 33
  %16132 = getelementptr inbounds %struct.Reg, %struct.Reg* %16131, i32 0, i32 0
  %PC.i214 = bitcast %union.anon* %16132 to i64*
  %16133 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16134 = getelementptr inbounds %struct.GPR, %struct.GPR* %16133, i32 0, i32 1
  %16135 = getelementptr inbounds %struct.Reg, %struct.Reg* %16134, i32 0, i32 0
  %EAX.i215 = bitcast %union.anon* %16135 to i32*
  %16136 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16137 = getelementptr inbounds %struct.GPR, %struct.GPR* %16136, i32 0, i32 15
  %16138 = getelementptr inbounds %struct.Reg, %struct.Reg* %16137, i32 0, i32 0
  %RBP.i216 = bitcast %union.anon* %16138 to i64*
  %16139 = load i64, i64* %RBP.i216
  %16140 = sub i64 %16139, 2732
  %16141 = load i32, i32* %EAX.i215
  %16142 = zext i32 %16141 to i64
  %16143 = load i64, i64* %PC.i214
  %16144 = add i64 %16143, 6
  store i64 %16144, i64* %PC.i214
  %16145 = inttoptr i64 %16140 to i32*
  store i32 %16141, i32* %16145
  store %struct.Memory* %loadMem_40167c, %struct.Memory** %MEMORY
  %loadMem_401682 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16147 = getelementptr inbounds %struct.GPR, %struct.GPR* %16146, i32 0, i32 33
  %16148 = getelementptr inbounds %struct.Reg, %struct.Reg* %16147, i32 0, i32 0
  %PC.i211 = bitcast %union.anon* %16148 to i64*
  %16149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16150 = getelementptr inbounds %struct.GPR, %struct.GPR* %16149, i32 0, i32 5
  %16151 = getelementptr inbounds %struct.Reg, %struct.Reg* %16150, i32 0, i32 0
  %ECX.i212 = bitcast %union.anon* %16151 to i32*
  %16152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16153 = getelementptr inbounds %struct.GPR, %struct.GPR* %16152, i32 0, i32 1
  %16154 = getelementptr inbounds %struct.Reg, %struct.Reg* %16153, i32 0, i32 0
  %RAX.i213 = bitcast %union.anon* %16154 to i64*
  %16155 = load i32, i32* %ECX.i212
  %16156 = zext i32 %16155 to i64
  %16157 = load i64, i64* %PC.i211
  %16158 = add i64 %16157, 2
  store i64 %16158, i64* %PC.i211
  %16159 = and i64 %16156, 4294967295
  store i64 %16159, i64* %RAX.i213, align 8
  store %struct.Memory* %loadMem_401682, %struct.Memory** %MEMORY
  %loadMem_401684 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16161 = getelementptr inbounds %struct.GPR, %struct.GPR* %16160, i32 0, i32 33
  %16162 = getelementptr inbounds %struct.Reg, %struct.Reg* %16161, i32 0, i32 0
  %PC.i210 = bitcast %union.anon* %16162 to i64*
  %16163 = load i64, i64* %PC.i210
  %16164 = add i64 %16163, 1
  store i64 %16164, i64* %PC.i210
  %16165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %16166 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %16167 = bitcast %union.anon* %16166 to i32*
  %16168 = load i32, i32* %16167, align 8
  %16169 = sext i32 %16168 to i64
  %16170 = lshr i64 %16169, 32
  store i64 %16170, i64* %16165, align 8
  store %struct.Memory* %loadMem_401684, %struct.Memory** %MEMORY
  %loadMem_401685 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16172 = getelementptr inbounds %struct.GPR, %struct.GPR* %16171, i32 0, i32 33
  %16173 = getelementptr inbounds %struct.Reg, %struct.Reg* %16172, i32 0, i32 0
  %PC.i207 = bitcast %union.anon* %16173 to i64*
  %16174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16175 = getelementptr inbounds %struct.GPR, %struct.GPR* %16174, i32 0, i32 5
  %16176 = getelementptr inbounds %struct.Reg, %struct.Reg* %16175, i32 0, i32 0
  %RCX.i208 = bitcast %union.anon* %16176 to i64*
  %16177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16178 = getelementptr inbounds %struct.GPR, %struct.GPR* %16177, i32 0, i32 15
  %16179 = getelementptr inbounds %struct.Reg, %struct.Reg* %16178, i32 0, i32 0
  %RBP.i209 = bitcast %union.anon* %16179 to i64*
  %16180 = load i64, i64* %RBP.i209
  %16181 = sub i64 %16180, 2732
  %16182 = load i64, i64* %PC.i207
  %16183 = add i64 %16182, 6
  store i64 %16183, i64* %PC.i207
  %16184 = inttoptr i64 %16181 to i32*
  %16185 = load i32, i32* %16184
  %16186 = zext i32 %16185 to i64
  store i64 %16186, i64* %RCX.i208, align 8
  store %struct.Memory* %loadMem_401685, %struct.Memory** %MEMORY
  %loadMem_40168b = load %struct.Memory*, %struct.Memory** %MEMORY
  %16187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16188 = getelementptr inbounds %struct.GPR, %struct.GPR* %16187, i32 0, i32 33
  %16189 = getelementptr inbounds %struct.Reg, %struct.Reg* %16188, i32 0, i32 0
  %PC.i202 = bitcast %union.anon* %16189 to i64*
  %16190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16191 = getelementptr inbounds %struct.GPR, %struct.GPR* %16190, i32 0, i32 5
  %16192 = getelementptr inbounds %struct.Reg, %struct.Reg* %16191, i32 0, i32 0
  %ECX.i203 = bitcast %union.anon* %16192 to i32*
  %16193 = load i32, i32* %ECX.i203
  %16194 = zext i32 %16193 to i64
  %16195 = load i64, i64* %PC.i202
  %16196 = add i64 %16195, 2
  store i64 %16196, i64* %PC.i202
  %16197 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %16198 = bitcast %union.anon* %16197 to i32*
  %16199 = load i32, i32* %16198, align 8
  %16200 = zext i32 %16199 to i64
  %16201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %16202 = bitcast %union.anon* %16201 to i32*
  %16203 = load i32, i32* %16202, align 8
  %16204 = zext i32 %16203 to i64
  %16205 = shl i64 %16194, 32
  %16206 = ashr exact i64 %16205, 32
  %16207 = shl i64 %16204, 32
  %16208 = or i64 %16207, %16200
  %16209 = sdiv i64 %16208, %16206
  %16210 = shl i64 %16209, 32
  %16211 = ashr exact i64 %16210, 32
  %16212 = icmp eq i64 %16209, %16211
  br i1 %16212, label %16217, label %16213

; <label>:16213:                                  ; preds = %block_.L_401674
  %16214 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %16215 = load i64, i64* %16214, align 8
  %16216 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %16215, %struct.Memory* %loadMem_40168b)
  br label %routine_idivl__ecx.exit204

; <label>:16217:                                  ; preds = %block_.L_401674
  %16218 = srem i64 %16208, %16206
  %16219 = getelementptr inbounds %union.anon, %union.anon* %16197, i64 0, i32 0
  %16220 = and i64 %16209, 4294967295
  store i64 %16220, i64* %16219, align 8
  %16221 = getelementptr inbounds %union.anon, %union.anon* %16201, i64 0, i32 0
  %16222 = and i64 %16218, 4294967295
  store i64 %16222, i64* %16221, align 8
  %16223 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %16223, align 1
  %16224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %16224, align 1
  %16225 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16225, align 1
  %16226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %16226, align 1
  %16227 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %16227, align 1
  %16228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %16228, align 1
  br label %routine_idivl__ecx.exit204

routine_idivl__ecx.exit204:                       ; preds = %16213, %16217
  %16229 = phi %struct.Memory* [ %16216, %16213 ], [ %loadMem_40168b, %16217 ]
  store %struct.Memory* %16229, %struct.Memory** %MEMORY
  %loadMem_40168d = load %struct.Memory*, %struct.Memory** %MEMORY
  %16230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16231 = getelementptr inbounds %struct.GPR, %struct.GPR* %16230, i32 0, i32 33
  %16232 = getelementptr inbounds %struct.Reg, %struct.Reg* %16231, i32 0, i32 0
  %PC.i199 = bitcast %union.anon* %16232 to i64*
  %16233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16234 = getelementptr inbounds %struct.GPR, %struct.GPR* %16233, i32 0, i32 7
  %16235 = getelementptr inbounds %struct.Reg, %struct.Reg* %16234, i32 0, i32 0
  %EDX.i200 = bitcast %union.anon* %16235 to i32*
  %16236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16237 = getelementptr inbounds %struct.GPR, %struct.GPR* %16236, i32 0, i32 15
  %16238 = getelementptr inbounds %struct.Reg, %struct.Reg* %16237, i32 0, i32 0
  %RBP.i201 = bitcast %union.anon* %16238 to i64*
  %16239 = load i64, i64* %RBP.i201
  %16240 = sub i64 %16239, 16
  %16241 = load i32, i32* %EDX.i200
  %16242 = zext i32 %16241 to i64
  %16243 = load i64, i64* %PC.i199
  %16244 = add i64 %16243, 3
  store i64 %16244, i64* %PC.i199
  %16245 = inttoptr i64 %16240 to i32*
  store i32 %16241, i32* %16245
  store %struct.Memory* %loadMem_40168d, %struct.Memory** %MEMORY
  %loadMem_401690 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16247 = getelementptr inbounds %struct.GPR, %struct.GPR* %16246, i32 0, i32 33
  %16248 = getelementptr inbounds %struct.Reg, %struct.Reg* %16247, i32 0, i32 0
  %PC.i196 = bitcast %union.anon* %16248 to i64*
  %16249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16250 = getelementptr inbounds %struct.GPR, %struct.GPR* %16249, i32 0, i32 9
  %16251 = getelementptr inbounds %struct.Reg, %struct.Reg* %16250, i32 0, i32 0
  %RSI.i197 = bitcast %union.anon* %16251 to i64*
  %16252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16253 = getelementptr inbounds %struct.GPR, %struct.GPR* %16252, i32 0, i32 15
  %16254 = getelementptr inbounds %struct.Reg, %struct.Reg* %16253, i32 0, i32 0
  %RBP.i198 = bitcast %union.anon* %16254 to i64*
  %16255 = load i64, i64* %RBP.i198
  %16256 = sub i64 %16255, 4
  %16257 = load i64, i64* %PC.i196
  %16258 = add i64 %16257, 4
  store i64 %16258, i64* %PC.i196
  %16259 = inttoptr i64 %16256 to i32*
  %16260 = load i32, i32* %16259
  %16261 = sext i32 %16260 to i64
  store i64 %16261, i64* %RSI.i197, align 8
  store %struct.Memory* %loadMem_401690, %struct.Memory** %MEMORY
  %loadMem_401694 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16263 = getelementptr inbounds %struct.GPR, %struct.GPR* %16262, i32 0, i32 33
  %16264 = getelementptr inbounds %struct.Reg, %struct.Reg* %16263, i32 0, i32 0
  %PC.i193 = bitcast %union.anon* %16264 to i64*
  %16265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16266 = getelementptr inbounds %struct.GPR, %struct.GPR* %16265, i32 0, i32 9
  %16267 = getelementptr inbounds %struct.Reg, %struct.Reg* %16266, i32 0, i32 0
  %RSI.i194 = bitcast %union.anon* %16267 to i64*
  %16268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16269 = getelementptr inbounds %struct.GPR, %struct.GPR* %16268, i32 0, i32 15
  %16270 = getelementptr inbounds %struct.Reg, %struct.Reg* %16269, i32 0, i32 0
  %RBP.i195 = bitcast %union.anon* %16270 to i64*
  %16271 = load i64, i64* %RBP.i195
  %16272 = load i64, i64* %RSI.i194
  %16273 = mul i64 %16272, 4
  %16274 = add i64 %16271, -1568
  %16275 = add i64 %16274, %16273
  %16276 = load i64, i64* %PC.i193
  %16277 = add i64 %16276, 8
  store i64 %16277, i64* %PC.i193
  %16278 = inttoptr i64 %16275 to i32*
  %16279 = load i32, i32* %16278
  %16280 = sext i32 %16279 to i64
  store i64 %16280, i64* %RSI.i194, align 8
  store %struct.Memory* %loadMem_401694, %struct.Memory** %MEMORY
  %loadMem_40169c = load %struct.Memory*, %struct.Memory** %MEMORY
  %16281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16282 = getelementptr inbounds %struct.GPR, %struct.GPR* %16281, i32 0, i32 33
  %16283 = getelementptr inbounds %struct.Reg, %struct.Reg* %16282, i32 0, i32 0
  %PC.i189 = bitcast %union.anon* %16283 to i64*
  %16284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16285 = getelementptr inbounds %struct.GPR, %struct.GPR* %16284, i32 0, i32 7
  %16286 = getelementptr inbounds %struct.Reg, %struct.Reg* %16285, i32 0, i32 0
  %RDX.i190 = bitcast %union.anon* %16286 to i64*
  %16287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16288 = getelementptr inbounds %struct.GPR, %struct.GPR* %16287, i32 0, i32 9
  %16289 = getelementptr inbounds %struct.Reg, %struct.Reg* %16288, i32 0, i32 0
  %RSI.i191 = bitcast %union.anon* %16289 to i64*
  %16290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16291 = getelementptr inbounds %struct.GPR, %struct.GPR* %16290, i32 0, i32 15
  %16292 = getelementptr inbounds %struct.Reg, %struct.Reg* %16291, i32 0, i32 0
  %RBP.i192 = bitcast %union.anon* %16292 to i64*
  %16293 = load i64, i64* %RBP.i192
  %16294 = load i64, i64* %RSI.i191
  %16295 = mul i64 %16294, 4
  %16296 = add i64 %16293, -2640
  %16297 = add i64 %16296, %16295
  %16298 = load i64, i64* %PC.i189
  %16299 = add i64 %16298, 7
  store i64 %16299, i64* %PC.i189
  %16300 = inttoptr i64 %16297 to i32*
  %16301 = load i32, i32* %16300
  %16302 = zext i32 %16301 to i64
  store i64 %16302, i64* %RDX.i190, align 8
  store %struct.Memory* %loadMem_40169c, %struct.Memory** %MEMORY
  %loadMem_4016a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16304 = getelementptr inbounds %struct.GPR, %struct.GPR* %16303, i32 0, i32 33
  %16305 = getelementptr inbounds %struct.Reg, %struct.Reg* %16304, i32 0, i32 0
  %PC.i186 = bitcast %union.anon* %16305 to i64*
  %16306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16307 = getelementptr inbounds %struct.GPR, %struct.GPR* %16306, i32 0, i32 7
  %16308 = getelementptr inbounds %struct.Reg, %struct.Reg* %16307, i32 0, i32 0
  %RDX.i187 = bitcast %union.anon* %16308 to i64*
  %16309 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16310 = getelementptr inbounds %struct.GPR, %struct.GPR* %16309, i32 0, i32 15
  %16311 = getelementptr inbounds %struct.Reg, %struct.Reg* %16310, i32 0, i32 0
  %RBP.i188 = bitcast %union.anon* %16311 to i64*
  %16312 = load i64, i64* %RDX.i187
  %16313 = load i64, i64* %RBP.i188
  %16314 = sub i64 %16313, 16
  %16315 = load i64, i64* %PC.i186
  %16316 = add i64 %16315, 3
  store i64 %16316, i64* %PC.i186
  %16317 = trunc i64 %16312 to i32
  %16318 = inttoptr i64 %16314 to i32*
  %16319 = load i32, i32* %16318
  %16320 = sub i32 %16317, %16319
  %16321 = zext i32 %16320 to i64
  store i64 %16321, i64* %RDX.i187, align 8
  %16322 = icmp ult i32 %16317, %16319
  %16323 = zext i1 %16322 to i8
  %16324 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16323, i8* %16324, align 1
  %16325 = and i32 %16320, 255
  %16326 = call i32 @llvm.ctpop.i32(i32 %16325)
  %16327 = trunc i32 %16326 to i8
  %16328 = and i8 %16327, 1
  %16329 = xor i8 %16328, 1
  %16330 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16329, i8* %16330, align 1
  %16331 = xor i32 %16319, %16317
  %16332 = xor i32 %16331, %16320
  %16333 = lshr i32 %16332, 4
  %16334 = trunc i32 %16333 to i8
  %16335 = and i8 %16334, 1
  %16336 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16335, i8* %16336, align 1
  %16337 = icmp eq i32 %16320, 0
  %16338 = zext i1 %16337 to i8
  %16339 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16338, i8* %16339, align 1
  %16340 = lshr i32 %16320, 31
  %16341 = trunc i32 %16340 to i8
  %16342 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16341, i8* %16342, align 1
  %16343 = lshr i32 %16317, 31
  %16344 = lshr i32 %16319, 31
  %16345 = xor i32 %16344, %16343
  %16346 = xor i32 %16340, %16343
  %16347 = add i32 %16346, %16345
  %16348 = icmp eq i32 %16347, 2
  %16349 = zext i1 %16348 to i8
  %16350 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16349, i8* %16350, align 1
  store %struct.Memory* %loadMem_4016a3, %struct.Memory** %MEMORY
  %loadMem_4016a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16352 = getelementptr inbounds %struct.GPR, %struct.GPR* %16351, i32 0, i32 33
  %16353 = getelementptr inbounds %struct.Reg, %struct.Reg* %16352, i32 0, i32 0
  %PC.i184 = bitcast %union.anon* %16353 to i64*
  %16354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16355 = getelementptr inbounds %struct.GPR, %struct.GPR* %16354, i32 0, i32 7
  %16356 = getelementptr inbounds %struct.Reg, %struct.Reg* %16355, i32 0, i32 0
  %RDX.i185 = bitcast %union.anon* %16356 to i64*
  %16357 = load i64, i64* %RDX.i185
  %16358 = load i64, i64* %PC.i184
  %16359 = add i64 %16358, 6
  store i64 %16359, i64* %PC.i184
  %16360 = trunc i64 %16357 to i32
  %16361 = add i32 255, %16360
  %16362 = zext i32 %16361 to i64
  store i64 %16362, i64* %RDX.i185, align 8
  %16363 = icmp ult i32 %16361, %16360
  %16364 = icmp ult i32 %16361, 255
  %16365 = or i1 %16363, %16364
  %16366 = zext i1 %16365 to i8
  %16367 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16366, i8* %16367, align 1
  %16368 = and i32 %16361, 255
  %16369 = call i32 @llvm.ctpop.i32(i32 %16368)
  %16370 = trunc i32 %16369 to i8
  %16371 = and i8 %16370, 1
  %16372 = xor i8 %16371, 1
  %16373 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16372, i8* %16373, align 1
  %16374 = xor i64 255, %16357
  %16375 = trunc i64 %16374 to i32
  %16376 = xor i32 %16375, %16361
  %16377 = lshr i32 %16376, 4
  %16378 = trunc i32 %16377 to i8
  %16379 = and i8 %16378, 1
  %16380 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16379, i8* %16380, align 1
  %16381 = icmp eq i32 %16361, 0
  %16382 = zext i1 %16381 to i8
  %16383 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16382, i8* %16383, align 1
  %16384 = lshr i32 %16361, 31
  %16385 = trunc i32 %16384 to i8
  %16386 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16385, i8* %16386, align 1
  %16387 = lshr i32 %16360, 31
  %16388 = xor i32 %16384, %16387
  %16389 = add i32 %16388, %16384
  %16390 = icmp eq i32 %16389, 2
  %16391 = zext i1 %16390 to i8
  %16392 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16391, i8* %16392, align 1
  store %struct.Memory* %loadMem_4016a6, %struct.Memory** %MEMORY
  %loadMem_4016ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %16393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16394 = getelementptr inbounds %struct.GPR, %struct.GPR* %16393, i32 0, i32 33
  %16395 = getelementptr inbounds %struct.Reg, %struct.Reg* %16394, i32 0, i32 0
  %PC.i181 = bitcast %union.anon* %16395 to i64*
  %16396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16397 = getelementptr inbounds %struct.GPR, %struct.GPR* %16396, i32 0, i32 7
  %16398 = getelementptr inbounds %struct.Reg, %struct.Reg* %16397, i32 0, i32 0
  %EDX.i182 = bitcast %union.anon* %16398 to i32*
  %16399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16400 = getelementptr inbounds %struct.GPR, %struct.GPR* %16399, i32 0, i32 1
  %16401 = getelementptr inbounds %struct.Reg, %struct.Reg* %16400, i32 0, i32 0
  %RAX.i183 = bitcast %union.anon* %16401 to i64*
  %16402 = load i32, i32* %EDX.i182
  %16403 = zext i32 %16402 to i64
  %16404 = load i64, i64* %PC.i181
  %16405 = add i64 %16404, 2
  store i64 %16405, i64* %PC.i181
  %16406 = and i64 %16403, 4294967295
  store i64 %16406, i64* %RAX.i183, align 8
  store %struct.Memory* %loadMem_4016ac, %struct.Memory** %MEMORY
  %loadMem_4016ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %16407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16408 = getelementptr inbounds %struct.GPR, %struct.GPR* %16407, i32 0, i32 33
  %16409 = getelementptr inbounds %struct.Reg, %struct.Reg* %16408, i32 0, i32 0
  %PC.i180 = bitcast %union.anon* %16409 to i64*
  %16410 = load i64, i64* %PC.i180
  %16411 = add i64 %16410, 1
  store i64 %16411, i64* %PC.i180
  %16412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %16413 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %16414 = bitcast %union.anon* %16413 to i32*
  %16415 = load i32, i32* %16414, align 8
  %16416 = sext i32 %16415 to i64
  %16417 = lshr i64 %16416, 32
  store i64 %16417, i64* %16412, align 8
  store %struct.Memory* %loadMem_4016ae, %struct.Memory** %MEMORY
  %loadMem_4016af = load %struct.Memory*, %struct.Memory** %MEMORY
  %16418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16419 = getelementptr inbounds %struct.GPR, %struct.GPR* %16418, i32 0, i32 33
  %16420 = getelementptr inbounds %struct.Reg, %struct.Reg* %16419, i32 0, i32 0
  %PC.i175 = bitcast %union.anon* %16420 to i64*
  %16421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16422 = getelementptr inbounds %struct.GPR, %struct.GPR* %16421, i32 0, i32 5
  %16423 = getelementptr inbounds %struct.Reg, %struct.Reg* %16422, i32 0, i32 0
  %ECX.i176 = bitcast %union.anon* %16423 to i32*
  %16424 = load i32, i32* %ECX.i176
  %16425 = zext i32 %16424 to i64
  %16426 = load i64, i64* %PC.i175
  %16427 = add i64 %16426, 2
  store i64 %16427, i64* %PC.i175
  %16428 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %16429 = bitcast %union.anon* %16428 to i32*
  %16430 = load i32, i32* %16429, align 8
  %16431 = zext i32 %16430 to i64
  %16432 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %16433 = bitcast %union.anon* %16432 to i32*
  %16434 = load i32, i32* %16433, align 8
  %16435 = zext i32 %16434 to i64
  %16436 = shl i64 %16425, 32
  %16437 = ashr exact i64 %16436, 32
  %16438 = shl i64 %16435, 32
  %16439 = or i64 %16438, %16431
  %16440 = sdiv i64 %16439, %16437
  %16441 = shl i64 %16440, 32
  %16442 = ashr exact i64 %16441, 32
  %16443 = icmp eq i64 %16440, %16442
  br i1 %16443, label %16448, label %16444

; <label>:16444:                                  ; preds = %routine_idivl__ecx.exit204
  %16445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %16446 = load i64, i64* %16445, align 8
  %16447 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %16446, %struct.Memory* %loadMem_4016af)
  br label %routine_idivl__ecx.exit

; <label>:16448:                                  ; preds = %routine_idivl__ecx.exit204
  %16449 = srem i64 %16439, %16437
  %16450 = getelementptr inbounds %union.anon, %union.anon* %16428, i64 0, i32 0
  %16451 = and i64 %16440, 4294967295
  store i64 %16451, i64* %16450, align 8
  %16452 = getelementptr inbounds %union.anon, %union.anon* %16432, i64 0, i32 0
  %16453 = and i64 %16449, 4294967295
  store i64 %16453, i64* %16452, align 8
  %16454 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %16454, align 1
  %16455 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %16455, align 1
  %16456 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16456, align 1
  %16457 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %16457, align 1
  %16458 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %16458, align 1
  %16459 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %16459, align 1
  br label %routine_idivl__ecx.exit

routine_idivl__ecx.exit:                          ; preds = %16444, %16448
  %16460 = phi %struct.Memory* [ %16447, %16444 ], [ %loadMem_4016af, %16448 ]
  store %struct.Memory* %16460, %struct.Memory** %MEMORY
  %loadMem_4016b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16462 = getelementptr inbounds %struct.GPR, %struct.GPR* %16461, i32 0, i32 33
  %16463 = getelementptr inbounds %struct.Reg, %struct.Reg* %16462, i32 0, i32 0
  %PC.i172 = bitcast %union.anon* %16463 to i64*
  %16464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16465 = getelementptr inbounds %struct.GPR, %struct.GPR* %16464, i32 0, i32 7
  %16466 = getelementptr inbounds %struct.Reg, %struct.Reg* %16465, i32 0, i32 0
  %EDX.i173 = bitcast %union.anon* %16466 to i32*
  %16467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16468 = getelementptr inbounds %struct.GPR, %struct.GPR* %16467, i32 0, i32 9
  %16469 = getelementptr inbounds %struct.Reg, %struct.Reg* %16468, i32 0, i32 0
  %RSI.i174 = bitcast %union.anon* %16469 to i64*
  %16470 = load i32, i32* %EDX.i173
  %16471 = zext i32 %16470 to i64
  %16472 = load i64, i64* %PC.i172
  %16473 = add i64 %16472, 3
  store i64 %16473, i64* %PC.i172
  %16474 = shl i64 %16471, 32
  %16475 = ashr exact i64 %16474, 32
  store i64 %16475, i64* %RSI.i174, align 8
  store %struct.Memory* %loadMem_4016b1, %struct.Memory** %MEMORY
  %loadMem_4016b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16477 = getelementptr inbounds %struct.GPR, %struct.GPR* %16476, i32 0, i32 33
  %16478 = getelementptr inbounds %struct.Reg, %struct.Reg* %16477, i32 0, i32 0
  %PC.i169 = bitcast %union.anon* %16478 to i64*
  %16479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16480 = getelementptr inbounds %struct.GPR, %struct.GPR* %16479, i32 0, i32 7
  %16481 = getelementptr inbounds %struct.Reg, %struct.Reg* %16480, i32 0, i32 0
  %RDX.i170 = bitcast %union.anon* %16481 to i64*
  %16482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16483 = getelementptr inbounds %struct.GPR, %struct.GPR* %16482, i32 0, i32 9
  %16484 = getelementptr inbounds %struct.Reg, %struct.Reg* %16483, i32 0, i32 0
  %RSI.i171 = bitcast %union.anon* %16484 to i64*
  %16485 = load i64, i64* %RSI.i171
  %16486 = mul i64 %16485, 4
  %16487 = add i64 %16486, 6305920
  %16488 = load i64, i64* %PC.i169
  %16489 = add i64 %16488, 7
  store i64 %16489, i64* %PC.i169
  %16490 = inttoptr i64 %16487 to i32*
  %16491 = load i32, i32* %16490
  %16492 = zext i32 %16491 to i64
  store i64 %16492, i64* %RDX.i170, align 8
  store %struct.Memory* %loadMem_4016b4, %struct.Memory** %MEMORY
  %loadMem_4016bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %16493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16494 = getelementptr inbounds %struct.GPR, %struct.GPR* %16493, i32 0, i32 33
  %16495 = getelementptr inbounds %struct.Reg, %struct.Reg* %16494, i32 0, i32 0
  %PC.i166 = bitcast %union.anon* %16495 to i64*
  %16496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16497 = getelementptr inbounds %struct.GPR, %struct.GPR* %16496, i32 0, i32 9
  %16498 = getelementptr inbounds %struct.Reg, %struct.Reg* %16497, i32 0, i32 0
  %RSI.i167 = bitcast %union.anon* %16498 to i64*
  %16499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16500 = getelementptr inbounds %struct.GPR, %struct.GPR* %16499, i32 0, i32 15
  %16501 = getelementptr inbounds %struct.Reg, %struct.Reg* %16500, i32 0, i32 0
  %RBP.i168 = bitcast %union.anon* %16501 to i64*
  %16502 = load i64, i64* %RBP.i168
  %16503 = sub i64 %16502, 4
  %16504 = load i64, i64* %PC.i166
  %16505 = add i64 %16504, 4
  store i64 %16505, i64* %PC.i166
  %16506 = inttoptr i64 %16503 to i32*
  %16507 = load i32, i32* %16506
  %16508 = sext i32 %16507 to i64
  store i64 %16508, i64* %RSI.i167, align 8
  store %struct.Memory* %loadMem_4016bb, %struct.Memory** %MEMORY
  %loadMem_4016bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %16509 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16510 = getelementptr inbounds %struct.GPR, %struct.GPR* %16509, i32 0, i32 33
  %16511 = getelementptr inbounds %struct.Reg, %struct.Reg* %16510, i32 0, i32 0
  %PC.i163 = bitcast %union.anon* %16511 to i64*
  %16512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16513 = getelementptr inbounds %struct.GPR, %struct.GPR* %16512, i32 0, i32 9
  %16514 = getelementptr inbounds %struct.Reg, %struct.Reg* %16513, i32 0, i32 0
  %RSI.i164 = bitcast %union.anon* %16514 to i64*
  %16515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16516 = getelementptr inbounds %struct.GPR, %struct.GPR* %16515, i32 0, i32 15
  %16517 = getelementptr inbounds %struct.Reg, %struct.Reg* %16516, i32 0, i32 0
  %RBP.i165 = bitcast %union.anon* %16517 to i64*
  %16518 = load i64, i64* %RBP.i165
  %16519 = load i64, i64* %RSI.i164
  %16520 = mul i64 %16519, 4
  %16521 = add i64 %16518, -1568
  %16522 = add i64 %16521, %16520
  %16523 = load i64, i64* %PC.i163
  %16524 = add i64 %16523, 8
  store i64 %16524, i64* %PC.i163
  %16525 = inttoptr i64 %16522 to i32*
  %16526 = load i32, i32* %16525
  %16527 = sext i32 %16526 to i64
  store i64 %16527, i64* %RSI.i164, align 8
  store %struct.Memory* %loadMem_4016bf, %struct.Memory** %MEMORY
  %loadMem_4016c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16529 = getelementptr inbounds %struct.GPR, %struct.GPR* %16528, i32 0, i32 33
  %16530 = getelementptr inbounds %struct.Reg, %struct.Reg* %16529, i32 0, i32 0
  %PC.i159 = bitcast %union.anon* %16530 to i64*
  %16531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16532 = getelementptr inbounds %struct.GPR, %struct.GPR* %16531, i32 0, i32 7
  %16533 = getelementptr inbounds %struct.Reg, %struct.Reg* %16532, i32 0, i32 0
  %EDX.i160 = bitcast %union.anon* %16533 to i32*
  %16534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16535 = getelementptr inbounds %struct.GPR, %struct.GPR* %16534, i32 0, i32 9
  %16536 = getelementptr inbounds %struct.Reg, %struct.Reg* %16535, i32 0, i32 0
  %RSI.i161 = bitcast %union.anon* %16536 to i64*
  %16537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16538 = getelementptr inbounds %struct.GPR, %struct.GPR* %16537, i32 0, i32 15
  %16539 = getelementptr inbounds %struct.Reg, %struct.Reg* %16538, i32 0, i32 0
  %RBP.i162 = bitcast %union.anon* %16539 to i64*
  %16540 = load i64, i64* %RBP.i162
  %16541 = load i64, i64* %RSI.i161
  %16542 = mul i64 %16541, 4
  %16543 = add i64 %16540, -2640
  %16544 = add i64 %16543, %16542
  %16545 = load i32, i32* %EDX.i160
  %16546 = zext i32 %16545 to i64
  %16547 = load i64, i64* %PC.i159
  %16548 = add i64 %16547, 7
  store i64 %16548, i64* %PC.i159
  %16549 = inttoptr i64 %16544 to i32*
  store i32 %16545, i32* %16549
  store %struct.Memory* %loadMem_4016c7, %struct.Memory** %MEMORY
  %loadMem_4016ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %16550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16551 = getelementptr inbounds %struct.GPR, %struct.GPR* %16550, i32 0, i32 33
  %16552 = getelementptr inbounds %struct.Reg, %struct.Reg* %16551, i32 0, i32 0
  %PC.i156 = bitcast %union.anon* %16552 to i64*
  %16553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16554 = getelementptr inbounds %struct.GPR, %struct.GPR* %16553, i32 0, i32 9
  %16555 = getelementptr inbounds %struct.Reg, %struct.Reg* %16554, i32 0, i32 0
  %RSI.i157 = bitcast %union.anon* %16555 to i64*
  %16556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16557 = getelementptr inbounds %struct.GPR, %struct.GPR* %16556, i32 0, i32 15
  %16558 = getelementptr inbounds %struct.Reg, %struct.Reg* %16557, i32 0, i32 0
  %RBP.i158 = bitcast %union.anon* %16558 to i64*
  %16559 = load i64, i64* %RBP.i158
  %16560 = sub i64 %16559, 4
  %16561 = load i64, i64* %PC.i156
  %16562 = add i64 %16561, 4
  store i64 %16562, i64* %PC.i156
  %16563 = inttoptr i64 %16560 to i32*
  %16564 = load i32, i32* %16563
  %16565 = sext i32 %16564 to i64
  store i64 %16565, i64* %RSI.i157, align 8
  store %struct.Memory* %loadMem_4016ce, %struct.Memory** %MEMORY
  %loadMem_4016d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16567 = getelementptr inbounds %struct.GPR, %struct.GPR* %16566, i32 0, i32 33
  %16568 = getelementptr inbounds %struct.Reg, %struct.Reg* %16567, i32 0, i32 0
  %PC.i153 = bitcast %union.anon* %16568 to i64*
  %16569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16570 = getelementptr inbounds %struct.GPR, %struct.GPR* %16569, i32 0, i32 9
  %16571 = getelementptr inbounds %struct.Reg, %struct.Reg* %16570, i32 0, i32 0
  %RSI.i154 = bitcast %union.anon* %16571 to i64*
  %16572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16573 = getelementptr inbounds %struct.GPR, %struct.GPR* %16572, i32 0, i32 15
  %16574 = getelementptr inbounds %struct.Reg, %struct.Reg* %16573, i32 0, i32 0
  %RBP.i155 = bitcast %union.anon* %16574 to i64*
  %16575 = load i64, i64* %RBP.i155
  %16576 = load i64, i64* %RSI.i154
  %16577 = mul i64 %16576, 4
  %16578 = add i64 %16575, -1568
  %16579 = add i64 %16578, %16577
  %16580 = load i64, i64* %PC.i153
  %16581 = add i64 %16580, 8
  store i64 %16581, i64* %PC.i153
  %16582 = inttoptr i64 %16579 to i32*
  %16583 = load i32, i32* %16582
  %16584 = sext i32 %16583 to i64
  store i64 %16584, i64* %RSI.i154, align 8
  store %struct.Memory* %loadMem_4016d2, %struct.Memory** %MEMORY
  %loadMem_4016da = load %struct.Memory*, %struct.Memory** %MEMORY
  %16585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16586 = getelementptr inbounds %struct.GPR, %struct.GPR* %16585, i32 0, i32 33
  %16587 = getelementptr inbounds %struct.Reg, %struct.Reg* %16586, i32 0, i32 0
  %PC.i149 = bitcast %union.anon* %16587 to i64*
  %16588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16589 = getelementptr inbounds %struct.GPR, %struct.GPR* %16588, i32 0, i32 7
  %16590 = getelementptr inbounds %struct.Reg, %struct.Reg* %16589, i32 0, i32 0
  %RDX.i150 = bitcast %union.anon* %16590 to i64*
  %16591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16592 = getelementptr inbounds %struct.GPR, %struct.GPR* %16591, i32 0, i32 9
  %16593 = getelementptr inbounds %struct.Reg, %struct.Reg* %16592, i32 0, i32 0
  %RSI.i151 = bitcast %union.anon* %16593 to i64*
  %16594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16595 = getelementptr inbounds %struct.GPR, %struct.GPR* %16594, i32 0, i32 15
  %16596 = getelementptr inbounds %struct.Reg, %struct.Reg* %16595, i32 0, i32 0
  %RBP.i152 = bitcast %union.anon* %16596 to i64*
  %16597 = load i64, i64* %RBP.i152
  %16598 = load i64, i64* %RSI.i151
  %16599 = mul i64 %16598, 4
  %16600 = add i64 %16597, -2640
  %16601 = add i64 %16600, %16599
  %16602 = load i64, i64* %PC.i149
  %16603 = add i64 %16602, 7
  store i64 %16603, i64* %PC.i149
  %16604 = inttoptr i64 %16601 to i32*
  %16605 = load i32, i32* %16604
  %16606 = zext i32 %16605 to i64
  store i64 %16606, i64* %RDX.i150, align 8
  store %struct.Memory* %loadMem_4016da, %struct.Memory** %MEMORY
  %loadMem_4016e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16608 = getelementptr inbounds %struct.GPR, %struct.GPR* %16607, i32 0, i32 33
  %16609 = getelementptr inbounds %struct.Reg, %struct.Reg* %16608, i32 0, i32 0
  %PC.i146 = bitcast %union.anon* %16609 to i64*
  %16610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16611 = getelementptr inbounds %struct.GPR, %struct.GPR* %16610, i32 0, i32 9
  %16612 = getelementptr inbounds %struct.Reg, %struct.Reg* %16611, i32 0, i32 0
  %RSI.i147 = bitcast %union.anon* %16612 to i64*
  %16613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16614 = getelementptr inbounds %struct.GPR, %struct.GPR* %16613, i32 0, i32 15
  %16615 = getelementptr inbounds %struct.Reg, %struct.Reg* %16614, i32 0, i32 0
  %RBP.i148 = bitcast %union.anon* %16615 to i64*
  %16616 = load i64, i64* %RBP.i148
  %16617 = sub i64 %16616, 4
  %16618 = load i64, i64* %PC.i146
  %16619 = add i64 %16618, 4
  store i64 %16619, i64* %PC.i146
  %16620 = inttoptr i64 %16617 to i32*
  %16621 = load i32, i32* %16620
  %16622 = sext i32 %16621 to i64
  store i64 %16622, i64* %RSI.i147, align 8
  store %struct.Memory* %loadMem_4016e1, %struct.Memory** %MEMORY
  %loadMem_4016e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16624 = getelementptr inbounds %struct.GPR, %struct.GPR* %16623, i32 0, i32 33
  %16625 = getelementptr inbounds %struct.Reg, %struct.Reg* %16624, i32 0, i32 0
  %PC.i143 = bitcast %union.anon* %16625 to i64*
  %16626 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16627 = getelementptr inbounds %struct.GPR, %struct.GPR* %16626, i32 0, i32 9
  %16628 = getelementptr inbounds %struct.Reg, %struct.Reg* %16627, i32 0, i32 0
  %RSI.i144 = bitcast %union.anon* %16628 to i64*
  %16629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16630 = getelementptr inbounds %struct.GPR, %struct.GPR* %16629, i32 0, i32 15
  %16631 = getelementptr inbounds %struct.Reg, %struct.Reg* %16630, i32 0, i32 0
  %RBP.i145 = bitcast %union.anon* %16631 to i64*
  %16632 = load i64, i64* %RBP.i145
  %16633 = load i64, i64* %RSI.i144
  %16634 = mul i64 %16633, 4
  %16635 = add i64 %16632, -1568
  %16636 = add i64 %16635, %16634
  %16637 = load i64, i64* %PC.i143
  %16638 = add i64 %16637, 8
  store i64 %16638, i64* %PC.i143
  %16639 = inttoptr i64 %16636 to i32*
  %16640 = load i32, i32* %16639
  %16641 = sext i32 %16640 to i64
  store i64 %16641, i64* %RSI.i144, align 8
  store %struct.Memory* %loadMem_4016e5, %struct.Memory** %MEMORY
  %loadMem_4016ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %16642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16643 = getelementptr inbounds %struct.GPR, %struct.GPR* %16642, i32 0, i32 33
  %16644 = getelementptr inbounds %struct.Reg, %struct.Reg* %16643, i32 0, i32 0
  %PC.i141 = bitcast %union.anon* %16644 to i64*
  %16645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16646 = getelementptr inbounds %struct.GPR, %struct.GPR* %16645, i32 0, i32 7
  %16647 = getelementptr inbounds %struct.Reg, %struct.Reg* %16646, i32 0, i32 0
  %RDX.i = bitcast %union.anon* %16647 to i64*
  %16648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16649 = getelementptr inbounds %struct.GPR, %struct.GPR* %16648, i32 0, i32 9
  %16650 = getelementptr inbounds %struct.Reg, %struct.Reg* %16649, i32 0, i32 0
  %RSI.i142 = bitcast %union.anon* %16650 to i64*
  %16651 = load i64, i64* %RDX.i
  %16652 = load i64, i64* %RSI.i142
  %16653 = mul i64 %16652, 4
  %16654 = add i64 %16653, 6303872
  %16655 = load i64, i64* %PC.i141
  %16656 = add i64 %16655, 7
  store i64 %16656, i64* %PC.i141
  %16657 = trunc i64 %16651 to i32
  %16658 = inttoptr i64 %16654 to i32*
  %16659 = load i32, i32* %16658
  %16660 = xor i32 %16659, %16657
  %16661 = zext i32 %16660 to i64
  store i64 %16661, i64* %RDX.i, align 8
  %16662 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %16662, align 1
  %16663 = and i32 %16660, 255
  %16664 = call i32 @llvm.ctpop.i32(i32 %16663)
  %16665 = trunc i32 %16664 to i8
  %16666 = and i8 %16665, 1
  %16667 = xor i8 %16666, 1
  %16668 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16667, i8* %16668, align 1
  %16669 = icmp eq i32 %16660, 0
  %16670 = zext i1 %16669 to i8
  %16671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16670, i8* %16671, align 1
  %16672 = lshr i32 %16660, 31
  %16673 = trunc i32 %16672 to i8
  %16674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16673, i8* %16674, align 1
  %16675 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %16675, align 1
  %16676 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16676, align 1
  store %struct.Memory* %loadMem_4016ed, %struct.Memory** %MEMORY
  %loadMem_4016f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16678 = getelementptr inbounds %struct.GPR, %struct.GPR* %16677, i32 0, i32 33
  %16679 = getelementptr inbounds %struct.Reg, %struct.Reg* %16678, i32 0, i32 0
  %PC.i140 = bitcast %union.anon* %16679 to i64*
  %16680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16681 = getelementptr inbounds %struct.GPR, %struct.GPR* %16680, i32 0, i32 7
  %16682 = getelementptr inbounds %struct.Reg, %struct.Reg* %16681, i32 0, i32 0
  %EDX.i = bitcast %union.anon* %16682 to i32*
  %16683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16684 = getelementptr inbounds %struct.GPR, %struct.GPR* %16683, i32 0, i32 9
  %16685 = getelementptr inbounds %struct.Reg, %struct.Reg* %16684, i32 0, i32 0
  %RSI.i = bitcast %union.anon* %16685 to i64*
  %16686 = load i64, i64* %RSI.i
  %16687 = mul i64 %16686, 4
  %16688 = add i64 %16687, 6303872
  %16689 = load i32, i32* %EDX.i
  %16690 = zext i32 %16689 to i64
  %16691 = load i64, i64* %PC.i140
  %16692 = add i64 %16691, 7
  store i64 %16692, i64* %PC.i140
  %16693 = inttoptr i64 %16688 to i32*
  store i32 %16689, i32* %16693
  store %struct.Memory* %loadMem_4016f4, %struct.Memory** %MEMORY
  br label %block_.L_4016fb

block_.L_4016fb:                                  ; preds = %routine_idivl__ecx.exit, %block_.L_4015a2
  %loadMem_4016fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %16694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16695 = getelementptr inbounds %struct.GPR, %struct.GPR* %16694, i32 0, i32 33
  %16696 = getelementptr inbounds %struct.Reg, %struct.Reg* %16695, i32 0, i32 0
  %PC.i139 = bitcast %union.anon* %16696 to i64*
  %16697 = load i64, i64* %PC.i139
  %16698 = add i64 %16697, 5
  %16699 = load i64, i64* %PC.i139
  %16700 = add i64 %16699, 5
  store i64 %16700, i64* %PC.i139
  %16701 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %16698, i64* %16701, align 8
  store %struct.Memory* %loadMem_4016fb, %struct.Memory** %MEMORY
  br label %block_.L_401700

block_.L_401700:                                  ; preds = %block_.L_4016fb
  %loadMem_401700 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16702 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16703 = getelementptr inbounds %struct.GPR, %struct.GPR* %16702, i32 0, i32 33
  %16704 = getelementptr inbounds %struct.Reg, %struct.Reg* %16703, i32 0, i32 0
  %PC.i136 = bitcast %union.anon* %16704 to i64*
  %16705 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16706 = getelementptr inbounds %struct.GPR, %struct.GPR* %16705, i32 0, i32 1
  %16707 = getelementptr inbounds %struct.Reg, %struct.Reg* %16706, i32 0, i32 0
  %RAX.i137 = bitcast %union.anon* %16707 to i64*
  %16708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16709 = getelementptr inbounds %struct.GPR, %struct.GPR* %16708, i32 0, i32 15
  %16710 = getelementptr inbounds %struct.Reg, %struct.Reg* %16709, i32 0, i32 0
  %RBP.i138 = bitcast %union.anon* %16710 to i64*
  %16711 = load i64, i64* %RBP.i138
  %16712 = sub i64 %16711, 4
  %16713 = load i64, i64* %PC.i136
  %16714 = add i64 %16713, 3
  store i64 %16714, i64* %PC.i136
  %16715 = inttoptr i64 %16712 to i32*
  %16716 = load i32, i32* %16715
  %16717 = zext i32 %16716 to i64
  store i64 %16717, i64* %RAX.i137, align 8
  store %struct.Memory* %loadMem_401700, %struct.Memory** %MEMORY
  %loadMem_401703 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16719 = getelementptr inbounds %struct.GPR, %struct.GPR* %16718, i32 0, i32 33
  %16720 = getelementptr inbounds %struct.Reg, %struct.Reg* %16719, i32 0, i32 0
  %PC.i134 = bitcast %union.anon* %16720 to i64*
  %16721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16722 = getelementptr inbounds %struct.GPR, %struct.GPR* %16721, i32 0, i32 1
  %16723 = getelementptr inbounds %struct.Reg, %struct.Reg* %16722, i32 0, i32 0
  %RAX.i135 = bitcast %union.anon* %16723 to i64*
  %16724 = load i64, i64* %RAX.i135
  %16725 = load i64, i64* %PC.i134
  %16726 = add i64 %16725, 3
  store i64 %16726, i64* %PC.i134
  %16727 = trunc i64 %16724 to i32
  %16728 = add i32 1, %16727
  %16729 = zext i32 %16728 to i64
  store i64 %16729, i64* %RAX.i135, align 8
  %16730 = icmp ult i32 %16728, %16727
  %16731 = icmp ult i32 %16728, 1
  %16732 = or i1 %16730, %16731
  %16733 = zext i1 %16732 to i8
  %16734 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16733, i8* %16734, align 1
  %16735 = and i32 %16728, 255
  %16736 = call i32 @llvm.ctpop.i32(i32 %16735)
  %16737 = trunc i32 %16736 to i8
  %16738 = and i8 %16737, 1
  %16739 = xor i8 %16738, 1
  %16740 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16739, i8* %16740, align 1
  %16741 = xor i64 1, %16724
  %16742 = trunc i64 %16741 to i32
  %16743 = xor i32 %16742, %16728
  %16744 = lshr i32 %16743, 4
  %16745 = trunc i32 %16744 to i8
  %16746 = and i8 %16745, 1
  %16747 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16746, i8* %16747, align 1
  %16748 = icmp eq i32 %16728, 0
  %16749 = zext i1 %16748 to i8
  %16750 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16749, i8* %16750, align 1
  %16751 = lshr i32 %16728, 31
  %16752 = trunc i32 %16751 to i8
  %16753 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16752, i8* %16753, align 1
  %16754 = lshr i32 %16727, 31
  %16755 = xor i32 %16751, %16754
  %16756 = add i32 %16755, %16751
  %16757 = icmp eq i32 %16756, 2
  %16758 = zext i1 %16757 to i8
  %16759 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16758, i8* %16759, align 1
  store %struct.Memory* %loadMem_401703, %struct.Memory** %MEMORY
  %loadMem_401706 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16761 = getelementptr inbounds %struct.GPR, %struct.GPR* %16760, i32 0, i32 33
  %16762 = getelementptr inbounds %struct.Reg, %struct.Reg* %16761, i32 0, i32 0
  %PC.i131 = bitcast %union.anon* %16762 to i64*
  %16763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16764 = getelementptr inbounds %struct.GPR, %struct.GPR* %16763, i32 0, i32 1
  %16765 = getelementptr inbounds %struct.Reg, %struct.Reg* %16764, i32 0, i32 0
  %EAX.i132 = bitcast %union.anon* %16765 to i32*
  %16766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16767 = getelementptr inbounds %struct.GPR, %struct.GPR* %16766, i32 0, i32 15
  %16768 = getelementptr inbounds %struct.Reg, %struct.Reg* %16767, i32 0, i32 0
  %RBP.i133 = bitcast %union.anon* %16768 to i64*
  %16769 = load i64, i64* %RBP.i133
  %16770 = sub i64 %16769, 4
  %16771 = load i32, i32* %EAX.i132
  %16772 = zext i32 %16771 to i64
  %16773 = load i64, i64* %PC.i131
  %16774 = add i64 %16773, 3
  store i64 %16774, i64* %PC.i131
  %16775 = inttoptr i64 %16770 to i32*
  store i32 %16771, i32* %16775
  store %struct.Memory* %loadMem_401706, %struct.Memory** %MEMORY
  %loadMem_401709 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16777 = getelementptr inbounds %struct.GPR, %struct.GPR* %16776, i32 0, i32 33
  %16778 = getelementptr inbounds %struct.Reg, %struct.Reg* %16777, i32 0, i32 0
  %PC.i130 = bitcast %union.anon* %16778 to i64*
  %16779 = load i64, i64* %PC.i130
  %16780 = add i64 %16779, -552
  %16781 = load i64, i64* %PC.i130
  %16782 = add i64 %16781, 5
  store i64 %16782, i64* %PC.i130
  %16783 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %16780, i64* %16783, align 8
  store %struct.Memory* %loadMem_401709, %struct.Memory** %MEMORY
  br label %block_.L_4014e1

block_.L_40170e:                                  ; preds = %block_.L_4014e1
  %loadMem_40170e = load %struct.Memory*, %struct.Memory** %MEMORY
  %16784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16785 = getelementptr inbounds %struct.GPR, %struct.GPR* %16784, i32 0, i32 33
  %16786 = getelementptr inbounds %struct.Reg, %struct.Reg* %16785, i32 0, i32 0
  %PC.i129 = bitcast %union.anon* %16786 to i64*
  %16787 = load i64, i64* %PC.i129
  %16788 = add i64 %16787, 117
  %16789 = load i64, i64* %PC.i129
  %16790 = add i64 %16789, 5
  store i64 %16790, i64* %PC.i129
  %16791 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %16788, i64* %16791, align 8
  store %struct.Memory* %loadMem_40170e, %struct.Memory** %MEMORY
  br label %block_.L_401783

block_.L_401713:                                  ; preds = %block_.L_401203
  %loadMem_401713 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16793 = getelementptr inbounds %struct.GPR, %struct.GPR* %16792, i32 0, i32 33
  %16794 = getelementptr inbounds %struct.Reg, %struct.Reg* %16793, i32 0, i32 0
  %PC.i127 = bitcast %union.anon* %16794 to i64*
  %16795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16796 = getelementptr inbounds %struct.GPR, %struct.GPR* %16795, i32 0, i32 15
  %16797 = getelementptr inbounds %struct.Reg, %struct.Reg* %16796, i32 0, i32 0
  %RBP.i128 = bitcast %union.anon* %16797 to i64*
  %16798 = load i64, i64* %RBP.i128
  %16799 = sub i64 %16798, 4
  %16800 = load i64, i64* %PC.i127
  %16801 = add i64 %16800, 7
  store i64 %16801, i64* %PC.i127
  %16802 = inttoptr i64 %16799 to i32*
  store i32 0, i32* %16802
  store %struct.Memory* %loadMem_401713, %struct.Memory** %MEMORY
  br label %block_.L_40171a

block_.L_40171a:                                  ; preds = %block_.L_401770, %block_.L_401713
  %loadMem_40171a = load %struct.Memory*, %struct.Memory** %MEMORY
  %16803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16804 = getelementptr inbounds %struct.GPR, %struct.GPR* %16803, i32 0, i32 33
  %16805 = getelementptr inbounds %struct.Reg, %struct.Reg* %16804, i32 0, i32 0
  %PC.i125 = bitcast %union.anon* %16805 to i64*
  %16806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16807 = getelementptr inbounds %struct.GPR, %struct.GPR* %16806, i32 0, i32 15
  %16808 = getelementptr inbounds %struct.Reg, %struct.Reg* %16807, i32 0, i32 0
  %RBP.i126 = bitcast %union.anon* %16808 to i64*
  %16809 = load i64, i64* %RBP.i126
  %16810 = sub i64 %16809, 4
  %16811 = load i64, i64* %PC.i125
  %16812 = add i64 %16811, 7
  store i64 %16812, i64* %PC.i125
  %16813 = inttoptr i64 %16810 to i32*
  %16814 = load i32, i32* %16813
  %16815 = sub i32 %16814, 255
  %16816 = icmp ult i32 %16814, 255
  %16817 = zext i1 %16816 to i8
  %16818 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16817, i8* %16818, align 1
  %16819 = and i32 %16815, 255
  %16820 = call i32 @llvm.ctpop.i32(i32 %16819)
  %16821 = trunc i32 %16820 to i8
  %16822 = and i8 %16821, 1
  %16823 = xor i8 %16822, 1
  %16824 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16823, i8* %16824, align 1
  %16825 = xor i32 %16814, 255
  %16826 = xor i32 %16825, %16815
  %16827 = lshr i32 %16826, 4
  %16828 = trunc i32 %16827 to i8
  %16829 = and i8 %16828, 1
  %16830 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16829, i8* %16830, align 1
  %16831 = icmp eq i32 %16815, 0
  %16832 = zext i1 %16831 to i8
  %16833 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16832, i8* %16833, align 1
  %16834 = lshr i32 %16815, 31
  %16835 = trunc i32 %16834 to i8
  %16836 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16835, i8* %16836, align 1
  %16837 = lshr i32 %16814, 31
  %16838 = xor i32 %16834, %16837
  %16839 = add i32 %16838, %16837
  %16840 = icmp eq i32 %16839, 2
  %16841 = zext i1 %16840 to i8
  %16842 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16841, i8* %16842, align 1
  store %struct.Memory* %loadMem_40171a, %struct.Memory** %MEMORY
  %loadMem_401721 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16844 = getelementptr inbounds %struct.GPR, %struct.GPR* %16843, i32 0, i32 33
  %16845 = getelementptr inbounds %struct.Reg, %struct.Reg* %16844, i32 0, i32 0
  %PC.i124 = bitcast %union.anon* %16845 to i64*
  %16846 = load i64, i64* %PC.i124
  %16847 = add i64 %16846, 93
  %16848 = load i64, i64* %PC.i124
  %16849 = add i64 %16848, 6
  %16850 = load i64, i64* %PC.i124
  %16851 = add i64 %16850, 6
  store i64 %16851, i64* %PC.i124
  %16852 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16853 = load i8, i8* %16852, align 1
  %16854 = icmp ne i8 %16853, 0
  %16855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16856 = load i8, i8* %16855, align 1
  %16857 = icmp ne i8 %16856, 0
  %16858 = xor i1 %16854, %16857
  %16859 = xor i1 %16858, true
  %16860 = zext i1 %16859 to i8
  store i8 %16860, i8* %BRANCH_TAKEN, align 1
  %16861 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %16862 = select i1 %16858, i64 %16849, i64 %16847
  store i64 %16862, i64* %16861, align 8
  store %struct.Memory* %loadMem_401721, %struct.Memory** %MEMORY
  %loadBr_401721 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_401721 = icmp eq i8 %loadBr_401721, 1
  br i1 %cmpBr_401721, label %block_.L_40177e, label %block_401727

block_401727:                                     ; preds = %block_.L_40171a
  %loadMem_401727 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16864 = getelementptr inbounds %struct.GPR, %struct.GPR* %16863, i32 0, i32 33
  %16865 = getelementptr inbounds %struct.Reg, %struct.Reg* %16864, i32 0, i32 0
  %PC.i121 = bitcast %union.anon* %16865 to i64*
  %16866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16867 = getelementptr inbounds %struct.GPR, %struct.GPR* %16866, i32 0, i32 1
  %16868 = getelementptr inbounds %struct.Reg, %struct.Reg* %16867, i32 0, i32 0
  %RAX.i122 = bitcast %union.anon* %16868 to i64*
  %16869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16870 = getelementptr inbounds %struct.GPR, %struct.GPR* %16869, i32 0, i32 15
  %16871 = getelementptr inbounds %struct.Reg, %struct.Reg* %16870, i32 0, i32 0
  %RBP.i123 = bitcast %union.anon* %16871 to i64*
  %16872 = load i64, i64* %RBP.i123
  %16873 = sub i64 %16872, 4
  %16874 = load i64, i64* %PC.i121
  %16875 = add i64 %16874, 4
  store i64 %16875, i64* %PC.i121
  %16876 = inttoptr i64 %16873 to i32*
  %16877 = load i32, i32* %16876
  %16878 = sext i32 %16877 to i64
  store i64 %16878, i64* %RAX.i122, align 8
  store %struct.Memory* %loadMem_401727, %struct.Memory** %MEMORY
  %loadMem_40172b = load %struct.Memory*, %struct.Memory** %MEMORY
  %16879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16880 = getelementptr inbounds %struct.GPR, %struct.GPR* %16879, i32 0, i32 33
  %16881 = getelementptr inbounds %struct.Reg, %struct.Reg* %16880, i32 0, i32 0
  %PC.i119 = bitcast %union.anon* %16881 to i64*
  %16882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16883 = getelementptr inbounds %struct.GPR, %struct.GPR* %16882, i32 0, i32 1
  %16884 = getelementptr inbounds %struct.Reg, %struct.Reg* %16883, i32 0, i32 0
  %RAX.i120 = bitcast %union.anon* %16884 to i64*
  %16885 = load i64, i64* %RAX.i120
  %16886 = mul i64 %16885, 4
  %16887 = add i64 %16886, 6303872
  %16888 = load i64, i64* %PC.i119
  %16889 = add i64 %16888, 8
  store i64 %16889, i64* %PC.i119
  %16890 = inttoptr i64 %16887 to i32*
  %16891 = load i32, i32* %16890
  %16892 = sub i32 %16891, -1
  %16893 = icmp ult i32 %16891, -1
  %16894 = zext i1 %16893 to i8
  %16895 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16894, i8* %16895, align 1
  %16896 = and i32 %16892, 255
  %16897 = call i32 @llvm.ctpop.i32(i32 %16896)
  %16898 = trunc i32 %16897 to i8
  %16899 = and i8 %16898, 1
  %16900 = xor i8 %16899, 1
  %16901 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16900, i8* %16901, align 1
  %16902 = xor i32 %16891, -1
  %16903 = xor i32 %16902, %16892
  %16904 = lshr i32 %16903, 4
  %16905 = trunc i32 %16904 to i8
  %16906 = and i8 %16905, 1
  %16907 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16906, i8* %16907, align 1
  %16908 = icmp eq i32 %16892, 0
  %16909 = zext i1 %16908 to i8
  %16910 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16909, i8* %16910, align 1
  %16911 = lshr i32 %16892, 31
  %16912 = trunc i32 %16911 to i8
  %16913 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16912, i8* %16913, align 1
  %16914 = lshr i32 %16891, 31
  %16915 = xor i32 %16914, 1
  %16916 = xor i32 %16911, %16914
  %16917 = add i32 %16916, %16915
  %16918 = icmp eq i32 %16917, 2
  %16919 = zext i1 %16918 to i8
  %16920 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16919, i8* %16920, align 1
  store %struct.Memory* %loadMem_40172b, %struct.Memory** %MEMORY
  %loadMem_401733 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16922 = getelementptr inbounds %struct.GPR, %struct.GPR* %16921, i32 0, i32 33
  %16923 = getelementptr inbounds %struct.Reg, %struct.Reg* %16922, i32 0, i32 0
  %PC.i118 = bitcast %union.anon* %16923 to i64*
  %16924 = load i64, i64* %PC.i118
  %16925 = add i64 %16924, 41
  %16926 = load i64, i64* %PC.i118
  %16927 = add i64 %16926, 6
  %16928 = load i64, i64* %PC.i118
  %16929 = add i64 %16928, 6
  store i64 %16929, i64* %PC.i118
  %16930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %16931 = load i8, i8* %16930, align 1
  store i8 %16931, i8* %BRANCH_TAKEN, align 1
  %16932 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %16933 = icmp ne i8 %16931, 0
  %16934 = select i1 %16933, i64 %16925, i64 %16927
  store i64 %16934, i64* %16932, align 8
  store %struct.Memory* %loadMem_401733, %struct.Memory** %MEMORY
  %loadBr_401733 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_401733 = icmp eq i8 %loadBr_401733, 1
  br i1 %cmpBr_401733, label %block_.L_40175c, label %block_401739

block_401739:                                     ; preds = %block_401727
  %loadMem_401739 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16936 = getelementptr inbounds %struct.GPR, %struct.GPR* %16935, i32 0, i32 33
  %16937 = getelementptr inbounds %struct.Reg, %struct.Reg* %16936, i32 0, i32 0
  %PC.i115 = bitcast %union.anon* %16937 to i64*
  %16938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16939 = getelementptr inbounds %struct.GPR, %struct.GPR* %16938, i32 0, i32 1
  %16940 = getelementptr inbounds %struct.Reg, %struct.Reg* %16939, i32 0, i32 0
  %RAX.i116 = bitcast %union.anon* %16940 to i64*
  %16941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16942 = getelementptr inbounds %struct.GPR, %struct.GPR* %16941, i32 0, i32 15
  %16943 = getelementptr inbounds %struct.Reg, %struct.Reg* %16942, i32 0, i32 0
  %RBP.i117 = bitcast %union.anon* %16943 to i64*
  %16944 = load i64, i64* %RBP.i117
  %16945 = sub i64 %16944, 4
  %16946 = load i64, i64* %PC.i115
  %16947 = add i64 %16946, 4
  store i64 %16947, i64* %PC.i115
  %16948 = inttoptr i64 %16945 to i32*
  %16949 = load i32, i32* %16948
  %16950 = sext i32 %16949 to i64
  store i64 %16950, i64* %RAX.i116, align 8
  store %struct.Memory* %loadMem_401739, %struct.Memory** %MEMORY
  %loadMem_40173d = load %struct.Memory*, %struct.Memory** %MEMORY
  %16951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16952 = getelementptr inbounds %struct.GPR, %struct.GPR* %16951, i32 0, i32 33
  %16953 = getelementptr inbounds %struct.Reg, %struct.Reg* %16952, i32 0, i32 0
  %PC.i113 = bitcast %union.anon* %16953 to i64*
  %16954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16955 = getelementptr inbounds %struct.GPR, %struct.GPR* %16954, i32 0, i32 1
  %16956 = getelementptr inbounds %struct.Reg, %struct.Reg* %16955, i32 0, i32 0
  %RAX.i114 = bitcast %union.anon* %16956 to i64*
  %16957 = load i64, i64* %RAX.i114
  %16958 = mul i64 %16957, 4
  %16959 = add i64 %16958, 6303872
  %16960 = load i64, i64* %PC.i113
  %16961 = add i64 %16960, 8
  store i64 %16961, i64* %PC.i113
  %16962 = inttoptr i64 %16959 to i32*
  %16963 = load i32, i32* %16962
  %16964 = sext i32 %16963 to i64
  store i64 %16964, i64* %RAX.i114, align 8
  store %struct.Memory* %loadMem_40173d, %struct.Memory** %MEMORY
  %loadMem_401745 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16966 = getelementptr inbounds %struct.GPR, %struct.GPR* %16965, i32 0, i32 33
  %16967 = getelementptr inbounds %struct.Reg, %struct.Reg* %16966, i32 0, i32 0
  %PC.i110 = bitcast %union.anon* %16967 to i64*
  %16968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16969 = getelementptr inbounds %struct.GPR, %struct.GPR* %16968, i32 0, i32 1
  %16970 = getelementptr inbounds %struct.Reg, %struct.Reg* %16969, i32 0, i32 0
  %RAX.i111 = bitcast %union.anon* %16970 to i64*
  %16971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16972 = getelementptr inbounds %struct.GPR, %struct.GPR* %16971, i32 0, i32 5
  %16973 = getelementptr inbounds %struct.Reg, %struct.Reg* %16972, i32 0, i32 0
  %RCX.i112 = bitcast %union.anon* %16973 to i64*
  %16974 = load i64, i64* %RAX.i111
  %16975 = mul i64 %16974, 4
  %16976 = add i64 %16975, 6305920
  %16977 = load i64, i64* %PC.i110
  %16978 = add i64 %16977, 7
  store i64 %16978, i64* %PC.i110
  %16979 = inttoptr i64 %16976 to i32*
  %16980 = load i32, i32* %16979
  %16981 = zext i32 %16980 to i64
  store i64 %16981, i64* %RCX.i112, align 8
  store %struct.Memory* %loadMem_401745, %struct.Memory** %MEMORY
  %loadMem_40174c = load %struct.Memory*, %struct.Memory** %MEMORY
  %16982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16983 = getelementptr inbounds %struct.GPR, %struct.GPR* %16982, i32 0, i32 33
  %16984 = getelementptr inbounds %struct.Reg, %struct.Reg* %16983, i32 0, i32 0
  %PC.i107 = bitcast %union.anon* %16984 to i64*
  %16985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16986 = getelementptr inbounds %struct.GPR, %struct.GPR* %16985, i32 0, i32 1
  %16987 = getelementptr inbounds %struct.Reg, %struct.Reg* %16986, i32 0, i32 0
  %RAX.i108 = bitcast %union.anon* %16987 to i64*
  %16988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16989 = getelementptr inbounds %struct.GPR, %struct.GPR* %16988, i32 0, i32 15
  %16990 = getelementptr inbounds %struct.Reg, %struct.Reg* %16989, i32 0, i32 0
  %RBP.i109 = bitcast %union.anon* %16990 to i64*
  %16991 = load i64, i64* %RBP.i109
  %16992 = sub i64 %16991, 4
  %16993 = load i64, i64* %PC.i107
  %16994 = add i64 %16993, 4
  store i64 %16994, i64* %PC.i107
  %16995 = inttoptr i64 %16992 to i32*
  %16996 = load i32, i32* %16995
  %16997 = sext i32 %16996 to i64
  store i64 %16997, i64* %RAX.i108, align 8
  store %struct.Memory* %loadMem_40174c, %struct.Memory** %MEMORY
  %loadMem_401750 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16999 = getelementptr inbounds %struct.GPR, %struct.GPR* %16998, i32 0, i32 33
  %17000 = getelementptr inbounds %struct.Reg, %struct.Reg* %16999, i32 0, i32 0
  %PC.i104 = bitcast %union.anon* %17000 to i64*
  %17001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17002 = getelementptr inbounds %struct.GPR, %struct.GPR* %17001, i32 0, i32 5
  %17003 = getelementptr inbounds %struct.Reg, %struct.Reg* %17002, i32 0, i32 0
  %ECX.i105 = bitcast %union.anon* %17003 to i32*
  %17004 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17005 = getelementptr inbounds %struct.GPR, %struct.GPR* %17004, i32 0, i32 1
  %17006 = getelementptr inbounds %struct.Reg, %struct.Reg* %17005, i32 0, i32 0
  %RAX.i106 = bitcast %union.anon* %17006 to i64*
  %17007 = load i64, i64* %RAX.i106
  %17008 = mul i64 %17007, 4
  %17009 = add i64 %17008, 6303872
  %17010 = load i32, i32* %ECX.i105
  %17011 = zext i32 %17010 to i64
  %17012 = load i64, i64* %PC.i104
  %17013 = add i64 %17012, 7
  store i64 %17013, i64* %PC.i104
  %17014 = inttoptr i64 %17009 to i32*
  store i32 %17010, i32* %17014
  store %struct.Memory* %loadMem_401750, %struct.Memory** %MEMORY
  %loadMem_401757 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17016 = getelementptr inbounds %struct.GPR, %struct.GPR* %17015, i32 0, i32 33
  %17017 = getelementptr inbounds %struct.Reg, %struct.Reg* %17016, i32 0, i32 0
  %PC.i103 = bitcast %union.anon* %17017 to i64*
  %17018 = load i64, i64* %PC.i103
  %17019 = add i64 %17018, 20
  %17020 = load i64, i64* %PC.i103
  %17021 = add i64 %17020, 5
  store i64 %17021, i64* %PC.i103
  %17022 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %17019, i64* %17022, align 8
  store %struct.Memory* %loadMem_401757, %struct.Memory** %MEMORY
  br label %block_.L_40176b

block_.L_40175c:                                  ; preds = %block_401727
  %loadMem_40175c = load %struct.Memory*, %struct.Memory** %MEMORY
  %17023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17024 = getelementptr inbounds %struct.GPR, %struct.GPR* %17023, i32 0, i32 33
  %17025 = getelementptr inbounds %struct.Reg, %struct.Reg* %17024, i32 0, i32 0
  %PC.i100 = bitcast %union.anon* %17025 to i64*
  %17026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17027 = getelementptr inbounds %struct.GPR, %struct.GPR* %17026, i32 0, i32 1
  %17028 = getelementptr inbounds %struct.Reg, %struct.Reg* %17027, i32 0, i32 0
  %RAX.i101 = bitcast %union.anon* %17028 to i64*
  %17029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17030 = getelementptr inbounds %struct.GPR, %struct.GPR* %17029, i32 0, i32 15
  %17031 = getelementptr inbounds %struct.Reg, %struct.Reg* %17030, i32 0, i32 0
  %RBP.i102 = bitcast %union.anon* %17031 to i64*
  %17032 = load i64, i64* %RBP.i102
  %17033 = sub i64 %17032, 4
  %17034 = load i64, i64* %PC.i100
  %17035 = add i64 %17034, 4
  store i64 %17035, i64* %PC.i100
  %17036 = inttoptr i64 %17033 to i32*
  %17037 = load i32, i32* %17036
  %17038 = sext i32 %17037 to i64
  store i64 %17038, i64* %RAX.i101, align 8
  store %struct.Memory* %loadMem_40175c, %struct.Memory** %MEMORY
  %loadMem_401760 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17040 = getelementptr inbounds %struct.GPR, %struct.GPR* %17039, i32 0, i32 33
  %17041 = getelementptr inbounds %struct.Reg, %struct.Reg* %17040, i32 0, i32 0
  %PC.i98 = bitcast %union.anon* %17041 to i64*
  %17042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17043 = getelementptr inbounds %struct.GPR, %struct.GPR* %17042, i32 0, i32 1
  %17044 = getelementptr inbounds %struct.Reg, %struct.Reg* %17043, i32 0, i32 0
  %RAX.i99 = bitcast %union.anon* %17044 to i64*
  %17045 = load i64, i64* %RAX.i99
  %17046 = mul i64 %17045, 4
  %17047 = add i64 %17046, 6303872
  %17048 = load i64, i64* %PC.i98
  %17049 = add i64 %17048, 11
  store i64 %17049, i64* %PC.i98
  %17050 = inttoptr i64 %17047 to i32*
  store i32 0, i32* %17050
  store %struct.Memory* %loadMem_401760, %struct.Memory** %MEMORY
  br label %block_.L_40176b

block_.L_40176b:                                  ; preds = %block_.L_40175c, %block_401739
  %loadMem_40176b = load %struct.Memory*, %struct.Memory** %MEMORY
  %17051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17052 = getelementptr inbounds %struct.GPR, %struct.GPR* %17051, i32 0, i32 33
  %17053 = getelementptr inbounds %struct.Reg, %struct.Reg* %17052, i32 0, i32 0
  %PC.i97 = bitcast %union.anon* %17053 to i64*
  %17054 = load i64, i64* %PC.i97
  %17055 = add i64 %17054, 5
  %17056 = load i64, i64* %PC.i97
  %17057 = add i64 %17056, 5
  store i64 %17057, i64* %PC.i97
  %17058 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %17055, i64* %17058, align 8
  store %struct.Memory* %loadMem_40176b, %struct.Memory** %MEMORY
  br label %block_.L_401770

block_.L_401770:                                  ; preds = %block_.L_40176b
  %loadMem_401770 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17060 = getelementptr inbounds %struct.GPR, %struct.GPR* %17059, i32 0, i32 33
  %17061 = getelementptr inbounds %struct.Reg, %struct.Reg* %17060, i32 0, i32 0
  %PC.i94 = bitcast %union.anon* %17061 to i64*
  %17062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17063 = getelementptr inbounds %struct.GPR, %struct.GPR* %17062, i32 0, i32 1
  %17064 = getelementptr inbounds %struct.Reg, %struct.Reg* %17063, i32 0, i32 0
  %RAX.i95 = bitcast %union.anon* %17064 to i64*
  %17065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17066 = getelementptr inbounds %struct.GPR, %struct.GPR* %17065, i32 0, i32 15
  %17067 = getelementptr inbounds %struct.Reg, %struct.Reg* %17066, i32 0, i32 0
  %RBP.i96 = bitcast %union.anon* %17067 to i64*
  %17068 = load i64, i64* %RBP.i96
  %17069 = sub i64 %17068, 4
  %17070 = load i64, i64* %PC.i94
  %17071 = add i64 %17070, 3
  store i64 %17071, i64* %PC.i94
  %17072 = inttoptr i64 %17069 to i32*
  %17073 = load i32, i32* %17072
  %17074 = zext i32 %17073 to i64
  store i64 %17074, i64* %RAX.i95, align 8
  store %struct.Memory* %loadMem_401770, %struct.Memory** %MEMORY
  %loadMem_401773 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17076 = getelementptr inbounds %struct.GPR, %struct.GPR* %17075, i32 0, i32 33
  %17077 = getelementptr inbounds %struct.Reg, %struct.Reg* %17076, i32 0, i32 0
  %PC.i92 = bitcast %union.anon* %17077 to i64*
  %17078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17079 = getelementptr inbounds %struct.GPR, %struct.GPR* %17078, i32 0, i32 1
  %17080 = getelementptr inbounds %struct.Reg, %struct.Reg* %17079, i32 0, i32 0
  %RAX.i93 = bitcast %union.anon* %17080 to i64*
  %17081 = load i64, i64* %RAX.i93
  %17082 = load i64, i64* %PC.i92
  %17083 = add i64 %17082, 3
  store i64 %17083, i64* %PC.i92
  %17084 = trunc i64 %17081 to i32
  %17085 = add i32 1, %17084
  %17086 = zext i32 %17085 to i64
  store i64 %17086, i64* %RAX.i93, align 8
  %17087 = icmp ult i32 %17085, %17084
  %17088 = icmp ult i32 %17085, 1
  %17089 = or i1 %17087, %17088
  %17090 = zext i1 %17089 to i8
  %17091 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17090, i8* %17091, align 1
  %17092 = and i32 %17085, 255
  %17093 = call i32 @llvm.ctpop.i32(i32 %17092)
  %17094 = trunc i32 %17093 to i8
  %17095 = and i8 %17094, 1
  %17096 = xor i8 %17095, 1
  %17097 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17096, i8* %17097, align 1
  %17098 = xor i64 1, %17081
  %17099 = trunc i64 %17098 to i32
  %17100 = xor i32 %17099, %17085
  %17101 = lshr i32 %17100, 4
  %17102 = trunc i32 %17101 to i8
  %17103 = and i8 %17102, 1
  %17104 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17103, i8* %17104, align 1
  %17105 = icmp eq i32 %17085, 0
  %17106 = zext i1 %17105 to i8
  %17107 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17106, i8* %17107, align 1
  %17108 = lshr i32 %17085, 31
  %17109 = trunc i32 %17108 to i8
  %17110 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17109, i8* %17110, align 1
  %17111 = lshr i32 %17084, 31
  %17112 = xor i32 %17108, %17111
  %17113 = add i32 %17112, %17108
  %17114 = icmp eq i32 %17113, 2
  %17115 = zext i1 %17114 to i8
  %17116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17115, i8* %17116, align 1
  store %struct.Memory* %loadMem_401773, %struct.Memory** %MEMORY
  %loadMem_401776 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17118 = getelementptr inbounds %struct.GPR, %struct.GPR* %17117, i32 0, i32 33
  %17119 = getelementptr inbounds %struct.Reg, %struct.Reg* %17118, i32 0, i32 0
  %PC.i89 = bitcast %union.anon* %17119 to i64*
  %17120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17121 = getelementptr inbounds %struct.GPR, %struct.GPR* %17120, i32 0, i32 1
  %17122 = getelementptr inbounds %struct.Reg, %struct.Reg* %17121, i32 0, i32 0
  %EAX.i90 = bitcast %union.anon* %17122 to i32*
  %17123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17124 = getelementptr inbounds %struct.GPR, %struct.GPR* %17123, i32 0, i32 15
  %17125 = getelementptr inbounds %struct.Reg, %struct.Reg* %17124, i32 0, i32 0
  %RBP.i91 = bitcast %union.anon* %17125 to i64*
  %17126 = load i64, i64* %RBP.i91
  %17127 = sub i64 %17126, 4
  %17128 = load i32, i32* %EAX.i90
  %17129 = zext i32 %17128 to i64
  %17130 = load i64, i64* %PC.i89
  %17131 = add i64 %17130, 3
  store i64 %17131, i64* %PC.i89
  %17132 = inttoptr i64 %17127 to i32*
  store i32 %17128, i32* %17132
  store %struct.Memory* %loadMem_401776, %struct.Memory** %MEMORY
  %loadMem_401779 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17133 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17134 = getelementptr inbounds %struct.GPR, %struct.GPR* %17133, i32 0, i32 33
  %17135 = getelementptr inbounds %struct.Reg, %struct.Reg* %17134, i32 0, i32 0
  %PC.i88 = bitcast %union.anon* %17135 to i64*
  %17136 = load i64, i64* %PC.i88
  %17137 = add i64 %17136, -95
  %17138 = load i64, i64* %PC.i88
  %17139 = add i64 %17138, 5
  store i64 %17139, i64* %PC.i88
  %17140 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %17137, i64* %17140, align 8
  store %struct.Memory* %loadMem_401779, %struct.Memory** %MEMORY
  br label %block_.L_40171a

block_.L_40177e:                                  ; preds = %block_.L_40171a
  %loadMem_40177e = load %struct.Memory*, %struct.Memory** %MEMORY
  %17141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17142 = getelementptr inbounds %struct.GPR, %struct.GPR* %17141, i32 0, i32 33
  %17143 = getelementptr inbounds %struct.Reg, %struct.Reg* %17142, i32 0, i32 0
  %PC.i87 = bitcast %union.anon* %17143 to i64*
  %17144 = load i64, i64* %PC.i87
  %17145 = add i64 %17144, 5
  %17146 = load i64, i64* %PC.i87
  %17147 = add i64 %17146, 5
  store i64 %17147, i64* %PC.i87
  %17148 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %17145, i64* %17148, align 8
  store %struct.Memory* %loadMem_40177e, %struct.Memory** %MEMORY
  br label %block_.L_401783

block_.L_401783:                                  ; preds = %block_.L_40177e, %block_.L_40170e
  %loadMem_401783 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17150 = getelementptr inbounds %struct.GPR, %struct.GPR* %17149, i32 0, i32 33
  %17151 = getelementptr inbounds %struct.Reg, %struct.Reg* %17150, i32 0, i32 0
  %PC.i86 = bitcast %union.anon* %17151 to i64*
  %17152 = load i64, i64* %PC.i86
  %17153 = add i64 %17152, 117
  %17154 = load i64, i64* %PC.i86
  %17155 = add i64 %17154, 5
  store i64 %17155, i64* %PC.i86
  %17156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %17153, i64* %17156, align 8
  store %struct.Memory* %loadMem_401783, %struct.Memory** %MEMORY
  br label %block_.L_4017f8

block_.L_401788:                                  ; preds = %block_40103c
  %loadMem_401788 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17158 = getelementptr inbounds %struct.GPR, %struct.GPR* %17157, i32 0, i32 33
  %17159 = getelementptr inbounds %struct.Reg, %struct.Reg* %17158, i32 0, i32 0
  %PC.i84 = bitcast %union.anon* %17159 to i64*
  %17160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17161 = getelementptr inbounds %struct.GPR, %struct.GPR* %17160, i32 0, i32 15
  %17162 = getelementptr inbounds %struct.Reg, %struct.Reg* %17161, i32 0, i32 0
  %RBP.i85 = bitcast %union.anon* %17162 to i64*
  %17163 = load i64, i64* %RBP.i85
  %17164 = sub i64 %17163, 4
  %17165 = load i64, i64* %PC.i84
  %17166 = add i64 %17165, 7
  store i64 %17166, i64* %PC.i84
  %17167 = inttoptr i64 %17164 to i32*
  store i32 0, i32* %17167
  store %struct.Memory* %loadMem_401788, %struct.Memory** %MEMORY
  br label %block_.L_40178f

block_.L_40178f:                                  ; preds = %block_.L_4017e5, %block_.L_401788
  %loadMem_40178f = load %struct.Memory*, %struct.Memory** %MEMORY
  %17168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17169 = getelementptr inbounds %struct.GPR, %struct.GPR* %17168, i32 0, i32 33
  %17170 = getelementptr inbounds %struct.Reg, %struct.Reg* %17169, i32 0, i32 0
  %PC.i82 = bitcast %union.anon* %17170 to i64*
  %17171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17172 = getelementptr inbounds %struct.GPR, %struct.GPR* %17171, i32 0, i32 15
  %17173 = getelementptr inbounds %struct.Reg, %struct.Reg* %17172, i32 0, i32 0
  %RBP.i83 = bitcast %union.anon* %17173 to i64*
  %17174 = load i64, i64* %RBP.i83
  %17175 = sub i64 %17174, 4
  %17176 = load i64, i64* %PC.i82
  %17177 = add i64 %17176, 7
  store i64 %17177, i64* %PC.i82
  %17178 = inttoptr i64 %17175 to i32*
  %17179 = load i32, i32* %17178
  %17180 = sub i32 %17179, 255
  %17181 = icmp ult i32 %17179, 255
  %17182 = zext i1 %17181 to i8
  %17183 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17182, i8* %17183, align 1
  %17184 = and i32 %17180, 255
  %17185 = call i32 @llvm.ctpop.i32(i32 %17184)
  %17186 = trunc i32 %17185 to i8
  %17187 = and i8 %17186, 1
  %17188 = xor i8 %17187, 1
  %17189 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17188, i8* %17189, align 1
  %17190 = xor i32 %17179, 255
  %17191 = xor i32 %17190, %17180
  %17192 = lshr i32 %17191, 4
  %17193 = trunc i32 %17192 to i8
  %17194 = and i8 %17193, 1
  %17195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17194, i8* %17195, align 1
  %17196 = icmp eq i32 %17180, 0
  %17197 = zext i1 %17196 to i8
  %17198 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17197, i8* %17198, align 1
  %17199 = lshr i32 %17180, 31
  %17200 = trunc i32 %17199 to i8
  %17201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17200, i8* %17201, align 1
  %17202 = lshr i32 %17179, 31
  %17203 = xor i32 %17199, %17202
  %17204 = add i32 %17203, %17202
  %17205 = icmp eq i32 %17204, 2
  %17206 = zext i1 %17205 to i8
  %17207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17206, i8* %17207, align 1
  store %struct.Memory* %loadMem_40178f, %struct.Memory** %MEMORY
  %loadMem_401796 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17209 = getelementptr inbounds %struct.GPR, %struct.GPR* %17208, i32 0, i32 33
  %17210 = getelementptr inbounds %struct.Reg, %struct.Reg* %17209, i32 0, i32 0
  %PC.i81 = bitcast %union.anon* %17210 to i64*
  %17211 = load i64, i64* %PC.i81
  %17212 = add i64 %17211, 93
  %17213 = load i64, i64* %PC.i81
  %17214 = add i64 %17213, 6
  %17215 = load i64, i64* %PC.i81
  %17216 = add i64 %17215, 6
  store i64 %17216, i64* %PC.i81
  %17217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %17218 = load i8, i8* %17217, align 1
  %17219 = icmp ne i8 %17218, 0
  %17220 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %17221 = load i8, i8* %17220, align 1
  %17222 = icmp ne i8 %17221, 0
  %17223 = xor i1 %17219, %17222
  %17224 = xor i1 %17223, true
  %17225 = zext i1 %17224 to i8
  store i8 %17225, i8* %BRANCH_TAKEN, align 1
  %17226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17227 = select i1 %17223, i64 %17214, i64 %17212
  store i64 %17227, i64* %17226, align 8
  store %struct.Memory* %loadMem_401796, %struct.Memory** %MEMORY
  %loadBr_401796 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_401796 = icmp eq i8 %loadBr_401796, 1
  br i1 %cmpBr_401796, label %block_.L_4017f3, label %block_40179c

block_40179c:                                     ; preds = %block_.L_40178f
  %loadMem_40179c = load %struct.Memory*, %struct.Memory** %MEMORY
  %17228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17229 = getelementptr inbounds %struct.GPR, %struct.GPR* %17228, i32 0, i32 33
  %17230 = getelementptr inbounds %struct.Reg, %struct.Reg* %17229, i32 0, i32 0
  %PC.i78 = bitcast %union.anon* %17230 to i64*
  %17231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17232 = getelementptr inbounds %struct.GPR, %struct.GPR* %17231, i32 0, i32 1
  %17233 = getelementptr inbounds %struct.Reg, %struct.Reg* %17232, i32 0, i32 0
  %RAX.i79 = bitcast %union.anon* %17233 to i64*
  %17234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17235 = getelementptr inbounds %struct.GPR, %struct.GPR* %17234, i32 0, i32 15
  %17236 = getelementptr inbounds %struct.Reg, %struct.Reg* %17235, i32 0, i32 0
  %RBP.i80 = bitcast %union.anon* %17236 to i64*
  %17237 = load i64, i64* %RBP.i80
  %17238 = sub i64 %17237, 4
  %17239 = load i64, i64* %PC.i78
  %17240 = add i64 %17239, 4
  store i64 %17240, i64* %PC.i78
  %17241 = inttoptr i64 %17238 to i32*
  %17242 = load i32, i32* %17241
  %17243 = sext i32 %17242 to i64
  store i64 %17243, i64* %RAX.i79, align 8
  store %struct.Memory* %loadMem_40179c, %struct.Memory** %MEMORY
  %loadMem_4017a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17245 = getelementptr inbounds %struct.GPR, %struct.GPR* %17244, i32 0, i32 33
  %17246 = getelementptr inbounds %struct.Reg, %struct.Reg* %17245, i32 0, i32 0
  %PC.i76 = bitcast %union.anon* %17246 to i64*
  %17247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17248 = getelementptr inbounds %struct.GPR, %struct.GPR* %17247, i32 0, i32 1
  %17249 = getelementptr inbounds %struct.Reg, %struct.Reg* %17248, i32 0, i32 0
  %RAX.i77 = bitcast %union.anon* %17249 to i64*
  %17250 = load i64, i64* %RAX.i77
  %17251 = mul i64 %17250, 4
  %17252 = add i64 %17251, 6303872
  %17253 = load i64, i64* %PC.i76
  %17254 = add i64 %17253, 8
  store i64 %17254, i64* %PC.i76
  %17255 = inttoptr i64 %17252 to i32*
  %17256 = load i32, i32* %17255
  %17257 = sub i32 %17256, -1
  %17258 = icmp ult i32 %17256, -1
  %17259 = zext i1 %17258 to i8
  %17260 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17259, i8* %17260, align 1
  %17261 = and i32 %17257, 255
  %17262 = call i32 @llvm.ctpop.i32(i32 %17261)
  %17263 = trunc i32 %17262 to i8
  %17264 = and i8 %17263, 1
  %17265 = xor i8 %17264, 1
  %17266 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17265, i8* %17266, align 1
  %17267 = xor i32 %17256, -1
  %17268 = xor i32 %17267, %17257
  %17269 = lshr i32 %17268, 4
  %17270 = trunc i32 %17269 to i8
  %17271 = and i8 %17270, 1
  %17272 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17271, i8* %17272, align 1
  %17273 = icmp eq i32 %17257, 0
  %17274 = zext i1 %17273 to i8
  %17275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17274, i8* %17275, align 1
  %17276 = lshr i32 %17257, 31
  %17277 = trunc i32 %17276 to i8
  %17278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17277, i8* %17278, align 1
  %17279 = lshr i32 %17256, 31
  %17280 = xor i32 %17279, 1
  %17281 = xor i32 %17276, %17279
  %17282 = add i32 %17281, %17280
  %17283 = icmp eq i32 %17282, 2
  %17284 = zext i1 %17283 to i8
  %17285 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17284, i8* %17285, align 1
  store %struct.Memory* %loadMem_4017a0, %struct.Memory** %MEMORY
  %loadMem_4017a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17287 = getelementptr inbounds %struct.GPR, %struct.GPR* %17286, i32 0, i32 33
  %17288 = getelementptr inbounds %struct.Reg, %struct.Reg* %17287, i32 0, i32 0
  %PC.i75 = bitcast %union.anon* %17288 to i64*
  %17289 = load i64, i64* %PC.i75
  %17290 = add i64 %17289, 41
  %17291 = load i64, i64* %PC.i75
  %17292 = add i64 %17291, 6
  %17293 = load i64, i64* %PC.i75
  %17294 = add i64 %17293, 6
  store i64 %17294, i64* %PC.i75
  %17295 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %17296 = load i8, i8* %17295, align 1
  store i8 %17296, i8* %BRANCH_TAKEN, align 1
  %17297 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17298 = icmp ne i8 %17296, 0
  %17299 = select i1 %17298, i64 %17290, i64 %17292
  store i64 %17299, i64* %17297, align 8
  store %struct.Memory* %loadMem_4017a8, %struct.Memory** %MEMORY
  %loadBr_4017a8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4017a8 = icmp eq i8 %loadBr_4017a8, 1
  br i1 %cmpBr_4017a8, label %block_.L_4017d1, label %block_4017ae

block_4017ae:                                     ; preds = %block_40179c
  %loadMem_4017ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %17300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17301 = getelementptr inbounds %struct.GPR, %struct.GPR* %17300, i32 0, i32 33
  %17302 = getelementptr inbounds %struct.Reg, %struct.Reg* %17301, i32 0, i32 0
  %PC.i72 = bitcast %union.anon* %17302 to i64*
  %17303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17304 = getelementptr inbounds %struct.GPR, %struct.GPR* %17303, i32 0, i32 1
  %17305 = getelementptr inbounds %struct.Reg, %struct.Reg* %17304, i32 0, i32 0
  %RAX.i73 = bitcast %union.anon* %17305 to i64*
  %17306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17307 = getelementptr inbounds %struct.GPR, %struct.GPR* %17306, i32 0, i32 15
  %17308 = getelementptr inbounds %struct.Reg, %struct.Reg* %17307, i32 0, i32 0
  %RBP.i74 = bitcast %union.anon* %17308 to i64*
  %17309 = load i64, i64* %RBP.i74
  %17310 = sub i64 %17309, 4
  %17311 = load i64, i64* %PC.i72
  %17312 = add i64 %17311, 4
  store i64 %17312, i64* %PC.i72
  %17313 = inttoptr i64 %17310 to i32*
  %17314 = load i32, i32* %17313
  %17315 = sext i32 %17314 to i64
  store i64 %17315, i64* %RAX.i73, align 8
  store %struct.Memory* %loadMem_4017ae, %struct.Memory** %MEMORY
  %loadMem_4017b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17317 = getelementptr inbounds %struct.GPR, %struct.GPR* %17316, i32 0, i32 33
  %17318 = getelementptr inbounds %struct.Reg, %struct.Reg* %17317, i32 0, i32 0
  %PC.i70 = bitcast %union.anon* %17318 to i64*
  %17319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17320 = getelementptr inbounds %struct.GPR, %struct.GPR* %17319, i32 0, i32 1
  %17321 = getelementptr inbounds %struct.Reg, %struct.Reg* %17320, i32 0, i32 0
  %RAX.i71 = bitcast %union.anon* %17321 to i64*
  %17322 = load i64, i64* %RAX.i71
  %17323 = mul i64 %17322, 4
  %17324 = add i64 %17323, 6303872
  %17325 = load i64, i64* %PC.i70
  %17326 = add i64 %17325, 8
  store i64 %17326, i64* %PC.i70
  %17327 = inttoptr i64 %17324 to i32*
  %17328 = load i32, i32* %17327
  %17329 = sext i32 %17328 to i64
  store i64 %17329, i64* %RAX.i71, align 8
  store %struct.Memory* %loadMem_4017b2, %struct.Memory** %MEMORY
  %loadMem_4017ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %17330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17331 = getelementptr inbounds %struct.GPR, %struct.GPR* %17330, i32 0, i32 33
  %17332 = getelementptr inbounds %struct.Reg, %struct.Reg* %17331, i32 0, i32 0
  %PC.i67 = bitcast %union.anon* %17332 to i64*
  %17333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17334 = getelementptr inbounds %struct.GPR, %struct.GPR* %17333, i32 0, i32 1
  %17335 = getelementptr inbounds %struct.Reg, %struct.Reg* %17334, i32 0, i32 0
  %RAX.i68 = bitcast %union.anon* %17335 to i64*
  %17336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17337 = getelementptr inbounds %struct.GPR, %struct.GPR* %17336, i32 0, i32 5
  %17338 = getelementptr inbounds %struct.Reg, %struct.Reg* %17337, i32 0, i32 0
  %RCX.i69 = bitcast %union.anon* %17338 to i64*
  %17339 = load i64, i64* %RAX.i68
  %17340 = mul i64 %17339, 4
  %17341 = add i64 %17340, 6305920
  %17342 = load i64, i64* %PC.i67
  %17343 = add i64 %17342, 7
  store i64 %17343, i64* %PC.i67
  %17344 = inttoptr i64 %17341 to i32*
  %17345 = load i32, i32* %17344
  %17346 = zext i32 %17345 to i64
  store i64 %17346, i64* %RCX.i69, align 8
  store %struct.Memory* %loadMem_4017ba, %struct.Memory** %MEMORY
  %loadMem_4017c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17348 = getelementptr inbounds %struct.GPR, %struct.GPR* %17347, i32 0, i32 33
  %17349 = getelementptr inbounds %struct.Reg, %struct.Reg* %17348, i32 0, i32 0
  %PC.i64 = bitcast %union.anon* %17349 to i64*
  %17350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17351 = getelementptr inbounds %struct.GPR, %struct.GPR* %17350, i32 0, i32 1
  %17352 = getelementptr inbounds %struct.Reg, %struct.Reg* %17351, i32 0, i32 0
  %RAX.i65 = bitcast %union.anon* %17352 to i64*
  %17353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17354 = getelementptr inbounds %struct.GPR, %struct.GPR* %17353, i32 0, i32 15
  %17355 = getelementptr inbounds %struct.Reg, %struct.Reg* %17354, i32 0, i32 0
  %RBP.i66 = bitcast %union.anon* %17355 to i64*
  %17356 = load i64, i64* %RBP.i66
  %17357 = sub i64 %17356, 4
  %17358 = load i64, i64* %PC.i64
  %17359 = add i64 %17358, 4
  store i64 %17359, i64* %PC.i64
  %17360 = inttoptr i64 %17357 to i32*
  %17361 = load i32, i32* %17360
  %17362 = sext i32 %17361 to i64
  store i64 %17362, i64* %RAX.i65, align 8
  store %struct.Memory* %loadMem_4017c1, %struct.Memory** %MEMORY
  %loadMem_4017c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17364 = getelementptr inbounds %struct.GPR, %struct.GPR* %17363, i32 0, i32 33
  %17365 = getelementptr inbounds %struct.Reg, %struct.Reg* %17364, i32 0, i32 0
  %PC.i61 = bitcast %union.anon* %17365 to i64*
  %17366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17367 = getelementptr inbounds %struct.GPR, %struct.GPR* %17366, i32 0, i32 5
  %17368 = getelementptr inbounds %struct.Reg, %struct.Reg* %17367, i32 0, i32 0
  %ECX.i62 = bitcast %union.anon* %17368 to i32*
  %17369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17370 = getelementptr inbounds %struct.GPR, %struct.GPR* %17369, i32 0, i32 1
  %17371 = getelementptr inbounds %struct.Reg, %struct.Reg* %17370, i32 0, i32 0
  %RAX.i63 = bitcast %union.anon* %17371 to i64*
  %17372 = load i64, i64* %RAX.i63
  %17373 = mul i64 %17372, 4
  %17374 = add i64 %17373, 6303872
  %17375 = load i32, i32* %ECX.i62
  %17376 = zext i32 %17375 to i64
  %17377 = load i64, i64* %PC.i61
  %17378 = add i64 %17377, 7
  store i64 %17378, i64* %PC.i61
  %17379 = inttoptr i64 %17374 to i32*
  store i32 %17375, i32* %17379
  store %struct.Memory* %loadMem_4017c5, %struct.Memory** %MEMORY
  %loadMem_4017cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %17380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17381 = getelementptr inbounds %struct.GPR, %struct.GPR* %17380, i32 0, i32 33
  %17382 = getelementptr inbounds %struct.Reg, %struct.Reg* %17381, i32 0, i32 0
  %PC.i60 = bitcast %union.anon* %17382 to i64*
  %17383 = load i64, i64* %PC.i60
  %17384 = add i64 %17383, 20
  %17385 = load i64, i64* %PC.i60
  %17386 = add i64 %17385, 5
  store i64 %17386, i64* %PC.i60
  %17387 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %17384, i64* %17387, align 8
  store %struct.Memory* %loadMem_4017cc, %struct.Memory** %MEMORY
  br label %block_.L_4017e0

block_.L_4017d1:                                  ; preds = %block_40179c
  %loadMem_4017d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17389 = getelementptr inbounds %struct.GPR, %struct.GPR* %17388, i32 0, i32 33
  %17390 = getelementptr inbounds %struct.Reg, %struct.Reg* %17389, i32 0, i32 0
  %PC.i57 = bitcast %union.anon* %17390 to i64*
  %17391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17392 = getelementptr inbounds %struct.GPR, %struct.GPR* %17391, i32 0, i32 1
  %17393 = getelementptr inbounds %struct.Reg, %struct.Reg* %17392, i32 0, i32 0
  %RAX.i58 = bitcast %union.anon* %17393 to i64*
  %17394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17395 = getelementptr inbounds %struct.GPR, %struct.GPR* %17394, i32 0, i32 15
  %17396 = getelementptr inbounds %struct.Reg, %struct.Reg* %17395, i32 0, i32 0
  %RBP.i59 = bitcast %union.anon* %17396 to i64*
  %17397 = load i64, i64* %RBP.i59
  %17398 = sub i64 %17397, 4
  %17399 = load i64, i64* %PC.i57
  %17400 = add i64 %17399, 4
  store i64 %17400, i64* %PC.i57
  %17401 = inttoptr i64 %17398 to i32*
  %17402 = load i32, i32* %17401
  %17403 = sext i32 %17402 to i64
  store i64 %17403, i64* %RAX.i58, align 8
  store %struct.Memory* %loadMem_4017d1, %struct.Memory** %MEMORY
  %loadMem_4017d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17405 = getelementptr inbounds %struct.GPR, %struct.GPR* %17404, i32 0, i32 33
  %17406 = getelementptr inbounds %struct.Reg, %struct.Reg* %17405, i32 0, i32 0
  %PC.i55 = bitcast %union.anon* %17406 to i64*
  %17407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17408 = getelementptr inbounds %struct.GPR, %struct.GPR* %17407, i32 0, i32 1
  %17409 = getelementptr inbounds %struct.Reg, %struct.Reg* %17408, i32 0, i32 0
  %RAX.i56 = bitcast %union.anon* %17409 to i64*
  %17410 = load i64, i64* %RAX.i56
  %17411 = mul i64 %17410, 4
  %17412 = add i64 %17411, 6303872
  %17413 = load i64, i64* %PC.i55
  %17414 = add i64 %17413, 11
  store i64 %17414, i64* %PC.i55
  %17415 = inttoptr i64 %17412 to i32*
  store i32 0, i32* %17415
  store %struct.Memory* %loadMem_4017d5, %struct.Memory** %MEMORY
  br label %block_.L_4017e0

block_.L_4017e0:                                  ; preds = %block_.L_4017d1, %block_4017ae
  %loadMem_4017e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17417 = getelementptr inbounds %struct.GPR, %struct.GPR* %17416, i32 0, i32 33
  %17418 = getelementptr inbounds %struct.Reg, %struct.Reg* %17417, i32 0, i32 0
  %PC.i54 = bitcast %union.anon* %17418 to i64*
  %17419 = load i64, i64* %PC.i54
  %17420 = add i64 %17419, 5
  %17421 = load i64, i64* %PC.i54
  %17422 = add i64 %17421, 5
  store i64 %17422, i64* %PC.i54
  %17423 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %17420, i64* %17423, align 8
  store %struct.Memory* %loadMem_4017e0, %struct.Memory** %MEMORY
  br label %block_.L_4017e5

block_.L_4017e5:                                  ; preds = %block_.L_4017e0
  %loadMem_4017e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17425 = getelementptr inbounds %struct.GPR, %struct.GPR* %17424, i32 0, i32 33
  %17426 = getelementptr inbounds %struct.Reg, %struct.Reg* %17425, i32 0, i32 0
  %PC.i51 = bitcast %union.anon* %17426 to i64*
  %17427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17428 = getelementptr inbounds %struct.GPR, %struct.GPR* %17427, i32 0, i32 1
  %17429 = getelementptr inbounds %struct.Reg, %struct.Reg* %17428, i32 0, i32 0
  %RAX.i52 = bitcast %union.anon* %17429 to i64*
  %17430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17431 = getelementptr inbounds %struct.GPR, %struct.GPR* %17430, i32 0, i32 15
  %17432 = getelementptr inbounds %struct.Reg, %struct.Reg* %17431, i32 0, i32 0
  %RBP.i53 = bitcast %union.anon* %17432 to i64*
  %17433 = load i64, i64* %RBP.i53
  %17434 = sub i64 %17433, 4
  %17435 = load i64, i64* %PC.i51
  %17436 = add i64 %17435, 3
  store i64 %17436, i64* %PC.i51
  %17437 = inttoptr i64 %17434 to i32*
  %17438 = load i32, i32* %17437
  %17439 = zext i32 %17438 to i64
  store i64 %17439, i64* %RAX.i52, align 8
  store %struct.Memory* %loadMem_4017e5, %struct.Memory** %MEMORY
  %loadMem_4017e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17441 = getelementptr inbounds %struct.GPR, %struct.GPR* %17440, i32 0, i32 33
  %17442 = getelementptr inbounds %struct.Reg, %struct.Reg* %17441, i32 0, i32 0
  %PC.i49 = bitcast %union.anon* %17442 to i64*
  %17443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17444 = getelementptr inbounds %struct.GPR, %struct.GPR* %17443, i32 0, i32 1
  %17445 = getelementptr inbounds %struct.Reg, %struct.Reg* %17444, i32 0, i32 0
  %RAX.i50 = bitcast %union.anon* %17445 to i64*
  %17446 = load i64, i64* %RAX.i50
  %17447 = load i64, i64* %PC.i49
  %17448 = add i64 %17447, 3
  store i64 %17448, i64* %PC.i49
  %17449 = trunc i64 %17446 to i32
  %17450 = add i32 1, %17449
  %17451 = zext i32 %17450 to i64
  store i64 %17451, i64* %RAX.i50, align 8
  %17452 = icmp ult i32 %17450, %17449
  %17453 = icmp ult i32 %17450, 1
  %17454 = or i1 %17452, %17453
  %17455 = zext i1 %17454 to i8
  %17456 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17455, i8* %17456, align 1
  %17457 = and i32 %17450, 255
  %17458 = call i32 @llvm.ctpop.i32(i32 %17457)
  %17459 = trunc i32 %17458 to i8
  %17460 = and i8 %17459, 1
  %17461 = xor i8 %17460, 1
  %17462 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17461, i8* %17462, align 1
  %17463 = xor i64 1, %17446
  %17464 = trunc i64 %17463 to i32
  %17465 = xor i32 %17464, %17450
  %17466 = lshr i32 %17465, 4
  %17467 = trunc i32 %17466 to i8
  %17468 = and i8 %17467, 1
  %17469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17468, i8* %17469, align 1
  %17470 = icmp eq i32 %17450, 0
  %17471 = zext i1 %17470 to i8
  %17472 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17471, i8* %17472, align 1
  %17473 = lshr i32 %17450, 31
  %17474 = trunc i32 %17473 to i8
  %17475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17474, i8* %17475, align 1
  %17476 = lshr i32 %17449, 31
  %17477 = xor i32 %17473, %17476
  %17478 = add i32 %17477, %17473
  %17479 = icmp eq i32 %17478, 2
  %17480 = zext i1 %17479 to i8
  %17481 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17480, i8* %17481, align 1
  store %struct.Memory* %loadMem_4017e8, %struct.Memory** %MEMORY
  %loadMem_4017eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %17482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17483 = getelementptr inbounds %struct.GPR, %struct.GPR* %17482, i32 0, i32 33
  %17484 = getelementptr inbounds %struct.Reg, %struct.Reg* %17483, i32 0, i32 0
  %PC.i46 = bitcast %union.anon* %17484 to i64*
  %17485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17486 = getelementptr inbounds %struct.GPR, %struct.GPR* %17485, i32 0, i32 1
  %17487 = getelementptr inbounds %struct.Reg, %struct.Reg* %17486, i32 0, i32 0
  %EAX.i47 = bitcast %union.anon* %17487 to i32*
  %17488 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17489 = getelementptr inbounds %struct.GPR, %struct.GPR* %17488, i32 0, i32 15
  %17490 = getelementptr inbounds %struct.Reg, %struct.Reg* %17489, i32 0, i32 0
  %RBP.i48 = bitcast %union.anon* %17490 to i64*
  %17491 = load i64, i64* %RBP.i48
  %17492 = sub i64 %17491, 4
  %17493 = load i32, i32* %EAX.i47
  %17494 = zext i32 %17493 to i64
  %17495 = load i64, i64* %PC.i46
  %17496 = add i64 %17495, 3
  store i64 %17496, i64* %PC.i46
  %17497 = inttoptr i64 %17492 to i32*
  store i32 %17493, i32* %17497
  store %struct.Memory* %loadMem_4017eb, %struct.Memory** %MEMORY
  %loadMem_4017ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %17498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17499 = getelementptr inbounds %struct.GPR, %struct.GPR* %17498, i32 0, i32 33
  %17500 = getelementptr inbounds %struct.Reg, %struct.Reg* %17499, i32 0, i32 0
  %PC.i45 = bitcast %union.anon* %17500 to i64*
  %17501 = load i64, i64* %PC.i45
  %17502 = add i64 %17501, -95
  %17503 = load i64, i64* %PC.i45
  %17504 = add i64 %17503, 5
  store i64 %17504, i64* %PC.i45
  %17505 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %17502, i64* %17505, align 8
  store %struct.Memory* %loadMem_4017ee, %struct.Memory** %MEMORY
  br label %block_.L_40178f

block_.L_4017f3:                                  ; preds = %block_.L_40178f
  %loadMem_4017f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17507 = getelementptr inbounds %struct.GPR, %struct.GPR* %17506, i32 0, i32 33
  %17508 = getelementptr inbounds %struct.Reg, %struct.Reg* %17507, i32 0, i32 0
  %PC.i44 = bitcast %union.anon* %17508 to i64*
  %17509 = load i64, i64* %PC.i44
  %17510 = add i64 %17509, 5
  %17511 = load i64, i64* %PC.i44
  %17512 = add i64 %17511, 5
  store i64 %17512, i64* %PC.i44
  %17513 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %17510, i64* %17513, align 8
  store %struct.Memory* %loadMem_4017f3, %struct.Memory** %MEMORY
  br label %block_.L_4017f8

block_.L_4017f8:                                  ; preds = %block_.L_4017f3, %block_.L_401783
  %loadMem_4017f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17515 = getelementptr inbounds %struct.GPR, %struct.GPR* %17514, i32 0, i32 33
  %17516 = getelementptr inbounds %struct.Reg, %struct.Reg* %17515, i32 0, i32 0
  %PC.i43 = bitcast %union.anon* %17516 to i64*
  %17517 = load i64, i64* %PC.i43
  %17518 = add i64 %17517, 117
  %17519 = load i64, i64* %PC.i43
  %17520 = add i64 %17519, 5
  store i64 %17520, i64* %PC.i43
  %17521 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %17518, i64* %17521, align 8
  store %struct.Memory* %loadMem_4017f8, %struct.Memory** %MEMORY
  br label %block_.L_40186d

block_.L_4017fd:                                  ; preds = %block_.L_400a46
  %loadMem_4017fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %17522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17523 = getelementptr inbounds %struct.GPR, %struct.GPR* %17522, i32 0, i32 33
  %17524 = getelementptr inbounds %struct.Reg, %struct.Reg* %17523, i32 0, i32 0
  %PC.i41 = bitcast %union.anon* %17524 to i64*
  %17525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17526 = getelementptr inbounds %struct.GPR, %struct.GPR* %17525, i32 0, i32 15
  %17527 = getelementptr inbounds %struct.Reg, %struct.Reg* %17526, i32 0, i32 0
  %RBP.i42 = bitcast %union.anon* %17527 to i64*
  %17528 = load i64, i64* %RBP.i42
  %17529 = sub i64 %17528, 4
  %17530 = load i64, i64* %PC.i41
  %17531 = add i64 %17530, 7
  store i64 %17531, i64* %PC.i41
  %17532 = inttoptr i64 %17529 to i32*
  store i32 0, i32* %17532
  store %struct.Memory* %loadMem_4017fd, %struct.Memory** %MEMORY
  br label %block_.L_401804

block_.L_401804:                                  ; preds = %block_.L_40185a, %block_.L_4017fd
  %loadMem_401804 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17534 = getelementptr inbounds %struct.GPR, %struct.GPR* %17533, i32 0, i32 33
  %17535 = getelementptr inbounds %struct.Reg, %struct.Reg* %17534, i32 0, i32 0
  %PC.i39 = bitcast %union.anon* %17535 to i64*
  %17536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17537 = getelementptr inbounds %struct.GPR, %struct.GPR* %17536, i32 0, i32 15
  %17538 = getelementptr inbounds %struct.Reg, %struct.Reg* %17537, i32 0, i32 0
  %RBP.i40 = bitcast %union.anon* %17538 to i64*
  %17539 = load i64, i64* %RBP.i40
  %17540 = sub i64 %17539, 4
  %17541 = load i64, i64* %PC.i39
  %17542 = add i64 %17541, 7
  store i64 %17542, i64* %PC.i39
  %17543 = inttoptr i64 %17540 to i32*
  %17544 = load i32, i32* %17543
  %17545 = sub i32 %17544, 255
  %17546 = icmp ult i32 %17544, 255
  %17547 = zext i1 %17546 to i8
  %17548 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17547, i8* %17548, align 1
  %17549 = and i32 %17545, 255
  %17550 = call i32 @llvm.ctpop.i32(i32 %17549)
  %17551 = trunc i32 %17550 to i8
  %17552 = and i8 %17551, 1
  %17553 = xor i8 %17552, 1
  %17554 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17553, i8* %17554, align 1
  %17555 = xor i32 %17544, 255
  %17556 = xor i32 %17555, %17545
  %17557 = lshr i32 %17556, 4
  %17558 = trunc i32 %17557 to i8
  %17559 = and i8 %17558, 1
  %17560 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17559, i8* %17560, align 1
  %17561 = icmp eq i32 %17545, 0
  %17562 = zext i1 %17561 to i8
  %17563 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17562, i8* %17563, align 1
  %17564 = lshr i32 %17545, 31
  %17565 = trunc i32 %17564 to i8
  %17566 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17565, i8* %17566, align 1
  %17567 = lshr i32 %17544, 31
  %17568 = xor i32 %17564, %17567
  %17569 = add i32 %17568, %17567
  %17570 = icmp eq i32 %17569, 2
  %17571 = zext i1 %17570 to i8
  %17572 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17571, i8* %17572, align 1
  store %struct.Memory* %loadMem_401804, %struct.Memory** %MEMORY
  %loadMem_40180b = load %struct.Memory*, %struct.Memory** %MEMORY
  %17573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17574 = getelementptr inbounds %struct.GPR, %struct.GPR* %17573, i32 0, i32 33
  %17575 = getelementptr inbounds %struct.Reg, %struct.Reg* %17574, i32 0, i32 0
  %PC.i38 = bitcast %union.anon* %17575 to i64*
  %17576 = load i64, i64* %PC.i38
  %17577 = add i64 %17576, 93
  %17578 = load i64, i64* %PC.i38
  %17579 = add i64 %17578, 6
  %17580 = load i64, i64* %PC.i38
  %17581 = add i64 %17580, 6
  store i64 %17581, i64* %PC.i38
  %17582 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %17583 = load i8, i8* %17582, align 1
  %17584 = icmp ne i8 %17583, 0
  %17585 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %17586 = load i8, i8* %17585, align 1
  %17587 = icmp ne i8 %17586, 0
  %17588 = xor i1 %17584, %17587
  %17589 = xor i1 %17588, true
  %17590 = zext i1 %17589 to i8
  store i8 %17590, i8* %BRANCH_TAKEN, align 1
  %17591 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17592 = select i1 %17588, i64 %17579, i64 %17577
  store i64 %17592, i64* %17591, align 8
  store %struct.Memory* %loadMem_40180b, %struct.Memory** %MEMORY
  %loadBr_40180b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40180b = icmp eq i8 %loadBr_40180b, 1
  br i1 %cmpBr_40180b, label %block_.L_401868, label %block_401811

block_401811:                                     ; preds = %block_.L_401804
  %loadMem_401811 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17594 = getelementptr inbounds %struct.GPR, %struct.GPR* %17593, i32 0, i32 33
  %17595 = getelementptr inbounds %struct.Reg, %struct.Reg* %17594, i32 0, i32 0
  %PC.i35 = bitcast %union.anon* %17595 to i64*
  %17596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17597 = getelementptr inbounds %struct.GPR, %struct.GPR* %17596, i32 0, i32 1
  %17598 = getelementptr inbounds %struct.Reg, %struct.Reg* %17597, i32 0, i32 0
  %RAX.i36 = bitcast %union.anon* %17598 to i64*
  %17599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17600 = getelementptr inbounds %struct.GPR, %struct.GPR* %17599, i32 0, i32 15
  %17601 = getelementptr inbounds %struct.Reg, %struct.Reg* %17600, i32 0, i32 0
  %RBP.i37 = bitcast %union.anon* %17601 to i64*
  %17602 = load i64, i64* %RBP.i37
  %17603 = sub i64 %17602, 4
  %17604 = load i64, i64* %PC.i35
  %17605 = add i64 %17604, 4
  store i64 %17605, i64* %PC.i35
  %17606 = inttoptr i64 %17603 to i32*
  %17607 = load i32, i32* %17606
  %17608 = sext i32 %17607 to i64
  store i64 %17608, i64* %RAX.i36, align 8
  store %struct.Memory* %loadMem_401811, %struct.Memory** %MEMORY
  %loadMem_401815 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17610 = getelementptr inbounds %struct.GPR, %struct.GPR* %17609, i32 0, i32 33
  %17611 = getelementptr inbounds %struct.Reg, %struct.Reg* %17610, i32 0, i32 0
  %PC.i33 = bitcast %union.anon* %17611 to i64*
  %17612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17613 = getelementptr inbounds %struct.GPR, %struct.GPR* %17612, i32 0, i32 1
  %17614 = getelementptr inbounds %struct.Reg, %struct.Reg* %17613, i32 0, i32 0
  %RAX.i34 = bitcast %union.anon* %17614 to i64*
  %17615 = load i64, i64* %RAX.i34
  %17616 = mul i64 %17615, 4
  %17617 = add i64 %17616, 6303872
  %17618 = load i64, i64* %PC.i33
  %17619 = add i64 %17618, 8
  store i64 %17619, i64* %PC.i33
  %17620 = inttoptr i64 %17617 to i32*
  %17621 = load i32, i32* %17620
  %17622 = sub i32 %17621, -1
  %17623 = icmp ult i32 %17621, -1
  %17624 = zext i1 %17623 to i8
  %17625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17624, i8* %17625, align 1
  %17626 = and i32 %17622, 255
  %17627 = call i32 @llvm.ctpop.i32(i32 %17626)
  %17628 = trunc i32 %17627 to i8
  %17629 = and i8 %17628, 1
  %17630 = xor i8 %17629, 1
  %17631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17630, i8* %17631, align 1
  %17632 = xor i32 %17621, -1
  %17633 = xor i32 %17632, %17622
  %17634 = lshr i32 %17633, 4
  %17635 = trunc i32 %17634 to i8
  %17636 = and i8 %17635, 1
  %17637 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17636, i8* %17637, align 1
  %17638 = icmp eq i32 %17622, 0
  %17639 = zext i1 %17638 to i8
  %17640 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17639, i8* %17640, align 1
  %17641 = lshr i32 %17622, 31
  %17642 = trunc i32 %17641 to i8
  %17643 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17642, i8* %17643, align 1
  %17644 = lshr i32 %17621, 31
  %17645 = xor i32 %17644, 1
  %17646 = xor i32 %17641, %17644
  %17647 = add i32 %17646, %17645
  %17648 = icmp eq i32 %17647, 2
  %17649 = zext i1 %17648 to i8
  %17650 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17649, i8* %17650, align 1
  store %struct.Memory* %loadMem_401815, %struct.Memory** %MEMORY
  %loadMem_40181d = load %struct.Memory*, %struct.Memory** %MEMORY
  %17651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17652 = getelementptr inbounds %struct.GPR, %struct.GPR* %17651, i32 0, i32 33
  %17653 = getelementptr inbounds %struct.Reg, %struct.Reg* %17652, i32 0, i32 0
  %PC.i32 = bitcast %union.anon* %17653 to i64*
  %17654 = load i64, i64* %PC.i32
  %17655 = add i64 %17654, 41
  %17656 = load i64, i64* %PC.i32
  %17657 = add i64 %17656, 6
  %17658 = load i64, i64* %PC.i32
  %17659 = add i64 %17658, 6
  store i64 %17659, i64* %PC.i32
  %17660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %17661 = load i8, i8* %17660, align 1
  store i8 %17661, i8* %BRANCH_TAKEN, align 1
  %17662 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17663 = icmp ne i8 %17661, 0
  %17664 = select i1 %17663, i64 %17655, i64 %17657
  store i64 %17664, i64* %17662, align 8
  store %struct.Memory* %loadMem_40181d, %struct.Memory** %MEMORY
  %loadBr_40181d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40181d = icmp eq i8 %loadBr_40181d, 1
  br i1 %cmpBr_40181d, label %block_.L_401846, label %block_401823

block_401823:                                     ; preds = %block_401811
  %loadMem_401823 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17666 = getelementptr inbounds %struct.GPR, %struct.GPR* %17665, i32 0, i32 33
  %17667 = getelementptr inbounds %struct.Reg, %struct.Reg* %17666, i32 0, i32 0
  %PC.i29 = bitcast %union.anon* %17667 to i64*
  %17668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17669 = getelementptr inbounds %struct.GPR, %struct.GPR* %17668, i32 0, i32 1
  %17670 = getelementptr inbounds %struct.Reg, %struct.Reg* %17669, i32 0, i32 0
  %RAX.i30 = bitcast %union.anon* %17670 to i64*
  %17671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17672 = getelementptr inbounds %struct.GPR, %struct.GPR* %17671, i32 0, i32 15
  %17673 = getelementptr inbounds %struct.Reg, %struct.Reg* %17672, i32 0, i32 0
  %RBP.i31 = bitcast %union.anon* %17673 to i64*
  %17674 = load i64, i64* %RBP.i31
  %17675 = sub i64 %17674, 4
  %17676 = load i64, i64* %PC.i29
  %17677 = add i64 %17676, 4
  store i64 %17677, i64* %PC.i29
  %17678 = inttoptr i64 %17675 to i32*
  %17679 = load i32, i32* %17678
  %17680 = sext i32 %17679 to i64
  store i64 %17680, i64* %RAX.i30, align 8
  store %struct.Memory* %loadMem_401823, %struct.Memory** %MEMORY
  %loadMem_401827 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17682 = getelementptr inbounds %struct.GPR, %struct.GPR* %17681, i32 0, i32 33
  %17683 = getelementptr inbounds %struct.Reg, %struct.Reg* %17682, i32 0, i32 0
  %PC.i27 = bitcast %union.anon* %17683 to i64*
  %17684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17685 = getelementptr inbounds %struct.GPR, %struct.GPR* %17684, i32 0, i32 1
  %17686 = getelementptr inbounds %struct.Reg, %struct.Reg* %17685, i32 0, i32 0
  %RAX.i28 = bitcast %union.anon* %17686 to i64*
  %17687 = load i64, i64* %RAX.i28
  %17688 = mul i64 %17687, 4
  %17689 = add i64 %17688, 6303872
  %17690 = load i64, i64* %PC.i27
  %17691 = add i64 %17690, 8
  store i64 %17691, i64* %PC.i27
  %17692 = inttoptr i64 %17689 to i32*
  %17693 = load i32, i32* %17692
  %17694 = sext i32 %17693 to i64
  store i64 %17694, i64* %RAX.i28, align 8
  store %struct.Memory* %loadMem_401827, %struct.Memory** %MEMORY
  %loadMem_40182f = load %struct.Memory*, %struct.Memory** %MEMORY
  %17695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17696 = getelementptr inbounds %struct.GPR, %struct.GPR* %17695, i32 0, i32 33
  %17697 = getelementptr inbounds %struct.Reg, %struct.Reg* %17696, i32 0, i32 0
  %PC.i25 = bitcast %union.anon* %17697 to i64*
  %17698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17699 = getelementptr inbounds %struct.GPR, %struct.GPR* %17698, i32 0, i32 1
  %17700 = getelementptr inbounds %struct.Reg, %struct.Reg* %17699, i32 0, i32 0
  %RAX.i26 = bitcast %union.anon* %17700 to i64*
  %17701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17702 = getelementptr inbounds %struct.GPR, %struct.GPR* %17701, i32 0, i32 5
  %17703 = getelementptr inbounds %struct.Reg, %struct.Reg* %17702, i32 0, i32 0
  %RCX.i = bitcast %union.anon* %17703 to i64*
  %17704 = load i64, i64* %RAX.i26
  %17705 = mul i64 %17704, 4
  %17706 = add i64 %17705, 6305920
  %17707 = load i64, i64* %PC.i25
  %17708 = add i64 %17707, 7
  store i64 %17708, i64* %PC.i25
  %17709 = inttoptr i64 %17706 to i32*
  %17710 = load i32, i32* %17709
  %17711 = zext i32 %17710 to i64
  store i64 %17711, i64* %RCX.i, align 8
  store %struct.Memory* %loadMem_40182f, %struct.Memory** %MEMORY
  %loadMem_401836 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17713 = getelementptr inbounds %struct.GPR, %struct.GPR* %17712, i32 0, i32 33
  %17714 = getelementptr inbounds %struct.Reg, %struct.Reg* %17713, i32 0, i32 0
  %PC.i22 = bitcast %union.anon* %17714 to i64*
  %17715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17716 = getelementptr inbounds %struct.GPR, %struct.GPR* %17715, i32 0, i32 1
  %17717 = getelementptr inbounds %struct.Reg, %struct.Reg* %17716, i32 0, i32 0
  %RAX.i23 = bitcast %union.anon* %17717 to i64*
  %17718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17719 = getelementptr inbounds %struct.GPR, %struct.GPR* %17718, i32 0, i32 15
  %17720 = getelementptr inbounds %struct.Reg, %struct.Reg* %17719, i32 0, i32 0
  %RBP.i24 = bitcast %union.anon* %17720 to i64*
  %17721 = load i64, i64* %RBP.i24
  %17722 = sub i64 %17721, 4
  %17723 = load i64, i64* %PC.i22
  %17724 = add i64 %17723, 4
  store i64 %17724, i64* %PC.i22
  %17725 = inttoptr i64 %17722 to i32*
  %17726 = load i32, i32* %17725
  %17727 = sext i32 %17726 to i64
  store i64 %17727, i64* %RAX.i23, align 8
  store %struct.Memory* %loadMem_401836, %struct.Memory** %MEMORY
  %loadMem_40183a = load %struct.Memory*, %struct.Memory** %MEMORY
  %17728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17729 = getelementptr inbounds %struct.GPR, %struct.GPR* %17728, i32 0, i32 33
  %17730 = getelementptr inbounds %struct.Reg, %struct.Reg* %17729, i32 0, i32 0
  %PC.i20 = bitcast %union.anon* %17730 to i64*
  %17731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17732 = getelementptr inbounds %struct.GPR, %struct.GPR* %17731, i32 0, i32 5
  %17733 = getelementptr inbounds %struct.Reg, %struct.Reg* %17732, i32 0, i32 0
  %ECX.i = bitcast %union.anon* %17733 to i32*
  %17734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17735 = getelementptr inbounds %struct.GPR, %struct.GPR* %17734, i32 0, i32 1
  %17736 = getelementptr inbounds %struct.Reg, %struct.Reg* %17735, i32 0, i32 0
  %RAX.i21 = bitcast %union.anon* %17736 to i64*
  %17737 = load i64, i64* %RAX.i21
  %17738 = mul i64 %17737, 4
  %17739 = add i64 %17738, 6303872
  %17740 = load i32, i32* %ECX.i
  %17741 = zext i32 %17740 to i64
  %17742 = load i64, i64* %PC.i20
  %17743 = add i64 %17742, 7
  store i64 %17743, i64* %PC.i20
  %17744 = inttoptr i64 %17739 to i32*
  store i32 %17740, i32* %17744
  store %struct.Memory* %loadMem_40183a, %struct.Memory** %MEMORY
  %loadMem_401841 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17746 = getelementptr inbounds %struct.GPR, %struct.GPR* %17745, i32 0, i32 33
  %17747 = getelementptr inbounds %struct.Reg, %struct.Reg* %17746, i32 0, i32 0
  %PC.i19 = bitcast %union.anon* %17747 to i64*
  %17748 = load i64, i64* %PC.i19
  %17749 = add i64 %17748, 20
  %17750 = load i64, i64* %PC.i19
  %17751 = add i64 %17750, 5
  store i64 %17751, i64* %PC.i19
  %17752 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %17749, i64* %17752, align 8
  store %struct.Memory* %loadMem_401841, %struct.Memory** %MEMORY
  br label %block_.L_401855

block_.L_401846:                                  ; preds = %block_401811
  %loadMem_401846 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17754 = getelementptr inbounds %struct.GPR, %struct.GPR* %17753, i32 0, i32 33
  %17755 = getelementptr inbounds %struct.Reg, %struct.Reg* %17754, i32 0, i32 0
  %PC.i16 = bitcast %union.anon* %17755 to i64*
  %17756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17757 = getelementptr inbounds %struct.GPR, %struct.GPR* %17756, i32 0, i32 1
  %17758 = getelementptr inbounds %struct.Reg, %struct.Reg* %17757, i32 0, i32 0
  %RAX.i17 = bitcast %union.anon* %17758 to i64*
  %17759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17760 = getelementptr inbounds %struct.GPR, %struct.GPR* %17759, i32 0, i32 15
  %17761 = getelementptr inbounds %struct.Reg, %struct.Reg* %17760, i32 0, i32 0
  %RBP.i18 = bitcast %union.anon* %17761 to i64*
  %17762 = load i64, i64* %RBP.i18
  %17763 = sub i64 %17762, 4
  %17764 = load i64, i64* %PC.i16
  %17765 = add i64 %17764, 4
  store i64 %17765, i64* %PC.i16
  %17766 = inttoptr i64 %17763 to i32*
  %17767 = load i32, i32* %17766
  %17768 = sext i32 %17767 to i64
  store i64 %17768, i64* %RAX.i17, align 8
  store %struct.Memory* %loadMem_401846, %struct.Memory** %MEMORY
  %loadMem_40184a = load %struct.Memory*, %struct.Memory** %MEMORY
  %17769 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17770 = getelementptr inbounds %struct.GPR, %struct.GPR* %17769, i32 0, i32 33
  %17771 = getelementptr inbounds %struct.Reg, %struct.Reg* %17770, i32 0, i32 0
  %PC.i14 = bitcast %union.anon* %17771 to i64*
  %17772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17773 = getelementptr inbounds %struct.GPR, %struct.GPR* %17772, i32 0, i32 1
  %17774 = getelementptr inbounds %struct.Reg, %struct.Reg* %17773, i32 0, i32 0
  %RAX.i15 = bitcast %union.anon* %17774 to i64*
  %17775 = load i64, i64* %RAX.i15
  %17776 = mul i64 %17775, 4
  %17777 = add i64 %17776, 6303872
  %17778 = load i64, i64* %PC.i14
  %17779 = add i64 %17778, 11
  store i64 %17779, i64* %PC.i14
  %17780 = inttoptr i64 %17777 to i32*
  store i32 0, i32* %17780
  store %struct.Memory* %loadMem_40184a, %struct.Memory** %MEMORY
  br label %block_.L_401855

block_.L_401855:                                  ; preds = %block_.L_401846, %block_401823
  %loadMem_401855 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17782 = getelementptr inbounds %struct.GPR, %struct.GPR* %17781, i32 0, i32 33
  %17783 = getelementptr inbounds %struct.Reg, %struct.Reg* %17782, i32 0, i32 0
  %PC.i13 = bitcast %union.anon* %17783 to i64*
  %17784 = load i64, i64* %PC.i13
  %17785 = add i64 %17784, 5
  %17786 = load i64, i64* %PC.i13
  %17787 = add i64 %17786, 5
  store i64 %17787, i64* %PC.i13
  %17788 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %17785, i64* %17788, align 8
  store %struct.Memory* %loadMem_401855, %struct.Memory** %MEMORY
  br label %block_.L_40185a

block_.L_40185a:                                  ; preds = %block_.L_401855
  %loadMem_40185a = load %struct.Memory*, %struct.Memory** %MEMORY
  %17789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17790 = getelementptr inbounds %struct.GPR, %struct.GPR* %17789, i32 0, i32 33
  %17791 = getelementptr inbounds %struct.Reg, %struct.Reg* %17790, i32 0, i32 0
  %PC.i10 = bitcast %union.anon* %17791 to i64*
  %17792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17793 = getelementptr inbounds %struct.GPR, %struct.GPR* %17792, i32 0, i32 1
  %17794 = getelementptr inbounds %struct.Reg, %struct.Reg* %17793, i32 0, i32 0
  %RAX.i11 = bitcast %union.anon* %17794 to i64*
  %17795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17796 = getelementptr inbounds %struct.GPR, %struct.GPR* %17795, i32 0, i32 15
  %17797 = getelementptr inbounds %struct.Reg, %struct.Reg* %17796, i32 0, i32 0
  %RBP.i12 = bitcast %union.anon* %17797 to i64*
  %17798 = load i64, i64* %RBP.i12
  %17799 = sub i64 %17798, 4
  %17800 = load i64, i64* %PC.i10
  %17801 = add i64 %17800, 3
  store i64 %17801, i64* %PC.i10
  %17802 = inttoptr i64 %17799 to i32*
  %17803 = load i32, i32* %17802
  %17804 = zext i32 %17803 to i64
  store i64 %17804, i64* %RAX.i11, align 8
  store %struct.Memory* %loadMem_40185a, %struct.Memory** %MEMORY
  %loadMem_40185d = load %struct.Memory*, %struct.Memory** %MEMORY
  %17805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17806 = getelementptr inbounds %struct.GPR, %struct.GPR* %17805, i32 0, i32 33
  %17807 = getelementptr inbounds %struct.Reg, %struct.Reg* %17806, i32 0, i32 0
  %PC.i9 = bitcast %union.anon* %17807 to i64*
  %17808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17809 = getelementptr inbounds %struct.GPR, %struct.GPR* %17808, i32 0, i32 1
  %17810 = getelementptr inbounds %struct.Reg, %struct.Reg* %17809, i32 0, i32 0
  %RAX.i = bitcast %union.anon* %17810 to i64*
  %17811 = load i64, i64* %RAX.i
  %17812 = load i64, i64* %PC.i9
  %17813 = add i64 %17812, 3
  store i64 %17813, i64* %PC.i9
  %17814 = trunc i64 %17811 to i32
  %17815 = add i32 1, %17814
  %17816 = zext i32 %17815 to i64
  store i64 %17816, i64* %RAX.i, align 8
  %17817 = icmp ult i32 %17815, %17814
  %17818 = icmp ult i32 %17815, 1
  %17819 = or i1 %17817, %17818
  %17820 = zext i1 %17819 to i8
  %17821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17820, i8* %17821, align 1
  %17822 = and i32 %17815, 255
  %17823 = call i32 @llvm.ctpop.i32(i32 %17822)
  %17824 = trunc i32 %17823 to i8
  %17825 = and i8 %17824, 1
  %17826 = xor i8 %17825, 1
  %17827 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17826, i8* %17827, align 1
  %17828 = xor i64 1, %17811
  %17829 = trunc i64 %17828 to i32
  %17830 = xor i32 %17829, %17815
  %17831 = lshr i32 %17830, 4
  %17832 = trunc i32 %17831 to i8
  %17833 = and i8 %17832, 1
  %17834 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17833, i8* %17834, align 1
  %17835 = icmp eq i32 %17815, 0
  %17836 = zext i1 %17835 to i8
  %17837 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17836, i8* %17837, align 1
  %17838 = lshr i32 %17815, 31
  %17839 = trunc i32 %17838 to i8
  %17840 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17839, i8* %17840, align 1
  %17841 = lshr i32 %17814, 31
  %17842 = xor i32 %17838, %17841
  %17843 = add i32 %17842, %17838
  %17844 = icmp eq i32 %17843, 2
  %17845 = zext i1 %17844 to i8
  %17846 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17845, i8* %17846, align 1
  store %struct.Memory* %loadMem_40185d, %struct.Memory** %MEMORY
  %loadMem_401860 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17848 = getelementptr inbounds %struct.GPR, %struct.GPR* %17847, i32 0, i32 33
  %17849 = getelementptr inbounds %struct.Reg, %struct.Reg* %17848, i32 0, i32 0
  %PC.i7 = bitcast %union.anon* %17849 to i64*
  %17850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17851 = getelementptr inbounds %struct.GPR, %struct.GPR* %17850, i32 0, i32 1
  %17852 = getelementptr inbounds %struct.Reg, %struct.Reg* %17851, i32 0, i32 0
  %EAX.i = bitcast %union.anon* %17852 to i32*
  %17853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17854 = getelementptr inbounds %struct.GPR, %struct.GPR* %17853, i32 0, i32 15
  %17855 = getelementptr inbounds %struct.Reg, %struct.Reg* %17854, i32 0, i32 0
  %RBP.i8 = bitcast %union.anon* %17855 to i64*
  %17856 = load i64, i64* %RBP.i8
  %17857 = sub i64 %17856, 4
  %17858 = load i32, i32* %EAX.i
  %17859 = zext i32 %17858 to i64
  %17860 = load i64, i64* %PC.i7
  %17861 = add i64 %17860, 3
  store i64 %17861, i64* %PC.i7
  %17862 = inttoptr i64 %17857 to i32*
  store i32 %17858, i32* %17862
  store %struct.Memory* %loadMem_401860, %struct.Memory** %MEMORY
  %loadMem_401863 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17864 = getelementptr inbounds %struct.GPR, %struct.GPR* %17863, i32 0, i32 33
  %17865 = getelementptr inbounds %struct.Reg, %struct.Reg* %17864, i32 0, i32 0
  %PC.i6 = bitcast %union.anon* %17865 to i64*
  %17866 = load i64, i64* %PC.i6
  %17867 = add i64 %17866, -95
  %17868 = load i64, i64* %PC.i6
  %17869 = add i64 %17868, 5
  store i64 %17869, i64* %PC.i6
  %17870 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %17867, i64* %17870, align 8
  store %struct.Memory* %loadMem_401863, %struct.Memory** %MEMORY
  br label %block_.L_401804

block_.L_401868:                                  ; preds = %block_.L_401804
  %loadMem_401868 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17872 = getelementptr inbounds %struct.GPR, %struct.GPR* %17871, i32 0, i32 33
  %17873 = getelementptr inbounds %struct.Reg, %struct.Reg* %17872, i32 0, i32 0
  %PC.i5 = bitcast %union.anon* %17873 to i64*
  %17874 = load i64, i64* %PC.i5
  %17875 = add i64 %17874, 5
  %17876 = load i64, i64* %PC.i5
  %17877 = add i64 %17876, 5
  store i64 %17877, i64* %PC.i5
  %17878 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %17875, i64* %17878, align 8
  store %struct.Memory* %loadMem_401868, %struct.Memory** %MEMORY
  br label %block_.L_40186d

block_.L_40186d:                                  ; preds = %block_.L_401868, %block_.L_4017f8
  %loadMem_40186d = load %struct.Memory*, %struct.Memory** %MEMORY
  %17879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17880 = getelementptr inbounds %struct.GPR, %struct.GPR* %17879, i32 0, i32 33
  %17881 = getelementptr inbounds %struct.Reg, %struct.Reg* %17880, i32 0, i32 0
  %PC.i4 = bitcast %union.anon* %17881 to i64*
  %17882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17883 = getelementptr inbounds %struct.GPR, %struct.GPR* %17882, i32 0, i32 13
  %17884 = getelementptr inbounds %struct.Reg, %struct.Reg* %17883, i32 0, i32 0
  %RSP.i = bitcast %union.anon* %17884 to i64*
  %17885 = load i64, i64* %RSP.i
  %17886 = load i64, i64* %PC.i4
  %17887 = add i64 %17886, 7
  store i64 %17887, i64* %PC.i4
  %17888 = add i64 2608, %17885
  store i64 %17888, i64* %RSP.i, align 8
  %17889 = icmp ult i64 %17888, %17885
  %17890 = icmp ult i64 %17888, 2608
  %17891 = or i1 %17889, %17890
  %17892 = zext i1 %17891 to i8
  %17893 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17892, i8* %17893, align 1
  %17894 = trunc i64 %17888 to i32
  %17895 = and i32 %17894, 255
  %17896 = call i32 @llvm.ctpop.i32(i32 %17895)
  %17897 = trunc i32 %17896 to i8
  %17898 = and i8 %17897, 1
  %17899 = xor i8 %17898, 1
  %17900 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17899, i8* %17900, align 1
  %17901 = xor i64 2608, %17885
  %17902 = xor i64 %17901, %17888
  %17903 = lshr i64 %17902, 4
  %17904 = trunc i64 %17903 to i8
  %17905 = and i8 %17904, 1
  %17906 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17905, i8* %17906, align 1
  %17907 = icmp eq i64 %17888, 0
  %17908 = zext i1 %17907 to i8
  %17909 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17908, i8* %17909, align 1
  %17910 = lshr i64 %17888, 63
  %17911 = trunc i64 %17910 to i8
  %17912 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17911, i8* %17912, align 1
  %17913 = lshr i64 %17885, 63
  %17914 = xor i64 %17910, %17913
  %17915 = add i64 %17914, %17910
  %17916 = icmp eq i64 %17915, 2
  %17917 = zext i1 %17916 to i8
  %17918 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17917, i8* %17918, align 1
  store %struct.Memory* %loadMem_40186d, %struct.Memory** %MEMORY
  %loadMem_401874 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17920 = getelementptr inbounds %struct.GPR, %struct.GPR* %17919, i32 0, i32 33
  %17921 = getelementptr inbounds %struct.Reg, %struct.Reg* %17920, i32 0, i32 0
  %PC.i2 = bitcast %union.anon* %17921 to i64*
  %17922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17923 = getelementptr inbounds %struct.GPR, %struct.GPR* %17922, i32 0, i32 15
  %17924 = getelementptr inbounds %struct.Reg, %struct.Reg* %17923, i32 0, i32 0
  %RBP.i3 = bitcast %union.anon* %17924 to i64*
  %17925 = load i64, i64* %PC.i2
  %17926 = add i64 %17925, 1
  store i64 %17926, i64* %PC.i2
  %17927 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %17928 = load i64, i64* %17927, align 8
  %17929 = add i64 %17928, 8
  %17930 = inttoptr i64 %17928 to i64*
  %17931 = load i64, i64* %17930
  store i64 %17931, i64* %RBP.i3, align 8
  store i64 %17929, i64* %17927, align 8
  store %struct.Memory* %loadMem_401874, %struct.Memory** %MEMORY
  %loadMem_401875 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17933 = getelementptr inbounds %struct.GPR, %struct.GPR* %17932, i32 0, i32 33
  %17934 = getelementptr inbounds %struct.Reg, %struct.Reg* %17933, i32 0, i32 0
  %PC.i1 = bitcast %union.anon* %17934 to i64*
  %17935 = load i64, i64* %PC.i1
  %17936 = add i64 %17935, 1
  store i64 %17936, i64* %PC.i1
  %17937 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %17939 = load i64, i64* %17938, align 8
  %17940 = inttoptr i64 %17939 to i64*
  %17941 = load i64, i64* %17940
  store i64 %17941, i64* %17937, align 8
  %17942 = add i64 %17939, 8
  store i64 %17942, i64* %17938, align 8
  store %struct.Memory* %loadMem_401875, %struct.Memory** %MEMORY
  ret %struct.Memory* %loadMem_401875
}

define %struct.Memory* @routine_pushq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsp___rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RBP, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subq__0xa30___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sub i64 %9, 2608
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %9, 2608
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14, i8* %15, align 1
  %16 = trunc i64 %12 to i32
  %17 = and i32 %16, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 2608, %9
  %24 = xor i64 %23, %12
  %25 = lshr i64 %24, 4
  %26 = trunc i64 %25 to i8
  %27 = and i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27, i8* %28, align 1
  %29 = icmp eq i64 %12, 0
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30, i8* %31, align 1
  %32 = lshr i64 %12, 63
  %33 = trunc i64 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33, i8* %34, align 1
  %35 = lshr i64 %9, 63
  %36 = xor i64 %32, %35
  %37 = add i64 %36, %35
  %38 = icmp eq i64 %37, 2
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %39, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x5d4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1492
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x5d8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1496
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__MINUS0x4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 4
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 1, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x10__MINUS0x4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 4
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 16
  %16 = icmp ult i32 %14, 16
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 16
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_400a46(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x4__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x5d0__rbp__rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RAX
  %14 = mul i64 %13, 4
  %15 = add i64 %12, -1488
  %16 = add i64 %15, %14
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 11
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %16 to i32*
  store i32 0, i32* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0xff__MINUS0x8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 255
  %16 = icmp ult i32 %14, 255
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 255
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4009fe(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x8__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0xffffffff__0x603080___rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = mul i64 %9, 4
  %11 = add i64 %10, 6303872
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 8
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  %15 = load i32, i32* %14
  %16 = sub i32 %15, -1
  %17 = icmp ult i32 %15, -1
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %16, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i32 %15, -1
  %27 = xor i32 %26, %16
  %28 = lshr i32 %27, 4
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %30, i8* %31, align 1
  %32 = icmp eq i32 %16, 0
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %33, i8* %34, align 1
  %35 = lshr i32 %16, 31
  %36 = trunc i32 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %15, 31
  %39 = xor i32 %38, 1
  %40 = xor i32 %35, %38
  %41 = add i32 %40, %39
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4009eb(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0xff___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 255, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x8__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x603080___rcx_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 6303872
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x4__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull_MINUS0x8__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 8
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = shl i64 %12, 32
  %20 = ashr exact i64 %19, 32
  %21 = sext i32 %18 to i64
  %22 = mul i64 %21, %20
  %23 = trunc i64 %22 to i32
  %24 = and i64 %22, 4294967295
  store i64 %24, i64* %RSI, align 8
  %25 = shl i64 %22, 32
  %26 = ashr exact i64 %25, 32
  %27 = icmp ne i64 %26, %22
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %28, i8* %29, align 1
  %30 = and i32 %23, 255
  %31 = call i32 @llvm.ctpop.i32(i32 %30)
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = xor i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %34, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %36, align 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %37, align 1
  %38 = lshr i32 %23, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %28, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__esi___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i32, i32* %ESI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = add i32 %13, %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RDX, align 8
  %20 = icmp ult i32 %18, %17
  %21 = icmp ult i32 %18, %13
  %22 = or i1 %20, %21
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %18, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i64 %14, %12
  %32 = trunc i64 %31 to i32
  %33 = xor i32 %32, %18
  %34 = lshr i32 %33, 4
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %36, i8* %37, align 1
  %38 = icmp eq i32 %18, 0
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %18, 31
  %42 = trunc i32 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %42, i8* %43, align 1
  %44 = lshr i32 %17, 31
  %45 = lshr i32 %13, 31
  %46 = xor i32 %41, %44
  %47 = xor i32 %41, %45
  %48 = add i32 %46, %47
  %49 = icmp eq i32 %48, 2
  %50 = zext i1 %49 to i8
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %50, i8* %51, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xa84__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2692
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cltd(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %10 = bitcast %union.anon* %9 to i32*
  %11 = load i32, i32* %10, align 8
  %12 = sext i32 %11 to i64
  %13 = lshr i64 %12, 32
  store i64 %13, i64* %8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xa84__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2692
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_idivl__esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ESI
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 2
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %14 = bitcast %union.anon* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %18 = bitcast %union.anon* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = shl i64 %10, 32
  %22 = ashr exact i64 %21, 32
  %23 = shl i64 %20, 32
  %24 = or i64 %23, %16
  %25 = sdiv i64 %24, %22
  %26 = shl i64 %25, 32
  %27 = ashr exact i64 %26, 32
  %28 = icmp eq i64 %25, %27
  br i1 %28, label %33, label %29

; <label>:29:                                     ; preds = %block_400488
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %31, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:33:                                     ; preds = %block_400488
  %34 = srem i64 %24, %22
  %35 = getelementptr inbounds %union.anon, %union.anon* %13, i64 0, i32 0
  %36 = and i64 %25, 4294967295
  store i64 %36, i64* %35, align 8
  %37 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %38 = and i64 %34, 4294967295
  store i64 %38, i64* %37, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %44, align 1
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %29, %33
  %45 = phi %struct.Memory* [ %32, %29 ], [ %2, %33 ]
  ret %struct.Memory* %45
}

define %struct.Memory* @routine_movslq__edx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x603880___rcx_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 6305920
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x4__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl_MINUS0x5d0__rbp__rcx_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDX
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RCX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -1488
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 7
  store i64 %22, i64* %PC
  %23 = trunc i64 %15 to i32
  %24 = inttoptr i64 %20 to i32*
  %25 = load i32, i32* %24
  %26 = xor i32 %25, %23
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %RDX, align 8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %28, align 1
  %29 = and i32 %26, 255
  %30 = call i32 @llvm.ctpop.i32(i32 %29)
  %31 = trunc i32 %30 to i8
  %32 = and i8 %31, 1
  %33 = xor i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i32 %26, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %26, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x5d0__rbp__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -1488
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EDX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4009f0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400986(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x5d0__rbp__rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RAX
  %14 = mul i64 %13, 4
  %15 = add i64 %12, -1488
  %16 = add i64 %15, %14
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 8
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %16 to i32*
  %20 = load i32, i32* %19
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %21, align 1
  %22 = and i32 %20, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %28, align 1
  %29 = icmp eq i32 %20, 0
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30, i8* %31, align 1
  %32 = lshr i32 %20, 31
  %33 = trunc i32 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33, i8* %34, align 1
  %35 = lshr i32 %20, 31
  %36 = xor i32 %32, %35
  %37 = add i32 %36, %35
  %38 = icmp eq i32 %37, 2
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %39, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_400a1a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__MINUS0x5d8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1496
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 1, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x5d0__rbp__rax_4____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RAX
  %14 = mul i64 %13, 4
  %15 = add i64 %12, -1488
  %16 = add i64 %15, %14
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 8
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %16 to i32*
  %20 = load i32, i32* %19
  %21 = sext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x603480___rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 6304896
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x5d0__rbp__rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -1488
  %19 = add i64 %18, %17
  %20 = load i32, i32* %ECX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x4__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400966(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x5d8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1496
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4017fd(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x4e0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1248
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x5cc__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1484
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x4dc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1244
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x490__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1168
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__MINUS0x450__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1104
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 1, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_400aba(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0xffffffff__MINUS0x490__rbp__rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RAX
  %14 = mul i64 %13, 4
  %15 = add i64 %12, -1168
  %16 = add i64 %15, %14
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 11
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %16 to i32*
  store i32 -1, i32* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x450__rbp__rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RAX
  %14 = mul i64 %13, 4
  %15 = add i64 %12, -1104
  %16 = add i64 %15, %14
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 11
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %16 to i32*
  store i32 0, i32* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400a84(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x530__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1328
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x52c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1324
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0xffffffff__MINUS0x580__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1408
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 -1, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x57c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1404
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0xc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xc__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0xc__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0xffffffff__MINUS0x4e0__rbp__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 4
  %15 = add i64 %12, -1248
  %16 = add i64 %15, %14
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 8
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %16 to i32*
  %20 = load i32, i32* %19
  %21 = sub i32 %20, -1
  %22 = icmp ult i32 %20, -1
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %21, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %20, -1
  %32 = xor i32 %31, %21
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %21, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %21, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %20, 31
  %44 = xor i32 %43, 1
  %45 = xor i32 %40, %43
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_400bb2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0xc__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x530__rbp__rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -1328
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xc__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__edx___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x530__rbp__rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -1328
  %19 = add i64 %18, %17
  %20 = load i32, i32* %ECX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 4
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0x530__rbp__rcx_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i32, i32* %EAX
  %16 = zext i32 %15 to i64
  %17 = load i64, i64* %RBP
  %18 = load i64, i64* %RCX
  %19 = mul i64 %18, 4
  %20 = add i64 %17, -1328
  %21 = add i64 %20, %19
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %21 to i32*
  %25 = load i32, i32* %24
  %26 = sub i32 %15, %25
  %27 = icmp ult i32 %15, %25
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %28, i8* %29, align 1
  %30 = and i32 %26, 255
  %31 = call i32 @llvm.ctpop.i32(i32 %30)
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = xor i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %34, i8* %35, align 1
  %36 = xor i32 %25, %15
  %37 = xor i32 %36, %26
  %38 = lshr i32 %37, 4
  %39 = trunc i32 %38 to i8
  %40 = and i8 %39, 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %40, i8* %41, align 1
  %42 = icmp eq i32 %26, 0
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %26, 31
  %46 = trunc i32 %45 to i8
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %46, i8* %47, align 1
  %48 = lshr i32 %15, 31
  %49 = lshr i32 %25, 31
  %50 = xor i32 %49, %48
  %51 = xor i32 %45, %48
  %52 = add i32 %51, %50
  %53 = icmp eq i32 %52, 2
  %54 = zext i1 %53 to i8
  %55 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %54, i8* %55, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_400bad(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x490__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  store i64 %13, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x6___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 5
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RCX, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rcx___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RDX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rdx__rcx_4____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xc__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDI, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__edi___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi____rdx__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %ESI
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i32*
  store i32 %19, i32* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq___rdx__rcx_4____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 4
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sext i32 %19 to i64
  store i64 %20, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x603480___rcx_4____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 6304896
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rcx___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RAX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi____rax__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 5
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RCX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %ESI
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i32*
  store i32 %19, i32* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400b26(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400e6a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 1
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %12, 1
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 1, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl__eax___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = xor i64 %14, %12
  %18 = trunc i64 %17 to i32
  %19 = and i64 %17, 4294967295
  store i64 %19, i64* %RAX, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20, align 1
  %21 = and i32 %18, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = icmp eq i32 %18, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %18, 31
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__al___cl(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 5
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %13 = bitcast %union.anon* %12 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %13, i32 0, i32 0
  %14 = load i8, i8* %AL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  store i8 %14, i8* %CL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x10__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0xffffffff__MINUS0x4e0__rbp__rdx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RDX
  %14 = mul i64 %13, 4
  %15 = add i64 %12, -1248
  %16 = add i64 %15, %14
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 8
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %16 to i32*
  %20 = load i32, i32* %19
  %21 = sub i32 %20, -1
  %22 = icmp ult i32 %20, -1
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %21, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %20, -1
  %32 = xor i32 %31, %21
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %21, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %21, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %20, 31
  %44 = xor i32 %43, 1
  %45 = xor i32 %40, %43
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__cl__MINUS0xa85__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 2693
  %15 = load i8, i8* %CL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i8*
  store i8 %15, i8* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_400be4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 16
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_setg__al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %AL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__al__MINUS0xa85__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 2693
  %15 = load i8, i8* %AL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i8*
  store i8 %15, i8* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb_MINUS0xa85__rbp____al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 2693
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i8*
  %18 = load i8, i8* %17
  store i8 %18, i8* %AL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_testb__0x1___al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i8, i8* %AL
  %11 = zext i8 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 2
  store i64 %13, i64* %PC
  %14 = and i64 1, %11
  %15 = trunc i64 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %16, align 1
  %17 = trunc i64 %14 to i32
  %18 = and i32 %17, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i8 %15, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_400bf7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400c05(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x10__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0xffffffff___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 -1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, -1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 -1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = xor i32 %36, 1
  %42 = add i32 %40, %41
  %43 = icmp eq i32 %42, 2
  %44 = zext i1 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %44, i8* %45, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400bbb(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_400c66(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_400c52(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x10__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x580__rbp__rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -1408
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0x580__rbp__rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i32, i32* %ECX
  %16 = zext i32 %15 to i64
  %17 = load i64, i64* %RBP
  %18 = load i64, i64* %RAX
  %19 = mul i64 %18, 4
  %20 = add i64 %17, -1408
  %21 = add i64 %20, %19
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %21 to i32*
  %25 = load i32, i32* %24
  %26 = sub i32 %15, %25
  %27 = icmp ult i32 %15, %25
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %28, i8* %29, align 1
  %30 = and i32 %26, 255
  %31 = call i32 @llvm.ctpop.i32(i32 %30)
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = xor i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %34, i8* %35, align 1
  %36 = xor i32 %25, %15
  %37 = xor i32 %36, %26
  %38 = lshr i32 %37, 4
  %39 = trunc i32 %38 to i8
  %40 = and i8 %39, 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %40, i8* %41, align 1
  %42 = icmp eq i32 %26, 0
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %26, 31
  %46 = trunc i32 %45 to i8
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %46, i8* %47, align 1
  %48 = lshr i32 %15, 31
  %49 = lshr i32 %25, 31
  %50 = xor i32 %49, %48
  %51 = xor i32 %45, %48
  %52 = add i32 %51, %50
  %53 = icmp eq i32 %52, 2
  %54 = zext i1 %53 to i8
  %55 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %54, i8* %55, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_400c52(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400c57(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_400c15(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400c66(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x530__rbp__rax_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -1328
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0xc__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 12
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x10__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 16
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__edx___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %EDX = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = sub i32 %12, %14
  %19 = icmp ult i32 %12, %14
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26, i8* %27, align 1
  %28 = xor i64 %15, %13
  %29 = trunc i64 %28 to i32
  %30 = xor i32 %29, %18
  %31 = lshr i32 %30, 4
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i32 %18, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %18, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %12, 31
  %42 = lshr i32 %14, 31
  %43 = xor i32 %42, %41
  %44 = xor i32 %38, %41
  %45 = add i32 %44, %43
  %46 = icmp eq i32 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_400caa(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400ccb(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0xc__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 12
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RCX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x10__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 16
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RCX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_400d0c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xc__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 5
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RDX, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdx___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RAX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x4__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0____rax__rdx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RDX
  %14 = mul i64 %13, 4
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  store i32 0, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400cd2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x10__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_400dd4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0xffffffff____rax__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 4
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %19, -1
  %21 = icmp ult i32 %19, -1
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, -1
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %19, 31
  %43 = xor i32 %42, 1
  %44 = xor i32 %39, %42
  %45 = add i32 %44, %43
  %46 = icmp eq i32 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_400dc1(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0xff___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 255, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0xc__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x4e0__rbp__rdx_4____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -1248
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0xff___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 255, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RSI, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 255
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 255, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x4e0__rbp__rdx_4____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RSI
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RDX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -1248
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 7
  store i64 %22, i64* %PC
  %23 = trunc i64 %15 to i32
  %24 = inttoptr i64 %20 to i32*
  %25 = load i32, i32* %24
  %26 = sub i32 %23, %25
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %RSI, align 8
  %28 = icmp ult i32 %23, %25
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %29, i8* %30, align 1
  %31 = and i32 %26, 255
  %32 = call i32 @llvm.ctpop.i32(i32 %31)
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = xor i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %35, i8* %36, align 1
  %37 = xor i32 %25, %23
  %38 = xor i32 %37, %26
  %39 = lshr i32 %38, 4
  %40 = trunc i32 %39 to i8
  %41 = and i8 %40, 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %41, i8* %42, align 1
  %43 = icmp eq i32 %26, 0
  %44 = zext i1 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %44, i8* %45, align 1
  %46 = lshr i32 %26, 31
  %47 = trunc i32 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %47, i8* %48, align 1
  %49 = lshr i32 %23, 31
  %50 = lshr i32 %25, 31
  %51 = xor i32 %50, %49
  %52 = xor i32 %46, %49
  %53 = add i32 %52, %51
  %54 = icmp eq i32 %53, 2
  %55 = zext i1 %54 to i8
  %56 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %55, i8* %56, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdx___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RDI, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl___rdi__rdx_4____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RSI
  %16 = load i64, i64* %RDI
  %17 = load i64, i64* %RDX
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 3
  store i64 %21, i64* %PC
  %22 = trunc i64 %15 to i32
  %23 = inttoptr i64 %19 to i32*
  %24 = load i32, i32* %23
  %25 = add i32 %24, %22
  %26 = zext i32 %25 to i64
  store i64 %26, i64* %RSI, align 8
  %27 = icmp ult i32 %25, %22
  %28 = icmp ult i32 %25, %24
  %29 = or i1 %27, %28
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %30, i8* %31, align 1
  %32 = and i32 %25, 255
  %33 = call i32 @llvm.ctpop.i32(i32 %32)
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = xor i8 %35, 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %36, i8* %37, align 1
  %38 = xor i32 %24, %22
  %39 = xor i32 %38, %25
  %40 = lshr i32 %39, 4
  %41 = trunc i32 %40 to i8
  %42 = and i8 %41, 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %42, i8* %43, align 1
  %44 = icmp eq i32 %25, 0
  %45 = zext i1 %44 to i8
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %45, i8* %46, align 1
  %47 = lshr i32 %25, 31
  %48 = trunc i32 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %48, i8* %49, align 1
  %50 = lshr i32 %22, 31
  %51 = lshr i32 %24, 31
  %52 = xor i32 %47, %50
  %53 = xor i32 %47, %51
  %54 = add i32 %52, %53
  %55 = icmp eq i32 %54, 2
  %56 = zext i1 %55 to i8
  %57 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %56, i8* %57, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0xa90__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2704
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_idivl__ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 2
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %14 = bitcast %union.anon* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %18 = bitcast %union.anon* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = shl i64 %10, 32
  %22 = ashr exact i64 %21, 32
  %23 = shl i64 %20, 32
  %24 = or i64 %23, %16
  %25 = sdiv i64 %24, %22
  %26 = shl i64 %25, 32
  %27 = ashr exact i64 %26, 32
  %28 = icmp eq i64 %25, %27
  br i1 %28, label %33, label %29

; <label>:29:                                     ; preds = %block_400488
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %31, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:33:                                     ; preds = %block_400488
  %34 = srem i64 %24, %22
  %35 = getelementptr inbounds %union.anon, %union.anon* %13, i64 0, i32 0
  %36 = and i64 %25, 4294967295
  store i64 %36, i64* %35, align 8
  %37 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %38 = and i64 %34, 4294967295
  store i64 %38, i64* %37, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %44, align 1
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %29, %33
  %45 = phi %struct.Memory* [ %32, %29 ], [ %2, %33 ]
  ret %struct.Memory* %45
}

define %struct.Memory* @routine_movslq__edx___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x603880___rdi_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 6305920
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x6___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 5
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RDI, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0xa90__rbp____r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2704
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdi___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R8
  %13 = load i64, i64* %RDI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %R8, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x4__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx____r8__rdi_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 17
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R8 = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %R8
  %16 = load i64, i64* %RDI
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %ECX
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i32*
  store i32 %19, i32* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400dc6(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400d13(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_400e65(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl___rdx__rcx_4____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RSI
  %16 = load i64, i64* %RDX
  %17 = load i64, i64* %RCX
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 3
  store i64 %21, i64* %PC
  %22 = trunc i64 %15 to i32
  %23 = inttoptr i64 %19 to i32*
  %24 = load i32, i32* %23
  %25 = xor i32 %24, %22
  %26 = zext i32 %25 to i64
  store i64 %26, i64* %RSI, align 8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %27, align 1
  %28 = and i32 %25, 255
  %29 = call i32 @llvm.ctpop.i32(i32 %28)
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = xor i8 %31, 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %32, i8* %33, align 1
  %34 = icmp eq i32 %25, 0
  %35 = zext i1 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %25, 31
  %38 = trunc i32 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %38, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400ddb(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x530__rbp__rdx_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RDX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -1328
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 7
  store i64 %22, i64* %PC
  %23 = trunc i64 %15 to i32
  %24 = inttoptr i64 %20 to i32*
  %25 = load i32, i32* %24
  %26 = sub i32 %23, %25
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %RAX, align 8
  %28 = icmp ult i32 %23, %25
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %29, i8* %30, align 1
  %31 = and i32 %26, 255
  %32 = call i32 @llvm.ctpop.i32(i32 %31)
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = xor i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %35, i8* %36, align 1
  %37 = xor i32 %25, %23
  %38 = xor i32 %37, %26
  %39 = lshr i32 %38, 4
  %40 = trunc i32 %39 to i8
  %41 = and i8 %40, 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %41, i8* %42, align 1
  %43 = icmp eq i32 %26, 0
  %44 = zext i1 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %44, i8* %45, align 1
  %46 = lshr i32 %26, 31
  %47 = trunc i32 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %47, i8* %48, align 1
  %49 = lshr i32 %23, 31
  %50 = lshr i32 %25, 31
  %51 = xor i32 %50, %49
  %52 = xor i32 %46, %49
  %53 = add i32 %52, %51
  %54 = icmp eq i32 %53, 2
  %55 = zext i1 %54 to i8
  %56 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %55, i8* %56, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x580__rbp__rdx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -1408
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EAX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x10__MINUS0xc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 16
  %16 = icmp ult i32 %14, 16
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 16
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_400ffb(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__eax___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0xffffffff__MINUS0x5d0__rbp__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 4
  %15 = add i64 %12, -1488
  %16 = add i64 %15, %14
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 8
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %16 to i32*
  %20 = load i32, i32* %19
  %21 = sub i32 %20, -1
  %22 = icmp ult i32 %20, -1
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %21, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %20, -1
  %32 = xor i32 %31, %21
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %21, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %21, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %20, 31
  %44 = xor i32 %43, 1
  %45 = xor i32 %40, %43
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_400edb(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x5d0__rbp__rcx_4____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 4
  %15 = add i64 %12, -1488
  %16 = add i64 %15, %14
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 8
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %16 to i32*
  %20 = load i32, i32* %19
  %21 = sext i32 %20 to i64
  store i64 %21, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x603880___rcx_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 6305920
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x4e0__rbp__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -1248
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EAX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400eef(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x4e0__rbp__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 4
  %15 = add i64 %12, -1248
  %16 = add i64 %15, %14
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 11
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %16 to i32*
  store i32 0, i32* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0x530__rbp__rdx_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i32, i32* %EAX
  %16 = zext i32 %15 to i64
  %17 = load i64, i64* %RBP
  %18 = load i64, i64* %RDX
  %19 = mul i64 %18, 4
  %20 = add i64 %17, -1328
  %21 = add i64 %20, %19
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %21 to i32*
  %25 = load i32, i32* %24
  %26 = sub i32 %15, %25
  %27 = icmp ult i32 %15, %25
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %28, i8* %29, align 1
  %30 = and i32 %26, 255
  %31 = call i32 @llvm.ctpop.i32(i32 %30)
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = xor i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %34, i8* %35, align 1
  %36 = xor i32 %25, %15
  %37 = xor i32 %36, %26
  %38 = lshr i32 %37, 4
  %39 = trunc i32 %38 to i8
  %40 = and i8 %39, 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %40, i8* %41, align 1
  %42 = icmp eq i32 %26, 0
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %26, 31
  %46 = trunc i32 %45 to i8
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %46, i8* %47, align 1
  %48 = lshr i32 %15, 31
  %49 = lshr i32 %25, 31
  %50 = xor i32 %49, %48
  %51 = xor i32 %45, %48
  %52 = add i32 %51, %50
  %53 = icmp eq i32 %52, 2
  %54 = zext i1 %53 to i8
  %55 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %54, i8* %55, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_400fd3(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x4__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 4
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_400fc0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0____rax__rdx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RDX
  %14 = mul i64 %13, 4
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20, align 1
  %21 = and i32 %19, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %27, align 1
  %28 = icmp eq i32 %19, 0
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %19, 31
  %32 = trunc i32 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %19, 31
  %35 = xor i32 %31, %34
  %36 = add i32 %35, %34
  %37 = icmp eq i32 %36, 2
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %38, i8* %39, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x490__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  store i64 %13, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x4__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 4
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__edx___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x5d0__rbp__rsi_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -1488
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__edi___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x6___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 5
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RSI, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rsi___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RCX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x4__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq___rcx__rsi_4____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RSI
  %14 = mul i64 %13, 4
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sext i32 %19 to i64
  store i64 %20, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x603480___rcx_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 4
  %15 = add i64 %14, 6304896
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = trunc i64 %12 to i32
  %19 = inttoptr i64 %15 to i32*
  %20 = load i32, i32* %19
  %21 = add i32 %20, %18
  %22 = zext i32 %21 to i64
  store i64 %22, i64* %RDX, align 8
  %23 = icmp ult i32 %21, %18
  %24 = icmp ult i32 %21, %20
  %25 = or i1 %23, %24
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26, i8* %27, align 1
  %28 = and i32 %21, 255
  %29 = call i32 @llvm.ctpop.i32(i32 %28)
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = xor i8 %31, 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %32, i8* %33, align 1
  %34 = xor i32 %20, %18
  %35 = xor i32 %34, %21
  %36 = lshr i32 %35, 4
  %37 = trunc i32 %36 to i8
  %38 = and i8 %37, 1
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %38, i8* %39, align 1
  %40 = icmp eq i32 %21, 0
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %21, 31
  %44 = trunc i32 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %44, i8* %45, align 1
  %46 = lshr i32 %18, 31
  %47 = lshr i32 %20, 31
  %48 = xor i32 %43, %46
  %49 = xor i32 %43, %47
  %50 = add i32 %48, %49
  %51 = icmp eq i32 %50, 2
  %52 = zext i1 %51 to i8
  %53 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %52, i8* %53, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xa94__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2708
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xa94__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2708
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_idivl__edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDI
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 2
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %14 = bitcast %union.anon* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %18 = bitcast %union.anon* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = shl i64 %10, 32
  %22 = ashr exact i64 %21, 32
  %23 = shl i64 %20, 32
  %24 = or i64 %23, %16
  %25 = sdiv i64 %24, %22
  %26 = shl i64 %25, 32
  %27 = ashr exact i64 %26, 32
  %28 = icmp eq i64 %25, %27
  br i1 %28, label %33, label %29

; <label>:29:                                     ; preds = %block_400488
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %31, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:33:                                     ; preds = %block_400488
  %34 = srem i64 %24, %22
  %35 = getelementptr inbounds %union.anon, %union.anon* %13, i64 0, i32 0
  %36 = and i64 %25, 4294967295
  store i64 %36, i64* %35, align 8
  %37 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %38 = and i64 %34, 4294967295
  store i64 %38, i64* %37, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %44, align 1
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %29, %33
  %45 = phi %struct.Memory* [ %32, %29 ], [ %2, %33 ]
  ret %struct.Memory* %45
}

define %struct.Memory* @routine_movl_MINUS0xc__rbp____r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 12
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R8D to i64*
  %10 = load i32, i32* %R8D
  %11 = zext i32 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = add i32 1, %10
  %15 = zext i32 %14 to i64
  store i64 %15, i64* %9, align 8
  %16 = icmp ult i32 %14, %10
  %17 = icmp ult i32 %14, 1
  %18 = or i1 %16, %17
  %19 = zext i1 %18 to i8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19, i8* %20, align 1
  %21 = and i32 %14, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = xor i64 1, %11
  %28 = trunc i64 %27 to i32
  %29 = xor i32 %28, %14
  %30 = lshr i32 %29, 4
  %31 = trunc i32 %30 to i8
  %32 = and i8 %31, 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %32, i8* %33, align 1
  %34 = icmp eq i32 %14, 0
  %35 = zext i1 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = trunc i32 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %10, 31
  %41 = xor i32 %37, %40
  %42 = add i32 %41, %37
  %43 = icmp eq i32 %42, 2
  %44 = zext i1 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %44, i8* %45, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__r8d___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R8D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl_MINUS0x4e0__rbp__rcx_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDX
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RCX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -1248
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 7
  store i64 %22, i64* %PC
  %23 = trunc i64 %15 to i32
  %24 = inttoptr i64 %20 to i32*
  %25 = load i32, i32* %24
  %26 = xor i32 %25, %23
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %RDX, align 8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %28, align 1
  %29 = and i32 %26, 255
  %30 = call i32 @llvm.ctpop.i32(i32 %29)
  %31 = trunc i32 %30 to i8
  %32 = and i8 %31, 1
  %33 = xor i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i32 %26, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %26, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x4e0__rbp__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -1248
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EDX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400fc5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400ef6(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x4e0__rbp__rcx_4____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 4
  %15 = add i64 %12, -1248
  %16 = add i64 %15, %14
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 8
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %16 to i32*
  %20 = load i32, i32* %19
  %21 = sext i32 %20 to i64
  store i64 %21, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x603480___rcx_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 6304896
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_401000(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__cl__MINUS0xa95__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 2709
  %15 = load i8, i8* %CL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i8*
  store i8 %15, i8* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_40102e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x8__MINUS0x530__rbp__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 4
  %15 = add i64 %12, -1328
  %16 = add i64 %15, %14
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 8
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %16 to i32*
  %20 = load i32, i32* %19
  %21 = sub i32 %20, 8
  %22 = icmp ult i32 %20, 8
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %21, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %20, 8
  %32 = xor i32 %31, %21
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %21, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %21, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %20, 31
  %44 = xor i32 %40, %43
  %45 = add i32 %44, %43
  %46 = icmp eq i32 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_setle__dl(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %DL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %DL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__dl__MINUS0xa95__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %DL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 2709
  %15 = load i8, i8* %DL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i8*
  store i8 %15, i8* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb_MINUS0xa95__rbp____al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 2709
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i8*
  %18 = load i8, i8* %17
  store i8 %18, i8* %AL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_400ae9(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_401788(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_4010b6(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40105e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_401103(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rax__rcx_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0xa80__rbp__rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -2688
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EDX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4010bd(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0xff__MINUS0x4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 4
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 255
  %16 = icmp ult i32 %14, 255
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 255
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_401203(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 16
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 1, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__MINUS0x8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 1, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_4011b0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0xffffffff__MINUS0xa80__rbp__rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RAX
  %14 = mul i64 %13, 4
  %15 = add i64 %12, -2688
  %16 = add i64 %15, %14
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 8
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %16 to i32*
  %20 = load i32, i32* %19
  %21 = sub i32 %20, -1
  %22 = icmp ult i32 %20, -1
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %21, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %20, -1
  %32 = xor i32 %31, %21
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %21, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %21, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %20, 31
  %44 = xor i32 %43, 1
  %45 = xor i32 %40, %43
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_40119d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xa80__rbp__rcx_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -2688
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x8__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 8
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xa9c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2716
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xa9c__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2716
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0xa80__rbp__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -2688
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EDX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0xa80__rbp__rcx_4____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 4
  %15 = add i64 %12, -2688
  %16 = add i64 %15, %14
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 8
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %16 to i32*
  %20 = load i32, i32* %19
  %21 = sext i32 %20 to i64
  store i64 %21, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl_MINUS0x10__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 16
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = xor i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDX, align 8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %22, align 1
  %23 = and i32 %20, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = icmp eq i32 %20, 0
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30, i8* %31, align 1
  %32 = lshr i32 %20, 31
  %33 = trunc i32 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %36, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4011a2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40112f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4011f0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x4__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x5d4__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1492
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x600__rbp__rdx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -1536
  %19 = add i64 %18, %17
  %20 = load i32, i32* %ECX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x620__rbp__rdx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -1568
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EAX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x5d4__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1492
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x5d4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1492
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4011f5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_401114(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_401713(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_401460(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0xffffffff__MINUS0x5d0__rbp__rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RAX
  %14 = mul i64 %13, 4
  %15 = add i64 %12, -1488
  %16 = add i64 %15, %14
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 8
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %16 to i32*
  %20 = load i32, i32* %19
  %21 = sub i32 %20, -1
  %22 = icmp ult i32 %20, -1
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %21, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %20, -1
  %32 = xor i32 %31, %21
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %21, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %21, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %20, 31
  %44 = xor i32 %43, 1
  %45 = xor i32 %40, %43
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4012ab(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq___rax__rcx_4____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 4
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sext i32 %19 to i64
  store i64 %20, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl_0x603880___rax_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RAX
  %14 = mul i64 %13, 4
  %15 = add i64 %14, 6305920
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = trunc i64 %12 to i32
  %19 = inttoptr i64 %15 to i32*
  %20 = load i32, i32* %19
  %21 = xor i32 %20, %18
  %22 = zext i32 %21 to i64
  store i64 %22, i64* %RDX, align 8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %23, align 1
  %24 = and i32 %21, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %21, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %21, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %36, align 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %37, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x650__rbp__rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -1616
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EDX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40137c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_401300(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_401300(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x603880___rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 6305920
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x650__rbp__rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -1616
  %19 = add i64 %18, %17
  %20 = load i32, i32* %ECX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_401377(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_401363(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_401363(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x603880___rax_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 6305920
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_401372(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x650__rbp__rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RAX
  %14 = mul i64 %13, 4
  %15 = add i64 %12, -1616
  %16 = add i64 %15, %14
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 11
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %16 to i32*
  store i32 0, i32* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0x4__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 4
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_401434(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_401421(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x8__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 8
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RCX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x8__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 8
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RSI, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__esi___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rcx__rdx_4____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x5d0__rbp__rcx_4____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RSI
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RCX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -1488
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 7
  store i64 %22, i64* %PC
  %23 = trunc i64 %15 to i32
  %24 = inttoptr i64 %20 to i32*
  %25 = load i32, i32* %24
  %26 = add i32 %25, %23
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %RSI, align 8
  %28 = icmp ult i32 %26, %23
  %29 = icmp ult i32 %26, %25
  %30 = or i1 %28, %29
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %31, i8* %32, align 1
  %33 = and i32 %26, 255
  %34 = call i32 @llvm.ctpop.i32(i32 %33)
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = xor i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %37, i8* %38, align 1
  %39 = xor i32 %25, %23
  %40 = xor i32 %39, %26
  %41 = lshr i32 %40, 4
  %42 = trunc i32 %41 to i8
  %43 = and i8 %42, 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %43, i8* %44, align 1
  %45 = icmp eq i32 %26, 0
  %46 = zext i1 %45 to i8
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %46, i8* %47, align 1
  %48 = lshr i32 %26, 31
  %49 = trunc i32 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %49, i8* %50, align 1
  %51 = lshr i32 %23, 31
  %52 = lshr i32 %25, 31
  %53 = xor i32 %48, %51
  %54 = xor i32 %48, %52
  %55 = add i32 %53, %54
  %56 = icmp eq i32 %55, 2
  %57 = zext i1 %56 to i8
  %58 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %57, i8* %58, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xaa0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2720
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xaa0__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2720
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl_MINUS0x650__rbp__rcx_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDX
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RCX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -1616
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 7
  store i64 %22, i64* %PC
  %23 = trunc i64 %15 to i32
  %24 = inttoptr i64 %20 to i32*
  %25 = load i32, i32* %24
  %26 = xor i32 %25, %23
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %RDX, align 8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %28, align 1
  %29 = and i32 %26, 255
  %30 = call i32 @llvm.ctpop.i32(i32 %29)
  %31 = trunc i32 %30 to i8
  %32 = and i8 %31, 1
  %33 = xor i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i32 %26, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %26, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x650__rbp__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -1616
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EDX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_401426(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_401383(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x650__rbp__rax_4____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RAX
  %14 = mul i64 %13, 4
  %15 = add i64 %12, -1616
  %16 = add i64 %15, %14
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 8
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %16 to i32*
  %20 = load i32, i32* %19
  %21 = sext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_401221(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4014da(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0xa50__rbp__rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RAX
  %14 = mul i64 %13, 4
  %15 = add i64 %12, -2640
  %16 = add i64 %15, %14
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 11
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %16 to i32*
  store i32 0, i32* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4014b8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0x603080___rax_4____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = mul i64 %9, 4
  %11 = add i64 %10, 6303872
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 8
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  %15 = load i32, i32* %14
  %16 = sext i32 %15 to i64
  store i64 %16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0x603080___rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 6303872
  %15 = load i32, i32* %ECX
  %16 = zext i32 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 7
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i32*
  store i32 %15, i32* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4014c7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x603080___rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = mul i64 %9, 4
  %11 = add i64 %10, 6303872
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 11
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  store i32 0, i32* %14
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4014cc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_401467(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_40170e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x620__rbp__rax_4____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RAX
  %14 = mul i64 %13, 4
  %15 = add i64 %12, -1568
  %16 = add i64 %15, %14
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 8
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %16 to i32*
  %20 = load i32, i32* %19
  %21 = sext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__MINUS0xa50__rbp__rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RAX
  %14 = mul i64 %13, 4
  %15 = add i64 %12, -2640
  %16 = add i64 %15, %14
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 11
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %16 to i32*
  store i32 1, i32* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_4015a2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0xffffffff__MINUS0x650__rbp__rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RAX
  %14 = mul i64 %13, 4
  %15 = add i64 %12, -1616
  %16 = add i64 %15, %14
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 8
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %16 to i32*
  %20 = load i32, i32* %19
  %21 = sub i32 %20, -1
  %22 = icmp ult i32 %20, -1
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %21, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %20, -1
  %32 = xor i32 %31, %21
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %21, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %21, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %20, 31
  %44 = xor i32 %43, 1
  %45 = xor i32 %40, %43
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_40158f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x650__rbp__rcx_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -1616
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull_MINUS0x600__rbp__rcx_4____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RSI
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RCX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -1536
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 8
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %20 to i32*
  %24 = load i32, i32* %23
  %25 = shl i64 %15, 32
  %26 = ashr exact i64 %25, 32
  %27 = sext i32 %24 to i64
  %28 = mul i64 %27, %26
  %29 = trunc i64 %28 to i32
  %30 = and i64 %28, 4294967295
  store i64 %30, i64* %RSI, align 8
  %31 = shl i64 %28, 32
  %32 = ashr exact i64 %31, 32
  %33 = icmp ne i64 %32, %28
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %34, i8* %35, align 1
  %36 = and i32 %29, 255
  %37 = call i32 @llvm.ctpop.i32(i32 %36)
  %38 = trunc i32 %37 to i8
  %39 = and i8 %38, 1
  %40 = xor i8 %39, 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %40, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %43, align 1
  %44 = lshr i32 %29, 31
  %45 = trunc i32 %44 to i8
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %45, i8* %46, align 1
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %34, i8* %47, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xaa4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2724
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xaa4__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2724
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x620__rbp__rcx_4____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 4
  %15 = add i64 %12, -1568
  %16 = add i64 %15, %14
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 8
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %16 to i32*
  %20 = load i32, i32* %19
  %21 = sext i32 %20 to i64
  store i64 %21, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl_MINUS0xa50__rbp__rcx_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDX
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RCX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -2640
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 7
  store i64 %22, i64* %PC
  %23 = trunc i64 %15 to i32
  %24 = inttoptr i64 %20 to i32*
  %25 = load i32, i32* %24
  %26 = xor i32 %25, %23
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %RDX, align 8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %28, align 1
  %29 = and i32 %26, 255
  %30 = call i32 @llvm.ctpop.i32(i32 %29)
  %31 = trunc i32 %30 to i8
  %32 = and i8 %31, 1
  %33 = xor i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i32 %26, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %26, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0xa50__rbp__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -2640
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EDX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_401594(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_401513(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0xa50__rbp__rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RAX
  %14 = mul i64 %13, 4
  %15 = add i64 %12, -2640
  %16 = add i64 %15, %14
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 8
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %16 to i32*
  %20 = load i32, i32* %19
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %21, align 1
  %22 = and i32 %20, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %28, align 1
  %29 = icmp eq i32 %20, 0
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30, i8* %31, align 1
  %32 = lshr i32 %20, 31
  %33 = trunc i32 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33, i8* %34, align 1
  %35 = lshr i32 %20, 31
  %36 = xor i32 %32, %35
  %37 = add i32 %36, %35
  %38 = icmp eq i32 %37, 2
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %39, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4016fb(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0xa50__rbp__rax_4____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RAX
  %14 = mul i64 %13, 4
  %15 = add i64 %12, -2640
  %16 = add i64 %15, %14
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 8
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %16 to i32*
  %20 = load i32, i32* %19
  %21 = sext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0xa50__rbp__rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -2640
  %19 = add i64 %18, %17
  %20 = load i32, i32* %ECX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 16
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_401674(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_401661(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x620__rbp__rcx_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -1568
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x600__rbp__rcx_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDX
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RCX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -1536
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 7
  store i64 %22, i64* %PC
  %23 = trunc i64 %15 to i32
  %24 = inttoptr i64 %20 to i32*
  %25 = load i32, i32* %24
  %26 = add i32 %25, %23
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %RDX, align 8
  %28 = icmp ult i32 %26, %23
  %29 = icmp ult i32 %26, %25
  %30 = or i1 %28, %29
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %31, i8* %32, align 1
  %33 = and i32 %26, 255
  %34 = call i32 @llvm.ctpop.i32(i32 %33)
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = xor i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %37, i8* %38, align 1
  %39 = xor i32 %25, %23
  %40 = xor i32 %39, %26
  %41 = lshr i32 %40, 4
  %42 = trunc i32 %41 to i8
  %43 = and i8 %42, 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %43, i8* %44, align 1
  %45 = icmp eq i32 %26, 0
  %46 = zext i1 %45 to i8
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %46, i8* %47, align 1
  %48 = lshr i32 %26, 31
  %49 = trunc i32 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %49, i8* %50, align 1
  %51 = lshr i32 %23, 31
  %52 = lshr i32 %25, 31
  %53 = xor i32 %48, %51
  %54 = xor i32 %48, %52
  %55 = add i32 %53, %54
  %56 = icmp eq i32 %55, 2
  %57 = zext i1 %56 to i8
  %58 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %57, i8* %58, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xaa8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2728
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xaa8__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2728
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl__0x1___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = xor i64 1, %9
  %13 = trunc i64 %12 to i32
  %14 = and i64 %12, 4294967295
  store i64 %14, i64* %RDX, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %13, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = icmp eq i32 %13, 0
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23, i8* %24, align 1
  %25 = lshr i32 %13, 31
  %26 = trunc i32 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x603480___rcx_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 6304896
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x10__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 16
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_401666(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4015f8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x10__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xaac__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2732
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xaac__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2732
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x620__rbp__rsi_4____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RSI
  %14 = mul i64 %13, 4
  %15 = add i64 %12, -1568
  %16 = add i64 %15, %14
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 8
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %16 to i32*
  %20 = load i32, i32* %19
  %21 = sext i32 %20 to i64
  store i64 %21, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xa50__rbp__rsi_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -2640
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0xff___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 255, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 255
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 255, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x603880___rsi_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 6305920
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0xa50__rbp__rsi_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -2640
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EDX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl_0x603080___rsi_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RSI
  %14 = mul i64 %13, 4
  %15 = add i64 %14, 6303872
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = trunc i64 %12 to i32
  %19 = inttoptr i64 %15 to i32*
  %20 = load i32, i32* %19
  %21 = xor i32 %20, %18
  %22 = zext i32 %21 to i64
  store i64 %22, i64* %RDX, align 8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %23, align 1
  %24 = and i32 %21, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %21, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %21, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %36, align 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %37, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__0x603080___rsi_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 6303872
  %15 = load i32, i32* %EDX
  %16 = zext i32 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 7
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i32*
  store i32 %15, i32* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_401700(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4014e1(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_401783(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_40177e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_40175c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40176b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_401770(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40171a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4017f8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4017f3(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4017d1(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4017e0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4017e5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40178f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40186d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_401868(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_401846(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_401855(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40185a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_401804(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0xa30___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 2608, %9
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 2608
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 2608, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_popq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 8
  %14 = inttoptr i64 %12 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %RBP, align 8
  store i64 %13, i64* %11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_retq(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11
  store i64 %12, i64* %8, align 8
  %13 = add i64 %10, 8
  store i64 %13, i64* %9, align 8
  ret %struct.Memory* %2
}

attributes #0 = { argmemonly nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { alwaysinline }
