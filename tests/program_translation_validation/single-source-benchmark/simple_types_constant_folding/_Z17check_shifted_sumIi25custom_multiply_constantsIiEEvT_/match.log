[Info]: Check for multiple matches
Multiple matches exist for [0x55d7e4f3dad0]:   %47 = tail call double @llvm.fabs.f64(double %46) #9
[0x55d7e34b8e40]:   %92 = tail call i32 @llvm.ctpop.i32(i32 %91)
[0x55d7e34c92a0]:   %73 = tail call i32 @llvm.ctpop.i32(i32 %72)
[0x55d7e35225e0]:   %118 = tail call i32 @llvm.ctpop.i32(i32 %117)
[0x55d7e5807eb0]:   %47 = tail call double @llvm.trunc.f64(double %46)
[0x55d7e58088a0]:   %48 = tail call double @llvm.fabs.f64(double %47)
[0x55d7e582f870]:   %call2_413cca = tail call %struct.Memory.32* @sub_4006c0.printf_plt(%struct.State.1* nonnull %0, i64 %100, %struct.Memory.32* %call2_413caa)
[0x55d7e582fab0]:   %17 = tail call i32 @llvm.ctpop.i32(i32 %16)
[0x55d7e5832a70]:   %call2_413caa = tail call %struct.Memory.32* @sub_412f60._Z15tolerance_equalIiEbRT_S1_(%struct.State.1* %0, i64 %83, %struct.Memory.32* %call2_413c94)
[0x55d7e5833f40]:   %call2_413c94 = tail call %struct.Memory.32* @sub_413c70._ZN25custom_multiply_constantsIiE8do_shiftEi(%struct.State.1* %0, i64 %53, %struct.Memory.32* %2)
Multiple matches exist for [0x55d7e4f42a08]:   %138 = tail call fastcc %struct.Memory* @ext_674178_printf(%struct.State* nonnull %0, %struct.Memory* %87)
[0x55d7e582f870]:   %call2_413cca = tail call %struct.Memory.32* @sub_4006c0.printf_plt(%struct.State.1* nonnull %0, i64 %100, %struct.Memory.32* %call2_413caa)
[0x55d7e5832a70]:   %call2_413caa = tail call %struct.Memory.32* @sub_412f60._Z15tolerance_equalIiEbRT_S1_(%struct.State.1* %0, i64 %83, %struct.Memory.32* %call2_413c94)
[0x55d7e5833f40]:   %call2_413c94 = tail call %struct.Memory.32* @sub_413c70._ZN25custom_multiply_constantsIiE8do_shiftEi(%struct.State.1* %0, i64 %53, %struct.Memory.32* %2)
Iso Match NOT Found
Reading LLVM: ../binary/test.mcsema.opt.ll
Reading LLVM: mcsema/test.proposed.opt.ll
Extracting function [_Z17check_shifted_sumIi25custom_multiply_constantsIiEEvT_] from ../binary/test.mcsema.opt.ll
Extracting function [_Z17check_shifted_sumIi25custom_multiply_constantsIiEEvT_] from mcsema/test.proposed.opt.ll
Matcher Done...
