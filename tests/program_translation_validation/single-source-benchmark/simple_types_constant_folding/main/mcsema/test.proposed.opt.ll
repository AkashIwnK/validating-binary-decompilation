; ModuleID = 'mcsema/test.proposed.inline.ll'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"

%__bss_start_type = type <{ [8 x i8] }>
%G_0x16793__rip__type = type <{ [8 x i8] }>
%G_0x21fe43__rip__type = type <{ [8 x i8] }>
%G_0x21ffa7__rip__type = type <{ [4 x i8] }>
%G_0x21ffc6__rip__type = type <{ [4 x i8] }>
%G_0x2200d4__rip__type = type <{ [4 x i8] }>
%G_0x220100__rip__type = type <{ [8 x i8] }>
%G_0x22010d__rip__type = type <{ [4 x i8] }>
%G_0x220264__rip__type = type <{ [4 x i8] }>
%G_0x220283__rip__type = type <{ [4 x i8] }>
%G_0x22038c__rip__type = type <{ [4 x i8] }>
%G_0x2203c3__rip__type = type <{ [8 x i8] }>
%G_0x2203c6__rip__type = type <{ [4 x i8] }>
%G_0x220528__rip__type = type <{ [4 x i8] }>
%G_0x220547__rip__type = type <{ [4 x i8] }>
%G_0x220650__rip__type = type <{ [4 x i8] }>
%G_0x22067a__rip__type = type <{ [8 x i8] }>
%G_0x22068a__rip__type = type <{ [4 x i8] }>
%G_0x2207de__rip__type = type <{ [4 x i8] }>
%G_0x2207fd__rip__type = type <{ [4 x i8] }>
%G_0x220906__rip__type = type <{ [4 x i8] }>
%G_0x220936__rip__type = type <{ [8 x i8] }>
%G_0x220940__rip__type = type <{ [4 x i8] }>
%G_0x220a9a__rip__type = type <{ [4 x i8] }>
%G_0x220ab9__rip__type = type <{ [4 x i8] }>
%G_0x220bc2__rip__type = type <{ [4 x i8] }>
%G_0x220bf2__rip__type = type <{ [8 x i8] }>
%G_0x220bfc__rip__type = type <{ [4 x i8] }>
%G_0x220d56__rip__type = type <{ [4 x i8] }>
%G_0x220d75__rip__type = type <{ [4 x i8] }>
%G_0x220e7e__rip__type = type <{ [4 x i8] }>
%G_0x220ead__rip__type = type <{ [8 x i8] }>
%G_0x220eb8__rip__type = type <{ [4 x i8] }>
%G_0x221011__rip__type = type <{ [4 x i8] }>
%G_0x221030__rip__type = type <{ [4 x i8] }>
%G_0x221143__rip__type = type <{ [4 x i8] }>
%G_0x221175__rip__type = type <{ [8 x i8] }>
%G_0x22117d__rip__type = type <{ [4 x i8] }>
%G_0x622080_type = type <{ [4 x i8] }>
%G_0x622088_type = type <{ [16 x i8] }>
%G_0x6220c0_type = type <{ [4 x i8] }>
%G__0x418be2_type = type <{ [4 x i8] }>
%G__0x418be3_type = type <{ [4 x i8] }>
%G__0x418bf3_type = type <{ [4 x i8] }>
%G__0x418bf4_type = type <{ [4 x i8] }>
%G__0x418c09_type = type <{ [4 x i8] }>
%G__0x418c0a_type = type <{ [4 x i8] }>
%G__0x418c24_type = type <{ [4 x i8] }>
%G__0x418c25_type = type <{ [4 x i8] }>
%G__0x418c3f_type = type <{ [4 x i8] }>
%G__0x418c40_type = type <{ [4 x i8] }>
%G__0x418c58_type = type <{ [4 x i8] }>
%G__0x418c59_type = type <{ [4 x i8] }>
%G__0x418c6e_type = type <{ [4 x i8] }>
%G__0x418c6f_type = type <{ [4 x i8] }>
%G__0x418c86_type = type <{ [4 x i8] }>
%G__0x418c87_type = type <{ [4 x i8] }>
%G__0x418ca1_type = type <{ [4 x i8] }>
%G__0x418ca2_type = type <{ [4 x i8] }>
%G__0x418cc0_type = type <{ [4 x i8] }>
%G__0x418cc1_type = type <{ [4 x i8] }>
%G__0x418cdc_type = type <{ [4 x i8] }>
%G__0x418cdd_type = type <{ [4 x i8] }>
%G__0x418d01_type = type <{ [4 x i8] }>
%G__0x418d02_type = type <{ [4 x i8] }>
%G__0x418d23_type = type <{ [4 x i8] }>
%G__0x418d24_type = type <{ [4 x i8] }>
%G__0x418d39_type = type <{ [4 x i8] }>
%G__0x418d3a_type = type <{ [4 x i8] }>
%G__0x418d4e_type = type <{ [4 x i8] }>
%G__0x418d4f_type = type <{ [4 x i8] }>
%G__0x418d64_type = type <{ [4 x i8] }>
%G__0x418d65_type = type <{ [4 x i8] }>
%G__0x418d79_type = type <{ [4 x i8] }>
%G__0x418d7a_type = type <{ [4 x i8] }>
%G__0x418d98_type = type <{ [4 x i8] }>
%G__0x418d99_type = type <{ [4 x i8] }>
%G__0x418db2_type = type <{ [4 x i8] }>
%G__0x418db3_type = type <{ [4 x i8] }>
%G__0x418dd6_type = type <{ [4 x i8] }>
%G__0x418dd7_type = type <{ [4 x i8] }>
%G__0x418df0_type = type <{ [4 x i8] }>
%G__0x418df1_type = type <{ [4 x i8] }>
%G__0x418e15_type = type <{ [4 x i8] }>
%G__0x418e16_type = type <{ [4 x i8] }>
%G__0x418e39_type = type <{ [4 x i8] }>
%G__0x418e3a_type = type <{ [4 x i8] }>
%G__0x418e51_type = type <{ [4 x i8] }>
%G__0x418e52_type = type <{ [4 x i8] }>
%G__0x418e73_type = type <{ [4 x i8] }>
%G__0x418e74_type = type <{ [4 x i8] }>
%G__0x418e95_type = type <{ [4 x i8] }>
%G__0x418e96_type = type <{ [4 x i8] }>
%G__0x418eb5_type = type <{ [4 x i8] }>
%G__0x418eb6_type = type <{ [4 x i8] }>
%G__0x418eca_type = type <{ [4 x i8] }>
%G__0x418ecb_type = type <{ [4 x i8] }>
%G__0x418ee8_type = type <{ [4 x i8] }>
%G__0x418ee9_type = type <{ [4 x i8] }>
%G__0x418efc_type = type <{ [4 x i8] }>
%G__0x418efd_type = type <{ [4 x i8] }>
%G__0x418f19_type = type <{ [4 x i8] }>
%G__0x418f1a_type = type <{ [4 x i8] }>
%G__0x418f2e_type = type <{ [4 x i8] }>
%G__0x418f2f_type = type <{ [4 x i8] }>
%G__0x418f4c_type = type <{ [4 x i8] }>
%G__0x418f4d_type = type <{ [4 x i8] }>
%G__0x418f5e_type = type <{ [4 x i8] }>
%G__0x418f5f_type = type <{ [4 x i8] }>
%G__0x418f75_type = type <{ [4 x i8] }>
%G__0x418f76_type = type <{ [4 x i8] }>
%G__0x418f91_type = type <{ [4 x i8] }>
%G__0x418f92_type = type <{ [4 x i8] }>
%G__0x418fad_type = type <{ [4 x i8] }>
%G__0x418fae_type = type <{ [4 x i8] }>
%G__0x418fc7_type = type <{ [4 x i8] }>
%G__0x418fc8_type = type <{ [4 x i8] }>
%G__0x418fde_type = type <{ [4 x i8] }>
%G__0x418fdf_type = type <{ [4 x i8] }>
%G__0x418ff7_type = type <{ [4 x i8] }>
%G__0x418ff8_type = type <{ [4 x i8] }>
%G__0x419013_type = type <{ [4 x i8] }>
%G__0x419014_type = type <{ [4 x i8] }>
%G__0x419033_type = type <{ [4 x i8] }>
%G__0x419034_type = type <{ [4 x i8] }>
%G__0x419050_type = type <{ [4 x i8] }>
%G__0x419051_type = type <{ [4 x i8] }>
%G__0x419076_type = type <{ [4 x i8] }>
%G__0x419077_type = type <{ [4 x i8] }>
%G__0x419099_type = type <{ [4 x i8] }>
%G__0x41909a_type = type <{ [4 x i8] }>
%G__0x4190b0_type = type <{ [4 x i8] }>
%G__0x4190b1_type = type <{ [4 x i8] }>
%G__0x4190c6_type = type <{ [4 x i8] }>
%G__0x4190c7_type = type <{ [4 x i8] }>
%G__0x4190dd_type = type <{ [4 x i8] }>
%G__0x4190de_type = type <{ [4 x i8] }>
%G__0x4190f3_type = type <{ [4 x i8] }>
%G__0x4190f4_type = type <{ [4 x i8] }>
%G__0x419113_type = type <{ [4 x i8] }>
%G__0x419114_type = type <{ [4 x i8] }>
%G__0x41912e_type = type <{ [4 x i8] }>
%G__0x41912f_type = type <{ [4 x i8] }>
%G__0x419153_type = type <{ [4 x i8] }>
%G__0x419154_type = type <{ [4 x i8] }>
%G__0x41916e_type = type <{ [4 x i8] }>
%G__0x41916f_type = type <{ [4 x i8] }>
%G__0x419194_type = type <{ [4 x i8] }>
%G__0x419195_type = type <{ [4 x i8] }>
%G__0x4191b9_type = type <{ [4 x i8] }>
%G__0x4191ba_type = type <{ [4 x i8] }>
%G__0x4191d2_type = type <{ [4 x i8] }>
%G__0x4191d3_type = type <{ [4 x i8] }>
%G__0x4191f5_type = type <{ [4 x i8] }>
%G__0x4191f6_type = type <{ [4 x i8] }>
%G__0x419218_type = type <{ [4 x i8] }>
%G__0x419219_type = type <{ [4 x i8] }>
%G__0x419239_type = type <{ [4 x i8] }>
%G__0x41923a_type = type <{ [4 x i8] }>
%G__0x41924f_type = type <{ [4 x i8] }>
%G__0x419250_type = type <{ [4 x i8] }>
%G__0x41926e_type = type <{ [4 x i8] }>
%G__0x41926f_type = type <{ [4 x i8] }>
%G__0x419283_type = type <{ [4 x i8] }>
%G__0x419284_type = type <{ [4 x i8] }>
%G__0x4192a1_type = type <{ [4 x i8] }>
%G__0x4192a2_type = type <{ [4 x i8] }>
%G__0x4192b7_type = type <{ [4 x i8] }>
%G__0x4192b8_type = type <{ [4 x i8] }>
%G__0x4192d6_type = type <{ [4 x i8] }>
%G__0x4192d7_type = type <{ [4 x i8] }>
%G__0x4192e8_type = type <{ [4 x i8] }>
%G__0x4192e9_type = type <{ [4 x i8] }>
%G__0x4192ff_type = type <{ [4 x i8] }>
%G__0x419300_type = type <{ [4 x i8] }>
%G__0x41931b_type = type <{ [4 x i8] }>
%G__0x41931c_type = type <{ [4 x i8] }>
%G__0x419337_type = type <{ [4 x i8] }>
%G__0x419338_type = type <{ [4 x i8] }>
%G__0x419351_type = type <{ [4 x i8] }>
%G__0x419352_type = type <{ [4 x i8] }>
%G__0x419368_type = type <{ [4 x i8] }>
%G__0x419369_type = type <{ [4 x i8] }>
%G__0x419381_type = type <{ [4 x i8] }>
%G__0x419382_type = type <{ [4 x i8] }>
%G__0x41939d_type = type <{ [4 x i8] }>
%G__0x41939e_type = type <{ [4 x i8] }>
%G__0x4193bd_type = type <{ [4 x i8] }>
%G__0x4193be_type = type <{ [4 x i8] }>
%G__0x4193da_type = type <{ [4 x i8] }>
%G__0x4193db_type = type <{ [4 x i8] }>
%G__0x419400_type = type <{ [4 x i8] }>
%G__0x419401_type = type <{ [4 x i8] }>
%G__0x419423_type = type <{ [4 x i8] }>
%G__0x419424_type = type <{ [4 x i8] }>
%G__0x41943a_type = type <{ [4 x i8] }>
%G__0x41943b_type = type <{ [4 x i8] }>
%G__0x419450_type = type <{ [4 x i8] }>
%G__0x419451_type = type <{ [4 x i8] }>
%G__0x419467_type = type <{ [4 x i8] }>
%G__0x419468_type = type <{ [4 x i8] }>
%G__0x41947d_type = type <{ [4 x i8] }>
%G__0x41947e_type = type <{ [4 x i8] }>
%G__0x41949d_type = type <{ [4 x i8] }>
%G__0x41949e_type = type <{ [4 x i8] }>
%G__0x4194b8_type = type <{ [4 x i8] }>
%G__0x4194b9_type = type <{ [4 x i8] }>
%G__0x4194dd_type = type <{ [4 x i8] }>
%G__0x4194de_type = type <{ [4 x i8] }>
%G__0x4194f8_type = type <{ [4 x i8] }>
%G__0x4194f9_type = type <{ [4 x i8] }>
%G__0x41951e_type = type <{ [4 x i8] }>
%G__0x41951f_type = type <{ [4 x i8] }>
%G__0x419543_type = type <{ [4 x i8] }>
%G__0x419544_type = type <{ [4 x i8] }>
%G__0x41955c_type = type <{ [4 x i8] }>
%G__0x41955d_type = type <{ [4 x i8] }>
%G__0x41957f_type = type <{ [4 x i8] }>
%G__0x419580_type = type <{ [4 x i8] }>
%G__0x4195a2_type = type <{ [4 x i8] }>
%G__0x4195a3_type = type <{ [4 x i8] }>
%G__0x4195c3_type = type <{ [4 x i8] }>
%G__0x4195c4_type = type <{ [4 x i8] }>
%G__0x4195d9_type = type <{ [4 x i8] }>
%G__0x4195da_type = type <{ [4 x i8] }>
%G__0x4195f8_type = type <{ [4 x i8] }>
%G__0x4195f9_type = type <{ [4 x i8] }>
%G__0x41960d_type = type <{ [4 x i8] }>
%G__0x41960e_type = type <{ [4 x i8] }>
%G__0x41962b_type = type <{ [4 x i8] }>
%G__0x41962c_type = type <{ [4 x i8] }>
%G__0x419641_type = type <{ [4 x i8] }>
%G__0x419642_type = type <{ [4 x i8] }>
%G__0x419660_type = type <{ [8 x i8] }>
%G__0x419661_type = type <{ [4 x i8] }>
%G__0x419672_type = type <{ [8 x i8] }>
%G__0x419673_type = type <{ [4 x i8] }>
%G__0x419689_type = type <{ [8 x i8] }>
%G__0x41968a_type = type <{ [4 x i8] }>
%G__0x4196a5_type = type <{ [8 x i8] }>
%G__0x4196a6_type = type <{ [4 x i8] }>
%G__0x4196c1_type = type <{ [8 x i8] }>
%G__0x4196c2_type = type <{ [4 x i8] }>
%G__0x4196db_type = type <{ [8 x i8] }>
%G__0x4196dc_type = type <{ [4 x i8] }>
%G__0x4196f2_type = type <{ [8 x i8] }>
%G__0x4196f3_type = type <{ [4 x i8] }>
%G__0x41970b_type = type <{ [8 x i8] }>
%G__0x41970c_type = type <{ [4 x i8] }>
%G__0x419727_type = type <{ [8 x i8] }>
%G__0x419728_type = type <{ [4 x i8] }>
%G__0x419747_type = type <{ [8 x i8] }>
%G__0x419748_type = type <{ [4 x i8] }>
%G__0x419764_type = type <{ [8 x i8] }>
%G__0x419765_type = type <{ [4 x i8] }>
%G__0x41978a_type = type <{ [8 x i8] }>
%G__0x41978b_type = type <{ [4 x i8] }>
%G__0x4197ad_type = type <{ [8 x i8] }>
%G__0x4197ae_type = type <{ [4 x i8] }>
%G__0x4197c4_type = type <{ [8 x i8] }>
%G__0x4197c5_type = type <{ [4 x i8] }>
%G__0x4197da_type = type <{ [8 x i8] }>
%G__0x4197db_type = type <{ [4 x i8] }>
%G__0x4197f1_type = type <{ [8 x i8] }>
%G__0x4197f2_type = type <{ [4 x i8] }>
%G__0x419807_type = type <{ [8 x i8] }>
%G__0x419808_type = type <{ [4 x i8] }>
%G__0x419827_type = type <{ [8 x i8] }>
%G__0x419828_type = type <{ [4 x i8] }>
%G__0x419842_type = type <{ [8 x i8] }>
%G__0x419843_type = type <{ [4 x i8] }>
%G__0x419867_type = type <{ [8 x i8] }>
%G__0x419868_type = type <{ [4 x i8] }>
%G__0x419882_type = type <{ [8 x i8] }>
%G__0x419883_type = type <{ [4 x i8] }>
%G__0x4198a8_type = type <{ [8 x i8] }>
%G__0x4198a9_type = type <{ [4 x i8] }>
%G__0x4198cd_type = type <{ [8 x i8] }>
%G__0x4198ce_type = type <{ [4 x i8] }>
%G__0x4198e6_type = type <{ [8 x i8] }>
%G__0x4198e7_type = type <{ [4 x i8] }>
%G__0x419909_type = type <{ [8 x i8] }>
%G__0x41990a_type = type <{ [4 x i8] }>
%G__0x41992c_type = type <{ [8 x i8] }>
%G__0x41992d_type = type <{ [4 x i8] }>
%G__0x41994d_type = type <{ [8 x i8] }>
%G__0x41994e_type = type <{ [4 x i8] }>
%G__0x419963_type = type <{ [8 x i8] }>
%G__0x419964_type = type <{ [4 x i8] }>
%G__0x419982_type = type <{ [8 x i8] }>
%G__0x419983_type = type <{ [4 x i8] }>
%G__0x419997_type = type <{ [8 x i8] }>
%G__0x419998_type = type <{ [4 x i8] }>
%G__0x4199b5_type = type <{ [8 x i8] }>
%G__0x4199b6_type = type <{ [4 x i8] }>
%G__0x4199cb_type = type <{ [8 x i8] }>
%G__0x4199cc_type = type <{ [4 x i8] }>
%G__0x4199ea_type = type <{ [8 x i8] }>
%G__0x4199f9_type = type <{ [8 x i8] }>
%G__0x419a0d_type = type <{ [8 x i8] }>
%G__0x419a26_type = type <{ [8 x i8] }>
%G__0x419a3f_type = type <{ [8 x i8] }>
%G__0x419a56_type = type <{ [8 x i8] }>
%G__0x419a69_type = type <{ [8 x i8] }>
%G__0x419a86_type = type <{ [8 x i8] }>
%G__0x419a9e_type = type <{ [8 x i8] }>
%G__0x419ac0_type = type <{ [8 x i8] }>
%G__0x419ad8_type = type <{ [8 x i8] }>
%G__0x419afb_type = type <{ [8 x i8] }>
%G__0x419b1d_type = type <{ [8 x i8] }>
%G__0x419b33_type = type <{ [8 x i8] }>
%G__0x419b53_type = type <{ [8 x i8] }>
%G__0x419b73_type = type <{ [8 x i8] }>
%G__0x419b91_type = type <{ [8 x i8] }>
%G__0x419ba1_type = type <{ [8 x i8] }>
%G__0x419bb6_type = type <{ [8 x i8] }>
%G__0x419bd0_type = type <{ [8 x i8] }>
%G__0x419bea_type = type <{ [8 x i8] }>
%G__0x419c02_type = type <{ [8 x i8] }>
%G__0x419c16_type = type <{ [8 x i8] }>
%G__0x419c34_type = type <{ [8 x i8] }>
%G__0x419c4d_type = type <{ [8 x i8] }>
%G__0x419c70_type = type <{ [8 x i8] }>
%G__0x419c89_type = type <{ [8 x i8] }>
%G__0x419cad_type = type <{ [8 x i8] }>
%G__0x419cd0_type = type <{ [8 x i8] }>
%G__0x419ce7_type = type <{ [8 x i8] }>
%G__0x419d08_type = type <{ [8 x i8] }>
%G__0x419d29_type = type <{ [8 x i8] }>
%G__0x6220d0_type = type <{ [8 x i8] }>
%G__0x631ad0_type = type <{ [8 x i8] }>
%G__0x6397d0_type = type <{ [8 x i8] }>
%G__0x6491d0_type = type <{ [4 x i8] }>
%G__0x658bd0_type = type <{ [4 x i8] }>
%G__0x6608d0_type = type <{ [4 x i8] }>
%G__0x6685d0_type = type <{ [4 x i8] }>
%G__0x66c450_type = type <{ [4 x i8] }>
%G__0x6702d0_type = type <{ [4 x i8] }>
%G__0x672210_type = type <{ [4 x i8] }>
%G__0x674150_type = type <{ [4 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.anon = type { i64 }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque

@__bss_start = local_unnamed_addr global %__bss_start_type zeroinitializer
@G_0x16793__rip_ = local_unnamed_addr global %G_0x16793__rip__type zeroinitializer
@G_0x21fe43__rip_ = local_unnamed_addr global %G_0x21fe43__rip__type zeroinitializer
@G_0x21ffa7__rip_ = local_unnamed_addr global %G_0x21ffa7__rip__type zeroinitializer
@G_0x21ffc6__rip_ = local_unnamed_addr global %G_0x21ffc6__rip__type zeroinitializer
@G_0x2200d4__rip_ = local_unnamed_addr global %G_0x2200d4__rip__type zeroinitializer
@G_0x220100__rip_ = local_unnamed_addr global %G_0x220100__rip__type zeroinitializer
@G_0x22010d__rip_ = local_unnamed_addr global %G_0x22010d__rip__type zeroinitializer
@G_0x220264__rip_ = local_unnamed_addr global %G_0x220264__rip__type zeroinitializer
@G_0x220283__rip_ = local_unnamed_addr global %G_0x220283__rip__type zeroinitializer
@G_0x22038c__rip_ = local_unnamed_addr global %G_0x22038c__rip__type zeroinitializer
@G_0x2203c3__rip_ = local_unnamed_addr global %G_0x2203c3__rip__type zeroinitializer
@G_0x2203c6__rip_ = local_unnamed_addr global %G_0x2203c6__rip__type zeroinitializer
@G_0x220528__rip_ = local_unnamed_addr global %G_0x220528__rip__type zeroinitializer
@G_0x220547__rip_ = local_unnamed_addr global %G_0x220547__rip__type zeroinitializer
@G_0x220650__rip_ = local_unnamed_addr global %G_0x220650__rip__type zeroinitializer
@G_0x22067a__rip_ = local_unnamed_addr global %G_0x22067a__rip__type zeroinitializer
@G_0x22068a__rip_ = local_unnamed_addr global %G_0x22068a__rip__type zeroinitializer
@G_0x2207de__rip_ = local_unnamed_addr global %G_0x2207de__rip__type zeroinitializer
@G_0x2207fd__rip_ = local_unnamed_addr global %G_0x2207fd__rip__type zeroinitializer
@G_0x220906__rip_ = local_unnamed_addr global %G_0x220906__rip__type zeroinitializer
@G_0x220936__rip_ = local_unnamed_addr global %G_0x220936__rip__type zeroinitializer
@G_0x220940__rip_ = local_unnamed_addr global %G_0x220940__rip__type zeroinitializer
@G_0x220a9a__rip_ = local_unnamed_addr global %G_0x220a9a__rip__type zeroinitializer
@G_0x220ab9__rip_ = local_unnamed_addr global %G_0x220ab9__rip__type zeroinitializer
@G_0x220bc2__rip_ = local_unnamed_addr global %G_0x220bc2__rip__type zeroinitializer
@G_0x220bf2__rip_ = local_unnamed_addr global %G_0x220bf2__rip__type zeroinitializer
@G_0x220bfc__rip_ = local_unnamed_addr global %G_0x220bfc__rip__type zeroinitializer
@G_0x220d56__rip_ = local_unnamed_addr global %G_0x220d56__rip__type zeroinitializer
@G_0x220d75__rip_ = local_unnamed_addr global %G_0x220d75__rip__type zeroinitializer
@G_0x220e7e__rip_ = local_unnamed_addr global %G_0x220e7e__rip__type zeroinitializer
@G_0x220ead__rip_ = local_unnamed_addr global %G_0x220ead__rip__type zeroinitializer
@G_0x220eb8__rip_ = local_unnamed_addr global %G_0x220eb8__rip__type zeroinitializer
@G_0x221011__rip_ = local_unnamed_addr global %G_0x221011__rip__type zeroinitializer
@G_0x221030__rip_ = local_unnamed_addr global %G_0x221030__rip__type zeroinitializer
@G_0x221143__rip_ = local_unnamed_addr global %G_0x221143__rip__type zeroinitializer
@G_0x221175__rip_ = local_unnamed_addr global %G_0x221175__rip__type zeroinitializer
@G_0x22117d__rip_ = local_unnamed_addr global %G_0x22117d__rip__type zeroinitializer
@G_0x622080 = local_unnamed_addr global %G_0x622080_type zeroinitializer
@G_0x622088 = local_unnamed_addr global %G_0x622088_type zeroinitializer
@G_0x6220c0 = local_unnamed_addr global %G_0x6220c0_type zeroinitializer
@G__0x418be2 = global %G__0x418be2_type zeroinitializer
@G__0x418be3 = global %G__0x418be3_type zeroinitializer
@G__0x418bf3 = global %G__0x418bf3_type zeroinitializer
@G__0x418bf4 = global %G__0x418bf4_type zeroinitializer
@G__0x418c09 = global %G__0x418c09_type zeroinitializer
@G__0x418c0a = global %G__0x418c0a_type zeroinitializer
@G__0x418c24 = global %G__0x418c24_type zeroinitializer
@G__0x418c25 = global %G__0x418c25_type zeroinitializer
@G__0x418c3f = global %G__0x418c3f_type zeroinitializer
@G__0x418c40 = global %G__0x418c40_type zeroinitializer
@G__0x418c58 = global %G__0x418c58_type zeroinitializer
@G__0x418c59 = global %G__0x418c59_type zeroinitializer
@G__0x418c6e = global %G__0x418c6e_type zeroinitializer
@G__0x418c6f = global %G__0x418c6f_type zeroinitializer
@G__0x418c86 = global %G__0x418c86_type zeroinitializer
@G__0x418c87 = global %G__0x418c87_type zeroinitializer
@G__0x418ca1 = global %G__0x418ca1_type zeroinitializer
@G__0x418ca2 = global %G__0x418ca2_type zeroinitializer
@G__0x418cc0 = global %G__0x418cc0_type zeroinitializer
@G__0x418cc1 = global %G__0x418cc1_type zeroinitializer
@G__0x418cdc = global %G__0x418cdc_type zeroinitializer
@G__0x418cdd = global %G__0x418cdd_type zeroinitializer
@G__0x418d01 = global %G__0x418d01_type zeroinitializer
@G__0x418d02 = global %G__0x418d02_type zeroinitializer
@G__0x418d23 = global %G__0x418d23_type zeroinitializer
@G__0x418d24 = global %G__0x418d24_type zeroinitializer
@G__0x418d39 = global %G__0x418d39_type zeroinitializer
@G__0x418d3a = global %G__0x418d3a_type zeroinitializer
@G__0x418d4e = global %G__0x418d4e_type zeroinitializer
@G__0x418d4f = global %G__0x418d4f_type zeroinitializer
@G__0x418d64 = global %G__0x418d64_type zeroinitializer
@G__0x418d65 = global %G__0x418d65_type zeroinitializer
@G__0x418d79 = global %G__0x418d79_type zeroinitializer
@G__0x418d7a = global %G__0x418d7a_type zeroinitializer
@G__0x418d98 = global %G__0x418d98_type zeroinitializer
@G__0x418d99 = global %G__0x418d99_type zeroinitializer
@G__0x418db2 = global %G__0x418db2_type zeroinitializer
@G__0x418db3 = global %G__0x418db3_type zeroinitializer
@G__0x418dd6 = global %G__0x418dd6_type zeroinitializer
@G__0x418dd7 = global %G__0x418dd7_type zeroinitializer
@G__0x418df0 = global %G__0x418df0_type zeroinitializer
@G__0x418df1 = global %G__0x418df1_type zeroinitializer
@G__0x418e15 = global %G__0x418e15_type zeroinitializer
@G__0x418e16 = global %G__0x418e16_type zeroinitializer
@G__0x418e39 = global %G__0x418e39_type zeroinitializer
@G__0x418e3a = global %G__0x418e3a_type zeroinitializer
@G__0x418e51 = global %G__0x418e51_type zeroinitializer
@G__0x418e52 = global %G__0x418e52_type zeroinitializer
@G__0x418e73 = global %G__0x418e73_type zeroinitializer
@G__0x418e74 = global %G__0x418e74_type zeroinitializer
@G__0x418e95 = global %G__0x418e95_type zeroinitializer
@G__0x418e96 = global %G__0x418e96_type zeroinitializer
@G__0x418eb5 = global %G__0x418eb5_type zeroinitializer
@G__0x418eb6 = global %G__0x418eb6_type zeroinitializer
@G__0x418eca = global %G__0x418eca_type zeroinitializer
@G__0x418ecb = global %G__0x418ecb_type zeroinitializer
@G__0x418ee8 = global %G__0x418ee8_type zeroinitializer
@G__0x418ee9 = global %G__0x418ee9_type zeroinitializer
@G__0x418efc = global %G__0x418efc_type zeroinitializer
@G__0x418efd = global %G__0x418efd_type zeroinitializer
@G__0x418f19 = global %G__0x418f19_type zeroinitializer
@G__0x418f1a = global %G__0x418f1a_type zeroinitializer
@G__0x418f2e = global %G__0x418f2e_type zeroinitializer
@G__0x418f2f = global %G__0x418f2f_type zeroinitializer
@G__0x418f4c = global %G__0x418f4c_type zeroinitializer
@G__0x418f4d = global %G__0x418f4d_type zeroinitializer
@G__0x418f5e = global %G__0x418f5e_type zeroinitializer
@G__0x418f5f = global %G__0x418f5f_type zeroinitializer
@G__0x418f75 = global %G__0x418f75_type zeroinitializer
@G__0x418f76 = global %G__0x418f76_type zeroinitializer
@G__0x418f91 = global %G__0x418f91_type zeroinitializer
@G__0x418f92 = global %G__0x418f92_type zeroinitializer
@G__0x418fad = global %G__0x418fad_type zeroinitializer
@G__0x418fae = global %G__0x418fae_type zeroinitializer
@G__0x418fc7 = global %G__0x418fc7_type zeroinitializer
@G__0x418fc8 = global %G__0x418fc8_type zeroinitializer
@G__0x418fde = global %G__0x418fde_type zeroinitializer
@G__0x418fdf = global %G__0x418fdf_type zeroinitializer
@G__0x418ff7 = global %G__0x418ff7_type zeroinitializer
@G__0x418ff8 = global %G__0x418ff8_type zeroinitializer
@G__0x419013 = global %G__0x419013_type zeroinitializer
@G__0x419014 = global %G__0x419014_type zeroinitializer
@G__0x419033 = global %G__0x419033_type zeroinitializer
@G__0x419034 = global %G__0x419034_type zeroinitializer
@G__0x419050 = global %G__0x419050_type zeroinitializer
@G__0x419051 = global %G__0x419051_type zeroinitializer
@G__0x419076 = global %G__0x419076_type zeroinitializer
@G__0x419077 = global %G__0x419077_type zeroinitializer
@G__0x419099 = global %G__0x419099_type zeroinitializer
@G__0x41909a = global %G__0x41909a_type zeroinitializer
@G__0x4190b0 = global %G__0x4190b0_type zeroinitializer
@G__0x4190b1 = global %G__0x4190b1_type zeroinitializer
@G__0x4190c6 = global %G__0x4190c6_type zeroinitializer
@G__0x4190c7 = global %G__0x4190c7_type zeroinitializer
@G__0x4190dd = global %G__0x4190dd_type zeroinitializer
@G__0x4190de = global %G__0x4190de_type zeroinitializer
@G__0x4190f3 = global %G__0x4190f3_type zeroinitializer
@G__0x4190f4 = global %G__0x4190f4_type zeroinitializer
@G__0x419113 = global %G__0x419113_type zeroinitializer
@G__0x419114 = global %G__0x419114_type zeroinitializer
@G__0x41912e = global %G__0x41912e_type zeroinitializer
@G__0x41912f = global %G__0x41912f_type zeroinitializer
@G__0x419153 = global %G__0x419153_type zeroinitializer
@G__0x419154 = global %G__0x419154_type zeroinitializer
@G__0x41916e = global %G__0x41916e_type zeroinitializer
@G__0x41916f = global %G__0x41916f_type zeroinitializer
@G__0x419194 = global %G__0x419194_type zeroinitializer
@G__0x419195 = global %G__0x419195_type zeroinitializer
@G__0x4191b9 = global %G__0x4191b9_type zeroinitializer
@G__0x4191ba = global %G__0x4191ba_type zeroinitializer
@G__0x4191d2 = global %G__0x4191d2_type zeroinitializer
@G__0x4191d3 = global %G__0x4191d3_type zeroinitializer
@G__0x4191f5 = global %G__0x4191f5_type zeroinitializer
@G__0x4191f6 = global %G__0x4191f6_type zeroinitializer
@G__0x419218 = global %G__0x419218_type zeroinitializer
@G__0x419219 = global %G__0x419219_type zeroinitializer
@G__0x419239 = global %G__0x419239_type zeroinitializer
@G__0x41923a = global %G__0x41923a_type zeroinitializer
@G__0x41924f = global %G__0x41924f_type zeroinitializer
@G__0x419250 = global %G__0x419250_type zeroinitializer
@G__0x41926e = global %G__0x41926e_type zeroinitializer
@G__0x41926f = global %G__0x41926f_type zeroinitializer
@G__0x419283 = global %G__0x419283_type zeroinitializer
@G__0x419284 = global %G__0x419284_type zeroinitializer
@G__0x4192a1 = global %G__0x4192a1_type zeroinitializer
@G__0x4192a2 = global %G__0x4192a2_type zeroinitializer
@G__0x4192b7 = global %G__0x4192b7_type zeroinitializer
@G__0x4192b8 = global %G__0x4192b8_type zeroinitializer
@G__0x4192d6 = global %G__0x4192d6_type zeroinitializer
@G__0x4192d7 = global %G__0x4192d7_type zeroinitializer
@G__0x4192e8 = global %G__0x4192e8_type zeroinitializer
@G__0x4192e9 = global %G__0x4192e9_type zeroinitializer
@G__0x4192ff = global %G__0x4192ff_type zeroinitializer
@G__0x419300 = global %G__0x419300_type zeroinitializer
@G__0x41931b = global %G__0x41931b_type zeroinitializer
@G__0x41931c = global %G__0x41931c_type zeroinitializer
@G__0x419337 = global %G__0x419337_type zeroinitializer
@G__0x419338 = global %G__0x419338_type zeroinitializer
@G__0x419351 = global %G__0x419351_type zeroinitializer
@G__0x419352 = global %G__0x419352_type zeroinitializer
@G__0x419368 = global %G__0x419368_type zeroinitializer
@G__0x419369 = global %G__0x419369_type zeroinitializer
@G__0x419381 = global %G__0x419381_type zeroinitializer
@G__0x419382 = global %G__0x419382_type zeroinitializer
@G__0x41939d = global %G__0x41939d_type zeroinitializer
@G__0x41939e = global %G__0x41939e_type zeroinitializer
@G__0x4193bd = global %G__0x4193bd_type zeroinitializer
@G__0x4193be = global %G__0x4193be_type zeroinitializer
@G__0x4193da = global %G__0x4193da_type zeroinitializer
@G__0x4193db = global %G__0x4193db_type zeroinitializer
@G__0x419400 = global %G__0x419400_type zeroinitializer
@G__0x419401 = global %G__0x419401_type zeroinitializer
@G__0x419423 = global %G__0x419423_type zeroinitializer
@G__0x419424 = global %G__0x419424_type zeroinitializer
@G__0x41943a = global %G__0x41943a_type zeroinitializer
@G__0x41943b = global %G__0x41943b_type zeroinitializer
@G__0x419450 = global %G__0x419450_type zeroinitializer
@G__0x419451 = global %G__0x419451_type zeroinitializer
@G__0x419467 = global %G__0x419467_type zeroinitializer
@G__0x419468 = global %G__0x419468_type zeroinitializer
@G__0x41947d = global %G__0x41947d_type zeroinitializer
@G__0x41947e = global %G__0x41947e_type zeroinitializer
@G__0x41949d = global %G__0x41949d_type zeroinitializer
@G__0x41949e = global %G__0x41949e_type zeroinitializer
@G__0x4194b8 = global %G__0x4194b8_type zeroinitializer
@G__0x4194b9 = global %G__0x4194b9_type zeroinitializer
@G__0x4194dd = global %G__0x4194dd_type zeroinitializer
@G__0x4194de = global %G__0x4194de_type zeroinitializer
@G__0x4194f8 = global %G__0x4194f8_type zeroinitializer
@G__0x4194f9 = global %G__0x4194f9_type zeroinitializer
@G__0x41951e = global %G__0x41951e_type zeroinitializer
@G__0x41951f = global %G__0x41951f_type zeroinitializer
@G__0x419543 = global %G__0x419543_type zeroinitializer
@G__0x419544 = global %G__0x419544_type zeroinitializer
@G__0x41955c = global %G__0x41955c_type zeroinitializer
@G__0x41955d = global %G__0x41955d_type zeroinitializer
@G__0x41957f = global %G__0x41957f_type zeroinitializer
@G__0x419580 = global %G__0x419580_type zeroinitializer
@G__0x4195a2 = global %G__0x4195a2_type zeroinitializer
@G__0x4195a3 = global %G__0x4195a3_type zeroinitializer
@G__0x4195c3 = global %G__0x4195c3_type zeroinitializer
@G__0x4195c4 = global %G__0x4195c4_type zeroinitializer
@G__0x4195d9 = global %G__0x4195d9_type zeroinitializer
@G__0x4195da = global %G__0x4195da_type zeroinitializer
@G__0x4195f8 = global %G__0x4195f8_type zeroinitializer
@G__0x4195f9 = global %G__0x4195f9_type zeroinitializer
@G__0x41960d = global %G__0x41960d_type zeroinitializer
@G__0x41960e = global %G__0x41960e_type zeroinitializer
@G__0x41962b = global %G__0x41962b_type zeroinitializer
@G__0x41962c = global %G__0x41962c_type zeroinitializer
@G__0x419641 = global %G__0x419641_type zeroinitializer
@G__0x419642 = global %G__0x419642_type zeroinitializer
@G__0x419660 = global %G__0x419660_type zeroinitializer
@G__0x419661 = global %G__0x419661_type zeroinitializer
@G__0x419672 = global %G__0x419672_type zeroinitializer
@G__0x419673 = global %G__0x419673_type zeroinitializer
@G__0x419689 = global %G__0x419689_type zeroinitializer
@G__0x41968a = global %G__0x41968a_type zeroinitializer
@G__0x4196a5 = global %G__0x4196a5_type zeroinitializer
@G__0x4196a6 = global %G__0x4196a6_type zeroinitializer
@G__0x4196c1 = global %G__0x4196c1_type zeroinitializer
@G__0x4196c2 = global %G__0x4196c2_type zeroinitializer
@G__0x4196db = global %G__0x4196db_type zeroinitializer
@G__0x4196dc = global %G__0x4196dc_type zeroinitializer
@G__0x4196f2 = global %G__0x4196f2_type zeroinitializer
@G__0x4196f3 = global %G__0x4196f3_type zeroinitializer
@G__0x41970b = global %G__0x41970b_type zeroinitializer
@G__0x41970c = global %G__0x41970c_type zeroinitializer
@G__0x419727 = global %G__0x419727_type zeroinitializer
@G__0x419728 = global %G__0x419728_type zeroinitializer
@G__0x419747 = global %G__0x419747_type zeroinitializer
@G__0x419748 = global %G__0x419748_type zeroinitializer
@G__0x419764 = global %G__0x419764_type zeroinitializer
@G__0x419765 = global %G__0x419765_type zeroinitializer
@G__0x41978a = global %G__0x41978a_type zeroinitializer
@G__0x41978b = global %G__0x41978b_type zeroinitializer
@G__0x4197ad = global %G__0x4197ad_type zeroinitializer
@G__0x4197ae = global %G__0x4197ae_type zeroinitializer
@G__0x4197c4 = global %G__0x4197c4_type zeroinitializer
@G__0x4197c5 = global %G__0x4197c5_type zeroinitializer
@G__0x4197da = global %G__0x4197da_type zeroinitializer
@G__0x4197db = global %G__0x4197db_type zeroinitializer
@G__0x4197f1 = global %G__0x4197f1_type zeroinitializer
@G__0x4197f2 = global %G__0x4197f2_type zeroinitializer
@G__0x419807 = global %G__0x419807_type zeroinitializer
@G__0x419808 = global %G__0x419808_type zeroinitializer
@G__0x419827 = global %G__0x419827_type zeroinitializer
@G__0x419828 = global %G__0x419828_type zeroinitializer
@G__0x419842 = global %G__0x419842_type zeroinitializer
@G__0x419843 = global %G__0x419843_type zeroinitializer
@G__0x419867 = global %G__0x419867_type zeroinitializer
@G__0x419868 = global %G__0x419868_type zeroinitializer
@G__0x419882 = global %G__0x419882_type zeroinitializer
@G__0x419883 = global %G__0x419883_type zeroinitializer
@G__0x4198a8 = global %G__0x4198a8_type zeroinitializer
@G__0x4198a9 = global %G__0x4198a9_type zeroinitializer
@G__0x4198cd = global %G__0x4198cd_type zeroinitializer
@G__0x4198ce = global %G__0x4198ce_type zeroinitializer
@G__0x4198e6 = global %G__0x4198e6_type zeroinitializer
@G__0x4198e7 = global %G__0x4198e7_type zeroinitializer
@G__0x419909 = global %G__0x419909_type zeroinitializer
@G__0x41990a = global %G__0x41990a_type zeroinitializer
@G__0x41992c = global %G__0x41992c_type zeroinitializer
@G__0x41992d = global %G__0x41992d_type zeroinitializer
@G__0x41994d = global %G__0x41994d_type zeroinitializer
@G__0x41994e = global %G__0x41994e_type zeroinitializer
@G__0x419963 = global %G__0x419963_type zeroinitializer
@G__0x419964 = global %G__0x419964_type zeroinitializer
@G__0x419982 = global %G__0x419982_type zeroinitializer
@G__0x419983 = global %G__0x419983_type zeroinitializer
@G__0x419997 = global %G__0x419997_type zeroinitializer
@G__0x419998 = global %G__0x419998_type zeroinitializer
@G__0x4199b5 = global %G__0x4199b5_type zeroinitializer
@G__0x4199b6 = global %G__0x4199b6_type zeroinitializer
@G__0x4199cb = global %G__0x4199cb_type zeroinitializer
@G__0x4199cc = global %G__0x4199cc_type zeroinitializer
@G__0x4199ea = global %G__0x4199ea_type zeroinitializer
@G__0x4199f9 = global %G__0x4199f9_type zeroinitializer
@G__0x419a0d = global %G__0x419a0d_type zeroinitializer
@G__0x419a26 = global %G__0x419a26_type zeroinitializer
@G__0x419a3f = global %G__0x419a3f_type zeroinitializer
@G__0x419a56 = global %G__0x419a56_type zeroinitializer
@G__0x419a69 = global %G__0x419a69_type zeroinitializer
@G__0x419a86 = global %G__0x419a86_type zeroinitializer
@G__0x419a9e = global %G__0x419a9e_type zeroinitializer
@G__0x419ac0 = global %G__0x419ac0_type zeroinitializer
@G__0x419ad8 = global %G__0x419ad8_type zeroinitializer
@G__0x419afb = global %G__0x419afb_type zeroinitializer
@G__0x419b1d = global %G__0x419b1d_type zeroinitializer
@G__0x419b33 = global %G__0x419b33_type zeroinitializer
@G__0x419b53 = global %G__0x419b53_type zeroinitializer
@G__0x419b73 = global %G__0x419b73_type zeroinitializer
@G__0x419b91 = global %G__0x419b91_type zeroinitializer
@G__0x419ba1 = global %G__0x419ba1_type zeroinitializer
@G__0x419bb6 = global %G__0x419bb6_type zeroinitializer
@G__0x419bd0 = global %G__0x419bd0_type zeroinitializer
@G__0x419bea = global %G__0x419bea_type zeroinitializer
@G__0x419c02 = global %G__0x419c02_type zeroinitializer
@G__0x419c16 = global %G__0x419c16_type zeroinitializer
@G__0x419c34 = global %G__0x419c34_type zeroinitializer
@G__0x419c4d = global %G__0x419c4d_type zeroinitializer
@G__0x419c70 = global %G__0x419c70_type zeroinitializer
@G__0x419c89 = global %G__0x419c89_type zeroinitializer
@G__0x419cad = global %G__0x419cad_type zeroinitializer
@G__0x419cd0 = global %G__0x419cd0_type zeroinitializer
@G__0x419ce7 = global %G__0x419ce7_type zeroinitializer
@G__0x419d08 = global %G__0x419d08_type zeroinitializer
@G__0x419d29 = global %G__0x419d29_type zeroinitializer
@G__0x6220d0 = global %G__0x6220d0_type zeroinitializer
@G__0x631ad0 = global %G__0x631ad0_type zeroinitializer
@G__0x6397d0 = global %G__0x6397d0_type zeroinitializer
@G__0x6491d0 = global %G__0x6491d0_type zeroinitializer
@G__0x658bd0 = global %G__0x658bd0_type zeroinitializer
@G__0x6608d0 = global %G__0x6608d0_type zeroinitializer
@G__0x6685d0 = global %G__0x6685d0_type zeroinitializer
@G__0x66c450 = global %G__0x66c450_type zeroinitializer
@G__0x6702d0 = global %G__0x6702d0_type zeroinitializer
@G__0x672210 = global %G__0x672210_type zeroinitializer
@G__0x674150 = global %G__0x674150_type zeroinitializer

declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.ctpop.i32(i32) #0

; Function Attrs: nounwind readnone
declare double @llvm.fabs.f64(double) #0

; Function Attrs: nounwind readnone
declare double @llvm.trunc.f64(double) #0

declare extern_weak x86_64_sysvcc i64 @atof(i64)

declare extern_weak x86_64_sysvcc i64 @atoi(i64)

declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr

declare %struct.Memory* @sub_402b20._Z4fillIPaaEvT_S1_T0_(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_402b60._Z13test_constantIa10custom_twoIaEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_402c00._Z13test_constantIa20custom_add_constantsIaEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_402ca0._Z13test_constantIa20custom_sub_constantsIaEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_402d40._Z13test_constantIa25custom_multiply_constantsIaEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_402de0._Z13test_constantIa23custom_divide_constantsIaEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_402e80._Z13test_constantIa20custom_mod_constantsIaEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_402f20._Z13test_constantIa22custom_equal_constantsIaEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_402fc0._Z13test_constantIa25custom_notequal_constantsIaEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_403060._Z13test_constantIa28custom_greaterthan_constantsIaEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_403100._Z13test_constantIa25custom_lessthan_constantsIaEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4031a0._Z13test_constantIa33custom_greaterthanequal_constantsIaEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_403240._Z13test_constantIa30custom_lessthanequal_constantsIaEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4032e0._Z13test_constantIa20custom_and_constantsIaEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_403380._Z13test_constantIa19custom_or_constantsIaEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_403420._Z13test_constantIa20custom_xor_constantsIaEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4034c0._Z13test_constantIa19custom_constant_addIaEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_403560._Z13test_constantIa28custom_multiple_constant_addIaEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_403600._Z13test_constantIa19custom_constant_subIaEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4036a0._Z13test_constantIa28custom_multiple_constant_subIaEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_403740._Z13test_constantIa24custom_constant_multiplyIaEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4037e0._Z13test_constantIa33custom_multiple_constant_multiplyIaEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_403880._Z13test_constantIa34custom_multiple_constant_multiply2IaEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_403920._Z13test_constantIa22custom_constant_divideIaEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4039c0._Z13test_constantIa31custom_multiple_constant_divideIaEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_403a60._Z13test_constantIa32custom_multiple_constant_divide2IaEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_403b00._Z13test_constantIa30custom_multiple_constant_mixedIaEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_403ba0._Z13test_constantIa19custom_constant_andIaEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_403c40._Z13test_constantIa28custom_multiple_constant_andIaEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_403ce0._Z13test_constantIa18custom_constant_orIaEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_403d80._Z13test_constantIa27custom_multiple_constant_orIaEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_403e20._Z13test_constantIa19custom_constant_xorIaEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_403ec0._Z13test_constantIa28custom_multiple_constant_xorIaEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_403f60._Z4fillIPhhEvT_S1_T0_(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_403fa0._Z13test_constantIh10custom_twoIhEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_404040._Z13test_constantIh20custom_add_constantsIhEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4040e0._Z13test_constantIh20custom_sub_constantsIhEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_404180._Z13test_constantIh25custom_multiply_constantsIhEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_404220._Z13test_constantIh23custom_divide_constantsIhEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4042c0._Z13test_constantIh20custom_mod_constantsIhEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_404360._Z13test_constantIh22custom_equal_constantsIhEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_404400._Z13test_constantIh25custom_notequal_constantsIhEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4044a0._Z13test_constantIh28custom_greaterthan_constantsIhEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_404540._Z13test_constantIh25custom_lessthan_constantsIhEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4045e0._Z13test_constantIh33custom_greaterthanequal_constantsIhEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_404680._Z13test_constantIh30custom_lessthanequal_constantsIhEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_404720._Z13test_constantIh20custom_and_constantsIhEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4047c0._Z13test_constantIh19custom_or_constantsIhEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_404860._Z13test_constantIh20custom_xor_constantsIhEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_404900._Z13test_constantIh19custom_constant_addIhEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4049a0._Z13test_constantIh28custom_multiple_constant_addIhEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_404a40._Z13test_constantIh19custom_constant_subIhEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_404ae0._Z13test_constantIh28custom_multiple_constant_subIhEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_404b80._Z13test_constantIh24custom_constant_multiplyIhEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_404c20._Z13test_constantIh33custom_multiple_constant_multiplyIhEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_404cc0._Z13test_constantIh34custom_multiple_constant_multiply2IhEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_404d60._Z13test_constantIh22custom_constant_divideIhEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_404e00._Z13test_constantIh31custom_multiple_constant_divideIhEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_404ea0._Z13test_constantIh32custom_multiple_constant_divide2IhEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_404f40._Z13test_constantIh30custom_multiple_constant_mixedIhEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_404fe0._Z13test_constantIh19custom_constant_andIhEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_405080._Z13test_constantIh28custom_multiple_constant_andIhEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_405120._Z13test_constantIh18custom_constant_orIhEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4051c0._Z13test_constantIh27custom_multiple_constant_orIhEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_405260._Z13test_constantIh19custom_constant_xorIhEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_405300._Z13test_constantIh28custom_multiple_constant_xorIhEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4053a0._Z4fillIPssEvT_S1_T0_(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4053e0._Z13test_constantIs10custom_twoIsEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_405490._Z13test_constantIs20custom_add_constantsIsEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_405540._Z13test_constantIs20custom_sub_constantsIsEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4055f0._Z13test_constantIs25custom_multiply_constantsIsEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4056a0._Z13test_constantIs23custom_divide_constantsIsEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_405750._Z13test_constantIs20custom_mod_constantsIsEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_405800._Z13test_constantIs22custom_equal_constantsIsEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4058b0._Z13test_constantIs25custom_notequal_constantsIsEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_405960._Z13test_constantIs28custom_greaterthan_constantsIsEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_405a10._Z13test_constantIs25custom_lessthan_constantsIsEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_405ac0._Z13test_constantIs33custom_greaterthanequal_constantsIsEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_405b70._Z13test_constantIs30custom_lessthanequal_constantsIsEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_405c20._Z13test_constantIs20custom_and_constantsIsEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_405cd0._Z13test_constantIs19custom_or_constantsIsEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_405d80._Z13test_constantIs20custom_xor_constantsIsEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_405e30._Z13test_constantIs19custom_constant_addIsEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_405ee0._Z13test_constantIs28custom_multiple_constant_addIsEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_405f90._Z13test_constantIs19custom_constant_subIsEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_406040._Z13test_constantIs28custom_multiple_constant_subIsEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4060f0._Z13test_constantIs24custom_constant_multiplyIsEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4061a0._Z13test_constantIs33custom_multiple_constant_multiplyIsEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_406250._Z13test_constantIs34custom_multiple_constant_multiply2IsEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_406300._Z13test_constantIs22custom_constant_divideIsEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4063b0._Z13test_constantIs31custom_multiple_constant_divideIsEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_406460._Z13test_constantIs32custom_multiple_constant_divide2IsEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_406510._Z13test_constantIs30custom_multiple_constant_mixedIsEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4065c0._Z13test_constantIs19custom_constant_andIsEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_406670._Z13test_constantIs28custom_multiple_constant_andIsEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_406720._Z13test_constantIs18custom_constant_orIsEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4067d0._Z13test_constantIs27custom_multiple_constant_orIsEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_406880._Z13test_constantIs19custom_constant_xorIsEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_406930._Z13test_constantIs28custom_multiple_constant_xorIsEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4069e0._Z4fillIPttEvT_S1_T0_(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_406a20._Z13test_constantIt10custom_twoItEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_406ad0._Z13test_constantIt20custom_add_constantsItEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_406b80._Z13test_constantIt20custom_sub_constantsItEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_406c30._Z13test_constantIt25custom_multiply_constantsItEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_406ce0._Z13test_constantIt23custom_divide_constantsItEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_406d90._Z13test_constantIt20custom_mod_constantsItEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_406e40._Z13test_constantIt22custom_equal_constantsItEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_406ef0._Z13test_constantIt25custom_notequal_constantsItEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_406fa0._Z13test_constantIt28custom_greaterthan_constantsItEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_407050._Z13test_constantIt25custom_lessthan_constantsItEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_407100._Z13test_constantIt33custom_greaterthanequal_constantsItEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4071b0._Z13test_constantIt30custom_lessthanequal_constantsItEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_407260._Z13test_constantIt20custom_and_constantsItEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_407310._Z13test_constantIt19custom_or_constantsItEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4073c0._Z13test_constantIt20custom_xor_constantsItEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_407470._Z13test_constantIt19custom_constant_addItEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_407520._Z13test_constantIt28custom_multiple_constant_addItEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4075d0._Z13test_constantIt19custom_constant_subItEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_407680._Z13test_constantIt28custom_multiple_constant_subItEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_407730._Z13test_constantIt24custom_constant_multiplyItEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4077e0._Z13test_constantIt33custom_multiple_constant_multiplyItEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_407890._Z13test_constantIt34custom_multiple_constant_multiply2ItEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_407940._Z13test_constantIt22custom_constant_divideItEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4079f0._Z13test_constantIt31custom_multiple_constant_divideItEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_407aa0._Z13test_constantIt32custom_multiple_constant_divide2ItEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_407b50._Z13test_constantIt30custom_multiple_constant_mixedItEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_407c00._Z13test_constantIt19custom_constant_andItEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_407cb0._Z13test_constantIt28custom_multiple_constant_andItEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_407d60._Z13test_constantIt18custom_constant_orItEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_407e10._Z13test_constantIt27custom_multiple_constant_orItEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_407ec0._Z13test_constantIt19custom_constant_xorItEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_407f70._Z13test_constantIt28custom_multiple_constant_xorItEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_408020._Z4fillIPiiEvT_S1_T0_(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_408060._Z13test_constantIi10custom_twoIiEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_408100._Z13test_constantIi20custom_add_constantsIiEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4081a0._Z13test_constantIi20custom_sub_constantsIiEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_408240._Z13test_constantIi25custom_multiply_constantsIiEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4082e0._Z13test_constantIi23custom_divide_constantsIiEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_408380._Z13test_constantIi20custom_mod_constantsIiEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_408420._Z13test_constantIi22custom_equal_constantsIiEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4084c0._Z13test_constantIi25custom_notequal_constantsIiEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_408560._Z13test_constantIi28custom_greaterthan_constantsIiEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_408600._Z13test_constantIi25custom_lessthan_constantsIiEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4086a0._Z13test_constantIi33custom_greaterthanequal_constantsIiEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_408740._Z13test_constantIi30custom_lessthanequal_constantsIiEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4087e0._Z13test_constantIi20custom_and_constantsIiEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_408880._Z13test_constantIi19custom_or_constantsIiEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_408920._Z13test_constantIi20custom_xor_constantsIiEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4089c0._Z13test_constantIi19custom_constant_addIiEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_408a60._Z13test_constantIi28custom_multiple_constant_addIiEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_408b00._Z13test_constantIi19custom_constant_subIiEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_408ba0._Z13test_constantIi28custom_multiple_constant_subIiEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_408c40._Z13test_constantIi24custom_constant_multiplyIiEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_408ce0._Z13test_constantIi33custom_multiple_constant_multiplyIiEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_408d80._Z13test_constantIi34custom_multiple_constant_multiply2IiEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_408e20._Z13test_constantIi22custom_constant_divideIiEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_408ec0._Z13test_constantIi31custom_multiple_constant_divideIiEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_408f60._Z13test_constantIi32custom_multiple_constant_divide2IiEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_409000._Z13test_constantIi30custom_multiple_constant_mixedIiEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4090a0._Z13test_constantIi19custom_constant_andIiEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_409140._Z13test_constantIi28custom_multiple_constant_andIiEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4091e0._Z13test_constantIi18custom_constant_orIiEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_409280._Z13test_constantIi27custom_multiple_constant_orIiEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_409320._Z13test_constantIi19custom_constant_xorIiEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4093c0._Z13test_constantIi28custom_multiple_constant_xorIiEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_409460._Z4fillIPjjEvT_S1_T0_(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4094a0._Z13test_constantIj10custom_twoIjEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_409540._Z13test_constantIj20custom_add_constantsIjEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4095e0._Z13test_constantIj20custom_sub_constantsIjEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_409680._Z13test_constantIj25custom_multiply_constantsIjEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_409720._Z13test_constantIj23custom_divide_constantsIjEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4097c0._Z13test_constantIj20custom_mod_constantsIjEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_409860._Z13test_constantIj22custom_equal_constantsIjEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_409900._Z13test_constantIj25custom_notequal_constantsIjEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4099a0._Z13test_constantIj28custom_greaterthan_constantsIjEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_409a40._Z13test_constantIj25custom_lessthan_constantsIjEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_409ae0._Z13test_constantIj33custom_greaterthanequal_constantsIjEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_409b80._Z13test_constantIj30custom_lessthanequal_constantsIjEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_409c20._Z13test_constantIj20custom_and_constantsIjEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_409cc0._Z13test_constantIj19custom_or_constantsIjEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_409d60._Z13test_constantIj20custom_xor_constantsIjEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_409e00._Z13test_constantIj19custom_constant_addIjEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_409ea0._Z13test_constantIj28custom_multiple_constant_addIjEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_409f40._Z13test_constantIj19custom_constant_subIjEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_409fe0._Z13test_constantIj28custom_multiple_constant_subIjEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40a080._Z13test_constantIj24custom_constant_multiplyIjEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40a120._Z13test_constantIj33custom_multiple_constant_multiplyIjEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40a1c0._Z13test_constantIj34custom_multiple_constant_multiply2IjEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40a260._Z13test_constantIj22custom_constant_divideIjEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40a300._Z13test_constantIj31custom_multiple_constant_divideIjEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40a3a0._Z13test_constantIj32custom_multiple_constant_divide2IjEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40a440._Z13test_constantIj30custom_multiple_constant_mixedIjEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40a4e0._Z13test_constantIj19custom_constant_andIjEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40a580._Z13test_constantIj28custom_multiple_constant_andIjEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40a620._Z13test_constantIj18custom_constant_orIjEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40a6c0._Z13test_constantIj27custom_multiple_constant_orIjEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40a760._Z13test_constantIj19custom_constant_xorIjEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40a800._Z13test_constantIj28custom_multiple_constant_xorIjEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40a8a0._Z4fillIPllEvT_S1_T0_(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40a8e0._Z13test_constantIl10custom_twoIlEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40a980._Z13test_constantIl20custom_add_constantsIlEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40aa20._Z13test_constantIl20custom_sub_constantsIlEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40aac0._Z13test_constantIl25custom_multiply_constantsIlEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40ab60._Z13test_constantIl23custom_divide_constantsIlEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40ac00._Z13test_constantIl20custom_mod_constantsIlEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40aca0._Z13test_constantIl22custom_equal_constantsIlEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40ad40._Z13test_constantIl25custom_notequal_constantsIlEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40ade0._Z13test_constantIl28custom_greaterthan_constantsIlEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40ae80._Z13test_constantIl25custom_lessthan_constantsIlEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40af20._Z13test_constantIl33custom_greaterthanequal_constantsIlEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40afc0._Z13test_constantIl30custom_lessthanequal_constantsIlEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40b060._Z13test_constantIl20custom_and_constantsIlEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40b100._Z13test_constantIl19custom_or_constantsIlEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40b1a0._Z13test_constantIl20custom_xor_constantsIlEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40b240._Z13test_constantIl19custom_constant_addIlEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40b2e0._Z13test_constantIl28custom_multiple_constant_addIlEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40b380._Z13test_constantIl19custom_constant_subIlEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40b420._Z13test_constantIl28custom_multiple_constant_subIlEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40b4c0._Z13test_constantIl24custom_constant_multiplyIlEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40b560._Z13test_constantIl33custom_multiple_constant_multiplyIlEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40b600._Z13test_constantIl34custom_multiple_constant_multiply2IlEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40b6a0._Z13test_constantIl22custom_constant_divideIlEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40b740._Z13test_constantIl31custom_multiple_constant_divideIlEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40b7e0._Z13test_constantIl32custom_multiple_constant_divide2IlEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40b880._Z13test_constantIl30custom_multiple_constant_mixedIlEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40b920._Z13test_constantIl19custom_constant_andIlEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40b9c0._Z13test_constantIl28custom_multiple_constant_andIlEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40ba60._Z13test_constantIl18custom_constant_orIlEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40bb00._Z13test_constantIl27custom_multiple_constant_orIlEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40bba0._Z13test_constantIl19custom_constant_xorIlEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40bc40._Z13test_constantIl28custom_multiple_constant_xorIlEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40bce0._Z4fillIPmmEvT_S1_T0_(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40bd20._Z13test_constantIm10custom_twoImEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40bdc0._Z13test_constantIm20custom_add_constantsImEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40be60._Z13test_constantIm20custom_sub_constantsImEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40bf00._Z13test_constantIm25custom_multiply_constantsImEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40bfa0._Z13test_constantIm23custom_divide_constantsImEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40c040._Z13test_constantIm20custom_mod_constantsImEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40c0e0._Z13test_constantIm22custom_equal_constantsImEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40c180._Z13test_constantIm25custom_notequal_constantsImEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40c220._Z13test_constantIm28custom_greaterthan_constantsImEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40c2c0._Z13test_constantIm25custom_lessthan_constantsImEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40c360._Z13test_constantIm33custom_greaterthanequal_constantsImEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40c400._Z13test_constantIm30custom_lessthanequal_constantsImEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40c4a0._Z13test_constantIm20custom_and_constantsImEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40c540._Z13test_constantIm19custom_or_constantsImEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40c5e0._Z13test_constantIm20custom_xor_constantsImEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40c680._Z13test_constantIm19custom_constant_addImEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40c720._Z13test_constantIm28custom_multiple_constant_addImEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40c7c0._Z13test_constantIm19custom_constant_subImEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40c860._Z13test_constantIm28custom_multiple_constant_subImEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40c900._Z13test_constantIm24custom_constant_multiplyImEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40c9a0._Z13test_constantIm33custom_multiple_constant_multiplyImEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40ca40._Z13test_constantIm34custom_multiple_constant_multiply2ImEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40cae0._Z13test_constantIm22custom_constant_divideImEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40cb80._Z13test_constantIm31custom_multiple_constant_divideImEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40cc20._Z13test_constantIm32custom_multiple_constant_divide2ImEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40ccc0._Z13test_constantIm30custom_multiple_constant_mixedImEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40cd60._Z13test_constantIm19custom_constant_andImEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40ce00._Z13test_constantIm28custom_multiple_constant_andImEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40cea0._Z13test_constantIm18custom_constant_orImEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40cf40._Z13test_constantIm27custom_multiple_constant_orImEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40cfe0._Z13test_constantIm19custom_constant_xorImEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40d080._Z13test_constantIm28custom_multiple_constant_xorImEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40d120._Z4fillIPffEvT_S1_T0_(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40d160._Z13test_constantIf10custom_twoIfEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40d200._Z13test_constantIf20custom_add_constantsIfEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40d2a0._Z13test_constantIf20custom_sub_constantsIfEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40d340._Z13test_constantIf25custom_multiply_constantsIfEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40d3e0._Z13test_constantIf23custom_divide_constantsIfEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40d480._Z13test_constantIf19custom_constant_addIfEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40d520._Z13test_constantIf28custom_multiple_constant_addIfEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40d5c0._Z13test_constantIf19custom_constant_subIfEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40d660._Z13test_constantIf28custom_multiple_constant_subIfEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40d700._Z13test_constantIf24custom_constant_multiplyIfEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40d7a0._Z13test_constantIf33custom_multiple_constant_multiplyIfEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40d840._Z13test_constantIf34custom_multiple_constant_multiply2IfEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40d8e0._Z13test_constantIf22custom_constant_divideIfEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40d980._Z13test_constantIf31custom_multiple_constant_divideIfEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40da20._Z13test_constantIf32custom_multiple_constant_divide2IfEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40dac0._Z13test_constantIf30custom_multiple_constant_mixedIfEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40db60._Z4fillIPddEvT_S1_T0_(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40dba0._Z13test_constantId10custom_twoIdEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40dc40._Z13test_constantId20custom_add_constantsIdEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40dce0._Z13test_constantId20custom_sub_constantsIdEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40dd80._Z13test_constantId25custom_multiply_constantsIdEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40de20._Z13test_constantId23custom_divide_constantsIdEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40dec0._Z13test_constantId19custom_constant_addIdEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40df60._Z13test_constantId28custom_multiple_constant_addIdEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40e000._Z13test_constantId19custom_constant_subIdEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40e0a0._Z13test_constantId28custom_multiple_constant_subIdEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40e140._Z13test_constantId24custom_constant_multiplyIdEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40e1e0._Z13test_constantId33custom_multiple_constant_multiplyIdEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40e280._Z13test_constantId34custom_multiple_constant_multiply2IdEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40e320._Z13test_constantId22custom_constant_divideIdEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40e3c0._Z13test_constantId31custom_multiple_constant_divideIdEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40e460._Z13test_constantId32custom_multiple_constant_divide2IdEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40e500._Z13test_constantId30custom_multiple_constant_mixedIdEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

; Function Attrs: alwaysinline
define %struct.Memory* @main(%struct.State* noalias, i64, %struct.Memory* noalias) local_unnamed_addr #1 {
entry:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %PC.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP.i, align 8
  %5 = add i64 %1, 1
  store i64 %5, i64* %PC.i, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %4, i64* %9, align 8
  %RSP.i83 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10 = load i64, i64* %PC.i, align 8
  store i64 %8, i64* %RBP.i, align 8
  %11 = add i64 %7, -152
  store i64 %11, i64* %RSP.i83, align 8
  %12 = icmp ult i64 %8, 144
  %13 = zext i1 %12 to i8
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13, i8* %14, align 1
  %15 = trunc i64 %11 to i32
  %16 = and i32 %15, 255
  %17 = tail call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = xor i64 %8, 16
  %23 = xor i64 %22, %11
  %24 = lshr i64 %23, 4
  %25 = trunc i64 %24 to i8
  %26 = and i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %26, i8* %27, align 1
  %28 = icmp eq i64 %11, 0
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %29, i8* %30, align 1
  %31 = lshr i64 %11, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %8, 63
  %35 = xor i64 %31, %34
  %36 = add nuw nsw i64 %35, %34
  %37 = icmp eq i64 %36, 2
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %38, i8* %39, align 1
  %40 = add i64 %7, -12
  %41 = add i64 %10, 17
  store i64 %41, i64* %PC.i, align 8
  %42 = inttoptr i64 %40 to i32*
  store i32 0, i32* %42, align 4
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0
  %EDI.i = bitcast %union.anon* %43 to i32*
  %44 = load i64, i64* %RBP.i, align 8
  %45 = add i64 %44, -8
  %46 = load i32, i32* %EDI.i, align 4
  %47 = load i64, i64* %PC.i, align 8
  %48 = add i64 %47, 3
  store i64 %48, i64* %PC.i, align 8
  %49 = inttoptr i64 %45 to i32*
  store i32 %46, i32* %49, align 4
  %RSI.i3629 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %50 = load i64, i64* %RBP.i, align 8
  %51 = add i64 %50, -16
  %52 = load i64, i64* %RSI.i3629, align 8
  %53 = load i64, i64* %PC.i, align 8
  %54 = add i64 %53, 4
  store i64 %54, i64* %PC.i, align 8
  %55 = inttoptr i64 %51 to i64*
  store i64 %52, i64* %55, align 8
  %56 = load i64, i64* %RBP.i, align 8
  %57 = add i64 %56, -8
  %58 = load i64, i64* %PC.i, align 8
  %59 = add i64 %58, 4
  store i64 %59, i64* %PC.i, align 8
  %60 = inttoptr i64 %57 to i32*
  %61 = load i32, i32* %60, align 4
  %62 = add i32 %61, -1
  %63 = icmp eq i32 %61, 0
  %64 = zext i1 %63 to i8
  store i8 %64, i8* %14, align 1
  %65 = and i32 %62, 255
  %66 = tail call i32 @llvm.ctpop.i32(i32 %65)
  %67 = trunc i32 %66 to i8
  %68 = and i8 %67, 1
  %69 = xor i8 %68, 1
  store i8 %69, i8* %21, align 1
  %70 = xor i32 %61, %62
  %71 = lshr i32 %70, 4
  %72 = trunc i32 %71 to i8
  %73 = and i8 %72, 1
  store i8 %73, i8* %27, align 1
  %74 = icmp eq i32 %62, 0
  %75 = zext i1 %74 to i8
  store i8 %75, i8* %30, align 1
  %76 = lshr i32 %62, 31
  %77 = trunc i32 %76 to i8
  store i8 %77, i8* %33, align 1
  %78 = lshr i32 %61, 31
  %79 = xor i32 %76, %78
  %80 = add nuw nsw i32 %79, %78
  %81 = icmp eq i32 %80, 2
  %82 = zext i1 %81 to i8
  store i8 %82, i8* %39, align 1
  %83 = icmp ne i8 %77, 0
  %84 = xor i1 %83, %81
  %85 = or i1 %74, %84
  %.v = select i1 %85, i64 30, i64 10
  %86 = add i64 %58, %.v
  store i64 %86, i64* %3, align 8
  br i1 %85, label %block_.L_400ed7, label %block_400ec3

block_400ec3:                                     ; preds = %entry
  %87 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %RAX.i3650 = getelementptr inbounds %union.anon, %union.anon* %87, i64 0, i32 0
  %88 = add i64 %56, -16
  %89 = add i64 %86, 4
  store i64 %89, i64* %PC.i, align 8
  %90 = inttoptr i64 %88 to i64*
  %91 = load i64, i64* %90, align 8
  store i64 %91, i64* %RAX.i3650, align 8
  %RDI.i3648 = getelementptr inbounds %union.anon, %union.anon* %43, i64 0, i32 0
  %92 = add i64 %91, 8
  %93 = add i64 %86, 8
  store i64 %93, i64* %PC.i, align 8
  %94 = inttoptr i64 %92 to i64*
  %95 = load i64, i64* %94, align 8
  store i64 %95, i64* %RDI.i3648, align 8
  %96 = add i64 %86, -2051
  %97 = add i64 %86, 13
  %98 = load i64, i64* %6, align 8
  %99 = add i64 %98, -8
  %100 = inttoptr i64 %99 to i64*
  store i64 %97, i64* %100, align 8
  store i64 %99, i64* %6, align 8
  store i64 %96, i64* %3, align 8
  %101 = tail call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @atoi to i64), %struct.Memory* %2)
  %EAX.i3642 = bitcast %union.anon* %87 to i32*
  %102 = load i32, i32* %EAX.i3642, align 4
  %103 = load i64, i64* %PC.i, align 8
  %104 = add i64 %103, 7
  store i64 %104, i64* %PC.i, align 8
  store i32 %102, i32* bitcast (%G_0x622080_type* @G_0x622080 to i32*), align 8
  %.pre = load i64, i64* %RBP.i, align 8
  br label %block_.L_400ed7

block_.L_400ed7:                                  ; preds = %block_400ec3, %entry
  %105 = phi i64 [ %86, %entry ], [ %104, %block_400ec3 ]
  %106 = phi i64 [ %56, %entry ], [ %.pre, %block_400ec3 ]
  %MEMORY.0 = phi %struct.Memory* [ %2, %entry ], [ %101, %block_400ec3 ]
  %107 = add i64 %106, -8
  %108 = add i64 %105, 4
  store i64 %108, i64* %PC.i, align 8
  %109 = inttoptr i64 %107 to i32*
  %110 = load i32, i32* %109, align 4
  %111 = add i32 %110, -2
  %112 = icmp ult i32 %110, 2
  %113 = zext i1 %112 to i8
  store i8 %113, i8* %14, align 1
  %114 = and i32 %111, 255
  %115 = tail call i32 @llvm.ctpop.i32(i32 %114)
  %116 = trunc i32 %115 to i8
  %117 = and i8 %116, 1
  %118 = xor i8 %117, 1
  store i8 %118, i8* %21, align 1
  %119 = xor i32 %110, %111
  %120 = lshr i32 %119, 4
  %121 = trunc i32 %120 to i8
  %122 = and i8 %121, 1
  store i8 %122, i8* %27, align 1
  %123 = icmp eq i32 %111, 0
  %124 = zext i1 %123 to i8
  store i8 %124, i8* %30, align 1
  %125 = lshr i32 %111, 31
  %126 = trunc i32 %125 to i8
  store i8 %126, i8* %33, align 1
  %127 = lshr i32 %110, 31
  %128 = xor i32 %125, %127
  %129 = add nuw nsw i32 %128, %127
  %130 = icmp eq i32 %129, 2
  %131 = zext i1 %130 to i8
  store i8 %131, i8* %39, align 1
  %132 = icmp ne i8 %126, 0
  %133 = xor i1 %132, %130
  %134 = or i1 %123, %133
  %.v29 = select i1 %134, i64 32, i64 10
  %135 = add i64 %105, %.v29
  store i64 %135, i64* %3, align 8
  %.pre16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %.pre18 = getelementptr inbounds %union.anon, %union.anon* %.pre16, i64 0, i32 0
  br i1 %134, label %block_.L_400ed7.block_.L_400ef7_crit_edge, label %block_400ee1

block_.L_400ed7.block_.L_400ef7_crit_edge:        ; preds = %block_.L_400ed7
  %.pre19 = getelementptr inbounds %union.anon, %union.anon* %43, i64 0, i32 0
  br label %block_.L_400ef7

block_400ee1:                                     ; preds = %block_.L_400ed7
  %136 = add i64 %106, -16
  %137 = add i64 %135, 4
  store i64 %137, i64* %PC.i, align 8
  %138 = inttoptr i64 %136 to i64*
  %139 = load i64, i64* %138, align 8
  store i64 %139, i64* %.pre18, align 8
  %RDI.i3634 = getelementptr inbounds %union.anon, %union.anon* %43, i64 0, i32 0
  %140 = add i64 %139, 16
  %141 = add i64 %135, 8
  store i64 %141, i64* %PC.i, align 8
  %142 = inttoptr i64 %140 to i64*
  %143 = load i64, i64* %142, align 8
  store i64 %143, i64* %RDI.i3634, align 8
  %144 = add i64 %135, -2193
  %145 = add i64 %135, 13
  %146 = load i64, i64* %6, align 8
  %147 = add i64 %146, -8
  %148 = inttoptr i64 %147 to i64*
  store i64 %145, i64* %148, align 8
  store i64 %147, i64* %6, align 8
  store i64 %144, i64* %3, align 8
  %149 = tail call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @atof to i64), %struct.Memory* %MEMORY.0)
  %150 = load i64, i64* %PC.i, align 8
  %151 = add i64 %150, 9
  store i64 %151, i64* %PC.i, align 8
  %152 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 0
  %153 = load i64, i64* %152, align 1
  store i64 %153, i64* bitcast (%G_0x622088_type* @G_0x622088 to i64*), align 8
  %.pre1 = load i64, i64* %RBP.i, align 8
  br label %block_.L_400ef7

block_.L_400ef7:                                  ; preds = %block_.L_400ed7.block_.L_400ef7_crit_edge, %block_400ee1
  %RDI.i3614.pre-phi = phi i64* [ %.pre19, %block_.L_400ed7.block_.L_400ef7_crit_edge ], [ %RDI.i3634, %block_400ee1 ]
  %154 = phi i64 [ %106, %block_.L_400ed7.block_.L_400ef7_crit_edge ], [ %.pre1, %block_400ee1 ]
  %155 = phi i64 [ %135, %block_.L_400ed7.block_.L_400ef7_crit_edge ], [ %151, %block_400ee1 ]
  %MEMORY.1 = phi %struct.Memory* [ %MEMORY.0, %block_.L_400ed7.block_.L_400ef7_crit_edge ], [ %149, %block_400ee1 ]
  %.pre-phi23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0
  store i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64* %.pre18, align 8
  %RCX.i3623 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  store i64 add (i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64 64000), i64* %RCX.i3623, align 8
  store i8 zext (i1 or (i1 icmp ult (i64 add (i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64 64000), i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64)), i1 icmp ult (i64 add (i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64 64000), i64 64000)) to i8), i8* %14, align 1
  %156 = tail call i32 @llvm.ctpop.i32(i32 and (i32 trunc (i64 add (i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64 64000) to i32), i32 255))
  %157 = trunc i32 %156 to i8
  %158 = and i8 %157, 1
  %159 = xor i8 %158, 1
  store i8 %159, i8* %21, align 1
  store i8 and (i8 trunc (i64 lshr (i64 xor (i64 xor (i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64 64000), i64 add (i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64 64000)), i64 4) to i8), i8 1), i8* %27, align 1
  store i8 zext (i1 icmp eq (i64 add (i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64 64000), i64 0) to i8), i8* %30, align 1
  store i8 trunc (i64 lshr (i64 add (i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64 64000), i64 63) to i8), i8* %33, align 1
  store i8 zext (i1 icmp eq (i64 add (i64 xor (i64 lshr (i64 add (i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64 64000), i64 63), i64 lshr (i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64 63)), i64 lshr (i64 add (i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64 64000), i64 63)), i64 2) to i8), i8* %39, align 1
  %RDX.i3618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %160 = load double, double* bitcast (%G_0x221175__rip__type* @G_0x221175__rip_ to double*), align 8
  %161 = tail call double @llvm.trunc.f64(double %160)
  %162 = tail call double @llvm.fabs.f64(double %161)
  %163 = fcmp ogt double %162, 0x41DFFFFFFFC00000
  %164 = fptosi double %161 to i32
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x672210_type* @G__0x672210 to i64), i64 4294967295) to i32) to i64), i64* %RDI.i3614.pre-phi, align 8
  %165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 17, i32 0
  %R8B.i3611 = bitcast %union.anon* %165 to i8*
  %166 = trunc i32 %164 to i8
  %167 = select i1 %163, i8 0, i8 %166
  store i8 %167, i8* %R8B.i3611, align 1
  %168 = sext i8 %167 to i64
  %169 = and i64 %168, 4294967295
  store i64 %169, i64* %RDX.i3618, align 8
  store i64 and (i64 ptrtoint (%G__0x674150_type* @G__0x674150 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  %170 = add i64 %154, -24
  %171 = add i64 %155, 51
  store i64 %171, i64* %PC.i, align 8
  %172 = inttoptr i64 %170 to i64*
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x672210_type* @G__0x672210 to i64), i64 4294967295) to i32) to i64), i64* %172, align 8
  %173 = load i64, i64* %RBP.i, align 8
  %174 = add i64 %173, -32
  %175 = load i64, i64* %.pre18, align 8
  %176 = load i64, i64* %PC.i, align 8
  %177 = add i64 %176, 4
  store i64 %177, i64* %PC.i, align 8
  %178 = inttoptr i64 %174 to i64*
  store i64 %175, i64* %178, align 8
  %179 = load i64, i64* %RBP.i, align 8
  %180 = add i64 %179, -40
  %181 = load i64, i64* %RCX.i3623, align 8
  %182 = load i64, i64* %PC.i, align 8
  %183 = add i64 %182, 4
  store i64 %183, i64* %PC.i, align 8
  %184 = inttoptr i64 %180 to i64*
  store i64 %181, i64* %184, align 8
  %185 = load i64, i64* %PC.i, align 8
  %186 = add i64 %185, 7150
  %187 = add i64 %185, 5
  %188 = load i64, i64* %6, align 8
  %189 = add i64 %188, -8
  %190 = inttoptr i64 %189 to i64*
  store i64 %187, i64* %190, align 8
  store i64 %189, i64* %6, align 8
  store i64 %186, i64* %3, align 8
  %call2_400f32 = tail call %struct.Memory* @sub_402b20._Z4fillIPaaEvT_S1_T0_(%struct.State* %0, i64 %186, %struct.Memory* %MEMORY.1)
  %191 = load i64, i64* %PC.i, align 8
  %192 = load i32, i32* bitcast (%G_0x221143__rip__type* @G_0x221143__rip_ to i32*), align 8
  store i32 %192, i32* bitcast (%G_0x22117d__rip__type* @G_0x22117d__rip_ to i32*), align 8
  store i64 and (i64 ptrtoint (%G__0x418be3_type* @G__0x418be3 to i64), i64 4294967295), i64* %RDX.i3618, align 8
  %193 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0
  %R9D.i3588 = bitcast %union.anon* %193 to i32*
  %194 = getelementptr inbounds %union.anon, %union.anon* %193, i64 0, i32 0
  store i64 8000, i64* %194, align 8
  %195 = load i64, i64* %RBP.i, align 8
  %196 = add i64 %195, -24
  %197 = add i64 %191, 27
  store i64 %197, i64* %PC.i, align 8
  %198 = inttoptr i64 %196 to i64*
  %199 = load i64, i64* %198, align 8
  store i64 %199, i64* %RDI.i3614.pre-phi, align 8
  store i64 8000, i64* %RSI.i3629, align 8
  %200 = add i64 %195, -44
  %201 = add i64 %191, 34
  store i64 %201, i64* %PC.i, align 8
  %202 = inttoptr i64 %200 to i32*
  store i32 8000, i32* %202, align 4
  %203 = load i64, i64* %PC.i, align 8
  %204 = add i64 %203, 7175
  %205 = add i64 %203, 5
  %206 = load i64, i64* %6, align 8
  %207 = add i64 %206, -8
  %208 = inttoptr i64 %207 to i64*
  store i64 %205, i64* %208, align 8
  store i64 %207, i64* %6, align 8
  store i64 %204, i64* %3, align 8
  %call2_400f59 = tail call %struct.Memory* @sub_402b60._Z13test_constantIa10custom_twoIaEEvPT_iPKc(%struct.State* %0, i64 %204, %struct.Memory* %call2_400f32)
  %209 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x418bf4_type* @G__0x418bf4 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418bf4_type* @G__0x418bf4 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %210 = load i64, i64* %RBP.i, align 8
  %211 = add i64 %210, -24
  %212 = add i64 %209, 11
  store i64 %212, i64* %PC.i, align 8
  %213 = inttoptr i64 %211 to i64*
  %214 = load i64, i64* %213, align 8
  store i64 %214, i64* %RDI.i3614.pre-phi, align 8
  %215 = add i64 %210, -44
  %216 = add i64 %209, 14
  store i64 %216, i64* %PC.i, align 8
  %217 = inttoptr i64 %215 to i32*
  %218 = load i32, i32* %217, align 4
  %219 = zext i32 %218 to i64
  store i64 %219, i64* %RSI.i3629, align 8
  %220 = add i64 %209, 7330
  %221 = add i64 %209, 19
  %222 = load i64, i64* %6, align 8
  %223 = add i64 %222, -8
  %224 = inttoptr i64 %223 to i64*
  store i64 %221, i64* %224, align 8
  store i64 %223, i64* %6, align 8
  store i64 %220, i64* %3, align 8
  %call2_400f6c = tail call %struct.Memory* @sub_402c00._Z13test_constantIa20custom_add_constantsIaEEvPT_iPKc(%struct.State* %0, i64 %220, %struct.Memory* %call2_400f59)
  %225 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x418c0a_type* @G__0x418c0a to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418c0a_type* @G__0x418c0a to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %226 = load i64, i64* %RBP.i, align 8
  %227 = add i64 %226, -24
  %228 = add i64 %225, 11
  store i64 %228, i64* %PC.i, align 8
  %229 = inttoptr i64 %227 to i64*
  %230 = load i64, i64* %229, align 8
  store i64 %230, i64* %RDI.i3614.pre-phi, align 8
  %231 = add i64 %226, -44
  %232 = add i64 %225, 14
  store i64 %232, i64* %PC.i, align 8
  %233 = inttoptr i64 %231 to i32*
  %234 = load i32, i32* %233, align 4
  %235 = zext i32 %234 to i64
  store i64 %235, i64* %RSI.i3629, align 8
  %236 = add i64 %225, 7471
  %237 = add i64 %225, 19
  %238 = load i64, i64* %6, align 8
  %239 = add i64 %238, -8
  %240 = inttoptr i64 %239 to i64*
  store i64 %237, i64* %240, align 8
  store i64 %239, i64* %6, align 8
  store i64 %236, i64* %3, align 8
  %call2_400f7f = tail call %struct.Memory* @sub_402ca0._Z13test_constantIa20custom_sub_constantsIaEEvPT_iPKc(%struct.State* %0, i64 %236, %struct.Memory* %call2_400f6c)
  %241 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x418c25_type* @G__0x418c25 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418c25_type* @G__0x418c25 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %242 = load i64, i64* %RBP.i, align 8
  %243 = add i64 %242, -24
  %244 = add i64 %241, 11
  store i64 %244, i64* %PC.i, align 8
  %245 = inttoptr i64 %243 to i64*
  %246 = load i64, i64* %245, align 8
  store i64 %246, i64* %RDI.i3614.pre-phi, align 8
  %247 = add i64 %242, -44
  %248 = add i64 %241, 14
  store i64 %248, i64* %PC.i, align 8
  %249 = inttoptr i64 %247 to i32*
  %250 = load i32, i32* %249, align 4
  %251 = zext i32 %250 to i64
  store i64 %251, i64* %RSI.i3629, align 8
  %252 = add i64 %241, 7612
  %253 = add i64 %241, 19
  %254 = load i64, i64* %6, align 8
  %255 = add i64 %254, -8
  %256 = inttoptr i64 %255 to i64*
  store i64 %253, i64* %256, align 8
  store i64 %255, i64* %6, align 8
  store i64 %252, i64* %3, align 8
  %call2_400f92 = tail call %struct.Memory* @sub_402d40._Z13test_constantIa25custom_multiply_constantsIaEEvPT_iPKc(%struct.State* %0, i64 %252, %struct.Memory* %call2_400f7f)
  %257 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x418c40_type* @G__0x418c40 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418c40_type* @G__0x418c40 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %258 = load i64, i64* %RBP.i, align 8
  %259 = add i64 %258, -24
  %260 = add i64 %257, 11
  store i64 %260, i64* %PC.i, align 8
  %261 = inttoptr i64 %259 to i64*
  %262 = load i64, i64* %261, align 8
  store i64 %262, i64* %RDI.i3614.pre-phi, align 8
  %263 = add i64 %258, -44
  %264 = add i64 %257, 14
  store i64 %264, i64* %PC.i, align 8
  %265 = inttoptr i64 %263 to i32*
  %266 = load i32, i32* %265, align 4
  %267 = zext i32 %266 to i64
  store i64 %267, i64* %RSI.i3629, align 8
  %268 = add i64 %257, 7753
  %269 = add i64 %257, 19
  %270 = load i64, i64* %6, align 8
  %271 = add i64 %270, -8
  %272 = inttoptr i64 %271 to i64*
  store i64 %269, i64* %272, align 8
  store i64 %271, i64* %6, align 8
  store i64 %268, i64* %3, align 8
  %call2_400fa5 = tail call %struct.Memory* @sub_402de0._Z13test_constantIa23custom_divide_constantsIaEEvPT_iPKc(%struct.State* %0, i64 %268, %struct.Memory* %call2_400f92)
  %273 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x418c59_type* @G__0x418c59 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418c59_type* @G__0x418c59 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %274 = load i64, i64* %RBP.i, align 8
  %275 = add i64 %274, -24
  %276 = add i64 %273, 11
  store i64 %276, i64* %PC.i, align 8
  %277 = inttoptr i64 %275 to i64*
  %278 = load i64, i64* %277, align 8
  store i64 %278, i64* %RDI.i3614.pre-phi, align 8
  %279 = add i64 %274, -44
  %280 = add i64 %273, 14
  store i64 %280, i64* %PC.i, align 8
  %281 = inttoptr i64 %279 to i32*
  %282 = load i32, i32* %281, align 4
  %283 = zext i32 %282 to i64
  store i64 %283, i64* %RSI.i3629, align 8
  %284 = add i64 %273, 7894
  %285 = add i64 %273, 19
  %286 = load i64, i64* %6, align 8
  %287 = add i64 %286, -8
  %288 = inttoptr i64 %287 to i64*
  store i64 %285, i64* %288, align 8
  store i64 %287, i64* %6, align 8
  store i64 %284, i64* %3, align 8
  %call2_400fb8 = tail call %struct.Memory* @sub_402e80._Z13test_constantIa20custom_mod_constantsIaEEvPT_iPKc(%struct.State* %0, i64 %284, %struct.Memory* %call2_400fa5)
  %289 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x418c6f_type* @G__0x418c6f to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418c6f_type* @G__0x418c6f to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %290 = load i64, i64* %RBP.i, align 8
  %291 = add i64 %290, -24
  %292 = add i64 %289, 11
  store i64 %292, i64* %PC.i, align 8
  %293 = inttoptr i64 %291 to i64*
  %294 = load i64, i64* %293, align 8
  store i64 %294, i64* %RDI.i3614.pre-phi, align 8
  %295 = add i64 %290, -44
  %296 = add i64 %289, 14
  store i64 %296, i64* %PC.i, align 8
  %297 = inttoptr i64 %295 to i32*
  %298 = load i32, i32* %297, align 4
  %299 = zext i32 %298 to i64
  store i64 %299, i64* %RSI.i3629, align 8
  %300 = add i64 %289, 8035
  %301 = add i64 %289, 19
  %302 = load i64, i64* %6, align 8
  %303 = add i64 %302, -8
  %304 = inttoptr i64 %303 to i64*
  store i64 %301, i64* %304, align 8
  store i64 %303, i64* %6, align 8
  store i64 %300, i64* %3, align 8
  %call2_400fcb = tail call %struct.Memory* @sub_402f20._Z13test_constantIa22custom_equal_constantsIaEEvPT_iPKc(%struct.State* %0, i64 %300, %struct.Memory* %call2_400fb8)
  %305 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x418c87_type* @G__0x418c87 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418c87_type* @G__0x418c87 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %306 = load i64, i64* %RBP.i, align 8
  %307 = add i64 %306, -24
  %308 = add i64 %305, 11
  store i64 %308, i64* %PC.i, align 8
  %309 = inttoptr i64 %307 to i64*
  %310 = load i64, i64* %309, align 8
  store i64 %310, i64* %RDI.i3614.pre-phi, align 8
  %311 = add i64 %306, -44
  %312 = add i64 %305, 14
  store i64 %312, i64* %PC.i, align 8
  %313 = inttoptr i64 %311 to i32*
  %314 = load i32, i32* %313, align 4
  %315 = zext i32 %314 to i64
  store i64 %315, i64* %RSI.i3629, align 8
  %316 = add i64 %305, 8176
  %317 = add i64 %305, 19
  %318 = load i64, i64* %6, align 8
  %319 = add i64 %318, -8
  %320 = inttoptr i64 %319 to i64*
  store i64 %317, i64* %320, align 8
  store i64 %319, i64* %6, align 8
  store i64 %316, i64* %3, align 8
  %call2_400fde = tail call %struct.Memory* @sub_402fc0._Z13test_constantIa25custom_notequal_constantsIaEEvPT_iPKc(%struct.State* %0, i64 %316, %struct.Memory* %call2_400fcb)
  %321 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x418ca2_type* @G__0x418ca2 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418ca2_type* @G__0x418ca2 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %322 = load i64, i64* %RBP.i, align 8
  %323 = add i64 %322, -24
  %324 = add i64 %321, 11
  store i64 %324, i64* %PC.i, align 8
  %325 = inttoptr i64 %323 to i64*
  %326 = load i64, i64* %325, align 8
  store i64 %326, i64* %RDI.i3614.pre-phi, align 8
  %327 = add i64 %322, -44
  %328 = add i64 %321, 14
  store i64 %328, i64* %PC.i, align 8
  %329 = inttoptr i64 %327 to i32*
  %330 = load i32, i32* %329, align 4
  %331 = zext i32 %330 to i64
  store i64 %331, i64* %RSI.i3629, align 8
  %332 = add i64 %321, 8317
  %333 = add i64 %321, 19
  %334 = load i64, i64* %6, align 8
  %335 = add i64 %334, -8
  %336 = inttoptr i64 %335 to i64*
  store i64 %333, i64* %336, align 8
  store i64 %335, i64* %6, align 8
  store i64 %332, i64* %3, align 8
  %call2_400ff1 = tail call %struct.Memory* @sub_403060._Z13test_constantIa28custom_greaterthan_constantsIaEEvPT_iPKc(%struct.State* %0, i64 %332, %struct.Memory* %call2_400fde)
  %337 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x418cc1_type* @G__0x418cc1 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418cc1_type* @G__0x418cc1 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %338 = load i64, i64* %RBP.i, align 8
  %339 = add i64 %338, -24
  %340 = add i64 %337, 11
  store i64 %340, i64* %PC.i, align 8
  %341 = inttoptr i64 %339 to i64*
  %342 = load i64, i64* %341, align 8
  store i64 %342, i64* %RDI.i3614.pre-phi, align 8
  %343 = add i64 %338, -44
  %344 = add i64 %337, 14
  store i64 %344, i64* %PC.i, align 8
  %345 = inttoptr i64 %343 to i32*
  %346 = load i32, i32* %345, align 4
  %347 = zext i32 %346 to i64
  store i64 %347, i64* %RSI.i3629, align 8
  %348 = add i64 %337, 8458
  %349 = add i64 %337, 19
  %350 = load i64, i64* %6, align 8
  %351 = add i64 %350, -8
  %352 = inttoptr i64 %351 to i64*
  store i64 %349, i64* %352, align 8
  store i64 %351, i64* %6, align 8
  store i64 %348, i64* %3, align 8
  %call2_401004 = tail call %struct.Memory* @sub_403100._Z13test_constantIa25custom_lessthan_constantsIaEEvPT_iPKc(%struct.State* %0, i64 %348, %struct.Memory* %call2_400ff1)
  %353 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x418cdd_type* @G__0x418cdd to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418cdd_type* @G__0x418cdd to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %354 = load i64, i64* %RBP.i, align 8
  %355 = add i64 %354, -24
  %356 = add i64 %353, 11
  store i64 %356, i64* %PC.i, align 8
  %357 = inttoptr i64 %355 to i64*
  %358 = load i64, i64* %357, align 8
  store i64 %358, i64* %RDI.i3614.pre-phi, align 8
  %359 = add i64 %354, -44
  %360 = add i64 %353, 14
  store i64 %360, i64* %PC.i, align 8
  %361 = inttoptr i64 %359 to i32*
  %362 = load i32, i32* %361, align 4
  %363 = zext i32 %362 to i64
  store i64 %363, i64* %RSI.i3629, align 8
  %364 = add i64 %353, 8599
  %365 = add i64 %353, 19
  %366 = load i64, i64* %6, align 8
  %367 = add i64 %366, -8
  %368 = inttoptr i64 %367 to i64*
  store i64 %365, i64* %368, align 8
  store i64 %367, i64* %6, align 8
  store i64 %364, i64* %3, align 8
  %call2_401017 = tail call %struct.Memory* @sub_4031a0._Z13test_constantIa33custom_greaterthanequal_constantsIaEEvPT_iPKc(%struct.State* %0, i64 %364, %struct.Memory* %call2_401004)
  %369 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x418d02_type* @G__0x418d02 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418d02_type* @G__0x418d02 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %370 = load i64, i64* %RBP.i, align 8
  %371 = add i64 %370, -24
  %372 = add i64 %369, 11
  store i64 %372, i64* %PC.i, align 8
  %373 = inttoptr i64 %371 to i64*
  %374 = load i64, i64* %373, align 8
  store i64 %374, i64* %RDI.i3614.pre-phi, align 8
  %375 = add i64 %370, -44
  %376 = add i64 %369, 14
  store i64 %376, i64* %PC.i, align 8
  %377 = inttoptr i64 %375 to i32*
  %378 = load i32, i32* %377, align 4
  %379 = zext i32 %378 to i64
  store i64 %379, i64* %RSI.i3629, align 8
  %380 = add i64 %369, 8740
  %381 = add i64 %369, 19
  %382 = load i64, i64* %6, align 8
  %383 = add i64 %382, -8
  %384 = inttoptr i64 %383 to i64*
  store i64 %381, i64* %384, align 8
  store i64 %383, i64* %6, align 8
  store i64 %380, i64* %3, align 8
  %call2_40102a = tail call %struct.Memory* @sub_403240._Z13test_constantIa30custom_lessthanequal_constantsIaEEvPT_iPKc(%struct.State* %0, i64 %380, %struct.Memory* %call2_401017)
  %385 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x418d24_type* @G__0x418d24 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418d24_type* @G__0x418d24 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %386 = load i64, i64* %RBP.i, align 8
  %387 = add i64 %386, -24
  %388 = add i64 %385, 11
  store i64 %388, i64* %PC.i, align 8
  %389 = inttoptr i64 %387 to i64*
  %390 = load i64, i64* %389, align 8
  store i64 %390, i64* %RDI.i3614.pre-phi, align 8
  %391 = add i64 %386, -44
  %392 = add i64 %385, 14
  store i64 %392, i64* %PC.i, align 8
  %393 = inttoptr i64 %391 to i32*
  %394 = load i32, i32* %393, align 4
  %395 = zext i32 %394 to i64
  store i64 %395, i64* %RSI.i3629, align 8
  %396 = add i64 %385, 8881
  %397 = add i64 %385, 19
  %398 = load i64, i64* %6, align 8
  %399 = add i64 %398, -8
  %400 = inttoptr i64 %399 to i64*
  store i64 %397, i64* %400, align 8
  store i64 %399, i64* %6, align 8
  store i64 %396, i64* %3, align 8
  %call2_40103d = tail call %struct.Memory* @sub_4032e0._Z13test_constantIa20custom_and_constantsIaEEvPT_iPKc(%struct.State* %0, i64 %396, %struct.Memory* %call2_40102a)
  %401 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x418d3a_type* @G__0x418d3a to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418d3a_type* @G__0x418d3a to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %402 = load i64, i64* %RBP.i, align 8
  %403 = add i64 %402, -24
  %404 = add i64 %401, 11
  store i64 %404, i64* %PC.i, align 8
  %405 = inttoptr i64 %403 to i64*
  %406 = load i64, i64* %405, align 8
  store i64 %406, i64* %RDI.i3614.pre-phi, align 8
  %407 = add i64 %402, -44
  %408 = add i64 %401, 14
  store i64 %408, i64* %PC.i, align 8
  %409 = inttoptr i64 %407 to i32*
  %410 = load i32, i32* %409, align 4
  %411 = zext i32 %410 to i64
  store i64 %411, i64* %RSI.i3629, align 8
  %412 = add i64 %401, 9022
  %413 = add i64 %401, 19
  %414 = load i64, i64* %6, align 8
  %415 = add i64 %414, -8
  %416 = inttoptr i64 %415 to i64*
  store i64 %413, i64* %416, align 8
  store i64 %415, i64* %6, align 8
  store i64 %412, i64* %3, align 8
  %call2_401050 = tail call %struct.Memory* @sub_403380._Z13test_constantIa19custom_or_constantsIaEEvPT_iPKc(%struct.State* %0, i64 %412, %struct.Memory* %call2_40103d)
  %417 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x418d4f_type* @G__0x418d4f to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418d4f_type* @G__0x418d4f to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %418 = load i64, i64* %RBP.i, align 8
  %419 = add i64 %418, -24
  %420 = add i64 %417, 11
  store i64 %420, i64* %PC.i, align 8
  %421 = inttoptr i64 %419 to i64*
  %422 = load i64, i64* %421, align 8
  store i64 %422, i64* %RDI.i3614.pre-phi, align 8
  %423 = add i64 %418, -44
  %424 = add i64 %417, 14
  store i64 %424, i64* %PC.i, align 8
  %425 = inttoptr i64 %423 to i32*
  %426 = load i32, i32* %425, align 4
  %427 = zext i32 %426 to i64
  store i64 %427, i64* %RSI.i3629, align 8
  %428 = add i64 %417, 9163
  %429 = add i64 %417, 19
  %430 = load i64, i64* %6, align 8
  %431 = add i64 %430, -8
  %432 = inttoptr i64 %431 to i64*
  store i64 %429, i64* %432, align 8
  store i64 %431, i64* %6, align 8
  store i64 %428, i64* %3, align 8
  %call2_401063 = tail call %struct.Memory* @sub_403420._Z13test_constantIa20custom_xor_constantsIaEEvPT_iPKc(%struct.State* %0, i64 %428, %struct.Memory* %call2_401050)
  %433 = load i64, i64* %PC.i, align 8
  %434 = load i32, i32* bitcast (%G_0x221011__rip__type* @G_0x221011__rip_ to i32*), align 8
  %435 = sext i32 %434 to i64
  %436 = mul nsw i64 %435, 1717986919
  %437 = lshr i64 %436, 63
  store i64 %437, i64* %RCX.i3623, align 8
  %438 = ashr i64 %436, 34
  store i64 %438, i64* %.pre18, align 8
  %EAX.i3393 = bitcast %union.anon* %.pre16 to i32*
  %439 = trunc i64 %438 to i32
  %440 = trunc i64 %437 to i32
  %441 = add i32 %440, %439
  %442 = zext i32 %441 to i64
  store i64 %442, i64* %194, align 8
  %443 = icmp ult i32 %441, %439
  %444 = icmp ult i32 %441, %440
  %445 = or i1 %443, %444
  %446 = zext i1 %445 to i8
  store i8 %446, i8* %14, align 1
  %447 = and i32 %441, 255
  %448 = tail call i32 @llvm.ctpop.i32(i32 %447)
  %449 = trunc i32 %448 to i8
  %450 = and i8 %449, 1
  %451 = xor i8 %450, 1
  store i8 %451, i8* %21, align 1
  %452 = trunc i64 %438 to i32
  %453 = xor i32 %452, %441
  %454 = lshr i32 %453, 4
  %455 = trunc i32 %454 to i8
  %456 = and i8 %455, 1
  store i8 %456, i8* %27, align 1
  %457 = icmp eq i32 %441, 0
  %458 = zext i1 %457 to i8
  store i8 %458, i8* %30, align 1
  %459 = lshr i32 %441, 31
  %460 = trunc i32 %459 to i8
  store i8 %460, i8* %33, align 1
  %461 = lshr i64 %438, 31
  %462 = trunc i64 %461 to i32
  %463 = and i32 %462, 1
  %464 = xor i32 %459, %463
  %465 = add nuw nsw i32 %464, %459
  %466 = icmp eq i32 %465, 2
  %467 = zext i1 %466 to i8
  store i8 %467, i8* %39, align 1
  store i32 %441, i32* bitcast (%G_0x221030__rip__type* @G_0x221030__rip_ to i32*), align 8
  store i64 and (i64 ptrtoint (%G__0x418d65_type* @G__0x418d65 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418d65_type* @G__0x418d65 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %468 = load i64, i64* %RBP.i, align 8
  %469 = add i64 %468, -24
  %470 = add i64 %433, 51
  store i64 %470, i64* %PC.i, align 8
  %471 = inttoptr i64 %469 to i64*
  %472 = load i64, i64* %471, align 8
  store i64 %472, i64* %RDI.i3614.pre-phi, align 8
  %473 = add i64 %468, -44
  %474 = add i64 %433, 54
  store i64 %474, i64* %PC.i, align 8
  %475 = inttoptr i64 %473 to i32*
  %476 = load i32, i32* %475, align 4
  %477 = zext i32 %476 to i64
  store i64 %477, i64* %RSI.i3629, align 8
  %478 = add i64 %433, 9304
  %479 = add i64 %433, 59
  %480 = load i64, i64* %6, align 8
  %481 = add i64 %480, -8
  %482 = inttoptr i64 %481 to i64*
  store i64 %479, i64* %482, align 8
  store i64 %481, i64* %6, align 8
  store i64 %478, i64* %3, align 8
  %call2_40109e = tail call %struct.Memory* @sub_4034c0._Z13test_constantIa19custom_constant_addIaEEvPT_iPKc(%struct.State* %0, i64 %478, %struct.Memory* %call2_401063)
  %483 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x418d7a_type* @G__0x418d7a to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418d7a_type* @G__0x418d7a to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %484 = load i64, i64* %RBP.i, align 8
  %485 = add i64 %484, -24
  %486 = add i64 %483, 11
  store i64 %486, i64* %PC.i, align 8
  %487 = inttoptr i64 %485 to i64*
  %488 = load i64, i64* %487, align 8
  store i64 %488, i64* %RDI.i3614.pre-phi, align 8
  %489 = add i64 %484, -44
  %490 = add i64 %483, 14
  store i64 %490, i64* %PC.i, align 8
  %491 = inttoptr i64 %489 to i32*
  %492 = load i32, i32* %491, align 4
  %493 = zext i32 %492 to i64
  store i64 %493, i64* %RSI.i3629, align 8
  %494 = add i64 %483, 9405
  %495 = add i64 %483, 19
  %496 = load i64, i64* %6, align 8
  %497 = add i64 %496, -8
  %498 = inttoptr i64 %497 to i64*
  store i64 %495, i64* %498, align 8
  store i64 %497, i64* %6, align 8
  store i64 %494, i64* %3, align 8
  %call2_4010b1 = tail call %struct.Memory* @sub_403560._Z13test_constantIa28custom_multiple_constant_addIaEEvPT_iPKc(%struct.State* %0, i64 %494, %struct.Memory* %call2_40109e)
  %499 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x418d99_type* @G__0x418d99 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418d99_type* @G__0x418d99 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %500 = load i64, i64* %RBP.i, align 8
  %501 = add i64 %500, -24
  %502 = add i64 %499, 11
  store i64 %502, i64* %PC.i, align 8
  %503 = inttoptr i64 %501 to i64*
  %504 = load i64, i64* %503, align 8
  store i64 %504, i64* %RDI.i3614.pre-phi, align 8
  %505 = add i64 %500, -44
  %506 = add i64 %499, 14
  store i64 %506, i64* %PC.i, align 8
  %507 = inttoptr i64 %505 to i32*
  %508 = load i32, i32* %507, align 4
  %509 = zext i32 %508 to i64
  store i64 %509, i64* %RSI.i3629, align 8
  %510 = add i64 %499, 9546
  %511 = add i64 %499, 19
  %512 = load i64, i64* %6, align 8
  %513 = add i64 %512, -8
  %514 = inttoptr i64 %513 to i64*
  store i64 %511, i64* %514, align 8
  store i64 %513, i64* %6, align 8
  store i64 %510, i64* %3, align 8
  %call2_4010c4 = tail call %struct.Memory* @sub_403600._Z13test_constantIa19custom_constant_subIaEEvPT_iPKc(%struct.State* %0, i64 %510, %struct.Memory* %call2_4010b1)
  %515 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x418db3_type* @G__0x418db3 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418db3_type* @G__0x418db3 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %516 = load i64, i64* %RBP.i, align 8
  %517 = add i64 %516, -24
  %518 = add i64 %515, 11
  store i64 %518, i64* %PC.i, align 8
  %519 = inttoptr i64 %517 to i64*
  %520 = load i64, i64* %519, align 8
  store i64 %520, i64* %RDI.i3614.pre-phi, align 8
  %521 = add i64 %516, -44
  %522 = add i64 %515, 14
  store i64 %522, i64* %PC.i, align 8
  %523 = inttoptr i64 %521 to i32*
  %524 = load i32, i32* %523, align 4
  %525 = zext i32 %524 to i64
  store i64 %525, i64* %RSI.i3629, align 8
  %526 = add i64 %515, 9687
  %527 = add i64 %515, 19
  %528 = load i64, i64* %6, align 8
  %529 = add i64 %528, -8
  %530 = inttoptr i64 %529 to i64*
  store i64 %527, i64* %530, align 8
  store i64 %529, i64* %6, align 8
  store i64 %526, i64* %3, align 8
  %call2_4010d7 = tail call %struct.Memory* @sub_4036a0._Z13test_constantIa28custom_multiple_constant_subIaEEvPT_iPKc(%struct.State* %0, i64 %526, %struct.Memory* %call2_4010c4)
  %531 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x418dd7_type* @G__0x418dd7 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418dd7_type* @G__0x418dd7 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %532 = load i64, i64* %RBP.i, align 8
  %533 = add i64 %532, -24
  %534 = add i64 %531, 11
  store i64 %534, i64* %PC.i, align 8
  %535 = inttoptr i64 %533 to i64*
  %536 = load i64, i64* %535, align 8
  store i64 %536, i64* %RDI.i3614.pre-phi, align 8
  %537 = add i64 %532, -44
  %538 = add i64 %531, 14
  store i64 %538, i64* %PC.i, align 8
  %539 = inttoptr i64 %537 to i32*
  %540 = load i32, i32* %539, align 4
  %541 = zext i32 %540 to i64
  store i64 %541, i64* %RSI.i3629, align 8
  %542 = add i64 %531, 9828
  %543 = add i64 %531, 19
  %544 = load i64, i64* %6, align 8
  %545 = add i64 %544, -8
  %546 = inttoptr i64 %545 to i64*
  store i64 %543, i64* %546, align 8
  store i64 %545, i64* %6, align 8
  store i64 %542, i64* %3, align 8
  %call2_4010ea = tail call %struct.Memory* @sub_403740._Z13test_constantIa24custom_constant_multiplyIaEEvPT_iPKc(%struct.State* %0, i64 %542, %struct.Memory* %call2_4010d7)
  %547 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x418df1_type* @G__0x418df1 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418df1_type* @G__0x418df1 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %548 = load i64, i64* %RBP.i, align 8
  %549 = add i64 %548, -24
  %550 = add i64 %547, 11
  store i64 %550, i64* %PC.i, align 8
  %551 = inttoptr i64 %549 to i64*
  %552 = load i64, i64* %551, align 8
  store i64 %552, i64* %RDI.i3614.pre-phi, align 8
  %553 = add i64 %548, -44
  %554 = add i64 %547, 14
  store i64 %554, i64* %PC.i, align 8
  %555 = inttoptr i64 %553 to i32*
  %556 = load i32, i32* %555, align 4
  %557 = zext i32 %556 to i64
  store i64 %557, i64* %RSI.i3629, align 8
  %558 = add i64 %547, 9969
  %559 = add i64 %547, 19
  %560 = load i64, i64* %6, align 8
  %561 = add i64 %560, -8
  %562 = inttoptr i64 %561 to i64*
  store i64 %559, i64* %562, align 8
  store i64 %561, i64* %6, align 8
  store i64 %558, i64* %3, align 8
  %call2_4010fd = tail call %struct.Memory* @sub_4037e0._Z13test_constantIa33custom_multiple_constant_multiplyIaEEvPT_iPKc(%struct.State* %0, i64 %558, %struct.Memory* %call2_4010ea)
  %563 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x418e16_type* @G__0x418e16 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418e16_type* @G__0x418e16 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %564 = load i64, i64* %RBP.i, align 8
  %565 = add i64 %564, -24
  %566 = add i64 %563, 11
  store i64 %566, i64* %PC.i, align 8
  %567 = inttoptr i64 %565 to i64*
  %568 = load i64, i64* %567, align 8
  store i64 %568, i64* %RDI.i3614.pre-phi, align 8
  %569 = add i64 %564, -44
  %570 = add i64 %563, 14
  store i64 %570, i64* %PC.i, align 8
  %571 = inttoptr i64 %569 to i32*
  %572 = load i32, i32* %571, align 4
  %573 = zext i32 %572 to i64
  store i64 %573, i64* %RSI.i3629, align 8
  %574 = add i64 %563, 10110
  %575 = add i64 %563, 19
  %576 = load i64, i64* %6, align 8
  %577 = add i64 %576, -8
  %578 = inttoptr i64 %577 to i64*
  store i64 %575, i64* %578, align 8
  store i64 %577, i64* %6, align 8
  store i64 %574, i64* %3, align 8
  %call2_401110 = tail call %struct.Memory* @sub_403880._Z13test_constantIa34custom_multiple_constant_multiply2IaEEvPT_iPKc(%struct.State* %0, i64 %574, %struct.Memory* %call2_4010fd)
  %579 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x418e3a_type* @G__0x418e3a to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418e3a_type* @G__0x418e3a to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %580 = load i64, i64* %RBP.i, align 8
  %581 = add i64 %580, -24
  %582 = add i64 %579, 11
  store i64 %582, i64* %PC.i, align 8
  %583 = inttoptr i64 %581 to i64*
  %584 = load i64, i64* %583, align 8
  store i64 %584, i64* %RDI.i3614.pre-phi, align 8
  %585 = add i64 %580, -44
  %586 = add i64 %579, 14
  store i64 %586, i64* %PC.i, align 8
  %587 = inttoptr i64 %585 to i32*
  %588 = load i32, i32* %587, align 4
  %589 = zext i32 %588 to i64
  store i64 %589, i64* %RSI.i3629, align 8
  %590 = add i64 %579, 10251
  %591 = add i64 %579, 19
  %592 = load i64, i64* %6, align 8
  %593 = add i64 %592, -8
  %594 = inttoptr i64 %593 to i64*
  store i64 %591, i64* %594, align 8
  store i64 %593, i64* %6, align 8
  store i64 %590, i64* %3, align 8
  %call2_401123 = tail call %struct.Memory* @sub_403920._Z13test_constantIa22custom_constant_divideIaEEvPT_iPKc(%struct.State* %0, i64 %590, %struct.Memory* %call2_401110)
  %595 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x418e52_type* @G__0x418e52 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418e52_type* @G__0x418e52 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %596 = load i64, i64* %RBP.i, align 8
  %597 = add i64 %596, -24
  %598 = add i64 %595, 11
  store i64 %598, i64* %PC.i, align 8
  %599 = inttoptr i64 %597 to i64*
  %600 = load i64, i64* %599, align 8
  store i64 %600, i64* %RDI.i3614.pre-phi, align 8
  %601 = add i64 %596, -44
  %602 = add i64 %595, 14
  store i64 %602, i64* %PC.i, align 8
  %603 = inttoptr i64 %601 to i32*
  %604 = load i32, i32* %603, align 4
  %605 = zext i32 %604 to i64
  store i64 %605, i64* %RSI.i3629, align 8
  %606 = add i64 %595, 10392
  %607 = add i64 %595, 19
  %608 = load i64, i64* %6, align 8
  %609 = add i64 %608, -8
  %610 = inttoptr i64 %609 to i64*
  store i64 %607, i64* %610, align 8
  store i64 %609, i64* %6, align 8
  store i64 %606, i64* %3, align 8
  %call2_401136 = tail call %struct.Memory* @sub_4039c0._Z13test_constantIa31custom_multiple_constant_divideIaEEvPT_iPKc(%struct.State* %0, i64 %606, %struct.Memory* %call2_401123)
  %611 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x418e74_type* @G__0x418e74 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418e74_type* @G__0x418e74 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %612 = load i64, i64* %RBP.i, align 8
  %613 = add i64 %612, -24
  %614 = add i64 %611, 11
  store i64 %614, i64* %PC.i, align 8
  %615 = inttoptr i64 %613 to i64*
  %616 = load i64, i64* %615, align 8
  store i64 %616, i64* %RDI.i3614.pre-phi, align 8
  %617 = add i64 %612, -44
  %618 = add i64 %611, 14
  store i64 %618, i64* %PC.i, align 8
  %619 = inttoptr i64 %617 to i32*
  %620 = load i32, i32* %619, align 4
  %621 = zext i32 %620 to i64
  store i64 %621, i64* %RSI.i3629, align 8
  %622 = add i64 %611, 10533
  %623 = add i64 %611, 19
  %624 = load i64, i64* %6, align 8
  %625 = add i64 %624, -8
  %626 = inttoptr i64 %625 to i64*
  store i64 %623, i64* %626, align 8
  store i64 %625, i64* %6, align 8
  store i64 %622, i64* %3, align 8
  %call2_401149 = tail call %struct.Memory* @sub_403a60._Z13test_constantIa32custom_multiple_constant_divide2IaEEvPT_iPKc(%struct.State* %0, i64 %622, %struct.Memory* %call2_401136)
  %627 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x418e96_type* @G__0x418e96 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418e96_type* @G__0x418e96 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %628 = load i64, i64* %RBP.i, align 8
  %629 = add i64 %628, -24
  %630 = add i64 %627, 11
  store i64 %630, i64* %PC.i, align 8
  %631 = inttoptr i64 %629 to i64*
  %632 = load i64, i64* %631, align 8
  store i64 %632, i64* %RDI.i3614.pre-phi, align 8
  %633 = add i64 %628, -44
  %634 = add i64 %627, 14
  store i64 %634, i64* %PC.i, align 8
  %635 = inttoptr i64 %633 to i32*
  %636 = load i32, i32* %635, align 4
  %637 = zext i32 %636 to i64
  store i64 %637, i64* %RSI.i3629, align 8
  %638 = add i64 %627, 10674
  %639 = add i64 %627, 19
  %640 = load i64, i64* %6, align 8
  %641 = add i64 %640, -8
  %642 = inttoptr i64 %641 to i64*
  store i64 %639, i64* %642, align 8
  store i64 %641, i64* %6, align 8
  store i64 %638, i64* %3, align 8
  %call2_40115c = tail call %struct.Memory* @sub_403b00._Z13test_constantIa30custom_multiple_constant_mixedIaEEvPT_iPKc(%struct.State* %0, i64 %638, %struct.Memory* %call2_401149)
  %643 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x418eb6_type* @G__0x418eb6 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418eb6_type* @G__0x418eb6 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %644 = load i64, i64* %RBP.i, align 8
  %645 = add i64 %644, -24
  %646 = add i64 %643, 11
  store i64 %646, i64* %PC.i, align 8
  %647 = inttoptr i64 %645 to i64*
  %648 = load i64, i64* %647, align 8
  store i64 %648, i64* %RDI.i3614.pre-phi, align 8
  %649 = add i64 %644, -44
  %650 = add i64 %643, 14
  store i64 %650, i64* %PC.i, align 8
  %651 = inttoptr i64 %649 to i32*
  %652 = load i32, i32* %651, align 4
  %653 = zext i32 %652 to i64
  store i64 %653, i64* %RSI.i3629, align 8
  %654 = add i64 %643, 10815
  %655 = add i64 %643, 19
  %656 = load i64, i64* %6, align 8
  %657 = add i64 %656, -8
  %658 = inttoptr i64 %657 to i64*
  store i64 %655, i64* %658, align 8
  store i64 %657, i64* %6, align 8
  store i64 %654, i64* %3, align 8
  %call2_40116f = tail call %struct.Memory* @sub_403ba0._Z13test_constantIa19custom_constant_andIaEEvPT_iPKc(%struct.State* %0, i64 %654, %struct.Memory* %call2_40115c)
  %659 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x418ecb_type* @G__0x418ecb to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418ecb_type* @G__0x418ecb to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %660 = load i64, i64* %RBP.i, align 8
  %661 = add i64 %660, -24
  %662 = add i64 %659, 11
  store i64 %662, i64* %PC.i, align 8
  %663 = inttoptr i64 %661 to i64*
  %664 = load i64, i64* %663, align 8
  store i64 %664, i64* %RDI.i3614.pre-phi, align 8
  %665 = add i64 %660, -44
  %666 = add i64 %659, 14
  store i64 %666, i64* %PC.i, align 8
  %667 = inttoptr i64 %665 to i32*
  %668 = load i32, i32* %667, align 4
  %669 = zext i32 %668 to i64
  store i64 %669, i64* %RSI.i3629, align 8
  %670 = add i64 %659, 10956
  %671 = add i64 %659, 19
  %672 = load i64, i64* %6, align 8
  %673 = add i64 %672, -8
  %674 = inttoptr i64 %673 to i64*
  store i64 %671, i64* %674, align 8
  store i64 %673, i64* %6, align 8
  store i64 %670, i64* %3, align 8
  %call2_401182 = tail call %struct.Memory* @sub_403c40._Z13test_constantIa28custom_multiple_constant_andIaEEvPT_iPKc(%struct.State* %0, i64 %670, %struct.Memory* %call2_40116f)
  %675 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x418ee9_type* @G__0x418ee9 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418ee9_type* @G__0x418ee9 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %676 = load i64, i64* %RBP.i, align 8
  %677 = add i64 %676, -24
  %678 = add i64 %675, 11
  store i64 %678, i64* %PC.i, align 8
  %679 = inttoptr i64 %677 to i64*
  %680 = load i64, i64* %679, align 8
  store i64 %680, i64* %RDI.i3614.pre-phi, align 8
  %681 = add i64 %676, -44
  %682 = add i64 %675, 14
  store i64 %682, i64* %PC.i, align 8
  %683 = inttoptr i64 %681 to i32*
  %684 = load i32, i32* %683, align 4
  %685 = zext i32 %684 to i64
  store i64 %685, i64* %RSI.i3629, align 8
  %686 = add i64 %675, 11097
  %687 = add i64 %675, 19
  %688 = load i64, i64* %6, align 8
  %689 = add i64 %688, -8
  %690 = inttoptr i64 %689 to i64*
  store i64 %687, i64* %690, align 8
  store i64 %689, i64* %6, align 8
  store i64 %686, i64* %3, align 8
  %call2_401195 = tail call %struct.Memory* @sub_403ce0._Z13test_constantIa18custom_constant_orIaEEvPT_iPKc(%struct.State* %0, i64 %686, %struct.Memory* %call2_401182)
  %691 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x418efd_type* @G__0x418efd to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418efd_type* @G__0x418efd to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %692 = load i64, i64* %RBP.i, align 8
  %693 = add i64 %692, -24
  %694 = add i64 %691, 11
  store i64 %694, i64* %PC.i, align 8
  %695 = inttoptr i64 %693 to i64*
  %696 = load i64, i64* %695, align 8
  store i64 %696, i64* %RDI.i3614.pre-phi, align 8
  %697 = add i64 %692, -44
  %698 = add i64 %691, 14
  store i64 %698, i64* %PC.i, align 8
  %699 = inttoptr i64 %697 to i32*
  %700 = load i32, i32* %699, align 4
  %701 = zext i32 %700 to i64
  store i64 %701, i64* %RSI.i3629, align 8
  %702 = add i64 %691, 11238
  %703 = add i64 %691, 19
  %704 = load i64, i64* %6, align 8
  %705 = add i64 %704, -8
  %706 = inttoptr i64 %705 to i64*
  store i64 %703, i64* %706, align 8
  store i64 %705, i64* %6, align 8
  store i64 %702, i64* %3, align 8
  %call2_4011a8 = tail call %struct.Memory* @sub_403d80._Z13test_constantIa27custom_multiple_constant_orIaEEvPT_iPKc(%struct.State* %0, i64 %702, %struct.Memory* %call2_401195)
  %707 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x418f1a_type* @G__0x418f1a to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418f1a_type* @G__0x418f1a to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %708 = load i64, i64* %RBP.i, align 8
  %709 = add i64 %708, -24
  %710 = add i64 %707, 11
  store i64 %710, i64* %PC.i, align 8
  %711 = inttoptr i64 %709 to i64*
  %712 = load i64, i64* %711, align 8
  store i64 %712, i64* %RDI.i3614.pre-phi, align 8
  %713 = add i64 %708, -44
  %714 = add i64 %707, 14
  store i64 %714, i64* %PC.i, align 8
  %715 = inttoptr i64 %713 to i32*
  %716 = load i32, i32* %715, align 4
  %717 = zext i32 %716 to i64
  store i64 %717, i64* %RSI.i3629, align 8
  %718 = add i64 %707, 11379
  %719 = add i64 %707, 19
  %720 = load i64, i64* %6, align 8
  %721 = add i64 %720, -8
  %722 = inttoptr i64 %721 to i64*
  store i64 %719, i64* %722, align 8
  store i64 %721, i64* %6, align 8
  store i64 %718, i64* %3, align 8
  %call2_4011bb = tail call %struct.Memory* @sub_403e20._Z13test_constantIa19custom_constant_xorIaEEvPT_iPKc(%struct.State* %0, i64 %718, %struct.Memory* %call2_4011a8)
  %723 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x418f2f_type* @G__0x418f2f to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418f2f_type* @G__0x418f2f to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %724 = load i64, i64* %RBP.i, align 8
  %725 = add i64 %724, -24
  %726 = add i64 %723, 11
  store i64 %726, i64* %PC.i, align 8
  %727 = inttoptr i64 %725 to i64*
  %728 = load i64, i64* %727, align 8
  store i64 %728, i64* %RDI.i3614.pre-phi, align 8
  %729 = add i64 %724, -44
  %730 = add i64 %723, 14
  store i64 %730, i64* %PC.i, align 8
  %731 = inttoptr i64 %729 to i32*
  %732 = load i32, i32* %731, align 4
  %733 = zext i32 %732 to i64
  store i64 %733, i64* %RSI.i3629, align 8
  %734 = add i64 %723, 11520
  %735 = add i64 %723, 19
  %736 = load i64, i64* %6, align 8
  %737 = add i64 %736, -8
  %738 = inttoptr i64 %737 to i64*
  store i64 %735, i64* %738, align 8
  store i64 %737, i64* %6, align 8
  store i64 %734, i64* %3, align 8
  %call2_4011ce = tail call %struct.Memory* @sub_403ec0._Z13test_constantIa28custom_multiple_constant_xorIaEEvPT_iPKc(%struct.State* %0, i64 %734, %struct.Memory* %call2_4011bb)
  %739 = load i64, i64* %PC.i, align 8
  %740 = load double, double* bitcast (%G_0x220ead__rip__type* @G_0x220ead__rip_ to double*), align 8
  %741 = tail call double @llvm.trunc.f64(double %740)
  %742 = tail call double @llvm.fabs.f64(double %741)
  %743 = fcmp ogt double %742, 0x41DFFFFFFFC00000
  %744 = fptosi double %741 to i32
  store i64 and (i64 ptrtoint (%G__0x6702d0_type* @G__0x6702d0 to i64), i64 4294967295), i64* %194, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x6702d0_type* @G__0x6702d0 to i64), i64 4294967295) to i32) to i64), i64* %.pre18, align 8
  %745 = trunc i32 %744 to i8
  %746 = select i1 %743, i8 0, i8 %745
  %747 = zext i8 %746 to i64
  store i8 %746, i8* %R8B.i3611, align 1
  store i64 %747, i64* %RDX.i3618, align 8
  store i64 and (i64 ptrtoint (%G__0x672210_type* @G__0x672210 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x6702d0_type* @G__0x6702d0 to i64), i64 4294967295) to i32) to i64), i64* %RDI.i3614.pre-phi, align 8
  %748 = load i64, i64* %RBP.i, align 8
  %749 = add i64 %748, -56
  %750 = add i64 %739, 36
  store i64 %750, i64* %PC.i, align 8
  %751 = inttoptr i64 %749 to i64*
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x6702d0_type* @G__0x6702d0 to i64), i64 4294967295) to i32) to i64), i64* %751, align 8
  %752 = load i64, i64* %PC.i, align 8
  %753 = add i64 %752, 11625
  %754 = add i64 %752, 5
  %755 = load i64, i64* %6, align 8
  %756 = add i64 %755, -8
  %757 = inttoptr i64 %756 to i64*
  store i64 %754, i64* %757, align 8
  store i64 %756, i64* %6, align 8
  store i64 %753, i64* %3, align 8
  %call2_4011f7 = tail call %struct.Memory* @sub_403f60._Z4fillIPhhEvT_S1_T0_(%struct.State* %0, i64 %753, %struct.Memory* %call2_4011ce)
  %758 = load i64, i64* %PC.i, align 8
  %759 = load i32, i32* bitcast (%G_0x220e7e__rip__type* @G_0x220e7e__rip_ to i32*), align 8
  store i32 %759, i32* bitcast (%G_0x220eb8__rip__type* @G_0x220eb8__rip_ to i32*), align 8
  store i64 and (i64 ptrtoint (%G__0x418be2_type* @G__0x418be2 to i64), i64 4294967295), i64* %RDX.i3618, align 8
  %760 = load i64, i64* %RBP.i, align 8
  %761 = add i64 %760, -56
  %762 = add i64 %758, 21
  store i64 %762, i64* %PC.i, align 8
  %763 = inttoptr i64 %761 to i64*
  %764 = load i64, i64* %763, align 8
  store i64 %764, i64* %RDI.i3614.pre-phi, align 8
  %765 = add i64 %760, -44
  %766 = add i64 %758, 24
  store i64 %766, i64* %PC.i, align 8
  %767 = inttoptr i64 %765 to i32*
  %768 = load i32, i32* %767, align 4
  %769 = zext i32 %768 to i64
  store i64 %769, i64* %RSI.i3629, align 8
  %770 = add i64 %758, 11684
  %771 = add i64 %758, 29
  %772 = load i64, i64* %6, align 8
  %773 = add i64 %772, -8
  %774 = inttoptr i64 %773 to i64*
  store i64 %771, i64* %774, align 8
  store i64 %773, i64* %6, align 8
  store i64 %770, i64* %3, align 8
  %call2_401214 = tail call %struct.Memory* @sub_403fa0._Z13test_constantIh10custom_twoIhEEvPT_iPKc(%struct.State* %0, i64 %770, %struct.Memory* %call2_4011f7)
  %775 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x418bf3_type* @G__0x418bf3 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418bf3_type* @G__0x418bf3 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %776 = load i64, i64* %RBP.i, align 8
  %777 = add i64 %776, -56
  %778 = add i64 %775, 11
  store i64 %778, i64* %PC.i, align 8
  %779 = inttoptr i64 %777 to i64*
  %780 = load i64, i64* %779, align 8
  store i64 %780, i64* %RDI.i3614.pre-phi, align 8
  %781 = add i64 %776, -44
  %782 = add i64 %775, 14
  store i64 %782, i64* %PC.i, align 8
  %783 = inttoptr i64 %781 to i32*
  %784 = load i32, i32* %783, align 4
  %785 = zext i32 %784 to i64
  store i64 %785, i64* %RSI.i3629, align 8
  %786 = add i64 %775, 11815
  %787 = add i64 %775, 19
  %788 = load i64, i64* %6, align 8
  %789 = add i64 %788, -8
  %790 = inttoptr i64 %789 to i64*
  store i64 %787, i64* %790, align 8
  store i64 %789, i64* %6, align 8
  store i64 %786, i64* %3, align 8
  %call2_401227 = tail call %struct.Memory* @sub_404040._Z13test_constantIh20custom_add_constantsIhEEvPT_iPKc(%struct.State* %0, i64 %786, %struct.Memory* %call2_401214)
  %791 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x418c09_type* @G__0x418c09 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418c09_type* @G__0x418c09 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %792 = load i64, i64* %RBP.i, align 8
  %793 = add i64 %792, -56
  %794 = add i64 %791, 11
  store i64 %794, i64* %PC.i, align 8
  %795 = inttoptr i64 %793 to i64*
  %796 = load i64, i64* %795, align 8
  store i64 %796, i64* %RDI.i3614.pre-phi, align 8
  %797 = add i64 %792, -44
  %798 = add i64 %791, 14
  store i64 %798, i64* %PC.i, align 8
  %799 = inttoptr i64 %797 to i32*
  %800 = load i32, i32* %799, align 4
  %801 = zext i32 %800 to i64
  store i64 %801, i64* %RSI.i3629, align 8
  %802 = add i64 %791, 11956
  %803 = add i64 %791, 19
  %804 = load i64, i64* %6, align 8
  %805 = add i64 %804, -8
  %806 = inttoptr i64 %805 to i64*
  store i64 %803, i64* %806, align 8
  store i64 %805, i64* %6, align 8
  store i64 %802, i64* %3, align 8
  %call2_40123a = tail call %struct.Memory* @sub_4040e0._Z13test_constantIh20custom_sub_constantsIhEEvPT_iPKc(%struct.State* %0, i64 %802, %struct.Memory* %call2_401227)
  %807 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x418c24_type* @G__0x418c24 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418c24_type* @G__0x418c24 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %808 = load i64, i64* %RBP.i, align 8
  %809 = add i64 %808, -56
  %810 = add i64 %807, 11
  store i64 %810, i64* %PC.i, align 8
  %811 = inttoptr i64 %809 to i64*
  %812 = load i64, i64* %811, align 8
  store i64 %812, i64* %RDI.i3614.pre-phi, align 8
  %813 = add i64 %808, -44
  %814 = add i64 %807, 14
  store i64 %814, i64* %PC.i, align 8
  %815 = inttoptr i64 %813 to i32*
  %816 = load i32, i32* %815, align 4
  %817 = zext i32 %816 to i64
  store i64 %817, i64* %RSI.i3629, align 8
  %818 = add i64 %807, 12097
  %819 = add i64 %807, 19
  %820 = load i64, i64* %6, align 8
  %821 = add i64 %820, -8
  %822 = inttoptr i64 %821 to i64*
  store i64 %819, i64* %822, align 8
  store i64 %821, i64* %6, align 8
  store i64 %818, i64* %3, align 8
  %call2_40124d = tail call %struct.Memory* @sub_404180._Z13test_constantIh25custom_multiply_constantsIhEEvPT_iPKc(%struct.State* %0, i64 %818, %struct.Memory* %call2_40123a)
  %823 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x418c3f_type* @G__0x418c3f to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418c3f_type* @G__0x418c3f to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %824 = load i64, i64* %RBP.i, align 8
  %825 = add i64 %824, -56
  %826 = add i64 %823, 11
  store i64 %826, i64* %PC.i, align 8
  %827 = inttoptr i64 %825 to i64*
  %828 = load i64, i64* %827, align 8
  store i64 %828, i64* %RDI.i3614.pre-phi, align 8
  %829 = add i64 %824, -44
  %830 = add i64 %823, 14
  store i64 %830, i64* %PC.i, align 8
  %831 = inttoptr i64 %829 to i32*
  %832 = load i32, i32* %831, align 4
  %833 = zext i32 %832 to i64
  store i64 %833, i64* %RSI.i3629, align 8
  %834 = add i64 %823, 12238
  %835 = add i64 %823, 19
  %836 = load i64, i64* %6, align 8
  %837 = add i64 %836, -8
  %838 = inttoptr i64 %837 to i64*
  store i64 %835, i64* %838, align 8
  store i64 %837, i64* %6, align 8
  store i64 %834, i64* %3, align 8
  %call2_401260 = tail call %struct.Memory* @sub_404220._Z13test_constantIh23custom_divide_constantsIhEEvPT_iPKc(%struct.State* %0, i64 %834, %struct.Memory* %call2_40124d)
  %839 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x418c58_type* @G__0x418c58 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418c58_type* @G__0x418c58 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %840 = load i64, i64* %RBP.i, align 8
  %841 = add i64 %840, -56
  %842 = add i64 %839, 11
  store i64 %842, i64* %PC.i, align 8
  %843 = inttoptr i64 %841 to i64*
  %844 = load i64, i64* %843, align 8
  store i64 %844, i64* %RDI.i3614.pre-phi, align 8
  %845 = add i64 %840, -44
  %846 = add i64 %839, 14
  store i64 %846, i64* %PC.i, align 8
  %847 = inttoptr i64 %845 to i32*
  %848 = load i32, i32* %847, align 4
  %849 = zext i32 %848 to i64
  store i64 %849, i64* %RSI.i3629, align 8
  %850 = add i64 %839, 12379
  %851 = add i64 %839, 19
  %852 = load i64, i64* %6, align 8
  %853 = add i64 %852, -8
  %854 = inttoptr i64 %853 to i64*
  store i64 %851, i64* %854, align 8
  store i64 %853, i64* %6, align 8
  store i64 %850, i64* %3, align 8
  %call2_401273 = tail call %struct.Memory* @sub_4042c0._Z13test_constantIh20custom_mod_constantsIhEEvPT_iPKc(%struct.State* %0, i64 %850, %struct.Memory* %call2_401260)
  %855 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x418c6e_type* @G__0x418c6e to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418c6e_type* @G__0x418c6e to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %856 = load i64, i64* %RBP.i, align 8
  %857 = add i64 %856, -56
  %858 = add i64 %855, 11
  store i64 %858, i64* %PC.i, align 8
  %859 = inttoptr i64 %857 to i64*
  %860 = load i64, i64* %859, align 8
  store i64 %860, i64* %RDI.i3614.pre-phi, align 8
  %861 = add i64 %856, -44
  %862 = add i64 %855, 14
  store i64 %862, i64* %PC.i, align 8
  %863 = inttoptr i64 %861 to i32*
  %864 = load i32, i32* %863, align 4
  %865 = zext i32 %864 to i64
  store i64 %865, i64* %RSI.i3629, align 8
  %866 = add i64 %855, 12520
  %867 = add i64 %855, 19
  %868 = load i64, i64* %6, align 8
  %869 = add i64 %868, -8
  %870 = inttoptr i64 %869 to i64*
  store i64 %867, i64* %870, align 8
  store i64 %869, i64* %6, align 8
  store i64 %866, i64* %3, align 8
  %call2_401286 = tail call %struct.Memory* @sub_404360._Z13test_constantIh22custom_equal_constantsIhEEvPT_iPKc(%struct.State* %0, i64 %866, %struct.Memory* %call2_401273)
  %871 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x418c86_type* @G__0x418c86 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418c86_type* @G__0x418c86 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %872 = load i64, i64* %RBP.i, align 8
  %873 = add i64 %872, -56
  %874 = add i64 %871, 11
  store i64 %874, i64* %PC.i, align 8
  %875 = inttoptr i64 %873 to i64*
  %876 = load i64, i64* %875, align 8
  store i64 %876, i64* %RDI.i3614.pre-phi, align 8
  %877 = add i64 %872, -44
  %878 = add i64 %871, 14
  store i64 %878, i64* %PC.i, align 8
  %879 = inttoptr i64 %877 to i32*
  %880 = load i32, i32* %879, align 4
  %881 = zext i32 %880 to i64
  store i64 %881, i64* %RSI.i3629, align 8
  %882 = add i64 %871, 12661
  %883 = add i64 %871, 19
  %884 = load i64, i64* %6, align 8
  %885 = add i64 %884, -8
  %886 = inttoptr i64 %885 to i64*
  store i64 %883, i64* %886, align 8
  store i64 %885, i64* %6, align 8
  store i64 %882, i64* %3, align 8
  %call2_401299 = tail call %struct.Memory* @sub_404400._Z13test_constantIh25custom_notequal_constantsIhEEvPT_iPKc(%struct.State* %0, i64 %882, %struct.Memory* %call2_401286)
  %887 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x418ca1_type* @G__0x418ca1 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418ca1_type* @G__0x418ca1 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %888 = load i64, i64* %RBP.i, align 8
  %889 = add i64 %888, -56
  %890 = add i64 %887, 11
  store i64 %890, i64* %PC.i, align 8
  %891 = inttoptr i64 %889 to i64*
  %892 = load i64, i64* %891, align 8
  store i64 %892, i64* %RDI.i3614.pre-phi, align 8
  %893 = add i64 %888, -44
  %894 = add i64 %887, 14
  store i64 %894, i64* %PC.i, align 8
  %895 = inttoptr i64 %893 to i32*
  %896 = load i32, i32* %895, align 4
  %897 = zext i32 %896 to i64
  store i64 %897, i64* %RSI.i3629, align 8
  %898 = add i64 %887, 12802
  %899 = add i64 %887, 19
  %900 = load i64, i64* %6, align 8
  %901 = add i64 %900, -8
  %902 = inttoptr i64 %901 to i64*
  store i64 %899, i64* %902, align 8
  store i64 %901, i64* %6, align 8
  store i64 %898, i64* %3, align 8
  %call2_4012ac = tail call %struct.Memory* @sub_4044a0._Z13test_constantIh28custom_greaterthan_constantsIhEEvPT_iPKc(%struct.State* %0, i64 %898, %struct.Memory* %call2_401299)
  %903 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x418cc0_type* @G__0x418cc0 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418cc0_type* @G__0x418cc0 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %904 = load i64, i64* %RBP.i, align 8
  %905 = add i64 %904, -56
  %906 = add i64 %903, 11
  store i64 %906, i64* %PC.i, align 8
  %907 = inttoptr i64 %905 to i64*
  %908 = load i64, i64* %907, align 8
  store i64 %908, i64* %RDI.i3614.pre-phi, align 8
  %909 = add i64 %904, -44
  %910 = add i64 %903, 14
  store i64 %910, i64* %PC.i, align 8
  %911 = inttoptr i64 %909 to i32*
  %912 = load i32, i32* %911, align 4
  %913 = zext i32 %912 to i64
  store i64 %913, i64* %RSI.i3629, align 8
  %914 = add i64 %903, 12943
  %915 = add i64 %903, 19
  %916 = load i64, i64* %6, align 8
  %917 = add i64 %916, -8
  %918 = inttoptr i64 %917 to i64*
  store i64 %915, i64* %918, align 8
  store i64 %917, i64* %6, align 8
  store i64 %914, i64* %3, align 8
  %call2_4012bf = tail call %struct.Memory* @sub_404540._Z13test_constantIh25custom_lessthan_constantsIhEEvPT_iPKc(%struct.State* %0, i64 %914, %struct.Memory* %call2_4012ac)
  %919 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x418cdc_type* @G__0x418cdc to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418cdc_type* @G__0x418cdc to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %920 = load i64, i64* %RBP.i, align 8
  %921 = add i64 %920, -56
  %922 = add i64 %919, 11
  store i64 %922, i64* %PC.i, align 8
  %923 = inttoptr i64 %921 to i64*
  %924 = load i64, i64* %923, align 8
  store i64 %924, i64* %RDI.i3614.pre-phi, align 8
  %925 = add i64 %920, -44
  %926 = add i64 %919, 14
  store i64 %926, i64* %PC.i, align 8
  %927 = inttoptr i64 %925 to i32*
  %928 = load i32, i32* %927, align 4
  %929 = zext i32 %928 to i64
  store i64 %929, i64* %RSI.i3629, align 8
  %930 = add i64 %919, 13084
  %931 = add i64 %919, 19
  %932 = load i64, i64* %6, align 8
  %933 = add i64 %932, -8
  %934 = inttoptr i64 %933 to i64*
  store i64 %931, i64* %934, align 8
  store i64 %933, i64* %6, align 8
  store i64 %930, i64* %3, align 8
  %call2_4012d2 = tail call %struct.Memory* @sub_4045e0._Z13test_constantIh33custom_greaterthanequal_constantsIhEEvPT_iPKc(%struct.State* %0, i64 %930, %struct.Memory* %call2_4012bf)
  %935 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x418d01_type* @G__0x418d01 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418d01_type* @G__0x418d01 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %936 = load i64, i64* %RBP.i, align 8
  %937 = add i64 %936, -56
  %938 = add i64 %935, 11
  store i64 %938, i64* %PC.i, align 8
  %939 = inttoptr i64 %937 to i64*
  %940 = load i64, i64* %939, align 8
  store i64 %940, i64* %RDI.i3614.pre-phi, align 8
  %941 = add i64 %936, -44
  %942 = add i64 %935, 14
  store i64 %942, i64* %PC.i, align 8
  %943 = inttoptr i64 %941 to i32*
  %944 = load i32, i32* %943, align 4
  %945 = zext i32 %944 to i64
  store i64 %945, i64* %RSI.i3629, align 8
  %946 = add i64 %935, 13225
  %947 = add i64 %935, 19
  %948 = load i64, i64* %6, align 8
  %949 = add i64 %948, -8
  %950 = inttoptr i64 %949 to i64*
  store i64 %947, i64* %950, align 8
  store i64 %949, i64* %6, align 8
  store i64 %946, i64* %3, align 8
  %call2_4012e5 = tail call %struct.Memory* @sub_404680._Z13test_constantIh30custom_lessthanequal_constantsIhEEvPT_iPKc(%struct.State* %0, i64 %946, %struct.Memory* %call2_4012d2)
  %951 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x418d23_type* @G__0x418d23 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418d23_type* @G__0x418d23 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %952 = load i64, i64* %RBP.i, align 8
  %953 = add i64 %952, -56
  %954 = add i64 %951, 11
  store i64 %954, i64* %PC.i, align 8
  %955 = inttoptr i64 %953 to i64*
  %956 = load i64, i64* %955, align 8
  store i64 %956, i64* %RDI.i3614.pre-phi, align 8
  %957 = add i64 %952, -44
  %958 = add i64 %951, 14
  store i64 %958, i64* %PC.i, align 8
  %959 = inttoptr i64 %957 to i32*
  %960 = load i32, i32* %959, align 4
  %961 = zext i32 %960 to i64
  store i64 %961, i64* %RSI.i3629, align 8
  %962 = add i64 %951, 13366
  %963 = add i64 %951, 19
  %964 = load i64, i64* %6, align 8
  %965 = add i64 %964, -8
  %966 = inttoptr i64 %965 to i64*
  store i64 %963, i64* %966, align 8
  store i64 %965, i64* %6, align 8
  store i64 %962, i64* %3, align 8
  %call2_4012f8 = tail call %struct.Memory* @sub_404720._Z13test_constantIh20custom_and_constantsIhEEvPT_iPKc(%struct.State* %0, i64 %962, %struct.Memory* %call2_4012e5)
  %967 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x418d39_type* @G__0x418d39 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418d39_type* @G__0x418d39 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %968 = load i64, i64* %RBP.i, align 8
  %969 = add i64 %968, -56
  %970 = add i64 %967, 11
  store i64 %970, i64* %PC.i, align 8
  %971 = inttoptr i64 %969 to i64*
  %972 = load i64, i64* %971, align 8
  store i64 %972, i64* %RDI.i3614.pre-phi, align 8
  %973 = add i64 %968, -44
  %974 = add i64 %967, 14
  store i64 %974, i64* %PC.i, align 8
  %975 = inttoptr i64 %973 to i32*
  %976 = load i32, i32* %975, align 4
  %977 = zext i32 %976 to i64
  store i64 %977, i64* %RSI.i3629, align 8
  %978 = add i64 %967, 13507
  %979 = add i64 %967, 19
  %980 = load i64, i64* %6, align 8
  %981 = add i64 %980, -8
  %982 = inttoptr i64 %981 to i64*
  store i64 %979, i64* %982, align 8
  store i64 %981, i64* %6, align 8
  store i64 %978, i64* %3, align 8
  %call2_40130b = tail call %struct.Memory* @sub_4047c0._Z13test_constantIh19custom_or_constantsIhEEvPT_iPKc(%struct.State* %0, i64 %978, %struct.Memory* %call2_4012f8)
  %983 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x418d4e_type* @G__0x418d4e to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418d4e_type* @G__0x418d4e to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %984 = load i64, i64* %RBP.i, align 8
  %985 = add i64 %984, -56
  %986 = add i64 %983, 11
  store i64 %986, i64* %PC.i, align 8
  %987 = inttoptr i64 %985 to i64*
  %988 = load i64, i64* %987, align 8
  store i64 %988, i64* %RDI.i3614.pre-phi, align 8
  %989 = add i64 %984, -44
  %990 = add i64 %983, 14
  store i64 %990, i64* %PC.i, align 8
  %991 = inttoptr i64 %989 to i32*
  %992 = load i32, i32* %991, align 4
  %993 = zext i32 %992 to i64
  store i64 %993, i64* %RSI.i3629, align 8
  %994 = add i64 %983, 13648
  %995 = add i64 %983, 19
  %996 = load i64, i64* %6, align 8
  %997 = add i64 %996, -8
  %998 = inttoptr i64 %997 to i64*
  store i64 %995, i64* %998, align 8
  store i64 %997, i64* %6, align 8
  store i64 %994, i64* %3, align 8
  %call2_40131e = tail call %struct.Memory* @sub_404860._Z13test_constantIh20custom_xor_constantsIhEEvPT_iPKc(%struct.State* %0, i64 %994, %struct.Memory* %call2_40130b)
  %999 = load i64, i64* %PC.i, align 8
  %1000 = load i32, i32* bitcast (%G_0x220d56__rip__type* @G_0x220d56__rip_ to i32*), align 8
  %1001 = sext i32 %1000 to i64
  %1002 = mul nsw i64 %1001, 1717986919
  %1003 = lshr i64 %1002, 63
  store i64 %1003, i64* %RCX.i3623, align 8
  %1004 = ashr i64 %1002, 34
  store i64 %1004, i64* %.pre18, align 8
  %1005 = trunc i64 %1004 to i32
  %1006 = trunc i64 %1003 to i32
  %1007 = add i32 %1006, %1005
  %1008 = zext i32 %1007 to i64
  store i64 %1008, i64* %194, align 8
  %1009 = icmp ult i32 %1007, %1005
  %1010 = icmp ult i32 %1007, %1006
  %1011 = or i1 %1009, %1010
  %1012 = zext i1 %1011 to i8
  store i8 %1012, i8* %14, align 1
  %1013 = and i32 %1007, 255
  %1014 = tail call i32 @llvm.ctpop.i32(i32 %1013)
  %1015 = trunc i32 %1014 to i8
  %1016 = and i8 %1015, 1
  %1017 = xor i8 %1016, 1
  store i8 %1017, i8* %21, align 1
  %1018 = trunc i64 %1004 to i32
  %1019 = xor i32 %1018, %1007
  %1020 = lshr i32 %1019, 4
  %1021 = trunc i32 %1020 to i8
  %1022 = and i8 %1021, 1
  store i8 %1022, i8* %27, align 1
  %1023 = icmp eq i32 %1007, 0
  %1024 = zext i1 %1023 to i8
  store i8 %1024, i8* %30, align 1
  %1025 = lshr i32 %1007, 31
  %1026 = trunc i32 %1025 to i8
  store i8 %1026, i8* %33, align 1
  %1027 = lshr i64 %1004, 31
  %1028 = trunc i64 %1027 to i32
  %1029 = and i32 %1028, 1
  %1030 = xor i32 %1025, %1029
  %1031 = add nuw nsw i32 %1030, %1025
  %1032 = icmp eq i32 %1031, 2
  %1033 = zext i1 %1032 to i8
  store i8 %1033, i8* %39, align 1
  store i32 %1007, i32* bitcast (%G_0x220d75__rip__type* @G_0x220d75__rip_ to i32*), align 8
  store i64 and (i64 ptrtoint (%G__0x418d64_type* @G__0x418d64 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418d64_type* @G__0x418d64 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %1034 = load i64, i64* %RBP.i, align 8
  %1035 = add i64 %1034, -56
  %1036 = add i64 %999, 51
  store i64 %1036, i64* %PC.i, align 8
  %1037 = inttoptr i64 %1035 to i64*
  %1038 = load i64, i64* %1037, align 8
  store i64 %1038, i64* %RDI.i3614.pre-phi, align 8
  %1039 = add i64 %1034, -44
  %1040 = add i64 %999, 54
  store i64 %1040, i64* %PC.i, align 8
  %1041 = inttoptr i64 %1039 to i32*
  %1042 = load i32, i32* %1041, align 4
  %1043 = zext i32 %1042 to i64
  store i64 %1043, i64* %RSI.i3629, align 8
  %1044 = add i64 %999, 13789
  %1045 = add i64 %999, 59
  %1046 = load i64, i64* %6, align 8
  %1047 = add i64 %1046, -8
  %1048 = inttoptr i64 %1047 to i64*
  store i64 %1045, i64* %1048, align 8
  store i64 %1047, i64* %6, align 8
  store i64 %1044, i64* %3, align 8
  %call2_401359 = tail call %struct.Memory* @sub_404900._Z13test_constantIh19custom_constant_addIhEEvPT_iPKc(%struct.State* %0, i64 %1044, %struct.Memory* %call2_40131e)
  %1049 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x418d79_type* @G__0x418d79 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418d79_type* @G__0x418d79 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %1050 = load i64, i64* %RBP.i, align 8
  %1051 = add i64 %1050, -56
  %1052 = add i64 %1049, 11
  store i64 %1052, i64* %PC.i, align 8
  %1053 = inttoptr i64 %1051 to i64*
  %1054 = load i64, i64* %1053, align 8
  store i64 %1054, i64* %RDI.i3614.pre-phi, align 8
  %1055 = add i64 %1050, -44
  %1056 = add i64 %1049, 14
  store i64 %1056, i64* %PC.i, align 8
  %1057 = inttoptr i64 %1055 to i32*
  %1058 = load i32, i32* %1057, align 4
  %1059 = zext i32 %1058 to i64
  store i64 %1059, i64* %RSI.i3629, align 8
  %1060 = add i64 %1049, 13890
  %1061 = add i64 %1049, 19
  %1062 = load i64, i64* %6, align 8
  %1063 = add i64 %1062, -8
  %1064 = inttoptr i64 %1063 to i64*
  store i64 %1061, i64* %1064, align 8
  store i64 %1063, i64* %6, align 8
  store i64 %1060, i64* %3, align 8
  %call2_40136c = tail call %struct.Memory* @sub_4049a0._Z13test_constantIh28custom_multiple_constant_addIhEEvPT_iPKc(%struct.State* %0, i64 %1060, %struct.Memory* %call2_401359)
  %1065 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x418d98_type* @G__0x418d98 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418d98_type* @G__0x418d98 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %1066 = load i64, i64* %RBP.i, align 8
  %1067 = add i64 %1066, -56
  %1068 = add i64 %1065, 11
  store i64 %1068, i64* %PC.i, align 8
  %1069 = inttoptr i64 %1067 to i64*
  %1070 = load i64, i64* %1069, align 8
  store i64 %1070, i64* %RDI.i3614.pre-phi, align 8
  %1071 = add i64 %1066, -44
  %1072 = add i64 %1065, 14
  store i64 %1072, i64* %PC.i, align 8
  %1073 = inttoptr i64 %1071 to i32*
  %1074 = load i32, i32* %1073, align 4
  %1075 = zext i32 %1074 to i64
  store i64 %1075, i64* %RSI.i3629, align 8
  %1076 = add i64 %1065, 14031
  %1077 = add i64 %1065, 19
  %1078 = load i64, i64* %6, align 8
  %1079 = add i64 %1078, -8
  %1080 = inttoptr i64 %1079 to i64*
  store i64 %1077, i64* %1080, align 8
  store i64 %1079, i64* %6, align 8
  store i64 %1076, i64* %3, align 8
  %call2_40137f = tail call %struct.Memory* @sub_404a40._Z13test_constantIh19custom_constant_subIhEEvPT_iPKc(%struct.State* %0, i64 %1076, %struct.Memory* %call2_40136c)
  %1081 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x418db2_type* @G__0x418db2 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418db2_type* @G__0x418db2 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %1082 = load i64, i64* %RBP.i, align 8
  %1083 = add i64 %1082, -56
  %1084 = add i64 %1081, 11
  store i64 %1084, i64* %PC.i, align 8
  %1085 = inttoptr i64 %1083 to i64*
  %1086 = load i64, i64* %1085, align 8
  store i64 %1086, i64* %RDI.i3614.pre-phi, align 8
  %1087 = add i64 %1082, -44
  %1088 = add i64 %1081, 14
  store i64 %1088, i64* %PC.i, align 8
  %1089 = inttoptr i64 %1087 to i32*
  %1090 = load i32, i32* %1089, align 4
  %1091 = zext i32 %1090 to i64
  store i64 %1091, i64* %RSI.i3629, align 8
  %1092 = add i64 %1081, 14172
  %1093 = add i64 %1081, 19
  %1094 = load i64, i64* %6, align 8
  %1095 = add i64 %1094, -8
  %1096 = inttoptr i64 %1095 to i64*
  store i64 %1093, i64* %1096, align 8
  store i64 %1095, i64* %6, align 8
  store i64 %1092, i64* %3, align 8
  %call2_401392 = tail call %struct.Memory* @sub_404ae0._Z13test_constantIh28custom_multiple_constant_subIhEEvPT_iPKc(%struct.State* %0, i64 %1092, %struct.Memory* %call2_40137f)
  %1097 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x418dd6_type* @G__0x418dd6 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418dd6_type* @G__0x418dd6 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %1098 = load i64, i64* %RBP.i, align 8
  %1099 = add i64 %1098, -56
  %1100 = add i64 %1097, 11
  store i64 %1100, i64* %PC.i, align 8
  %1101 = inttoptr i64 %1099 to i64*
  %1102 = load i64, i64* %1101, align 8
  store i64 %1102, i64* %RDI.i3614.pre-phi, align 8
  %1103 = add i64 %1098, -44
  %1104 = add i64 %1097, 14
  store i64 %1104, i64* %PC.i, align 8
  %1105 = inttoptr i64 %1103 to i32*
  %1106 = load i32, i32* %1105, align 4
  %1107 = zext i32 %1106 to i64
  store i64 %1107, i64* %RSI.i3629, align 8
  %1108 = add i64 %1097, 14313
  %1109 = add i64 %1097, 19
  %1110 = load i64, i64* %6, align 8
  %1111 = add i64 %1110, -8
  %1112 = inttoptr i64 %1111 to i64*
  store i64 %1109, i64* %1112, align 8
  store i64 %1111, i64* %6, align 8
  store i64 %1108, i64* %3, align 8
  %call2_4013a5 = tail call %struct.Memory* @sub_404b80._Z13test_constantIh24custom_constant_multiplyIhEEvPT_iPKc(%struct.State* %0, i64 %1108, %struct.Memory* %call2_401392)
  %1113 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x418df0_type* @G__0x418df0 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418df0_type* @G__0x418df0 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %1114 = load i64, i64* %RBP.i, align 8
  %1115 = add i64 %1114, -56
  %1116 = add i64 %1113, 11
  store i64 %1116, i64* %PC.i, align 8
  %1117 = inttoptr i64 %1115 to i64*
  %1118 = load i64, i64* %1117, align 8
  store i64 %1118, i64* %RDI.i3614.pre-phi, align 8
  %1119 = add i64 %1114, -44
  %1120 = add i64 %1113, 14
  store i64 %1120, i64* %PC.i, align 8
  %1121 = inttoptr i64 %1119 to i32*
  %1122 = load i32, i32* %1121, align 4
  %1123 = zext i32 %1122 to i64
  store i64 %1123, i64* %RSI.i3629, align 8
  %1124 = add i64 %1113, 14454
  %1125 = add i64 %1113, 19
  %1126 = load i64, i64* %6, align 8
  %1127 = add i64 %1126, -8
  %1128 = inttoptr i64 %1127 to i64*
  store i64 %1125, i64* %1128, align 8
  store i64 %1127, i64* %6, align 8
  store i64 %1124, i64* %3, align 8
  %call2_4013b8 = tail call %struct.Memory* @sub_404c20._Z13test_constantIh33custom_multiple_constant_multiplyIhEEvPT_iPKc(%struct.State* %0, i64 %1124, %struct.Memory* %call2_4013a5)
  %1129 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x418e15_type* @G__0x418e15 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418e15_type* @G__0x418e15 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %1130 = load i64, i64* %RBP.i, align 8
  %1131 = add i64 %1130, -56
  %1132 = add i64 %1129, 11
  store i64 %1132, i64* %PC.i, align 8
  %1133 = inttoptr i64 %1131 to i64*
  %1134 = load i64, i64* %1133, align 8
  store i64 %1134, i64* %RDI.i3614.pre-phi, align 8
  %1135 = add i64 %1130, -44
  %1136 = add i64 %1129, 14
  store i64 %1136, i64* %PC.i, align 8
  %1137 = inttoptr i64 %1135 to i32*
  %1138 = load i32, i32* %1137, align 4
  %1139 = zext i32 %1138 to i64
  store i64 %1139, i64* %RSI.i3629, align 8
  %1140 = add i64 %1129, 14595
  %1141 = add i64 %1129, 19
  %1142 = load i64, i64* %6, align 8
  %1143 = add i64 %1142, -8
  %1144 = inttoptr i64 %1143 to i64*
  store i64 %1141, i64* %1144, align 8
  store i64 %1143, i64* %6, align 8
  store i64 %1140, i64* %3, align 8
  %call2_4013cb = tail call %struct.Memory* @sub_404cc0._Z13test_constantIh34custom_multiple_constant_multiply2IhEEvPT_iPKc(%struct.State* %0, i64 %1140, %struct.Memory* %call2_4013b8)
  %1145 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x418e39_type* @G__0x418e39 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418e39_type* @G__0x418e39 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %1146 = load i64, i64* %RBP.i, align 8
  %1147 = add i64 %1146, -56
  %1148 = add i64 %1145, 11
  store i64 %1148, i64* %PC.i, align 8
  %1149 = inttoptr i64 %1147 to i64*
  %1150 = load i64, i64* %1149, align 8
  store i64 %1150, i64* %RDI.i3614.pre-phi, align 8
  %1151 = add i64 %1146, -44
  %1152 = add i64 %1145, 14
  store i64 %1152, i64* %PC.i, align 8
  %1153 = inttoptr i64 %1151 to i32*
  %1154 = load i32, i32* %1153, align 4
  %1155 = zext i32 %1154 to i64
  store i64 %1155, i64* %RSI.i3629, align 8
  %1156 = add i64 %1145, 14736
  %1157 = add i64 %1145, 19
  %1158 = load i64, i64* %6, align 8
  %1159 = add i64 %1158, -8
  %1160 = inttoptr i64 %1159 to i64*
  store i64 %1157, i64* %1160, align 8
  store i64 %1159, i64* %6, align 8
  store i64 %1156, i64* %3, align 8
  %call2_4013de = tail call %struct.Memory* @sub_404d60._Z13test_constantIh22custom_constant_divideIhEEvPT_iPKc(%struct.State* %0, i64 %1156, %struct.Memory* %call2_4013cb)
  %1161 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x418e51_type* @G__0x418e51 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418e51_type* @G__0x418e51 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %1162 = load i64, i64* %RBP.i, align 8
  %1163 = add i64 %1162, -56
  %1164 = add i64 %1161, 11
  store i64 %1164, i64* %PC.i, align 8
  %1165 = inttoptr i64 %1163 to i64*
  %1166 = load i64, i64* %1165, align 8
  store i64 %1166, i64* %RDI.i3614.pre-phi, align 8
  %1167 = add i64 %1162, -44
  %1168 = add i64 %1161, 14
  store i64 %1168, i64* %PC.i, align 8
  %1169 = inttoptr i64 %1167 to i32*
  %1170 = load i32, i32* %1169, align 4
  %1171 = zext i32 %1170 to i64
  store i64 %1171, i64* %RSI.i3629, align 8
  %1172 = add i64 %1161, 14877
  %1173 = add i64 %1161, 19
  %1174 = load i64, i64* %6, align 8
  %1175 = add i64 %1174, -8
  %1176 = inttoptr i64 %1175 to i64*
  store i64 %1173, i64* %1176, align 8
  store i64 %1175, i64* %6, align 8
  store i64 %1172, i64* %3, align 8
  %call2_4013f1 = tail call %struct.Memory* @sub_404e00._Z13test_constantIh31custom_multiple_constant_divideIhEEvPT_iPKc(%struct.State* %0, i64 %1172, %struct.Memory* %call2_4013de)
  %1177 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x418e73_type* @G__0x418e73 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418e73_type* @G__0x418e73 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %1178 = load i64, i64* %RBP.i, align 8
  %1179 = add i64 %1178, -56
  %1180 = add i64 %1177, 11
  store i64 %1180, i64* %PC.i, align 8
  %1181 = inttoptr i64 %1179 to i64*
  %1182 = load i64, i64* %1181, align 8
  store i64 %1182, i64* %RDI.i3614.pre-phi, align 8
  %1183 = add i64 %1178, -44
  %1184 = add i64 %1177, 14
  store i64 %1184, i64* %PC.i, align 8
  %1185 = inttoptr i64 %1183 to i32*
  %1186 = load i32, i32* %1185, align 4
  %1187 = zext i32 %1186 to i64
  store i64 %1187, i64* %RSI.i3629, align 8
  %1188 = add i64 %1177, 15018
  %1189 = add i64 %1177, 19
  %1190 = load i64, i64* %6, align 8
  %1191 = add i64 %1190, -8
  %1192 = inttoptr i64 %1191 to i64*
  store i64 %1189, i64* %1192, align 8
  store i64 %1191, i64* %6, align 8
  store i64 %1188, i64* %3, align 8
  %call2_401404 = tail call %struct.Memory* @sub_404ea0._Z13test_constantIh32custom_multiple_constant_divide2IhEEvPT_iPKc(%struct.State* %0, i64 %1188, %struct.Memory* %call2_4013f1)
  %1193 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x418e95_type* @G__0x418e95 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418e95_type* @G__0x418e95 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %1194 = load i64, i64* %RBP.i, align 8
  %1195 = add i64 %1194, -56
  %1196 = add i64 %1193, 11
  store i64 %1196, i64* %PC.i, align 8
  %1197 = inttoptr i64 %1195 to i64*
  %1198 = load i64, i64* %1197, align 8
  store i64 %1198, i64* %RDI.i3614.pre-phi, align 8
  %1199 = add i64 %1194, -44
  %1200 = add i64 %1193, 14
  store i64 %1200, i64* %PC.i, align 8
  %1201 = inttoptr i64 %1199 to i32*
  %1202 = load i32, i32* %1201, align 4
  %1203 = zext i32 %1202 to i64
  store i64 %1203, i64* %RSI.i3629, align 8
  %1204 = add i64 %1193, 15159
  %1205 = add i64 %1193, 19
  %1206 = load i64, i64* %6, align 8
  %1207 = add i64 %1206, -8
  %1208 = inttoptr i64 %1207 to i64*
  store i64 %1205, i64* %1208, align 8
  store i64 %1207, i64* %6, align 8
  store i64 %1204, i64* %3, align 8
  %call2_401417 = tail call %struct.Memory* @sub_404f40._Z13test_constantIh30custom_multiple_constant_mixedIhEEvPT_iPKc(%struct.State* %0, i64 %1204, %struct.Memory* %call2_401404)
  %1209 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x418eb5_type* @G__0x418eb5 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418eb5_type* @G__0x418eb5 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %1210 = load i64, i64* %RBP.i, align 8
  %1211 = add i64 %1210, -56
  %1212 = add i64 %1209, 11
  store i64 %1212, i64* %PC.i, align 8
  %1213 = inttoptr i64 %1211 to i64*
  %1214 = load i64, i64* %1213, align 8
  store i64 %1214, i64* %RDI.i3614.pre-phi, align 8
  %1215 = add i64 %1210, -44
  %1216 = add i64 %1209, 14
  store i64 %1216, i64* %PC.i, align 8
  %1217 = inttoptr i64 %1215 to i32*
  %1218 = load i32, i32* %1217, align 4
  %1219 = zext i32 %1218 to i64
  store i64 %1219, i64* %RSI.i3629, align 8
  %1220 = add i64 %1209, 15300
  %1221 = add i64 %1209, 19
  %1222 = load i64, i64* %6, align 8
  %1223 = add i64 %1222, -8
  %1224 = inttoptr i64 %1223 to i64*
  store i64 %1221, i64* %1224, align 8
  store i64 %1223, i64* %6, align 8
  store i64 %1220, i64* %3, align 8
  %call2_40142a = tail call %struct.Memory* @sub_404fe0._Z13test_constantIh19custom_constant_andIhEEvPT_iPKc(%struct.State* %0, i64 %1220, %struct.Memory* %call2_401417)
  %1225 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x418eca_type* @G__0x418eca to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418eca_type* @G__0x418eca to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %1226 = load i64, i64* %RBP.i, align 8
  %1227 = add i64 %1226, -56
  %1228 = add i64 %1225, 11
  store i64 %1228, i64* %PC.i, align 8
  %1229 = inttoptr i64 %1227 to i64*
  %1230 = load i64, i64* %1229, align 8
  store i64 %1230, i64* %RDI.i3614.pre-phi, align 8
  %1231 = add i64 %1226, -44
  %1232 = add i64 %1225, 14
  store i64 %1232, i64* %PC.i, align 8
  %1233 = inttoptr i64 %1231 to i32*
  %1234 = load i32, i32* %1233, align 4
  %1235 = zext i32 %1234 to i64
  store i64 %1235, i64* %RSI.i3629, align 8
  %1236 = add i64 %1225, 15441
  %1237 = add i64 %1225, 19
  %1238 = load i64, i64* %6, align 8
  %1239 = add i64 %1238, -8
  %1240 = inttoptr i64 %1239 to i64*
  store i64 %1237, i64* %1240, align 8
  store i64 %1239, i64* %6, align 8
  store i64 %1236, i64* %3, align 8
  %call2_40143d = tail call %struct.Memory* @sub_405080._Z13test_constantIh28custom_multiple_constant_andIhEEvPT_iPKc(%struct.State* %0, i64 %1236, %struct.Memory* %call2_40142a)
  %1241 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x418ee8_type* @G__0x418ee8 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418ee8_type* @G__0x418ee8 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %1242 = load i64, i64* %RBP.i, align 8
  %1243 = add i64 %1242, -56
  %1244 = add i64 %1241, 11
  store i64 %1244, i64* %PC.i, align 8
  %1245 = inttoptr i64 %1243 to i64*
  %1246 = load i64, i64* %1245, align 8
  store i64 %1246, i64* %RDI.i3614.pre-phi, align 8
  %1247 = add i64 %1242, -44
  %1248 = add i64 %1241, 14
  store i64 %1248, i64* %PC.i, align 8
  %1249 = inttoptr i64 %1247 to i32*
  %1250 = load i32, i32* %1249, align 4
  %1251 = zext i32 %1250 to i64
  store i64 %1251, i64* %RSI.i3629, align 8
  %1252 = add i64 %1241, 15582
  %1253 = add i64 %1241, 19
  %1254 = load i64, i64* %6, align 8
  %1255 = add i64 %1254, -8
  %1256 = inttoptr i64 %1255 to i64*
  store i64 %1253, i64* %1256, align 8
  store i64 %1255, i64* %6, align 8
  store i64 %1252, i64* %3, align 8
  %call2_401450 = tail call %struct.Memory* @sub_405120._Z13test_constantIh18custom_constant_orIhEEvPT_iPKc(%struct.State* %0, i64 %1252, %struct.Memory* %call2_40143d)
  %1257 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x418efc_type* @G__0x418efc to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418efc_type* @G__0x418efc to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %1258 = load i64, i64* %RBP.i, align 8
  %1259 = add i64 %1258, -56
  %1260 = add i64 %1257, 11
  store i64 %1260, i64* %PC.i, align 8
  %1261 = inttoptr i64 %1259 to i64*
  %1262 = load i64, i64* %1261, align 8
  store i64 %1262, i64* %RDI.i3614.pre-phi, align 8
  %1263 = add i64 %1258, -44
  %1264 = add i64 %1257, 14
  store i64 %1264, i64* %PC.i, align 8
  %1265 = inttoptr i64 %1263 to i32*
  %1266 = load i32, i32* %1265, align 4
  %1267 = zext i32 %1266 to i64
  store i64 %1267, i64* %RSI.i3629, align 8
  %1268 = add i64 %1257, 15723
  %1269 = add i64 %1257, 19
  %1270 = load i64, i64* %6, align 8
  %1271 = add i64 %1270, -8
  %1272 = inttoptr i64 %1271 to i64*
  store i64 %1269, i64* %1272, align 8
  store i64 %1271, i64* %6, align 8
  store i64 %1268, i64* %3, align 8
  %call2_401463 = tail call %struct.Memory* @sub_4051c0._Z13test_constantIh27custom_multiple_constant_orIhEEvPT_iPKc(%struct.State* %0, i64 %1268, %struct.Memory* %call2_401450)
  %1273 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x418f19_type* @G__0x418f19 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418f19_type* @G__0x418f19 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %1274 = load i64, i64* %RBP.i, align 8
  %1275 = add i64 %1274, -56
  %1276 = add i64 %1273, 11
  store i64 %1276, i64* %PC.i, align 8
  %1277 = inttoptr i64 %1275 to i64*
  %1278 = load i64, i64* %1277, align 8
  store i64 %1278, i64* %RDI.i3614.pre-phi, align 8
  %1279 = add i64 %1274, -44
  %1280 = add i64 %1273, 14
  store i64 %1280, i64* %PC.i, align 8
  %1281 = inttoptr i64 %1279 to i32*
  %1282 = load i32, i32* %1281, align 4
  %1283 = zext i32 %1282 to i64
  store i64 %1283, i64* %RSI.i3629, align 8
  %1284 = add i64 %1273, 15864
  %1285 = add i64 %1273, 19
  %1286 = load i64, i64* %6, align 8
  %1287 = add i64 %1286, -8
  %1288 = inttoptr i64 %1287 to i64*
  store i64 %1285, i64* %1288, align 8
  store i64 %1287, i64* %6, align 8
  store i64 %1284, i64* %3, align 8
  %call2_401476 = tail call %struct.Memory* @sub_405260._Z13test_constantIh19custom_constant_xorIhEEvPT_iPKc(%struct.State* %0, i64 %1284, %struct.Memory* %call2_401463)
  %1289 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x418f2e_type* @G__0x418f2e to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418f2e_type* @G__0x418f2e to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %1290 = load i64, i64* %RBP.i, align 8
  %1291 = add i64 %1290, -56
  %1292 = add i64 %1289, 11
  store i64 %1292, i64* %PC.i, align 8
  %1293 = inttoptr i64 %1291 to i64*
  %1294 = load i64, i64* %1293, align 8
  store i64 %1294, i64* %RDI.i3614.pre-phi, align 8
  %1295 = add i64 %1290, -44
  %1296 = add i64 %1289, 14
  store i64 %1296, i64* %PC.i, align 8
  %1297 = inttoptr i64 %1295 to i32*
  %1298 = load i32, i32* %1297, align 4
  %1299 = zext i32 %1298 to i64
  store i64 %1299, i64* %RSI.i3629, align 8
  %1300 = add i64 %1289, 16005
  %1301 = add i64 %1289, 19
  %1302 = load i64, i64* %6, align 8
  %1303 = add i64 %1302, -8
  %1304 = inttoptr i64 %1303 to i64*
  store i64 %1301, i64* %1304, align 8
  store i64 %1303, i64* %6, align 8
  store i64 %1300, i64* %3, align 8
  %call2_401489 = tail call %struct.Memory* @sub_405300._Z13test_constantIh28custom_multiple_constant_xorIhEEvPT_iPKc(%struct.State* %0, i64 %1300, %struct.Memory* %call2_401476)
  %1305 = load i64, i64* %PC.i, align 8
  %1306 = load double, double* bitcast (%G_0x220bf2__rip__type* @G_0x220bf2__rip_ to double*), align 8
  %1307 = tail call double @llvm.trunc.f64(double %1306)
  %1308 = tail call double @llvm.fabs.f64(double %1307)
  %1309 = fcmp ogt double %1308, 0x41DFFFFFFFC00000
  %1310 = fptosi double %1307 to i32
  store i64 and (i64 ptrtoint (%G__0x66c450_type* @G__0x66c450 to i64), i64 4294967295), i64* %194, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x66c450_type* @G__0x66c450 to i64), i64 4294967295) to i32) to i64), i64* %.pre18, align 8
  %1311 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 21, i32 0
  %R10W.i2748 = bitcast %union.anon* %1311 to i16*
  %1312 = trunc i32 %1310 to i16
  %1313 = select i1 %1309, i16 0, i16 %1312
  store i16 %1313, i16* %R10W.i2748, align 2
  %1314 = sext i16 %1313 to i64
  %1315 = and i64 %1314, 4294967295
  store i64 %1315, i64* %RDX.i3618, align 8
  store i64 and (i64 ptrtoint (%G__0x6702d0_type* @G__0x6702d0 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x66c450_type* @G__0x66c450 to i64), i64 4294967295) to i32) to i64), i64* %RDI.i3614.pre-phi, align 8
  %1316 = load i64, i64* %RBP.i, align 8
  %1317 = add i64 %1316, -64
  %1318 = add i64 %1305, 37
  store i64 %1318, i64* %PC.i, align 8
  %1319 = inttoptr i64 %1317 to i64*
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x66c450_type* @G__0x66c450 to i64), i64 4294967295) to i32) to i64), i64* %1319, align 8
  %1320 = load i64, i64* %PC.i, align 8
  %1321 = add i64 %1320, 16109
  %1322 = add i64 %1320, 5
  %1323 = load i64, i64* %6, align 8
  %1324 = add i64 %1323, -8
  %1325 = inttoptr i64 %1324 to i64*
  store i64 %1322, i64* %1325, align 8
  store i64 %1324, i64* %6, align 8
  store i64 %1321, i64* %3, align 8
  %call2_4014b3 = tail call %struct.Memory* @sub_4053a0._Z4fillIPssEvT_S1_T0_(%struct.State* %0, i64 %1321, %struct.Memory* %call2_401489)
  %1326 = load i64, i64* %PC.i, align 8
  %1327 = load i32, i32* bitcast (%G_0x220bc2__rip__type* @G_0x220bc2__rip_ to i32*), align 8
  store i32 %1327, i32* bitcast (%G_0x220bfc__rip__type* @G_0x220bfc__rip_ to i32*), align 8
  store i64 and (i64 ptrtoint (%G__0x418f4d_type* @G__0x418f4d to i64), i64 4294967295), i64* %RDX.i3618, align 8
  %1328 = load i64, i64* %RBP.i, align 8
  %1329 = add i64 %1328, -64
  %1330 = add i64 %1326, 21
  store i64 %1330, i64* %PC.i, align 8
  %1331 = inttoptr i64 %1329 to i64*
  %1332 = load i64, i64* %1331, align 8
  store i64 %1332, i64* %RDI.i3614.pre-phi, align 8
  %1333 = add i64 %1328, -44
  %1334 = add i64 %1326, 24
  store i64 %1334, i64* %PC.i, align 8
  %1335 = inttoptr i64 %1333 to i32*
  %1336 = load i32, i32* %1335, align 4
  %1337 = zext i32 %1336 to i64
  store i64 %1337, i64* %RSI.i3629, align 8
  %1338 = add i64 %1326, 16168
  %1339 = add i64 %1326, 29
  %1340 = load i64, i64* %6, align 8
  %1341 = add i64 %1340, -8
  %1342 = inttoptr i64 %1341 to i64*
  store i64 %1339, i64* %1342, align 8
  store i64 %1341, i64* %6, align 8
  store i64 %1338, i64* %3, align 8
  %call2_4014d0 = tail call %struct.Memory* @sub_4053e0._Z13test_constantIs10custom_twoIsEEvPT_iPKc(%struct.State* %0, i64 %1338, %struct.Memory* %call2_4014b3)
  %1343 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x418f5f_type* @G__0x418f5f to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418f5f_type* @G__0x418f5f to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %1344 = load i64, i64* %RBP.i, align 8
  %1345 = add i64 %1344, -64
  %1346 = add i64 %1343, 11
  store i64 %1346, i64* %PC.i, align 8
  %1347 = inttoptr i64 %1345 to i64*
  %1348 = load i64, i64* %1347, align 8
  store i64 %1348, i64* %RDI.i3614.pre-phi, align 8
  %1349 = add i64 %1344, -44
  %1350 = add i64 %1343, 14
  store i64 %1350, i64* %PC.i, align 8
  %1351 = inttoptr i64 %1349 to i32*
  %1352 = load i32, i32* %1351, align 4
  %1353 = zext i32 %1352 to i64
  store i64 %1353, i64* %RSI.i3629, align 8
  %1354 = add i64 %1343, 16315
  %1355 = add i64 %1343, 19
  %1356 = load i64, i64* %6, align 8
  %1357 = add i64 %1356, -8
  %1358 = inttoptr i64 %1357 to i64*
  store i64 %1355, i64* %1358, align 8
  store i64 %1357, i64* %6, align 8
  store i64 %1354, i64* %3, align 8
  %call2_4014e3 = tail call %struct.Memory* @sub_405490._Z13test_constantIs20custom_add_constantsIsEEvPT_iPKc(%struct.State* %0, i64 %1354, %struct.Memory* %call2_4014d0)
  %1359 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x418f76_type* @G__0x418f76 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418f76_type* @G__0x418f76 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %1360 = load i64, i64* %RBP.i, align 8
  %1361 = add i64 %1360, -64
  %1362 = add i64 %1359, 11
  store i64 %1362, i64* %PC.i, align 8
  %1363 = inttoptr i64 %1361 to i64*
  %1364 = load i64, i64* %1363, align 8
  store i64 %1364, i64* %RDI.i3614.pre-phi, align 8
  %1365 = add i64 %1360, -44
  %1366 = add i64 %1359, 14
  store i64 %1366, i64* %PC.i, align 8
  %1367 = inttoptr i64 %1365 to i32*
  %1368 = load i32, i32* %1367, align 4
  %1369 = zext i32 %1368 to i64
  store i64 %1369, i64* %RSI.i3629, align 8
  %1370 = add i64 %1359, 16472
  %1371 = add i64 %1359, 19
  %1372 = load i64, i64* %6, align 8
  %1373 = add i64 %1372, -8
  %1374 = inttoptr i64 %1373 to i64*
  store i64 %1371, i64* %1374, align 8
  store i64 %1373, i64* %6, align 8
  store i64 %1370, i64* %3, align 8
  %call2_4014f6 = tail call %struct.Memory* @sub_405540._Z13test_constantIs20custom_sub_constantsIsEEvPT_iPKc(%struct.State* %0, i64 %1370, %struct.Memory* %call2_4014e3)
  %1375 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x418f92_type* @G__0x418f92 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418f92_type* @G__0x418f92 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %1376 = load i64, i64* %RBP.i, align 8
  %1377 = add i64 %1376, -64
  %1378 = add i64 %1375, 11
  store i64 %1378, i64* %PC.i, align 8
  %1379 = inttoptr i64 %1377 to i64*
  %1380 = load i64, i64* %1379, align 8
  store i64 %1380, i64* %RDI.i3614.pre-phi, align 8
  %1381 = add i64 %1376, -44
  %1382 = add i64 %1375, 14
  store i64 %1382, i64* %PC.i, align 8
  %1383 = inttoptr i64 %1381 to i32*
  %1384 = load i32, i32* %1383, align 4
  %1385 = zext i32 %1384 to i64
  store i64 %1385, i64* %RSI.i3629, align 8
  %1386 = add i64 %1375, 16629
  %1387 = add i64 %1375, 19
  %1388 = load i64, i64* %6, align 8
  %1389 = add i64 %1388, -8
  %1390 = inttoptr i64 %1389 to i64*
  store i64 %1387, i64* %1390, align 8
  store i64 %1389, i64* %6, align 8
  store i64 %1386, i64* %3, align 8
  %call2_401509 = tail call %struct.Memory* @sub_4055f0._Z13test_constantIs25custom_multiply_constantsIsEEvPT_iPKc(%struct.State* %0, i64 %1386, %struct.Memory* %call2_4014f6)
  %1391 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x418fae_type* @G__0x418fae to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418fae_type* @G__0x418fae to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %1392 = load i64, i64* %RBP.i, align 8
  %1393 = add i64 %1392, -64
  %1394 = add i64 %1391, 11
  store i64 %1394, i64* %PC.i, align 8
  %1395 = inttoptr i64 %1393 to i64*
  %1396 = load i64, i64* %1395, align 8
  store i64 %1396, i64* %RDI.i3614.pre-phi, align 8
  %1397 = add i64 %1392, -44
  %1398 = add i64 %1391, 14
  store i64 %1398, i64* %PC.i, align 8
  %1399 = inttoptr i64 %1397 to i32*
  %1400 = load i32, i32* %1399, align 4
  %1401 = zext i32 %1400 to i64
  store i64 %1401, i64* %RSI.i3629, align 8
  %1402 = add i64 %1391, 16786
  %1403 = add i64 %1391, 19
  %1404 = load i64, i64* %6, align 8
  %1405 = add i64 %1404, -8
  %1406 = inttoptr i64 %1405 to i64*
  store i64 %1403, i64* %1406, align 8
  store i64 %1405, i64* %6, align 8
  store i64 %1402, i64* %3, align 8
  %call2_40151c = tail call %struct.Memory* @sub_4056a0._Z13test_constantIs23custom_divide_constantsIsEEvPT_iPKc(%struct.State* %0, i64 %1402, %struct.Memory* %call2_401509)
  %1407 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x418fc8_type* @G__0x418fc8 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418fc8_type* @G__0x418fc8 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %1408 = load i64, i64* %RBP.i, align 8
  %1409 = add i64 %1408, -64
  %1410 = add i64 %1407, 11
  store i64 %1410, i64* %PC.i, align 8
  %1411 = inttoptr i64 %1409 to i64*
  %1412 = load i64, i64* %1411, align 8
  store i64 %1412, i64* %RDI.i3614.pre-phi, align 8
  %1413 = add i64 %1408, -44
  %1414 = add i64 %1407, 14
  store i64 %1414, i64* %PC.i, align 8
  %1415 = inttoptr i64 %1413 to i32*
  %1416 = load i32, i32* %1415, align 4
  %1417 = zext i32 %1416 to i64
  store i64 %1417, i64* %RSI.i3629, align 8
  %1418 = add i64 %1407, 16943
  %1419 = add i64 %1407, 19
  %1420 = load i64, i64* %6, align 8
  %1421 = add i64 %1420, -8
  %1422 = inttoptr i64 %1421 to i64*
  store i64 %1419, i64* %1422, align 8
  store i64 %1421, i64* %6, align 8
  store i64 %1418, i64* %3, align 8
  %call2_40152f = tail call %struct.Memory* @sub_405750._Z13test_constantIs20custom_mod_constantsIsEEvPT_iPKc(%struct.State* %0, i64 %1418, %struct.Memory* %call2_40151c)
  %1423 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x418fdf_type* @G__0x418fdf to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418fdf_type* @G__0x418fdf to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %1424 = load i64, i64* %RBP.i, align 8
  %1425 = add i64 %1424, -64
  %1426 = add i64 %1423, 11
  store i64 %1426, i64* %PC.i, align 8
  %1427 = inttoptr i64 %1425 to i64*
  %1428 = load i64, i64* %1427, align 8
  store i64 %1428, i64* %RDI.i3614.pre-phi, align 8
  %1429 = add i64 %1424, -44
  %1430 = add i64 %1423, 14
  store i64 %1430, i64* %PC.i, align 8
  %1431 = inttoptr i64 %1429 to i32*
  %1432 = load i32, i32* %1431, align 4
  %1433 = zext i32 %1432 to i64
  store i64 %1433, i64* %RSI.i3629, align 8
  %1434 = add i64 %1423, 17100
  %1435 = add i64 %1423, 19
  %1436 = load i64, i64* %6, align 8
  %1437 = add i64 %1436, -8
  %1438 = inttoptr i64 %1437 to i64*
  store i64 %1435, i64* %1438, align 8
  store i64 %1437, i64* %6, align 8
  store i64 %1434, i64* %3, align 8
  %call2_401542 = tail call %struct.Memory* @sub_405800._Z13test_constantIs22custom_equal_constantsIsEEvPT_iPKc(%struct.State* %0, i64 %1434, %struct.Memory* %call2_40152f)
  %1439 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x418ff8_type* @G__0x418ff8 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418ff8_type* @G__0x418ff8 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %1440 = load i64, i64* %RBP.i, align 8
  %1441 = add i64 %1440, -64
  %1442 = add i64 %1439, 11
  store i64 %1442, i64* %PC.i, align 8
  %1443 = inttoptr i64 %1441 to i64*
  %1444 = load i64, i64* %1443, align 8
  store i64 %1444, i64* %RDI.i3614.pre-phi, align 8
  %1445 = add i64 %1440, -44
  %1446 = add i64 %1439, 14
  store i64 %1446, i64* %PC.i, align 8
  %1447 = inttoptr i64 %1445 to i32*
  %1448 = load i32, i32* %1447, align 4
  %1449 = zext i32 %1448 to i64
  store i64 %1449, i64* %RSI.i3629, align 8
  %1450 = add i64 %1439, 17257
  %1451 = add i64 %1439, 19
  %1452 = load i64, i64* %6, align 8
  %1453 = add i64 %1452, -8
  %1454 = inttoptr i64 %1453 to i64*
  store i64 %1451, i64* %1454, align 8
  store i64 %1453, i64* %6, align 8
  store i64 %1450, i64* %3, align 8
  %call2_401555 = tail call %struct.Memory* @sub_4058b0._Z13test_constantIs25custom_notequal_constantsIsEEvPT_iPKc(%struct.State* %0, i64 %1450, %struct.Memory* %call2_401542)
  %1455 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x419014_type* @G__0x419014 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419014_type* @G__0x419014 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %1456 = load i64, i64* %RBP.i, align 8
  %1457 = add i64 %1456, -64
  %1458 = add i64 %1455, 11
  store i64 %1458, i64* %PC.i, align 8
  %1459 = inttoptr i64 %1457 to i64*
  %1460 = load i64, i64* %1459, align 8
  store i64 %1460, i64* %RDI.i3614.pre-phi, align 8
  %1461 = add i64 %1456, -44
  %1462 = add i64 %1455, 14
  store i64 %1462, i64* %PC.i, align 8
  %1463 = inttoptr i64 %1461 to i32*
  %1464 = load i32, i32* %1463, align 4
  %1465 = zext i32 %1464 to i64
  store i64 %1465, i64* %RSI.i3629, align 8
  %1466 = add i64 %1455, 17414
  %1467 = add i64 %1455, 19
  %1468 = load i64, i64* %6, align 8
  %1469 = add i64 %1468, -8
  %1470 = inttoptr i64 %1469 to i64*
  store i64 %1467, i64* %1470, align 8
  store i64 %1469, i64* %6, align 8
  store i64 %1466, i64* %3, align 8
  %call2_401568 = tail call %struct.Memory* @sub_405960._Z13test_constantIs28custom_greaterthan_constantsIsEEvPT_iPKc(%struct.State* %0, i64 %1466, %struct.Memory* %call2_401555)
  %1471 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x419034_type* @G__0x419034 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419034_type* @G__0x419034 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %1472 = load i64, i64* %RBP.i, align 8
  %1473 = add i64 %1472, -64
  %1474 = add i64 %1471, 11
  store i64 %1474, i64* %PC.i, align 8
  %1475 = inttoptr i64 %1473 to i64*
  %1476 = load i64, i64* %1475, align 8
  store i64 %1476, i64* %RDI.i3614.pre-phi, align 8
  %1477 = add i64 %1472, -44
  %1478 = add i64 %1471, 14
  store i64 %1478, i64* %PC.i, align 8
  %1479 = inttoptr i64 %1477 to i32*
  %1480 = load i32, i32* %1479, align 4
  %1481 = zext i32 %1480 to i64
  store i64 %1481, i64* %RSI.i3629, align 8
  %1482 = add i64 %1471, 17571
  %1483 = add i64 %1471, 19
  %1484 = load i64, i64* %6, align 8
  %1485 = add i64 %1484, -8
  %1486 = inttoptr i64 %1485 to i64*
  store i64 %1483, i64* %1486, align 8
  store i64 %1485, i64* %6, align 8
  store i64 %1482, i64* %3, align 8
  %call2_40157b = tail call %struct.Memory* @sub_405a10._Z13test_constantIs25custom_lessthan_constantsIsEEvPT_iPKc(%struct.State* %0, i64 %1482, %struct.Memory* %call2_401568)
  %1487 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x419051_type* @G__0x419051 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419051_type* @G__0x419051 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %1488 = load i64, i64* %RBP.i, align 8
  %1489 = add i64 %1488, -64
  %1490 = add i64 %1487, 11
  store i64 %1490, i64* %PC.i, align 8
  %1491 = inttoptr i64 %1489 to i64*
  %1492 = load i64, i64* %1491, align 8
  store i64 %1492, i64* %RDI.i3614.pre-phi, align 8
  %1493 = add i64 %1488, -44
  %1494 = add i64 %1487, 14
  store i64 %1494, i64* %PC.i, align 8
  %1495 = inttoptr i64 %1493 to i32*
  %1496 = load i32, i32* %1495, align 4
  %1497 = zext i32 %1496 to i64
  store i64 %1497, i64* %RSI.i3629, align 8
  %1498 = add i64 %1487, 17728
  %1499 = add i64 %1487, 19
  %1500 = load i64, i64* %6, align 8
  %1501 = add i64 %1500, -8
  %1502 = inttoptr i64 %1501 to i64*
  store i64 %1499, i64* %1502, align 8
  store i64 %1501, i64* %6, align 8
  store i64 %1498, i64* %3, align 8
  %call2_40158e = tail call %struct.Memory* @sub_405ac0._Z13test_constantIs33custom_greaterthanequal_constantsIsEEvPT_iPKc(%struct.State* %0, i64 %1498, %struct.Memory* %call2_40157b)
  %1503 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x419077_type* @G__0x419077 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419077_type* @G__0x419077 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %1504 = load i64, i64* %RBP.i, align 8
  %1505 = add i64 %1504, -64
  %1506 = add i64 %1503, 11
  store i64 %1506, i64* %PC.i, align 8
  %1507 = inttoptr i64 %1505 to i64*
  %1508 = load i64, i64* %1507, align 8
  store i64 %1508, i64* %RDI.i3614.pre-phi, align 8
  %1509 = add i64 %1504, -44
  %1510 = add i64 %1503, 14
  store i64 %1510, i64* %PC.i, align 8
  %1511 = inttoptr i64 %1509 to i32*
  %1512 = load i32, i32* %1511, align 4
  %1513 = zext i32 %1512 to i64
  store i64 %1513, i64* %RSI.i3629, align 8
  %1514 = add i64 %1503, 17885
  %1515 = add i64 %1503, 19
  %1516 = load i64, i64* %6, align 8
  %1517 = add i64 %1516, -8
  %1518 = inttoptr i64 %1517 to i64*
  store i64 %1515, i64* %1518, align 8
  store i64 %1517, i64* %6, align 8
  store i64 %1514, i64* %3, align 8
  %call2_4015a1 = tail call %struct.Memory* @sub_405b70._Z13test_constantIs30custom_lessthanequal_constantsIsEEvPT_iPKc(%struct.State* %0, i64 %1514, %struct.Memory* %call2_40158e)
  %1519 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x41909a_type* @G__0x41909a to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41909a_type* @G__0x41909a to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %1520 = load i64, i64* %RBP.i, align 8
  %1521 = add i64 %1520, -64
  %1522 = add i64 %1519, 11
  store i64 %1522, i64* %PC.i, align 8
  %1523 = inttoptr i64 %1521 to i64*
  %1524 = load i64, i64* %1523, align 8
  store i64 %1524, i64* %RDI.i3614.pre-phi, align 8
  %1525 = add i64 %1520, -44
  %1526 = add i64 %1519, 14
  store i64 %1526, i64* %PC.i, align 8
  %1527 = inttoptr i64 %1525 to i32*
  %1528 = load i32, i32* %1527, align 4
  %1529 = zext i32 %1528 to i64
  store i64 %1529, i64* %RSI.i3629, align 8
  %1530 = add i64 %1519, 18042
  %1531 = add i64 %1519, 19
  %1532 = load i64, i64* %6, align 8
  %1533 = add i64 %1532, -8
  %1534 = inttoptr i64 %1533 to i64*
  store i64 %1531, i64* %1534, align 8
  store i64 %1533, i64* %6, align 8
  store i64 %1530, i64* %3, align 8
  %call2_4015b4 = tail call %struct.Memory* @sub_405c20._Z13test_constantIs20custom_and_constantsIsEEvPT_iPKc(%struct.State* %0, i64 %1530, %struct.Memory* %call2_4015a1)
  %1535 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x4190b1_type* @G__0x4190b1 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4190b1_type* @G__0x4190b1 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %1536 = load i64, i64* %RBP.i, align 8
  %1537 = add i64 %1536, -64
  %1538 = add i64 %1535, 11
  store i64 %1538, i64* %PC.i, align 8
  %1539 = inttoptr i64 %1537 to i64*
  %1540 = load i64, i64* %1539, align 8
  store i64 %1540, i64* %RDI.i3614.pre-phi, align 8
  %1541 = add i64 %1536, -44
  %1542 = add i64 %1535, 14
  store i64 %1542, i64* %PC.i, align 8
  %1543 = inttoptr i64 %1541 to i32*
  %1544 = load i32, i32* %1543, align 4
  %1545 = zext i32 %1544 to i64
  store i64 %1545, i64* %RSI.i3629, align 8
  %1546 = add i64 %1535, 18199
  %1547 = add i64 %1535, 19
  %1548 = load i64, i64* %6, align 8
  %1549 = add i64 %1548, -8
  %1550 = inttoptr i64 %1549 to i64*
  store i64 %1547, i64* %1550, align 8
  store i64 %1549, i64* %6, align 8
  store i64 %1546, i64* %3, align 8
  %call2_4015c7 = tail call %struct.Memory* @sub_405cd0._Z13test_constantIs19custom_or_constantsIsEEvPT_iPKc(%struct.State* %0, i64 %1546, %struct.Memory* %call2_4015b4)
  %1551 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x4190c7_type* @G__0x4190c7 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4190c7_type* @G__0x4190c7 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %1552 = load i64, i64* %RBP.i, align 8
  %1553 = add i64 %1552, -64
  %1554 = add i64 %1551, 11
  store i64 %1554, i64* %PC.i, align 8
  %1555 = inttoptr i64 %1553 to i64*
  %1556 = load i64, i64* %1555, align 8
  store i64 %1556, i64* %RDI.i3614.pre-phi, align 8
  %1557 = add i64 %1552, -44
  %1558 = add i64 %1551, 14
  store i64 %1558, i64* %PC.i, align 8
  %1559 = inttoptr i64 %1557 to i32*
  %1560 = load i32, i32* %1559, align 4
  %1561 = zext i32 %1560 to i64
  store i64 %1561, i64* %RSI.i3629, align 8
  %1562 = add i64 %1551, 18356
  %1563 = add i64 %1551, 19
  %1564 = load i64, i64* %6, align 8
  %1565 = add i64 %1564, -8
  %1566 = inttoptr i64 %1565 to i64*
  store i64 %1563, i64* %1566, align 8
  store i64 %1565, i64* %6, align 8
  store i64 %1562, i64* %3, align 8
  %call2_4015da = tail call %struct.Memory* @sub_405d80._Z13test_constantIs20custom_xor_constantsIsEEvPT_iPKc(%struct.State* %0, i64 %1562, %struct.Memory* %call2_4015c7)
  %1567 = load i64, i64* %PC.i, align 8
  %1568 = load i32, i32* bitcast (%G_0x220a9a__rip__type* @G_0x220a9a__rip_ to i32*), align 8
  %1569 = sext i32 %1568 to i64
  %1570 = mul nsw i64 %1569, 1717986919
  %1571 = lshr i64 %1570, 63
  store i64 %1571, i64* %RCX.i3623, align 8
  %1572 = ashr i64 %1570, 34
  store i64 %1572, i64* %.pre18, align 8
  %1573 = trunc i64 %1572 to i32
  %1574 = trunc i64 %1571 to i32
  %1575 = add i32 %1574, %1573
  %1576 = zext i32 %1575 to i64
  store i64 %1576, i64* %194, align 8
  %1577 = icmp ult i32 %1575, %1573
  %1578 = icmp ult i32 %1575, %1574
  %1579 = or i1 %1577, %1578
  %1580 = zext i1 %1579 to i8
  store i8 %1580, i8* %14, align 1
  %1581 = and i32 %1575, 255
  %1582 = tail call i32 @llvm.ctpop.i32(i32 %1581)
  %1583 = trunc i32 %1582 to i8
  %1584 = and i8 %1583, 1
  %1585 = xor i8 %1584, 1
  store i8 %1585, i8* %21, align 1
  %1586 = trunc i64 %1572 to i32
  %1587 = xor i32 %1586, %1575
  %1588 = lshr i32 %1587, 4
  %1589 = trunc i32 %1588 to i8
  %1590 = and i8 %1589, 1
  store i8 %1590, i8* %27, align 1
  %1591 = icmp eq i32 %1575, 0
  %1592 = zext i1 %1591 to i8
  store i8 %1592, i8* %30, align 1
  %1593 = lshr i32 %1575, 31
  %1594 = trunc i32 %1593 to i8
  store i8 %1594, i8* %33, align 1
  %1595 = lshr i64 %1572, 31
  %1596 = trunc i64 %1595 to i32
  %1597 = and i32 %1596, 1
  %1598 = xor i32 %1593, %1597
  %1599 = add nuw nsw i32 %1598, %1593
  %1600 = icmp eq i32 %1599, 2
  %1601 = zext i1 %1600 to i8
  store i8 %1601, i8* %39, align 1
  store i32 %1575, i32* bitcast (%G_0x220ab9__rip__type* @G_0x220ab9__rip_ to i32*), align 8
  store i64 and (i64 ptrtoint (%G__0x4190de_type* @G__0x4190de to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4190de_type* @G__0x4190de to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %1602 = load i64, i64* %RBP.i, align 8
  %1603 = add i64 %1602, -64
  %1604 = add i64 %1567, 51
  store i64 %1604, i64* %PC.i, align 8
  %1605 = inttoptr i64 %1603 to i64*
  %1606 = load i64, i64* %1605, align 8
  store i64 %1606, i64* %RDI.i3614.pre-phi, align 8
  %1607 = add i64 %1602, -44
  %1608 = add i64 %1567, 54
  store i64 %1608, i64* %PC.i, align 8
  %1609 = inttoptr i64 %1607 to i32*
  %1610 = load i32, i32* %1609, align 4
  %1611 = zext i32 %1610 to i64
  store i64 %1611, i64* %RSI.i3629, align 8
  %1612 = add i64 %1567, 18513
  %1613 = add i64 %1567, 59
  %1614 = load i64, i64* %6, align 8
  %1615 = add i64 %1614, -8
  %1616 = inttoptr i64 %1615 to i64*
  store i64 %1613, i64* %1616, align 8
  store i64 %1615, i64* %6, align 8
  store i64 %1612, i64* %3, align 8
  %call2_401615 = tail call %struct.Memory* @sub_405e30._Z13test_constantIs19custom_constant_addIsEEvPT_iPKc(%struct.State* %0, i64 %1612, %struct.Memory* %call2_4015da)
  %1617 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x4190f4_type* @G__0x4190f4 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4190f4_type* @G__0x4190f4 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %1618 = load i64, i64* %RBP.i, align 8
  %1619 = add i64 %1618, -64
  %1620 = add i64 %1617, 11
  store i64 %1620, i64* %PC.i, align 8
  %1621 = inttoptr i64 %1619 to i64*
  %1622 = load i64, i64* %1621, align 8
  store i64 %1622, i64* %RDI.i3614.pre-phi, align 8
  %1623 = add i64 %1618, -44
  %1624 = add i64 %1617, 14
  store i64 %1624, i64* %PC.i, align 8
  %1625 = inttoptr i64 %1623 to i32*
  %1626 = load i32, i32* %1625, align 4
  %1627 = zext i32 %1626 to i64
  store i64 %1627, i64* %RSI.i3629, align 8
  %1628 = add i64 %1617, 18630
  %1629 = add i64 %1617, 19
  %1630 = load i64, i64* %6, align 8
  %1631 = add i64 %1630, -8
  %1632 = inttoptr i64 %1631 to i64*
  store i64 %1629, i64* %1632, align 8
  store i64 %1631, i64* %6, align 8
  store i64 %1628, i64* %3, align 8
  %call2_401628 = tail call %struct.Memory* @sub_405ee0._Z13test_constantIs28custom_multiple_constant_addIsEEvPT_iPKc(%struct.State* %0, i64 %1628, %struct.Memory* %call2_401615)
  %1633 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x419114_type* @G__0x419114 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419114_type* @G__0x419114 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %1634 = load i64, i64* %RBP.i, align 8
  %1635 = add i64 %1634, -64
  %1636 = add i64 %1633, 11
  store i64 %1636, i64* %PC.i, align 8
  %1637 = inttoptr i64 %1635 to i64*
  %1638 = load i64, i64* %1637, align 8
  store i64 %1638, i64* %RDI.i3614.pre-phi, align 8
  %1639 = add i64 %1634, -44
  %1640 = add i64 %1633, 14
  store i64 %1640, i64* %PC.i, align 8
  %1641 = inttoptr i64 %1639 to i32*
  %1642 = load i32, i32* %1641, align 4
  %1643 = zext i32 %1642 to i64
  store i64 %1643, i64* %RSI.i3629, align 8
  %1644 = add i64 %1633, 18787
  %1645 = add i64 %1633, 19
  %1646 = load i64, i64* %6, align 8
  %1647 = add i64 %1646, -8
  %1648 = inttoptr i64 %1647 to i64*
  store i64 %1645, i64* %1648, align 8
  store i64 %1647, i64* %6, align 8
  store i64 %1644, i64* %3, align 8
  %call2_40163b = tail call %struct.Memory* @sub_405f90._Z13test_constantIs19custom_constant_subIsEEvPT_iPKc(%struct.State* %0, i64 %1644, %struct.Memory* %call2_401628)
  %1649 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x41912f_type* @G__0x41912f to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41912f_type* @G__0x41912f to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %1650 = load i64, i64* %RBP.i, align 8
  %1651 = add i64 %1650, -64
  %1652 = add i64 %1649, 11
  store i64 %1652, i64* %PC.i, align 8
  %1653 = inttoptr i64 %1651 to i64*
  %1654 = load i64, i64* %1653, align 8
  store i64 %1654, i64* %RDI.i3614.pre-phi, align 8
  %1655 = add i64 %1650, -44
  %1656 = add i64 %1649, 14
  store i64 %1656, i64* %PC.i, align 8
  %1657 = inttoptr i64 %1655 to i32*
  %1658 = load i32, i32* %1657, align 4
  %1659 = zext i32 %1658 to i64
  store i64 %1659, i64* %RSI.i3629, align 8
  %1660 = add i64 %1649, 18944
  %1661 = add i64 %1649, 19
  %1662 = load i64, i64* %6, align 8
  %1663 = add i64 %1662, -8
  %1664 = inttoptr i64 %1663 to i64*
  store i64 %1661, i64* %1664, align 8
  store i64 %1663, i64* %6, align 8
  store i64 %1660, i64* %3, align 8
  %call2_40164e = tail call %struct.Memory* @sub_406040._Z13test_constantIs28custom_multiple_constant_subIsEEvPT_iPKc(%struct.State* %0, i64 %1660, %struct.Memory* %call2_40163b)
  %1665 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x419154_type* @G__0x419154 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419154_type* @G__0x419154 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %1666 = load i64, i64* %RBP.i, align 8
  %1667 = add i64 %1666, -64
  %1668 = add i64 %1665, 11
  store i64 %1668, i64* %PC.i, align 8
  %1669 = inttoptr i64 %1667 to i64*
  %1670 = load i64, i64* %1669, align 8
  store i64 %1670, i64* %RDI.i3614.pre-phi, align 8
  %1671 = add i64 %1666, -44
  %1672 = add i64 %1665, 14
  store i64 %1672, i64* %PC.i, align 8
  %1673 = inttoptr i64 %1671 to i32*
  %1674 = load i32, i32* %1673, align 4
  %1675 = zext i32 %1674 to i64
  store i64 %1675, i64* %RSI.i3629, align 8
  %1676 = add i64 %1665, 19101
  %1677 = add i64 %1665, 19
  %1678 = load i64, i64* %6, align 8
  %1679 = add i64 %1678, -8
  %1680 = inttoptr i64 %1679 to i64*
  store i64 %1677, i64* %1680, align 8
  store i64 %1679, i64* %6, align 8
  store i64 %1676, i64* %3, align 8
  %call2_401661 = tail call %struct.Memory* @sub_4060f0._Z13test_constantIs24custom_constant_multiplyIsEEvPT_iPKc(%struct.State* %0, i64 %1676, %struct.Memory* %call2_40164e)
  %1681 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x41916f_type* @G__0x41916f to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41916f_type* @G__0x41916f to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %1682 = load i64, i64* %RBP.i, align 8
  %1683 = add i64 %1682, -64
  %1684 = add i64 %1681, 11
  store i64 %1684, i64* %PC.i, align 8
  %1685 = inttoptr i64 %1683 to i64*
  %1686 = load i64, i64* %1685, align 8
  store i64 %1686, i64* %RDI.i3614.pre-phi, align 8
  %1687 = add i64 %1682, -44
  %1688 = add i64 %1681, 14
  store i64 %1688, i64* %PC.i, align 8
  %1689 = inttoptr i64 %1687 to i32*
  %1690 = load i32, i32* %1689, align 4
  %1691 = zext i32 %1690 to i64
  store i64 %1691, i64* %RSI.i3629, align 8
  %1692 = add i64 %1681, 19258
  %1693 = add i64 %1681, 19
  %1694 = load i64, i64* %6, align 8
  %1695 = add i64 %1694, -8
  %1696 = inttoptr i64 %1695 to i64*
  store i64 %1693, i64* %1696, align 8
  store i64 %1695, i64* %6, align 8
  store i64 %1692, i64* %3, align 8
  %call2_401674 = tail call %struct.Memory* @sub_4061a0._Z13test_constantIs33custom_multiple_constant_multiplyIsEEvPT_iPKc(%struct.State* %0, i64 %1692, %struct.Memory* %call2_401661)
  %1697 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x419195_type* @G__0x419195 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419195_type* @G__0x419195 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %1698 = load i64, i64* %RBP.i, align 8
  %1699 = add i64 %1698, -64
  %1700 = add i64 %1697, 11
  store i64 %1700, i64* %PC.i, align 8
  %1701 = inttoptr i64 %1699 to i64*
  %1702 = load i64, i64* %1701, align 8
  store i64 %1702, i64* %RDI.i3614.pre-phi, align 8
  %1703 = add i64 %1698, -44
  %1704 = add i64 %1697, 14
  store i64 %1704, i64* %PC.i, align 8
  %1705 = inttoptr i64 %1703 to i32*
  %1706 = load i32, i32* %1705, align 4
  %1707 = zext i32 %1706 to i64
  store i64 %1707, i64* %RSI.i3629, align 8
  %1708 = add i64 %1697, 19415
  %1709 = add i64 %1697, 19
  %1710 = load i64, i64* %6, align 8
  %1711 = add i64 %1710, -8
  %1712 = inttoptr i64 %1711 to i64*
  store i64 %1709, i64* %1712, align 8
  store i64 %1711, i64* %6, align 8
  store i64 %1708, i64* %3, align 8
  %call2_401687 = tail call %struct.Memory* @sub_406250._Z13test_constantIs34custom_multiple_constant_multiply2IsEEvPT_iPKc(%struct.State* %0, i64 %1708, %struct.Memory* %call2_401674)
  %1713 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x4191ba_type* @G__0x4191ba to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4191ba_type* @G__0x4191ba to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %1714 = load i64, i64* %RBP.i, align 8
  %1715 = add i64 %1714, -64
  %1716 = add i64 %1713, 11
  store i64 %1716, i64* %PC.i, align 8
  %1717 = inttoptr i64 %1715 to i64*
  %1718 = load i64, i64* %1717, align 8
  store i64 %1718, i64* %RDI.i3614.pre-phi, align 8
  %1719 = add i64 %1714, -44
  %1720 = add i64 %1713, 14
  store i64 %1720, i64* %PC.i, align 8
  %1721 = inttoptr i64 %1719 to i32*
  %1722 = load i32, i32* %1721, align 4
  %1723 = zext i32 %1722 to i64
  store i64 %1723, i64* %RSI.i3629, align 8
  %1724 = add i64 %1713, 19572
  %1725 = add i64 %1713, 19
  %1726 = load i64, i64* %6, align 8
  %1727 = add i64 %1726, -8
  %1728 = inttoptr i64 %1727 to i64*
  store i64 %1725, i64* %1728, align 8
  store i64 %1727, i64* %6, align 8
  store i64 %1724, i64* %3, align 8
  %call2_40169a = tail call %struct.Memory* @sub_406300._Z13test_constantIs22custom_constant_divideIsEEvPT_iPKc(%struct.State* %0, i64 %1724, %struct.Memory* %call2_401687)
  %1729 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x4191d3_type* @G__0x4191d3 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4191d3_type* @G__0x4191d3 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %1730 = load i64, i64* %RBP.i, align 8
  %1731 = add i64 %1730, -64
  %1732 = add i64 %1729, 11
  store i64 %1732, i64* %PC.i, align 8
  %1733 = inttoptr i64 %1731 to i64*
  %1734 = load i64, i64* %1733, align 8
  store i64 %1734, i64* %RDI.i3614.pre-phi, align 8
  %1735 = add i64 %1730, -44
  %1736 = add i64 %1729, 14
  store i64 %1736, i64* %PC.i, align 8
  %1737 = inttoptr i64 %1735 to i32*
  %1738 = load i32, i32* %1737, align 4
  %1739 = zext i32 %1738 to i64
  store i64 %1739, i64* %RSI.i3629, align 8
  %1740 = add i64 %1729, 19729
  %1741 = add i64 %1729, 19
  %1742 = load i64, i64* %6, align 8
  %1743 = add i64 %1742, -8
  %1744 = inttoptr i64 %1743 to i64*
  store i64 %1741, i64* %1744, align 8
  store i64 %1743, i64* %6, align 8
  store i64 %1740, i64* %3, align 8
  %call2_4016ad = tail call %struct.Memory* @sub_4063b0._Z13test_constantIs31custom_multiple_constant_divideIsEEvPT_iPKc(%struct.State* %0, i64 %1740, %struct.Memory* %call2_40169a)
  %1745 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x4191f6_type* @G__0x4191f6 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4191f6_type* @G__0x4191f6 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %1746 = load i64, i64* %RBP.i, align 8
  %1747 = add i64 %1746, -64
  %1748 = add i64 %1745, 11
  store i64 %1748, i64* %PC.i, align 8
  %1749 = inttoptr i64 %1747 to i64*
  %1750 = load i64, i64* %1749, align 8
  store i64 %1750, i64* %RDI.i3614.pre-phi, align 8
  %1751 = add i64 %1746, -44
  %1752 = add i64 %1745, 14
  store i64 %1752, i64* %PC.i, align 8
  %1753 = inttoptr i64 %1751 to i32*
  %1754 = load i32, i32* %1753, align 4
  %1755 = zext i32 %1754 to i64
  store i64 %1755, i64* %RSI.i3629, align 8
  %1756 = add i64 %1745, 19886
  %1757 = add i64 %1745, 19
  %1758 = load i64, i64* %6, align 8
  %1759 = add i64 %1758, -8
  %1760 = inttoptr i64 %1759 to i64*
  store i64 %1757, i64* %1760, align 8
  store i64 %1759, i64* %6, align 8
  store i64 %1756, i64* %3, align 8
  %call2_4016c0 = tail call %struct.Memory* @sub_406460._Z13test_constantIs32custom_multiple_constant_divide2IsEEvPT_iPKc(%struct.State* %0, i64 %1756, %struct.Memory* %call2_4016ad)
  %1761 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x419219_type* @G__0x419219 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419219_type* @G__0x419219 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %1762 = load i64, i64* %RBP.i, align 8
  %1763 = add i64 %1762, -64
  %1764 = add i64 %1761, 11
  store i64 %1764, i64* %PC.i, align 8
  %1765 = inttoptr i64 %1763 to i64*
  %1766 = load i64, i64* %1765, align 8
  store i64 %1766, i64* %RDI.i3614.pre-phi, align 8
  %1767 = add i64 %1762, -44
  %1768 = add i64 %1761, 14
  store i64 %1768, i64* %PC.i, align 8
  %1769 = inttoptr i64 %1767 to i32*
  %1770 = load i32, i32* %1769, align 4
  %1771 = zext i32 %1770 to i64
  store i64 %1771, i64* %RSI.i3629, align 8
  %1772 = add i64 %1761, 20043
  %1773 = add i64 %1761, 19
  %1774 = load i64, i64* %6, align 8
  %1775 = add i64 %1774, -8
  %1776 = inttoptr i64 %1775 to i64*
  store i64 %1773, i64* %1776, align 8
  store i64 %1775, i64* %6, align 8
  store i64 %1772, i64* %3, align 8
  %call2_4016d3 = tail call %struct.Memory* @sub_406510._Z13test_constantIs30custom_multiple_constant_mixedIsEEvPT_iPKc(%struct.State* %0, i64 %1772, %struct.Memory* %call2_4016c0)
  %1777 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x41923a_type* @G__0x41923a to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41923a_type* @G__0x41923a to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %1778 = load i64, i64* %RBP.i, align 8
  %1779 = add i64 %1778, -64
  %1780 = add i64 %1777, 11
  store i64 %1780, i64* %PC.i, align 8
  %1781 = inttoptr i64 %1779 to i64*
  %1782 = load i64, i64* %1781, align 8
  store i64 %1782, i64* %RDI.i3614.pre-phi, align 8
  %1783 = add i64 %1778, -44
  %1784 = add i64 %1777, 14
  store i64 %1784, i64* %PC.i, align 8
  %1785 = inttoptr i64 %1783 to i32*
  %1786 = load i32, i32* %1785, align 4
  %1787 = zext i32 %1786 to i64
  store i64 %1787, i64* %RSI.i3629, align 8
  %1788 = add i64 %1777, 20200
  %1789 = add i64 %1777, 19
  %1790 = load i64, i64* %6, align 8
  %1791 = add i64 %1790, -8
  %1792 = inttoptr i64 %1791 to i64*
  store i64 %1789, i64* %1792, align 8
  store i64 %1791, i64* %6, align 8
  store i64 %1788, i64* %3, align 8
  %call2_4016e6 = tail call %struct.Memory* @sub_4065c0._Z13test_constantIs19custom_constant_andIsEEvPT_iPKc(%struct.State* %0, i64 %1788, %struct.Memory* %call2_4016d3)
  %1793 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x419250_type* @G__0x419250 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419250_type* @G__0x419250 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %1794 = load i64, i64* %RBP.i, align 8
  %1795 = add i64 %1794, -64
  %1796 = add i64 %1793, 11
  store i64 %1796, i64* %PC.i, align 8
  %1797 = inttoptr i64 %1795 to i64*
  %1798 = load i64, i64* %1797, align 8
  store i64 %1798, i64* %RDI.i3614.pre-phi, align 8
  %1799 = add i64 %1794, -44
  %1800 = add i64 %1793, 14
  store i64 %1800, i64* %PC.i, align 8
  %1801 = inttoptr i64 %1799 to i32*
  %1802 = load i32, i32* %1801, align 4
  %1803 = zext i32 %1802 to i64
  store i64 %1803, i64* %RSI.i3629, align 8
  %1804 = add i64 %1793, 20357
  %1805 = add i64 %1793, 19
  %1806 = load i64, i64* %6, align 8
  %1807 = add i64 %1806, -8
  %1808 = inttoptr i64 %1807 to i64*
  store i64 %1805, i64* %1808, align 8
  store i64 %1807, i64* %6, align 8
  store i64 %1804, i64* %3, align 8
  %call2_4016f9 = tail call %struct.Memory* @sub_406670._Z13test_constantIs28custom_multiple_constant_andIsEEvPT_iPKc(%struct.State* %0, i64 %1804, %struct.Memory* %call2_4016e6)
  %1809 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x41926f_type* @G__0x41926f to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41926f_type* @G__0x41926f to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %1810 = load i64, i64* %RBP.i, align 8
  %1811 = add i64 %1810, -64
  %1812 = add i64 %1809, 11
  store i64 %1812, i64* %PC.i, align 8
  %1813 = inttoptr i64 %1811 to i64*
  %1814 = load i64, i64* %1813, align 8
  store i64 %1814, i64* %RDI.i3614.pre-phi, align 8
  %1815 = add i64 %1810, -44
  %1816 = add i64 %1809, 14
  store i64 %1816, i64* %PC.i, align 8
  %1817 = inttoptr i64 %1815 to i32*
  %1818 = load i32, i32* %1817, align 4
  %1819 = zext i32 %1818 to i64
  store i64 %1819, i64* %RSI.i3629, align 8
  %1820 = add i64 %1809, 20514
  %1821 = add i64 %1809, 19
  %1822 = load i64, i64* %6, align 8
  %1823 = add i64 %1822, -8
  %1824 = inttoptr i64 %1823 to i64*
  store i64 %1821, i64* %1824, align 8
  store i64 %1823, i64* %6, align 8
  store i64 %1820, i64* %3, align 8
  %call2_40170c = tail call %struct.Memory* @sub_406720._Z13test_constantIs18custom_constant_orIsEEvPT_iPKc(%struct.State* %0, i64 %1820, %struct.Memory* %call2_4016f9)
  %1825 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x419284_type* @G__0x419284 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419284_type* @G__0x419284 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %1826 = load i64, i64* %RBP.i, align 8
  %1827 = add i64 %1826, -64
  %1828 = add i64 %1825, 11
  store i64 %1828, i64* %PC.i, align 8
  %1829 = inttoptr i64 %1827 to i64*
  %1830 = load i64, i64* %1829, align 8
  store i64 %1830, i64* %RDI.i3614.pre-phi, align 8
  %1831 = add i64 %1826, -44
  %1832 = add i64 %1825, 14
  store i64 %1832, i64* %PC.i, align 8
  %1833 = inttoptr i64 %1831 to i32*
  %1834 = load i32, i32* %1833, align 4
  %1835 = zext i32 %1834 to i64
  store i64 %1835, i64* %RSI.i3629, align 8
  %1836 = add i64 %1825, 20671
  %1837 = add i64 %1825, 19
  %1838 = load i64, i64* %6, align 8
  %1839 = add i64 %1838, -8
  %1840 = inttoptr i64 %1839 to i64*
  store i64 %1837, i64* %1840, align 8
  store i64 %1839, i64* %6, align 8
  store i64 %1836, i64* %3, align 8
  %call2_40171f = tail call %struct.Memory* @sub_4067d0._Z13test_constantIs27custom_multiple_constant_orIsEEvPT_iPKc(%struct.State* %0, i64 %1836, %struct.Memory* %call2_40170c)
  %1841 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x4192a2_type* @G__0x4192a2 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4192a2_type* @G__0x4192a2 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %1842 = load i64, i64* %RBP.i, align 8
  %1843 = add i64 %1842, -64
  %1844 = add i64 %1841, 11
  store i64 %1844, i64* %PC.i, align 8
  %1845 = inttoptr i64 %1843 to i64*
  %1846 = load i64, i64* %1845, align 8
  store i64 %1846, i64* %RDI.i3614.pre-phi, align 8
  %1847 = add i64 %1842, -44
  %1848 = add i64 %1841, 14
  store i64 %1848, i64* %PC.i, align 8
  %1849 = inttoptr i64 %1847 to i32*
  %1850 = load i32, i32* %1849, align 4
  %1851 = zext i32 %1850 to i64
  store i64 %1851, i64* %RSI.i3629, align 8
  %1852 = add i64 %1841, 20828
  %1853 = add i64 %1841, 19
  %1854 = load i64, i64* %6, align 8
  %1855 = add i64 %1854, -8
  %1856 = inttoptr i64 %1855 to i64*
  store i64 %1853, i64* %1856, align 8
  store i64 %1855, i64* %6, align 8
  store i64 %1852, i64* %3, align 8
  %call2_401732 = tail call %struct.Memory* @sub_406880._Z13test_constantIs19custom_constant_xorIsEEvPT_iPKc(%struct.State* %0, i64 %1852, %struct.Memory* %call2_40171f)
  %1857 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x4192b8_type* @G__0x4192b8 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4192b8_type* @G__0x4192b8 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %1858 = load i64, i64* %RBP.i, align 8
  %1859 = add i64 %1858, -64
  %1860 = add i64 %1857, 11
  store i64 %1860, i64* %PC.i, align 8
  %1861 = inttoptr i64 %1859 to i64*
  %1862 = load i64, i64* %1861, align 8
  store i64 %1862, i64* %RDI.i3614.pre-phi, align 8
  %1863 = add i64 %1858, -44
  %1864 = add i64 %1857, 14
  store i64 %1864, i64* %PC.i, align 8
  %1865 = inttoptr i64 %1863 to i32*
  %1866 = load i32, i32* %1865, align 4
  %1867 = zext i32 %1866 to i64
  store i64 %1867, i64* %RSI.i3629, align 8
  %1868 = add i64 %1857, 20985
  %1869 = add i64 %1857, 19
  %1870 = load i64, i64* %6, align 8
  %1871 = add i64 %1870, -8
  %1872 = inttoptr i64 %1871 to i64*
  store i64 %1869, i64* %1872, align 8
  store i64 %1871, i64* %6, align 8
  store i64 %1868, i64* %3, align 8
  %call2_401745 = tail call %struct.Memory* @sub_406930._Z13test_constantIs28custom_multiple_constant_xorIsEEvPT_iPKc(%struct.State* %0, i64 %1868, %struct.Memory* %call2_401732)
  %1873 = load i64, i64* %PC.i, align 8
  %1874 = load double, double* bitcast (%G_0x220936__rip__type* @G_0x220936__rip_ to double*), align 8
  %1875 = tail call double @llvm.trunc.f64(double %1874)
  %1876 = tail call double @llvm.fabs.f64(double %1875)
  %1877 = fcmp ogt double %1876, 0x41DFFFFFFFC00000
  %1878 = fptosi double %1875 to i32
  store i64 and (i64 ptrtoint (%G__0x6685d0_type* @G__0x6685d0 to i64), i64 4294967295), i64* %194, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x6685d0_type* @G__0x6685d0 to i64), i64 4294967295) to i32) to i64), i64* %.pre18, align 8
  %1879 = trunc i32 %1878 to i16
  %1880 = select i1 %1877, i16 0, i16 %1879
  %1881 = zext i16 %1880 to i64
  store i16 %1880, i16* %R10W.i2748, align 2
  store i64 %1881, i64* %RDX.i3618, align 8
  store i64 and (i64 ptrtoint (%G__0x66c450_type* @G__0x66c450 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x6685d0_type* @G__0x6685d0 to i64), i64 4294967295) to i32) to i64), i64* %RDI.i3614.pre-phi, align 8
  %1882 = load i64, i64* %RBP.i, align 8
  %1883 = add i64 %1882, -72
  %1884 = add i64 %1873, 37
  store i64 %1884, i64* %PC.i, align 8
  %1885 = inttoptr i64 %1883 to i64*
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x6685d0_type* @G__0x6685d0 to i64), i64 4294967295) to i32) to i64), i64* %1885, align 8
  %1886 = load i64, i64* %PC.i, align 8
  %1887 = add i64 %1886, 21105
  %1888 = add i64 %1886, 5
  %1889 = load i64, i64* %6, align 8
  %1890 = add i64 %1889, -8
  %1891 = inttoptr i64 %1890 to i64*
  store i64 %1888, i64* %1891, align 8
  store i64 %1890, i64* %6, align 8
  store i64 %1887, i64* %3, align 8
  %call2_40176f = tail call %struct.Memory* @sub_4069e0._Z4fillIPttEvT_S1_T0_(%struct.State* %0, i64 %1887, %struct.Memory* %call2_401745)
  %1892 = load i64, i64* %PC.i, align 8
  %1893 = load i32, i32* bitcast (%G_0x220906__rip__type* @G_0x220906__rip_ to i32*), align 8
  store i32 %1893, i32* bitcast (%G_0x220940__rip__type* @G_0x220940__rip_ to i32*), align 8
  store i64 and (i64 ptrtoint (%G__0x418f4c_type* @G__0x418f4c to i64), i64 4294967295), i64* %RDX.i3618, align 8
  %1894 = load i64, i64* %RBP.i, align 8
  %1895 = add i64 %1894, -72
  %1896 = add i64 %1892, 21
  store i64 %1896, i64* %PC.i, align 8
  %1897 = inttoptr i64 %1895 to i64*
  %1898 = load i64, i64* %1897, align 8
  store i64 %1898, i64* %RDI.i3614.pre-phi, align 8
  %1899 = add i64 %1894, -44
  %1900 = add i64 %1892, 24
  store i64 %1900, i64* %PC.i, align 8
  %1901 = inttoptr i64 %1899 to i32*
  %1902 = load i32, i32* %1901, align 4
  %1903 = zext i32 %1902 to i64
  store i64 %1903, i64* %RSI.i3629, align 8
  %1904 = add i64 %1892, 21164
  %1905 = add i64 %1892, 29
  %1906 = load i64, i64* %6, align 8
  %1907 = add i64 %1906, -8
  %1908 = inttoptr i64 %1907 to i64*
  store i64 %1905, i64* %1908, align 8
  store i64 %1907, i64* %6, align 8
  store i64 %1904, i64* %3, align 8
  %call2_40178c = tail call %struct.Memory* @sub_406a20._Z13test_constantIt10custom_twoItEEvPT_iPKc(%struct.State* %0, i64 %1904, %struct.Memory* %call2_40176f)
  %1909 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x418f5e_type* @G__0x418f5e to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418f5e_type* @G__0x418f5e to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %1910 = load i64, i64* %RBP.i, align 8
  %1911 = add i64 %1910, -72
  %1912 = add i64 %1909, 11
  store i64 %1912, i64* %PC.i, align 8
  %1913 = inttoptr i64 %1911 to i64*
  %1914 = load i64, i64* %1913, align 8
  store i64 %1914, i64* %RDI.i3614.pre-phi, align 8
  %1915 = add i64 %1910, -44
  %1916 = add i64 %1909, 14
  store i64 %1916, i64* %PC.i, align 8
  %1917 = inttoptr i64 %1915 to i32*
  %1918 = load i32, i32* %1917, align 4
  %1919 = zext i32 %1918 to i64
  store i64 %1919, i64* %RSI.i3629, align 8
  %1920 = add i64 %1909, 21311
  %1921 = add i64 %1909, 19
  %1922 = load i64, i64* %6, align 8
  %1923 = add i64 %1922, -8
  %1924 = inttoptr i64 %1923 to i64*
  store i64 %1921, i64* %1924, align 8
  store i64 %1923, i64* %6, align 8
  store i64 %1920, i64* %3, align 8
  %call2_40179f = tail call %struct.Memory* @sub_406ad0._Z13test_constantIt20custom_add_constantsItEEvPT_iPKc(%struct.State* %0, i64 %1920, %struct.Memory* %call2_40178c)
  %1925 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x418f75_type* @G__0x418f75 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418f75_type* @G__0x418f75 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %1926 = load i64, i64* %RBP.i, align 8
  %1927 = add i64 %1926, -72
  %1928 = add i64 %1925, 11
  store i64 %1928, i64* %PC.i, align 8
  %1929 = inttoptr i64 %1927 to i64*
  %1930 = load i64, i64* %1929, align 8
  store i64 %1930, i64* %RDI.i3614.pre-phi, align 8
  %1931 = add i64 %1926, -44
  %1932 = add i64 %1925, 14
  store i64 %1932, i64* %PC.i, align 8
  %1933 = inttoptr i64 %1931 to i32*
  %1934 = load i32, i32* %1933, align 4
  %1935 = zext i32 %1934 to i64
  store i64 %1935, i64* %RSI.i3629, align 8
  %1936 = add i64 %1925, 21468
  %1937 = add i64 %1925, 19
  %1938 = load i64, i64* %6, align 8
  %1939 = add i64 %1938, -8
  %1940 = inttoptr i64 %1939 to i64*
  store i64 %1937, i64* %1940, align 8
  store i64 %1939, i64* %6, align 8
  store i64 %1936, i64* %3, align 8
  %call2_4017b2 = tail call %struct.Memory* @sub_406b80._Z13test_constantIt20custom_sub_constantsItEEvPT_iPKc(%struct.State* %0, i64 %1936, %struct.Memory* %call2_40179f)
  %1941 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x418f91_type* @G__0x418f91 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418f91_type* @G__0x418f91 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %1942 = load i64, i64* %RBP.i, align 8
  %1943 = add i64 %1942, -72
  %1944 = add i64 %1941, 11
  store i64 %1944, i64* %PC.i, align 8
  %1945 = inttoptr i64 %1943 to i64*
  %1946 = load i64, i64* %1945, align 8
  store i64 %1946, i64* %RDI.i3614.pre-phi, align 8
  %1947 = add i64 %1942, -44
  %1948 = add i64 %1941, 14
  store i64 %1948, i64* %PC.i, align 8
  %1949 = inttoptr i64 %1947 to i32*
  %1950 = load i32, i32* %1949, align 4
  %1951 = zext i32 %1950 to i64
  store i64 %1951, i64* %RSI.i3629, align 8
  %1952 = add i64 %1941, 21625
  %1953 = add i64 %1941, 19
  %1954 = load i64, i64* %6, align 8
  %1955 = add i64 %1954, -8
  %1956 = inttoptr i64 %1955 to i64*
  store i64 %1953, i64* %1956, align 8
  store i64 %1955, i64* %6, align 8
  store i64 %1952, i64* %3, align 8
  %call2_4017c5 = tail call %struct.Memory* @sub_406c30._Z13test_constantIt25custom_multiply_constantsItEEvPT_iPKc(%struct.State* %0, i64 %1952, %struct.Memory* %call2_4017b2)
  %1957 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x418fad_type* @G__0x418fad to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418fad_type* @G__0x418fad to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %1958 = load i64, i64* %RBP.i, align 8
  %1959 = add i64 %1958, -72
  %1960 = add i64 %1957, 11
  store i64 %1960, i64* %PC.i, align 8
  %1961 = inttoptr i64 %1959 to i64*
  %1962 = load i64, i64* %1961, align 8
  store i64 %1962, i64* %RDI.i3614.pre-phi, align 8
  %1963 = add i64 %1958, -44
  %1964 = add i64 %1957, 14
  store i64 %1964, i64* %PC.i, align 8
  %1965 = inttoptr i64 %1963 to i32*
  %1966 = load i32, i32* %1965, align 4
  %1967 = zext i32 %1966 to i64
  store i64 %1967, i64* %RSI.i3629, align 8
  %1968 = add i64 %1957, 21782
  %1969 = add i64 %1957, 19
  %1970 = load i64, i64* %6, align 8
  %1971 = add i64 %1970, -8
  %1972 = inttoptr i64 %1971 to i64*
  store i64 %1969, i64* %1972, align 8
  store i64 %1971, i64* %6, align 8
  store i64 %1968, i64* %3, align 8
  %call2_4017d8 = tail call %struct.Memory* @sub_406ce0._Z13test_constantIt23custom_divide_constantsItEEvPT_iPKc(%struct.State* %0, i64 %1968, %struct.Memory* %call2_4017c5)
  %1973 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x418fc7_type* @G__0x418fc7 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418fc7_type* @G__0x418fc7 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %1974 = load i64, i64* %RBP.i, align 8
  %1975 = add i64 %1974, -72
  %1976 = add i64 %1973, 11
  store i64 %1976, i64* %PC.i, align 8
  %1977 = inttoptr i64 %1975 to i64*
  %1978 = load i64, i64* %1977, align 8
  store i64 %1978, i64* %RDI.i3614.pre-phi, align 8
  %1979 = add i64 %1974, -44
  %1980 = add i64 %1973, 14
  store i64 %1980, i64* %PC.i, align 8
  %1981 = inttoptr i64 %1979 to i32*
  %1982 = load i32, i32* %1981, align 4
  %1983 = zext i32 %1982 to i64
  store i64 %1983, i64* %RSI.i3629, align 8
  %1984 = add i64 %1973, 21939
  %1985 = add i64 %1973, 19
  %1986 = load i64, i64* %6, align 8
  %1987 = add i64 %1986, -8
  %1988 = inttoptr i64 %1987 to i64*
  store i64 %1985, i64* %1988, align 8
  store i64 %1987, i64* %6, align 8
  store i64 %1984, i64* %3, align 8
  %call2_4017eb = tail call %struct.Memory* @sub_406d90._Z13test_constantIt20custom_mod_constantsItEEvPT_iPKc(%struct.State* %0, i64 %1984, %struct.Memory* %call2_4017d8)
  %1989 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x418fde_type* @G__0x418fde to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418fde_type* @G__0x418fde to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %1990 = load i64, i64* %RBP.i, align 8
  %1991 = add i64 %1990, -72
  %1992 = add i64 %1989, 11
  store i64 %1992, i64* %PC.i, align 8
  %1993 = inttoptr i64 %1991 to i64*
  %1994 = load i64, i64* %1993, align 8
  store i64 %1994, i64* %RDI.i3614.pre-phi, align 8
  %1995 = add i64 %1990, -44
  %1996 = add i64 %1989, 14
  store i64 %1996, i64* %PC.i, align 8
  %1997 = inttoptr i64 %1995 to i32*
  %1998 = load i32, i32* %1997, align 4
  %1999 = zext i32 %1998 to i64
  store i64 %1999, i64* %RSI.i3629, align 8
  %2000 = add i64 %1989, 22096
  %2001 = add i64 %1989, 19
  %2002 = load i64, i64* %6, align 8
  %2003 = add i64 %2002, -8
  %2004 = inttoptr i64 %2003 to i64*
  store i64 %2001, i64* %2004, align 8
  store i64 %2003, i64* %6, align 8
  store i64 %2000, i64* %3, align 8
  %call2_4017fe = tail call %struct.Memory* @sub_406e40._Z13test_constantIt22custom_equal_constantsItEEvPT_iPKc(%struct.State* %0, i64 %2000, %struct.Memory* %call2_4017eb)
  %2005 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x418ff7_type* @G__0x418ff7 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418ff7_type* @G__0x418ff7 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %2006 = load i64, i64* %RBP.i, align 8
  %2007 = add i64 %2006, -72
  %2008 = add i64 %2005, 11
  store i64 %2008, i64* %PC.i, align 8
  %2009 = inttoptr i64 %2007 to i64*
  %2010 = load i64, i64* %2009, align 8
  store i64 %2010, i64* %RDI.i3614.pre-phi, align 8
  %2011 = add i64 %2006, -44
  %2012 = add i64 %2005, 14
  store i64 %2012, i64* %PC.i, align 8
  %2013 = inttoptr i64 %2011 to i32*
  %2014 = load i32, i32* %2013, align 4
  %2015 = zext i32 %2014 to i64
  store i64 %2015, i64* %RSI.i3629, align 8
  %2016 = add i64 %2005, 22253
  %2017 = add i64 %2005, 19
  %2018 = load i64, i64* %6, align 8
  %2019 = add i64 %2018, -8
  %2020 = inttoptr i64 %2019 to i64*
  store i64 %2017, i64* %2020, align 8
  store i64 %2019, i64* %6, align 8
  store i64 %2016, i64* %3, align 8
  %call2_401811 = tail call %struct.Memory* @sub_406ef0._Z13test_constantIt25custom_notequal_constantsItEEvPT_iPKc(%struct.State* %0, i64 %2016, %struct.Memory* %call2_4017fe)
  %2021 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x419013_type* @G__0x419013 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419013_type* @G__0x419013 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %2022 = load i64, i64* %RBP.i, align 8
  %2023 = add i64 %2022, -72
  %2024 = add i64 %2021, 11
  store i64 %2024, i64* %PC.i, align 8
  %2025 = inttoptr i64 %2023 to i64*
  %2026 = load i64, i64* %2025, align 8
  store i64 %2026, i64* %RDI.i3614.pre-phi, align 8
  %2027 = add i64 %2022, -44
  %2028 = add i64 %2021, 14
  store i64 %2028, i64* %PC.i, align 8
  %2029 = inttoptr i64 %2027 to i32*
  %2030 = load i32, i32* %2029, align 4
  %2031 = zext i32 %2030 to i64
  store i64 %2031, i64* %RSI.i3629, align 8
  %2032 = add i64 %2021, 22410
  %2033 = add i64 %2021, 19
  %2034 = load i64, i64* %6, align 8
  %2035 = add i64 %2034, -8
  %2036 = inttoptr i64 %2035 to i64*
  store i64 %2033, i64* %2036, align 8
  store i64 %2035, i64* %6, align 8
  store i64 %2032, i64* %3, align 8
  %call2_401824 = tail call %struct.Memory* @sub_406fa0._Z13test_constantIt28custom_greaterthan_constantsItEEvPT_iPKc(%struct.State* %0, i64 %2032, %struct.Memory* %call2_401811)
  %2037 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x419033_type* @G__0x419033 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419033_type* @G__0x419033 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %2038 = load i64, i64* %RBP.i, align 8
  %2039 = add i64 %2038, -72
  %2040 = add i64 %2037, 11
  store i64 %2040, i64* %PC.i, align 8
  %2041 = inttoptr i64 %2039 to i64*
  %2042 = load i64, i64* %2041, align 8
  store i64 %2042, i64* %RDI.i3614.pre-phi, align 8
  %2043 = add i64 %2038, -44
  %2044 = add i64 %2037, 14
  store i64 %2044, i64* %PC.i, align 8
  %2045 = inttoptr i64 %2043 to i32*
  %2046 = load i32, i32* %2045, align 4
  %2047 = zext i32 %2046 to i64
  store i64 %2047, i64* %RSI.i3629, align 8
  %2048 = add i64 %2037, 22567
  %2049 = add i64 %2037, 19
  %2050 = load i64, i64* %6, align 8
  %2051 = add i64 %2050, -8
  %2052 = inttoptr i64 %2051 to i64*
  store i64 %2049, i64* %2052, align 8
  store i64 %2051, i64* %6, align 8
  store i64 %2048, i64* %3, align 8
  %call2_401837 = tail call %struct.Memory* @sub_407050._Z13test_constantIt25custom_lessthan_constantsItEEvPT_iPKc(%struct.State* %0, i64 %2048, %struct.Memory* %call2_401824)
  %2053 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x419050_type* @G__0x419050 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419050_type* @G__0x419050 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %2054 = load i64, i64* %RBP.i, align 8
  %2055 = add i64 %2054, -72
  %2056 = add i64 %2053, 11
  store i64 %2056, i64* %PC.i, align 8
  %2057 = inttoptr i64 %2055 to i64*
  %2058 = load i64, i64* %2057, align 8
  store i64 %2058, i64* %RDI.i3614.pre-phi, align 8
  %2059 = add i64 %2054, -44
  %2060 = add i64 %2053, 14
  store i64 %2060, i64* %PC.i, align 8
  %2061 = inttoptr i64 %2059 to i32*
  %2062 = load i32, i32* %2061, align 4
  %2063 = zext i32 %2062 to i64
  store i64 %2063, i64* %RSI.i3629, align 8
  %2064 = add i64 %2053, 22724
  %2065 = add i64 %2053, 19
  %2066 = load i64, i64* %6, align 8
  %2067 = add i64 %2066, -8
  %2068 = inttoptr i64 %2067 to i64*
  store i64 %2065, i64* %2068, align 8
  store i64 %2067, i64* %6, align 8
  store i64 %2064, i64* %3, align 8
  %call2_40184a = tail call %struct.Memory* @sub_407100._Z13test_constantIt33custom_greaterthanequal_constantsItEEvPT_iPKc(%struct.State* %0, i64 %2064, %struct.Memory* %call2_401837)
  %2069 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x419076_type* @G__0x419076 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419076_type* @G__0x419076 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %2070 = load i64, i64* %RBP.i, align 8
  %2071 = add i64 %2070, -72
  %2072 = add i64 %2069, 11
  store i64 %2072, i64* %PC.i, align 8
  %2073 = inttoptr i64 %2071 to i64*
  %2074 = load i64, i64* %2073, align 8
  store i64 %2074, i64* %RDI.i3614.pre-phi, align 8
  %2075 = add i64 %2070, -44
  %2076 = add i64 %2069, 14
  store i64 %2076, i64* %PC.i, align 8
  %2077 = inttoptr i64 %2075 to i32*
  %2078 = load i32, i32* %2077, align 4
  %2079 = zext i32 %2078 to i64
  store i64 %2079, i64* %RSI.i3629, align 8
  %2080 = add i64 %2069, 22881
  %2081 = add i64 %2069, 19
  %2082 = load i64, i64* %6, align 8
  %2083 = add i64 %2082, -8
  %2084 = inttoptr i64 %2083 to i64*
  store i64 %2081, i64* %2084, align 8
  store i64 %2083, i64* %6, align 8
  store i64 %2080, i64* %3, align 8
  %call2_40185d = tail call %struct.Memory* @sub_4071b0._Z13test_constantIt30custom_lessthanequal_constantsItEEvPT_iPKc(%struct.State* %0, i64 %2080, %struct.Memory* %call2_40184a)
  %2085 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x419099_type* @G__0x419099 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419099_type* @G__0x419099 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %2086 = load i64, i64* %RBP.i, align 8
  %2087 = add i64 %2086, -72
  %2088 = add i64 %2085, 11
  store i64 %2088, i64* %PC.i, align 8
  %2089 = inttoptr i64 %2087 to i64*
  %2090 = load i64, i64* %2089, align 8
  store i64 %2090, i64* %RDI.i3614.pre-phi, align 8
  %2091 = add i64 %2086, -44
  %2092 = add i64 %2085, 14
  store i64 %2092, i64* %PC.i, align 8
  %2093 = inttoptr i64 %2091 to i32*
  %2094 = load i32, i32* %2093, align 4
  %2095 = zext i32 %2094 to i64
  store i64 %2095, i64* %RSI.i3629, align 8
  %2096 = add i64 %2085, 23038
  %2097 = add i64 %2085, 19
  %2098 = load i64, i64* %6, align 8
  %2099 = add i64 %2098, -8
  %2100 = inttoptr i64 %2099 to i64*
  store i64 %2097, i64* %2100, align 8
  store i64 %2099, i64* %6, align 8
  store i64 %2096, i64* %3, align 8
  %call2_401870 = tail call %struct.Memory* @sub_407260._Z13test_constantIt20custom_and_constantsItEEvPT_iPKc(%struct.State* %0, i64 %2096, %struct.Memory* %call2_40185d)
  %2101 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x4190b0_type* @G__0x4190b0 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4190b0_type* @G__0x4190b0 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %2102 = load i64, i64* %RBP.i, align 8
  %2103 = add i64 %2102, -72
  %2104 = add i64 %2101, 11
  store i64 %2104, i64* %PC.i, align 8
  %2105 = inttoptr i64 %2103 to i64*
  %2106 = load i64, i64* %2105, align 8
  store i64 %2106, i64* %RDI.i3614.pre-phi, align 8
  %2107 = add i64 %2102, -44
  %2108 = add i64 %2101, 14
  store i64 %2108, i64* %PC.i, align 8
  %2109 = inttoptr i64 %2107 to i32*
  %2110 = load i32, i32* %2109, align 4
  %2111 = zext i32 %2110 to i64
  store i64 %2111, i64* %RSI.i3629, align 8
  %2112 = add i64 %2101, 23195
  %2113 = add i64 %2101, 19
  %2114 = load i64, i64* %6, align 8
  %2115 = add i64 %2114, -8
  %2116 = inttoptr i64 %2115 to i64*
  store i64 %2113, i64* %2116, align 8
  store i64 %2115, i64* %6, align 8
  store i64 %2112, i64* %3, align 8
  %call2_401883 = tail call %struct.Memory* @sub_407310._Z13test_constantIt19custom_or_constantsItEEvPT_iPKc(%struct.State* %0, i64 %2112, %struct.Memory* %call2_401870)
  %2117 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x4190c6_type* @G__0x4190c6 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4190c6_type* @G__0x4190c6 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %2118 = load i64, i64* %RBP.i, align 8
  %2119 = add i64 %2118, -72
  %2120 = add i64 %2117, 11
  store i64 %2120, i64* %PC.i, align 8
  %2121 = inttoptr i64 %2119 to i64*
  %2122 = load i64, i64* %2121, align 8
  store i64 %2122, i64* %RDI.i3614.pre-phi, align 8
  %2123 = add i64 %2118, -44
  %2124 = add i64 %2117, 14
  store i64 %2124, i64* %PC.i, align 8
  %2125 = inttoptr i64 %2123 to i32*
  %2126 = load i32, i32* %2125, align 4
  %2127 = zext i32 %2126 to i64
  store i64 %2127, i64* %RSI.i3629, align 8
  %2128 = add i64 %2117, 23352
  %2129 = add i64 %2117, 19
  %2130 = load i64, i64* %6, align 8
  %2131 = add i64 %2130, -8
  %2132 = inttoptr i64 %2131 to i64*
  store i64 %2129, i64* %2132, align 8
  store i64 %2131, i64* %6, align 8
  store i64 %2128, i64* %3, align 8
  %call2_401896 = tail call %struct.Memory* @sub_4073c0._Z13test_constantIt20custom_xor_constantsItEEvPT_iPKc(%struct.State* %0, i64 %2128, %struct.Memory* %call2_401883)
  %2133 = load i64, i64* %PC.i, align 8
  %2134 = load i32, i32* bitcast (%G_0x2207de__rip__type* @G_0x2207de__rip_ to i32*), align 8
  %2135 = sext i32 %2134 to i64
  %2136 = mul nsw i64 %2135, 1717986919
  %2137 = lshr i64 %2136, 63
  store i64 %2137, i64* %RCX.i3623, align 8
  %2138 = ashr i64 %2136, 34
  store i64 %2138, i64* %.pre18, align 8
  %2139 = trunc i64 %2138 to i32
  %2140 = trunc i64 %2137 to i32
  %2141 = add i32 %2140, %2139
  %2142 = zext i32 %2141 to i64
  store i64 %2142, i64* %194, align 8
  %2143 = icmp ult i32 %2141, %2139
  %2144 = icmp ult i32 %2141, %2140
  %2145 = or i1 %2143, %2144
  %2146 = zext i1 %2145 to i8
  store i8 %2146, i8* %14, align 1
  %2147 = and i32 %2141, 255
  %2148 = tail call i32 @llvm.ctpop.i32(i32 %2147)
  %2149 = trunc i32 %2148 to i8
  %2150 = and i8 %2149, 1
  %2151 = xor i8 %2150, 1
  store i8 %2151, i8* %21, align 1
  %2152 = trunc i64 %2138 to i32
  %2153 = xor i32 %2152, %2141
  %2154 = lshr i32 %2153, 4
  %2155 = trunc i32 %2154 to i8
  %2156 = and i8 %2155, 1
  store i8 %2156, i8* %27, align 1
  %2157 = icmp eq i32 %2141, 0
  %2158 = zext i1 %2157 to i8
  store i8 %2158, i8* %30, align 1
  %2159 = lshr i32 %2141, 31
  %2160 = trunc i32 %2159 to i8
  store i8 %2160, i8* %33, align 1
  %2161 = lshr i64 %2138, 31
  %2162 = trunc i64 %2161 to i32
  %2163 = and i32 %2162, 1
  %2164 = xor i32 %2159, %2163
  %2165 = add nuw nsw i32 %2164, %2159
  %2166 = icmp eq i32 %2165, 2
  %2167 = zext i1 %2166 to i8
  store i8 %2167, i8* %39, align 1
  store i32 %2141, i32* bitcast (%G_0x2207fd__rip__type* @G_0x2207fd__rip_ to i32*), align 8
  store i64 and (i64 ptrtoint (%G__0x4190dd_type* @G__0x4190dd to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4190dd_type* @G__0x4190dd to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %2168 = load i64, i64* %RBP.i, align 8
  %2169 = add i64 %2168, -72
  %2170 = add i64 %2133, 51
  store i64 %2170, i64* %PC.i, align 8
  %2171 = inttoptr i64 %2169 to i64*
  %2172 = load i64, i64* %2171, align 8
  store i64 %2172, i64* %RDI.i3614.pre-phi, align 8
  %2173 = add i64 %2168, -44
  %2174 = add i64 %2133, 54
  store i64 %2174, i64* %PC.i, align 8
  %2175 = inttoptr i64 %2173 to i32*
  %2176 = load i32, i32* %2175, align 4
  %2177 = zext i32 %2176 to i64
  store i64 %2177, i64* %RSI.i3629, align 8
  %2178 = add i64 %2133, 23509
  %2179 = add i64 %2133, 59
  %2180 = load i64, i64* %6, align 8
  %2181 = add i64 %2180, -8
  %2182 = inttoptr i64 %2181 to i64*
  store i64 %2179, i64* %2182, align 8
  store i64 %2181, i64* %6, align 8
  store i64 %2178, i64* %3, align 8
  %call2_4018d1 = tail call %struct.Memory* @sub_407470._Z13test_constantIt19custom_constant_addItEEvPT_iPKc(%struct.State* %0, i64 %2178, %struct.Memory* %call2_401896)
  %2183 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x4190f3_type* @G__0x4190f3 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4190f3_type* @G__0x4190f3 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %2184 = load i64, i64* %RBP.i, align 8
  %2185 = add i64 %2184, -72
  %2186 = add i64 %2183, 11
  store i64 %2186, i64* %PC.i, align 8
  %2187 = inttoptr i64 %2185 to i64*
  %2188 = load i64, i64* %2187, align 8
  store i64 %2188, i64* %RDI.i3614.pre-phi, align 8
  %2189 = add i64 %2184, -44
  %2190 = add i64 %2183, 14
  store i64 %2190, i64* %PC.i, align 8
  %2191 = inttoptr i64 %2189 to i32*
  %2192 = load i32, i32* %2191, align 4
  %2193 = zext i32 %2192 to i64
  store i64 %2193, i64* %RSI.i3629, align 8
  %2194 = add i64 %2183, 23626
  %2195 = add i64 %2183, 19
  %2196 = load i64, i64* %6, align 8
  %2197 = add i64 %2196, -8
  %2198 = inttoptr i64 %2197 to i64*
  store i64 %2195, i64* %2198, align 8
  store i64 %2197, i64* %6, align 8
  store i64 %2194, i64* %3, align 8
  %call2_4018e4 = tail call %struct.Memory* @sub_407520._Z13test_constantIt28custom_multiple_constant_addItEEvPT_iPKc(%struct.State* %0, i64 %2194, %struct.Memory* %call2_4018d1)
  %2199 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x419113_type* @G__0x419113 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419113_type* @G__0x419113 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %2200 = load i64, i64* %RBP.i, align 8
  %2201 = add i64 %2200, -72
  %2202 = add i64 %2199, 11
  store i64 %2202, i64* %PC.i, align 8
  %2203 = inttoptr i64 %2201 to i64*
  %2204 = load i64, i64* %2203, align 8
  store i64 %2204, i64* %RDI.i3614.pre-phi, align 8
  %2205 = add i64 %2200, -44
  %2206 = add i64 %2199, 14
  store i64 %2206, i64* %PC.i, align 8
  %2207 = inttoptr i64 %2205 to i32*
  %2208 = load i32, i32* %2207, align 4
  %2209 = zext i32 %2208 to i64
  store i64 %2209, i64* %RSI.i3629, align 8
  %2210 = add i64 %2199, 23783
  %2211 = add i64 %2199, 19
  %2212 = load i64, i64* %6, align 8
  %2213 = add i64 %2212, -8
  %2214 = inttoptr i64 %2213 to i64*
  store i64 %2211, i64* %2214, align 8
  store i64 %2213, i64* %6, align 8
  store i64 %2210, i64* %3, align 8
  %call2_4018f7 = tail call %struct.Memory* @sub_4075d0._Z13test_constantIt19custom_constant_subItEEvPT_iPKc(%struct.State* %0, i64 %2210, %struct.Memory* %call2_4018e4)
  %2215 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x41912e_type* @G__0x41912e to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41912e_type* @G__0x41912e to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %2216 = load i64, i64* %RBP.i, align 8
  %2217 = add i64 %2216, -72
  %2218 = add i64 %2215, 11
  store i64 %2218, i64* %PC.i, align 8
  %2219 = inttoptr i64 %2217 to i64*
  %2220 = load i64, i64* %2219, align 8
  store i64 %2220, i64* %RDI.i3614.pre-phi, align 8
  %2221 = add i64 %2216, -44
  %2222 = add i64 %2215, 14
  store i64 %2222, i64* %PC.i, align 8
  %2223 = inttoptr i64 %2221 to i32*
  %2224 = load i32, i32* %2223, align 4
  %2225 = zext i32 %2224 to i64
  store i64 %2225, i64* %RSI.i3629, align 8
  %2226 = add i64 %2215, 23940
  %2227 = add i64 %2215, 19
  %2228 = load i64, i64* %6, align 8
  %2229 = add i64 %2228, -8
  %2230 = inttoptr i64 %2229 to i64*
  store i64 %2227, i64* %2230, align 8
  store i64 %2229, i64* %6, align 8
  store i64 %2226, i64* %3, align 8
  %call2_40190a = tail call %struct.Memory* @sub_407680._Z13test_constantIt28custom_multiple_constant_subItEEvPT_iPKc(%struct.State* %0, i64 %2226, %struct.Memory* %call2_4018f7)
  %2231 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x419153_type* @G__0x419153 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419153_type* @G__0x419153 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %2232 = load i64, i64* %RBP.i, align 8
  %2233 = add i64 %2232, -72
  %2234 = add i64 %2231, 11
  store i64 %2234, i64* %PC.i, align 8
  %2235 = inttoptr i64 %2233 to i64*
  %2236 = load i64, i64* %2235, align 8
  store i64 %2236, i64* %RDI.i3614.pre-phi, align 8
  %2237 = add i64 %2232, -44
  %2238 = add i64 %2231, 14
  store i64 %2238, i64* %PC.i, align 8
  %2239 = inttoptr i64 %2237 to i32*
  %2240 = load i32, i32* %2239, align 4
  %2241 = zext i32 %2240 to i64
  store i64 %2241, i64* %RSI.i3629, align 8
  %2242 = add i64 %2231, 24097
  %2243 = add i64 %2231, 19
  %2244 = load i64, i64* %6, align 8
  %2245 = add i64 %2244, -8
  %2246 = inttoptr i64 %2245 to i64*
  store i64 %2243, i64* %2246, align 8
  store i64 %2245, i64* %6, align 8
  store i64 %2242, i64* %3, align 8
  %call2_40191d = tail call %struct.Memory* @sub_407730._Z13test_constantIt24custom_constant_multiplyItEEvPT_iPKc(%struct.State* %0, i64 %2242, %struct.Memory* %call2_40190a)
  %2247 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x41916e_type* @G__0x41916e to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41916e_type* @G__0x41916e to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %2248 = load i64, i64* %RBP.i, align 8
  %2249 = add i64 %2248, -72
  %2250 = add i64 %2247, 11
  store i64 %2250, i64* %PC.i, align 8
  %2251 = inttoptr i64 %2249 to i64*
  %2252 = load i64, i64* %2251, align 8
  store i64 %2252, i64* %RDI.i3614.pre-phi, align 8
  %2253 = add i64 %2248, -44
  %2254 = add i64 %2247, 14
  store i64 %2254, i64* %PC.i, align 8
  %2255 = inttoptr i64 %2253 to i32*
  %2256 = load i32, i32* %2255, align 4
  %2257 = zext i32 %2256 to i64
  store i64 %2257, i64* %RSI.i3629, align 8
  %2258 = add i64 %2247, 24254
  %2259 = add i64 %2247, 19
  %2260 = load i64, i64* %6, align 8
  %2261 = add i64 %2260, -8
  %2262 = inttoptr i64 %2261 to i64*
  store i64 %2259, i64* %2262, align 8
  store i64 %2261, i64* %6, align 8
  store i64 %2258, i64* %3, align 8
  %call2_401930 = tail call %struct.Memory* @sub_4077e0._Z13test_constantIt33custom_multiple_constant_multiplyItEEvPT_iPKc(%struct.State* %0, i64 %2258, %struct.Memory* %call2_40191d)
  %2263 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x419194_type* @G__0x419194 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419194_type* @G__0x419194 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %2264 = load i64, i64* %RBP.i, align 8
  %2265 = add i64 %2264, -72
  %2266 = add i64 %2263, 11
  store i64 %2266, i64* %PC.i, align 8
  %2267 = inttoptr i64 %2265 to i64*
  %2268 = load i64, i64* %2267, align 8
  store i64 %2268, i64* %RDI.i3614.pre-phi, align 8
  %2269 = add i64 %2264, -44
  %2270 = add i64 %2263, 14
  store i64 %2270, i64* %PC.i, align 8
  %2271 = inttoptr i64 %2269 to i32*
  %2272 = load i32, i32* %2271, align 4
  %2273 = zext i32 %2272 to i64
  store i64 %2273, i64* %RSI.i3629, align 8
  %2274 = add i64 %2263, 24411
  %2275 = add i64 %2263, 19
  %2276 = load i64, i64* %6, align 8
  %2277 = add i64 %2276, -8
  %2278 = inttoptr i64 %2277 to i64*
  store i64 %2275, i64* %2278, align 8
  store i64 %2277, i64* %6, align 8
  store i64 %2274, i64* %3, align 8
  %call2_401943 = tail call %struct.Memory* @sub_407890._Z13test_constantIt34custom_multiple_constant_multiply2ItEEvPT_iPKc(%struct.State* %0, i64 %2274, %struct.Memory* %call2_401930)
  %2279 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x4191b9_type* @G__0x4191b9 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4191b9_type* @G__0x4191b9 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %2280 = load i64, i64* %RBP.i, align 8
  %2281 = add i64 %2280, -72
  %2282 = add i64 %2279, 11
  store i64 %2282, i64* %PC.i, align 8
  %2283 = inttoptr i64 %2281 to i64*
  %2284 = load i64, i64* %2283, align 8
  store i64 %2284, i64* %RDI.i3614.pre-phi, align 8
  %2285 = add i64 %2280, -44
  %2286 = add i64 %2279, 14
  store i64 %2286, i64* %PC.i, align 8
  %2287 = inttoptr i64 %2285 to i32*
  %2288 = load i32, i32* %2287, align 4
  %2289 = zext i32 %2288 to i64
  store i64 %2289, i64* %RSI.i3629, align 8
  %2290 = add i64 %2279, 24568
  %2291 = add i64 %2279, 19
  %2292 = load i64, i64* %6, align 8
  %2293 = add i64 %2292, -8
  %2294 = inttoptr i64 %2293 to i64*
  store i64 %2291, i64* %2294, align 8
  store i64 %2293, i64* %6, align 8
  store i64 %2290, i64* %3, align 8
  %call2_401956 = tail call %struct.Memory* @sub_407940._Z13test_constantIt22custom_constant_divideItEEvPT_iPKc(%struct.State* %0, i64 %2290, %struct.Memory* %call2_401943)
  %2295 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x4191d2_type* @G__0x4191d2 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4191d2_type* @G__0x4191d2 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %2296 = load i64, i64* %RBP.i, align 8
  %2297 = add i64 %2296, -72
  %2298 = add i64 %2295, 11
  store i64 %2298, i64* %PC.i, align 8
  %2299 = inttoptr i64 %2297 to i64*
  %2300 = load i64, i64* %2299, align 8
  store i64 %2300, i64* %RDI.i3614.pre-phi, align 8
  %2301 = add i64 %2296, -44
  %2302 = add i64 %2295, 14
  store i64 %2302, i64* %PC.i, align 8
  %2303 = inttoptr i64 %2301 to i32*
  %2304 = load i32, i32* %2303, align 4
  %2305 = zext i32 %2304 to i64
  store i64 %2305, i64* %RSI.i3629, align 8
  %2306 = add i64 %2295, 24725
  %2307 = add i64 %2295, 19
  %2308 = load i64, i64* %6, align 8
  %2309 = add i64 %2308, -8
  %2310 = inttoptr i64 %2309 to i64*
  store i64 %2307, i64* %2310, align 8
  store i64 %2309, i64* %6, align 8
  store i64 %2306, i64* %3, align 8
  %call2_401969 = tail call %struct.Memory* @sub_4079f0._Z13test_constantIt31custom_multiple_constant_divideItEEvPT_iPKc(%struct.State* %0, i64 %2306, %struct.Memory* %call2_401956)
  %2311 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x4191f5_type* @G__0x4191f5 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4191f5_type* @G__0x4191f5 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %2312 = load i64, i64* %RBP.i, align 8
  %2313 = add i64 %2312, -72
  %2314 = add i64 %2311, 11
  store i64 %2314, i64* %PC.i, align 8
  %2315 = inttoptr i64 %2313 to i64*
  %2316 = load i64, i64* %2315, align 8
  store i64 %2316, i64* %RDI.i3614.pre-phi, align 8
  %2317 = add i64 %2312, -44
  %2318 = add i64 %2311, 14
  store i64 %2318, i64* %PC.i, align 8
  %2319 = inttoptr i64 %2317 to i32*
  %2320 = load i32, i32* %2319, align 4
  %2321 = zext i32 %2320 to i64
  store i64 %2321, i64* %RSI.i3629, align 8
  %2322 = add i64 %2311, 24882
  %2323 = add i64 %2311, 19
  %2324 = load i64, i64* %6, align 8
  %2325 = add i64 %2324, -8
  %2326 = inttoptr i64 %2325 to i64*
  store i64 %2323, i64* %2326, align 8
  store i64 %2325, i64* %6, align 8
  store i64 %2322, i64* %3, align 8
  %call2_40197c = tail call %struct.Memory* @sub_407aa0._Z13test_constantIt32custom_multiple_constant_divide2ItEEvPT_iPKc(%struct.State* %0, i64 %2322, %struct.Memory* %call2_401969)
  %2327 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x419218_type* @G__0x419218 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419218_type* @G__0x419218 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %2328 = load i64, i64* %RBP.i, align 8
  %2329 = add i64 %2328, -72
  %2330 = add i64 %2327, 11
  store i64 %2330, i64* %PC.i, align 8
  %2331 = inttoptr i64 %2329 to i64*
  %2332 = load i64, i64* %2331, align 8
  store i64 %2332, i64* %RDI.i3614.pre-phi, align 8
  %2333 = add i64 %2328, -44
  %2334 = add i64 %2327, 14
  store i64 %2334, i64* %PC.i, align 8
  %2335 = inttoptr i64 %2333 to i32*
  %2336 = load i32, i32* %2335, align 4
  %2337 = zext i32 %2336 to i64
  store i64 %2337, i64* %RSI.i3629, align 8
  %2338 = add i64 %2327, 25039
  %2339 = add i64 %2327, 19
  %2340 = load i64, i64* %6, align 8
  %2341 = add i64 %2340, -8
  %2342 = inttoptr i64 %2341 to i64*
  store i64 %2339, i64* %2342, align 8
  store i64 %2341, i64* %6, align 8
  store i64 %2338, i64* %3, align 8
  %call2_40198f = tail call %struct.Memory* @sub_407b50._Z13test_constantIt30custom_multiple_constant_mixedItEEvPT_iPKc(%struct.State* %0, i64 %2338, %struct.Memory* %call2_40197c)
  %2343 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x419239_type* @G__0x419239 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419239_type* @G__0x419239 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %2344 = load i64, i64* %RBP.i, align 8
  %2345 = add i64 %2344, -72
  %2346 = add i64 %2343, 11
  store i64 %2346, i64* %PC.i, align 8
  %2347 = inttoptr i64 %2345 to i64*
  %2348 = load i64, i64* %2347, align 8
  store i64 %2348, i64* %RDI.i3614.pre-phi, align 8
  %2349 = add i64 %2344, -44
  %2350 = add i64 %2343, 14
  store i64 %2350, i64* %PC.i, align 8
  %2351 = inttoptr i64 %2349 to i32*
  %2352 = load i32, i32* %2351, align 4
  %2353 = zext i32 %2352 to i64
  store i64 %2353, i64* %RSI.i3629, align 8
  %2354 = add i64 %2343, 25196
  %2355 = add i64 %2343, 19
  %2356 = load i64, i64* %6, align 8
  %2357 = add i64 %2356, -8
  %2358 = inttoptr i64 %2357 to i64*
  store i64 %2355, i64* %2358, align 8
  store i64 %2357, i64* %6, align 8
  store i64 %2354, i64* %3, align 8
  %call2_4019a2 = tail call %struct.Memory* @sub_407c00._Z13test_constantIt19custom_constant_andItEEvPT_iPKc(%struct.State* %0, i64 %2354, %struct.Memory* %call2_40198f)
  %2359 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x41924f_type* @G__0x41924f to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41924f_type* @G__0x41924f to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %2360 = load i64, i64* %RBP.i, align 8
  %2361 = add i64 %2360, -72
  %2362 = add i64 %2359, 11
  store i64 %2362, i64* %PC.i, align 8
  %2363 = inttoptr i64 %2361 to i64*
  %2364 = load i64, i64* %2363, align 8
  store i64 %2364, i64* %RDI.i3614.pre-phi, align 8
  %2365 = add i64 %2360, -44
  %2366 = add i64 %2359, 14
  store i64 %2366, i64* %PC.i, align 8
  %2367 = inttoptr i64 %2365 to i32*
  %2368 = load i32, i32* %2367, align 4
  %2369 = zext i32 %2368 to i64
  store i64 %2369, i64* %RSI.i3629, align 8
  %2370 = add i64 %2359, 25353
  %2371 = add i64 %2359, 19
  %2372 = load i64, i64* %6, align 8
  %2373 = add i64 %2372, -8
  %2374 = inttoptr i64 %2373 to i64*
  store i64 %2371, i64* %2374, align 8
  store i64 %2373, i64* %6, align 8
  store i64 %2370, i64* %3, align 8
  %call2_4019b5 = tail call %struct.Memory* @sub_407cb0._Z13test_constantIt28custom_multiple_constant_andItEEvPT_iPKc(%struct.State* %0, i64 %2370, %struct.Memory* %call2_4019a2)
  %2375 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x41926e_type* @G__0x41926e to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41926e_type* @G__0x41926e to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %2376 = load i64, i64* %RBP.i, align 8
  %2377 = add i64 %2376, -72
  %2378 = add i64 %2375, 11
  store i64 %2378, i64* %PC.i, align 8
  %2379 = inttoptr i64 %2377 to i64*
  %2380 = load i64, i64* %2379, align 8
  store i64 %2380, i64* %RDI.i3614.pre-phi, align 8
  %2381 = add i64 %2376, -44
  %2382 = add i64 %2375, 14
  store i64 %2382, i64* %PC.i, align 8
  %2383 = inttoptr i64 %2381 to i32*
  %2384 = load i32, i32* %2383, align 4
  %2385 = zext i32 %2384 to i64
  store i64 %2385, i64* %RSI.i3629, align 8
  %2386 = add i64 %2375, 25510
  %2387 = add i64 %2375, 19
  %2388 = load i64, i64* %6, align 8
  %2389 = add i64 %2388, -8
  %2390 = inttoptr i64 %2389 to i64*
  store i64 %2387, i64* %2390, align 8
  store i64 %2389, i64* %6, align 8
  store i64 %2386, i64* %3, align 8
  %call2_4019c8 = tail call %struct.Memory* @sub_407d60._Z13test_constantIt18custom_constant_orItEEvPT_iPKc(%struct.State* %0, i64 %2386, %struct.Memory* %call2_4019b5)
  %2391 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x419283_type* @G__0x419283 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419283_type* @G__0x419283 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %2392 = load i64, i64* %RBP.i, align 8
  %2393 = add i64 %2392, -72
  %2394 = add i64 %2391, 11
  store i64 %2394, i64* %PC.i, align 8
  %2395 = inttoptr i64 %2393 to i64*
  %2396 = load i64, i64* %2395, align 8
  store i64 %2396, i64* %RDI.i3614.pre-phi, align 8
  %2397 = add i64 %2392, -44
  %2398 = add i64 %2391, 14
  store i64 %2398, i64* %PC.i, align 8
  %2399 = inttoptr i64 %2397 to i32*
  %2400 = load i32, i32* %2399, align 4
  %2401 = zext i32 %2400 to i64
  store i64 %2401, i64* %RSI.i3629, align 8
  %2402 = add i64 %2391, 25667
  %2403 = add i64 %2391, 19
  %2404 = load i64, i64* %6, align 8
  %2405 = add i64 %2404, -8
  %2406 = inttoptr i64 %2405 to i64*
  store i64 %2403, i64* %2406, align 8
  store i64 %2405, i64* %6, align 8
  store i64 %2402, i64* %3, align 8
  %call2_4019db = tail call %struct.Memory* @sub_407e10._Z13test_constantIt27custom_multiple_constant_orItEEvPT_iPKc(%struct.State* %0, i64 %2402, %struct.Memory* %call2_4019c8)
  %2407 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x4192a1_type* @G__0x4192a1 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4192a1_type* @G__0x4192a1 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %2408 = load i64, i64* %RBP.i, align 8
  %2409 = add i64 %2408, -72
  %2410 = add i64 %2407, 11
  store i64 %2410, i64* %PC.i, align 8
  %2411 = inttoptr i64 %2409 to i64*
  %2412 = load i64, i64* %2411, align 8
  store i64 %2412, i64* %RDI.i3614.pre-phi, align 8
  %2413 = add i64 %2408, -44
  %2414 = add i64 %2407, 14
  store i64 %2414, i64* %PC.i, align 8
  %2415 = inttoptr i64 %2413 to i32*
  %2416 = load i32, i32* %2415, align 4
  %2417 = zext i32 %2416 to i64
  store i64 %2417, i64* %RSI.i3629, align 8
  %2418 = add i64 %2407, 25824
  %2419 = add i64 %2407, 19
  %2420 = load i64, i64* %6, align 8
  %2421 = add i64 %2420, -8
  %2422 = inttoptr i64 %2421 to i64*
  store i64 %2419, i64* %2422, align 8
  store i64 %2421, i64* %6, align 8
  store i64 %2418, i64* %3, align 8
  %call2_4019ee = tail call %struct.Memory* @sub_407ec0._Z13test_constantIt19custom_constant_xorItEEvPT_iPKc(%struct.State* %0, i64 %2418, %struct.Memory* %call2_4019db)
  %2423 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x4192b7_type* @G__0x4192b7 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4192b7_type* @G__0x4192b7 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %2424 = load i64, i64* %RBP.i, align 8
  %2425 = add i64 %2424, -72
  %2426 = add i64 %2423, 11
  store i64 %2426, i64* %PC.i, align 8
  %2427 = inttoptr i64 %2425 to i64*
  %2428 = load i64, i64* %2427, align 8
  store i64 %2428, i64* %RDI.i3614.pre-phi, align 8
  %2429 = add i64 %2424, -44
  %2430 = add i64 %2423, 14
  store i64 %2430, i64* %PC.i, align 8
  %2431 = inttoptr i64 %2429 to i32*
  %2432 = load i32, i32* %2431, align 4
  %2433 = zext i32 %2432 to i64
  store i64 %2433, i64* %RSI.i3629, align 8
  %2434 = add i64 %2423, 25981
  %2435 = add i64 %2423, 19
  %2436 = load i64, i64* %6, align 8
  %2437 = add i64 %2436, -8
  %2438 = inttoptr i64 %2437 to i64*
  store i64 %2435, i64* %2438, align 8
  store i64 %2437, i64* %6, align 8
  store i64 %2434, i64* %3, align 8
  %call2_401a01 = tail call %struct.Memory* @sub_407f70._Z13test_constantIt28custom_multiple_constant_xorItEEvPT_iPKc(%struct.State* %0, i64 %2434, %struct.Memory* %call2_4019ee)
  %2439 = bitcast %union.VectorReg* %.pre-phi23 to i8*
  %2440 = load i64, i64* %PC.i, align 8
  %2441 = load double, double* bitcast (%G_0x22067a__rip__type* @G_0x22067a__rip_ to double*), align 8
  %2442 = bitcast %union.VectorReg* %.pre-phi23 to double*
  store double %2441, double* %2442, align 1
  %2443 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 1
  %2444 = bitcast i64* %2443 to double*
  store double 0.000000e+00, double* %2444, align 1
  %2445 = tail call double @llvm.trunc.f64(double %2441)
  %2446 = tail call double @llvm.fabs.f64(double %2445)
  %2447 = fcmp ogt double %2446, 0x41DFFFFFFFC00000
  %2448 = fptosi double %2445 to i32
  %2449 = zext i32 %2448 to i64
  %2450 = select i1 %2447, i64 2147483648, i64 %2449
  store i64 %2450, i64* %RDX.i3618, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x6608d0_type* @G__0x6608d0 to i64), i64 4294967295) to i32) to i64), i64* %.pre18, align 8
  store i64 and (i64 ptrtoint (%G__0x6685d0_type* @G__0x6685d0 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x6608d0_type* @G__0x6608d0 to i64), i64 4294967295) to i32) to i64), i64* %RDI.i3614.pre-phi, align 8
  %2451 = load i64, i64* %RBP.i, align 8
  %2452 = add i64 %2451, -80
  %2453 = add i64 %2440, 31
  store i64 %2453, i64* %PC.i, align 8
  %2454 = inttoptr i64 %2452 to i64*
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x6608d0_type* @G__0x6608d0 to i64), i64 4294967295) to i32) to i64), i64* %2454, align 8
  %2455 = load i64, i64* %PC.i, align 8
  %2456 = add i64 %2455, 26107
  %2457 = add i64 %2455, 5
  %2458 = load i64, i64* %6, align 8
  %2459 = add i64 %2458, -8
  %2460 = inttoptr i64 %2459 to i64*
  store i64 %2457, i64* %2460, align 8
  store i64 %2459, i64* %6, align 8
  store i64 %2456, i64* %3, align 8
  %call2_401a25 = tail call %struct.Memory* @sub_408020._Z4fillIPiiEvT_S1_T0_(%struct.State* %0, i64 %2456, %struct.Memory* %call2_401a01)
  %2461 = load i64, i64* %PC.i, align 8
  %2462 = load i32, i32* bitcast (%G_0x220650__rip__type* @G_0x220650__rip_ to i32*), align 8
  store i32 %2462, i32* bitcast (%G_0x22068a__rip__type* @G_0x22068a__rip_ to i32*), align 8
  store i64 and (i64 ptrtoint (%G__0x4192d7_type* @G__0x4192d7 to i64), i64 4294967295), i64* %RDX.i3618, align 8
  %2463 = load i64, i64* %RBP.i, align 8
  %2464 = add i64 %2463, -80
  %2465 = add i64 %2461, 21
  store i64 %2465, i64* %PC.i, align 8
  %2466 = inttoptr i64 %2464 to i64*
  %2467 = load i64, i64* %2466, align 8
  store i64 %2467, i64* %RDI.i3614.pre-phi, align 8
  %2468 = add i64 %2463, -44
  %2469 = add i64 %2461, 24
  store i64 %2469, i64* %PC.i, align 8
  %2470 = inttoptr i64 %2468 to i32*
  %2471 = load i32, i32* %2470, align 4
  %2472 = zext i32 %2471 to i64
  store i64 %2472, i64* %RSI.i3629, align 8
  %2473 = add i64 %2461, 26166
  %2474 = add i64 %2461, 29
  %2475 = load i64, i64* %6, align 8
  %2476 = add i64 %2475, -8
  %2477 = inttoptr i64 %2476 to i64*
  store i64 %2474, i64* %2477, align 8
  store i64 %2476, i64* %6, align 8
  store i64 %2473, i64* %3, align 8
  %call2_401a42 = tail call %struct.Memory* @sub_408060._Z13test_constantIi10custom_twoIiEEvPT_iPKc(%struct.State* %0, i64 %2473, %struct.Memory* %call2_401a25)
  %2478 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x4192e9_type* @G__0x4192e9 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4192e9_type* @G__0x4192e9 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %2479 = load i64, i64* %RBP.i, align 8
  %2480 = add i64 %2479, -80
  %2481 = add i64 %2478, 11
  store i64 %2481, i64* %PC.i, align 8
  %2482 = inttoptr i64 %2480 to i64*
  %2483 = load i64, i64* %2482, align 8
  store i64 %2483, i64* %RDI.i3614.pre-phi, align 8
  %2484 = add i64 %2479, -44
  %2485 = add i64 %2478, 14
  store i64 %2485, i64* %PC.i, align 8
  %2486 = inttoptr i64 %2484 to i32*
  %2487 = load i32, i32* %2486, align 4
  %2488 = zext i32 %2487 to i64
  store i64 %2488, i64* %RSI.i3629, align 8
  %2489 = add i64 %2478, 26297
  %2490 = add i64 %2478, 19
  %2491 = load i64, i64* %6, align 8
  %2492 = add i64 %2491, -8
  %2493 = inttoptr i64 %2492 to i64*
  store i64 %2490, i64* %2493, align 8
  store i64 %2492, i64* %6, align 8
  store i64 %2489, i64* %3, align 8
  %call2_401a55 = tail call %struct.Memory* @sub_408100._Z13test_constantIi20custom_add_constantsIiEEvPT_iPKc(%struct.State* %0, i64 %2489, %struct.Memory* %call2_401a42)
  %2494 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x419300_type* @G__0x419300 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419300_type* @G__0x419300 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %2495 = load i64, i64* %RBP.i, align 8
  %2496 = add i64 %2495, -80
  %2497 = add i64 %2494, 11
  store i64 %2497, i64* %PC.i, align 8
  %2498 = inttoptr i64 %2496 to i64*
  %2499 = load i64, i64* %2498, align 8
  store i64 %2499, i64* %RDI.i3614.pre-phi, align 8
  %2500 = add i64 %2495, -44
  %2501 = add i64 %2494, 14
  store i64 %2501, i64* %PC.i, align 8
  %2502 = inttoptr i64 %2500 to i32*
  %2503 = load i32, i32* %2502, align 4
  %2504 = zext i32 %2503 to i64
  store i64 %2504, i64* %RSI.i3629, align 8
  %2505 = add i64 %2494, 26438
  %2506 = add i64 %2494, 19
  %2507 = load i64, i64* %6, align 8
  %2508 = add i64 %2507, -8
  %2509 = inttoptr i64 %2508 to i64*
  store i64 %2506, i64* %2509, align 8
  store i64 %2508, i64* %6, align 8
  store i64 %2505, i64* %3, align 8
  %call2_401a68 = tail call %struct.Memory* @sub_4081a0._Z13test_constantIi20custom_sub_constantsIiEEvPT_iPKc(%struct.State* %0, i64 %2505, %struct.Memory* %call2_401a55)
  %2510 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x41931c_type* @G__0x41931c to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41931c_type* @G__0x41931c to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %2511 = load i64, i64* %RBP.i, align 8
  %2512 = add i64 %2511, -80
  %2513 = add i64 %2510, 11
  store i64 %2513, i64* %PC.i, align 8
  %2514 = inttoptr i64 %2512 to i64*
  %2515 = load i64, i64* %2514, align 8
  store i64 %2515, i64* %RDI.i3614.pre-phi, align 8
  %2516 = add i64 %2511, -44
  %2517 = add i64 %2510, 14
  store i64 %2517, i64* %PC.i, align 8
  %2518 = inttoptr i64 %2516 to i32*
  %2519 = load i32, i32* %2518, align 4
  %2520 = zext i32 %2519 to i64
  store i64 %2520, i64* %RSI.i3629, align 8
  %2521 = add i64 %2510, 26579
  %2522 = add i64 %2510, 19
  %2523 = load i64, i64* %6, align 8
  %2524 = add i64 %2523, -8
  %2525 = inttoptr i64 %2524 to i64*
  store i64 %2522, i64* %2525, align 8
  store i64 %2524, i64* %6, align 8
  store i64 %2521, i64* %3, align 8
  %call2_401a7b = tail call %struct.Memory* @sub_408240._Z13test_constantIi25custom_multiply_constantsIiEEvPT_iPKc(%struct.State* %0, i64 %2521, %struct.Memory* %call2_401a68)
  %2526 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x419338_type* @G__0x419338 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419338_type* @G__0x419338 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %2527 = load i64, i64* %RBP.i, align 8
  %2528 = add i64 %2527, -80
  %2529 = add i64 %2526, 11
  store i64 %2529, i64* %PC.i, align 8
  %2530 = inttoptr i64 %2528 to i64*
  %2531 = load i64, i64* %2530, align 8
  store i64 %2531, i64* %RDI.i3614.pre-phi, align 8
  %2532 = add i64 %2527, -44
  %2533 = add i64 %2526, 14
  store i64 %2533, i64* %PC.i, align 8
  %2534 = inttoptr i64 %2532 to i32*
  %2535 = load i32, i32* %2534, align 4
  %2536 = zext i32 %2535 to i64
  store i64 %2536, i64* %RSI.i3629, align 8
  %2537 = add i64 %2526, 26720
  %2538 = add i64 %2526, 19
  %2539 = load i64, i64* %6, align 8
  %2540 = add i64 %2539, -8
  %2541 = inttoptr i64 %2540 to i64*
  store i64 %2538, i64* %2541, align 8
  store i64 %2540, i64* %6, align 8
  store i64 %2537, i64* %3, align 8
  %call2_401a8e = tail call %struct.Memory* @sub_4082e0._Z13test_constantIi23custom_divide_constantsIiEEvPT_iPKc(%struct.State* %0, i64 %2537, %struct.Memory* %call2_401a7b)
  %2542 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x419352_type* @G__0x419352 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419352_type* @G__0x419352 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %2543 = load i64, i64* %RBP.i, align 8
  %2544 = add i64 %2543, -80
  %2545 = add i64 %2542, 11
  store i64 %2545, i64* %PC.i, align 8
  %2546 = inttoptr i64 %2544 to i64*
  %2547 = load i64, i64* %2546, align 8
  store i64 %2547, i64* %RDI.i3614.pre-phi, align 8
  %2548 = add i64 %2543, -44
  %2549 = add i64 %2542, 14
  store i64 %2549, i64* %PC.i, align 8
  %2550 = inttoptr i64 %2548 to i32*
  %2551 = load i32, i32* %2550, align 4
  %2552 = zext i32 %2551 to i64
  store i64 %2552, i64* %RSI.i3629, align 8
  %2553 = add i64 %2542, 26861
  %2554 = add i64 %2542, 19
  %2555 = load i64, i64* %6, align 8
  %2556 = add i64 %2555, -8
  %2557 = inttoptr i64 %2556 to i64*
  store i64 %2554, i64* %2557, align 8
  store i64 %2556, i64* %6, align 8
  store i64 %2553, i64* %3, align 8
  %call2_401aa1 = tail call %struct.Memory* @sub_408380._Z13test_constantIi20custom_mod_constantsIiEEvPT_iPKc(%struct.State* %0, i64 %2553, %struct.Memory* %call2_401a8e)
  %2558 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x419369_type* @G__0x419369 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419369_type* @G__0x419369 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %2559 = load i64, i64* %RBP.i, align 8
  %2560 = add i64 %2559, -80
  %2561 = add i64 %2558, 11
  store i64 %2561, i64* %PC.i, align 8
  %2562 = inttoptr i64 %2560 to i64*
  %2563 = load i64, i64* %2562, align 8
  store i64 %2563, i64* %RDI.i3614.pre-phi, align 8
  %2564 = add i64 %2559, -44
  %2565 = add i64 %2558, 14
  store i64 %2565, i64* %PC.i, align 8
  %2566 = inttoptr i64 %2564 to i32*
  %2567 = load i32, i32* %2566, align 4
  %2568 = zext i32 %2567 to i64
  store i64 %2568, i64* %RSI.i3629, align 8
  %2569 = add i64 %2558, 27002
  %2570 = add i64 %2558, 19
  %2571 = load i64, i64* %6, align 8
  %2572 = add i64 %2571, -8
  %2573 = inttoptr i64 %2572 to i64*
  store i64 %2570, i64* %2573, align 8
  store i64 %2572, i64* %6, align 8
  store i64 %2569, i64* %3, align 8
  %call2_401ab4 = tail call %struct.Memory* @sub_408420._Z13test_constantIi22custom_equal_constantsIiEEvPT_iPKc(%struct.State* %0, i64 %2569, %struct.Memory* %call2_401aa1)
  %2574 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x419382_type* @G__0x419382 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419382_type* @G__0x419382 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %2575 = load i64, i64* %RBP.i, align 8
  %2576 = add i64 %2575, -80
  %2577 = add i64 %2574, 11
  store i64 %2577, i64* %PC.i, align 8
  %2578 = inttoptr i64 %2576 to i64*
  %2579 = load i64, i64* %2578, align 8
  store i64 %2579, i64* %RDI.i3614.pre-phi, align 8
  %2580 = add i64 %2575, -44
  %2581 = add i64 %2574, 14
  store i64 %2581, i64* %PC.i, align 8
  %2582 = inttoptr i64 %2580 to i32*
  %2583 = load i32, i32* %2582, align 4
  %2584 = zext i32 %2583 to i64
  store i64 %2584, i64* %RSI.i3629, align 8
  %2585 = add i64 %2574, 27143
  %2586 = add i64 %2574, 19
  %2587 = load i64, i64* %6, align 8
  %2588 = add i64 %2587, -8
  %2589 = inttoptr i64 %2588 to i64*
  store i64 %2586, i64* %2589, align 8
  store i64 %2588, i64* %6, align 8
  store i64 %2585, i64* %3, align 8
  %call2_401ac7 = tail call %struct.Memory* @sub_4084c0._Z13test_constantIi25custom_notequal_constantsIiEEvPT_iPKc(%struct.State* %0, i64 %2585, %struct.Memory* %call2_401ab4)
  %2590 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x41939e_type* @G__0x41939e to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41939e_type* @G__0x41939e to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %2591 = load i64, i64* %RBP.i, align 8
  %2592 = add i64 %2591, -80
  %2593 = add i64 %2590, 11
  store i64 %2593, i64* %PC.i, align 8
  %2594 = inttoptr i64 %2592 to i64*
  %2595 = load i64, i64* %2594, align 8
  store i64 %2595, i64* %RDI.i3614.pre-phi, align 8
  %2596 = add i64 %2591, -44
  %2597 = add i64 %2590, 14
  store i64 %2597, i64* %PC.i, align 8
  %2598 = inttoptr i64 %2596 to i32*
  %2599 = load i32, i32* %2598, align 4
  %2600 = zext i32 %2599 to i64
  store i64 %2600, i64* %RSI.i3629, align 8
  %2601 = add i64 %2590, 27284
  %2602 = add i64 %2590, 19
  %2603 = load i64, i64* %6, align 8
  %2604 = add i64 %2603, -8
  %2605 = inttoptr i64 %2604 to i64*
  store i64 %2602, i64* %2605, align 8
  store i64 %2604, i64* %6, align 8
  store i64 %2601, i64* %3, align 8
  %call2_401ada = tail call %struct.Memory* @sub_408560._Z13test_constantIi28custom_greaterthan_constantsIiEEvPT_iPKc(%struct.State* %0, i64 %2601, %struct.Memory* %call2_401ac7)
  %2606 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x4193be_type* @G__0x4193be to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4193be_type* @G__0x4193be to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %2607 = load i64, i64* %RBP.i, align 8
  %2608 = add i64 %2607, -80
  %2609 = add i64 %2606, 11
  store i64 %2609, i64* %PC.i, align 8
  %2610 = inttoptr i64 %2608 to i64*
  %2611 = load i64, i64* %2610, align 8
  store i64 %2611, i64* %RDI.i3614.pre-phi, align 8
  %2612 = add i64 %2607, -44
  %2613 = add i64 %2606, 14
  store i64 %2613, i64* %PC.i, align 8
  %2614 = inttoptr i64 %2612 to i32*
  %2615 = load i32, i32* %2614, align 4
  %2616 = zext i32 %2615 to i64
  store i64 %2616, i64* %RSI.i3629, align 8
  %2617 = add i64 %2606, 27425
  %2618 = add i64 %2606, 19
  %2619 = load i64, i64* %6, align 8
  %2620 = add i64 %2619, -8
  %2621 = inttoptr i64 %2620 to i64*
  store i64 %2618, i64* %2621, align 8
  store i64 %2620, i64* %6, align 8
  store i64 %2617, i64* %3, align 8
  %call2_401aed = tail call %struct.Memory* @sub_408600._Z13test_constantIi25custom_lessthan_constantsIiEEvPT_iPKc(%struct.State* %0, i64 %2617, %struct.Memory* %call2_401ada)
  %2622 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x4193db_type* @G__0x4193db to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4193db_type* @G__0x4193db to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %2623 = load i64, i64* %RBP.i, align 8
  %2624 = add i64 %2623, -80
  %2625 = add i64 %2622, 11
  store i64 %2625, i64* %PC.i, align 8
  %2626 = inttoptr i64 %2624 to i64*
  %2627 = load i64, i64* %2626, align 8
  store i64 %2627, i64* %RDI.i3614.pre-phi, align 8
  %2628 = add i64 %2623, -44
  %2629 = add i64 %2622, 14
  store i64 %2629, i64* %PC.i, align 8
  %2630 = inttoptr i64 %2628 to i32*
  %2631 = load i32, i32* %2630, align 4
  %2632 = zext i32 %2631 to i64
  store i64 %2632, i64* %RSI.i3629, align 8
  %2633 = add i64 %2622, 27566
  %2634 = add i64 %2622, 19
  %2635 = load i64, i64* %6, align 8
  %2636 = add i64 %2635, -8
  %2637 = inttoptr i64 %2636 to i64*
  store i64 %2634, i64* %2637, align 8
  store i64 %2636, i64* %6, align 8
  store i64 %2633, i64* %3, align 8
  %call2_401b00 = tail call %struct.Memory* @sub_4086a0._Z13test_constantIi33custom_greaterthanequal_constantsIiEEvPT_iPKc(%struct.State* %0, i64 %2633, %struct.Memory* %call2_401aed)
  %2638 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x419401_type* @G__0x419401 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419401_type* @G__0x419401 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %2639 = load i64, i64* %RBP.i, align 8
  %2640 = add i64 %2639, -80
  %2641 = add i64 %2638, 11
  store i64 %2641, i64* %PC.i, align 8
  %2642 = inttoptr i64 %2640 to i64*
  %2643 = load i64, i64* %2642, align 8
  store i64 %2643, i64* %RDI.i3614.pre-phi, align 8
  %2644 = add i64 %2639, -44
  %2645 = add i64 %2638, 14
  store i64 %2645, i64* %PC.i, align 8
  %2646 = inttoptr i64 %2644 to i32*
  %2647 = load i32, i32* %2646, align 4
  %2648 = zext i32 %2647 to i64
  store i64 %2648, i64* %RSI.i3629, align 8
  %2649 = add i64 %2638, 27707
  %2650 = add i64 %2638, 19
  %2651 = load i64, i64* %6, align 8
  %2652 = add i64 %2651, -8
  %2653 = inttoptr i64 %2652 to i64*
  store i64 %2650, i64* %2653, align 8
  store i64 %2652, i64* %6, align 8
  store i64 %2649, i64* %3, align 8
  %call2_401b13 = tail call %struct.Memory* @sub_408740._Z13test_constantIi30custom_lessthanequal_constantsIiEEvPT_iPKc(%struct.State* %0, i64 %2649, %struct.Memory* %call2_401b00)
  %2654 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x419424_type* @G__0x419424 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419424_type* @G__0x419424 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %2655 = load i64, i64* %RBP.i, align 8
  %2656 = add i64 %2655, -80
  %2657 = add i64 %2654, 11
  store i64 %2657, i64* %PC.i, align 8
  %2658 = inttoptr i64 %2656 to i64*
  %2659 = load i64, i64* %2658, align 8
  store i64 %2659, i64* %RDI.i3614.pre-phi, align 8
  %2660 = add i64 %2655, -44
  %2661 = add i64 %2654, 14
  store i64 %2661, i64* %PC.i, align 8
  %2662 = inttoptr i64 %2660 to i32*
  %2663 = load i32, i32* %2662, align 4
  %2664 = zext i32 %2663 to i64
  store i64 %2664, i64* %RSI.i3629, align 8
  %2665 = add i64 %2654, 27848
  %2666 = add i64 %2654, 19
  %2667 = load i64, i64* %6, align 8
  %2668 = add i64 %2667, -8
  %2669 = inttoptr i64 %2668 to i64*
  store i64 %2666, i64* %2669, align 8
  store i64 %2668, i64* %6, align 8
  store i64 %2665, i64* %3, align 8
  %call2_401b26 = tail call %struct.Memory* @sub_4087e0._Z13test_constantIi20custom_and_constantsIiEEvPT_iPKc(%struct.State* %0, i64 %2665, %struct.Memory* %call2_401b13)
  %2670 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x41943b_type* @G__0x41943b to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41943b_type* @G__0x41943b to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %2671 = load i64, i64* %RBP.i, align 8
  %2672 = add i64 %2671, -80
  %2673 = add i64 %2670, 11
  store i64 %2673, i64* %PC.i, align 8
  %2674 = inttoptr i64 %2672 to i64*
  %2675 = load i64, i64* %2674, align 8
  store i64 %2675, i64* %RDI.i3614.pre-phi, align 8
  %2676 = add i64 %2671, -44
  %2677 = add i64 %2670, 14
  store i64 %2677, i64* %PC.i, align 8
  %2678 = inttoptr i64 %2676 to i32*
  %2679 = load i32, i32* %2678, align 4
  %2680 = zext i32 %2679 to i64
  store i64 %2680, i64* %RSI.i3629, align 8
  %2681 = add i64 %2670, 27989
  %2682 = add i64 %2670, 19
  %2683 = load i64, i64* %6, align 8
  %2684 = add i64 %2683, -8
  %2685 = inttoptr i64 %2684 to i64*
  store i64 %2682, i64* %2685, align 8
  store i64 %2684, i64* %6, align 8
  store i64 %2681, i64* %3, align 8
  %call2_401b39 = tail call %struct.Memory* @sub_408880._Z13test_constantIi19custom_or_constantsIiEEvPT_iPKc(%struct.State* %0, i64 %2681, %struct.Memory* %call2_401b26)
  %2686 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x419451_type* @G__0x419451 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419451_type* @G__0x419451 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %2687 = load i64, i64* %RBP.i, align 8
  %2688 = add i64 %2687, -80
  %2689 = add i64 %2686, 11
  store i64 %2689, i64* %PC.i, align 8
  %2690 = inttoptr i64 %2688 to i64*
  %2691 = load i64, i64* %2690, align 8
  store i64 %2691, i64* %RDI.i3614.pre-phi, align 8
  %2692 = add i64 %2687, -44
  %2693 = add i64 %2686, 14
  store i64 %2693, i64* %PC.i, align 8
  %2694 = inttoptr i64 %2692 to i32*
  %2695 = load i32, i32* %2694, align 4
  %2696 = zext i32 %2695 to i64
  store i64 %2696, i64* %RSI.i3629, align 8
  %2697 = add i64 %2686, 28130
  %2698 = add i64 %2686, 19
  %2699 = load i64, i64* %6, align 8
  %2700 = add i64 %2699, -8
  %2701 = inttoptr i64 %2700 to i64*
  store i64 %2698, i64* %2701, align 8
  store i64 %2700, i64* %6, align 8
  store i64 %2697, i64* %3, align 8
  %call2_401b4c = tail call %struct.Memory* @sub_408920._Z13test_constantIi20custom_xor_constantsIiEEvPT_iPKc(%struct.State* %0, i64 %2697, %struct.Memory* %call2_401b39)
  %2702 = load i64, i64* %PC.i, align 8
  %2703 = load i32, i32* bitcast (%G_0x220528__rip__type* @G_0x220528__rip_ to i32*), align 8
  %2704 = sext i32 %2703 to i64
  %2705 = mul nsw i64 %2704, 1717986919
  %2706 = lshr i64 %2705, 63
  store i64 %2706, i64* %RCX.i3623, align 8
  %2707 = ashr i64 %2705, 34
  store i64 %2707, i64* %.pre18, align 8
  %2708 = trunc i64 %2707 to i32
  %2709 = trunc i64 %2706 to i32
  %2710 = add i32 %2709, %2708
  %2711 = zext i32 %2710 to i64
  store i64 %2711, i64* %194, align 8
  %2712 = icmp ult i32 %2710, %2708
  %2713 = icmp ult i32 %2710, %2709
  %2714 = or i1 %2712, %2713
  %2715 = zext i1 %2714 to i8
  store i8 %2715, i8* %14, align 1
  %2716 = and i32 %2710, 255
  %2717 = tail call i32 @llvm.ctpop.i32(i32 %2716)
  %2718 = trunc i32 %2717 to i8
  %2719 = and i8 %2718, 1
  %2720 = xor i8 %2719, 1
  store i8 %2720, i8* %21, align 1
  %2721 = trunc i64 %2707 to i32
  %2722 = xor i32 %2721, %2710
  %2723 = lshr i32 %2722, 4
  %2724 = trunc i32 %2723 to i8
  %2725 = and i8 %2724, 1
  store i8 %2725, i8* %27, align 1
  %2726 = icmp eq i32 %2710, 0
  %2727 = zext i1 %2726 to i8
  store i8 %2727, i8* %30, align 1
  %2728 = lshr i32 %2710, 31
  %2729 = trunc i32 %2728 to i8
  store i8 %2729, i8* %33, align 1
  %2730 = lshr i64 %2707, 31
  %2731 = trunc i64 %2730 to i32
  %2732 = and i32 %2731, 1
  %2733 = xor i32 %2728, %2732
  %2734 = add nuw nsw i32 %2733, %2728
  %2735 = icmp eq i32 %2734, 2
  %2736 = zext i1 %2735 to i8
  store i8 %2736, i8* %39, align 1
  store i32 %2710, i32* bitcast (%G_0x220547__rip__type* @G_0x220547__rip_ to i32*), align 8
  store i64 and (i64 ptrtoint (%G__0x419468_type* @G__0x419468 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419468_type* @G__0x419468 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %2737 = load i64, i64* %RBP.i, align 8
  %2738 = add i64 %2737, -80
  %2739 = add i64 %2702, 51
  store i64 %2739, i64* %PC.i, align 8
  %2740 = inttoptr i64 %2738 to i64*
  %2741 = load i64, i64* %2740, align 8
  store i64 %2741, i64* %RDI.i3614.pre-phi, align 8
  %2742 = add i64 %2737, -44
  %2743 = add i64 %2702, 54
  store i64 %2743, i64* %PC.i, align 8
  %2744 = inttoptr i64 %2742 to i32*
  %2745 = load i32, i32* %2744, align 4
  %2746 = zext i32 %2745 to i64
  store i64 %2746, i64* %RSI.i3629, align 8
  %2747 = add i64 %2702, 28271
  %2748 = add i64 %2702, 59
  %2749 = load i64, i64* %6, align 8
  %2750 = add i64 %2749, -8
  %2751 = inttoptr i64 %2750 to i64*
  store i64 %2748, i64* %2751, align 8
  store i64 %2750, i64* %6, align 8
  store i64 %2747, i64* %3, align 8
  %call2_401b87 = tail call %struct.Memory* @sub_4089c0._Z13test_constantIi19custom_constant_addIiEEvPT_iPKc(%struct.State* %0, i64 %2747, %struct.Memory* %call2_401b4c)
  %2752 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x41947e_type* @G__0x41947e to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41947e_type* @G__0x41947e to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %2753 = load i64, i64* %RBP.i, align 8
  %2754 = add i64 %2753, -80
  %2755 = add i64 %2752, 11
  store i64 %2755, i64* %PC.i, align 8
  %2756 = inttoptr i64 %2754 to i64*
  %2757 = load i64, i64* %2756, align 8
  store i64 %2757, i64* %RDI.i3614.pre-phi, align 8
  %2758 = add i64 %2753, -44
  %2759 = add i64 %2752, 14
  store i64 %2759, i64* %PC.i, align 8
  %2760 = inttoptr i64 %2758 to i32*
  %2761 = load i32, i32* %2760, align 4
  %2762 = zext i32 %2761 to i64
  store i64 %2762, i64* %RSI.i3629, align 8
  %2763 = add i64 %2752, 28372
  %2764 = add i64 %2752, 19
  %2765 = load i64, i64* %6, align 8
  %2766 = add i64 %2765, -8
  %2767 = inttoptr i64 %2766 to i64*
  store i64 %2764, i64* %2767, align 8
  store i64 %2766, i64* %6, align 8
  store i64 %2763, i64* %3, align 8
  %call2_401b9a = tail call %struct.Memory* @sub_408a60._Z13test_constantIi28custom_multiple_constant_addIiEEvPT_iPKc(%struct.State* %0, i64 %2763, %struct.Memory* %call2_401b87)
  %2768 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x41949e_type* @G__0x41949e to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41949e_type* @G__0x41949e to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %2769 = load i64, i64* %RBP.i, align 8
  %2770 = add i64 %2769, -80
  %2771 = add i64 %2768, 11
  store i64 %2771, i64* %PC.i, align 8
  %2772 = inttoptr i64 %2770 to i64*
  %2773 = load i64, i64* %2772, align 8
  store i64 %2773, i64* %RDI.i3614.pre-phi, align 8
  %2774 = add i64 %2769, -44
  %2775 = add i64 %2768, 14
  store i64 %2775, i64* %PC.i, align 8
  %2776 = inttoptr i64 %2774 to i32*
  %2777 = load i32, i32* %2776, align 4
  %2778 = zext i32 %2777 to i64
  store i64 %2778, i64* %RSI.i3629, align 8
  %2779 = add i64 %2768, 28513
  %2780 = add i64 %2768, 19
  %2781 = load i64, i64* %6, align 8
  %2782 = add i64 %2781, -8
  %2783 = inttoptr i64 %2782 to i64*
  store i64 %2780, i64* %2783, align 8
  store i64 %2782, i64* %6, align 8
  store i64 %2779, i64* %3, align 8
  %call2_401bad = tail call %struct.Memory* @sub_408b00._Z13test_constantIi19custom_constant_subIiEEvPT_iPKc(%struct.State* %0, i64 %2779, %struct.Memory* %call2_401b9a)
  %2784 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x4194b9_type* @G__0x4194b9 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4194b9_type* @G__0x4194b9 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %2785 = load i64, i64* %RBP.i, align 8
  %2786 = add i64 %2785, -80
  %2787 = add i64 %2784, 11
  store i64 %2787, i64* %PC.i, align 8
  %2788 = inttoptr i64 %2786 to i64*
  %2789 = load i64, i64* %2788, align 8
  store i64 %2789, i64* %RDI.i3614.pre-phi, align 8
  %2790 = add i64 %2785, -44
  %2791 = add i64 %2784, 14
  store i64 %2791, i64* %PC.i, align 8
  %2792 = inttoptr i64 %2790 to i32*
  %2793 = load i32, i32* %2792, align 4
  %2794 = zext i32 %2793 to i64
  store i64 %2794, i64* %RSI.i3629, align 8
  %2795 = add i64 %2784, 28654
  %2796 = add i64 %2784, 19
  %2797 = load i64, i64* %6, align 8
  %2798 = add i64 %2797, -8
  %2799 = inttoptr i64 %2798 to i64*
  store i64 %2796, i64* %2799, align 8
  store i64 %2798, i64* %6, align 8
  store i64 %2795, i64* %3, align 8
  %call2_401bc0 = tail call %struct.Memory* @sub_408ba0._Z13test_constantIi28custom_multiple_constant_subIiEEvPT_iPKc(%struct.State* %0, i64 %2795, %struct.Memory* %call2_401bad)
  %2800 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x4194de_type* @G__0x4194de to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4194de_type* @G__0x4194de to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %2801 = load i64, i64* %RBP.i, align 8
  %2802 = add i64 %2801, -80
  %2803 = add i64 %2800, 11
  store i64 %2803, i64* %PC.i, align 8
  %2804 = inttoptr i64 %2802 to i64*
  %2805 = load i64, i64* %2804, align 8
  store i64 %2805, i64* %RDI.i3614.pre-phi, align 8
  %2806 = add i64 %2801, -44
  %2807 = add i64 %2800, 14
  store i64 %2807, i64* %PC.i, align 8
  %2808 = inttoptr i64 %2806 to i32*
  %2809 = load i32, i32* %2808, align 4
  %2810 = zext i32 %2809 to i64
  store i64 %2810, i64* %RSI.i3629, align 8
  %2811 = add i64 %2800, 28795
  %2812 = add i64 %2800, 19
  %2813 = load i64, i64* %6, align 8
  %2814 = add i64 %2813, -8
  %2815 = inttoptr i64 %2814 to i64*
  store i64 %2812, i64* %2815, align 8
  store i64 %2814, i64* %6, align 8
  store i64 %2811, i64* %3, align 8
  %call2_401bd3 = tail call %struct.Memory* @sub_408c40._Z13test_constantIi24custom_constant_multiplyIiEEvPT_iPKc(%struct.State* %0, i64 %2811, %struct.Memory* %call2_401bc0)
  %2816 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x4194f9_type* @G__0x4194f9 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4194f9_type* @G__0x4194f9 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %2817 = load i64, i64* %RBP.i, align 8
  %2818 = add i64 %2817, -80
  %2819 = add i64 %2816, 11
  store i64 %2819, i64* %PC.i, align 8
  %2820 = inttoptr i64 %2818 to i64*
  %2821 = load i64, i64* %2820, align 8
  store i64 %2821, i64* %RDI.i3614.pre-phi, align 8
  %2822 = add i64 %2817, -44
  %2823 = add i64 %2816, 14
  store i64 %2823, i64* %PC.i, align 8
  %2824 = inttoptr i64 %2822 to i32*
  %2825 = load i32, i32* %2824, align 4
  %2826 = zext i32 %2825 to i64
  store i64 %2826, i64* %RSI.i3629, align 8
  %2827 = add i64 %2816, 28936
  %2828 = add i64 %2816, 19
  %2829 = load i64, i64* %6, align 8
  %2830 = add i64 %2829, -8
  %2831 = inttoptr i64 %2830 to i64*
  store i64 %2828, i64* %2831, align 8
  store i64 %2830, i64* %6, align 8
  store i64 %2827, i64* %3, align 8
  %call2_401be6 = tail call %struct.Memory* @sub_408ce0._Z13test_constantIi33custom_multiple_constant_multiplyIiEEvPT_iPKc(%struct.State* %0, i64 %2827, %struct.Memory* %call2_401bd3)
  %2832 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x41951f_type* @G__0x41951f to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41951f_type* @G__0x41951f to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %2833 = load i64, i64* %RBP.i, align 8
  %2834 = add i64 %2833, -80
  %2835 = add i64 %2832, 11
  store i64 %2835, i64* %PC.i, align 8
  %2836 = inttoptr i64 %2834 to i64*
  %2837 = load i64, i64* %2836, align 8
  store i64 %2837, i64* %RDI.i3614.pre-phi, align 8
  %2838 = add i64 %2833, -44
  %2839 = add i64 %2832, 14
  store i64 %2839, i64* %PC.i, align 8
  %2840 = inttoptr i64 %2838 to i32*
  %2841 = load i32, i32* %2840, align 4
  %2842 = zext i32 %2841 to i64
  store i64 %2842, i64* %RSI.i3629, align 8
  %2843 = add i64 %2832, 29077
  %2844 = add i64 %2832, 19
  %2845 = load i64, i64* %6, align 8
  %2846 = add i64 %2845, -8
  %2847 = inttoptr i64 %2846 to i64*
  store i64 %2844, i64* %2847, align 8
  store i64 %2846, i64* %6, align 8
  store i64 %2843, i64* %3, align 8
  %call2_401bf9 = tail call %struct.Memory* @sub_408d80._Z13test_constantIi34custom_multiple_constant_multiply2IiEEvPT_iPKc(%struct.State* %0, i64 %2843, %struct.Memory* %call2_401be6)
  %2848 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x419544_type* @G__0x419544 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419544_type* @G__0x419544 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %2849 = load i64, i64* %RBP.i, align 8
  %2850 = add i64 %2849, -80
  %2851 = add i64 %2848, 11
  store i64 %2851, i64* %PC.i, align 8
  %2852 = inttoptr i64 %2850 to i64*
  %2853 = load i64, i64* %2852, align 8
  store i64 %2853, i64* %RDI.i3614.pre-phi, align 8
  %2854 = add i64 %2849, -44
  %2855 = add i64 %2848, 14
  store i64 %2855, i64* %PC.i, align 8
  %2856 = inttoptr i64 %2854 to i32*
  %2857 = load i32, i32* %2856, align 4
  %2858 = zext i32 %2857 to i64
  store i64 %2858, i64* %RSI.i3629, align 8
  %2859 = add i64 %2848, 29218
  %2860 = add i64 %2848, 19
  %2861 = load i64, i64* %6, align 8
  %2862 = add i64 %2861, -8
  %2863 = inttoptr i64 %2862 to i64*
  store i64 %2860, i64* %2863, align 8
  store i64 %2862, i64* %6, align 8
  store i64 %2859, i64* %3, align 8
  %call2_401c0c = tail call %struct.Memory* @sub_408e20._Z13test_constantIi22custom_constant_divideIiEEvPT_iPKc(%struct.State* %0, i64 %2859, %struct.Memory* %call2_401bf9)
  %2864 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x41955d_type* @G__0x41955d to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41955d_type* @G__0x41955d to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %2865 = load i64, i64* %RBP.i, align 8
  %2866 = add i64 %2865, -80
  %2867 = add i64 %2864, 11
  store i64 %2867, i64* %PC.i, align 8
  %2868 = inttoptr i64 %2866 to i64*
  %2869 = load i64, i64* %2868, align 8
  store i64 %2869, i64* %RDI.i3614.pre-phi, align 8
  %2870 = add i64 %2865, -44
  %2871 = add i64 %2864, 14
  store i64 %2871, i64* %PC.i, align 8
  %2872 = inttoptr i64 %2870 to i32*
  %2873 = load i32, i32* %2872, align 4
  %2874 = zext i32 %2873 to i64
  store i64 %2874, i64* %RSI.i3629, align 8
  %2875 = add i64 %2864, 29359
  %2876 = add i64 %2864, 19
  %2877 = load i64, i64* %6, align 8
  %2878 = add i64 %2877, -8
  %2879 = inttoptr i64 %2878 to i64*
  store i64 %2876, i64* %2879, align 8
  store i64 %2878, i64* %6, align 8
  store i64 %2875, i64* %3, align 8
  %call2_401c1f = tail call %struct.Memory* @sub_408ec0._Z13test_constantIi31custom_multiple_constant_divideIiEEvPT_iPKc(%struct.State* %0, i64 %2875, %struct.Memory* %call2_401c0c)
  %2880 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x419580_type* @G__0x419580 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419580_type* @G__0x419580 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %2881 = load i64, i64* %RBP.i, align 8
  %2882 = add i64 %2881, -80
  %2883 = add i64 %2880, 11
  store i64 %2883, i64* %PC.i, align 8
  %2884 = inttoptr i64 %2882 to i64*
  %2885 = load i64, i64* %2884, align 8
  store i64 %2885, i64* %RDI.i3614.pre-phi, align 8
  %2886 = add i64 %2881, -44
  %2887 = add i64 %2880, 14
  store i64 %2887, i64* %PC.i, align 8
  %2888 = inttoptr i64 %2886 to i32*
  %2889 = load i32, i32* %2888, align 4
  %2890 = zext i32 %2889 to i64
  store i64 %2890, i64* %RSI.i3629, align 8
  %2891 = add i64 %2880, 29500
  %2892 = add i64 %2880, 19
  %2893 = load i64, i64* %6, align 8
  %2894 = add i64 %2893, -8
  %2895 = inttoptr i64 %2894 to i64*
  store i64 %2892, i64* %2895, align 8
  store i64 %2894, i64* %6, align 8
  store i64 %2891, i64* %3, align 8
  %call2_401c32 = tail call %struct.Memory* @sub_408f60._Z13test_constantIi32custom_multiple_constant_divide2IiEEvPT_iPKc(%struct.State* %0, i64 %2891, %struct.Memory* %call2_401c1f)
  %2896 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x4195a3_type* @G__0x4195a3 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4195a3_type* @G__0x4195a3 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %2897 = load i64, i64* %RBP.i, align 8
  %2898 = add i64 %2897, -80
  %2899 = add i64 %2896, 11
  store i64 %2899, i64* %PC.i, align 8
  %2900 = inttoptr i64 %2898 to i64*
  %2901 = load i64, i64* %2900, align 8
  store i64 %2901, i64* %RDI.i3614.pre-phi, align 8
  %2902 = add i64 %2897, -44
  %2903 = add i64 %2896, 14
  store i64 %2903, i64* %PC.i, align 8
  %2904 = inttoptr i64 %2902 to i32*
  %2905 = load i32, i32* %2904, align 4
  %2906 = zext i32 %2905 to i64
  store i64 %2906, i64* %RSI.i3629, align 8
  %2907 = add i64 %2896, 29641
  %2908 = add i64 %2896, 19
  %2909 = load i64, i64* %6, align 8
  %2910 = add i64 %2909, -8
  %2911 = inttoptr i64 %2910 to i64*
  store i64 %2908, i64* %2911, align 8
  store i64 %2910, i64* %6, align 8
  store i64 %2907, i64* %3, align 8
  %call2_401c45 = tail call %struct.Memory* @sub_409000._Z13test_constantIi30custom_multiple_constant_mixedIiEEvPT_iPKc(%struct.State* %0, i64 %2907, %struct.Memory* %call2_401c32)
  %2912 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x4195c4_type* @G__0x4195c4 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4195c4_type* @G__0x4195c4 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %2913 = load i64, i64* %RBP.i, align 8
  %2914 = add i64 %2913, -80
  %2915 = add i64 %2912, 11
  store i64 %2915, i64* %PC.i, align 8
  %2916 = inttoptr i64 %2914 to i64*
  %2917 = load i64, i64* %2916, align 8
  store i64 %2917, i64* %RDI.i3614.pre-phi, align 8
  %2918 = add i64 %2913, -44
  %2919 = add i64 %2912, 14
  store i64 %2919, i64* %PC.i, align 8
  %2920 = inttoptr i64 %2918 to i32*
  %2921 = load i32, i32* %2920, align 4
  %2922 = zext i32 %2921 to i64
  store i64 %2922, i64* %RSI.i3629, align 8
  %2923 = add i64 %2912, 29782
  %2924 = add i64 %2912, 19
  %2925 = load i64, i64* %6, align 8
  %2926 = add i64 %2925, -8
  %2927 = inttoptr i64 %2926 to i64*
  store i64 %2924, i64* %2927, align 8
  store i64 %2926, i64* %6, align 8
  store i64 %2923, i64* %3, align 8
  %call2_401c58 = tail call %struct.Memory* @sub_4090a0._Z13test_constantIi19custom_constant_andIiEEvPT_iPKc(%struct.State* %0, i64 %2923, %struct.Memory* %call2_401c45)
  %2928 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x4195da_type* @G__0x4195da to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4195da_type* @G__0x4195da to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %2929 = load i64, i64* %RBP.i, align 8
  %2930 = add i64 %2929, -80
  %2931 = add i64 %2928, 11
  store i64 %2931, i64* %PC.i, align 8
  %2932 = inttoptr i64 %2930 to i64*
  %2933 = load i64, i64* %2932, align 8
  store i64 %2933, i64* %RDI.i3614.pre-phi, align 8
  %2934 = add i64 %2929, -44
  %2935 = add i64 %2928, 14
  store i64 %2935, i64* %PC.i, align 8
  %2936 = inttoptr i64 %2934 to i32*
  %2937 = load i32, i32* %2936, align 4
  %2938 = zext i32 %2937 to i64
  store i64 %2938, i64* %RSI.i3629, align 8
  %2939 = add i64 %2928, 29923
  %2940 = add i64 %2928, 19
  %2941 = load i64, i64* %6, align 8
  %2942 = add i64 %2941, -8
  %2943 = inttoptr i64 %2942 to i64*
  store i64 %2940, i64* %2943, align 8
  store i64 %2942, i64* %6, align 8
  store i64 %2939, i64* %3, align 8
  %call2_401c6b = tail call %struct.Memory* @sub_409140._Z13test_constantIi28custom_multiple_constant_andIiEEvPT_iPKc(%struct.State* %0, i64 %2939, %struct.Memory* %call2_401c58)
  %2944 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x4195f9_type* @G__0x4195f9 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4195f9_type* @G__0x4195f9 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %2945 = load i64, i64* %RBP.i, align 8
  %2946 = add i64 %2945, -80
  %2947 = add i64 %2944, 11
  store i64 %2947, i64* %PC.i, align 8
  %2948 = inttoptr i64 %2946 to i64*
  %2949 = load i64, i64* %2948, align 8
  store i64 %2949, i64* %RDI.i3614.pre-phi, align 8
  %2950 = add i64 %2945, -44
  %2951 = add i64 %2944, 14
  store i64 %2951, i64* %PC.i, align 8
  %2952 = inttoptr i64 %2950 to i32*
  %2953 = load i32, i32* %2952, align 4
  %2954 = zext i32 %2953 to i64
  store i64 %2954, i64* %RSI.i3629, align 8
  %2955 = add i64 %2944, 30064
  %2956 = add i64 %2944, 19
  %2957 = load i64, i64* %6, align 8
  %2958 = add i64 %2957, -8
  %2959 = inttoptr i64 %2958 to i64*
  store i64 %2956, i64* %2959, align 8
  store i64 %2958, i64* %6, align 8
  store i64 %2955, i64* %3, align 8
  %call2_401c7e = tail call %struct.Memory* @sub_4091e0._Z13test_constantIi18custom_constant_orIiEEvPT_iPKc(%struct.State* %0, i64 %2955, %struct.Memory* %call2_401c6b)
  %2960 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x41960e_type* @G__0x41960e to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41960e_type* @G__0x41960e to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %2961 = load i64, i64* %RBP.i, align 8
  %2962 = add i64 %2961, -80
  %2963 = add i64 %2960, 11
  store i64 %2963, i64* %PC.i, align 8
  %2964 = inttoptr i64 %2962 to i64*
  %2965 = load i64, i64* %2964, align 8
  store i64 %2965, i64* %RDI.i3614.pre-phi, align 8
  %2966 = add i64 %2961, -44
  %2967 = add i64 %2960, 14
  store i64 %2967, i64* %PC.i, align 8
  %2968 = inttoptr i64 %2966 to i32*
  %2969 = load i32, i32* %2968, align 4
  %2970 = zext i32 %2969 to i64
  store i64 %2970, i64* %RSI.i3629, align 8
  %2971 = add i64 %2960, 30205
  %2972 = add i64 %2960, 19
  %2973 = load i64, i64* %6, align 8
  %2974 = add i64 %2973, -8
  %2975 = inttoptr i64 %2974 to i64*
  store i64 %2972, i64* %2975, align 8
  store i64 %2974, i64* %6, align 8
  store i64 %2971, i64* %3, align 8
  %call2_401c91 = tail call %struct.Memory* @sub_409280._Z13test_constantIi27custom_multiple_constant_orIiEEvPT_iPKc(%struct.State* %0, i64 %2971, %struct.Memory* %call2_401c7e)
  %2976 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x41962c_type* @G__0x41962c to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41962c_type* @G__0x41962c to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %2977 = load i64, i64* %RBP.i, align 8
  %2978 = add i64 %2977, -80
  %2979 = add i64 %2976, 11
  store i64 %2979, i64* %PC.i, align 8
  %2980 = inttoptr i64 %2978 to i64*
  %2981 = load i64, i64* %2980, align 8
  store i64 %2981, i64* %RDI.i3614.pre-phi, align 8
  %2982 = add i64 %2977, -44
  %2983 = add i64 %2976, 14
  store i64 %2983, i64* %PC.i, align 8
  %2984 = inttoptr i64 %2982 to i32*
  %2985 = load i32, i32* %2984, align 4
  %2986 = zext i32 %2985 to i64
  store i64 %2986, i64* %RSI.i3629, align 8
  %2987 = add i64 %2976, 30346
  %2988 = add i64 %2976, 19
  %2989 = load i64, i64* %6, align 8
  %2990 = add i64 %2989, -8
  %2991 = inttoptr i64 %2990 to i64*
  store i64 %2988, i64* %2991, align 8
  store i64 %2990, i64* %6, align 8
  store i64 %2987, i64* %3, align 8
  %call2_401ca4 = tail call %struct.Memory* @sub_409320._Z13test_constantIi19custom_constant_xorIiEEvPT_iPKc(%struct.State* %0, i64 %2987, %struct.Memory* %call2_401c91)
  %2992 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x419642_type* @G__0x419642 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419642_type* @G__0x419642 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %2993 = load i64, i64* %RBP.i, align 8
  %2994 = add i64 %2993, -80
  %2995 = add i64 %2992, 11
  store i64 %2995, i64* %PC.i, align 8
  %2996 = inttoptr i64 %2994 to i64*
  %2997 = load i64, i64* %2996, align 8
  store i64 %2997, i64* %RDI.i3614.pre-phi, align 8
  %2998 = add i64 %2993, -44
  %2999 = add i64 %2992, 14
  store i64 %2999, i64* %PC.i, align 8
  %3000 = inttoptr i64 %2998 to i32*
  %3001 = load i32, i32* %3000, align 4
  %3002 = zext i32 %3001 to i64
  store i64 %3002, i64* %RSI.i3629, align 8
  %3003 = add i64 %2992, 30487
  %3004 = add i64 %2992, 19
  %3005 = load i64, i64* %6, align 8
  %3006 = add i64 %3005, -8
  %3007 = inttoptr i64 %3006 to i64*
  store i64 %3004, i64* %3007, align 8
  store i64 %3006, i64* %6, align 8
  store i64 %3003, i64* %3, align 8
  %call2_401cb7 = tail call %struct.Memory* @sub_4093c0._Z13test_constantIi28custom_multiple_constant_xorIiEEvPT_iPKc(%struct.State* %0, i64 %3003, %struct.Memory* %call2_401ca4)
  %3008 = load i64, i64* %PC.i, align 8
  %3009 = load double, double* bitcast (%G_0x2203c3__rip__type* @G_0x2203c3__rip_ to double*), align 8
  %3010 = tail call double @llvm.trunc.f64(double %3009)
  %3011 = tail call double @llvm.fabs.f64(double %3010)
  %3012 = fcmp ogt double %3011, 0x43E0000000000000
  %3013 = fptosi double %3010 to i64
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x658bd0_type* @G__0x658bd0 to i64), i64 4294967295) to i32) to i64), i64* %.pre18, align 8
  store i64 and (i64 ptrtoint (%G__0x6608d0_type* @G__0x6608d0 to i64), i64 4294967295), i64* %194, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x6608d0_type* @G__0x6608d0 to i64), i64 4294967295) to i32) to i64), i64* %RCX.i3623, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x658bd0_type* @G__0x658bd0 to i64), i64 4294967295) to i32) to i64), i64* %RDI.i3614.pre-phi, align 8
  %3014 = load i64, i64* %RBP.i, align 8
  %3015 = add i64 %3014, -84
  %3016 = trunc i64 %3013 to i32
  %3017 = select i1 %3012, i32 0, i32 %3016
  %3018 = add i64 %3008, 35
  store i64 %3018, i64* %PC.i, align 8
  %3019 = inttoptr i64 %3015 to i32*
  store i32 %3017, i32* %3019, align 4
  %3020 = load i64, i64* %RCX.i3623, align 8
  %3021 = load i64, i64* %PC.i, align 8
  store i64 %3020, i64* %RSI.i3629, align 8
  %3022 = load i64, i64* %RBP.i, align 8
  %3023 = add i64 %3022, -84
  %3024 = add i64 %3021, 6
  store i64 %3024, i64* %PC.i, align 8
  %3025 = inttoptr i64 %3023 to i32*
  %3026 = load i32, i32* %3025, align 4
  %3027 = zext i32 %3026 to i64
  store i64 %3027, i64* %RDX.i3618, align 8
  %3028 = add i64 %3022, -96
  %3029 = load i64, i64* %.pre18, align 8
  %3030 = add i64 %3021, 10
  store i64 %3030, i64* %PC.i, align 8
  %3031 = inttoptr i64 %3028 to i64*
  store i64 %3029, i64* %3031, align 8
  %3032 = load i64, i64* %PC.i, align 8
  %3033 = add i64 %3032, 30583
  %3034 = add i64 %3032, 5
  %3035 = load i64, i64* %6, align 8
  %3036 = add i64 %3035, -8
  %3037 = inttoptr i64 %3036 to i64*
  store i64 %3034, i64* %3037, align 8
  store i64 %3036, i64* %6, align 8
  store i64 %3033, i64* %3, align 8
  %call2_401ce9 = tail call %struct.Memory* @sub_409460._Z4fillIPjjEvT_S1_T0_(%struct.State* %0, i64 %3033, %struct.Memory* %call2_401cb7)
  %3038 = load i64, i64* %PC.i, align 8
  %3039 = load i32, i32* bitcast (%G_0x22038c__rip__type* @G_0x22038c__rip_ to i32*), align 8
  store i32 %3039, i32* bitcast (%G_0x2203c6__rip__type* @G_0x2203c6__rip_ to i32*), align 8
  store i64 and (i64 ptrtoint (%G__0x4192d6_type* @G__0x4192d6 to i64), i64 4294967295), i64* %RDX.i3618, align 8
  %3040 = load i64, i64* %RBP.i, align 8
  %3041 = add i64 %3040, -96
  %3042 = add i64 %3038, 21
  store i64 %3042, i64* %PC.i, align 8
  %3043 = inttoptr i64 %3041 to i64*
  %3044 = load i64, i64* %3043, align 8
  store i64 %3044, i64* %RDI.i3614.pre-phi, align 8
  %3045 = add i64 %3040, -44
  %3046 = add i64 %3038, 24
  store i64 %3046, i64* %PC.i, align 8
  %3047 = inttoptr i64 %3045 to i32*
  %3048 = load i32, i32* %3047, align 4
  %3049 = zext i32 %3048 to i64
  store i64 %3049, i64* %RSI.i3629, align 8
  %3050 = add i64 %3038, 30642
  %3051 = add i64 %3038, 29
  %3052 = load i64, i64* %6, align 8
  %3053 = add i64 %3052, -8
  %3054 = inttoptr i64 %3053 to i64*
  store i64 %3051, i64* %3054, align 8
  store i64 %3053, i64* %6, align 8
  store i64 %3050, i64* %3, align 8
  %call2_401d06 = tail call %struct.Memory* @sub_4094a0._Z13test_constantIj10custom_twoIjEEvPT_iPKc(%struct.State* %0, i64 %3050, %struct.Memory* %call2_401ce9)
  %3055 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x4192e8_type* @G__0x4192e8 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4192e8_type* @G__0x4192e8 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %3056 = load i64, i64* %RBP.i, align 8
  %3057 = add i64 %3056, -96
  %3058 = add i64 %3055, 11
  store i64 %3058, i64* %PC.i, align 8
  %3059 = inttoptr i64 %3057 to i64*
  %3060 = load i64, i64* %3059, align 8
  store i64 %3060, i64* %RDI.i3614.pre-phi, align 8
  %3061 = add i64 %3056, -44
  %3062 = add i64 %3055, 14
  store i64 %3062, i64* %PC.i, align 8
  %3063 = inttoptr i64 %3061 to i32*
  %3064 = load i32, i32* %3063, align 4
  %3065 = zext i32 %3064 to i64
  store i64 %3065, i64* %RSI.i3629, align 8
  %3066 = add i64 %3055, 30773
  %3067 = add i64 %3055, 19
  %3068 = load i64, i64* %6, align 8
  %3069 = add i64 %3068, -8
  %3070 = inttoptr i64 %3069 to i64*
  store i64 %3067, i64* %3070, align 8
  store i64 %3069, i64* %6, align 8
  store i64 %3066, i64* %3, align 8
  %call2_401d19 = tail call %struct.Memory* @sub_409540._Z13test_constantIj20custom_add_constantsIjEEvPT_iPKc(%struct.State* %0, i64 %3066, %struct.Memory* %call2_401d06)
  %3071 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x4192ff_type* @G__0x4192ff to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4192ff_type* @G__0x4192ff to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %3072 = load i64, i64* %RBP.i, align 8
  %3073 = add i64 %3072, -96
  %3074 = add i64 %3071, 11
  store i64 %3074, i64* %PC.i, align 8
  %3075 = inttoptr i64 %3073 to i64*
  %3076 = load i64, i64* %3075, align 8
  store i64 %3076, i64* %RDI.i3614.pre-phi, align 8
  %3077 = add i64 %3072, -44
  %3078 = add i64 %3071, 14
  store i64 %3078, i64* %PC.i, align 8
  %3079 = inttoptr i64 %3077 to i32*
  %3080 = load i32, i32* %3079, align 4
  %3081 = zext i32 %3080 to i64
  store i64 %3081, i64* %RSI.i3629, align 8
  %3082 = add i64 %3071, 30914
  %3083 = add i64 %3071, 19
  %3084 = load i64, i64* %6, align 8
  %3085 = add i64 %3084, -8
  %3086 = inttoptr i64 %3085 to i64*
  store i64 %3083, i64* %3086, align 8
  store i64 %3085, i64* %6, align 8
  store i64 %3082, i64* %3, align 8
  %call2_401d2c = tail call %struct.Memory* @sub_4095e0._Z13test_constantIj20custom_sub_constantsIjEEvPT_iPKc(%struct.State* %0, i64 %3082, %struct.Memory* %call2_401d19)
  %3087 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x41931b_type* @G__0x41931b to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41931b_type* @G__0x41931b to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %3088 = load i64, i64* %RBP.i, align 8
  %3089 = add i64 %3088, -96
  %3090 = add i64 %3087, 11
  store i64 %3090, i64* %PC.i, align 8
  %3091 = inttoptr i64 %3089 to i64*
  %3092 = load i64, i64* %3091, align 8
  store i64 %3092, i64* %RDI.i3614.pre-phi, align 8
  %3093 = add i64 %3088, -44
  %3094 = add i64 %3087, 14
  store i64 %3094, i64* %PC.i, align 8
  %3095 = inttoptr i64 %3093 to i32*
  %3096 = load i32, i32* %3095, align 4
  %3097 = zext i32 %3096 to i64
  store i64 %3097, i64* %RSI.i3629, align 8
  %3098 = add i64 %3087, 31055
  %3099 = add i64 %3087, 19
  %3100 = load i64, i64* %6, align 8
  %3101 = add i64 %3100, -8
  %3102 = inttoptr i64 %3101 to i64*
  store i64 %3099, i64* %3102, align 8
  store i64 %3101, i64* %6, align 8
  store i64 %3098, i64* %3, align 8
  %call2_401d3f = tail call %struct.Memory* @sub_409680._Z13test_constantIj25custom_multiply_constantsIjEEvPT_iPKc(%struct.State* %0, i64 %3098, %struct.Memory* %call2_401d2c)
  %3103 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x419337_type* @G__0x419337 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419337_type* @G__0x419337 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %3104 = load i64, i64* %RBP.i, align 8
  %3105 = add i64 %3104, -96
  %3106 = add i64 %3103, 11
  store i64 %3106, i64* %PC.i, align 8
  %3107 = inttoptr i64 %3105 to i64*
  %3108 = load i64, i64* %3107, align 8
  store i64 %3108, i64* %RDI.i3614.pre-phi, align 8
  %3109 = add i64 %3104, -44
  %3110 = add i64 %3103, 14
  store i64 %3110, i64* %PC.i, align 8
  %3111 = inttoptr i64 %3109 to i32*
  %3112 = load i32, i32* %3111, align 4
  %3113 = zext i32 %3112 to i64
  store i64 %3113, i64* %RSI.i3629, align 8
  %3114 = add i64 %3103, 31196
  %3115 = add i64 %3103, 19
  %3116 = load i64, i64* %6, align 8
  %3117 = add i64 %3116, -8
  %3118 = inttoptr i64 %3117 to i64*
  store i64 %3115, i64* %3118, align 8
  store i64 %3117, i64* %6, align 8
  store i64 %3114, i64* %3, align 8
  %call2_401d52 = tail call %struct.Memory* @sub_409720._Z13test_constantIj23custom_divide_constantsIjEEvPT_iPKc(%struct.State* %0, i64 %3114, %struct.Memory* %call2_401d3f)
  %3119 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x419351_type* @G__0x419351 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419351_type* @G__0x419351 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %3120 = load i64, i64* %RBP.i, align 8
  %3121 = add i64 %3120, -96
  %3122 = add i64 %3119, 11
  store i64 %3122, i64* %PC.i, align 8
  %3123 = inttoptr i64 %3121 to i64*
  %3124 = load i64, i64* %3123, align 8
  store i64 %3124, i64* %RDI.i3614.pre-phi, align 8
  %3125 = add i64 %3120, -44
  %3126 = add i64 %3119, 14
  store i64 %3126, i64* %PC.i, align 8
  %3127 = inttoptr i64 %3125 to i32*
  %3128 = load i32, i32* %3127, align 4
  %3129 = zext i32 %3128 to i64
  store i64 %3129, i64* %RSI.i3629, align 8
  %3130 = add i64 %3119, 31337
  %3131 = add i64 %3119, 19
  %3132 = load i64, i64* %6, align 8
  %3133 = add i64 %3132, -8
  %3134 = inttoptr i64 %3133 to i64*
  store i64 %3131, i64* %3134, align 8
  store i64 %3133, i64* %6, align 8
  store i64 %3130, i64* %3, align 8
  %call2_401d65 = tail call %struct.Memory* @sub_4097c0._Z13test_constantIj20custom_mod_constantsIjEEvPT_iPKc(%struct.State* %0, i64 %3130, %struct.Memory* %call2_401d52)
  %3135 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x419368_type* @G__0x419368 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419368_type* @G__0x419368 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %3136 = load i64, i64* %RBP.i, align 8
  %3137 = add i64 %3136, -96
  %3138 = add i64 %3135, 11
  store i64 %3138, i64* %PC.i, align 8
  %3139 = inttoptr i64 %3137 to i64*
  %3140 = load i64, i64* %3139, align 8
  store i64 %3140, i64* %RDI.i3614.pre-phi, align 8
  %3141 = add i64 %3136, -44
  %3142 = add i64 %3135, 14
  store i64 %3142, i64* %PC.i, align 8
  %3143 = inttoptr i64 %3141 to i32*
  %3144 = load i32, i32* %3143, align 4
  %3145 = zext i32 %3144 to i64
  store i64 %3145, i64* %RSI.i3629, align 8
  %3146 = add i64 %3135, 31478
  %3147 = add i64 %3135, 19
  %3148 = load i64, i64* %6, align 8
  %3149 = add i64 %3148, -8
  %3150 = inttoptr i64 %3149 to i64*
  store i64 %3147, i64* %3150, align 8
  store i64 %3149, i64* %6, align 8
  store i64 %3146, i64* %3, align 8
  %call2_401d78 = tail call %struct.Memory* @sub_409860._Z13test_constantIj22custom_equal_constantsIjEEvPT_iPKc(%struct.State* %0, i64 %3146, %struct.Memory* %call2_401d65)
  %3151 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x419381_type* @G__0x419381 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419381_type* @G__0x419381 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %3152 = load i64, i64* %RBP.i, align 8
  %3153 = add i64 %3152, -96
  %3154 = add i64 %3151, 11
  store i64 %3154, i64* %PC.i, align 8
  %3155 = inttoptr i64 %3153 to i64*
  %3156 = load i64, i64* %3155, align 8
  store i64 %3156, i64* %RDI.i3614.pre-phi, align 8
  %3157 = add i64 %3152, -44
  %3158 = add i64 %3151, 14
  store i64 %3158, i64* %PC.i, align 8
  %3159 = inttoptr i64 %3157 to i32*
  %3160 = load i32, i32* %3159, align 4
  %3161 = zext i32 %3160 to i64
  store i64 %3161, i64* %RSI.i3629, align 8
  %3162 = add i64 %3151, 31619
  %3163 = add i64 %3151, 19
  %3164 = load i64, i64* %6, align 8
  %3165 = add i64 %3164, -8
  %3166 = inttoptr i64 %3165 to i64*
  store i64 %3163, i64* %3166, align 8
  store i64 %3165, i64* %6, align 8
  store i64 %3162, i64* %3, align 8
  %call2_401d8b = tail call %struct.Memory* @sub_409900._Z13test_constantIj25custom_notequal_constantsIjEEvPT_iPKc(%struct.State* %0, i64 %3162, %struct.Memory* %call2_401d78)
  %3167 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x41939d_type* @G__0x41939d to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41939d_type* @G__0x41939d to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %3168 = load i64, i64* %RBP.i, align 8
  %3169 = add i64 %3168, -96
  %3170 = add i64 %3167, 11
  store i64 %3170, i64* %PC.i, align 8
  %3171 = inttoptr i64 %3169 to i64*
  %3172 = load i64, i64* %3171, align 8
  store i64 %3172, i64* %RDI.i3614.pre-phi, align 8
  %3173 = add i64 %3168, -44
  %3174 = add i64 %3167, 14
  store i64 %3174, i64* %PC.i, align 8
  %3175 = inttoptr i64 %3173 to i32*
  %3176 = load i32, i32* %3175, align 4
  %3177 = zext i32 %3176 to i64
  store i64 %3177, i64* %RSI.i3629, align 8
  %3178 = add i64 %3167, 31760
  %3179 = add i64 %3167, 19
  %3180 = load i64, i64* %6, align 8
  %3181 = add i64 %3180, -8
  %3182 = inttoptr i64 %3181 to i64*
  store i64 %3179, i64* %3182, align 8
  store i64 %3181, i64* %6, align 8
  store i64 %3178, i64* %3, align 8
  %call2_401d9e = tail call %struct.Memory* @sub_4099a0._Z13test_constantIj28custom_greaterthan_constantsIjEEvPT_iPKc(%struct.State* %0, i64 %3178, %struct.Memory* %call2_401d8b)
  %3183 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x4193bd_type* @G__0x4193bd to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4193bd_type* @G__0x4193bd to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %3184 = load i64, i64* %RBP.i, align 8
  %3185 = add i64 %3184, -96
  %3186 = add i64 %3183, 11
  store i64 %3186, i64* %PC.i, align 8
  %3187 = inttoptr i64 %3185 to i64*
  %3188 = load i64, i64* %3187, align 8
  store i64 %3188, i64* %RDI.i3614.pre-phi, align 8
  %3189 = add i64 %3184, -44
  %3190 = add i64 %3183, 14
  store i64 %3190, i64* %PC.i, align 8
  %3191 = inttoptr i64 %3189 to i32*
  %3192 = load i32, i32* %3191, align 4
  %3193 = zext i32 %3192 to i64
  store i64 %3193, i64* %RSI.i3629, align 8
  %3194 = add i64 %3183, 31901
  %3195 = add i64 %3183, 19
  %3196 = load i64, i64* %6, align 8
  %3197 = add i64 %3196, -8
  %3198 = inttoptr i64 %3197 to i64*
  store i64 %3195, i64* %3198, align 8
  store i64 %3197, i64* %6, align 8
  store i64 %3194, i64* %3, align 8
  %call2_401db1 = tail call %struct.Memory* @sub_409a40._Z13test_constantIj25custom_lessthan_constantsIjEEvPT_iPKc(%struct.State* %0, i64 %3194, %struct.Memory* %call2_401d9e)
  %3199 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x4193da_type* @G__0x4193da to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4193da_type* @G__0x4193da to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %3200 = load i64, i64* %RBP.i, align 8
  %3201 = add i64 %3200, -96
  %3202 = add i64 %3199, 11
  store i64 %3202, i64* %PC.i, align 8
  %3203 = inttoptr i64 %3201 to i64*
  %3204 = load i64, i64* %3203, align 8
  store i64 %3204, i64* %RDI.i3614.pre-phi, align 8
  %3205 = add i64 %3200, -44
  %3206 = add i64 %3199, 14
  store i64 %3206, i64* %PC.i, align 8
  %3207 = inttoptr i64 %3205 to i32*
  %3208 = load i32, i32* %3207, align 4
  %3209 = zext i32 %3208 to i64
  store i64 %3209, i64* %RSI.i3629, align 8
  %3210 = add i64 %3199, 32042
  %3211 = add i64 %3199, 19
  %3212 = load i64, i64* %6, align 8
  %3213 = add i64 %3212, -8
  %3214 = inttoptr i64 %3213 to i64*
  store i64 %3211, i64* %3214, align 8
  store i64 %3213, i64* %6, align 8
  store i64 %3210, i64* %3, align 8
  %call2_401dc4 = tail call %struct.Memory* @sub_409ae0._Z13test_constantIj33custom_greaterthanequal_constantsIjEEvPT_iPKc(%struct.State* %0, i64 %3210, %struct.Memory* %call2_401db1)
  %3215 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x419400_type* @G__0x419400 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419400_type* @G__0x419400 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %3216 = load i64, i64* %RBP.i, align 8
  %3217 = add i64 %3216, -96
  %3218 = add i64 %3215, 11
  store i64 %3218, i64* %PC.i, align 8
  %3219 = inttoptr i64 %3217 to i64*
  %3220 = load i64, i64* %3219, align 8
  store i64 %3220, i64* %RDI.i3614.pre-phi, align 8
  %3221 = add i64 %3216, -44
  %3222 = add i64 %3215, 14
  store i64 %3222, i64* %PC.i, align 8
  %3223 = inttoptr i64 %3221 to i32*
  %3224 = load i32, i32* %3223, align 4
  %3225 = zext i32 %3224 to i64
  store i64 %3225, i64* %RSI.i3629, align 8
  %3226 = add i64 %3215, 32183
  %3227 = add i64 %3215, 19
  %3228 = load i64, i64* %6, align 8
  %3229 = add i64 %3228, -8
  %3230 = inttoptr i64 %3229 to i64*
  store i64 %3227, i64* %3230, align 8
  store i64 %3229, i64* %6, align 8
  store i64 %3226, i64* %3, align 8
  %call2_401dd7 = tail call %struct.Memory* @sub_409b80._Z13test_constantIj30custom_lessthanequal_constantsIjEEvPT_iPKc(%struct.State* %0, i64 %3226, %struct.Memory* %call2_401dc4)
  %3231 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x419423_type* @G__0x419423 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419423_type* @G__0x419423 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %3232 = load i64, i64* %RBP.i, align 8
  %3233 = add i64 %3232, -96
  %3234 = add i64 %3231, 11
  store i64 %3234, i64* %PC.i, align 8
  %3235 = inttoptr i64 %3233 to i64*
  %3236 = load i64, i64* %3235, align 8
  store i64 %3236, i64* %RDI.i3614.pre-phi, align 8
  %3237 = add i64 %3232, -44
  %3238 = add i64 %3231, 14
  store i64 %3238, i64* %PC.i, align 8
  %3239 = inttoptr i64 %3237 to i32*
  %3240 = load i32, i32* %3239, align 4
  %3241 = zext i32 %3240 to i64
  store i64 %3241, i64* %RSI.i3629, align 8
  %3242 = add i64 %3231, 32324
  %3243 = add i64 %3231, 19
  %3244 = load i64, i64* %6, align 8
  %3245 = add i64 %3244, -8
  %3246 = inttoptr i64 %3245 to i64*
  store i64 %3243, i64* %3246, align 8
  store i64 %3245, i64* %6, align 8
  store i64 %3242, i64* %3, align 8
  %call2_401dea = tail call %struct.Memory* @sub_409c20._Z13test_constantIj20custom_and_constantsIjEEvPT_iPKc(%struct.State* %0, i64 %3242, %struct.Memory* %call2_401dd7)
  %3247 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x41943a_type* @G__0x41943a to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41943a_type* @G__0x41943a to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %3248 = load i64, i64* %RBP.i, align 8
  %3249 = add i64 %3248, -96
  %3250 = add i64 %3247, 11
  store i64 %3250, i64* %PC.i, align 8
  %3251 = inttoptr i64 %3249 to i64*
  %3252 = load i64, i64* %3251, align 8
  store i64 %3252, i64* %RDI.i3614.pre-phi, align 8
  %3253 = add i64 %3248, -44
  %3254 = add i64 %3247, 14
  store i64 %3254, i64* %PC.i, align 8
  %3255 = inttoptr i64 %3253 to i32*
  %3256 = load i32, i32* %3255, align 4
  %3257 = zext i32 %3256 to i64
  store i64 %3257, i64* %RSI.i3629, align 8
  %3258 = add i64 %3247, 32465
  %3259 = add i64 %3247, 19
  %3260 = load i64, i64* %6, align 8
  %3261 = add i64 %3260, -8
  %3262 = inttoptr i64 %3261 to i64*
  store i64 %3259, i64* %3262, align 8
  store i64 %3261, i64* %6, align 8
  store i64 %3258, i64* %3, align 8
  %call2_401dfd = tail call %struct.Memory* @sub_409cc0._Z13test_constantIj19custom_or_constantsIjEEvPT_iPKc(%struct.State* %0, i64 %3258, %struct.Memory* %call2_401dea)
  %3263 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x419450_type* @G__0x419450 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419450_type* @G__0x419450 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %3264 = load i64, i64* %RBP.i, align 8
  %3265 = add i64 %3264, -96
  %3266 = add i64 %3263, 11
  store i64 %3266, i64* %PC.i, align 8
  %3267 = inttoptr i64 %3265 to i64*
  %3268 = load i64, i64* %3267, align 8
  store i64 %3268, i64* %RDI.i3614.pre-phi, align 8
  %3269 = add i64 %3264, -44
  %3270 = add i64 %3263, 14
  store i64 %3270, i64* %PC.i, align 8
  %3271 = inttoptr i64 %3269 to i32*
  %3272 = load i32, i32* %3271, align 4
  %3273 = zext i32 %3272 to i64
  store i64 %3273, i64* %RSI.i3629, align 8
  %3274 = add i64 %3263, 32606
  %3275 = add i64 %3263, 19
  %3276 = load i64, i64* %6, align 8
  %3277 = add i64 %3276, -8
  %3278 = inttoptr i64 %3277 to i64*
  store i64 %3275, i64* %3278, align 8
  store i64 %3277, i64* %6, align 8
  store i64 %3274, i64* %3, align 8
  %call2_401e10 = tail call %struct.Memory* @sub_409d60._Z13test_constantIj20custom_xor_constantsIjEEvPT_iPKc(%struct.State* %0, i64 %3274, %struct.Memory* %call2_401dfd)
  %3279 = load i64, i64* %PC.i, align 8
  %3280 = load i32, i32* bitcast (%G_0x220264__rip__type* @G_0x220264__rip_ to i32*), align 8
  %3281 = sext i32 %3280 to i64
  %3282 = mul nsw i64 %3281, 1717986919
  %3283 = lshr i64 %3282, 63
  store i64 %3283, i64* %RCX.i3623, align 8
  %3284 = ashr i64 %3282, 34
  store i64 %3284, i64* %.pre18, align 8
  %3285 = trunc i64 %3284 to i32
  %3286 = trunc i64 %3283 to i32
  %3287 = add i32 %3286, %3285
  %3288 = zext i32 %3287 to i64
  store i64 %3288, i64* %194, align 8
  %3289 = icmp ult i32 %3287, %3285
  %3290 = icmp ult i32 %3287, %3286
  %3291 = or i1 %3289, %3290
  %3292 = zext i1 %3291 to i8
  store i8 %3292, i8* %14, align 1
  %3293 = and i32 %3287, 255
  %3294 = tail call i32 @llvm.ctpop.i32(i32 %3293)
  %3295 = trunc i32 %3294 to i8
  %3296 = and i8 %3295, 1
  %3297 = xor i8 %3296, 1
  store i8 %3297, i8* %21, align 1
  %3298 = trunc i64 %3284 to i32
  %3299 = xor i32 %3298, %3287
  %3300 = lshr i32 %3299, 4
  %3301 = trunc i32 %3300 to i8
  %3302 = and i8 %3301, 1
  store i8 %3302, i8* %27, align 1
  %3303 = icmp eq i32 %3287, 0
  %3304 = zext i1 %3303 to i8
  store i8 %3304, i8* %30, align 1
  %3305 = lshr i32 %3287, 31
  %3306 = trunc i32 %3305 to i8
  store i8 %3306, i8* %33, align 1
  %3307 = lshr i64 %3284, 31
  %3308 = trunc i64 %3307 to i32
  %3309 = and i32 %3308, 1
  %3310 = xor i32 %3305, %3309
  %3311 = add nuw nsw i32 %3310, %3305
  %3312 = icmp eq i32 %3311, 2
  %3313 = zext i1 %3312 to i8
  store i8 %3313, i8* %39, align 1
  store i32 %3287, i32* bitcast (%G_0x220283__rip__type* @G_0x220283__rip_ to i32*), align 8
  store i64 and (i64 ptrtoint (%G__0x419467_type* @G__0x419467 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419467_type* @G__0x419467 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %3314 = load i64, i64* %RBP.i, align 8
  %3315 = add i64 %3314, -96
  %3316 = add i64 %3279, 51
  store i64 %3316, i64* %PC.i, align 8
  %3317 = inttoptr i64 %3315 to i64*
  %3318 = load i64, i64* %3317, align 8
  store i64 %3318, i64* %RDI.i3614.pre-phi, align 8
  %3319 = add i64 %3314, -44
  %3320 = add i64 %3279, 54
  store i64 %3320, i64* %PC.i, align 8
  %3321 = inttoptr i64 %3319 to i32*
  %3322 = load i32, i32* %3321, align 4
  %3323 = zext i32 %3322 to i64
  store i64 %3323, i64* %RSI.i3629, align 8
  %3324 = add i64 %3279, 32747
  %3325 = add i64 %3279, 59
  %3326 = load i64, i64* %6, align 8
  %3327 = add i64 %3326, -8
  %3328 = inttoptr i64 %3327 to i64*
  store i64 %3325, i64* %3328, align 8
  store i64 %3327, i64* %6, align 8
  store i64 %3324, i64* %3, align 8
  %call2_401e4b = tail call %struct.Memory* @sub_409e00._Z13test_constantIj19custom_constant_addIjEEvPT_iPKc(%struct.State* %0, i64 %3324, %struct.Memory* %call2_401e10)
  %3329 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x41947d_type* @G__0x41947d to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41947d_type* @G__0x41947d to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %3330 = load i64, i64* %RBP.i, align 8
  %3331 = add i64 %3330, -96
  %3332 = add i64 %3329, 11
  store i64 %3332, i64* %PC.i, align 8
  %3333 = inttoptr i64 %3331 to i64*
  %3334 = load i64, i64* %3333, align 8
  store i64 %3334, i64* %RDI.i3614.pre-phi, align 8
  %3335 = add i64 %3330, -44
  %3336 = add i64 %3329, 14
  store i64 %3336, i64* %PC.i, align 8
  %3337 = inttoptr i64 %3335 to i32*
  %3338 = load i32, i32* %3337, align 4
  %3339 = zext i32 %3338 to i64
  store i64 %3339, i64* %RSI.i3629, align 8
  %3340 = add i64 %3329, 32848
  %3341 = add i64 %3329, 19
  %3342 = load i64, i64* %6, align 8
  %3343 = add i64 %3342, -8
  %3344 = inttoptr i64 %3343 to i64*
  store i64 %3341, i64* %3344, align 8
  store i64 %3343, i64* %6, align 8
  store i64 %3340, i64* %3, align 8
  %call2_401e5e = tail call %struct.Memory* @sub_409ea0._Z13test_constantIj28custom_multiple_constant_addIjEEvPT_iPKc(%struct.State* %0, i64 %3340, %struct.Memory* %call2_401e4b)
  %3345 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x41949d_type* @G__0x41949d to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41949d_type* @G__0x41949d to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %3346 = load i64, i64* %RBP.i, align 8
  %3347 = add i64 %3346, -96
  %3348 = add i64 %3345, 11
  store i64 %3348, i64* %PC.i, align 8
  %3349 = inttoptr i64 %3347 to i64*
  %3350 = load i64, i64* %3349, align 8
  store i64 %3350, i64* %RDI.i3614.pre-phi, align 8
  %3351 = add i64 %3346, -44
  %3352 = add i64 %3345, 14
  store i64 %3352, i64* %PC.i, align 8
  %3353 = inttoptr i64 %3351 to i32*
  %3354 = load i32, i32* %3353, align 4
  %3355 = zext i32 %3354 to i64
  store i64 %3355, i64* %RSI.i3629, align 8
  %3356 = add i64 %3345, 32989
  %3357 = add i64 %3345, 19
  %3358 = load i64, i64* %6, align 8
  %3359 = add i64 %3358, -8
  %3360 = inttoptr i64 %3359 to i64*
  store i64 %3357, i64* %3360, align 8
  store i64 %3359, i64* %6, align 8
  store i64 %3356, i64* %3, align 8
  %call2_401e71 = tail call %struct.Memory* @sub_409f40._Z13test_constantIj19custom_constant_subIjEEvPT_iPKc(%struct.State* %0, i64 %3356, %struct.Memory* %call2_401e5e)
  %3361 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x4194b8_type* @G__0x4194b8 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4194b8_type* @G__0x4194b8 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %3362 = load i64, i64* %RBP.i, align 8
  %3363 = add i64 %3362, -96
  %3364 = add i64 %3361, 11
  store i64 %3364, i64* %PC.i, align 8
  %3365 = inttoptr i64 %3363 to i64*
  %3366 = load i64, i64* %3365, align 8
  store i64 %3366, i64* %RDI.i3614.pre-phi, align 8
  %3367 = add i64 %3362, -44
  %3368 = add i64 %3361, 14
  store i64 %3368, i64* %PC.i, align 8
  %3369 = inttoptr i64 %3367 to i32*
  %3370 = load i32, i32* %3369, align 4
  %3371 = zext i32 %3370 to i64
  store i64 %3371, i64* %RSI.i3629, align 8
  %3372 = add i64 %3361, 33130
  %3373 = add i64 %3361, 19
  %3374 = load i64, i64* %6, align 8
  %3375 = add i64 %3374, -8
  %3376 = inttoptr i64 %3375 to i64*
  store i64 %3373, i64* %3376, align 8
  store i64 %3375, i64* %6, align 8
  store i64 %3372, i64* %3, align 8
  %call2_401e84 = tail call %struct.Memory* @sub_409fe0._Z13test_constantIj28custom_multiple_constant_subIjEEvPT_iPKc(%struct.State* %0, i64 %3372, %struct.Memory* %call2_401e71)
  %3377 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x4194dd_type* @G__0x4194dd to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4194dd_type* @G__0x4194dd to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %3378 = load i64, i64* %RBP.i, align 8
  %3379 = add i64 %3378, -96
  %3380 = add i64 %3377, 11
  store i64 %3380, i64* %PC.i, align 8
  %3381 = inttoptr i64 %3379 to i64*
  %3382 = load i64, i64* %3381, align 8
  store i64 %3382, i64* %RDI.i3614.pre-phi, align 8
  %3383 = add i64 %3378, -44
  %3384 = add i64 %3377, 14
  store i64 %3384, i64* %PC.i, align 8
  %3385 = inttoptr i64 %3383 to i32*
  %3386 = load i32, i32* %3385, align 4
  %3387 = zext i32 %3386 to i64
  store i64 %3387, i64* %RSI.i3629, align 8
  %3388 = add i64 %3377, 33271
  %3389 = add i64 %3377, 19
  %3390 = load i64, i64* %6, align 8
  %3391 = add i64 %3390, -8
  %3392 = inttoptr i64 %3391 to i64*
  store i64 %3389, i64* %3392, align 8
  store i64 %3391, i64* %6, align 8
  store i64 %3388, i64* %3, align 8
  %call2_401e97 = tail call %struct.Memory* @sub_40a080._Z13test_constantIj24custom_constant_multiplyIjEEvPT_iPKc(%struct.State* %0, i64 %3388, %struct.Memory* %call2_401e84)
  %3393 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x4194f8_type* @G__0x4194f8 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4194f8_type* @G__0x4194f8 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %3394 = load i64, i64* %RBP.i, align 8
  %3395 = add i64 %3394, -96
  %3396 = add i64 %3393, 11
  store i64 %3396, i64* %PC.i, align 8
  %3397 = inttoptr i64 %3395 to i64*
  %3398 = load i64, i64* %3397, align 8
  store i64 %3398, i64* %RDI.i3614.pre-phi, align 8
  %3399 = add i64 %3394, -44
  %3400 = add i64 %3393, 14
  store i64 %3400, i64* %PC.i, align 8
  %3401 = inttoptr i64 %3399 to i32*
  %3402 = load i32, i32* %3401, align 4
  %3403 = zext i32 %3402 to i64
  store i64 %3403, i64* %RSI.i3629, align 8
  %3404 = add i64 %3393, 33412
  %3405 = add i64 %3393, 19
  %3406 = load i64, i64* %6, align 8
  %3407 = add i64 %3406, -8
  %3408 = inttoptr i64 %3407 to i64*
  store i64 %3405, i64* %3408, align 8
  store i64 %3407, i64* %6, align 8
  store i64 %3404, i64* %3, align 8
  %call2_401eaa = tail call %struct.Memory* @sub_40a120._Z13test_constantIj33custom_multiple_constant_multiplyIjEEvPT_iPKc(%struct.State* %0, i64 %3404, %struct.Memory* %call2_401e97)
  %3409 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x41951e_type* @G__0x41951e to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41951e_type* @G__0x41951e to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %3410 = load i64, i64* %RBP.i, align 8
  %3411 = add i64 %3410, -96
  %3412 = add i64 %3409, 11
  store i64 %3412, i64* %PC.i, align 8
  %3413 = inttoptr i64 %3411 to i64*
  %3414 = load i64, i64* %3413, align 8
  store i64 %3414, i64* %RDI.i3614.pre-phi, align 8
  %3415 = add i64 %3410, -44
  %3416 = add i64 %3409, 14
  store i64 %3416, i64* %PC.i, align 8
  %3417 = inttoptr i64 %3415 to i32*
  %3418 = load i32, i32* %3417, align 4
  %3419 = zext i32 %3418 to i64
  store i64 %3419, i64* %RSI.i3629, align 8
  %3420 = add i64 %3409, 33553
  %3421 = add i64 %3409, 19
  %3422 = load i64, i64* %6, align 8
  %3423 = add i64 %3422, -8
  %3424 = inttoptr i64 %3423 to i64*
  store i64 %3421, i64* %3424, align 8
  store i64 %3423, i64* %6, align 8
  store i64 %3420, i64* %3, align 8
  %call2_401ebd = tail call %struct.Memory* @sub_40a1c0._Z13test_constantIj34custom_multiple_constant_multiply2IjEEvPT_iPKc(%struct.State* %0, i64 %3420, %struct.Memory* %call2_401eaa)
  %3425 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x419543_type* @G__0x419543 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419543_type* @G__0x419543 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %3426 = load i64, i64* %RBP.i, align 8
  %3427 = add i64 %3426, -96
  %3428 = add i64 %3425, 11
  store i64 %3428, i64* %PC.i, align 8
  %3429 = inttoptr i64 %3427 to i64*
  %3430 = load i64, i64* %3429, align 8
  store i64 %3430, i64* %RDI.i3614.pre-phi, align 8
  %3431 = add i64 %3426, -44
  %3432 = add i64 %3425, 14
  store i64 %3432, i64* %PC.i, align 8
  %3433 = inttoptr i64 %3431 to i32*
  %3434 = load i32, i32* %3433, align 4
  %3435 = zext i32 %3434 to i64
  store i64 %3435, i64* %RSI.i3629, align 8
  %3436 = add i64 %3425, 33694
  %3437 = add i64 %3425, 19
  %3438 = load i64, i64* %6, align 8
  %3439 = add i64 %3438, -8
  %3440 = inttoptr i64 %3439 to i64*
  store i64 %3437, i64* %3440, align 8
  store i64 %3439, i64* %6, align 8
  store i64 %3436, i64* %3, align 8
  %call2_401ed0 = tail call %struct.Memory* @sub_40a260._Z13test_constantIj22custom_constant_divideIjEEvPT_iPKc(%struct.State* %0, i64 %3436, %struct.Memory* %call2_401ebd)
  %3441 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x41955c_type* @G__0x41955c to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41955c_type* @G__0x41955c to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %3442 = load i64, i64* %RBP.i, align 8
  %3443 = add i64 %3442, -96
  %3444 = add i64 %3441, 11
  store i64 %3444, i64* %PC.i, align 8
  %3445 = inttoptr i64 %3443 to i64*
  %3446 = load i64, i64* %3445, align 8
  store i64 %3446, i64* %RDI.i3614.pre-phi, align 8
  %3447 = add i64 %3442, -44
  %3448 = add i64 %3441, 14
  store i64 %3448, i64* %PC.i, align 8
  %3449 = inttoptr i64 %3447 to i32*
  %3450 = load i32, i32* %3449, align 4
  %3451 = zext i32 %3450 to i64
  store i64 %3451, i64* %RSI.i3629, align 8
  %3452 = add i64 %3441, 33835
  %3453 = add i64 %3441, 19
  %3454 = load i64, i64* %6, align 8
  %3455 = add i64 %3454, -8
  %3456 = inttoptr i64 %3455 to i64*
  store i64 %3453, i64* %3456, align 8
  store i64 %3455, i64* %6, align 8
  store i64 %3452, i64* %3, align 8
  %call2_401ee3 = tail call %struct.Memory* @sub_40a300._Z13test_constantIj31custom_multiple_constant_divideIjEEvPT_iPKc(%struct.State* %0, i64 %3452, %struct.Memory* %call2_401ed0)
  %3457 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x41957f_type* @G__0x41957f to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41957f_type* @G__0x41957f to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %3458 = load i64, i64* %RBP.i, align 8
  %3459 = add i64 %3458, -96
  %3460 = add i64 %3457, 11
  store i64 %3460, i64* %PC.i, align 8
  %3461 = inttoptr i64 %3459 to i64*
  %3462 = load i64, i64* %3461, align 8
  store i64 %3462, i64* %RDI.i3614.pre-phi, align 8
  %3463 = add i64 %3458, -44
  %3464 = add i64 %3457, 14
  store i64 %3464, i64* %PC.i, align 8
  %3465 = inttoptr i64 %3463 to i32*
  %3466 = load i32, i32* %3465, align 4
  %3467 = zext i32 %3466 to i64
  store i64 %3467, i64* %RSI.i3629, align 8
  %3468 = add i64 %3457, 33976
  %3469 = add i64 %3457, 19
  %3470 = load i64, i64* %6, align 8
  %3471 = add i64 %3470, -8
  %3472 = inttoptr i64 %3471 to i64*
  store i64 %3469, i64* %3472, align 8
  store i64 %3471, i64* %6, align 8
  store i64 %3468, i64* %3, align 8
  %call2_401ef6 = tail call %struct.Memory* @sub_40a3a0._Z13test_constantIj32custom_multiple_constant_divide2IjEEvPT_iPKc(%struct.State* %0, i64 %3468, %struct.Memory* %call2_401ee3)
  %3473 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x4195a2_type* @G__0x4195a2 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4195a2_type* @G__0x4195a2 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %3474 = load i64, i64* %RBP.i, align 8
  %3475 = add i64 %3474, -96
  %3476 = add i64 %3473, 11
  store i64 %3476, i64* %PC.i, align 8
  %3477 = inttoptr i64 %3475 to i64*
  %3478 = load i64, i64* %3477, align 8
  store i64 %3478, i64* %RDI.i3614.pre-phi, align 8
  %3479 = add i64 %3474, -44
  %3480 = add i64 %3473, 14
  store i64 %3480, i64* %PC.i, align 8
  %3481 = inttoptr i64 %3479 to i32*
  %3482 = load i32, i32* %3481, align 4
  %3483 = zext i32 %3482 to i64
  store i64 %3483, i64* %RSI.i3629, align 8
  %3484 = add i64 %3473, 34117
  %3485 = add i64 %3473, 19
  %3486 = load i64, i64* %6, align 8
  %3487 = add i64 %3486, -8
  %3488 = inttoptr i64 %3487 to i64*
  store i64 %3485, i64* %3488, align 8
  store i64 %3487, i64* %6, align 8
  store i64 %3484, i64* %3, align 8
  %call2_401f09 = tail call %struct.Memory* @sub_40a440._Z13test_constantIj30custom_multiple_constant_mixedIjEEvPT_iPKc(%struct.State* %0, i64 %3484, %struct.Memory* %call2_401ef6)
  %3489 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x4195c3_type* @G__0x4195c3 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4195c3_type* @G__0x4195c3 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %3490 = load i64, i64* %RBP.i, align 8
  %3491 = add i64 %3490, -96
  %3492 = add i64 %3489, 11
  store i64 %3492, i64* %PC.i, align 8
  %3493 = inttoptr i64 %3491 to i64*
  %3494 = load i64, i64* %3493, align 8
  store i64 %3494, i64* %RDI.i3614.pre-phi, align 8
  %3495 = add i64 %3490, -44
  %3496 = add i64 %3489, 14
  store i64 %3496, i64* %PC.i, align 8
  %3497 = inttoptr i64 %3495 to i32*
  %3498 = load i32, i32* %3497, align 4
  %3499 = zext i32 %3498 to i64
  store i64 %3499, i64* %RSI.i3629, align 8
  %3500 = add i64 %3489, 34258
  %3501 = add i64 %3489, 19
  %3502 = load i64, i64* %6, align 8
  %3503 = add i64 %3502, -8
  %3504 = inttoptr i64 %3503 to i64*
  store i64 %3501, i64* %3504, align 8
  store i64 %3503, i64* %6, align 8
  store i64 %3500, i64* %3, align 8
  %call2_401f1c = tail call %struct.Memory* @sub_40a4e0._Z13test_constantIj19custom_constant_andIjEEvPT_iPKc(%struct.State* %0, i64 %3500, %struct.Memory* %call2_401f09)
  %3505 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x4195d9_type* @G__0x4195d9 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4195d9_type* @G__0x4195d9 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %3506 = load i64, i64* %RBP.i, align 8
  %3507 = add i64 %3506, -96
  %3508 = add i64 %3505, 11
  store i64 %3508, i64* %PC.i, align 8
  %3509 = inttoptr i64 %3507 to i64*
  %3510 = load i64, i64* %3509, align 8
  store i64 %3510, i64* %RDI.i3614.pre-phi, align 8
  %3511 = add i64 %3506, -44
  %3512 = add i64 %3505, 14
  store i64 %3512, i64* %PC.i, align 8
  %3513 = inttoptr i64 %3511 to i32*
  %3514 = load i32, i32* %3513, align 4
  %3515 = zext i32 %3514 to i64
  store i64 %3515, i64* %RSI.i3629, align 8
  %3516 = add i64 %3505, 34399
  %3517 = add i64 %3505, 19
  %3518 = load i64, i64* %6, align 8
  %3519 = add i64 %3518, -8
  %3520 = inttoptr i64 %3519 to i64*
  store i64 %3517, i64* %3520, align 8
  store i64 %3519, i64* %6, align 8
  store i64 %3516, i64* %3, align 8
  %call2_401f2f = tail call %struct.Memory* @sub_40a580._Z13test_constantIj28custom_multiple_constant_andIjEEvPT_iPKc(%struct.State* %0, i64 %3516, %struct.Memory* %call2_401f1c)
  %3521 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x4195f8_type* @G__0x4195f8 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4195f8_type* @G__0x4195f8 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %3522 = load i64, i64* %RBP.i, align 8
  %3523 = add i64 %3522, -96
  %3524 = add i64 %3521, 11
  store i64 %3524, i64* %PC.i, align 8
  %3525 = inttoptr i64 %3523 to i64*
  %3526 = load i64, i64* %3525, align 8
  store i64 %3526, i64* %RDI.i3614.pre-phi, align 8
  %3527 = add i64 %3522, -44
  %3528 = add i64 %3521, 14
  store i64 %3528, i64* %PC.i, align 8
  %3529 = inttoptr i64 %3527 to i32*
  %3530 = load i32, i32* %3529, align 4
  %3531 = zext i32 %3530 to i64
  store i64 %3531, i64* %RSI.i3629, align 8
  %3532 = add i64 %3521, 34540
  %3533 = add i64 %3521, 19
  %3534 = load i64, i64* %6, align 8
  %3535 = add i64 %3534, -8
  %3536 = inttoptr i64 %3535 to i64*
  store i64 %3533, i64* %3536, align 8
  store i64 %3535, i64* %6, align 8
  store i64 %3532, i64* %3, align 8
  %call2_401f42 = tail call %struct.Memory* @sub_40a620._Z13test_constantIj18custom_constant_orIjEEvPT_iPKc(%struct.State* %0, i64 %3532, %struct.Memory* %call2_401f2f)
  %3537 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x41960d_type* @G__0x41960d to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41960d_type* @G__0x41960d to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %3538 = load i64, i64* %RBP.i, align 8
  %3539 = add i64 %3538, -96
  %3540 = add i64 %3537, 11
  store i64 %3540, i64* %PC.i, align 8
  %3541 = inttoptr i64 %3539 to i64*
  %3542 = load i64, i64* %3541, align 8
  store i64 %3542, i64* %RDI.i3614.pre-phi, align 8
  %3543 = add i64 %3538, -44
  %3544 = add i64 %3537, 14
  store i64 %3544, i64* %PC.i, align 8
  %3545 = inttoptr i64 %3543 to i32*
  %3546 = load i32, i32* %3545, align 4
  %3547 = zext i32 %3546 to i64
  store i64 %3547, i64* %RSI.i3629, align 8
  %3548 = add i64 %3537, 34681
  %3549 = add i64 %3537, 19
  %3550 = load i64, i64* %6, align 8
  %3551 = add i64 %3550, -8
  %3552 = inttoptr i64 %3551 to i64*
  store i64 %3549, i64* %3552, align 8
  store i64 %3551, i64* %6, align 8
  store i64 %3548, i64* %3, align 8
  %call2_401f55 = tail call %struct.Memory* @sub_40a6c0._Z13test_constantIj27custom_multiple_constant_orIjEEvPT_iPKc(%struct.State* %0, i64 %3548, %struct.Memory* %call2_401f42)
  %3553 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x41962b_type* @G__0x41962b to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41962b_type* @G__0x41962b to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %3554 = load i64, i64* %RBP.i, align 8
  %3555 = add i64 %3554, -96
  %3556 = add i64 %3553, 11
  store i64 %3556, i64* %PC.i, align 8
  %3557 = inttoptr i64 %3555 to i64*
  %3558 = load i64, i64* %3557, align 8
  store i64 %3558, i64* %RDI.i3614.pre-phi, align 8
  %3559 = add i64 %3554, -44
  %3560 = add i64 %3553, 14
  store i64 %3560, i64* %PC.i, align 8
  %3561 = inttoptr i64 %3559 to i32*
  %3562 = load i32, i32* %3561, align 4
  %3563 = zext i32 %3562 to i64
  store i64 %3563, i64* %RSI.i3629, align 8
  %3564 = add i64 %3553, 34822
  %3565 = add i64 %3553, 19
  %3566 = load i64, i64* %6, align 8
  %3567 = add i64 %3566, -8
  %3568 = inttoptr i64 %3567 to i64*
  store i64 %3565, i64* %3568, align 8
  store i64 %3567, i64* %6, align 8
  store i64 %3564, i64* %3, align 8
  %call2_401f68 = tail call %struct.Memory* @sub_40a760._Z13test_constantIj19custom_constant_xorIjEEvPT_iPKc(%struct.State* %0, i64 %3564, %struct.Memory* %call2_401f55)
  %3569 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x419641_type* @G__0x419641 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419641_type* @G__0x419641 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %3570 = load i64, i64* %RBP.i, align 8
  %3571 = add i64 %3570, -96
  %3572 = add i64 %3569, 11
  store i64 %3572, i64* %PC.i, align 8
  %3573 = inttoptr i64 %3571 to i64*
  %3574 = load i64, i64* %3573, align 8
  store i64 %3574, i64* %RDI.i3614.pre-phi, align 8
  %3575 = add i64 %3570, -44
  %3576 = add i64 %3569, 14
  store i64 %3576, i64* %PC.i, align 8
  %3577 = inttoptr i64 %3575 to i32*
  %3578 = load i32, i32* %3577, align 4
  %3579 = zext i32 %3578 to i64
  store i64 %3579, i64* %RSI.i3629, align 8
  %3580 = add i64 %3569, 34963
  %3581 = add i64 %3569, 19
  %3582 = load i64, i64* %6, align 8
  %3583 = add i64 %3582, -8
  %3584 = inttoptr i64 %3583 to i64*
  store i64 %3581, i64* %3584, align 8
  store i64 %3583, i64* %6, align 8
  store i64 %3580, i64* %3, align 8
  %call2_401f7b = tail call %struct.Memory* @sub_40a800._Z13test_constantIj28custom_multiple_constant_xorIjEEvPT_iPKc(%struct.State* %0, i64 %3580, %struct.Memory* %call2_401f68)
  %3585 = load i64, i64* %PC.i, align 8
  %3586 = load double, double* bitcast (%G_0x220100__rip__type* @G_0x220100__rip_ to double*), align 8
  store double %3586, double* %2442, align 1
  store double 0.000000e+00, double* %2444, align 1
  %3587 = tail call double @llvm.trunc.f64(double %3586)
  %3588 = tail call double @llvm.fabs.f64(double %3587)
  %3589 = fcmp ogt double %3588, 0x43E0000000000000
  %3590 = fptosi double %3587 to i64
  %3591 = select i1 %3589, i64 -9223372036854775808, i64 %3590
  store i64 %3591, i64* %RDX.i3618, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x6491d0_type* @G__0x6491d0 to i64), i64 4294967295) to i32) to i64), i64* %.pre18, align 8
  store i64 and (i64 ptrtoint (%G__0x658bd0_type* @G__0x658bd0 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x6491d0_type* @G__0x6491d0 to i64), i64 4294967295) to i32) to i64), i64* %RDI.i3614.pre-phi, align 8
  %3592 = load i64, i64* %RBP.i, align 8
  %3593 = add i64 %3592, -104
  %3594 = add i64 %3585, 32
  store i64 %3594, i64* %PC.i, align 8
  %3595 = inttoptr i64 %3593 to i64*
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x6491d0_type* @G__0x6491d0 to i64), i64 4294967295) to i32) to i64), i64* %3595, align 8
  %3596 = load i64, i64* %PC.i, align 8
  %3597 = add i64 %3596, 35072
  %3598 = add i64 %3596, 5
  %3599 = load i64, i64* %6, align 8
  %3600 = add i64 %3599, -8
  %3601 = inttoptr i64 %3600 to i64*
  store i64 %3598, i64* %3601, align 8
  store i64 %3600, i64* %6, align 8
  store i64 %3597, i64* %3, align 8
  %call2_401fa0 = tail call %struct.Memory* @sub_40a8a0._Z4fillIPllEvT_S1_T0_(%struct.State* %0, i64 %3597, %struct.Memory* %call2_401f7b)
  %3602 = load i64, i64* %PC.i, align 8
  %3603 = load i32, i32* bitcast (%G_0x2200d4__rip__type* @G_0x2200d4__rip_ to i32*), align 8
  store i32 %3603, i32* bitcast (%G_0x22010d__rip__type* @G_0x22010d__rip_ to i32*), align 8
  store i64 and (i64 ptrtoint (%G__0x419661_type* @G__0x419661 to i64), i64 4294967295), i64* %194, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419661_type* @G__0x419661 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %3604 = load i64, i64* %RBP.i, align 8
  %3605 = add i64 %3604, -104
  %3606 = add i64 %3602, 27
  store i64 %3606, i64* %PC.i, align 8
  %3607 = inttoptr i64 %3605 to i64*
  %3608 = load i64, i64* %3607, align 8
  store i64 %3608, i64* %RDI.i3614.pre-phi, align 8
  %3609 = add i64 %3604, -44
  %3610 = add i64 %3602, 30
  store i64 %3610, i64* %PC.i, align 8
  %3611 = inttoptr i64 %3609 to i32*
  %3612 = load i32, i32* %3611, align 4
  %3613 = zext i32 %3612 to i64
  store i64 %3613, i64* %RSI.i3629, align 8
  %3614 = add i64 %3602, 35131
  %3615 = add i64 %3602, 35
  %3616 = load i64, i64* %6, align 8
  %3617 = add i64 %3616, -8
  %3618 = inttoptr i64 %3617 to i64*
  store i64 %3615, i64* %3618, align 8
  store i64 %3617, i64* %6, align 8
  store i64 %3614, i64* %3, align 8
  %call2_401fc3 = tail call %struct.Memory* @sub_40a8e0._Z13test_constantIl10custom_twoIlEEvPT_iPKc(%struct.State* %0, i64 %3614, %struct.Memory* %call2_401fa0)
  %3619 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x419673_type* @G__0x419673 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419673_type* @G__0x419673 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %3620 = load i64, i64* %RBP.i, align 8
  %3621 = add i64 %3620, -104
  %3622 = add i64 %3619, 11
  store i64 %3622, i64* %PC.i, align 8
  %3623 = inttoptr i64 %3621 to i64*
  %3624 = load i64, i64* %3623, align 8
  store i64 %3624, i64* %RDI.i3614.pre-phi, align 8
  %3625 = add i64 %3620, -44
  %3626 = add i64 %3619, 14
  store i64 %3626, i64* %PC.i, align 8
  %3627 = inttoptr i64 %3625 to i32*
  %3628 = load i32, i32* %3627, align 4
  %3629 = zext i32 %3628 to i64
  store i64 %3629, i64* %RSI.i3629, align 8
  %3630 = add i64 %3619, 35256
  %3631 = add i64 %3619, 19
  %3632 = load i64, i64* %6, align 8
  %3633 = add i64 %3632, -8
  %3634 = inttoptr i64 %3633 to i64*
  store i64 %3631, i64* %3634, align 8
  store i64 %3633, i64* %6, align 8
  store i64 %3630, i64* %3, align 8
  %call2_401fd6 = tail call %struct.Memory* @sub_40a980._Z13test_constantIl20custom_add_constantsIlEEvPT_iPKc(%struct.State* %0, i64 %3630, %struct.Memory* %call2_401fc3)
  %3635 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x41968a_type* @G__0x41968a to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41968a_type* @G__0x41968a to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %3636 = load i64, i64* %RBP.i, align 8
  %3637 = add i64 %3636, -104
  %3638 = add i64 %3635, 11
  store i64 %3638, i64* %PC.i, align 8
  %3639 = inttoptr i64 %3637 to i64*
  %3640 = load i64, i64* %3639, align 8
  store i64 %3640, i64* %RDI.i3614.pre-phi, align 8
  %3641 = add i64 %3636, -44
  %3642 = add i64 %3635, 14
  store i64 %3642, i64* %PC.i, align 8
  %3643 = inttoptr i64 %3641 to i32*
  %3644 = load i32, i32* %3643, align 4
  %3645 = zext i32 %3644 to i64
  store i64 %3645, i64* %RSI.i3629, align 8
  %3646 = add i64 %3635, 35397
  %3647 = add i64 %3635, 19
  %3648 = load i64, i64* %6, align 8
  %3649 = add i64 %3648, -8
  %3650 = inttoptr i64 %3649 to i64*
  store i64 %3647, i64* %3650, align 8
  store i64 %3649, i64* %6, align 8
  store i64 %3646, i64* %3, align 8
  %call2_401fe9 = tail call %struct.Memory* @sub_40aa20._Z13test_constantIl20custom_sub_constantsIlEEvPT_iPKc(%struct.State* %0, i64 %3646, %struct.Memory* %call2_401fd6)
  %3651 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x4196a6_type* @G__0x4196a6 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4196a6_type* @G__0x4196a6 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %3652 = load i64, i64* %RBP.i, align 8
  %3653 = add i64 %3652, -104
  %3654 = add i64 %3651, 11
  store i64 %3654, i64* %PC.i, align 8
  %3655 = inttoptr i64 %3653 to i64*
  %3656 = load i64, i64* %3655, align 8
  store i64 %3656, i64* %RDI.i3614.pre-phi, align 8
  %3657 = add i64 %3652, -44
  %3658 = add i64 %3651, 14
  store i64 %3658, i64* %PC.i, align 8
  %3659 = inttoptr i64 %3657 to i32*
  %3660 = load i32, i32* %3659, align 4
  %3661 = zext i32 %3660 to i64
  store i64 %3661, i64* %RSI.i3629, align 8
  %3662 = add i64 %3651, 35538
  %3663 = add i64 %3651, 19
  %3664 = load i64, i64* %6, align 8
  %3665 = add i64 %3664, -8
  %3666 = inttoptr i64 %3665 to i64*
  store i64 %3663, i64* %3666, align 8
  store i64 %3665, i64* %6, align 8
  store i64 %3662, i64* %3, align 8
  %call2_401ffc = tail call %struct.Memory* @sub_40aac0._Z13test_constantIl25custom_multiply_constantsIlEEvPT_iPKc(%struct.State* %0, i64 %3662, %struct.Memory* %call2_401fe9)
  %3667 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x4196c2_type* @G__0x4196c2 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4196c2_type* @G__0x4196c2 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %3668 = load i64, i64* %RBP.i, align 8
  %3669 = add i64 %3668, -104
  %3670 = add i64 %3667, 11
  store i64 %3670, i64* %PC.i, align 8
  %3671 = inttoptr i64 %3669 to i64*
  %3672 = load i64, i64* %3671, align 8
  store i64 %3672, i64* %RDI.i3614.pre-phi, align 8
  %3673 = add i64 %3668, -44
  %3674 = add i64 %3667, 14
  store i64 %3674, i64* %PC.i, align 8
  %3675 = inttoptr i64 %3673 to i32*
  %3676 = load i32, i32* %3675, align 4
  %3677 = zext i32 %3676 to i64
  store i64 %3677, i64* %RSI.i3629, align 8
  %3678 = add i64 %3667, 35679
  %3679 = add i64 %3667, 19
  %3680 = load i64, i64* %6, align 8
  %3681 = add i64 %3680, -8
  %3682 = inttoptr i64 %3681 to i64*
  store i64 %3679, i64* %3682, align 8
  store i64 %3681, i64* %6, align 8
  store i64 %3678, i64* %3, align 8
  %call2_40200f = tail call %struct.Memory* @sub_40ab60._Z13test_constantIl23custom_divide_constantsIlEEvPT_iPKc(%struct.State* %0, i64 %3678, %struct.Memory* %call2_401ffc)
  %3683 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x4196dc_type* @G__0x4196dc to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4196dc_type* @G__0x4196dc to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %3684 = load i64, i64* %RBP.i, align 8
  %3685 = add i64 %3684, -104
  %3686 = add i64 %3683, 11
  store i64 %3686, i64* %PC.i, align 8
  %3687 = inttoptr i64 %3685 to i64*
  %3688 = load i64, i64* %3687, align 8
  store i64 %3688, i64* %RDI.i3614.pre-phi, align 8
  %3689 = add i64 %3684, -44
  %3690 = add i64 %3683, 14
  store i64 %3690, i64* %PC.i, align 8
  %3691 = inttoptr i64 %3689 to i32*
  %3692 = load i32, i32* %3691, align 4
  %3693 = zext i32 %3692 to i64
  store i64 %3693, i64* %RSI.i3629, align 8
  %3694 = add i64 %3683, 35820
  %3695 = add i64 %3683, 19
  %3696 = load i64, i64* %6, align 8
  %3697 = add i64 %3696, -8
  %3698 = inttoptr i64 %3697 to i64*
  store i64 %3695, i64* %3698, align 8
  store i64 %3697, i64* %6, align 8
  store i64 %3694, i64* %3, align 8
  %call2_402022 = tail call %struct.Memory* @sub_40ac00._Z13test_constantIl20custom_mod_constantsIlEEvPT_iPKc(%struct.State* %0, i64 %3694, %struct.Memory* %call2_40200f)
  %3699 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x4196f3_type* @G__0x4196f3 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4196f3_type* @G__0x4196f3 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %3700 = load i64, i64* %RBP.i, align 8
  %3701 = add i64 %3700, -104
  %3702 = add i64 %3699, 11
  store i64 %3702, i64* %PC.i, align 8
  %3703 = inttoptr i64 %3701 to i64*
  %3704 = load i64, i64* %3703, align 8
  store i64 %3704, i64* %RDI.i3614.pre-phi, align 8
  %3705 = add i64 %3700, -44
  %3706 = add i64 %3699, 14
  store i64 %3706, i64* %PC.i, align 8
  %3707 = inttoptr i64 %3705 to i32*
  %3708 = load i32, i32* %3707, align 4
  %3709 = zext i32 %3708 to i64
  store i64 %3709, i64* %RSI.i3629, align 8
  %3710 = add i64 %3699, 35961
  %3711 = add i64 %3699, 19
  %3712 = load i64, i64* %6, align 8
  %3713 = add i64 %3712, -8
  %3714 = inttoptr i64 %3713 to i64*
  store i64 %3711, i64* %3714, align 8
  store i64 %3713, i64* %6, align 8
  store i64 %3710, i64* %3, align 8
  %call2_402035 = tail call %struct.Memory* @sub_40aca0._Z13test_constantIl22custom_equal_constantsIlEEvPT_iPKc(%struct.State* %0, i64 %3710, %struct.Memory* %call2_402022)
  %3715 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x41970c_type* @G__0x41970c to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41970c_type* @G__0x41970c to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %3716 = load i64, i64* %RBP.i, align 8
  %3717 = add i64 %3716, -104
  %3718 = add i64 %3715, 11
  store i64 %3718, i64* %PC.i, align 8
  %3719 = inttoptr i64 %3717 to i64*
  %3720 = load i64, i64* %3719, align 8
  store i64 %3720, i64* %RDI.i3614.pre-phi, align 8
  %3721 = add i64 %3716, -44
  %3722 = add i64 %3715, 14
  store i64 %3722, i64* %PC.i, align 8
  %3723 = inttoptr i64 %3721 to i32*
  %3724 = load i32, i32* %3723, align 4
  %3725 = zext i32 %3724 to i64
  store i64 %3725, i64* %RSI.i3629, align 8
  %3726 = add i64 %3715, 36102
  %3727 = add i64 %3715, 19
  %3728 = load i64, i64* %6, align 8
  %3729 = add i64 %3728, -8
  %3730 = inttoptr i64 %3729 to i64*
  store i64 %3727, i64* %3730, align 8
  store i64 %3729, i64* %6, align 8
  store i64 %3726, i64* %3, align 8
  %call2_402048 = tail call %struct.Memory* @sub_40ad40._Z13test_constantIl25custom_notequal_constantsIlEEvPT_iPKc(%struct.State* %0, i64 %3726, %struct.Memory* %call2_402035)
  %3731 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x419728_type* @G__0x419728 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419728_type* @G__0x419728 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %3732 = load i64, i64* %RBP.i, align 8
  %3733 = add i64 %3732, -104
  %3734 = add i64 %3731, 11
  store i64 %3734, i64* %PC.i, align 8
  %3735 = inttoptr i64 %3733 to i64*
  %3736 = load i64, i64* %3735, align 8
  store i64 %3736, i64* %RDI.i3614.pre-phi, align 8
  %3737 = add i64 %3732, -44
  %3738 = add i64 %3731, 14
  store i64 %3738, i64* %PC.i, align 8
  %3739 = inttoptr i64 %3737 to i32*
  %3740 = load i32, i32* %3739, align 4
  %3741 = zext i32 %3740 to i64
  store i64 %3741, i64* %RSI.i3629, align 8
  %3742 = add i64 %3731, 36243
  %3743 = add i64 %3731, 19
  %3744 = load i64, i64* %6, align 8
  %3745 = add i64 %3744, -8
  %3746 = inttoptr i64 %3745 to i64*
  store i64 %3743, i64* %3746, align 8
  store i64 %3745, i64* %6, align 8
  store i64 %3742, i64* %3, align 8
  %call2_40205b = tail call %struct.Memory* @sub_40ade0._Z13test_constantIl28custom_greaterthan_constantsIlEEvPT_iPKc(%struct.State* %0, i64 %3742, %struct.Memory* %call2_402048)
  %3747 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x419748_type* @G__0x419748 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419748_type* @G__0x419748 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %3748 = load i64, i64* %RBP.i, align 8
  %3749 = add i64 %3748, -104
  %3750 = add i64 %3747, 11
  store i64 %3750, i64* %PC.i, align 8
  %3751 = inttoptr i64 %3749 to i64*
  %3752 = load i64, i64* %3751, align 8
  store i64 %3752, i64* %RDI.i3614.pre-phi, align 8
  %3753 = add i64 %3748, -44
  %3754 = add i64 %3747, 14
  store i64 %3754, i64* %PC.i, align 8
  %3755 = inttoptr i64 %3753 to i32*
  %3756 = load i32, i32* %3755, align 4
  %3757 = zext i32 %3756 to i64
  store i64 %3757, i64* %RSI.i3629, align 8
  %3758 = add i64 %3747, 36384
  %3759 = add i64 %3747, 19
  %3760 = load i64, i64* %6, align 8
  %3761 = add i64 %3760, -8
  %3762 = inttoptr i64 %3761 to i64*
  store i64 %3759, i64* %3762, align 8
  store i64 %3761, i64* %6, align 8
  store i64 %3758, i64* %3, align 8
  %call2_40206e = tail call %struct.Memory* @sub_40ae80._Z13test_constantIl25custom_lessthan_constantsIlEEvPT_iPKc(%struct.State* %0, i64 %3758, %struct.Memory* %call2_40205b)
  %3763 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x419765_type* @G__0x419765 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419765_type* @G__0x419765 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %3764 = load i64, i64* %RBP.i, align 8
  %3765 = add i64 %3764, -104
  %3766 = add i64 %3763, 11
  store i64 %3766, i64* %PC.i, align 8
  %3767 = inttoptr i64 %3765 to i64*
  %3768 = load i64, i64* %3767, align 8
  store i64 %3768, i64* %RDI.i3614.pre-phi, align 8
  %3769 = add i64 %3764, -44
  %3770 = add i64 %3763, 14
  store i64 %3770, i64* %PC.i, align 8
  %3771 = inttoptr i64 %3769 to i32*
  %3772 = load i32, i32* %3771, align 4
  %3773 = zext i32 %3772 to i64
  store i64 %3773, i64* %RSI.i3629, align 8
  %3774 = add i64 %3763, 36525
  %3775 = add i64 %3763, 19
  %3776 = load i64, i64* %6, align 8
  %3777 = add i64 %3776, -8
  %3778 = inttoptr i64 %3777 to i64*
  store i64 %3775, i64* %3778, align 8
  store i64 %3777, i64* %6, align 8
  store i64 %3774, i64* %3, align 8
  %call2_402081 = tail call %struct.Memory* @sub_40af20._Z13test_constantIl33custom_greaterthanequal_constantsIlEEvPT_iPKc(%struct.State* %0, i64 %3774, %struct.Memory* %call2_40206e)
  %3779 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x41978b_type* @G__0x41978b to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41978b_type* @G__0x41978b to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %3780 = load i64, i64* %RBP.i, align 8
  %3781 = add i64 %3780, -104
  %3782 = add i64 %3779, 11
  store i64 %3782, i64* %PC.i, align 8
  %3783 = inttoptr i64 %3781 to i64*
  %3784 = load i64, i64* %3783, align 8
  store i64 %3784, i64* %RDI.i3614.pre-phi, align 8
  %3785 = add i64 %3780, -44
  %3786 = add i64 %3779, 14
  store i64 %3786, i64* %PC.i, align 8
  %3787 = inttoptr i64 %3785 to i32*
  %3788 = load i32, i32* %3787, align 4
  %3789 = zext i32 %3788 to i64
  store i64 %3789, i64* %RSI.i3629, align 8
  %3790 = add i64 %3779, 36666
  %3791 = add i64 %3779, 19
  %3792 = load i64, i64* %6, align 8
  %3793 = add i64 %3792, -8
  %3794 = inttoptr i64 %3793 to i64*
  store i64 %3791, i64* %3794, align 8
  store i64 %3793, i64* %6, align 8
  store i64 %3790, i64* %3, align 8
  %call2_402094 = tail call %struct.Memory* @sub_40afc0._Z13test_constantIl30custom_lessthanequal_constantsIlEEvPT_iPKc(%struct.State* %0, i64 %3790, %struct.Memory* %call2_402081)
  %3795 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x4197ae_type* @G__0x4197ae to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4197ae_type* @G__0x4197ae to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %3796 = load i64, i64* %RBP.i, align 8
  %3797 = add i64 %3796, -104
  %3798 = add i64 %3795, 11
  store i64 %3798, i64* %PC.i, align 8
  %3799 = inttoptr i64 %3797 to i64*
  %3800 = load i64, i64* %3799, align 8
  store i64 %3800, i64* %RDI.i3614.pre-phi, align 8
  %3801 = add i64 %3796, -44
  %3802 = add i64 %3795, 14
  store i64 %3802, i64* %PC.i, align 8
  %3803 = inttoptr i64 %3801 to i32*
  %3804 = load i32, i32* %3803, align 4
  %3805 = zext i32 %3804 to i64
  store i64 %3805, i64* %RSI.i3629, align 8
  %3806 = add i64 %3795, 36807
  %3807 = add i64 %3795, 19
  %3808 = load i64, i64* %6, align 8
  %3809 = add i64 %3808, -8
  %3810 = inttoptr i64 %3809 to i64*
  store i64 %3807, i64* %3810, align 8
  store i64 %3809, i64* %6, align 8
  store i64 %3806, i64* %3, align 8
  %call2_4020a7 = tail call %struct.Memory* @sub_40b060._Z13test_constantIl20custom_and_constantsIlEEvPT_iPKc(%struct.State* %0, i64 %3806, %struct.Memory* %call2_402094)
  %3811 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x4197c5_type* @G__0x4197c5 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4197c5_type* @G__0x4197c5 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %3812 = load i64, i64* %RBP.i, align 8
  %3813 = add i64 %3812, -104
  %3814 = add i64 %3811, 11
  store i64 %3814, i64* %PC.i, align 8
  %3815 = inttoptr i64 %3813 to i64*
  %3816 = load i64, i64* %3815, align 8
  store i64 %3816, i64* %RDI.i3614.pre-phi, align 8
  %3817 = add i64 %3812, -44
  %3818 = add i64 %3811, 14
  store i64 %3818, i64* %PC.i, align 8
  %3819 = inttoptr i64 %3817 to i32*
  %3820 = load i32, i32* %3819, align 4
  %3821 = zext i32 %3820 to i64
  store i64 %3821, i64* %RSI.i3629, align 8
  %3822 = add i64 %3811, 36948
  %3823 = add i64 %3811, 19
  %3824 = load i64, i64* %6, align 8
  %3825 = add i64 %3824, -8
  %3826 = inttoptr i64 %3825 to i64*
  store i64 %3823, i64* %3826, align 8
  store i64 %3825, i64* %6, align 8
  store i64 %3822, i64* %3, align 8
  %call2_4020ba = tail call %struct.Memory* @sub_40b100._Z13test_constantIl19custom_or_constantsIlEEvPT_iPKc(%struct.State* %0, i64 %3822, %struct.Memory* %call2_4020a7)
  %3827 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x4197db_type* @G__0x4197db to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4197db_type* @G__0x4197db to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %3828 = load i64, i64* %RBP.i, align 8
  %3829 = add i64 %3828, -104
  %3830 = add i64 %3827, 11
  store i64 %3830, i64* %PC.i, align 8
  %3831 = inttoptr i64 %3829 to i64*
  %3832 = load i64, i64* %3831, align 8
  store i64 %3832, i64* %RDI.i3614.pre-phi, align 8
  %3833 = add i64 %3828, -44
  %3834 = add i64 %3827, 14
  store i64 %3834, i64* %PC.i, align 8
  %3835 = inttoptr i64 %3833 to i32*
  %3836 = load i32, i32* %3835, align 4
  %3837 = zext i32 %3836 to i64
  store i64 %3837, i64* %RSI.i3629, align 8
  %3838 = add i64 %3827, 37089
  %3839 = add i64 %3827, 19
  %3840 = load i64, i64* %6, align 8
  %3841 = add i64 %3840, -8
  %3842 = inttoptr i64 %3841 to i64*
  store i64 %3839, i64* %3842, align 8
  store i64 %3841, i64* %6, align 8
  store i64 %3838, i64* %3, align 8
  %call2_4020cd = tail call %struct.Memory* @sub_40b1a0._Z13test_constantIl20custom_xor_constantsIlEEvPT_iPKc(%struct.State* %0, i64 %3838, %struct.Memory* %call2_4020ba)
  %3843 = load i64, i64* %PC.i, align 8
  %3844 = load i32, i32* bitcast (%G_0x21ffa7__rip__type* @G_0x21ffa7__rip_ to i32*), align 8
  %3845 = sext i32 %3844 to i64
  %3846 = mul nsw i64 %3845, 1717986919
  %3847 = lshr i64 %3846, 63
  store i64 %3847, i64* %RCX.i3623, align 8
  %3848 = ashr i64 %3846, 34
  store i64 %3848, i64* %.pre18, align 8
  %3849 = trunc i64 %3848 to i32
  %3850 = trunc i64 %3847 to i32
  %3851 = add i32 %3850, %3849
  %3852 = zext i32 %3851 to i64
  store i64 %3852, i64* %194, align 8
  %3853 = icmp ult i32 %3851, %3849
  %3854 = icmp ult i32 %3851, %3850
  %3855 = or i1 %3853, %3854
  %3856 = zext i1 %3855 to i8
  store i8 %3856, i8* %14, align 1
  %3857 = and i32 %3851, 255
  %3858 = tail call i32 @llvm.ctpop.i32(i32 %3857)
  %3859 = trunc i32 %3858 to i8
  %3860 = and i8 %3859, 1
  %3861 = xor i8 %3860, 1
  store i8 %3861, i8* %21, align 1
  %3862 = trunc i64 %3848 to i32
  %3863 = xor i32 %3862, %3851
  %3864 = lshr i32 %3863, 4
  %3865 = trunc i32 %3864 to i8
  %3866 = and i8 %3865, 1
  store i8 %3866, i8* %27, align 1
  %3867 = icmp eq i32 %3851, 0
  %3868 = zext i1 %3867 to i8
  store i8 %3868, i8* %30, align 1
  %3869 = lshr i32 %3851, 31
  %3870 = trunc i32 %3869 to i8
  store i8 %3870, i8* %33, align 1
  %3871 = lshr i64 %3848, 31
  %3872 = trunc i64 %3871 to i32
  %3873 = and i32 %3872, 1
  %3874 = xor i32 %3869, %3873
  %3875 = add nuw nsw i32 %3874, %3869
  %3876 = icmp eq i32 %3875, 2
  %3877 = zext i1 %3876 to i8
  store i8 %3877, i8* %39, align 1
  store i32 %3851, i32* bitcast (%G_0x21ffc6__rip__type* @G_0x21ffc6__rip_ to i32*), align 8
  store i64 and (i64 ptrtoint (%G__0x4197f2_type* @G__0x4197f2 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4197f2_type* @G__0x4197f2 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %3878 = load i64, i64* %RBP.i, align 8
  %3879 = add i64 %3878, -104
  %3880 = add i64 %3843, 51
  store i64 %3880, i64* %PC.i, align 8
  %3881 = inttoptr i64 %3879 to i64*
  %3882 = load i64, i64* %3881, align 8
  store i64 %3882, i64* %RDI.i3614.pre-phi, align 8
  %3883 = add i64 %3878, -44
  %3884 = add i64 %3843, 54
  store i64 %3884, i64* %PC.i, align 8
  %3885 = inttoptr i64 %3883 to i32*
  %3886 = load i32, i32* %3885, align 4
  %3887 = zext i32 %3886 to i64
  store i64 %3887, i64* %RSI.i3629, align 8
  %3888 = add i64 %3843, 37230
  %3889 = add i64 %3843, 59
  %3890 = load i64, i64* %6, align 8
  %3891 = add i64 %3890, -8
  %3892 = inttoptr i64 %3891 to i64*
  store i64 %3889, i64* %3892, align 8
  store i64 %3891, i64* %6, align 8
  store i64 %3888, i64* %3, align 8
  %call2_402108 = tail call %struct.Memory* @sub_40b240._Z13test_constantIl19custom_constant_addIlEEvPT_iPKc(%struct.State* %0, i64 %3888, %struct.Memory* %call2_4020cd)
  %3893 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x419808_type* @G__0x419808 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419808_type* @G__0x419808 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %3894 = load i64, i64* %RBP.i, align 8
  %3895 = add i64 %3894, -104
  %3896 = add i64 %3893, 11
  store i64 %3896, i64* %PC.i, align 8
  %3897 = inttoptr i64 %3895 to i64*
  %3898 = load i64, i64* %3897, align 8
  store i64 %3898, i64* %RDI.i3614.pre-phi, align 8
  %3899 = add i64 %3894, -44
  %3900 = add i64 %3893, 14
  store i64 %3900, i64* %PC.i, align 8
  %3901 = inttoptr i64 %3899 to i32*
  %3902 = load i32, i32* %3901, align 4
  %3903 = zext i32 %3902 to i64
  store i64 %3903, i64* %RSI.i3629, align 8
  %3904 = add i64 %3893, 37331
  %3905 = add i64 %3893, 19
  %3906 = load i64, i64* %6, align 8
  %3907 = add i64 %3906, -8
  %3908 = inttoptr i64 %3907 to i64*
  store i64 %3905, i64* %3908, align 8
  store i64 %3907, i64* %6, align 8
  store i64 %3904, i64* %3, align 8
  %call2_40211b = tail call %struct.Memory* @sub_40b2e0._Z13test_constantIl28custom_multiple_constant_addIlEEvPT_iPKc(%struct.State* %0, i64 %3904, %struct.Memory* %call2_402108)
  %3909 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x419828_type* @G__0x419828 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419828_type* @G__0x419828 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %3910 = load i64, i64* %RBP.i, align 8
  %3911 = add i64 %3910, -104
  %3912 = add i64 %3909, 11
  store i64 %3912, i64* %PC.i, align 8
  %3913 = inttoptr i64 %3911 to i64*
  %3914 = load i64, i64* %3913, align 8
  store i64 %3914, i64* %RDI.i3614.pre-phi, align 8
  %3915 = add i64 %3910, -44
  %3916 = add i64 %3909, 14
  store i64 %3916, i64* %PC.i, align 8
  %3917 = inttoptr i64 %3915 to i32*
  %3918 = load i32, i32* %3917, align 4
  %3919 = zext i32 %3918 to i64
  store i64 %3919, i64* %RSI.i3629, align 8
  %3920 = add i64 %3909, 37472
  %3921 = add i64 %3909, 19
  %3922 = load i64, i64* %6, align 8
  %3923 = add i64 %3922, -8
  %3924 = inttoptr i64 %3923 to i64*
  store i64 %3921, i64* %3924, align 8
  store i64 %3923, i64* %6, align 8
  store i64 %3920, i64* %3, align 8
  %call2_40212e = tail call %struct.Memory* @sub_40b380._Z13test_constantIl19custom_constant_subIlEEvPT_iPKc(%struct.State* %0, i64 %3920, %struct.Memory* %call2_40211b)
  %3925 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x419843_type* @G__0x419843 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419843_type* @G__0x419843 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %3926 = load i64, i64* %RBP.i, align 8
  %3927 = add i64 %3926, -104
  %3928 = add i64 %3925, 11
  store i64 %3928, i64* %PC.i, align 8
  %3929 = inttoptr i64 %3927 to i64*
  %3930 = load i64, i64* %3929, align 8
  store i64 %3930, i64* %RDI.i3614.pre-phi, align 8
  %3931 = add i64 %3926, -44
  %3932 = add i64 %3925, 14
  store i64 %3932, i64* %PC.i, align 8
  %3933 = inttoptr i64 %3931 to i32*
  %3934 = load i32, i32* %3933, align 4
  %3935 = zext i32 %3934 to i64
  store i64 %3935, i64* %RSI.i3629, align 8
  %3936 = add i64 %3925, 37613
  %3937 = add i64 %3925, 19
  %3938 = load i64, i64* %6, align 8
  %3939 = add i64 %3938, -8
  %3940 = inttoptr i64 %3939 to i64*
  store i64 %3937, i64* %3940, align 8
  store i64 %3939, i64* %6, align 8
  store i64 %3936, i64* %3, align 8
  %call2_402141 = tail call %struct.Memory* @sub_40b420._Z13test_constantIl28custom_multiple_constant_subIlEEvPT_iPKc(%struct.State* %0, i64 %3936, %struct.Memory* %call2_40212e)
  %3941 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x419868_type* @G__0x419868 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419868_type* @G__0x419868 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %3942 = load i64, i64* %RBP.i, align 8
  %3943 = add i64 %3942, -104
  %3944 = add i64 %3941, 11
  store i64 %3944, i64* %PC.i, align 8
  %3945 = inttoptr i64 %3943 to i64*
  %3946 = load i64, i64* %3945, align 8
  store i64 %3946, i64* %RDI.i3614.pre-phi, align 8
  %3947 = add i64 %3942, -44
  %3948 = add i64 %3941, 14
  store i64 %3948, i64* %PC.i, align 8
  %3949 = inttoptr i64 %3947 to i32*
  %3950 = load i32, i32* %3949, align 4
  %3951 = zext i32 %3950 to i64
  store i64 %3951, i64* %RSI.i3629, align 8
  %3952 = add i64 %3941, 37754
  %3953 = add i64 %3941, 19
  %3954 = load i64, i64* %6, align 8
  %3955 = add i64 %3954, -8
  %3956 = inttoptr i64 %3955 to i64*
  store i64 %3953, i64* %3956, align 8
  store i64 %3955, i64* %6, align 8
  store i64 %3952, i64* %3, align 8
  %call2_402154 = tail call %struct.Memory* @sub_40b4c0._Z13test_constantIl24custom_constant_multiplyIlEEvPT_iPKc(%struct.State* %0, i64 %3952, %struct.Memory* %call2_402141)
  %3957 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x419883_type* @G__0x419883 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419883_type* @G__0x419883 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %3958 = load i64, i64* %RBP.i, align 8
  %3959 = add i64 %3958, -104
  %3960 = add i64 %3957, 11
  store i64 %3960, i64* %PC.i, align 8
  %3961 = inttoptr i64 %3959 to i64*
  %3962 = load i64, i64* %3961, align 8
  store i64 %3962, i64* %RDI.i3614.pre-phi, align 8
  %3963 = add i64 %3958, -44
  %3964 = add i64 %3957, 14
  store i64 %3964, i64* %PC.i, align 8
  %3965 = inttoptr i64 %3963 to i32*
  %3966 = load i32, i32* %3965, align 4
  %3967 = zext i32 %3966 to i64
  store i64 %3967, i64* %RSI.i3629, align 8
  %3968 = add i64 %3957, 37895
  %3969 = add i64 %3957, 19
  %3970 = load i64, i64* %6, align 8
  %3971 = add i64 %3970, -8
  %3972 = inttoptr i64 %3971 to i64*
  store i64 %3969, i64* %3972, align 8
  store i64 %3971, i64* %6, align 8
  store i64 %3968, i64* %3, align 8
  %call2_402167 = tail call %struct.Memory* @sub_40b560._Z13test_constantIl33custom_multiple_constant_multiplyIlEEvPT_iPKc(%struct.State* %0, i64 %3968, %struct.Memory* %call2_402154)
  %3973 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x4198a9_type* @G__0x4198a9 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4198a9_type* @G__0x4198a9 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %3974 = load i64, i64* %RBP.i, align 8
  %3975 = add i64 %3974, -104
  %3976 = add i64 %3973, 11
  store i64 %3976, i64* %PC.i, align 8
  %3977 = inttoptr i64 %3975 to i64*
  %3978 = load i64, i64* %3977, align 8
  store i64 %3978, i64* %RDI.i3614.pre-phi, align 8
  %3979 = add i64 %3974, -44
  %3980 = add i64 %3973, 14
  store i64 %3980, i64* %PC.i, align 8
  %3981 = inttoptr i64 %3979 to i32*
  %3982 = load i32, i32* %3981, align 4
  %3983 = zext i32 %3982 to i64
  store i64 %3983, i64* %RSI.i3629, align 8
  %3984 = add i64 %3973, 38036
  %3985 = add i64 %3973, 19
  %3986 = load i64, i64* %6, align 8
  %3987 = add i64 %3986, -8
  %3988 = inttoptr i64 %3987 to i64*
  store i64 %3985, i64* %3988, align 8
  store i64 %3987, i64* %6, align 8
  store i64 %3984, i64* %3, align 8
  %call2_40217a = tail call %struct.Memory* @sub_40b600._Z13test_constantIl34custom_multiple_constant_multiply2IlEEvPT_iPKc(%struct.State* %0, i64 %3984, %struct.Memory* %call2_402167)
  %3989 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x4198ce_type* @G__0x4198ce to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4198ce_type* @G__0x4198ce to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %3990 = load i64, i64* %RBP.i, align 8
  %3991 = add i64 %3990, -104
  %3992 = add i64 %3989, 11
  store i64 %3992, i64* %PC.i, align 8
  %3993 = inttoptr i64 %3991 to i64*
  %3994 = load i64, i64* %3993, align 8
  store i64 %3994, i64* %RDI.i3614.pre-phi, align 8
  %3995 = add i64 %3990, -44
  %3996 = add i64 %3989, 14
  store i64 %3996, i64* %PC.i, align 8
  %3997 = inttoptr i64 %3995 to i32*
  %3998 = load i32, i32* %3997, align 4
  %3999 = zext i32 %3998 to i64
  store i64 %3999, i64* %RSI.i3629, align 8
  %4000 = add i64 %3989, 38177
  %4001 = add i64 %3989, 19
  %4002 = load i64, i64* %6, align 8
  %4003 = add i64 %4002, -8
  %4004 = inttoptr i64 %4003 to i64*
  store i64 %4001, i64* %4004, align 8
  store i64 %4003, i64* %6, align 8
  store i64 %4000, i64* %3, align 8
  %call2_40218d = tail call %struct.Memory* @sub_40b6a0._Z13test_constantIl22custom_constant_divideIlEEvPT_iPKc(%struct.State* %0, i64 %4000, %struct.Memory* %call2_40217a)
  %4005 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x4198e7_type* @G__0x4198e7 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4198e7_type* @G__0x4198e7 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %4006 = load i64, i64* %RBP.i, align 8
  %4007 = add i64 %4006, -104
  %4008 = add i64 %4005, 11
  store i64 %4008, i64* %PC.i, align 8
  %4009 = inttoptr i64 %4007 to i64*
  %4010 = load i64, i64* %4009, align 8
  store i64 %4010, i64* %RDI.i3614.pre-phi, align 8
  %4011 = add i64 %4006, -44
  %4012 = add i64 %4005, 14
  store i64 %4012, i64* %PC.i, align 8
  %4013 = inttoptr i64 %4011 to i32*
  %4014 = load i32, i32* %4013, align 4
  %4015 = zext i32 %4014 to i64
  store i64 %4015, i64* %RSI.i3629, align 8
  %4016 = add i64 %4005, 38318
  %4017 = add i64 %4005, 19
  %4018 = load i64, i64* %6, align 8
  %4019 = add i64 %4018, -8
  %4020 = inttoptr i64 %4019 to i64*
  store i64 %4017, i64* %4020, align 8
  store i64 %4019, i64* %6, align 8
  store i64 %4016, i64* %3, align 8
  %call2_4021a0 = tail call %struct.Memory* @sub_40b740._Z13test_constantIl31custom_multiple_constant_divideIlEEvPT_iPKc(%struct.State* %0, i64 %4016, %struct.Memory* %call2_40218d)
  %4021 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x41990a_type* @G__0x41990a to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41990a_type* @G__0x41990a to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %4022 = load i64, i64* %RBP.i, align 8
  %4023 = add i64 %4022, -104
  %4024 = add i64 %4021, 11
  store i64 %4024, i64* %PC.i, align 8
  %4025 = inttoptr i64 %4023 to i64*
  %4026 = load i64, i64* %4025, align 8
  store i64 %4026, i64* %RDI.i3614.pre-phi, align 8
  %4027 = add i64 %4022, -44
  %4028 = add i64 %4021, 14
  store i64 %4028, i64* %PC.i, align 8
  %4029 = inttoptr i64 %4027 to i32*
  %4030 = load i32, i32* %4029, align 4
  %4031 = zext i32 %4030 to i64
  store i64 %4031, i64* %RSI.i3629, align 8
  %4032 = add i64 %4021, 38459
  %4033 = add i64 %4021, 19
  %4034 = load i64, i64* %6, align 8
  %4035 = add i64 %4034, -8
  %4036 = inttoptr i64 %4035 to i64*
  store i64 %4033, i64* %4036, align 8
  store i64 %4035, i64* %6, align 8
  store i64 %4032, i64* %3, align 8
  %call2_4021b3 = tail call %struct.Memory* @sub_40b7e0._Z13test_constantIl32custom_multiple_constant_divide2IlEEvPT_iPKc(%struct.State* %0, i64 %4032, %struct.Memory* %call2_4021a0)
  %4037 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x41992d_type* @G__0x41992d to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41992d_type* @G__0x41992d to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %4038 = load i64, i64* %RBP.i, align 8
  %4039 = add i64 %4038, -104
  %4040 = add i64 %4037, 11
  store i64 %4040, i64* %PC.i, align 8
  %4041 = inttoptr i64 %4039 to i64*
  %4042 = load i64, i64* %4041, align 8
  store i64 %4042, i64* %RDI.i3614.pre-phi, align 8
  %4043 = add i64 %4038, -44
  %4044 = add i64 %4037, 14
  store i64 %4044, i64* %PC.i, align 8
  %4045 = inttoptr i64 %4043 to i32*
  %4046 = load i32, i32* %4045, align 4
  %4047 = zext i32 %4046 to i64
  store i64 %4047, i64* %RSI.i3629, align 8
  %4048 = add i64 %4037, 38600
  %4049 = add i64 %4037, 19
  %4050 = load i64, i64* %6, align 8
  %4051 = add i64 %4050, -8
  %4052 = inttoptr i64 %4051 to i64*
  store i64 %4049, i64* %4052, align 8
  store i64 %4051, i64* %6, align 8
  store i64 %4048, i64* %3, align 8
  %call2_4021c6 = tail call %struct.Memory* @sub_40b880._Z13test_constantIl30custom_multiple_constant_mixedIlEEvPT_iPKc(%struct.State* %0, i64 %4048, %struct.Memory* %call2_4021b3)
  %4053 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x41994e_type* @G__0x41994e to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41994e_type* @G__0x41994e to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %4054 = load i64, i64* %RBP.i, align 8
  %4055 = add i64 %4054, -104
  %4056 = add i64 %4053, 11
  store i64 %4056, i64* %PC.i, align 8
  %4057 = inttoptr i64 %4055 to i64*
  %4058 = load i64, i64* %4057, align 8
  store i64 %4058, i64* %RDI.i3614.pre-phi, align 8
  %4059 = add i64 %4054, -44
  %4060 = add i64 %4053, 14
  store i64 %4060, i64* %PC.i, align 8
  %4061 = inttoptr i64 %4059 to i32*
  %4062 = load i32, i32* %4061, align 4
  %4063 = zext i32 %4062 to i64
  store i64 %4063, i64* %RSI.i3629, align 8
  %4064 = add i64 %4053, 38741
  %4065 = add i64 %4053, 19
  %4066 = load i64, i64* %6, align 8
  %4067 = add i64 %4066, -8
  %4068 = inttoptr i64 %4067 to i64*
  store i64 %4065, i64* %4068, align 8
  store i64 %4067, i64* %6, align 8
  store i64 %4064, i64* %3, align 8
  %call2_4021d9 = tail call %struct.Memory* @sub_40b920._Z13test_constantIl19custom_constant_andIlEEvPT_iPKc(%struct.State* %0, i64 %4064, %struct.Memory* %call2_4021c6)
  %4069 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x419964_type* @G__0x419964 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419964_type* @G__0x419964 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %4070 = load i64, i64* %RBP.i, align 8
  %4071 = add i64 %4070, -104
  %4072 = add i64 %4069, 11
  store i64 %4072, i64* %PC.i, align 8
  %4073 = inttoptr i64 %4071 to i64*
  %4074 = load i64, i64* %4073, align 8
  store i64 %4074, i64* %RDI.i3614.pre-phi, align 8
  %4075 = add i64 %4070, -44
  %4076 = add i64 %4069, 14
  store i64 %4076, i64* %PC.i, align 8
  %4077 = inttoptr i64 %4075 to i32*
  %4078 = load i32, i32* %4077, align 4
  %4079 = zext i32 %4078 to i64
  store i64 %4079, i64* %RSI.i3629, align 8
  %4080 = add i64 %4069, 38882
  %4081 = add i64 %4069, 19
  %4082 = load i64, i64* %6, align 8
  %4083 = add i64 %4082, -8
  %4084 = inttoptr i64 %4083 to i64*
  store i64 %4081, i64* %4084, align 8
  store i64 %4083, i64* %6, align 8
  store i64 %4080, i64* %3, align 8
  %call2_4021ec = tail call %struct.Memory* @sub_40b9c0._Z13test_constantIl28custom_multiple_constant_andIlEEvPT_iPKc(%struct.State* %0, i64 %4080, %struct.Memory* %call2_4021d9)
  %4085 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x419983_type* @G__0x419983 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419983_type* @G__0x419983 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %4086 = load i64, i64* %RBP.i, align 8
  %4087 = add i64 %4086, -104
  %4088 = add i64 %4085, 11
  store i64 %4088, i64* %PC.i, align 8
  %4089 = inttoptr i64 %4087 to i64*
  %4090 = load i64, i64* %4089, align 8
  store i64 %4090, i64* %RDI.i3614.pre-phi, align 8
  %4091 = add i64 %4086, -44
  %4092 = add i64 %4085, 14
  store i64 %4092, i64* %PC.i, align 8
  %4093 = inttoptr i64 %4091 to i32*
  %4094 = load i32, i32* %4093, align 4
  %4095 = zext i32 %4094 to i64
  store i64 %4095, i64* %RSI.i3629, align 8
  %4096 = add i64 %4085, 39023
  %4097 = add i64 %4085, 19
  %4098 = load i64, i64* %6, align 8
  %4099 = add i64 %4098, -8
  %4100 = inttoptr i64 %4099 to i64*
  store i64 %4097, i64* %4100, align 8
  store i64 %4099, i64* %6, align 8
  store i64 %4096, i64* %3, align 8
  %call2_4021ff = tail call %struct.Memory* @sub_40ba60._Z13test_constantIl18custom_constant_orIlEEvPT_iPKc(%struct.State* %0, i64 %4096, %struct.Memory* %call2_4021ec)
  %4101 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x419998_type* @G__0x419998 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419998_type* @G__0x419998 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %4102 = load i64, i64* %RBP.i, align 8
  %4103 = add i64 %4102, -104
  %4104 = add i64 %4101, 11
  store i64 %4104, i64* %PC.i, align 8
  %4105 = inttoptr i64 %4103 to i64*
  %4106 = load i64, i64* %4105, align 8
  store i64 %4106, i64* %RDI.i3614.pre-phi, align 8
  %4107 = add i64 %4102, -44
  %4108 = add i64 %4101, 14
  store i64 %4108, i64* %PC.i, align 8
  %4109 = inttoptr i64 %4107 to i32*
  %4110 = load i32, i32* %4109, align 4
  %4111 = zext i32 %4110 to i64
  store i64 %4111, i64* %RSI.i3629, align 8
  %4112 = add i64 %4101, 39164
  %4113 = add i64 %4101, 19
  %4114 = load i64, i64* %6, align 8
  %4115 = add i64 %4114, -8
  %4116 = inttoptr i64 %4115 to i64*
  store i64 %4113, i64* %4116, align 8
  store i64 %4115, i64* %6, align 8
  store i64 %4112, i64* %3, align 8
  %call2_402212 = tail call %struct.Memory* @sub_40bb00._Z13test_constantIl27custom_multiple_constant_orIlEEvPT_iPKc(%struct.State* %0, i64 %4112, %struct.Memory* %call2_4021ff)
  %4117 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x4199b6_type* @G__0x4199b6 to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4199b6_type* @G__0x4199b6 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %4118 = load i64, i64* %RBP.i, align 8
  %4119 = add i64 %4118, -104
  %4120 = add i64 %4117, 11
  store i64 %4120, i64* %PC.i, align 8
  %4121 = inttoptr i64 %4119 to i64*
  %4122 = load i64, i64* %4121, align 8
  store i64 %4122, i64* %RDI.i3614.pre-phi, align 8
  %4123 = add i64 %4118, -44
  %4124 = add i64 %4117, 14
  store i64 %4124, i64* %PC.i, align 8
  %4125 = inttoptr i64 %4123 to i32*
  %4126 = load i32, i32* %4125, align 4
  %4127 = zext i32 %4126 to i64
  store i64 %4127, i64* %RSI.i3629, align 8
  %4128 = add i64 %4117, 39305
  %4129 = add i64 %4117, 19
  %4130 = load i64, i64* %6, align 8
  %4131 = add i64 %4130, -8
  %4132 = inttoptr i64 %4131 to i64*
  store i64 %4129, i64* %4132, align 8
  store i64 %4131, i64* %6, align 8
  store i64 %4128, i64* %3, align 8
  %call2_402225 = tail call %struct.Memory* @sub_40bba0._Z13test_constantIl19custom_constant_xorIlEEvPT_iPKc(%struct.State* %0, i64 %4128, %struct.Memory* %call2_402212)
  %4133 = load i64, i64* %PC.i, align 8
  store i64 and (i64 ptrtoint (%G__0x4199cc_type* @G__0x4199cc to i64), i64 4294967295), i64* %RSI.i3629, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4199cc_type* @G__0x4199cc to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3618, align 8
  %4134 = load i64, i64* %RBP.i, align 8
  %4135 = add i64 %4134, -104
  %4136 = add i64 %4133, 11
  store i64 %4136, i64* %PC.i, align 8
  %4137 = inttoptr i64 %4135 to i64*
  %4138 = load i64, i64* %4137, align 8
  store i64 %4138, i64* %RDI.i3614.pre-phi, align 8
  %4139 = add i64 %4134, -44
  %4140 = add i64 %4133, 14
  store i64 %4140, i64* %PC.i, align 8
  %4141 = inttoptr i64 %4139 to i32*
  %4142 = load i32, i32* %4141, align 4
  %4143 = zext i32 %4142 to i64
  store i64 %4143, i64* %RSI.i3629, align 8
  %4144 = add i64 %4133, 39446
  %4145 = add i64 %4133, 19
  %4146 = load i64, i64* %6, align 8
  %4147 = add i64 %4146, -8
  %4148 = inttoptr i64 %4147 to i64*
  store i64 %4145, i64* %4148, align 8
  store i64 %4147, i64* %6, align 8
  store i64 %4144, i64* %3, align 8
  %call2_402238 = tail call %struct.Memory* @sub_40bc40._Z13test_constantIl28custom_multiple_constant_xorIlEEvPT_iPKc(%struct.State* %0, i64 %4144, %struct.Memory* %call2_402225)
  %4149 = load i64, i64* %PC.i, align 8
  %4150 = load double, double* bitcast (%G_0x21fe43__rip__type* @G_0x21fe43__rip_ to double*), align 8
  store double %4150, double* %2442, align 1
  store double 0.000000e+00, double* %2444, align 1
  %4151 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 1
  %4152 = load double, double* bitcast (%G_0x16793__rip__type* @G_0x16793__rip_ to double*), align 8
  %4153 = bitcast %union.VectorReg* %4151 to double*
  store double %4152, double* %4153, align 1
  %4154 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 1, i32 0, i32 0, i32 0, i64 1
  %4155 = bitcast i64* %4154 to double*
  store double 0.000000e+00, double* %4155, align 1
  %4156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 2
  %4157 = bitcast %union.VectorReg* %4156 to i8*
  %4158 = bitcast double %4150 to <2 x i32>
  %4159 = extractelement <2 x i32> %4158, i32 0
  %4160 = bitcast %union.VectorReg* %4156 to i32*
  store i32 %4159, i32* %4160, align 1
  %4161 = extractelement <2 x i32> %4158, i32 1
  %4162 = getelementptr inbounds i8, i8* %4157, i64 4
  %4163 = bitcast i8* %4162 to i32*
  store i32 %4161, i32* %4163, align 1
  %4164 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 2, i32 0, i32 0, i32 0, i64 1
  %4165 = bitcast i64* %4164 to i32*
  store i32 0, i32* %4165, align 1
  %4166 = getelementptr inbounds i8, i8* %4157, i64 12
  %4167 = bitcast i8* %4166 to i32*
  store i32 0, i32* %4167, align 1
  %4168 = add i64 %4149, 23
  store i64 %4168, i64* %PC.i, align 8
  %4169 = bitcast %union.VectorReg* %4156 to double*
  %4170 = load double, double* %4169, align 1
  %4171 = fsub double %4170, %4152
  store double %4171, double* %4169, align 1
  %4172 = tail call double @llvm.trunc.f64(double %4171)
  %4173 = tail call double @llvm.fabs.f64(double %4172)
  %4174 = fcmp ogt double %4173, 0x43E0000000000000
  %4175 = fptosi double %4172 to i64
  %.op = xor i64 %4175, -9223372036854775808
  %4176 = select i1 %4174, i64 0, i64 %.op
  store i64 %4176, i64* %.pre18, align 8
  store i8 0, i8* %14, align 1
  %4177 = trunc i64 %4176 to i32
  %4178 = and i32 %4177, 255
  %4179 = tail call i32 @llvm.ctpop.i32(i32 %4178)
  %4180 = trunc i32 %4179 to i8
  %4181 = and i8 %4180, 1
  %4182 = xor i8 %4181, 1
  store i8 %4182, i8* %21, align 1
  %4183 = icmp eq i64 %4176, 0
  %4184 = zext i1 %4183 to i8
  store i8 %4184, i8* %30, align 1
  %4185 = lshr i64 %4176, 63
  %4186 = trunc i64 %4185 to i8
  store i8 %4186, i8* %33, align 1
  store i8 0, i8* %39, align 1
  store i8 0, i8* %27, align 1
  %4187 = tail call double @llvm.trunc.f64(double %4150)
  %4188 = tail call double @llvm.fabs.f64(double %4187)
  %4189 = fcmp ogt double %4188, 0x43E0000000000000
  %4190 = fptosi double %4187 to i64
  %4191 = select i1 %4189, i64 -9223372036854775808, i64 %4190
  store i64 %4191, i64* %RCX.i3623, align 8
  %4192 = add i64 %4149, 50
  store i64 %4192, i64* %PC.i, align 8
  %4193 = fcmp uno double %4152, %4150
  br i1 %4193, label %4194, label %4204

; <label>:4194:                                   ; preds = %block_.L_400ef7
  %4195 = fadd double %4152, %4150
  %4196 = bitcast double %4195 to i64
  %4197 = and i64 %4196, 9221120237041090560
  %4198 = icmp eq i64 %4197, 9218868437227405312
  %4199 = and i64 %4196, 2251799813685247
  %4200 = icmp ne i64 %4199, 0
  %4201 = and i1 %4198, %4200
  br i1 %4201, label %4202, label %4210

; <label>:4202:                                   ; preds = %4194
  %4203 = tail call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %4192, %struct.Memory* %call2_402238)
  %.pre2 = load i64, i64* %RCX.i3623, align 8
  %.pre3 = load i64, i64* %PC.i, align 8
  %.pre4 = load i8, i8* %14, align 1
  %.pre5 = load i8, i8* %30, align 1
  %.pre6 = load i64, i64* %.pre18, align 8
  br label %routine_ucomisd__xmm0___xmm1.exit

; <label>:4204:                                   ; preds = %block_.L_400ef7
  %4205 = fcmp ogt double %4152, %4150
  br i1 %4205, label %4210, label %4206

; <label>:4206:                                   ; preds = %4204
  %4207 = fcmp olt double %4152, %4150
  br i1 %4207, label %4210, label %4208

; <label>:4208:                                   ; preds = %4206
  %4209 = fcmp oeq double %4152, %4150
  br i1 %4209, label %4210, label %4214

; <label>:4210:                                   ; preds = %4208, %4206, %4204, %4194
  %4211 = phi i8 [ 0, %4204 ], [ 0, %4206 ], [ 1, %4208 ], [ 1, %4194 ]
  %4212 = phi i8 [ 0, %4204 ], [ 0, %4206 ], [ 0, %4208 ], [ 1, %4194 ]
  %4213 = phi i8 [ 0, %4204 ], [ 1, %4206 ], [ 0, %4208 ], [ 1, %4194 ]
  store i8 %4211, i8* %30, align 1
  store i8 %4212, i8* %21, align 1
  store i8 %4213, i8* %14, align 1
  br label %4214

; <label>:4214:                                   ; preds = %4210, %4208
  %4215 = phi i8 [ %4211, %4210 ], [ %4184, %4208 ]
  %4216 = phi i8 [ %4213, %4210 ], [ 0, %4208 ]
  store i8 0, i8* %39, align 1
  store i8 0, i8* %33, align 1
  store i8 0, i8* %27, align 1
  br label %routine_ucomisd__xmm0___xmm1.exit

routine_ucomisd__xmm0___xmm1.exit:                ; preds = %4214, %4202
  %4217 = phi i64 [ %.pre6, %4202 ], [ %4176, %4214 ]
  %4218 = phi i8 [ %.pre5, %4202 ], [ %4215, %4214 ]
  %4219 = phi i8 [ %.pre4, %4202 ], [ %4216, %4214 ]
  %4220 = phi i64 [ %.pre3, %4202 ], [ %4192, %4214 ]
  %4221 = phi i64 [ %.pre2, %4202 ], [ %4191, %4214 ]
  %4222 = phi %struct.Memory* [ %4203, %4202 ], [ %call2_402238, %4214 ]
  %4223 = or i8 %4218, %4219
  %4224 = icmp eq i8 %4223, 0
  %4225 = select i1 %4224, i64 %4221, i64 %4217
  store i64 %4225, i64* %.pre18, align 8
  %4226 = load i64, i64* %RBP.i, align 8
  %4227 = add i64 %4226, -32
  %4228 = add i64 %4220, 8
  store i64 %4228, i64* %PC.i, align 8
  %4229 = inttoptr i64 %4227 to i64*
  %4230 = load i64, i64* %4229, align 8
  store i64 %4230, i64* %RDI.i3614.pre-phi, align 8
  %4231 = add i64 %4226, -40
  %4232 = add i64 %4220, 12
  store i64 %4232, i64* %PC.i, align 8
  %4233 = inttoptr i64 %4231 to i64*
  %4234 = load i64, i64* %4233, align 8
  store i64 %4234, i64* %RSI.i3629, align 8
  store i64 %4225, i64* %RDX.i3618, align 8
  %4235 = add i64 %4220, 39537
  %4236 = add i64 %4220, 20
  %4237 = load i64, i64* %6, align 8
  %4238 = add i64 %4237, -8
  %4239 = inttoptr i64 %4238 to i64*
  store i64 %4236, i64* %4239, align 8
  store i64 %4238, i64* %6, align 8
  store i64 %4235, i64* %3, align 8
  %call2_40227e = tail call %struct.Memory* @sub_40bce0._Z4fillIPmmEvT_S1_T0_(%struct.State* %0, i64 %4235, %struct.Memory* %4222)
  %4240 = load i64, i64* %PC.i, align 8
  store i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64* %RDI.i3614.pre-phi, align 8
  store i64 8000, i64* %RSI.i3629, align 8
  store i64 ptrtoint (%G__0x419660_type* @G__0x419660 to i64), i64* %RDX.i3618, align 8
  %4241 = load i32, i32* bitcast (%G_0x622080_type* @G_0x622080 to i32*), align 8
  %4242 = zext i32 %4241 to i64
  store i64 %4242, i64* %194, align 8
  store i32 %4241, i32* bitcast (%G_0x6220c0_type* @G_0x6220c0 to i32*), align 8
  %4243 = add i64 %4240, 39581
  %4244 = add i64 %4240, 46
  %4245 = load i64, i64* %6, align 8
  %4246 = add i64 %4245, -8
  %4247 = inttoptr i64 %4246 to i64*
  store i64 %4244, i64* %4247, align 8
  store i64 %4246, i64* %6, align 8
  store i64 %4243, i64* %3, align 8
  %call2_4022ac = tail call %struct.Memory* @sub_40bd20._Z13test_constantIm10custom_twoImEEvPT_iPKc(%struct.State* %0, i64 %4243, %struct.Memory* %call2_40227e)
  %4248 = load i64, i64* %PC.i, align 8
  store i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64* %RDI.i3614.pre-phi, align 8
  store i64 8000, i64* %RSI.i3629, align 8
  store i64 ptrtoint (%G__0x419672_type* @G__0x419672 to i64), i64* %RDX.i3618, align 8
  %4249 = add i64 %4248, 39695
  %4250 = add i64 %4248, 30
  %4251 = load i64, i64* %6, align 8
  %4252 = add i64 %4251, -8
  %4253 = inttoptr i64 %4252 to i64*
  store i64 %4250, i64* %4253, align 8
  store i64 %4252, i64* %6, align 8
  store i64 %4249, i64* %3, align 8
  %call2_4022ca = tail call %struct.Memory* @sub_40bdc0._Z13test_constantIm20custom_add_constantsImEEvPT_iPKc(%struct.State* %0, i64 %4249, %struct.Memory* %call2_4022ac)
  %4254 = load i64, i64* %PC.i, align 8
  store i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64* %RDI.i3614.pre-phi, align 8
  store i64 8000, i64* %RSI.i3629, align 8
  store i64 ptrtoint (%G__0x419689_type* @G__0x419689 to i64), i64* %RDX.i3618, align 8
  %4255 = add i64 %4254, 39825
  %4256 = add i64 %4254, 30
  %4257 = load i64, i64* %6, align 8
  %4258 = add i64 %4257, -8
  %4259 = inttoptr i64 %4258 to i64*
  store i64 %4256, i64* %4259, align 8
  store i64 %4258, i64* %6, align 8
  store i64 %4255, i64* %3, align 8
  %call2_4022e8 = tail call %struct.Memory* @sub_40be60._Z13test_constantIm20custom_sub_constantsImEEvPT_iPKc(%struct.State* %0, i64 %4255, %struct.Memory* %call2_4022ca)
  %4260 = load i64, i64* %PC.i, align 8
  store i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64* %RDI.i3614.pre-phi, align 8
  store i64 8000, i64* %RSI.i3629, align 8
  store i64 ptrtoint (%G__0x4196a5_type* @G__0x4196a5 to i64), i64* %RDX.i3618, align 8
  %4261 = add i64 %4260, 39955
  %4262 = add i64 %4260, 30
  %4263 = load i64, i64* %6, align 8
  %4264 = add i64 %4263, -8
  %4265 = inttoptr i64 %4264 to i64*
  store i64 %4262, i64* %4265, align 8
  store i64 %4264, i64* %6, align 8
  store i64 %4261, i64* %3, align 8
  %call2_402306 = tail call %struct.Memory* @sub_40bf00._Z13test_constantIm25custom_multiply_constantsImEEvPT_iPKc(%struct.State* %0, i64 %4261, %struct.Memory* %call2_4022e8)
  %4266 = load i64, i64* %PC.i, align 8
  store i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64* %RDI.i3614.pre-phi, align 8
  store i64 8000, i64* %RSI.i3629, align 8
  store i64 ptrtoint (%G__0x4196c1_type* @G__0x4196c1 to i64), i64* %RDX.i3618, align 8
  %4267 = add i64 %4266, 40085
  %4268 = add i64 %4266, 30
  %4269 = load i64, i64* %6, align 8
  %4270 = add i64 %4269, -8
  %4271 = inttoptr i64 %4270 to i64*
  store i64 %4268, i64* %4271, align 8
  store i64 %4270, i64* %6, align 8
  store i64 %4267, i64* %3, align 8
  %call2_402324 = tail call %struct.Memory* @sub_40bfa0._Z13test_constantIm23custom_divide_constantsImEEvPT_iPKc(%struct.State* %0, i64 %4267, %struct.Memory* %call2_402306)
  %4272 = load i64, i64* %PC.i, align 8
  store i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64* %RDI.i3614.pre-phi, align 8
  store i64 8000, i64* %RSI.i3629, align 8
  store i64 ptrtoint (%G__0x4196db_type* @G__0x4196db to i64), i64* %RDX.i3618, align 8
  %4273 = add i64 %4272, 40215
  %4274 = add i64 %4272, 30
  %4275 = load i64, i64* %6, align 8
  %4276 = add i64 %4275, -8
  %4277 = inttoptr i64 %4276 to i64*
  store i64 %4274, i64* %4277, align 8
  store i64 %4276, i64* %6, align 8
  store i64 %4273, i64* %3, align 8
  %call2_402342 = tail call %struct.Memory* @sub_40c040._Z13test_constantIm20custom_mod_constantsImEEvPT_iPKc(%struct.State* %0, i64 %4273, %struct.Memory* %call2_402324)
  %4278 = load i64, i64* %PC.i, align 8
  store i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64* %RDI.i3614.pre-phi, align 8
  store i64 8000, i64* %RSI.i3629, align 8
  store i64 ptrtoint (%G__0x4196f2_type* @G__0x4196f2 to i64), i64* %RDX.i3618, align 8
  %4279 = add i64 %4278, 40345
  %4280 = add i64 %4278, 30
  %4281 = load i64, i64* %6, align 8
  %4282 = add i64 %4281, -8
  %4283 = inttoptr i64 %4282 to i64*
  store i64 %4280, i64* %4283, align 8
  store i64 %4282, i64* %6, align 8
  store i64 %4279, i64* %3, align 8
  %call2_402360 = tail call %struct.Memory* @sub_40c0e0._Z13test_constantIm22custom_equal_constantsImEEvPT_iPKc(%struct.State* %0, i64 %4279, %struct.Memory* %call2_402342)
  %4284 = load i64, i64* %PC.i, align 8
  store i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64* %RDI.i3614.pre-phi, align 8
  store i64 8000, i64* %RSI.i3629, align 8
  store i64 ptrtoint (%G__0x41970b_type* @G__0x41970b to i64), i64* %RDX.i3618, align 8
  %4285 = add i64 %4284, 40475
  %4286 = add i64 %4284, 30
  %4287 = load i64, i64* %6, align 8
  %4288 = add i64 %4287, -8
  %4289 = inttoptr i64 %4288 to i64*
  store i64 %4286, i64* %4289, align 8
  store i64 %4288, i64* %6, align 8
  store i64 %4285, i64* %3, align 8
  %call2_40237e = tail call %struct.Memory* @sub_40c180._Z13test_constantIm25custom_notequal_constantsImEEvPT_iPKc(%struct.State* %0, i64 %4285, %struct.Memory* %call2_402360)
  %4290 = load i64, i64* %PC.i, align 8
  store i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64* %RDI.i3614.pre-phi, align 8
  store i64 8000, i64* %RSI.i3629, align 8
  store i64 ptrtoint (%G__0x419727_type* @G__0x419727 to i64), i64* %RDX.i3618, align 8
  %4291 = add i64 %4290, 40605
  %4292 = add i64 %4290, 30
  %4293 = load i64, i64* %6, align 8
  %4294 = add i64 %4293, -8
  %4295 = inttoptr i64 %4294 to i64*
  store i64 %4292, i64* %4295, align 8
  store i64 %4294, i64* %6, align 8
  store i64 %4291, i64* %3, align 8
  %call2_40239c = tail call %struct.Memory* @sub_40c220._Z13test_constantIm28custom_greaterthan_constantsImEEvPT_iPKc(%struct.State* %0, i64 %4291, %struct.Memory* %call2_40237e)
  %4296 = load i64, i64* %PC.i, align 8
  store i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64* %RDI.i3614.pre-phi, align 8
  store i64 8000, i64* %RSI.i3629, align 8
  store i64 ptrtoint (%G__0x419747_type* @G__0x419747 to i64), i64* %RDX.i3618, align 8
  %4297 = add i64 %4296, 40735
  %4298 = add i64 %4296, 30
  %4299 = load i64, i64* %6, align 8
  %4300 = add i64 %4299, -8
  %4301 = inttoptr i64 %4300 to i64*
  store i64 %4298, i64* %4301, align 8
  store i64 %4300, i64* %6, align 8
  store i64 %4297, i64* %3, align 8
  %call2_4023ba = tail call %struct.Memory* @sub_40c2c0._Z13test_constantIm25custom_lessthan_constantsImEEvPT_iPKc(%struct.State* %0, i64 %4297, %struct.Memory* %call2_40239c)
  %4302 = load i64, i64* %PC.i, align 8
  store i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64* %RDI.i3614.pre-phi, align 8
  store i64 8000, i64* %RSI.i3629, align 8
  store i64 ptrtoint (%G__0x419764_type* @G__0x419764 to i64), i64* %RDX.i3618, align 8
  %4303 = add i64 %4302, 40865
  %4304 = add i64 %4302, 30
  %4305 = load i64, i64* %6, align 8
  %4306 = add i64 %4305, -8
  %4307 = inttoptr i64 %4306 to i64*
  store i64 %4304, i64* %4307, align 8
  store i64 %4306, i64* %6, align 8
  store i64 %4303, i64* %3, align 8
  %call2_4023d8 = tail call %struct.Memory* @sub_40c360._Z13test_constantIm33custom_greaterthanequal_constantsImEEvPT_iPKc(%struct.State* %0, i64 %4303, %struct.Memory* %call2_4023ba)
  %4308 = load i64, i64* %PC.i, align 8
  store i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64* %RDI.i3614.pre-phi, align 8
  store i64 8000, i64* %RSI.i3629, align 8
  store i64 ptrtoint (%G__0x41978a_type* @G__0x41978a to i64), i64* %RDX.i3618, align 8
  %4309 = add i64 %4308, 40995
  %4310 = add i64 %4308, 30
  %4311 = load i64, i64* %6, align 8
  %4312 = add i64 %4311, -8
  %4313 = inttoptr i64 %4312 to i64*
  store i64 %4310, i64* %4313, align 8
  store i64 %4312, i64* %6, align 8
  store i64 %4309, i64* %3, align 8
  %call2_4023f6 = tail call %struct.Memory* @sub_40c400._Z13test_constantIm30custom_lessthanequal_constantsImEEvPT_iPKc(%struct.State* %0, i64 %4309, %struct.Memory* %call2_4023d8)
  %4314 = load i64, i64* %PC.i, align 8
  store i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64* %RDI.i3614.pre-phi, align 8
  store i64 8000, i64* %RSI.i3629, align 8
  store i64 ptrtoint (%G__0x4197ad_type* @G__0x4197ad to i64), i64* %RDX.i3618, align 8
  %4315 = add i64 %4314, 41125
  %4316 = add i64 %4314, 30
  %4317 = load i64, i64* %6, align 8
  %4318 = add i64 %4317, -8
  %4319 = inttoptr i64 %4318 to i64*
  store i64 %4316, i64* %4319, align 8
  store i64 %4318, i64* %6, align 8
  store i64 %4315, i64* %3, align 8
  %call2_402414 = tail call %struct.Memory* @sub_40c4a0._Z13test_constantIm20custom_and_constantsImEEvPT_iPKc(%struct.State* %0, i64 %4315, %struct.Memory* %call2_4023f6)
  %4320 = load i64, i64* %PC.i, align 8
  store i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64* %RDI.i3614.pre-phi, align 8
  store i64 8000, i64* %RSI.i3629, align 8
  store i64 ptrtoint (%G__0x4197c4_type* @G__0x4197c4 to i64), i64* %RDX.i3618, align 8
  %4321 = add i64 %4320, 41255
  %4322 = add i64 %4320, 30
  %4323 = load i64, i64* %6, align 8
  %4324 = add i64 %4323, -8
  %4325 = inttoptr i64 %4324 to i64*
  store i64 %4322, i64* %4325, align 8
  store i64 %4324, i64* %6, align 8
  store i64 %4321, i64* %3, align 8
  %call2_402432 = tail call %struct.Memory* @sub_40c540._Z13test_constantIm19custom_or_constantsImEEvPT_iPKc(%struct.State* %0, i64 %4321, %struct.Memory* %call2_402414)
  %4326 = load i64, i64* %PC.i, align 8
  store i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64* %RDI.i3614.pre-phi, align 8
  store i64 8000, i64* %RSI.i3629, align 8
  store i64 ptrtoint (%G__0x4197da_type* @G__0x4197da to i64), i64* %RDX.i3618, align 8
  %4327 = add i64 %4326, 41385
  %4328 = add i64 %4326, 30
  %4329 = load i64, i64* %6, align 8
  %4330 = add i64 %4329, -8
  %4331 = inttoptr i64 %4330 to i64*
  store i64 %4328, i64* %4331, align 8
  store i64 %4330, i64* %6, align 8
  store i64 %4327, i64* %3, align 8
  %call2_402450 = tail call %struct.Memory* @sub_40c5e0._Z13test_constantIm20custom_xor_constantsImEEvPT_iPKc(%struct.State* %0, i64 %4327, %struct.Memory* %call2_402432)
  %4332 = load i64, i64* %PC.i, align 8
  store i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64* %RDI.i3614.pre-phi, align 8
  store i64 8000, i64* %RSI.i3629, align 8
  store i64 10, i64* %194, align 8
  %4333 = load i32, i32* bitcast (%G_0x622080_type* @G_0x622080 to i32*), align 8
  %4334 = zext i32 %4333 to i64
  store i64 %4334, i64* %.pre18, align 8
  %4335 = load i64, i64* %RBP.i, align 8
  %4336 = add i64 %4335, -112
  %4337 = add i64 %4332, 42
  store i64 %4337, i64* %PC.i, align 8
  %4338 = inttoptr i64 %4336 to i64*
  store i64 ptrtoint (%G__0x4197f1_type* @G__0x4197f1 to i64), i64* %4338, align 8
  %4339 = load i64, i64* %PC.i, align 8
  %4340 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %4341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %4342 = bitcast %union.anon* %4341 to i32*
  %4343 = load i32, i32* %4342, align 8
  %4344 = sext i32 %4343 to i64
  %4345 = lshr i64 %4344, 32
  store i64 %4345, i64* %4340, align 8
  %4346 = load i32, i32* %R9D.i3588, align 4
  %4347 = add i64 %4339, 4
  store i64 %4347, i64* %PC.i, align 8
  %4348 = zext i32 %4343 to i64
  %4349 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %4350 = sext i32 %4346 to i64
  %4351 = shl nuw i64 %4345, 32
  %4352 = or i64 %4351, %4348
  %4353 = sdiv i64 %4352, %4350
  %4354 = shl i64 %4353, 32
  %4355 = ashr exact i64 %4354, 32
  %4356 = icmp eq i64 %4353, %4355
  br i1 %4356, label %4359, label %4357

; <label>:4357:                                   ; preds = %routine_ucomisd__xmm0___xmm1.exit
  %4358 = tail call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %4347, %struct.Memory* %call2_402450)
  %.pre7 = load i32, i32* %EAX.i3393, align 4
  %.pre8 = load i64, i64* %PC.i, align 8
  br label %routine_idivl__r9d.exit449

; <label>:4359:                                   ; preds = %routine_ucomisd__xmm0___xmm1.exit
  %4360 = srem i64 %4352, %4350
  %4361 = getelementptr inbounds %union.anon, %union.anon* %4341, i64 0, i32 0
  %4362 = and i64 %4353, 4294967295
  store i64 %4362, i64* %4361, align 8
  %4363 = getelementptr inbounds %union.anon, %union.anon* %4349, i64 0, i32 0
  %4364 = and i64 %4360, 4294967295
  store i64 %4364, i64* %4363, align 8
  store i8 0, i8* %14, align 1
  store i8 0, i8* %21, align 1
  store i8 0, i8* %27, align 1
  store i8 0, i8* %30, align 1
  store i8 0, i8* %33, align 1
  store i8 0, i8* %39, align 1
  %4365 = trunc i64 %4353 to i32
  br label %routine_idivl__r9d.exit449

routine_idivl__r9d.exit449:                       ; preds = %4359, %4357
  %4366 = phi i64 [ %.pre8, %4357 ], [ %4347, %4359 ]
  %4367 = phi i32 [ %.pre7, %4357 ], [ %4365, %4359 ]
  %4368 = phi %struct.Memory* [ %4358, %4357 ], [ %call2_402450, %4359 ]
  store i32 %4367, i32* bitcast (%G_0x6220c0_type* @G_0x6220c0 to i32*), align 8
  %4369 = load i64, i64* %RBP.i, align 8
  %4370 = add i64 %4369, -112
  %4371 = add i64 %4366, 11
  store i64 %4371, i64* %PC.i, align 8
  %4372 = inttoptr i64 %4370 to i64*
  %4373 = load i64, i64* %4372, align 8
  store i64 %4373, i64* %RCX.i3623, align 8
  store i64 %4373, i64* %RDX.i3618, align 8
  %4374 = add i64 %4366, 41469
  %4375 = add i64 %4366, 19
  %4376 = load i64, i64* %6, align 8
  %4377 = add i64 %4376, -8
  %4378 = inttoptr i64 %4377 to i64*
  store i64 %4375, i64* %4378, align 8
  store i64 %4377, i64* %6, align 8
  store i64 %4374, i64* %3, align 8
  %call2_402491 = tail call %struct.Memory* @sub_40c680._Z13test_constantIm19custom_constant_addImEEvPT_iPKc(%struct.State* %0, i64 %4374, %struct.Memory* %4368)
  %4379 = load i64, i64* %PC.i, align 8
  store i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64* %RDI.i3614.pre-phi, align 8
  store i64 8000, i64* %RSI.i3629, align 8
  store i64 ptrtoint (%G__0x419807_type* @G__0x419807 to i64), i64* %RDX.i3618, align 8
  %4380 = add i64 %4379, 41610
  %4381 = add i64 %4379, 30
  %4382 = load i64, i64* %6, align 8
  %4383 = add i64 %4382, -8
  %4384 = inttoptr i64 %4383 to i64*
  store i64 %4381, i64* %4384, align 8
  store i64 %4383, i64* %6, align 8
  store i64 %4380, i64* %3, align 8
  %call2_4024af = tail call %struct.Memory* @sub_40c720._Z13test_constantIm28custom_multiple_constant_addImEEvPT_iPKc(%struct.State* %0, i64 %4380, %struct.Memory* %call2_402491)
  %4385 = load i64, i64* %PC.i, align 8
  store i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64* %RDI.i3614.pre-phi, align 8
  store i64 8000, i64* %RSI.i3629, align 8
  store i64 ptrtoint (%G__0x419827_type* @G__0x419827 to i64), i64* %RDX.i3618, align 8
  %4386 = add i64 %4385, 41740
  %4387 = add i64 %4385, 30
  %4388 = load i64, i64* %6, align 8
  %4389 = add i64 %4388, -8
  %4390 = inttoptr i64 %4389 to i64*
  store i64 %4387, i64* %4390, align 8
  store i64 %4389, i64* %6, align 8
  store i64 %4386, i64* %3, align 8
  %call2_4024cd = tail call %struct.Memory* @sub_40c7c0._Z13test_constantIm19custom_constant_subImEEvPT_iPKc(%struct.State* %0, i64 %4386, %struct.Memory* %call2_4024af)
  %4391 = load i64, i64* %PC.i, align 8
  store i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64* %RDI.i3614.pre-phi, align 8
  store i64 8000, i64* %RSI.i3629, align 8
  store i64 ptrtoint (%G__0x419842_type* @G__0x419842 to i64), i64* %RDX.i3618, align 8
  %4392 = add i64 %4391, 41870
  %4393 = add i64 %4391, 30
  %4394 = load i64, i64* %6, align 8
  %4395 = add i64 %4394, -8
  %4396 = inttoptr i64 %4395 to i64*
  store i64 %4393, i64* %4396, align 8
  store i64 %4395, i64* %6, align 8
  store i64 %4392, i64* %3, align 8
  %call2_4024eb = tail call %struct.Memory* @sub_40c860._Z13test_constantIm28custom_multiple_constant_subImEEvPT_iPKc(%struct.State* %0, i64 %4392, %struct.Memory* %call2_4024cd)
  %4397 = load i64, i64* %PC.i, align 8
  store i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64* %RDI.i3614.pre-phi, align 8
  store i64 8000, i64* %RSI.i3629, align 8
  store i64 ptrtoint (%G__0x419867_type* @G__0x419867 to i64), i64* %RDX.i3618, align 8
  %4398 = add i64 %4397, 42000
  %4399 = add i64 %4397, 30
  %4400 = load i64, i64* %6, align 8
  %4401 = add i64 %4400, -8
  %4402 = inttoptr i64 %4401 to i64*
  store i64 %4399, i64* %4402, align 8
  store i64 %4401, i64* %6, align 8
  store i64 %4398, i64* %3, align 8
  %call2_402509 = tail call %struct.Memory* @sub_40c900._Z13test_constantIm24custom_constant_multiplyImEEvPT_iPKc(%struct.State* %0, i64 %4398, %struct.Memory* %call2_4024eb)
  %4403 = load i64, i64* %PC.i, align 8
  store i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64* %RDI.i3614.pre-phi, align 8
  store i64 8000, i64* %RSI.i3629, align 8
  store i64 ptrtoint (%G__0x419882_type* @G__0x419882 to i64), i64* %RDX.i3618, align 8
  %4404 = add i64 %4403, 42130
  %4405 = add i64 %4403, 30
  %4406 = load i64, i64* %6, align 8
  %4407 = add i64 %4406, -8
  %4408 = inttoptr i64 %4407 to i64*
  store i64 %4405, i64* %4408, align 8
  store i64 %4407, i64* %6, align 8
  store i64 %4404, i64* %3, align 8
  %call2_402527 = tail call %struct.Memory* @sub_40c9a0._Z13test_constantIm33custom_multiple_constant_multiplyImEEvPT_iPKc(%struct.State* %0, i64 %4404, %struct.Memory* %call2_402509)
  %4409 = load i64, i64* %PC.i, align 8
  store i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64* %RDI.i3614.pre-phi, align 8
  store i64 8000, i64* %RSI.i3629, align 8
  store i64 ptrtoint (%G__0x4198a8_type* @G__0x4198a8 to i64), i64* %RDX.i3618, align 8
  %4410 = add i64 %4409, 42260
  %4411 = add i64 %4409, 30
  %4412 = load i64, i64* %6, align 8
  %4413 = add i64 %4412, -8
  %4414 = inttoptr i64 %4413 to i64*
  store i64 %4411, i64* %4414, align 8
  store i64 %4413, i64* %6, align 8
  store i64 %4410, i64* %3, align 8
  %call2_402545 = tail call %struct.Memory* @sub_40ca40._Z13test_constantIm34custom_multiple_constant_multiply2ImEEvPT_iPKc(%struct.State* %0, i64 %4410, %struct.Memory* %call2_402527)
  %4415 = load i64, i64* %PC.i, align 8
  store i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64* %RDI.i3614.pre-phi, align 8
  store i64 8000, i64* %RSI.i3629, align 8
  store i64 ptrtoint (%G__0x4198cd_type* @G__0x4198cd to i64), i64* %RDX.i3618, align 8
  %4416 = add i64 %4415, 42390
  %4417 = add i64 %4415, 30
  %4418 = load i64, i64* %6, align 8
  %4419 = add i64 %4418, -8
  %4420 = inttoptr i64 %4419 to i64*
  store i64 %4417, i64* %4420, align 8
  store i64 %4419, i64* %6, align 8
  store i64 %4416, i64* %3, align 8
  %call2_402563 = tail call %struct.Memory* @sub_40cae0._Z13test_constantIm22custom_constant_divideImEEvPT_iPKc(%struct.State* %0, i64 %4416, %struct.Memory* %call2_402545)
  %4421 = load i64, i64* %PC.i, align 8
  store i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64* %RDI.i3614.pre-phi, align 8
  store i64 8000, i64* %RSI.i3629, align 8
  store i64 ptrtoint (%G__0x4198e6_type* @G__0x4198e6 to i64), i64* %RDX.i3618, align 8
  %4422 = add i64 %4421, 42520
  %4423 = add i64 %4421, 30
  %4424 = load i64, i64* %6, align 8
  %4425 = add i64 %4424, -8
  %4426 = inttoptr i64 %4425 to i64*
  store i64 %4423, i64* %4426, align 8
  store i64 %4425, i64* %6, align 8
  store i64 %4422, i64* %3, align 8
  %call2_402581 = tail call %struct.Memory* @sub_40cb80._Z13test_constantIm31custom_multiple_constant_divideImEEvPT_iPKc(%struct.State* %0, i64 %4422, %struct.Memory* %call2_402563)
  %4427 = load i64, i64* %PC.i, align 8
  store i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64* %RDI.i3614.pre-phi, align 8
  store i64 8000, i64* %RSI.i3629, align 8
  store i64 ptrtoint (%G__0x419909_type* @G__0x419909 to i64), i64* %RDX.i3618, align 8
  %4428 = add i64 %4427, 42650
  %4429 = add i64 %4427, 30
  %4430 = load i64, i64* %6, align 8
  %4431 = add i64 %4430, -8
  %4432 = inttoptr i64 %4431 to i64*
  store i64 %4429, i64* %4432, align 8
  store i64 %4431, i64* %6, align 8
  store i64 %4428, i64* %3, align 8
  %call2_40259f = tail call %struct.Memory* @sub_40cc20._Z13test_constantIm32custom_multiple_constant_divide2ImEEvPT_iPKc(%struct.State* %0, i64 %4428, %struct.Memory* %call2_402581)
  %4433 = load i64, i64* %PC.i, align 8
  store i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64* %RDI.i3614.pre-phi, align 8
  store i64 8000, i64* %RSI.i3629, align 8
  store i64 ptrtoint (%G__0x41992c_type* @G__0x41992c to i64), i64* %RDX.i3618, align 8
  %4434 = add i64 %4433, 42780
  %4435 = add i64 %4433, 30
  %4436 = load i64, i64* %6, align 8
  %4437 = add i64 %4436, -8
  %4438 = inttoptr i64 %4437 to i64*
  store i64 %4435, i64* %4438, align 8
  store i64 %4437, i64* %6, align 8
  store i64 %4434, i64* %3, align 8
  %call2_4025bd = tail call %struct.Memory* @sub_40ccc0._Z13test_constantIm30custom_multiple_constant_mixedImEEvPT_iPKc(%struct.State* %0, i64 %4434, %struct.Memory* %call2_40259f)
  %4439 = load i64, i64* %PC.i, align 8
  store i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64* %RDI.i3614.pre-phi, align 8
  store i64 8000, i64* %RSI.i3629, align 8
  store i64 ptrtoint (%G__0x41994d_type* @G__0x41994d to i64), i64* %RDX.i3618, align 8
  %4440 = add i64 %4439, 42910
  %4441 = add i64 %4439, 30
  %4442 = load i64, i64* %6, align 8
  %4443 = add i64 %4442, -8
  %4444 = inttoptr i64 %4443 to i64*
  store i64 %4441, i64* %4444, align 8
  store i64 %4443, i64* %6, align 8
  store i64 %4440, i64* %3, align 8
  %call2_4025db = tail call %struct.Memory* @sub_40cd60._Z13test_constantIm19custom_constant_andImEEvPT_iPKc(%struct.State* %0, i64 %4440, %struct.Memory* %call2_4025bd)
  %4445 = load i64, i64* %PC.i, align 8
  store i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64* %RDI.i3614.pre-phi, align 8
  store i64 8000, i64* %RSI.i3629, align 8
  store i64 ptrtoint (%G__0x419963_type* @G__0x419963 to i64), i64* %RDX.i3618, align 8
  %4446 = add i64 %4445, 43040
  %4447 = add i64 %4445, 30
  %4448 = load i64, i64* %6, align 8
  %4449 = add i64 %4448, -8
  %4450 = inttoptr i64 %4449 to i64*
  store i64 %4447, i64* %4450, align 8
  store i64 %4449, i64* %6, align 8
  store i64 %4446, i64* %3, align 8
  %call2_4025f9 = tail call %struct.Memory* @sub_40ce00._Z13test_constantIm28custom_multiple_constant_andImEEvPT_iPKc(%struct.State* %0, i64 %4446, %struct.Memory* %call2_4025db)
  %4451 = load i64, i64* %PC.i, align 8
  store i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64* %RDI.i3614.pre-phi, align 8
  store i64 8000, i64* %RSI.i3629, align 8
  store i64 ptrtoint (%G__0x419982_type* @G__0x419982 to i64), i64* %RDX.i3618, align 8
  %4452 = add i64 %4451, 43170
  %4453 = add i64 %4451, 30
  %4454 = load i64, i64* %6, align 8
  %4455 = add i64 %4454, -8
  %4456 = inttoptr i64 %4455 to i64*
  store i64 %4453, i64* %4456, align 8
  store i64 %4455, i64* %6, align 8
  store i64 %4452, i64* %3, align 8
  %call2_402617 = tail call %struct.Memory* @sub_40cea0._Z13test_constantIm18custom_constant_orImEEvPT_iPKc(%struct.State* %0, i64 %4452, %struct.Memory* %call2_4025f9)
  %4457 = load i64, i64* %PC.i, align 8
  store i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64* %RDI.i3614.pre-phi, align 8
  store i64 8000, i64* %RSI.i3629, align 8
  store i64 ptrtoint (%G__0x419997_type* @G__0x419997 to i64), i64* %RDX.i3618, align 8
  %4458 = add i64 %4457, 43300
  %4459 = add i64 %4457, 30
  %4460 = load i64, i64* %6, align 8
  %4461 = add i64 %4460, -8
  %4462 = inttoptr i64 %4461 to i64*
  store i64 %4459, i64* %4462, align 8
  store i64 %4461, i64* %6, align 8
  store i64 %4458, i64* %3, align 8
  %call2_402635 = tail call %struct.Memory* @sub_40cf40._Z13test_constantIm27custom_multiple_constant_orImEEvPT_iPKc(%struct.State* %0, i64 %4458, %struct.Memory* %call2_402617)
  %4463 = load i64, i64* %PC.i, align 8
  store i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64* %RDI.i3614.pre-phi, align 8
  store i64 8000, i64* %RSI.i3629, align 8
  store i64 ptrtoint (%G__0x4199b5_type* @G__0x4199b5 to i64), i64* %RDX.i3618, align 8
  %4464 = add i64 %4463, 43430
  %4465 = add i64 %4463, 30
  %4466 = load i64, i64* %6, align 8
  %4467 = add i64 %4466, -8
  %4468 = inttoptr i64 %4467 to i64*
  store i64 %4465, i64* %4468, align 8
  store i64 %4467, i64* %6, align 8
  store i64 %4464, i64* %3, align 8
  %call2_402653 = tail call %struct.Memory* @sub_40cfe0._Z13test_constantIm19custom_constant_xorImEEvPT_iPKc(%struct.State* %0, i64 %4464, %struct.Memory* %call2_402635)
  %4469 = load i64, i64* %PC.i, align 8
  store i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64* %RDI.i3614.pre-phi, align 8
  store i64 8000, i64* %RSI.i3629, align 8
  store i64 ptrtoint (%G__0x4199cb_type* @G__0x4199cb to i64), i64* %RDX.i3618, align 8
  %4470 = add i64 %4469, 43560
  %4471 = add i64 %4469, 30
  %4472 = load i64, i64* %6, align 8
  %4473 = add i64 %4472, -8
  %4474 = inttoptr i64 %4473 to i64*
  store i64 %4471, i64* %4474, align 8
  store i64 %4473, i64* %6, align 8
  store i64 %4470, i64* %3, align 8
  %call2_402671 = tail call %struct.Memory* @sub_40d080._Z13test_constantIm28custom_multiple_constant_xorImEEvPT_iPKc(%struct.State* %0, i64 %4470, %struct.Memory* %call2_402653)
  %4475 = load i64, i64* %PC.i, align 8
  store i64 ptrtoint (%G__0x631ad0_type* @G__0x631ad0 to i64), i64* %RCX.i3623, align 8
  store i64 add (i64 ptrtoint (%G__0x631ad0_type* @G__0x631ad0 to i64), i64 32000), i64* %RDX.i3618, align 8
  store i8 zext (i1 or (i1 icmp ult (i64 add (i64 ptrtoint (%G__0x631ad0_type* @G__0x631ad0 to i64), i64 32000), i64 ptrtoint (%G__0x631ad0_type* @G__0x631ad0 to i64)), i1 icmp ult (i64 add (i64 ptrtoint (%G__0x631ad0_type* @G__0x631ad0 to i64), i64 32000), i64 32000)) to i8), i8* %14, align 1
  %4476 = tail call i32 @llvm.ctpop.i32(i32 and (i32 trunc (i64 add (i64 ptrtoint (%G__0x631ad0_type* @G__0x631ad0 to i64), i64 32000) to i32), i32 255))
  %4477 = trunc i32 %4476 to i8
  %4478 = and i8 %4477, 1
  %4479 = xor i8 %4478, 1
  store i8 %4479, i8* %21, align 1
  store i8 and (i8 trunc (i64 lshr (i64 xor (i64 xor (i64 ptrtoint (%G__0x631ad0_type* @G__0x631ad0 to i64), i64 32000), i64 add (i64 ptrtoint (%G__0x631ad0_type* @G__0x631ad0 to i64), i64 32000)), i64 4) to i8), i8 1), i8* %27, align 1
  store i8 zext (i1 icmp eq (i64 add (i64 ptrtoint (%G__0x631ad0_type* @G__0x631ad0 to i64), i64 32000), i64 0) to i8), i8* %30, align 1
  store i8 trunc (i64 lshr (i64 add (i64 ptrtoint (%G__0x631ad0_type* @G__0x631ad0 to i64), i64 32000), i64 63) to i8), i8* %33, align 1
  store i8 zext (i1 icmp eq (i64 add (i64 xor (i64 lshr (i64 add (i64 ptrtoint (%G__0x631ad0_type* @G__0x631ad0 to i64), i64 32000), i64 63), i64 lshr (i64 ptrtoint (%G__0x631ad0_type* @G__0x631ad0 to i64), i64 63)), i64 lshr (i64 add (i64 ptrtoint (%G__0x631ad0_type* @G__0x631ad0 to i64), i64 32000), i64 63)), i64 2) to i8), i8* %39, align 1
  %4480 = load double, double* bitcast (%G_0x622088_type* @G_0x622088 to double*), align 8
  %4481 = bitcast double %4480 to <2 x i32>
  %4482 = fptrunc double %4480 to float
  %4483 = bitcast %union.VectorReg* %.pre-phi23 to float*
  store float %4482, float* %4483, align 1
  %4484 = extractelement <2 x i32> %4481, i32 1
  %4485 = getelementptr inbounds i8, i8* %2439, i64 4
  %4486 = bitcast i8* %4485 to i32*
  store i32 %4484, i32* %4486, align 1
  %4487 = bitcast i64* %2443 to i32*
  store i32 0, i32* %4487, align 1
  %4488 = getelementptr inbounds i8, i8* %2439, i64 12
  %4489 = bitcast i8* %4488 to i32*
  store i32 0, i32* %4489, align 1
  store i64 ptrtoint (%G__0x631ad0_type* @G__0x631ad0 to i64), i64* %RDI.i3614.pre-phi, align 8
  store i64 add (i64 ptrtoint (%G__0x631ad0_type* @G__0x631ad0 to i64), i64 32000), i64* %RSI.i3629, align 8
  %4490 = add i64 %4475, 43690
  %4491 = add i64 %4475, 44
  %4492 = load i64, i64* %6, align 8
  %4493 = add i64 %4492, -8
  %4494 = inttoptr i64 %4493 to i64*
  store i64 %4491, i64* %4494, align 8
  store i64 %4493, i64* %6, align 8
  store i64 %4490, i64* %3, align 8
  %call2_40269d = tail call %struct.Memory* @sub_40d120._Z4fillIPffEvT_S1_T0_(%struct.State* %0, i64 %4490, %struct.Memory* %call2_402671)
  %4495 = load i64, i64* %PC.i, align 8
  store i64 ptrtoint (%G__0x631ad0_type* @G__0x631ad0 to i64), i64* %RDI.i3614.pre-phi, align 8
  store i64 8000, i64* %RSI.i3629, align 8
  store i64 ptrtoint (%G__0x4199ea_type* @G__0x4199ea to i64), i64* %RDX.i3618, align 8
  %4496 = load i32, i32* bitcast (%G_0x622080_type* @G_0x622080 to i32*), align 8
  %4497 = zext i32 %4496 to i64
  store i64 %4497, i64* %.pre18, align 8
  store i32 %4496, i32* bitcast (%G_0x6220c0_type* @G_0x6220c0 to i32*), align 8
  %4498 = add i64 %4495, 43710
  %4499 = add i64 %4495, 44
  %4500 = load i64, i64* %6, align 8
  %4501 = add i64 %4500, -8
  %4502 = inttoptr i64 %4501 to i64*
  store i64 %4499, i64* %4502, align 8
  store i64 %4501, i64* %6, align 8
  store i64 %4498, i64* %3, align 8
  %call2_4026c9 = tail call %struct.Memory* @sub_40d160._Z13test_constantIf10custom_twoIfEEvPT_iPKc(%struct.State* %0, i64 %4498, %struct.Memory* %call2_40269d)
  %4503 = load i64, i64* %PC.i, align 8
  store i64 ptrtoint (%G__0x631ad0_type* @G__0x631ad0 to i64), i64* %RDI.i3614.pre-phi, align 8
  store i64 8000, i64* %RSI.i3629, align 8
  store i64 ptrtoint (%G__0x4199f9_type* @G__0x4199f9 to i64), i64* %RDX.i3618, align 8
  %4504 = add i64 %4503, 43826
  %4505 = add i64 %4503, 30
  %4506 = load i64, i64* %6, align 8
  %4507 = add i64 %4506, -8
  %4508 = inttoptr i64 %4507 to i64*
  store i64 %4505, i64* %4508, align 8
  store i64 %4507, i64* %6, align 8
  store i64 %4504, i64* %3, align 8
  %call2_4026e7 = tail call %struct.Memory* @sub_40d200._Z13test_constantIf20custom_add_constantsIfEEvPT_iPKc(%struct.State* %0, i64 %4504, %struct.Memory* %call2_4026c9)
  %4509 = load i64, i64* %PC.i, align 8
  store i64 ptrtoint (%G__0x631ad0_type* @G__0x631ad0 to i64), i64* %RDI.i3614.pre-phi, align 8
  store i64 8000, i64* %RSI.i3629, align 8
  store i64 ptrtoint (%G__0x419a0d_type* @G__0x419a0d to i64), i64* %RDX.i3618, align 8
  %4510 = add i64 %4509, 43956
  %4511 = add i64 %4509, 30
  %4512 = load i64, i64* %6, align 8
  %4513 = add i64 %4512, -8
  %4514 = inttoptr i64 %4513 to i64*
  store i64 %4511, i64* %4514, align 8
  store i64 %4513, i64* %6, align 8
  store i64 %4510, i64* %3, align 8
  %call2_402705 = tail call %struct.Memory* @sub_40d2a0._Z13test_constantIf20custom_sub_constantsIfEEvPT_iPKc(%struct.State* %0, i64 %4510, %struct.Memory* %call2_4026e7)
  %4515 = load i64, i64* %PC.i, align 8
  store i64 ptrtoint (%G__0x631ad0_type* @G__0x631ad0 to i64), i64* %RDI.i3614.pre-phi, align 8
  store i64 8000, i64* %RSI.i3629, align 8
  store i64 ptrtoint (%G__0x419a26_type* @G__0x419a26 to i64), i64* %RDX.i3618, align 8
  %4516 = add i64 %4515, 44086
  %4517 = add i64 %4515, 30
  %4518 = load i64, i64* %6, align 8
  %4519 = add i64 %4518, -8
  %4520 = inttoptr i64 %4519 to i64*
  store i64 %4517, i64* %4520, align 8
  store i64 %4519, i64* %6, align 8
  store i64 %4516, i64* %3, align 8
  %call2_402723 = tail call %struct.Memory* @sub_40d340._Z13test_constantIf25custom_multiply_constantsIfEEvPT_iPKc(%struct.State* %0, i64 %4516, %struct.Memory* %call2_402705)
  %4521 = load i64, i64* %PC.i, align 8
  store i64 ptrtoint (%G__0x631ad0_type* @G__0x631ad0 to i64), i64* %RDI.i3614.pre-phi, align 8
  store i64 8000, i64* %RSI.i3629, align 8
  store i64 ptrtoint (%G__0x419a3f_type* @G__0x419a3f to i64), i64* %RDX.i3618, align 8
  %4522 = add i64 %4521, 44216
  %4523 = add i64 %4521, 30
  %4524 = load i64, i64* %6, align 8
  %4525 = add i64 %4524, -8
  %4526 = inttoptr i64 %4525 to i64*
  store i64 %4523, i64* %4526, align 8
  store i64 %4525, i64* %6, align 8
  store i64 %4522, i64* %3, align 8
  %call2_402741 = tail call %struct.Memory* @sub_40d3e0._Z13test_constantIf23custom_divide_constantsIfEEvPT_iPKc(%struct.State* %0, i64 %4522, %struct.Memory* %call2_402723)
  %4527 = load i64, i64* %PC.i, align 8
  store i64 ptrtoint (%G__0x631ad0_type* @G__0x631ad0 to i64), i64* %RDI.i3614.pre-phi, align 8
  store i64 8000, i64* %RSI.i3629, align 8
  store i64 ptrtoint (%G__0x419a56_type* @G__0x419a56 to i64), i64* %RDX.i3618, align 8
  %4528 = load i32, i32* bitcast (%G_0x622080_type* @G_0x622080 to i32*), align 8
  %4529 = zext i32 %4528 to i64
  store i64 %4529, i64* %194, align 8
  %4530 = load i64, i64* %RBP.i, align 8
  %4531 = add i64 %4530, -116
  %4532 = add i64 %4527, 41
  store i64 %4532, i64* %PC.i, align 8
  %4533 = inttoptr i64 %4531 to i32*
  store i32 10, i32* %4533, align 4
  %4534 = load i32, i32* %R9D.i3588, align 4
  %4535 = zext i32 %4534 to i64
  %4536 = load i64, i64* %PC.i, align 8
  store i64 %4535, i64* %.pre18, align 8
  %4537 = load i64, i64* %RBP.i, align 8
  %4538 = add i64 %4537, -128
  %4539 = load i64, i64* %RDX.i3618, align 8
  %4540 = add i64 %4536, 7
  store i64 %4540, i64* %PC.i, align 8
  %4541 = inttoptr i64 %4538 to i64*
  store i64 %4539, i64* %4541, align 8
  %4542 = load i64, i64* %PC.i, align 8
  %4543 = load i32, i32* %4342, align 8
  %4544 = sext i32 %4543 to i64
  %4545 = lshr i64 %4544, 32
  store i64 %4545, i64* %4340, align 8
  %4546 = load i64, i64* %RBP.i, align 8
  %4547 = add i64 %4546, -116
  %4548 = add i64 %4542, 5
  store i64 %4548, i64* %PC.i, align 8
  %4549 = inttoptr i64 %4547 to i32*
  %4550 = load i32, i32* %4549, align 4
  %4551 = zext i32 %4550 to i64
  store i64 %4551, i64* %194, align 8
  %4552 = add i64 %4542, 8
  store i64 %4552, i64* %PC.i, align 8
  %4553 = zext i32 %4543 to i64
  %4554 = sext i32 %4550 to i64
  %4555 = shl nuw i64 %4545, 32
  %4556 = or i64 %4555, %4553
  %4557 = sdiv i64 %4556, %4554
  %4558 = shl i64 %4557, 32
  %4559 = ashr exact i64 %4558, 32
  %4560 = icmp eq i64 %4557, %4559
  br i1 %4560, label %4563, label %4561

; <label>:4561:                                   ; preds = %routine_idivl__r9d.exit449
  %4562 = tail call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %4552, %struct.Memory* %call2_402741)
  %.pre9 = load i32, i32* %EAX.i3393, align 4
  %.pre10 = load i64, i64* %PC.i, align 8
  %.pre11 = load i64, i64* %RBP.i, align 8
  br label %routine_idivl__r9d.exit243

; <label>:4563:                                   ; preds = %routine_idivl__r9d.exit449
  %4564 = srem i64 %4556, %4554
  %4565 = getelementptr inbounds %union.anon, %union.anon* %4341, i64 0, i32 0
  %4566 = and i64 %4557, 4294967295
  store i64 %4566, i64* %4565, align 8
  %4567 = getelementptr inbounds %union.anon, %union.anon* %4349, i64 0, i32 0
  %4568 = and i64 %4564, 4294967295
  store i64 %4568, i64* %4567, align 8
  store i8 0, i8* %14, align 1
  store i8 0, i8* %21, align 1
  store i8 0, i8* %27, align 1
  store i8 0, i8* %30, align 1
  store i8 0, i8* %33, align 1
  store i8 0, i8* %39, align 1
  %4569 = trunc i64 %4557 to i32
  br label %routine_idivl__r9d.exit243

routine_idivl__r9d.exit243:                       ; preds = %4563, %4561
  %4570 = phi i64 [ %.pre11, %4561 ], [ %4546, %4563 ]
  %4571 = phi i64 [ %.pre10, %4561 ], [ %4552, %4563 ]
  %4572 = phi i32 [ %.pre9, %4561 ], [ %4569, %4563 ]
  %4573 = phi %struct.Memory* [ %4562, %4561 ], [ %call2_402741, %4563 ]
  store i32 %4572, i32* bitcast (%G_0x6220c0_type* @G_0x6220c0 to i32*), align 8
  %4574 = add i64 %4570, -128
  %4575 = add i64 %4571, 11
  store i64 %4575, i64* %PC.i, align 8
  %4576 = inttoptr i64 %4574 to i64*
  %4577 = load i64, i64* %4576, align 8
  store i64 %4577, i64* %RCX.i3623, align 8
  store i64 %4577, i64* %RDX.i3618, align 8
  %4578 = add i64 %4571, 44290
  %4579 = add i64 %4571, 19
  %4580 = load i64, i64* %6, align 8
  %4581 = add i64 %4580, -8
  %4582 = inttoptr i64 %4581 to i64*
  store i64 %4579, i64* %4582, align 8
  store i64 %4581, i64* %6, align 8
  store i64 %4578, i64* %3, align 8
  %call2_40278c = tail call %struct.Memory* @sub_40d480._Z13test_constantIf19custom_constant_addIfEEvPT_iPKc(%struct.State* %0, i64 %4578, %struct.Memory* %4573)
  %4583 = load i64, i64* %PC.i, align 8
  store i64 ptrtoint (%G__0x631ad0_type* @G__0x631ad0 to i64), i64* %RDI.i3614.pre-phi, align 8
  store i64 8000, i64* %RSI.i3629, align 8
  store i64 ptrtoint (%G__0x419a69_type* @G__0x419a69 to i64), i64* %RDX.i3618, align 8
  %4584 = add i64 %4583, 44431
  %4585 = add i64 %4583, 30
  %4586 = load i64, i64* %6, align 8
  %4587 = add i64 %4586, -8
  %4588 = inttoptr i64 %4587 to i64*
  store i64 %4585, i64* %4588, align 8
  store i64 %4587, i64* %6, align 8
  store i64 %4584, i64* %3, align 8
  %call2_4027aa = tail call %struct.Memory* @sub_40d520._Z13test_constantIf28custom_multiple_constant_addIfEEvPT_iPKc(%struct.State* %0, i64 %4584, %struct.Memory* %call2_40278c)
  %4589 = load i64, i64* %PC.i, align 8
  store i64 ptrtoint (%G__0x631ad0_type* @G__0x631ad0 to i64), i64* %RDI.i3614.pre-phi, align 8
  store i64 8000, i64* %RSI.i3629, align 8
  store i64 ptrtoint (%G__0x419a86_type* @G__0x419a86 to i64), i64* %RDX.i3618, align 8
  %4590 = add i64 %4589, 44561
  %4591 = add i64 %4589, 30
  %4592 = load i64, i64* %6, align 8
  %4593 = add i64 %4592, -8
  %4594 = inttoptr i64 %4593 to i64*
  store i64 %4591, i64* %4594, align 8
  store i64 %4593, i64* %6, align 8
  store i64 %4590, i64* %3, align 8
  %call2_4027c8 = tail call %struct.Memory* @sub_40d5c0._Z13test_constantIf19custom_constant_subIfEEvPT_iPKc(%struct.State* %0, i64 %4590, %struct.Memory* %call2_4027aa)
  %4595 = load i64, i64* %PC.i, align 8
  store i64 ptrtoint (%G__0x631ad0_type* @G__0x631ad0 to i64), i64* %RDI.i3614.pre-phi, align 8
  store i64 8000, i64* %RSI.i3629, align 8
  store i64 ptrtoint (%G__0x419a9e_type* @G__0x419a9e to i64), i64* %RDX.i3618, align 8
  %4596 = add i64 %4595, 44691
  %4597 = add i64 %4595, 30
  %4598 = load i64, i64* %6, align 8
  %4599 = add i64 %4598, -8
  %4600 = inttoptr i64 %4599 to i64*
  store i64 %4597, i64* %4600, align 8
  store i64 %4599, i64* %6, align 8
  store i64 %4596, i64* %3, align 8
  %call2_4027e6 = tail call %struct.Memory* @sub_40d660._Z13test_constantIf28custom_multiple_constant_subIfEEvPT_iPKc(%struct.State* %0, i64 %4596, %struct.Memory* %call2_4027c8)
  %4601 = load i64, i64* %PC.i, align 8
  store i64 ptrtoint (%G__0x631ad0_type* @G__0x631ad0 to i64), i64* %RDI.i3614.pre-phi, align 8
  store i64 8000, i64* %RSI.i3629, align 8
  store i64 ptrtoint (%G__0x419ac0_type* @G__0x419ac0 to i64), i64* %RDX.i3618, align 8
  %4602 = add i64 %4601, 44821
  %4603 = add i64 %4601, 30
  %4604 = load i64, i64* %6, align 8
  %4605 = add i64 %4604, -8
  %4606 = inttoptr i64 %4605 to i64*
  store i64 %4603, i64* %4606, align 8
  store i64 %4605, i64* %6, align 8
  store i64 %4602, i64* %3, align 8
  %call2_402804 = tail call %struct.Memory* @sub_40d700._Z13test_constantIf24custom_constant_multiplyIfEEvPT_iPKc(%struct.State* %0, i64 %4602, %struct.Memory* %call2_4027e6)
  %4607 = load i64, i64* %PC.i, align 8
  store i64 ptrtoint (%G__0x631ad0_type* @G__0x631ad0 to i64), i64* %RDI.i3614.pre-phi, align 8
  store i64 8000, i64* %RSI.i3629, align 8
  store i64 ptrtoint (%G__0x419ad8_type* @G__0x419ad8 to i64), i64* %RDX.i3618, align 8
  %4608 = add i64 %4607, 44951
  %4609 = add i64 %4607, 30
  %4610 = load i64, i64* %6, align 8
  %4611 = add i64 %4610, -8
  %4612 = inttoptr i64 %4611 to i64*
  store i64 %4609, i64* %4612, align 8
  store i64 %4611, i64* %6, align 8
  store i64 %4608, i64* %3, align 8
  %call2_402822 = tail call %struct.Memory* @sub_40d7a0._Z13test_constantIf33custom_multiple_constant_multiplyIfEEvPT_iPKc(%struct.State* %0, i64 %4608, %struct.Memory* %call2_402804)
  %4613 = load i64, i64* %PC.i, align 8
  store i64 ptrtoint (%G__0x631ad0_type* @G__0x631ad0 to i64), i64* %RDI.i3614.pre-phi, align 8
  store i64 8000, i64* %RSI.i3629, align 8
  store i64 ptrtoint (%G__0x419afb_type* @G__0x419afb to i64), i64* %RDX.i3618, align 8
  %4614 = add i64 %4613, 45081
  %4615 = add i64 %4613, 30
  %4616 = load i64, i64* %6, align 8
  %4617 = add i64 %4616, -8
  %4618 = inttoptr i64 %4617 to i64*
  store i64 %4615, i64* %4618, align 8
  store i64 %4617, i64* %6, align 8
  store i64 %4614, i64* %3, align 8
  %call2_402840 = tail call %struct.Memory* @sub_40d840._Z13test_constantIf34custom_multiple_constant_multiply2IfEEvPT_iPKc(%struct.State* %0, i64 %4614, %struct.Memory* %call2_402822)
  %4619 = load i64, i64* %PC.i, align 8
  store i64 ptrtoint (%G__0x631ad0_type* @G__0x631ad0 to i64), i64* %RDI.i3614.pre-phi, align 8
  store i64 8000, i64* %RSI.i3629, align 8
  store i64 ptrtoint (%G__0x419b1d_type* @G__0x419b1d to i64), i64* %RDX.i3618, align 8
  %4620 = add i64 %4619, 45211
  %4621 = add i64 %4619, 30
  %4622 = load i64, i64* %6, align 8
  %4623 = add i64 %4622, -8
  %4624 = inttoptr i64 %4623 to i64*
  store i64 %4621, i64* %4624, align 8
  store i64 %4623, i64* %6, align 8
  store i64 %4620, i64* %3, align 8
  %call2_40285e = tail call %struct.Memory* @sub_40d8e0._Z13test_constantIf22custom_constant_divideIfEEvPT_iPKc(%struct.State* %0, i64 %4620, %struct.Memory* %call2_402840)
  %4625 = load i64, i64* %PC.i, align 8
  store i64 ptrtoint (%G__0x631ad0_type* @G__0x631ad0 to i64), i64* %RDI.i3614.pre-phi, align 8
  store i64 8000, i64* %RSI.i3629, align 8
  store i64 ptrtoint (%G__0x419b33_type* @G__0x419b33 to i64), i64* %RDX.i3618, align 8
  %4626 = add i64 %4625, 45341
  %4627 = add i64 %4625, 30
  %4628 = load i64, i64* %6, align 8
  %4629 = add i64 %4628, -8
  %4630 = inttoptr i64 %4629 to i64*
  store i64 %4627, i64* %4630, align 8
  store i64 %4629, i64* %6, align 8
  store i64 %4626, i64* %3, align 8
  %call2_40287c = tail call %struct.Memory* @sub_40d980._Z13test_constantIf31custom_multiple_constant_divideIfEEvPT_iPKc(%struct.State* %0, i64 %4626, %struct.Memory* %call2_40285e)
  %4631 = load i64, i64* %PC.i, align 8
  store i64 ptrtoint (%G__0x631ad0_type* @G__0x631ad0 to i64), i64* %RDI.i3614.pre-phi, align 8
  store i64 8000, i64* %RSI.i3629, align 8
  store i64 ptrtoint (%G__0x419b53_type* @G__0x419b53 to i64), i64* %RDX.i3618, align 8
  %4632 = add i64 %4631, 45471
  %4633 = add i64 %4631, 30
  %4634 = load i64, i64* %6, align 8
  %4635 = add i64 %4634, -8
  %4636 = inttoptr i64 %4635 to i64*
  store i64 %4633, i64* %4636, align 8
  store i64 %4635, i64* %6, align 8
  store i64 %4632, i64* %3, align 8
  %call2_40289a = tail call %struct.Memory* @sub_40da20._Z13test_constantIf32custom_multiple_constant_divide2IfEEvPT_iPKc(%struct.State* %0, i64 %4632, %struct.Memory* %call2_40287c)
  %4637 = load i64, i64* %PC.i, align 8
  store i64 ptrtoint (%G__0x631ad0_type* @G__0x631ad0 to i64), i64* %RDI.i3614.pre-phi, align 8
  store i64 8000, i64* %RSI.i3629, align 8
  store i64 ptrtoint (%G__0x419b73_type* @G__0x419b73 to i64), i64* %RDX.i3618, align 8
  %4638 = add i64 %4637, 45601
  %4639 = add i64 %4637, 30
  %4640 = load i64, i64* %6, align 8
  %4641 = add i64 %4640, -8
  %4642 = inttoptr i64 %4641 to i64*
  store i64 %4639, i64* %4642, align 8
  store i64 %4641, i64* %6, align 8
  store i64 %4638, i64* %3, align 8
  %call2_4028b8 = tail call %struct.Memory* @sub_40dac0._Z13test_constantIf30custom_multiple_constant_mixedIfEEvPT_iPKc(%struct.State* %0, i64 %4638, %struct.Memory* %call2_40289a)
  %4643 = load i64, i64* %PC.i, align 8
  store i64 ptrtoint (%G__0x6220d0_type* @G__0x6220d0 to i64), i64* %RCX.i3623, align 8
  store i64 add (i64 ptrtoint (%G__0x6220d0_type* @G__0x6220d0 to i64), i64 64000), i64* %RDX.i3618, align 8
  store i8 zext (i1 or (i1 icmp ult (i64 add (i64 ptrtoint (%G__0x6220d0_type* @G__0x6220d0 to i64), i64 64000), i64 ptrtoint (%G__0x6220d0_type* @G__0x6220d0 to i64)), i1 icmp ult (i64 add (i64 ptrtoint (%G__0x6220d0_type* @G__0x6220d0 to i64), i64 64000), i64 64000)) to i8), i8* %14, align 1
  %4644 = tail call i32 @llvm.ctpop.i32(i32 and (i32 trunc (i64 add (i64 ptrtoint (%G__0x6220d0_type* @G__0x6220d0 to i64), i64 64000) to i32), i32 255))
  %4645 = trunc i32 %4644 to i8
  %4646 = and i8 %4645, 1
  %4647 = xor i8 %4646, 1
  store i8 %4647, i8* %21, align 1
  store i8 and (i8 trunc (i64 lshr (i64 xor (i64 xor (i64 ptrtoint (%G__0x6220d0_type* @G__0x6220d0 to i64), i64 64000), i64 add (i64 ptrtoint (%G__0x6220d0_type* @G__0x6220d0 to i64), i64 64000)), i64 4) to i8), i8 1), i8* %27, align 1
  store i8 zext (i1 icmp eq (i64 add (i64 ptrtoint (%G__0x6220d0_type* @G__0x6220d0 to i64), i64 64000), i64 0) to i8), i8* %30, align 1
  store i8 trunc (i64 lshr (i64 add (i64 ptrtoint (%G__0x6220d0_type* @G__0x6220d0 to i64), i64 64000), i64 63) to i8), i8* %33, align 1
  store i8 zext (i1 icmp eq (i64 add (i64 xor (i64 lshr (i64 add (i64 ptrtoint (%G__0x6220d0_type* @G__0x6220d0 to i64), i64 64000), i64 63), i64 lshr (i64 ptrtoint (%G__0x6220d0_type* @G__0x6220d0 to i64), i64 63)), i64 lshr (i64 add (i64 ptrtoint (%G__0x6220d0_type* @G__0x6220d0 to i64), i64 64000), i64 63)), i64 2) to i8), i8* %39, align 1
  %4648 = load i64, i64* bitcast (%G_0x622088_type* @G_0x622088 to i64*), align 8
  %4649 = getelementptr inbounds %union.VectorReg, %union.VectorReg* %.pre-phi23, i64 0, i32 0, i32 0, i32 0, i64 0
  store i64 %4648, i64* %4649, align 1
  store double 0.000000e+00, double* %2444, align 1
  store i64 ptrtoint (%G__0x6220d0_type* @G__0x6220d0 to i64), i64* %RDI.i3614.pre-phi, align 8
  store i64 add (i64 ptrtoint (%G__0x6220d0_type* @G__0x6220d0 to i64), i64 64000), i64* %RSI.i3629, align 8
  %4650 = add i64 %4643, 45731
  %4651 = add i64 %4643, 40
  %4652 = load i64, i64* %6, align 8
  %4653 = add i64 %4652, -8
  %4654 = inttoptr i64 %4653 to i64*
  store i64 %4651, i64* %4654, align 8
  store i64 %4653, i64* %6, align 8
  store i64 %4650, i64* %3, align 8
  %call2_4028e0 = tail call %struct.Memory* @sub_40db60._Z4fillIPddEvT_S1_T0_(%struct.State* %0, i64 %4650, %struct.Memory* %call2_4028b8)
  %4655 = load i64, i64* %PC.i, align 8
  store i64 ptrtoint (%G__0x6220d0_type* @G__0x6220d0 to i64), i64* %RDI.i3614.pre-phi, align 8
  store i64 8000, i64* %RSI.i3629, align 8
  store i64 ptrtoint (%G__0x419b91_type* @G__0x419b91 to i64), i64* %RDX.i3618, align 8
  %4656 = load i32, i32* bitcast (%G_0x622080_type* @G_0x622080 to i32*), align 8
  %4657 = zext i32 %4656 to i64
  store i64 %4657, i64* %.pre18, align 8
  store i32 %4656, i32* bitcast (%G_0x6220c0_type* @G_0x6220c0 to i32*), align 8
  %4658 = add i64 %4655, 45755
  %4659 = add i64 %4655, 44
  %4660 = load i64, i64* %6, align 8
  %4661 = add i64 %4660, -8
  %4662 = inttoptr i64 %4661 to i64*
  store i64 %4659, i64* %4662, align 8
  store i64 %4661, i64* %6, align 8
  store i64 %4658, i64* %3, align 8
  %call2_40290c = tail call %struct.Memory* @sub_40dba0._Z13test_constantId10custom_twoIdEEvPT_iPKc(%struct.State* %0, i64 %4658, %struct.Memory* %call2_4028e0)
  %4663 = load i64, i64* %PC.i, align 8
  store i64 ptrtoint (%G__0x6220d0_type* @G__0x6220d0 to i64), i64* %RDI.i3614.pre-phi, align 8
  store i64 8000, i64* %RSI.i3629, align 8
  store i64 ptrtoint (%G__0x419ba1_type* @G__0x419ba1 to i64), i64* %RDX.i3618, align 8
  %4664 = add i64 %4663, 45871
  %4665 = add i64 %4663, 30
  %4666 = load i64, i64* %6, align 8
  %4667 = add i64 %4666, -8
  %4668 = inttoptr i64 %4667 to i64*
  store i64 %4665, i64* %4668, align 8
  store i64 %4667, i64* %6, align 8
  store i64 %4664, i64* %3, align 8
  %call2_40292a = tail call %struct.Memory* @sub_40dc40._Z13test_constantId20custom_add_constantsIdEEvPT_iPKc(%struct.State* %0, i64 %4664, %struct.Memory* %call2_40290c)
  %4669 = load i64, i64* %PC.i, align 8
  store i64 ptrtoint (%G__0x6220d0_type* @G__0x6220d0 to i64), i64* %RDI.i3614.pre-phi, align 8
  store i64 8000, i64* %RSI.i3629, align 8
  store i64 ptrtoint (%G__0x419bb6_type* @G__0x419bb6 to i64), i64* %RDX.i3618, align 8
  %4670 = add i64 %4669, 46001
  %4671 = add i64 %4669, 30
  %4672 = load i64, i64* %6, align 8
  %4673 = add i64 %4672, -8
  %4674 = inttoptr i64 %4673 to i64*
  store i64 %4671, i64* %4674, align 8
  store i64 %4673, i64* %6, align 8
  store i64 %4670, i64* %3, align 8
  %call2_402948 = tail call %struct.Memory* @sub_40dce0._Z13test_constantId20custom_sub_constantsIdEEvPT_iPKc(%struct.State* %0, i64 %4670, %struct.Memory* %call2_40292a)
  %4675 = load i64, i64* %PC.i, align 8
  store i64 ptrtoint (%G__0x6220d0_type* @G__0x6220d0 to i64), i64* %RDI.i3614.pre-phi, align 8
  store i64 8000, i64* %RSI.i3629, align 8
  store i64 ptrtoint (%G__0x419bd0_type* @G__0x419bd0 to i64), i64* %RDX.i3618, align 8
  %4676 = add i64 %4675, 46131
  %4677 = add i64 %4675, 30
  %4678 = load i64, i64* %6, align 8
  %4679 = add i64 %4678, -8
  %4680 = inttoptr i64 %4679 to i64*
  store i64 %4677, i64* %4680, align 8
  store i64 %4679, i64* %6, align 8
  store i64 %4676, i64* %3, align 8
  %call2_402966 = tail call %struct.Memory* @sub_40dd80._Z13test_constantId25custom_multiply_constantsIdEEvPT_iPKc(%struct.State* %0, i64 %4676, %struct.Memory* %call2_402948)
  %4681 = load i64, i64* %PC.i, align 8
  store i64 ptrtoint (%G__0x6220d0_type* @G__0x6220d0 to i64), i64* %RDI.i3614.pre-phi, align 8
  store i64 8000, i64* %RSI.i3629, align 8
  store i64 ptrtoint (%G__0x419bea_type* @G__0x419bea to i64), i64* %RDX.i3618, align 8
  %4682 = add i64 %4681, 46261
  %4683 = add i64 %4681, 30
  %4684 = load i64, i64* %6, align 8
  %4685 = add i64 %4684, -8
  %4686 = inttoptr i64 %4685 to i64*
  store i64 %4683, i64* %4686, align 8
  store i64 %4685, i64* %6, align 8
  store i64 %4682, i64* %3, align 8
  %call2_402984 = tail call %struct.Memory* @sub_40de20._Z13test_constantId23custom_divide_constantsIdEEvPT_iPKc(%struct.State* %0, i64 %4682, %struct.Memory* %call2_402966)
  %4687 = load i64, i64* %PC.i, align 8
  store i64 ptrtoint (%G__0x6220d0_type* @G__0x6220d0 to i64), i64* %RDI.i3614.pre-phi, align 8
  store i64 8000, i64* %RSI.i3629, align 8
  store i64 ptrtoint (%G__0x419c02_type* @G__0x419c02 to i64), i64* %RDX.i3618, align 8
  %4688 = load i32, i32* bitcast (%G_0x622080_type* @G_0x622080 to i32*), align 8
  %4689 = zext i32 %4688 to i64
  store i64 %4689, i64* %194, align 8
  %4690 = load i64, i64* %RBP.i, align 8
  %4691 = add i64 %4690, -132
  %4692 = add i64 %4687, 44
  store i64 %4692, i64* %PC.i, align 8
  %4693 = inttoptr i64 %4691 to i32*
  store i32 10, i32* %4693, align 4
  %4694 = load i32, i32* %R9D.i3588, align 4
  %4695 = zext i32 %4694 to i64
  %4696 = load i64, i64* %PC.i, align 8
  store i64 %4695, i64* %.pre18, align 8
  %4697 = load i64, i64* %RBP.i, align 8
  %4698 = add i64 %4697, -144
  %4699 = load i64, i64* %RDX.i3618, align 8
  %4700 = add i64 %4696, 10
  store i64 %4700, i64* %PC.i, align 8
  %4701 = inttoptr i64 %4698 to i64*
  store i64 %4699, i64* %4701, align 8
  %4702 = load i64, i64* %PC.i, align 8
  %4703 = load i32, i32* %4342, align 8
  %4704 = sext i32 %4703 to i64
  %4705 = lshr i64 %4704, 32
  store i64 %4705, i64* %4340, align 8
  %4706 = load i64, i64* %RBP.i, align 8
  %4707 = add i64 %4706, -132
  %4708 = add i64 %4702, 8
  store i64 %4708, i64* %PC.i, align 8
  %4709 = inttoptr i64 %4707 to i32*
  %4710 = load i32, i32* %4709, align 4
  %4711 = zext i32 %4710 to i64
  store i64 %4711, i64* %194, align 8
  %4712 = add i64 %4702, 11
  store i64 %4712, i64* %PC.i, align 8
  %4713 = zext i32 %4703 to i64
  %4714 = sext i32 %4710 to i64
  %4715 = shl nuw i64 %4705, 32
  %4716 = or i64 %4715, %4713
  %4717 = sdiv i64 %4716, %4714
  %4718 = shl i64 %4717, 32
  %4719 = ashr exact i64 %4718, 32
  %4720 = icmp eq i64 %4717, %4719
  br i1 %4720, label %4723, label %4721

; <label>:4721:                                   ; preds = %routine_idivl__r9d.exit243
  %4722 = tail call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %4712, %struct.Memory* %call2_402984)
  %.pre12 = load i32, i32* %EAX.i3393, align 4
  %.pre13 = load i64, i64* %PC.i, align 8
  %.pre14 = load i64, i64* %RBP.i, align 8
  br label %routine_idivl__r9d.exit

; <label>:4723:                                   ; preds = %routine_idivl__r9d.exit243
  %4724 = srem i64 %4716, %4714
  %4725 = getelementptr inbounds %union.anon, %union.anon* %4341, i64 0, i32 0
  %4726 = and i64 %4717, 4294967295
  store i64 %4726, i64* %4725, align 8
  %4727 = getelementptr inbounds %union.anon, %union.anon* %4349, i64 0, i32 0
  %4728 = and i64 %4724, 4294967295
  store i64 %4728, i64* %4727, align 8
  store i8 0, i8* %14, align 1
  store i8 0, i8* %21, align 1
  store i8 0, i8* %27, align 1
  store i8 0, i8* %30, align 1
  store i8 0, i8* %33, align 1
  store i8 0, i8* %39, align 1
  %4729 = trunc i64 %4717 to i32
  br label %routine_idivl__r9d.exit

routine_idivl__r9d.exit:                          ; preds = %4723, %4721
  %4730 = phi i64 [ %.pre14, %4721 ], [ %4706, %4723 ]
  %4731 = phi i64 [ %.pre13, %4721 ], [ %4712, %4723 ]
  %4732 = phi i32 [ %.pre12, %4721 ], [ %4729, %4723 ]
  %4733 = phi %struct.Memory* [ %4722, %4721 ], [ %call2_402984, %4723 ]
  store i32 %4732, i32* bitcast (%G_0x6220c0_type* @G_0x6220c0 to i32*), align 8
  %4734 = add i64 %4730, -144
  %4735 = add i64 %4731, 14
  store i64 %4735, i64* %PC.i, align 8
  %4736 = inttoptr i64 %4734 to i64*
  %4737 = load i64, i64* %4736, align 8
  store i64 %4737, i64* %RCX.i3623, align 8
  store i64 %4737, i64* %RDX.i3618, align 8
  %4738 = add i64 %4731, 46326
  %4739 = add i64 %4731, 22
  %4740 = load i64, i64* %6, align 8
  %4741 = add i64 %4740, -8
  %4742 = inttoptr i64 %4741 to i64*
  store i64 %4739, i64* %4742, align 8
  store i64 %4741, i64* %6, align 8
  store i64 %4738, i64* %3, align 8
  %call2_4029db = tail call %struct.Memory* @sub_40dec0._Z13test_constantId19custom_constant_addIdEEvPT_iPKc(%struct.State* %0, i64 %4738, %struct.Memory* %4733)
  %4743 = load i64, i64* %PC.i, align 8
  store i64 ptrtoint (%G__0x6220d0_type* @G__0x6220d0 to i64), i64* %RDI.i3614.pre-phi, align 8
  store i64 8000, i64* %RSI.i3629, align 8
  store i64 ptrtoint (%G__0x419c16_type* @G__0x419c16 to i64), i64* %RDX.i3618, align 8
  %4744 = add i64 %4743, 46464
  %4745 = add i64 %4743, 30
  %4746 = load i64, i64* %6, align 8
  %4747 = add i64 %4746, -8
  %4748 = inttoptr i64 %4747 to i64*
  store i64 %4745, i64* %4748, align 8
  store i64 %4747, i64* %6, align 8
  store i64 %4744, i64* %3, align 8
  %call2_4029f9 = tail call %struct.Memory* @sub_40df60._Z13test_constantId28custom_multiple_constant_addIdEEvPT_iPKc(%struct.State* %0, i64 %4744, %struct.Memory* %call2_4029db)
  %4749 = load i64, i64* %PC.i, align 8
  store i64 ptrtoint (%G__0x6220d0_type* @G__0x6220d0 to i64), i64* %RDI.i3614.pre-phi, align 8
  store i64 8000, i64* %RSI.i3629, align 8
  store i64 ptrtoint (%G__0x419c34_type* @G__0x419c34 to i64), i64* %RDX.i3618, align 8
  %4750 = add i64 %4749, 46594
  %4751 = add i64 %4749, 30
  %4752 = load i64, i64* %6, align 8
  %4753 = add i64 %4752, -8
  %4754 = inttoptr i64 %4753 to i64*
  store i64 %4751, i64* %4754, align 8
  store i64 %4753, i64* %6, align 8
  store i64 %4750, i64* %3, align 8
  %call2_402a17 = tail call %struct.Memory* @sub_40e000._Z13test_constantId19custom_constant_subIdEEvPT_iPKc(%struct.State* %0, i64 %4750, %struct.Memory* %call2_4029f9)
  %4755 = load i64, i64* %PC.i, align 8
  store i64 ptrtoint (%G__0x6220d0_type* @G__0x6220d0 to i64), i64* %RDI.i3614.pre-phi, align 8
  store i64 8000, i64* %RSI.i3629, align 8
  store i64 ptrtoint (%G__0x419c4d_type* @G__0x419c4d to i64), i64* %RDX.i3618, align 8
  %4756 = add i64 %4755, 46724
  %4757 = add i64 %4755, 30
  %4758 = load i64, i64* %6, align 8
  %4759 = add i64 %4758, -8
  %4760 = inttoptr i64 %4759 to i64*
  store i64 %4757, i64* %4760, align 8
  store i64 %4759, i64* %6, align 8
  store i64 %4756, i64* %3, align 8
  %call2_402a35 = tail call %struct.Memory* @sub_40e0a0._Z13test_constantId28custom_multiple_constant_subIdEEvPT_iPKc(%struct.State* %0, i64 %4756, %struct.Memory* %call2_402a17)
  %4761 = load i64, i64* %PC.i, align 8
  store i64 ptrtoint (%G__0x6220d0_type* @G__0x6220d0 to i64), i64* %RDI.i3614.pre-phi, align 8
  store i64 8000, i64* %RSI.i3629, align 8
  store i64 ptrtoint (%G__0x419c70_type* @G__0x419c70 to i64), i64* %RDX.i3618, align 8
  %4762 = add i64 %4761, 46854
  %4763 = add i64 %4761, 30
  %4764 = load i64, i64* %6, align 8
  %4765 = add i64 %4764, -8
  %4766 = inttoptr i64 %4765 to i64*
  store i64 %4763, i64* %4766, align 8
  store i64 %4765, i64* %6, align 8
  store i64 %4762, i64* %3, align 8
  %call2_402a53 = tail call %struct.Memory* @sub_40e140._Z13test_constantId24custom_constant_multiplyIdEEvPT_iPKc(%struct.State* %0, i64 %4762, %struct.Memory* %call2_402a35)
  %4767 = load i64, i64* %PC.i, align 8
  store i64 ptrtoint (%G__0x6220d0_type* @G__0x6220d0 to i64), i64* %RDI.i3614.pre-phi, align 8
  store i64 8000, i64* %RSI.i3629, align 8
  store i64 ptrtoint (%G__0x419c89_type* @G__0x419c89 to i64), i64* %RDX.i3618, align 8
  %4768 = add i64 %4767, 46984
  %4769 = add i64 %4767, 30
  %4770 = load i64, i64* %6, align 8
  %4771 = add i64 %4770, -8
  %4772 = inttoptr i64 %4771 to i64*
  store i64 %4769, i64* %4772, align 8
  store i64 %4771, i64* %6, align 8
  store i64 %4768, i64* %3, align 8
  %call2_402a71 = tail call %struct.Memory* @sub_40e1e0._Z13test_constantId33custom_multiple_constant_multiplyIdEEvPT_iPKc(%struct.State* %0, i64 %4768, %struct.Memory* %call2_402a53)
  %4773 = load i64, i64* %PC.i, align 8
  store i64 ptrtoint (%G__0x6220d0_type* @G__0x6220d0 to i64), i64* %RDI.i3614.pre-phi, align 8
  store i64 8000, i64* %RSI.i3629, align 8
  store i64 ptrtoint (%G__0x419cad_type* @G__0x419cad to i64), i64* %RDX.i3618, align 8
  %4774 = add i64 %4773, 47114
  %4775 = add i64 %4773, 30
  %4776 = load i64, i64* %6, align 8
  %4777 = add i64 %4776, -8
  %4778 = inttoptr i64 %4777 to i64*
  store i64 %4775, i64* %4778, align 8
  store i64 %4777, i64* %6, align 8
  store i64 %4774, i64* %3, align 8
  %call2_402a8f = tail call %struct.Memory* @sub_40e280._Z13test_constantId34custom_multiple_constant_multiply2IdEEvPT_iPKc(%struct.State* %0, i64 %4774, %struct.Memory* %call2_402a71)
  %4779 = load i64, i64* %PC.i, align 8
  store i64 ptrtoint (%G__0x6220d0_type* @G__0x6220d0 to i64), i64* %RDI.i3614.pre-phi, align 8
  store i64 8000, i64* %RSI.i3629, align 8
  store i64 ptrtoint (%G__0x419cd0_type* @G__0x419cd0 to i64), i64* %RDX.i3618, align 8
  %4780 = add i64 %4779, 47244
  %4781 = add i64 %4779, 30
  %4782 = load i64, i64* %6, align 8
  %4783 = add i64 %4782, -8
  %4784 = inttoptr i64 %4783 to i64*
  store i64 %4781, i64* %4784, align 8
  store i64 %4783, i64* %6, align 8
  store i64 %4780, i64* %3, align 8
  %call2_402aad = tail call %struct.Memory* @sub_40e320._Z13test_constantId22custom_constant_divideIdEEvPT_iPKc(%struct.State* %0, i64 %4780, %struct.Memory* %call2_402a8f)
  %4785 = load i64, i64* %PC.i, align 8
  store i64 ptrtoint (%G__0x6220d0_type* @G__0x6220d0 to i64), i64* %RDI.i3614.pre-phi, align 8
  store i64 8000, i64* %RSI.i3629, align 8
  store i64 ptrtoint (%G__0x419ce7_type* @G__0x419ce7 to i64), i64* %RDX.i3618, align 8
  %4786 = add i64 %4785, 47374
  %4787 = add i64 %4785, 30
  %4788 = load i64, i64* %6, align 8
  %4789 = add i64 %4788, -8
  %4790 = inttoptr i64 %4789 to i64*
  store i64 %4787, i64* %4790, align 8
  store i64 %4789, i64* %6, align 8
  store i64 %4786, i64* %3, align 8
  %call2_402acb = tail call %struct.Memory* @sub_40e3c0._Z13test_constantId31custom_multiple_constant_divideIdEEvPT_iPKc(%struct.State* %0, i64 %4786, %struct.Memory* %call2_402aad)
  %4791 = load i64, i64* %PC.i, align 8
  store i64 ptrtoint (%G__0x6220d0_type* @G__0x6220d0 to i64), i64* %RDI.i3614.pre-phi, align 8
  store i64 8000, i64* %RSI.i3629, align 8
  store i64 ptrtoint (%G__0x419d08_type* @G__0x419d08 to i64), i64* %RDX.i3618, align 8
  %4792 = add i64 %4791, 47504
  %4793 = add i64 %4791, 30
  %4794 = load i64, i64* %6, align 8
  %4795 = add i64 %4794, -8
  %4796 = inttoptr i64 %4795 to i64*
  store i64 %4793, i64* %4796, align 8
  store i64 %4795, i64* %6, align 8
  store i64 %4792, i64* %3, align 8
  %call2_402ae9 = tail call %struct.Memory* @sub_40e460._Z13test_constantId32custom_multiple_constant_divide2IdEEvPT_iPKc(%struct.State* %0, i64 %4792, %struct.Memory* %call2_402acb)
  %4797 = load i64, i64* %PC.i, align 8
  store i64 ptrtoint (%G__0x6220d0_type* @G__0x6220d0 to i64), i64* %RDI.i3614.pre-phi, align 8
  store i64 8000, i64* %RSI.i3629, align 8
  store i64 ptrtoint (%G__0x419d29_type* @G__0x419d29 to i64), i64* %RDX.i3618, align 8
  %4798 = add i64 %4797, 47634
  %4799 = add i64 %4797, 30
  %4800 = load i64, i64* %6, align 8
  %4801 = add i64 %4800, -8
  %4802 = inttoptr i64 %4801 to i64*
  store i64 %4799, i64* %4802, align 8
  store i64 %4801, i64* %6, align 8
  store i64 %4798, i64* %3, align 8
  %call2_402b07 = tail call %struct.Memory* @sub_40e500._Z13test_constantId30custom_multiple_constant_mixedIdEEvPT_iPKc(%struct.State* %0, i64 %4798, %struct.Memory* %call2_402ae9)
  %4803 = load i64, i64* %PC.i, align 8
  store i64 0, i64* %.pre18, align 8
  %4804 = load i64, i64* %RSP.i83, align 8
  %4805 = add i64 %4804, 144
  store i64 %4805, i64* %RSP.i83, align 8
  %4806 = icmp ugt i64 %4804, -145
  %4807 = zext i1 %4806 to i8
  store i8 %4807, i8* %14, align 1
  %4808 = trunc i64 %4805 to i32
  %4809 = and i32 %4808, 255
  %4810 = tail call i32 @llvm.ctpop.i32(i32 %4809)
  %4811 = trunc i32 %4810 to i8
  %4812 = and i8 %4811, 1
  %4813 = xor i8 %4812, 1
  store i8 %4813, i8* %21, align 1
  %4814 = xor i64 %4804, 16
  %4815 = xor i64 %4814, %4805
  %4816 = lshr i64 %4815, 4
  %4817 = trunc i64 %4816 to i8
  %4818 = and i8 %4817, 1
  store i8 %4818, i8* %27, align 1
  %4819 = icmp eq i64 %4805, 0
  %4820 = zext i1 %4819 to i8
  store i8 %4820, i8* %30, align 1
  %4821 = lshr i64 %4805, 63
  %4822 = trunc i64 %4821 to i8
  store i8 %4822, i8* %33, align 1
  %4823 = lshr i64 %4804, 63
  %4824 = xor i64 %4821, %4823
  %4825 = add nuw nsw i64 %4824, %4821
  %4826 = icmp eq i64 %4825, 2
  %4827 = zext i1 %4826 to i8
  store i8 %4827, i8* %39, align 1
  %4828 = add i64 %4803, 10
  store i64 %4828, i64* %PC.i, align 8
  %4829 = add i64 %4804, 152
  %4830 = inttoptr i64 %4805 to i64*
  %4831 = load i64, i64* %4830, align 8
  store i64 %4831, i64* %RBP.i, align 8
  store i64 %4829, i64* %6, align 8
  %4832 = add i64 %4803, 11
  store i64 %4832, i64* %PC.i, align 8
  %4833 = inttoptr i64 %4829 to i64*
  %4834 = load i64, i64* %4833, align 8
  store i64 %4834, i64* %3, align 8
  %4835 = add i64 %4804, 160
  store i64 %4835, i64* %6, align 8
  ret %struct.Memory* %call2_402b07
}

define %struct.Memory* @routine_pushq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 1
  store i64 %5, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %3, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsp___rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RSP, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 3
  store i64 %5, i64* %PC, align 8
  store i64 %3, i64* %RBP, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subq__0x90___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3 = load i64, i64* %RSP, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 7
  store i64 %5, i64* %PC, align 8
  %6 = add i64 %3, -144
  store i64 %6, i64* %RSP, align 8
  %7 = icmp ult i64 %3, 144
  %8 = zext i1 %7 to i8
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8, i8* %9, align 1
  %10 = trunc i64 %6 to i32
  %11 = and i32 %10, 255
  %12 = tail call i32 @llvm.ctpop.i32(i32 %11)
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = xor i64 %3, 16
  %18 = xor i64 %17, %6
  %19 = lshr i64 %18, 4
  %20 = trunc i64 %19 to i8
  %21 = and i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %21, i8* %22, align 1
  %23 = icmp eq i64 %6, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i64 %6, 63
  %27 = trunc i64 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i64 %3, 63
  %30 = xor i64 %26, %29
  %31 = add nuw nsw i64 %30, %29
  %32 = icmp eq i64 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -4
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i32*
  store i32 0, i32* %7, align 4
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0
  %EDI = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -8
  %6 = load i32, i32* %EDI, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 3
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsi__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -16
  %5 = load i64, i64* %RSI, align 8
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 4
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %4 to i64*
  store i64 %5, i64* %8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1__MINUS0x8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, -1
  %10 = icmp eq i32 %8, 0
  %11 = zext i1 %10 to i8
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11, i8* %12, align 1
  %13 = and i32 %9, 255
  %14 = tail call i32 @llvm.ctpop.i32(i32 %13)
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i32 %8, %9
  %20 = lshr i32 %19, 4
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i32 %9, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %9, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %8, 31
  %31 = xor i32 %27, %30
  %32 = add nuw nsw i32 %31, %30
  %33 = icmp eq i32 %32, 2
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %34, i8* %35, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_400ed7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp ne i8 %5, 0
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8 = load i8, i8* %7, align 1
  %9 = icmp ne i8 %8, 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %11 = load i8, i8* %10, align 1
  %12 = icmp ne i8 %11, 0
  %13 = xor i1 %9, %12
  %14 = or i1 %6, %13
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %.v = select i1 %14, i64 %rel_off1, i64 %rel_off2
  %17 = add i64 %3, %.v
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x10__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -16
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x8__rax____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %RAX, align 8
  %4 = add i64 %3, 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.atoi_plt(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x622080(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %4 = load i32, i32* %EAX, align 4
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i32 %4, i32* bitcast (%G_0x622080_type* @G_0x622080 to i32*), align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x2__MINUS0x8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, -2
  %10 = icmp ult i32 %8, 2
  %11 = zext i1 %10 to i8
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11, i8* %12, align 1
  %13 = and i32 %9, 255
  %14 = tail call i32 @llvm.ctpop.i32(i32 %13)
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i32 %8, %9
  %20 = lshr i32 %19, 4
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i32 %9, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %9, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %8, 31
  %31 = xor i32 %27, %30
  %32 = add nuw nsw i32 %31, %30
  %33 = icmp eq i32 %32, 2
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %34, i8* %35, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_400ef7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp ne i8 %5, 0
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8 = load i8, i8* %7, align 1
  %9 = icmp ne i8 %8, 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %11 = load i8, i8* %10, align 1
  %12 = icmp ne i8 %11, 0
  %13 = xor i1 %9, %12
  %14 = or i1 %6, %13
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %.v = select i1 %14, i64 %rel_off1, i64 %rel_off2
  %17 = add i64 %3, %.v
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x10__rax____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %RAX, align 8
  %4 = add i64 %3, 16
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.atof_plt(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__0x622088(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 9
  store i64 %4, i64* %PC, align 8
  %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 0
  %6 = load i64, i64* %5, align 1
  store i64 %6, i64* bitcast (%G_0x622088_type* @G_0x622088 to i64*), align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x6397d0___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %3 = load i64, i64* %RAX, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 3
  store i64 %5, i64* %PC, align 8
  store i64 %3, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0xfa00___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %3 = load i64, i64* %RCX, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 7
  store i64 %5, i64* %PC, align 8
  %6 = add i64 %3, 64000
  store i64 %6, i64* %RCX, align 8
  %7 = icmp ugt i64 %3, -64001
  %8 = zext i1 %7 to i8
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8, i8* %9, align 1
  %10 = trunc i64 %6 to i32
  %11 = and i32 %10, 255
  %12 = tail call i32 @llvm.ctpop.i32(i32 %11)
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = xor i64 %3, %6
  %18 = lshr i64 %17, 4
  %19 = trunc i64 %18 to i8
  %20 = and i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20, i8* %21, align 1
  %22 = icmp eq i64 %6, 0
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23, i8* %24, align 1
  %25 = lshr i64 %6, 63
  %26 = trunc i64 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26, i8* %27, align 1
  %28 = lshr i64 %3, 63
  %29 = xor i64 %25, %28
  %30 = add nuw nsw i64 %29, %25
  %31 = icmp eq i64 %30, 2
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %32, i8* %33, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvttsd2si_0x221175__rip____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 8
  store i64 %4, i64* %PC, align 8
  %5 = load double, double* bitcast (%G_0x221175__rip__type* @G_0x221175__rip_ to double*), align 8
  %6 = tail call double @llvm.trunc.f64(double %5)
  %7 = tail call double @llvm.fabs.f64(double %6)
  %8 = fcmp ogt double %7, 0x41DFFFFFFFC00000
  %9 = fptosi double %6 to i32
  %10 = zext i32 %9 to i64
  %11 = select i1 %8, i64 2147483648, i64 %10
  store i64 %11, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x672210___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x672210_type* @G__0x672210 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0
  %ESI = bitcast %union.anon* %3 to i32*
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %4 = load i32, i32* %ESI, align 4
  %5 = zext i32 %4 to i64
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 2
  store i64 %7, i64* %PC, align 8
  store i64 %5, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__dl___r8b(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %DL = bitcast %union.anon* %3 to i8*
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 17, i32 0
  %R8B = bitcast %union.anon* %4 to i8*
  %5 = load i8, i8* %DL, align 1
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 3
  store i64 %7, i64* %PC, align 8
  store i8 %5, i8* %R8B, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsbl__r8b___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 17, i32 0
  %R8B = bitcast %union.anon* %3 to i8*
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %4 = load i8, i8* %R8B, align 1
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = sext i8 %4 to i64
  %8 = and i64 %7, 4294967295
  store i64 %8, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x674150___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x674150_type* @G__0x674150 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdi__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -24
  %5 = load i64, i64* %RDI, align 8
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 4
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %4 to i64*
  store i64 %5, i64* %8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x20__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -32
  %5 = load i64, i64* %RAX, align 8
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 4
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %4 to i64*
  store i64 %5, i64* %8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx__MINUS0x28__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -40
  %5 = load i64, i64* %RCX, align 8
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 4
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %4 to i64*
  store i64 %5, i64* %8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z4fillIPaaEvT_S1_T0_(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x221143__rip____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 6
  store i64 %4, i64* %PC, align 8
  %5 = load i32, i32* bitcast (%G_0x221143__rip__type* @G_0x221143__rip_ to i32*), align 8
  %6 = zext i32 %5 to i64
  store i64 %6, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__0x22117d__rip_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %EDX = bitcast %union.anon* %3 to i32*
  %4 = load i32, i32* %EDX, align 4
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 6
  store i64 %6, i64* %PC, align 8
  store i32 %4, i32* bitcast (%G_0x22117d__rip__type* @G_0x22117d__rip_ to i32*), align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418be3___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418be3_type* @G__0x418be3 to i64), i64 4294967295), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1f40___r9d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0, i32 0
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 6
  store i64 %5, i64* %PC, align 8
  store i64 8000, i64* %3, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x18__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -24
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r9d___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0
  %R9D = bitcast %union.anon* %3 to i32*
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %4 = load i32, i32* %R9D, align 4
  %5 = zext i32 %4 to i64
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 3
  store i64 %7, i64* %PC, align 8
  store i64 %5, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r9d__MINUS0x2c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0
  %R9D = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -44
  %6 = load i32, i32* %R9D, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 4
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIa10custom_twoIaEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418bf4___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418bf4_type* @G__0x418bf4 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0
  %ESI = bitcast %union.anon* %3 to i32*
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %4 = load i32, i32* %ESI, align 4
  %5 = zext i32 %4 to i64
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 2
  store i64 %7, i64* %PC, align 8
  store i64 %5, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x2c__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -44
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 3
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIa20custom_add_constantsIaEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418c0a___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418c0a_type* @G__0x418c0a to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIa20custom_sub_constantsIaEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418c25___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418c25_type* @G__0x418c25 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIa25custom_multiply_constantsIaEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418c40___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418c40_type* @G__0x418c40 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIa23custom_divide_constantsIaEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418c59___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418c59_type* @G__0x418c59 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIa20custom_mod_constantsIaEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418c6f___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418c6f_type* @G__0x418c6f to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIa22custom_equal_constantsIaEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418c87___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418c87_type* @G__0x418c87 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIa25custom_notequal_constantsIaEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418ca2___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418ca2_type* @G__0x418ca2 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIa28custom_greaterthan_constantsIaEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418cc1___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418cc1_type* @G__0x418cc1 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIa25custom_lessthan_constantsIaEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418cdd___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418cdd_type* @G__0x418cdd to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIa33custom_greaterthanequal_constantsIaEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418d02___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418d02_type* @G__0x418d02 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIa30custom_lessthanequal_constantsIaEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418d24___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418d24_type* @G__0x418d24 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIa20custom_and_constantsIaEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418d3a___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418d3a_type* @G__0x418d3a to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIa19custom_or_constantsIaEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418d4f___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418d4f_type* @G__0x418d4f to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIa20custom_xor_constantsIaEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0x221011__rip____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 7
  store i64 %4, i64* %PC, align 8
  %5 = load i32, i32* bitcast (%G_0x221011__rip__type* @G_0x221011__rip_ to i32*), align 8
  %6 = sext i32 %5 to i64
  store i64 %6, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x66666667___rax___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %RAX, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 7
  store i64 %5, i64* %PC, align 8
  %6 = sext i64 %3 to i128
  %7 = and i128 %6, -18446744073709551616
  %8 = zext i64 %3 to i128
  %9 = or i128 %7, %8
  %10 = mul nsw i128 %9, 1717986919
  %11 = trunc i128 %10 to i64
  store i64 %11, i64* %RAX, align 8
  %12 = sext i64 %11 to i128
  %13 = icmp ne i128 %12, %10
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14, i8* %15, align 1
  %16 = trunc i128 %10 to i32
  %17 = and i32 %16, 255
  %18 = tail call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %23, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %24, align 1
  %25 = lshr i64 %11, 63
  %26 = trunc i64 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14, i8* %28, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shrq__0x3f___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %3 = load i64, i64* %RCX, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 4
  store i64 %5, i64* %PC, align 8
  %6 = lshr i64 %3, 62
  %7 = trunc i64 %6 to i8
  %8 = and i8 %7, 1
  %9 = lshr i64 %3, 63
  store i64 %9, i64* %RCX, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8, i8* %10, align 1
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %12 = trunc i64 %9 to i32
  %13 = tail call i32 @llvm.ctpop.i32(i32 %12)
  %14 = trunc i32 %13 to i8
  %15 = xor i8 %14, 1
  store i8 %15, i8* %11, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %18 = trunc i64 %9 to i8
  %19 = xor i8 %18, 1
  store i8 %19, i8* %17, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %20, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %21, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0
  %ECX = bitcast %union.anon* %3 to i32*
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %4 = load i32, i32* %ECX, align 4
  %5 = zext i32 %4 to i64
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 2
  store i64 %7, i64* %PC, align 8
  store i64 %5, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sarq__0x22___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %RAX, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 4
  store i64 %5, i64* %PC, align 8
  %6 = lshr i64 %3, 33
  %7 = trunc i64 %6 to i8
  %8 = and i8 %7, 1
  %9 = ashr i64 %3, 34
  store i64 %9, i64* %RAX, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8, i8* %10, align 1
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %12 = trunc i64 %9 to i32
  %13 = and i32 %12, 255
  %14 = tail call i32 @llvm.ctpop.i32(i32 %13)
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  store i8 %17, i8* %11, align 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %18, align 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %20 = icmp eq i64 %9, 0
  %21 = zext i1 %20 to i8
  store i8 %21, i8* %19, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %23 = lshr i64 %9, 63
  %24 = trunc i64 %23 to i8
  store i8 %24, i8* %22, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax___r9d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0, i32 0
  %5 = load i32, i32* %EAX, align 4
  %6 = zext i32 %5 to i64
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 3
  store i64 %8, i64* %PC, align 8
  store i64 %6, i64* %4, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__esi___r9d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0
  %ESI = bitcast %union.anon* %3 to i32*
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0
  %R9D = bitcast %union.anon* %4 to i32*
  %5 = getelementptr inbounds %union.anon, %union.anon* %4, i64 0, i32 0
  %6 = load i32, i32* %R9D, align 4
  %7 = load i32, i32* %ESI, align 4
  %8 = load i64, i64* %PC, align 8
  %9 = add i64 %8, 3
  store i64 %9, i64* %PC, align 8
  %10 = add i32 %7, %6
  %11 = zext i32 %10 to i64
  store i64 %11, i64* %5, align 8
  %12 = icmp ult i32 %10, %6
  %13 = icmp ult i32 %10, %7
  %14 = or i1 %12, %13
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %16, align 1
  %17 = and i32 %10, 255
  %18 = tail call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i32 %7, %6
  %24 = xor i32 %23, %10
  %25 = lshr i32 %24, 4
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27, i8* %28, align 1
  %29 = icmp eq i32 %10, 0
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30, i8* %31, align 1
  %32 = lshr i32 %10, 31
  %33 = trunc i32 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33, i8* %34, align 1
  %35 = lshr i32 %6, 31
  %36 = lshr i32 %7, 31
  %37 = xor i32 %32, %35
  %38 = xor i32 %32, %36
  %39 = add nuw nsw i32 %37, %38
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r9d__0x221030__rip_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0
  %R9D = bitcast %union.anon* %3 to i32*
  %4 = load i32, i32* %R9D, align 4
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i32 %4, i32* bitcast (%G_0x221030__rip__type* @G_0x221030__rip_ to i32*), align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418d65___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418d65_type* @G__0x418d65 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIa19custom_constant_addIaEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418d7a___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418d7a_type* @G__0x418d7a to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIa28custom_multiple_constant_addIaEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418d99___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418d99_type* @G__0x418d99 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIa19custom_constant_subIaEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418db3___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418db3_type* @G__0x418db3 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIa28custom_multiple_constant_subIaEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418dd7___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418dd7_type* @G__0x418dd7 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIa24custom_constant_multiplyIaEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418df1___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418df1_type* @G__0x418df1 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIa33custom_multiple_constant_multiplyIaEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418e16___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418e16_type* @G__0x418e16 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIa34custom_multiple_constant_multiply2IaEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418e3a___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418e3a_type* @G__0x418e3a to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIa22custom_constant_divideIaEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418e52___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418e52_type* @G__0x418e52 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIa31custom_multiple_constant_divideIaEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418e74___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418e74_type* @G__0x418e74 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIa32custom_multiple_constant_divide2IaEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418e96___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418e96_type* @G__0x418e96 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIa30custom_multiple_constant_mixedIaEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418eb6___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418eb6_type* @G__0x418eb6 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIa19custom_constant_andIaEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418ecb___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418ecb_type* @G__0x418ecb to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIa28custom_multiple_constant_andIaEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418ee9___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418ee9_type* @G__0x418ee9 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIa18custom_constant_orIaEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418efd___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418efd_type* @G__0x418efd to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIa27custom_multiple_constant_orIaEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418f1a___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418f1a_type* @G__0x418f1a to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIa19custom_constant_xorIaEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418f2f___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418f2f_type* @G__0x418f2f to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIa28custom_multiple_constant_xorIaEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvttsd2si_0x220ead__rip____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 8
  store i64 %4, i64* %PC, align 8
  %5 = load double, double* bitcast (%G_0x220ead__rip__type* @G_0x220ead__rip_ to double*), align 8
  %6 = tail call double @llvm.trunc.f64(double %5)
  %7 = tail call double @llvm.fabs.f64(double %6)
  %8 = fcmp ogt double %7, 0x41DFFFFFFFC00000
  %9 = fptosi double %6 to i32
  %10 = zext i32 %9 to i64
  %11 = select i1 %8, i64 2147483648, i64 %10
  store i64 %11, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x6702d0___r9d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0, i32 0
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 6
  store i64 %5, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x6702d0_type* @G__0x6702d0 to i64), i64 4294967295), i64* %3, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r9d___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0
  %R9D = bitcast %union.anon* %3 to i32*
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %4 = load i32, i32* %R9D, align 4
  %5 = zext i32 %4 to i64
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 3
  store i64 %7, i64* %PC, align 8
  store i64 %5, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__sil___r8b(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0
  %SIL = bitcast %union.anon* %3 to i8*
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 17, i32 0
  %R8B = bitcast %union.anon* %4 to i8*
  %5 = load i8, i8* %SIL, align 1
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 3
  store i64 %7, i64* %PC, align 8
  store i8 %5, i8* %R8B, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl__r8b___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 17, i32 0
  %R8B = bitcast %union.anon* %3 to i8*
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %4 = load i8, i8* %R8B, align 1
  %5 = zext i8 %4 to i64
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 4
  store i64 %7, i64* %PC, align 8
  store i64 %5, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %RAX, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 3
  store i64 %5, i64* %PC, align 8
  store i64 %3, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x38__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -56
  %5 = load i64, i64* %RAX, align 8
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 4
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %4 to i64*
  store i64 %5, i64* %8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z4fillIPhhEvT_S1_T0_(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x220e7e__rip____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 6
  store i64 %4, i64* %PC, align 8
  %5 = load i32, i32* bitcast (%G_0x220e7e__rip__type* @G_0x220e7e__rip_ to i32*), align 8
  %6 = zext i32 %5 to i64
  store i64 %6, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__0x220eb8__rip_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %EDX = bitcast %union.anon* %3 to i32*
  %4 = load i32, i32* %EDX, align 4
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 6
  store i64 %6, i64* %PC, align 8
  store i32 %4, i32* bitcast (%G_0x220eb8__rip__type* @G_0x220eb8__rip_ to i32*), align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418be2___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418be2_type* @G__0x418be2 to i64), i64 4294967295), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x38__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -56
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIh10custom_twoIhEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418bf3___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418bf3_type* @G__0x418bf3 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIh20custom_add_constantsIhEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418c09___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418c09_type* @G__0x418c09 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIh20custom_sub_constantsIhEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418c24___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418c24_type* @G__0x418c24 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIh25custom_multiply_constantsIhEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418c3f___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418c3f_type* @G__0x418c3f to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIh23custom_divide_constantsIhEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418c58___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418c58_type* @G__0x418c58 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIh20custom_mod_constantsIhEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418c6e___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418c6e_type* @G__0x418c6e to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIh22custom_equal_constantsIhEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418c86___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418c86_type* @G__0x418c86 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIh25custom_notequal_constantsIhEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418ca1___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418ca1_type* @G__0x418ca1 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIh28custom_greaterthan_constantsIhEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418cc0___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418cc0_type* @G__0x418cc0 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIh25custom_lessthan_constantsIhEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418cdc___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418cdc_type* @G__0x418cdc to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIh33custom_greaterthanequal_constantsIhEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418d01___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418d01_type* @G__0x418d01 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIh30custom_lessthanequal_constantsIhEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418d23___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418d23_type* @G__0x418d23 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIh20custom_and_constantsIhEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418d39___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418d39_type* @G__0x418d39 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIh19custom_or_constantsIhEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418d4e___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418d4e_type* @G__0x418d4e to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIh20custom_xor_constantsIhEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0x220d56__rip____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 7
  store i64 %4, i64* %PC, align 8
  %5 = load i32, i32* bitcast (%G_0x220d56__rip__type* @G_0x220d56__rip_ to i32*), align 8
  %6 = sext i32 %5 to i64
  store i64 %6, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r9d__0x220d75__rip_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0
  %R9D = bitcast %union.anon* %3 to i32*
  %4 = load i32, i32* %R9D, align 4
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i32 %4, i32* bitcast (%G_0x220d75__rip__type* @G_0x220d75__rip_ to i32*), align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418d64___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418d64_type* @G__0x418d64 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIh19custom_constant_addIhEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418d79___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418d79_type* @G__0x418d79 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIh28custom_multiple_constant_addIhEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418d98___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418d98_type* @G__0x418d98 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIh19custom_constant_subIhEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418db2___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418db2_type* @G__0x418db2 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIh28custom_multiple_constant_subIhEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418dd6___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418dd6_type* @G__0x418dd6 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIh24custom_constant_multiplyIhEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418df0___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418df0_type* @G__0x418df0 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIh33custom_multiple_constant_multiplyIhEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418e15___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418e15_type* @G__0x418e15 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIh34custom_multiple_constant_multiply2IhEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418e39___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418e39_type* @G__0x418e39 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIh22custom_constant_divideIhEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418e51___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418e51_type* @G__0x418e51 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIh31custom_multiple_constant_divideIhEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418e73___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418e73_type* @G__0x418e73 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIh32custom_multiple_constant_divide2IhEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418e95___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418e95_type* @G__0x418e95 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIh30custom_multiple_constant_mixedIhEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418eb5___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418eb5_type* @G__0x418eb5 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIh19custom_constant_andIhEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418eca___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418eca_type* @G__0x418eca to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIh28custom_multiple_constant_andIhEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418ee8___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418ee8_type* @G__0x418ee8 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIh18custom_constant_orIhEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418efc___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418efc_type* @G__0x418efc to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIh27custom_multiple_constant_orIhEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418f19___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418f19_type* @G__0x418f19 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIh19custom_constant_xorIhEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418f2e___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418f2e_type* @G__0x418f2e to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIh28custom_multiple_constant_xorIhEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvttsd2si_0x220bf2__rip____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 8
  store i64 %4, i64* %PC, align 8
  %5 = load double, double* bitcast (%G_0x220bf2__rip__type* @G_0x220bf2__rip_ to double*), align 8
  %6 = tail call double @llvm.trunc.f64(double %5)
  %7 = tail call double @llvm.fabs.f64(double %6)
  %8 = fcmp ogt double %7, 0x41DFFFFFFFC00000
  %9 = fptosi double %6 to i32
  %10 = zext i32 %9 to i64
  %11 = select i1 %8, i64 2147483648, i64 %10
  store i64 %11, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x66c450___r9d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0, i32 0
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 6
  store i64 %5, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x66c450_type* @G__0x66c450 to i64), i64 4294967295), i64* %3, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw__si___r10w(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0
  %SI = bitcast %union.anon* %3 to i16*
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 21, i32 0
  %R10W = bitcast %union.anon* %4 to i16*
  %5 = load i16, i16* %SI, align 2
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 4
  store i64 %7, i64* %PC, align 8
  store i16 %5, i16* %R10W, align 2
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movswl__r10w___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 21, i32 0
  %R10W = bitcast %union.anon* %3 to i16*
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %4 = load i16, i16* %R10W, align 2
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = sext i16 %4 to i64
  %8 = and i64 %7, 4294967295
  store i64 %8, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x6702d0___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x6702d0_type* @G__0x6702d0 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x40__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -64
  %5 = load i64, i64* %RAX, align 8
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 4
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %4 to i64*
  store i64 %5, i64* %8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z4fillIPssEvT_S1_T0_(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x220bc2__rip____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 6
  store i64 %4, i64* %PC, align 8
  %5 = load i32, i32* bitcast (%G_0x220bc2__rip__type* @G_0x220bc2__rip_ to i32*), align 8
  %6 = zext i32 %5 to i64
  store i64 %6, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__0x220bfc__rip_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %EDX = bitcast %union.anon* %3 to i32*
  %4 = load i32, i32* %EDX, align 4
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 6
  store i64 %6, i64* %PC, align 8
  store i32 %4, i32* bitcast (%G_0x220bfc__rip__type* @G_0x220bfc__rip_ to i32*), align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418f4d___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418f4d_type* @G__0x418f4d to i64), i64 4294967295), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x40__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -64
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIs10custom_twoIsEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418f5f___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418f5f_type* @G__0x418f5f to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIs20custom_add_constantsIsEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418f76___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418f76_type* @G__0x418f76 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIs20custom_sub_constantsIsEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418f92___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418f92_type* @G__0x418f92 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIs25custom_multiply_constantsIsEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418fae___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418fae_type* @G__0x418fae to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIs23custom_divide_constantsIsEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418fc8___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418fc8_type* @G__0x418fc8 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIs20custom_mod_constantsIsEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418fdf___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418fdf_type* @G__0x418fdf to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIs22custom_equal_constantsIsEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418ff8___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418ff8_type* @G__0x418ff8 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIs25custom_notequal_constantsIsEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x419014___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419014_type* @G__0x419014 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIs28custom_greaterthan_constantsIsEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x419034___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419034_type* @G__0x419034 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIs25custom_lessthan_constantsIsEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x419051___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419051_type* @G__0x419051 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIs33custom_greaterthanequal_constantsIsEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x419077___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419077_type* @G__0x419077 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIs30custom_lessthanequal_constantsIsEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x41909a___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41909a_type* @G__0x41909a to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIs20custom_and_constantsIsEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x4190b1___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4190b1_type* @G__0x4190b1 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIs19custom_or_constantsIsEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x4190c7___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4190c7_type* @G__0x4190c7 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIs20custom_xor_constantsIsEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0x220a9a__rip____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 7
  store i64 %4, i64* %PC, align 8
  %5 = load i32, i32* bitcast (%G_0x220a9a__rip__type* @G_0x220a9a__rip_ to i32*), align 8
  %6 = sext i32 %5 to i64
  store i64 %6, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r9d__0x220ab9__rip_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0
  %R9D = bitcast %union.anon* %3 to i32*
  %4 = load i32, i32* %R9D, align 4
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i32 %4, i32* bitcast (%G_0x220ab9__rip__type* @G_0x220ab9__rip_ to i32*), align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x4190de___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4190de_type* @G__0x4190de to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIs19custom_constant_addIsEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x4190f4___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4190f4_type* @G__0x4190f4 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIs28custom_multiple_constant_addIsEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x419114___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419114_type* @G__0x419114 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIs19custom_constant_subIsEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x41912f___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41912f_type* @G__0x41912f to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIs28custom_multiple_constant_subIsEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x419154___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419154_type* @G__0x419154 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIs24custom_constant_multiplyIsEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x41916f___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41916f_type* @G__0x41916f to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIs33custom_multiple_constant_multiplyIsEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x419195___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419195_type* @G__0x419195 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIs34custom_multiple_constant_multiply2IsEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x4191ba___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4191ba_type* @G__0x4191ba to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIs22custom_constant_divideIsEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x4191d3___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4191d3_type* @G__0x4191d3 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIs31custom_multiple_constant_divideIsEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x4191f6___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4191f6_type* @G__0x4191f6 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIs32custom_multiple_constant_divide2IsEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x419219___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419219_type* @G__0x419219 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIs30custom_multiple_constant_mixedIsEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x41923a___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41923a_type* @G__0x41923a to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIs19custom_constant_andIsEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x419250___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419250_type* @G__0x419250 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIs28custom_multiple_constant_andIsEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x41926f___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41926f_type* @G__0x41926f to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIs18custom_constant_orIsEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x419284___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419284_type* @G__0x419284 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIs27custom_multiple_constant_orIsEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x4192a2___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4192a2_type* @G__0x4192a2 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIs19custom_constant_xorIsEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x4192b8___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4192b8_type* @G__0x4192b8 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIs28custom_multiple_constant_xorIsEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvttsd2si_0x220936__rip____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 8
  store i64 %4, i64* %PC, align 8
  %5 = load double, double* bitcast (%G_0x220936__rip__type* @G_0x220936__rip_ to double*), align 8
  %6 = tail call double @llvm.trunc.f64(double %5)
  %7 = tail call double @llvm.fabs.f64(double %6)
  %8 = fcmp ogt double %7, 0x41DFFFFFFFC00000
  %9 = fptosi double %6 to i32
  %10 = zext i32 %9 to i64
  %11 = select i1 %8, i64 2147483648, i64 %10
  store i64 %11, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x6685d0___r9d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0, i32 0
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 6
  store i64 %5, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x6685d0_type* @G__0x6685d0 to i64), i64 4294967295), i64* %3, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzwl__r10w___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 21, i32 0
  %R10W = bitcast %union.anon* %3 to i16*
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %4 = load i16, i16* %R10W, align 2
  %5 = zext i16 %4 to i64
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 4
  store i64 %7, i64* %PC, align 8
  store i64 %5, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x66c450___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x66c450_type* @G__0x66c450 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x48__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -72
  %5 = load i64, i64* %RAX, align 8
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 4
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %4 to i64*
  store i64 %5, i64* %8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z4fillIPttEvT_S1_T0_(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x220906__rip____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 6
  store i64 %4, i64* %PC, align 8
  %5 = load i32, i32* bitcast (%G_0x220906__rip__type* @G_0x220906__rip_ to i32*), align 8
  %6 = zext i32 %5 to i64
  store i64 %6, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__0x220940__rip_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %EDX = bitcast %union.anon* %3 to i32*
  %4 = load i32, i32* %EDX, align 4
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 6
  store i64 %6, i64* %PC, align 8
  store i32 %4, i32* bitcast (%G_0x220940__rip__type* @G_0x220940__rip_ to i32*), align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418f4c___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418f4c_type* @G__0x418f4c to i64), i64 4294967295), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x48__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -72
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIt10custom_twoItEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418f5e___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418f5e_type* @G__0x418f5e to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIt20custom_add_constantsItEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418f75___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418f75_type* @G__0x418f75 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIt20custom_sub_constantsItEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418f91___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418f91_type* @G__0x418f91 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIt25custom_multiply_constantsItEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418fad___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418fad_type* @G__0x418fad to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIt23custom_divide_constantsItEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418fc7___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418fc7_type* @G__0x418fc7 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIt20custom_mod_constantsItEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418fde___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418fde_type* @G__0x418fde to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIt22custom_equal_constantsItEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x418ff7___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418ff7_type* @G__0x418ff7 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIt25custom_notequal_constantsItEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x419013___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419013_type* @G__0x419013 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIt28custom_greaterthan_constantsItEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x419033___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419033_type* @G__0x419033 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIt25custom_lessthan_constantsItEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x419050___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419050_type* @G__0x419050 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIt33custom_greaterthanequal_constantsItEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x419076___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419076_type* @G__0x419076 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIt30custom_lessthanequal_constantsItEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x419099___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419099_type* @G__0x419099 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIt20custom_and_constantsItEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x4190b0___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4190b0_type* @G__0x4190b0 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIt19custom_or_constantsItEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x4190c6___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4190c6_type* @G__0x4190c6 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIt20custom_xor_constantsItEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0x2207de__rip____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 7
  store i64 %4, i64* %PC, align 8
  %5 = load i32, i32* bitcast (%G_0x2207de__rip__type* @G_0x2207de__rip_ to i32*), align 8
  %6 = sext i32 %5 to i64
  store i64 %6, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r9d__0x2207fd__rip_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0
  %R9D = bitcast %union.anon* %3 to i32*
  %4 = load i32, i32* %R9D, align 4
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i32 %4, i32* bitcast (%G_0x2207fd__rip__type* @G_0x2207fd__rip_ to i32*), align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x4190dd___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4190dd_type* @G__0x4190dd to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIt19custom_constant_addItEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x4190f3___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4190f3_type* @G__0x4190f3 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIt28custom_multiple_constant_addItEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x419113___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419113_type* @G__0x419113 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIt19custom_constant_subItEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x41912e___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41912e_type* @G__0x41912e to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIt28custom_multiple_constant_subItEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x419153___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419153_type* @G__0x419153 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIt24custom_constant_multiplyItEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x41916e___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41916e_type* @G__0x41916e to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIt33custom_multiple_constant_multiplyItEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x419194___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419194_type* @G__0x419194 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIt34custom_multiple_constant_multiply2ItEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x4191b9___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4191b9_type* @G__0x4191b9 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIt22custom_constant_divideItEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x4191d2___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4191d2_type* @G__0x4191d2 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIt31custom_multiple_constant_divideItEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x4191f5___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4191f5_type* @G__0x4191f5 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIt32custom_multiple_constant_divide2ItEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x419218___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419218_type* @G__0x419218 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIt30custom_multiple_constant_mixedItEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x419239___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419239_type* @G__0x419239 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIt19custom_constant_andItEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x41924f___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41924f_type* @G__0x41924f to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIt28custom_multiple_constant_andItEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x41926e___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41926e_type* @G__0x41926e to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIt18custom_constant_orItEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x419283___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419283_type* @G__0x419283 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIt27custom_multiple_constant_orItEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x4192a1___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4192a1_type* @G__0x4192a1 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIt19custom_constant_xorItEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x4192b7___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4192b7_type* @G__0x4192b7 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIt28custom_multiple_constant_xorItEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x22067a__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 8
  store i64 %4, i64* %PC, align 8
  %5 = load i64, i64* bitcast (%G_0x22067a__rip__type* @G_0x22067a__rip_ to i64*), align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 0
  store i64 %5, i64* %6, align 1
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 1
  %8 = bitcast i64* %7 to double*
  store double 0.000000e+00, double* %8, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvttsd2si__xmm0___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 4
  store i64 %5, i64* %PC, align 8
  %6 = bitcast %union.VectorReg* %3 to double*
  %7 = load double, double* %6, align 1
  %8 = tail call double @llvm.trunc.f64(double %7)
  %9 = tail call double @llvm.fabs.f64(double %8)
  %10 = fcmp ogt double %9, 0x41DFFFFFFFC00000
  %11 = fptosi double %8 to i32
  %12 = zext i32 %11 to i64
  %13 = select i1 %10, i64 2147483648, i64 %12
  store i64 %13, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x6608d0___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x6608d0_type* @G__0x6608d0 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0
  %ESI = bitcast %union.anon* %3 to i32*
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %4 = load i32, i32* %ESI, align 4
  %5 = zext i32 %4 to i64
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 2
  store i64 %7, i64* %PC, align 8
  store i64 %5, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x6685d0___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x6685d0_type* @G__0x6685d0 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x50__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -80
  %5 = load i64, i64* %RAX, align 8
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 4
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %4 to i64*
  store i64 %5, i64* %8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z4fillIPiiEvT_S1_T0_(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x220650__rip____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 6
  store i64 %4, i64* %PC, align 8
  %5 = load i32, i32* bitcast (%G_0x220650__rip__type* @G_0x220650__rip_ to i32*), align 8
  %6 = zext i32 %5 to i64
  store i64 %6, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__0x22068a__rip_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %EDX = bitcast %union.anon* %3 to i32*
  %4 = load i32, i32* %EDX, align 4
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 6
  store i64 %6, i64* %PC, align 8
  store i32 %4, i32* bitcast (%G_0x22068a__rip__type* @G_0x22068a__rip_ to i32*), align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x4192d7___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4192d7_type* @G__0x4192d7 to i64), i64 4294967295), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x50__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -80
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIi10custom_twoIiEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x4192e9___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4192e9_type* @G__0x4192e9 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIi20custom_add_constantsIiEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x419300___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419300_type* @G__0x419300 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIi20custom_sub_constantsIiEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x41931c___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41931c_type* @G__0x41931c to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIi25custom_multiply_constantsIiEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x419338___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419338_type* @G__0x419338 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIi23custom_divide_constantsIiEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x419352___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419352_type* @G__0x419352 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIi20custom_mod_constantsIiEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x419369___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419369_type* @G__0x419369 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIi22custom_equal_constantsIiEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x419382___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419382_type* @G__0x419382 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIi25custom_notequal_constantsIiEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x41939e___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41939e_type* @G__0x41939e to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIi28custom_greaterthan_constantsIiEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x4193be___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4193be_type* @G__0x4193be to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIi25custom_lessthan_constantsIiEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x4193db___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4193db_type* @G__0x4193db to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIi33custom_greaterthanequal_constantsIiEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x419401___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419401_type* @G__0x419401 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIi30custom_lessthanequal_constantsIiEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x419424___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419424_type* @G__0x419424 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIi20custom_and_constantsIiEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x41943b___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41943b_type* @G__0x41943b to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIi19custom_or_constantsIiEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x419451___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419451_type* @G__0x419451 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIi20custom_xor_constantsIiEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0x220528__rip____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 7
  store i64 %4, i64* %PC, align 8
  %5 = load i32, i32* bitcast (%G_0x220528__rip__type* @G_0x220528__rip_ to i32*), align 8
  %6 = sext i32 %5 to i64
  store i64 %6, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r9d__0x220547__rip_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0
  %R9D = bitcast %union.anon* %3 to i32*
  %4 = load i32, i32* %R9D, align 4
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i32 %4, i32* bitcast (%G_0x220547__rip__type* @G_0x220547__rip_ to i32*), align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x419468___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419468_type* @G__0x419468 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIi19custom_constant_addIiEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x41947e___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41947e_type* @G__0x41947e to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIi28custom_multiple_constant_addIiEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x41949e___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41949e_type* @G__0x41949e to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIi19custom_constant_subIiEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x4194b9___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4194b9_type* @G__0x4194b9 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIi28custom_multiple_constant_subIiEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x4194de___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4194de_type* @G__0x4194de to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIi24custom_constant_multiplyIiEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x4194f9___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4194f9_type* @G__0x4194f9 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIi33custom_multiple_constant_multiplyIiEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x41951f___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41951f_type* @G__0x41951f to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIi34custom_multiple_constant_multiply2IiEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x419544___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419544_type* @G__0x419544 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIi22custom_constant_divideIiEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x41955d___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41955d_type* @G__0x41955d to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIi31custom_multiple_constant_divideIiEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x419580___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419580_type* @G__0x419580 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIi32custom_multiple_constant_divide2IiEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x4195a3___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4195a3_type* @G__0x4195a3 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIi30custom_multiple_constant_mixedIiEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x4195c4___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4195c4_type* @G__0x4195c4 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIi19custom_constant_andIiEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x4195da___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4195da_type* @G__0x4195da to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIi28custom_multiple_constant_andIiEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x4195f9___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4195f9_type* @G__0x4195f9 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIi18custom_constant_orIiEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x41960e___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41960e_type* @G__0x41960e to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIi27custom_multiple_constant_orIiEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x41962c___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41962c_type* @G__0x41962c to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIi19custom_constant_xorIiEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x419642___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419642_type* @G__0x419642 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIi28custom_multiple_constant_xorIiEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvttsd2si_0x2203c3__rip____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 9
  store i64 %4, i64* %PC, align 8
  %5 = load double, double* bitcast (%G_0x2203c3__rip__type* @G_0x2203c3__rip_ to double*), align 8
  %6 = tail call double @llvm.trunc.f64(double %5)
  %7 = tail call double @llvm.fabs.f64(double %6)
  %8 = fcmp ogt double %7, 0x43E0000000000000
  %9 = fptosi double %6 to i64
  %10 = select i1 %8, i64 -9223372036854775808, i64 %9
  store i64 %10, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %4 = load i32, i32* %EAX, align 4
  %5 = zext i32 %4 to i64
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 2
  store i64 %7, i64* %PC, align 8
  store i64 %5, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x658bd0___r9d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0, i32 0
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 6
  store i64 %5, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x658bd0_type* @G__0x658bd0 to i64), i64 4294967295), i64* %3, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x6608d0___r9d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0, i32 0
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 6
  store i64 %5, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x6608d0_type* @G__0x6608d0 to i64), i64 4294967295), i64* %3, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r9d___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0
  %R9D = bitcast %union.anon* %3 to i32*
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %4 = load i32, i32* %R9D, align 4
  %5 = zext i32 %4 to i64
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 3
  store i64 %7, i64* %PC, align 8
  store i64 %5, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x54__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0
  %ESI = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -84
  %6 = load i32, i32* %ESI, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 3
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %RCX, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 3
  store i64 %5, i64* %PC, align 8
  store i64 %3, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x54__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -84
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 3
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x60__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -96
  %5 = load i64, i64* %RAX, align 8
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 4
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %4 to i64*
  store i64 %5, i64* %8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z4fillIPjjEvT_S1_T0_(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x22038c__rip____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 6
  store i64 %4, i64* %PC, align 8
  %5 = load i32, i32* bitcast (%G_0x22038c__rip__type* @G_0x22038c__rip_ to i32*), align 8
  %6 = zext i32 %5 to i64
  store i64 %6, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__0x2203c6__rip_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %EDX = bitcast %union.anon* %3 to i32*
  %4 = load i32, i32* %EDX, align 4
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 6
  store i64 %6, i64* %PC, align 8
  store i32 %4, i32* bitcast (%G_0x2203c6__rip__type* @G_0x2203c6__rip_ to i32*), align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x4192d6___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4192d6_type* @G__0x4192d6 to i64), i64 4294967295), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x60__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -96
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIj10custom_twoIjEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x4192e8___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4192e8_type* @G__0x4192e8 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIj20custom_add_constantsIjEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x4192ff___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4192ff_type* @G__0x4192ff to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIj20custom_sub_constantsIjEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x41931b___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41931b_type* @G__0x41931b to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIj25custom_multiply_constantsIjEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x419337___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419337_type* @G__0x419337 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIj23custom_divide_constantsIjEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x419351___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419351_type* @G__0x419351 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIj20custom_mod_constantsIjEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x419368___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419368_type* @G__0x419368 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIj22custom_equal_constantsIjEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x419381___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419381_type* @G__0x419381 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIj25custom_notequal_constantsIjEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x41939d___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41939d_type* @G__0x41939d to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIj28custom_greaterthan_constantsIjEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x4193bd___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4193bd_type* @G__0x4193bd to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIj25custom_lessthan_constantsIjEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x4193da___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4193da_type* @G__0x4193da to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIj33custom_greaterthanequal_constantsIjEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x419400___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419400_type* @G__0x419400 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIj30custom_lessthanequal_constantsIjEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x419423___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419423_type* @G__0x419423 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIj20custom_and_constantsIjEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x41943a___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41943a_type* @G__0x41943a to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIj19custom_or_constantsIjEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x419450___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419450_type* @G__0x419450 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIj20custom_xor_constantsIjEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0x220264__rip____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 7
  store i64 %4, i64* %PC, align 8
  %5 = load i32, i32* bitcast (%G_0x220264__rip__type* @G_0x220264__rip_ to i32*), align 8
  %6 = sext i32 %5 to i64
  store i64 %6, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r9d__0x220283__rip_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0
  %R9D = bitcast %union.anon* %3 to i32*
  %4 = load i32, i32* %R9D, align 4
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i32 %4, i32* bitcast (%G_0x220283__rip__type* @G_0x220283__rip_ to i32*), align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x419467___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419467_type* @G__0x419467 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIj19custom_constant_addIjEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x41947d___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41947d_type* @G__0x41947d to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIj28custom_multiple_constant_addIjEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x41949d___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41949d_type* @G__0x41949d to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIj19custom_constant_subIjEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x4194b8___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4194b8_type* @G__0x4194b8 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIj28custom_multiple_constant_subIjEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x4194dd___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4194dd_type* @G__0x4194dd to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIj24custom_constant_multiplyIjEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x4194f8___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4194f8_type* @G__0x4194f8 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIj33custom_multiple_constant_multiplyIjEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x41951e___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41951e_type* @G__0x41951e to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIj34custom_multiple_constant_multiply2IjEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x419543___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419543_type* @G__0x419543 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIj22custom_constant_divideIjEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x41955c___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41955c_type* @G__0x41955c to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIj31custom_multiple_constant_divideIjEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x41957f___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41957f_type* @G__0x41957f to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIj32custom_multiple_constant_divide2IjEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x4195a2___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4195a2_type* @G__0x4195a2 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIj30custom_multiple_constant_mixedIjEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x4195c3___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4195c3_type* @G__0x4195c3 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIj19custom_constant_andIjEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x4195d9___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4195d9_type* @G__0x4195d9 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIj28custom_multiple_constant_andIjEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x4195f8___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4195f8_type* @G__0x4195f8 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIj18custom_constant_orIjEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x41960d___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41960d_type* @G__0x41960d to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIj27custom_multiple_constant_orIjEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x41962b___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41962b_type* @G__0x41962b to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIj19custom_constant_xorIjEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x419641___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419641_type* @G__0x419641 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIj28custom_multiple_constant_xorIjEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x220100__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 8
  store i64 %4, i64* %PC, align 8
  %5 = load i64, i64* bitcast (%G_0x220100__rip__type* @G_0x220100__rip_ to i64*), align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 0
  store i64 %5, i64* %6, align 1
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 1
  %8 = bitcast i64* %7 to double*
  store double 0.000000e+00, double* %8, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvttsd2si__xmm0___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 5
  store i64 %5, i64* %PC, align 8
  %6 = bitcast %union.VectorReg* %3 to double*
  %7 = load double, double* %6, align 1
  %8 = tail call double @llvm.trunc.f64(double %7)
  %9 = tail call double @llvm.fabs.f64(double %8)
  %10 = fcmp ogt double %9, 0x43E0000000000000
  %11 = fptosi double %8 to i64
  %12 = select i1 %10, i64 -9223372036854775808, i64 %11
  store i64 %12, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x6491d0___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x6491d0_type* @G__0x6491d0 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x658bd0___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x658bd0_type* @G__0x658bd0 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x68__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -104
  %5 = load i64, i64* %RAX, align 8
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 4
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %4 to i64*
  store i64 %5, i64* %8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z4fillIPllEvT_S1_T0_(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x2200d4__rip____r9d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0, i32 0
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 7
  store i64 %5, i64* %PC, align 8
  %6 = load i32, i32* bitcast (%G_0x2200d4__rip__type* @G_0x2200d4__rip_ to i32*), align 8
  %7 = zext i32 %6 to i64
  store i64 %7, i64* %3, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r9d__0x22010d__rip_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0
  %R9D = bitcast %union.anon* %3 to i32*
  %4 = load i32, i32* %R9D, align 4
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i32 %4, i32* bitcast (%G_0x22010d__rip__type* @G_0x22010d__rip_ to i32*), align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x419661___r9d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0, i32 0
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 6
  store i64 %5, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419661_type* @G__0x419661 to i64), i64 4294967295), i64* %3, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r9d___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0
  %R9D = bitcast %union.anon* %3 to i32*
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %4 = load i32, i32* %R9D, align 4
  %5 = zext i32 %4 to i64
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 3
  store i64 %7, i64* %PC, align 8
  store i64 %5, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x68__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -104
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIl10custom_twoIlEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x419673___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419673_type* @G__0x419673 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIl20custom_add_constantsIlEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x41968a___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41968a_type* @G__0x41968a to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIl20custom_sub_constantsIlEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x4196a6___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4196a6_type* @G__0x4196a6 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIl25custom_multiply_constantsIlEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x4196c2___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4196c2_type* @G__0x4196c2 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIl23custom_divide_constantsIlEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x4196dc___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4196dc_type* @G__0x4196dc to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIl20custom_mod_constantsIlEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x4196f3___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4196f3_type* @G__0x4196f3 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIl22custom_equal_constantsIlEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x41970c___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41970c_type* @G__0x41970c to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIl25custom_notequal_constantsIlEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x419728___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419728_type* @G__0x419728 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIl28custom_greaterthan_constantsIlEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x419748___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419748_type* @G__0x419748 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIl25custom_lessthan_constantsIlEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x419765___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419765_type* @G__0x419765 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIl33custom_greaterthanequal_constantsIlEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x41978b___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41978b_type* @G__0x41978b to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIl30custom_lessthanequal_constantsIlEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x4197ae___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4197ae_type* @G__0x4197ae to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIl20custom_and_constantsIlEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x4197c5___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4197c5_type* @G__0x4197c5 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIl19custom_or_constantsIlEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x4197db___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4197db_type* @G__0x4197db to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIl20custom_xor_constantsIlEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0x21ffa7__rip____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 7
  store i64 %4, i64* %PC, align 8
  %5 = load i32, i32* bitcast (%G_0x21ffa7__rip__type* @G_0x21ffa7__rip_ to i32*), align 8
  %6 = sext i32 %5 to i64
  store i64 %6, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r9d__0x21ffc6__rip_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0
  %R9D = bitcast %union.anon* %3 to i32*
  %4 = load i32, i32* %R9D, align 4
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i32 %4, i32* bitcast (%G_0x21ffc6__rip__type* @G_0x21ffc6__rip_ to i32*), align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x4197f2___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4197f2_type* @G__0x4197f2 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIl19custom_constant_addIlEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x419808___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419808_type* @G__0x419808 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIl28custom_multiple_constant_addIlEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x419828___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419828_type* @G__0x419828 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIl19custom_constant_subIlEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x419843___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419843_type* @G__0x419843 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIl28custom_multiple_constant_subIlEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x419868___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419868_type* @G__0x419868 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIl24custom_constant_multiplyIlEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x419883___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419883_type* @G__0x419883 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIl33custom_multiple_constant_multiplyIlEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x4198a9___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4198a9_type* @G__0x4198a9 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIl34custom_multiple_constant_multiply2IlEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x4198ce___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4198ce_type* @G__0x4198ce to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIl22custom_constant_divideIlEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x4198e7___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4198e7_type* @G__0x4198e7 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIl31custom_multiple_constant_divideIlEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x41990a___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41990a_type* @G__0x41990a to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIl32custom_multiple_constant_divide2IlEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x41992d___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41992d_type* @G__0x41992d to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIl30custom_multiple_constant_mixedIlEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x41994e___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41994e_type* @G__0x41994e to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIl19custom_constant_andIlEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x419964___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419964_type* @G__0x419964 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIl28custom_multiple_constant_andIlEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x419983___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419983_type* @G__0x419983 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIl18custom_constant_orIlEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x419998___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419998_type* @G__0x419998 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIl27custom_multiple_constant_orIlEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x4199b6___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4199b6_type* @G__0x4199b6 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIl19custom_constant_xorIlEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x4199cc___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4199cc_type* @G__0x4199cc to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIl28custom_multiple_constant_xorIlEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x21fe43__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 8
  store i64 %4, i64* %PC, align 8
  %5 = load i64, i64* bitcast (%G_0x21fe43__rip__type* @G_0x21fe43__rip_ to i64*), align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 0
  store i64 %5, i64* %6, align 1
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 1
  %8 = bitcast i64* %7 to double*
  store double 0.000000e+00, double* %8, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x16793__rip____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 8
  store i64 %4, i64* %PC, align 8
  %5 = load i64, i64* bitcast (%G_0x16793__rip__type* @G_0x16793__rip_ to i64*), align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 1, i32 0, i32 0, i32 0, i64 0
  store i64 %5, i64* %6, align 1
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 1, i32 0, i32 0, i32 0, i64 1
  %8 = bitcast i64* %7 to double*
  store double 0.000000e+00, double* %8, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movaps__xmm0___xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 2
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0
  %5 = bitcast %union.VectorReg* %3 to i8*
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 3
  store i64 %7, i64* %PC, align 8
  %8 = bitcast %union.VectorReg* %4 to <2 x i32>*
  %9 = load <2 x i32>, <2 x i32>* %8, align 1
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 1
  %11 = bitcast i64* %10 to <2 x i32>*
  %12 = load <2 x i32>, <2 x i32>* %11, align 1
  %13 = extractelement <2 x i32> %9, i32 0
  %14 = bitcast %union.VectorReg* %3 to i32*
  store i32 %13, i32* %14, align 1
  %15 = extractelement <2 x i32> %9, i32 1
  %16 = getelementptr inbounds i8, i8* %5, i64 4
  %17 = bitcast i8* %16 to i32*
  store i32 %15, i32* %17, align 1
  %18 = extractelement <2 x i32> %12, i32 0
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 2, i32 0, i32 0, i32 0, i64 1
  %20 = bitcast i64* %19 to i32*
  store i32 %18, i32* %20, align 1
  %21 = extractelement <2 x i32> %12, i32 1
  %22 = getelementptr inbounds i8, i8* %5, i64 12
  %23 = bitcast i8* %22 to i32*
  store i32 %21, i32* %23, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subsd__xmm1___xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 2
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 1
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = bitcast %union.VectorReg* %3 to double*
  %8 = load double, double* %7, align 1
  %9 = bitcast %union.VectorReg* %4 to double*
  %10 = load double, double* %9, align 1
  %11 = fsub double %8, %10
  store double %11, double* %7, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvttsd2si__xmm2___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 2
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 5
  store i64 %5, i64* %PC, align 8
  %6 = bitcast %union.VectorReg* %3 to double*
  %7 = load double, double* %6, align 1
  %8 = tail call double @llvm.trunc.f64(double %7)
  %9 = tail call double @llvm.fabs.f64(double %8)
  %10 = fcmp ogt double %9, 0x43E0000000000000
  %11 = fptosi double %8 to i64
  %12 = select i1 %10, i64 -9223372036854775808, i64 %11
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x8000000000000000___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 -9223372036854775808, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorq__rcx___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %3 = load i64, i64* %RAX, align 8
  %4 = load i64, i64* %RCX, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 3
  store i64 %6, i64* %PC, align 8
  %7 = xor i64 %4, %3
  store i64 %7, i64* %RAX, align 8
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8, align 1
  %9 = trunc i64 %7 to i32
  %10 = and i32 %9, 255
  %11 = tail call i32 @llvm.ctpop.i32(i32 %10)
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = icmp eq i64 %7, 0
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17, i8* %18, align 1
  %19 = lshr i64 %7, 63
  %20 = trunc i64 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %22, align 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %23, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvttsd2si__xmm0___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 5
  store i64 %5, i64* %PC, align 8
  %6 = bitcast %union.VectorReg* %3 to double*
  %7 = load double, double* %6, align 1
  %8 = tail call double @llvm.trunc.f64(double %7)
  %9 = tail call double @llvm.fabs.f64(double %8)
  %10 = fcmp ogt double %9, 0x43E0000000000000
  %11 = fptosi double %8 to i64
  %12 = select i1 %10, i64 -9223372036854775808, i64 %11
  store i64 %12, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_ucomisd__xmm0___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 1
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = bitcast %union.VectorReg* %4 to double*
  %8 = load double, double* %7, align 1
  %9 = bitcast [32 x %union.VectorReg]* %3 to double*
  %10 = load double, double* %9, align 1
  %11 = fcmp uno double %8, %10
  br i1 %11, label %12, label %22

; <label>:12:                                     ; preds = %block_400478
  %13 = fadd double %8, %10
  %14 = bitcast double %13 to i64
  %15 = and i64 %14, 9221120237041090560
  %16 = icmp eq i64 %15, 9218868437227405312
  %17 = and i64 %14, 2251799813685247
  %18 = icmp ne i64 %17, 0
  %19 = and i1 %16, %18
  br i1 %19, label %20, label %28

; <label>:20:                                     ; preds = %12
  %21 = tail call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %6, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit

; <label>:22:                                     ; preds = %block_400478
  %23 = fcmp ogt double %8, %10
  br i1 %23, label %28, label %24

; <label>:24:                                     ; preds = %22
  %25 = fcmp olt double %8, %10
  br i1 %25, label %28, label %26

; <label>:26:                                     ; preds = %24
  %27 = fcmp oeq double %8, %10
  br i1 %27, label %28, label %35

; <label>:28:                                     ; preds = %26, %24, %22, %12
  %29 = phi i8 [ 0, %22 ], [ 0, %24 ], [ 1, %26 ], [ 1, %12 ]
  %30 = phi i8 [ 0, %22 ], [ 0, %24 ], [ 0, %26 ], [ 1, %12 ]
  %31 = phi i8 [ 0, %22 ], [ 1, %24 ], [ 0, %26 ], [ 1, %12 ]
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %29, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %30, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %31, i8* %34, align 1
  br label %35

; <label>:35:                                     ; preds = %28, %26
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %36, align 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %37, align 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %38, align 1
  br label %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit

_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit: ; preds = %35, %20
  %39 = phi %struct.Memory* [ %21, %20 ], [ %2, %35 ]
  ret %struct.Memory* %39
}

define %struct.Memory* @routine_cmovaq__rcx___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %3 = load i64, i64* %RCX, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 4
  store i64 %5, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %7 = load i8, i8* %6, align 1
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9 = load i8, i8* %8, align 1
  %10 = or i8 %9, %7
  %11 = icmp eq i8 %10, 0
  %12 = load i64, i64* %RAX, align 8
  %13 = select i1 %11, i64 %3, i64 %12
  store i64 %13, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x20__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -32
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x28__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -40
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %RAX, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 3
  store i64 %5, i64* %PC, align 8
  store i64 %3, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z4fillIPmmEvT_S1_T0_(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x6397d0___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1f40___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 8000, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x419660___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419660_type* @G__0x419660 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x622080___r9d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0, i32 0
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 8
  store i64 %5, i64* %PC, align 8
  %6 = load i32, i32* bitcast (%G_0x622080_type* @G_0x622080 to i32*), align 8
  %7 = zext i32 %6 to i64
  store i64 %7, i64* %3, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r9d__0x6220c0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0
  %R9D = bitcast %union.anon* %3 to i32*
  %4 = load i32, i32* %R9D, align 4
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 8
  store i64 %6, i64* %PC, align 8
  store i32 %4, i32* bitcast (%G_0x6220c0_type* @G_0x6220c0 to i32*), align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIm10custom_twoImEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x419672___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419672_type* @G__0x419672 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIm20custom_add_constantsImEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x419689___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419689_type* @G__0x419689 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIm20custom_sub_constantsImEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x4196a5___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4196a5_type* @G__0x4196a5 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIm25custom_multiply_constantsImEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x4196c1___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4196c1_type* @G__0x4196c1 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIm23custom_divide_constantsImEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x4196db___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4196db_type* @G__0x4196db to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIm20custom_mod_constantsImEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x4196f2___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4196f2_type* @G__0x4196f2 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIm22custom_equal_constantsImEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x41970b___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x41970b_type* @G__0x41970b to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIm25custom_notequal_constantsImEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x419727___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419727_type* @G__0x419727 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIm28custom_greaterthan_constantsImEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x419747___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419747_type* @G__0x419747 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIm25custom_lessthan_constantsImEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x419764___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419764_type* @G__0x419764 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIm33custom_greaterthanequal_constantsImEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x41978a___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x41978a_type* @G__0x41978a to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIm30custom_lessthanequal_constantsImEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x4197ad___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4197ad_type* @G__0x4197ad to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIm20custom_and_constantsImEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x4197c4___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4197c4_type* @G__0x4197c4 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIm19custom_or_constantsImEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x4197da___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4197da_type* @G__0x4197da to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIm20custom_xor_constantsImEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x4197f1___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4197f1_type* @G__0x4197f1 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0xa___r9d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0, i32 0
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 6
  store i64 %5, i64* %PC, align 8
  store i64 10, i64* %3, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x622080___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 7
  store i64 %4, i64* %PC, align 8
  %5 = load i32, i32* bitcast (%G_0x622080_type* @G_0x622080 to i32*), align 8
  %6 = zext i32 %5 to i64
  store i64 %6, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdx__MINUS0x70__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -112
  %5 = load i64, i64* %RDX, align 8
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 4
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %4 to i64*
  store i64 %5, i64* %8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cltd(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 1
  store i64 %4, i64* %PC, align 8
  %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %7 = bitcast %union.anon* %6 to i32*
  %8 = load i32, i32* %7, align 8
  %9 = sext i32 %8 to i64
  %10 = lshr i64 %9, 32
  store i64 %10, i64* %5, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_idivl__r9d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0
  %R9D = bitcast %union.anon* %3 to i32*
  %4 = load i32, i32* %R9D, align 4
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 3
  store i64 %6, i64* %PC, align 8
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %8 = bitcast %union.anon* %7 to i32*
  %9 = load i32, i32* %8, align 8
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %12 = bitcast %union.anon* %11 to i32*
  %13 = load i32, i32* %12, align 8
  %14 = zext i32 %13 to i64
  %15 = sext i32 %4 to i64
  %16 = shl nuw i64 %14, 32
  %17 = or i64 %16, %10
  %18 = sdiv i64 %17, %15
  %19 = shl i64 %18, 32
  %20 = ashr exact i64 %19, 32
  %21 = icmp eq i64 %18, %20
  br i1 %21, label %24, label %22

; <label>:22:                                     ; preds = %block_400478
  %23 = tail call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %6, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:24:                                     ; preds = %block_400478
  %25 = srem i64 %17, %15
  %26 = getelementptr inbounds %union.anon, %union.anon* %7, i64 0, i32 0
  %27 = and i64 %18, 4294967295
  store i64 %27, i64* %26, align 8
  %28 = getelementptr inbounds %union.anon, %union.anon* %11, i64 0, i32 0
  %29 = and i64 %25, 4294967295
  store i64 %29, i64* %28, align 8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %30, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %31, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %35, align 1
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %24, %22
  %36 = phi %struct.Memory* [ %23, %22 ], [ %2, %24 ]
  ret %struct.Memory* %36
}

define %struct.Memory* @routine_movl__eax__0x6220c0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %4 = load i32, i32* %EAX, align 4
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i32 %4, i32* bitcast (%G_0x6220c0_type* @G_0x6220c0 to i32*), align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x70__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -112
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %RCX, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 3
  store i64 %5, i64* %PC, align 8
  store i64 %3, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIm19custom_constant_addImEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x419807___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419807_type* @G__0x419807 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIm28custom_multiple_constant_addImEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x419827___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419827_type* @G__0x419827 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIm19custom_constant_subImEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x419842___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419842_type* @G__0x419842 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIm28custom_multiple_constant_subImEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x419867___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419867_type* @G__0x419867 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIm24custom_constant_multiplyImEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x419882___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419882_type* @G__0x419882 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIm33custom_multiple_constant_multiplyImEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x4198a8___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4198a8_type* @G__0x4198a8 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIm34custom_multiple_constant_multiply2ImEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x4198cd___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4198cd_type* @G__0x4198cd to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIm22custom_constant_divideImEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x4198e6___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4198e6_type* @G__0x4198e6 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIm31custom_multiple_constant_divideImEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x419909___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419909_type* @G__0x419909 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIm32custom_multiple_constant_divide2ImEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x41992c___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x41992c_type* @G__0x41992c to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIm30custom_multiple_constant_mixedImEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x41994d___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x41994d_type* @G__0x41994d to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIm19custom_constant_andImEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x419963___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419963_type* @G__0x419963 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIm28custom_multiple_constant_andImEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x419982___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419982_type* @G__0x419982 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIm18custom_constant_orImEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x419997___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419997_type* @G__0x419997 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIm27custom_multiple_constant_orImEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x4199b5___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4199b5_type* @G__0x4199b5 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIm19custom_constant_xorImEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x4199cb___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4199cb_type* @G__0x4199cb to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIm28custom_multiple_constant_xorImEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x631ad0___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x631ad0_type* @G__0x631ad0 to i64), i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x7d00___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %RDX, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 7
  store i64 %5, i64* %PC, align 8
  %6 = add i64 %3, 32000
  store i64 %6, i64* %RDX, align 8
  %7 = icmp ugt i64 %3, -32001
  %8 = zext i1 %7 to i8
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8, i8* %9, align 1
  %10 = trunc i64 %6 to i32
  %11 = and i32 %10, 255
  %12 = tail call i32 @llvm.ctpop.i32(i32 %11)
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = xor i64 %3, %6
  %18 = lshr i64 %17, 4
  %19 = trunc i64 %18 to i8
  %20 = and i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20, i8* %21, align 1
  %22 = icmp eq i64 %6, 0
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23, i8* %24, align 1
  %25 = lshr i64 %6, 63
  %26 = trunc i64 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26, i8* %27, align 1
  %28 = lshr i64 %3, 63
  %29 = xor i64 %25, %28
  %30 = add nuw nsw i64 %29, %25
  %31 = icmp eq i64 %30, 2
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %32, i8* %33, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x622088___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 9
  store i64 %4, i64* %PC, align 8
  %5 = load i64, i64* bitcast (%G_0x622088_type* @G_0x622088 to i64*), align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 0
  store i64 %5, i64* %6, align 1
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 1
  %8 = bitcast i64* %7 to double*
  store double 0.000000e+00, double* %8, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtsd2ss__xmm0___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0
  %4 = bitcast %union.VectorReg* %3 to i8*
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = bitcast %union.VectorReg* %3 to <2 x i32>*
  %8 = load <2 x i32>, <2 x i32>* %7, align 1
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 1
  %10 = bitcast i64* %9 to <2 x i32>*
  %11 = load <2 x i32>, <2 x i32>* %10, align 1
  %12 = bitcast <2 x i32> %8 to double
  %13 = fptrunc double %12 to float
  %14 = bitcast %union.VectorReg* %3 to float*
  store float %13, float* %14, align 1
  %15 = extractelement <2 x i32> %8, i32 1
  %16 = getelementptr inbounds i8, i8* %4, i64 4
  %17 = bitcast i8* %16 to i32*
  store i32 %15, i32* %17, align 1
  %18 = extractelement <2 x i32> %11, i32 0
  %19 = bitcast i64* %9 to i32*
  store i32 %18, i32* %19, align 1
  %20 = extractelement <2 x i32> %11, i32 1
  %21 = getelementptr inbounds i8, i8* %4, i64 12
  %22 = bitcast i8* %21 to i32*
  store i32 %20, i32* %22, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %RCX, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 3
  store i64 %5, i64* %PC, align 8
  store i64 %3, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdx___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %RDX, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 3
  store i64 %5, i64* %PC, align 8
  store i64 %3, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z4fillIPffEvT_S1_T0_(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x631ad0___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x631ad0_type* @G__0x631ad0 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x4199ea___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4199ea_type* @G__0x4199ea to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIf10custom_twoIfEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x4199f9___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4199f9_type* @G__0x4199f9 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIf20custom_add_constantsIfEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x419a0d___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419a0d_type* @G__0x419a0d to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIf20custom_sub_constantsIfEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x419a26___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419a26_type* @G__0x419a26 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIf25custom_multiply_constantsIfEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x419a3f___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419a3f_type* @G__0x419a3f to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIf23custom_divide_constantsIfEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x419a56___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419a56_type* @G__0x419a56 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0xa___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 10, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x74__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -116
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 3
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdx__MINUS0x80__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -128
  %5 = load i64, i64* %RDX, align 8
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 4
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %4 to i64*
  store i64 %5, i64* %8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x74__rbp____r9d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -116
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 4
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %5 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  store i64 %10, i64* %3, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x80__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -128
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIf19custom_constant_addIfEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x419a69___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419a69_type* @G__0x419a69 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIf28custom_multiple_constant_addIfEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x419a86___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419a86_type* @G__0x419a86 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIf19custom_constant_subIfEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x419a9e___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419a9e_type* @G__0x419a9e to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIf28custom_multiple_constant_subIfEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x419ac0___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419ac0_type* @G__0x419ac0 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIf24custom_constant_multiplyIfEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x419ad8___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419ad8_type* @G__0x419ad8 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIf33custom_multiple_constant_multiplyIfEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x419afb___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419afb_type* @G__0x419afb to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIf34custom_multiple_constant_multiply2IfEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x419b1d___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419b1d_type* @G__0x419b1d to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIf22custom_constant_divideIfEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x419b33___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419b33_type* @G__0x419b33 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIf31custom_multiple_constant_divideIfEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x419b53___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419b53_type* @G__0x419b53 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIf32custom_multiple_constant_divide2IfEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x419b73___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419b73_type* @G__0x419b73 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantIf30custom_multiple_constant_mixedIfEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x6220d0___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x6220d0_type* @G__0x6220d0 to i64), i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0xfa00___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %RDX, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 7
  store i64 %5, i64* %PC, align 8
  %6 = add i64 %3, 64000
  store i64 %6, i64* %RDX, align 8
  %7 = icmp ugt i64 %3, -64001
  %8 = zext i1 %7 to i8
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8, i8* %9, align 1
  %10 = trunc i64 %6 to i32
  %11 = and i32 %10, 255
  %12 = tail call i32 @llvm.ctpop.i32(i32 %11)
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = xor i64 %3, %6
  %18 = lshr i64 %17, 4
  %19 = trunc i64 %18 to i8
  %20 = and i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20, i8* %21, align 1
  %22 = icmp eq i64 %6, 0
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23, i8* %24, align 1
  %25 = lshr i64 %6, 63
  %26 = trunc i64 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26, i8* %27, align 1
  %28 = lshr i64 %3, 63
  %29 = xor i64 %25, %28
  %30 = add nuw nsw i64 %29, %25
  %31 = icmp eq i64 %30, 2
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %32, i8* %33, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z4fillIPddEvT_S1_T0_(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x6220d0___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x6220d0_type* @G__0x6220d0 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x419b91___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419b91_type* @G__0x419b91 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantId10custom_twoIdEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x419ba1___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419ba1_type* @G__0x419ba1 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantId20custom_add_constantsIdEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x419bb6___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419bb6_type* @G__0x419bb6 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantId20custom_sub_constantsIdEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x419bd0___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419bd0_type* @G__0x419bd0 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantId25custom_multiply_constantsIdEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x419bea___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419bea_type* @G__0x419bea to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantId23custom_divide_constantsIdEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x419c02___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419c02_type* @G__0x419c02 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x84__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -132
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdx__MINUS0x90__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -144
  %5 = load i64, i64* %RDX, align 8
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 7
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %4 to i64*
  store i64 %5, i64* %8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x84__rbp____r9d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -132
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 7
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %5 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  store i64 %10, i64* %3, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x90__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -144
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantId19custom_constant_addIdEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x419c16___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419c16_type* @G__0x419c16 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantId28custom_multiple_constant_addIdEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x419c34___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419c34_type* @G__0x419c34 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantId19custom_constant_subIdEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x419c4d___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419c4d_type* @G__0x419c4d to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantId28custom_multiple_constant_subIdEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x419c70___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419c70_type* @G__0x419c70 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantId24custom_constant_multiplyIdEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x419c89___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419c89_type* @G__0x419c89 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantId33custom_multiple_constant_multiplyIdEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x419cad___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419cad_type* @G__0x419cad to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantId34custom_multiple_constant_multiply2IdEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x419cd0___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419cd0_type* @G__0x419cd0 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantId22custom_constant_divideIdEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x419ce7___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419ce7_type* @G__0x419ce7 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantId31custom_multiple_constant_divideIdEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x419d08___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419d08_type* @G__0x419d08 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantId32custom_multiple_constant_divide2IdEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x419d29___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419d29_type* @G__0x419d29 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_._Z13test_constantId30custom_multiple_constant_mixedIdEEvPT_iPKc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl__eax___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 2
  store i64 %4, i64* %PC, align 8
  store i64 0, i64* %RAX, align 8
  %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5, align 1
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 1, i8* %6, align 1
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 1, i8* %7, align 1
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %8, align 1
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9, align 1
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x90___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3 = load i64, i64* %RSP, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 7
  store i64 %5, i64* %PC, align 8
  %6 = add i64 %3, 144
  store i64 %6, i64* %RSP, align 8
  %7 = icmp ugt i64 %3, -145
  %8 = zext i1 %7 to i8
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8, i8* %9, align 1
  %10 = trunc i64 %6 to i32
  %11 = and i32 %10, 255
  %12 = tail call i32 @llvm.ctpop.i32(i32 %11)
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = xor i64 %3, 16
  %18 = xor i64 %17, %6
  %19 = lshr i64 %18, 4
  %20 = trunc i64 %19 to i8
  %21 = and i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %21, i8* %22, align 1
  %23 = icmp eq i64 %6, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i64 %6, 63
  %27 = trunc i64 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i64 %3, 63
  %30 = xor i64 %26, %29
  %31 = add nuw nsw i64 %30, %26
  %32 = icmp eq i64 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_popq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 1
  store i64 %4, i64* %PC, align 8
  %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, 8
  %8 = inttoptr i64 %6 to i64*
  %9 = load i64, i64* %8, align 8
  store i64 %9, i64* %RBP, align 8
  store i64 %7, i64* %5, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_retq(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400478:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 1
  store i64 %4, i64* %PC, align 8
  %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = inttoptr i64 %7 to i64*
  %9 = load i64, i64* %8, align 8
  store i64 %9, i64* %5, align 8
  %10 = add i64 %7, 8
  store i64 %10, i64* %6, align 8
  ret %struct.Memory* %2
}

attributes #0 = { nounwind readnone }
attributes #1 = { alwaysinline }
