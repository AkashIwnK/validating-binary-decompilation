; ModuleID = 'mcsema/test.proposed.inline.ll'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"

%__bss_start_type = type <{ [8 x i8] }>
%G_0x16793__rip__type = type <{ [8 x i8] }>
%G_0x21fdf3__rip__type = type <{ [8 x i8] }>
%G_0x21ff57__rip__type = type <{ [4 x i8] }>
%G_0x21ff76__rip__type = type <{ [4 x i8] }>
%G_0x220084__rip__type = type <{ [4 x i8] }>
%G_0x2200b0__rip__type = type <{ [8 x i8] }>
%G_0x2200bd__rip__type = type <{ [4 x i8] }>
%G_0x220214__rip__type = type <{ [4 x i8] }>
%G_0x220233__rip__type = type <{ [4 x i8] }>
%G_0x22033c__rip__type = type <{ [4 x i8] }>
%G_0x220373__rip__type = type <{ [8 x i8] }>
%G_0x220376__rip__type = type <{ [4 x i8] }>
%G_0x2204d8__rip__type = type <{ [4 x i8] }>
%G_0x2204f7__rip__type = type <{ [4 x i8] }>
%G_0x220600__rip__type = type <{ [4 x i8] }>
%G_0x22062a__rip__type = type <{ [8 x i8] }>
%G_0x22063a__rip__type = type <{ [4 x i8] }>
%G_0x22078e__rip__type = type <{ [4 x i8] }>
%G_0x2207ad__rip__type = type <{ [4 x i8] }>
%G_0x2208b6__rip__type = type <{ [4 x i8] }>
%G_0x2208e6__rip__type = type <{ [8 x i8] }>
%G_0x2208f0__rip__type = type <{ [4 x i8] }>
%G_0x220a4a__rip__type = type <{ [4 x i8] }>
%G_0x220a69__rip__type = type <{ [4 x i8] }>
%G_0x220b72__rip__type = type <{ [4 x i8] }>
%G_0x220ba2__rip__type = type <{ [8 x i8] }>
%G_0x220bac__rip__type = type <{ [4 x i8] }>
%G_0x220d06__rip__type = type <{ [4 x i8] }>
%G_0x220d25__rip__type = type <{ [4 x i8] }>
%G_0x220e2e__rip__type = type <{ [4 x i8] }>
%G_0x220e5d__rip__type = type <{ [8 x i8] }>
%G_0x220e68__rip__type = type <{ [4 x i8] }>
%G_0x220fc1__rip__type = type <{ [4 x i8] }>
%G_0x220fe0__rip__type = type <{ [4 x i8] }>
%G_0x2210f3__rip__type = type <{ [4 x i8] }>
%G_0x221125__rip__type = type <{ [8 x i8] }>
%G_0x22112d__rip__type = type <{ [4 x i8] }>
%G_0x622080_type = type <{ [4 x i8] }>
%G_0x622088_type = type <{ [16 x i8] }>
%G_0x6220c0_type = type <{ [4 x i8] }>
%G__0x418c32_type = type <{ [4 x i8] }>
%G__0x418c33_type = type <{ [4 x i8] }>
%G__0x418c43_type = type <{ [4 x i8] }>
%G__0x418c44_type = type <{ [4 x i8] }>
%G__0x418c59_type = type <{ [4 x i8] }>
%G__0x418c5a_type = type <{ [4 x i8] }>
%G__0x418c74_type = type <{ [4 x i8] }>
%G__0x418c75_type = type <{ [4 x i8] }>
%G__0x418c8f_type = type <{ [4 x i8] }>
%G__0x418c90_type = type <{ [4 x i8] }>
%G__0x418ca8_type = type <{ [4 x i8] }>
%G__0x418ca9_type = type <{ [4 x i8] }>
%G__0x418cbe_type = type <{ [4 x i8] }>
%G__0x418cbf_type = type <{ [4 x i8] }>
%G__0x418cd6_type = type <{ [4 x i8] }>
%G__0x418cd7_type = type <{ [4 x i8] }>
%G__0x418cf1_type = type <{ [4 x i8] }>
%G__0x418cf2_type = type <{ [4 x i8] }>
%G__0x418d10_type = type <{ [4 x i8] }>
%G__0x418d11_type = type <{ [4 x i8] }>
%G__0x418d2c_type = type <{ [4 x i8] }>
%G__0x418d2d_type = type <{ [4 x i8] }>
%G__0x418d51_type = type <{ [4 x i8] }>
%G__0x418d52_type = type <{ [4 x i8] }>
%G__0x418d73_type = type <{ [4 x i8] }>
%G__0x418d74_type = type <{ [4 x i8] }>
%G__0x418d89_type = type <{ [4 x i8] }>
%G__0x418d8a_type = type <{ [4 x i8] }>
%G__0x418d9e_type = type <{ [4 x i8] }>
%G__0x418d9f_type = type <{ [4 x i8] }>
%G__0x418db4_type = type <{ [4 x i8] }>
%G__0x418db5_type = type <{ [4 x i8] }>
%G__0x418dc9_type = type <{ [4 x i8] }>
%G__0x418dca_type = type <{ [4 x i8] }>
%G__0x418de8_type = type <{ [4 x i8] }>
%G__0x418de9_type = type <{ [4 x i8] }>
%G__0x418e02_type = type <{ [4 x i8] }>
%G__0x418e03_type = type <{ [4 x i8] }>
%G__0x418e26_type = type <{ [4 x i8] }>
%G__0x418e27_type = type <{ [4 x i8] }>
%G__0x418e40_type = type <{ [4 x i8] }>
%G__0x418e41_type = type <{ [4 x i8] }>
%G__0x418e65_type = type <{ [4 x i8] }>
%G__0x418e66_type = type <{ [4 x i8] }>
%G__0x418e89_type = type <{ [4 x i8] }>
%G__0x418e8a_type = type <{ [4 x i8] }>
%G__0x418ea1_type = type <{ [4 x i8] }>
%G__0x418ea2_type = type <{ [4 x i8] }>
%G__0x418ec3_type = type <{ [4 x i8] }>
%G__0x418ec4_type = type <{ [4 x i8] }>
%G__0x418ee5_type = type <{ [4 x i8] }>
%G__0x418ee6_type = type <{ [4 x i8] }>
%G__0x418f05_type = type <{ [4 x i8] }>
%G__0x418f06_type = type <{ [4 x i8] }>
%G__0x418f1a_type = type <{ [4 x i8] }>
%G__0x418f1b_type = type <{ [4 x i8] }>
%G__0x418f38_type = type <{ [4 x i8] }>
%G__0x418f39_type = type <{ [4 x i8] }>
%G__0x418f4c_type = type <{ [4 x i8] }>
%G__0x418f4d_type = type <{ [4 x i8] }>
%G__0x418f69_type = type <{ [4 x i8] }>
%G__0x418f6a_type = type <{ [4 x i8] }>
%G__0x418f7e_type = type <{ [4 x i8] }>
%G__0x418f7f_type = type <{ [4 x i8] }>
%G__0x418f9c_type = type <{ [4 x i8] }>
%G__0x418f9d_type = type <{ [4 x i8] }>
%G__0x418fae_type = type <{ [4 x i8] }>
%G__0x418faf_type = type <{ [4 x i8] }>
%G__0x418fc5_type = type <{ [4 x i8] }>
%G__0x418fc6_type = type <{ [4 x i8] }>
%G__0x418fe1_type = type <{ [4 x i8] }>
%G__0x418fe2_type = type <{ [4 x i8] }>
%G__0x418ffd_type = type <{ [4 x i8] }>
%G__0x418ffe_type = type <{ [4 x i8] }>
%G__0x419017_type = type <{ [4 x i8] }>
%G__0x419018_type = type <{ [4 x i8] }>
%G__0x41902e_type = type <{ [4 x i8] }>
%G__0x41902f_type = type <{ [4 x i8] }>
%G__0x419047_type = type <{ [4 x i8] }>
%G__0x419048_type = type <{ [4 x i8] }>
%G__0x419063_type = type <{ [4 x i8] }>
%G__0x419064_type = type <{ [4 x i8] }>
%G__0x419083_type = type <{ [4 x i8] }>
%G__0x419084_type = type <{ [4 x i8] }>
%G__0x4190a0_type = type <{ [4 x i8] }>
%G__0x4190a1_type = type <{ [4 x i8] }>
%G__0x4190c6_type = type <{ [4 x i8] }>
%G__0x4190c7_type = type <{ [4 x i8] }>
%G__0x4190e9_type = type <{ [4 x i8] }>
%G__0x4190ea_type = type <{ [4 x i8] }>
%G__0x419100_type = type <{ [4 x i8] }>
%G__0x419101_type = type <{ [4 x i8] }>
%G__0x419116_type = type <{ [4 x i8] }>
%G__0x419117_type = type <{ [4 x i8] }>
%G__0x41912d_type = type <{ [4 x i8] }>
%G__0x41912e_type = type <{ [4 x i8] }>
%G__0x419143_type = type <{ [4 x i8] }>
%G__0x419144_type = type <{ [4 x i8] }>
%G__0x419163_type = type <{ [4 x i8] }>
%G__0x419164_type = type <{ [4 x i8] }>
%G__0x41917e_type = type <{ [4 x i8] }>
%G__0x41917f_type = type <{ [4 x i8] }>
%G__0x4191a3_type = type <{ [4 x i8] }>
%G__0x4191a4_type = type <{ [4 x i8] }>
%G__0x4191be_type = type <{ [4 x i8] }>
%G__0x4191bf_type = type <{ [4 x i8] }>
%G__0x4191e4_type = type <{ [4 x i8] }>
%G__0x4191e5_type = type <{ [4 x i8] }>
%G__0x419209_type = type <{ [4 x i8] }>
%G__0x41920a_type = type <{ [4 x i8] }>
%G__0x419222_type = type <{ [4 x i8] }>
%G__0x419223_type = type <{ [4 x i8] }>
%G__0x419245_type = type <{ [4 x i8] }>
%G__0x419246_type = type <{ [4 x i8] }>
%G__0x419268_type = type <{ [4 x i8] }>
%G__0x419269_type = type <{ [4 x i8] }>
%G__0x419289_type = type <{ [4 x i8] }>
%G__0x41928a_type = type <{ [4 x i8] }>
%G__0x41929f_type = type <{ [4 x i8] }>
%G__0x4192a0_type = type <{ [4 x i8] }>
%G__0x4192be_type = type <{ [4 x i8] }>
%G__0x4192bf_type = type <{ [4 x i8] }>
%G__0x4192d3_type = type <{ [4 x i8] }>
%G__0x4192d4_type = type <{ [4 x i8] }>
%G__0x4192f1_type = type <{ [4 x i8] }>
%G__0x4192f2_type = type <{ [4 x i8] }>
%G__0x419307_type = type <{ [4 x i8] }>
%G__0x419308_type = type <{ [4 x i8] }>
%G__0x419326_type = type <{ [4 x i8] }>
%G__0x419327_type = type <{ [4 x i8] }>
%G__0x419338_type = type <{ [4 x i8] }>
%G__0x419339_type = type <{ [4 x i8] }>
%G__0x41934f_type = type <{ [4 x i8] }>
%G__0x419350_type = type <{ [4 x i8] }>
%G__0x41936b_type = type <{ [4 x i8] }>
%G__0x41936c_type = type <{ [4 x i8] }>
%G__0x419387_type = type <{ [4 x i8] }>
%G__0x419388_type = type <{ [4 x i8] }>
%G__0x4193a1_type = type <{ [4 x i8] }>
%G__0x4193a2_type = type <{ [4 x i8] }>
%G__0x4193b8_type = type <{ [4 x i8] }>
%G__0x4193b9_type = type <{ [4 x i8] }>
%G__0x4193d1_type = type <{ [4 x i8] }>
%G__0x4193d2_type = type <{ [4 x i8] }>
%G__0x4193ed_type = type <{ [4 x i8] }>
%G__0x4193ee_type = type <{ [4 x i8] }>
%G__0x41940d_type = type <{ [4 x i8] }>
%G__0x41940e_type = type <{ [4 x i8] }>
%G__0x41942a_type = type <{ [4 x i8] }>
%G__0x41942b_type = type <{ [4 x i8] }>
%G__0x419450_type = type <{ [4 x i8] }>
%G__0x419451_type = type <{ [4 x i8] }>
%G__0x419473_type = type <{ [4 x i8] }>
%G__0x419474_type = type <{ [4 x i8] }>
%G__0x41948a_type = type <{ [4 x i8] }>
%G__0x41948b_type = type <{ [4 x i8] }>
%G__0x4194a0_type = type <{ [4 x i8] }>
%G__0x4194a1_type = type <{ [4 x i8] }>
%G__0x4194b7_type = type <{ [4 x i8] }>
%G__0x4194b8_type = type <{ [4 x i8] }>
%G__0x4194cd_type = type <{ [4 x i8] }>
%G__0x4194ce_type = type <{ [4 x i8] }>
%G__0x4194ed_type = type <{ [4 x i8] }>
%G__0x4194ee_type = type <{ [4 x i8] }>
%G__0x419508_type = type <{ [4 x i8] }>
%G__0x419509_type = type <{ [4 x i8] }>
%G__0x41952d_type = type <{ [4 x i8] }>
%G__0x41952e_type = type <{ [4 x i8] }>
%G__0x419548_type = type <{ [4 x i8] }>
%G__0x419549_type = type <{ [4 x i8] }>
%G__0x41956e_type = type <{ [4 x i8] }>
%G__0x41956f_type = type <{ [4 x i8] }>
%G__0x419593_type = type <{ [4 x i8] }>
%G__0x419594_type = type <{ [4 x i8] }>
%G__0x4195ac_type = type <{ [4 x i8] }>
%G__0x4195ad_type = type <{ [4 x i8] }>
%G__0x4195cf_type = type <{ [4 x i8] }>
%G__0x4195d0_type = type <{ [4 x i8] }>
%G__0x4195f2_type = type <{ [4 x i8] }>
%G__0x4195f3_type = type <{ [4 x i8] }>
%G__0x419613_type = type <{ [4 x i8] }>
%G__0x419614_type = type <{ [4 x i8] }>
%G__0x419629_type = type <{ [4 x i8] }>
%G__0x41962a_type = type <{ [4 x i8] }>
%G__0x419648_type = type <{ [4 x i8] }>
%G__0x419649_type = type <{ [4 x i8] }>
%G__0x41965d_type = type <{ [4 x i8] }>
%G__0x41965e_type = type <{ [4 x i8] }>
%G__0x41967b_type = type <{ [4 x i8] }>
%G__0x41967c_type = type <{ [4 x i8] }>
%G__0x419691_type = type <{ [4 x i8] }>
%G__0x419692_type = type <{ [4 x i8] }>
%G__0x4196b0_type = type <{ [8 x i8] }>
%G__0x4196b1_type = type <{ [4 x i8] }>
%G__0x4196c2_type = type <{ [8 x i8] }>
%G__0x4196c3_type = type <{ [4 x i8] }>
%G__0x4196d9_type = type <{ [8 x i8] }>
%G__0x4196da_type = type <{ [4 x i8] }>
%G__0x4196f5_type = type <{ [8 x i8] }>
%G__0x4196f6_type = type <{ [4 x i8] }>
%G__0x419711_type = type <{ [8 x i8] }>
%G__0x419712_type = type <{ [4 x i8] }>
%G__0x41972b_type = type <{ [8 x i8] }>
%G__0x41972c_type = type <{ [4 x i8] }>
%G__0x419742_type = type <{ [8 x i8] }>
%G__0x419743_type = type <{ [4 x i8] }>
%G__0x41975b_type = type <{ [8 x i8] }>
%G__0x41975c_type = type <{ [4 x i8] }>
%G__0x419777_type = type <{ [8 x i8] }>
%G__0x419778_type = type <{ [4 x i8] }>
%G__0x419797_type = type <{ [8 x i8] }>
%G__0x419798_type = type <{ [4 x i8] }>
%G__0x4197b4_type = type <{ [8 x i8] }>
%G__0x4197b5_type = type <{ [4 x i8] }>
%G__0x4197da_type = type <{ [8 x i8] }>
%G__0x4197db_type = type <{ [4 x i8] }>
%G__0x4197fd_type = type <{ [8 x i8] }>
%G__0x4197fe_type = type <{ [4 x i8] }>
%G__0x419814_type = type <{ [8 x i8] }>
%G__0x419815_type = type <{ [4 x i8] }>
%G__0x41982a_type = type <{ [8 x i8] }>
%G__0x41982b_type = type <{ [4 x i8] }>
%G__0x419841_type = type <{ [8 x i8] }>
%G__0x419842_type = type <{ [4 x i8] }>
%G__0x419857_type = type <{ [8 x i8] }>
%G__0x419858_type = type <{ [4 x i8] }>
%G__0x419877_type = type <{ [8 x i8] }>
%G__0x419878_type = type <{ [4 x i8] }>
%G__0x419892_type = type <{ [8 x i8] }>
%G__0x419893_type = type <{ [4 x i8] }>
%G__0x4198b7_type = type <{ [8 x i8] }>
%G__0x4198b8_type = type <{ [4 x i8] }>
%G__0x4198d2_type = type <{ [8 x i8] }>
%G__0x4198d3_type = type <{ [4 x i8] }>
%G__0x4198f8_type = type <{ [8 x i8] }>
%G__0x4198f9_type = type <{ [4 x i8] }>
%G__0x41991d_type = type <{ [8 x i8] }>
%G__0x41991e_type = type <{ [4 x i8] }>
%G__0x419936_type = type <{ [8 x i8] }>
%G__0x419937_type = type <{ [4 x i8] }>
%G__0x419959_type = type <{ [8 x i8] }>
%G__0x41995a_type = type <{ [4 x i8] }>
%G__0x41997c_type = type <{ [8 x i8] }>
%G__0x41997d_type = type <{ [4 x i8] }>
%G__0x41999d_type = type <{ [8 x i8] }>
%G__0x41999e_type = type <{ [4 x i8] }>
%G__0x4199b3_type = type <{ [8 x i8] }>
%G__0x4199b4_type = type <{ [4 x i8] }>
%G__0x4199d2_type = type <{ [8 x i8] }>
%G__0x4199d3_type = type <{ [4 x i8] }>
%G__0x4199e7_type = type <{ [8 x i8] }>
%G__0x4199e8_type = type <{ [4 x i8] }>
%G__0x419a05_type = type <{ [8 x i8] }>
%G__0x419a06_type = type <{ [4 x i8] }>
%G__0x419a1b_type = type <{ [8 x i8] }>
%G__0x419a1c_type = type <{ [4 x i8] }>
%G__0x419a3a_type = type <{ [8 x i8] }>
%G__0x419a49_type = type <{ [8 x i8] }>
%G__0x419a5d_type = type <{ [8 x i8] }>
%G__0x419a76_type = type <{ [8 x i8] }>
%G__0x419a8f_type = type <{ [8 x i8] }>
%G__0x419aa6_type = type <{ [8 x i8] }>
%G__0x419ab9_type = type <{ [8 x i8] }>
%G__0x419ad6_type = type <{ [8 x i8] }>
%G__0x419aee_type = type <{ [8 x i8] }>
%G__0x419b10_type = type <{ [8 x i8] }>
%G__0x419b28_type = type <{ [8 x i8] }>
%G__0x419b4b_type = type <{ [8 x i8] }>
%G__0x419b6d_type = type <{ [8 x i8] }>
%G__0x419b83_type = type <{ [8 x i8] }>
%G__0x419ba3_type = type <{ [8 x i8] }>
%G__0x419bc3_type = type <{ [8 x i8] }>
%G__0x419be1_type = type <{ [8 x i8] }>
%G__0x419bf1_type = type <{ [8 x i8] }>
%G__0x419c06_type = type <{ [8 x i8] }>
%G__0x419c20_type = type <{ [8 x i8] }>
%G__0x419c3a_type = type <{ [8 x i8] }>
%G__0x419c52_type = type <{ [8 x i8] }>
%G__0x419c66_type = type <{ [8 x i8] }>
%G__0x419c84_type = type <{ [8 x i8] }>
%G__0x419c9d_type = type <{ [8 x i8] }>
%G__0x419cc0_type = type <{ [8 x i8] }>
%G__0x419cd9_type = type <{ [8 x i8] }>
%G__0x419cfd_type = type <{ [8 x i8] }>
%G__0x419d20_type = type <{ [8 x i8] }>
%G__0x419d37_type = type <{ [8 x i8] }>
%G__0x419d58_type = type <{ [8 x i8] }>
%G__0x419d79_type = type <{ [8 x i8] }>
%G__0x6220d0_type = type <{ [8 x i8] }>
%G__0x631ad0_type = type <{ [8 x i8] }>
%G__0x6397d0_type = type <{ [8 x i8] }>
%G__0x6491d0_type = type <{ [4 x i8] }>
%G__0x658bd0_type = type <{ [4 x i8] }>
%G__0x6608d0_type = type <{ [4 x i8] }>
%G__0x6685d0_type = type <{ [4 x i8] }>
%G__0x66c450_type = type <{ [4 x i8] }>
%G__0x6702d0_type = type <{ [4 x i8] }>
%G__0x672210_type = type <{ [4 x i8] }>
%G__0x674150_type = type <{ [4 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.anon = type { i64 }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque

@__bss_start = local_unnamed_addr global %__bss_start_type zeroinitializer
@G_0x16793__rip_ = global %G_0x16793__rip__type zeroinitializer
@G_0x21fdf3__rip_ = global %G_0x21fdf3__rip__type zeroinitializer
@G_0x21ff57__rip_ = global %G_0x21ff57__rip__type zeroinitializer
@G_0x21ff76__rip_ = global %G_0x21ff76__rip__type zeroinitializer
@G_0x220084__rip_ = global %G_0x220084__rip__type zeroinitializer
@G_0x2200b0__rip_ = global %G_0x2200b0__rip__type zeroinitializer
@G_0x2200bd__rip_ = global %G_0x2200bd__rip__type zeroinitializer
@G_0x220214__rip_ = global %G_0x220214__rip__type zeroinitializer
@G_0x220233__rip_ = global %G_0x220233__rip__type zeroinitializer
@G_0x22033c__rip_ = global %G_0x22033c__rip__type zeroinitializer
@G_0x220373__rip_ = global %G_0x220373__rip__type zeroinitializer
@G_0x220376__rip_ = global %G_0x220376__rip__type zeroinitializer
@G_0x2204d8__rip_ = global %G_0x2204d8__rip__type zeroinitializer
@G_0x2204f7__rip_ = global %G_0x2204f7__rip__type zeroinitializer
@G_0x220600__rip_ = global %G_0x220600__rip__type zeroinitializer
@G_0x22062a__rip_ = global %G_0x22062a__rip__type zeroinitializer
@G_0x22063a__rip_ = global %G_0x22063a__rip__type zeroinitializer
@G_0x22078e__rip_ = global %G_0x22078e__rip__type zeroinitializer
@G_0x2207ad__rip_ = global %G_0x2207ad__rip__type zeroinitializer
@G_0x2208b6__rip_ = global %G_0x2208b6__rip__type zeroinitializer
@G_0x2208e6__rip_ = global %G_0x2208e6__rip__type zeroinitializer
@G_0x2208f0__rip_ = global %G_0x2208f0__rip__type zeroinitializer
@G_0x220a4a__rip_ = global %G_0x220a4a__rip__type zeroinitializer
@G_0x220a69__rip_ = global %G_0x220a69__rip__type zeroinitializer
@G_0x220b72__rip_ = global %G_0x220b72__rip__type zeroinitializer
@G_0x220ba2__rip_ = global %G_0x220ba2__rip__type zeroinitializer
@G_0x220bac__rip_ = global %G_0x220bac__rip__type zeroinitializer
@G_0x220d06__rip_ = global %G_0x220d06__rip__type zeroinitializer
@G_0x220d25__rip_ = global %G_0x220d25__rip__type zeroinitializer
@G_0x220e2e__rip_ = global %G_0x220e2e__rip__type zeroinitializer
@G_0x220e5d__rip_ = global %G_0x220e5d__rip__type zeroinitializer
@G_0x220e68__rip_ = global %G_0x220e68__rip__type zeroinitializer
@G_0x220fc1__rip_ = global %G_0x220fc1__rip__type zeroinitializer
@G_0x220fe0__rip_ = global %G_0x220fe0__rip__type zeroinitializer
@G_0x2210f3__rip_ = global %G_0x2210f3__rip__type zeroinitializer
@G_0x221125__rip_ = global %G_0x221125__rip__type zeroinitializer
@G_0x22112d__rip_ = global %G_0x22112d__rip__type zeroinitializer
@G_0x622080 = local_unnamed_addr global %G_0x622080_type zeroinitializer
@G_0x622088 = local_unnamed_addr global %G_0x622088_type zeroinitializer
@G_0x6220c0 = local_unnamed_addr global %G_0x6220c0_type zeroinitializer
@G__0x418c32 = global %G__0x418c32_type zeroinitializer
@G__0x418c33 = global %G__0x418c33_type zeroinitializer
@G__0x418c43 = global %G__0x418c43_type zeroinitializer
@G__0x418c44 = global %G__0x418c44_type zeroinitializer
@G__0x418c59 = global %G__0x418c59_type zeroinitializer
@G__0x418c5a = global %G__0x418c5a_type zeroinitializer
@G__0x418c74 = global %G__0x418c74_type zeroinitializer
@G__0x418c75 = global %G__0x418c75_type zeroinitializer
@G__0x418c8f = global %G__0x418c8f_type zeroinitializer
@G__0x418c90 = global %G__0x418c90_type zeroinitializer
@G__0x418ca8 = global %G__0x418ca8_type zeroinitializer
@G__0x418ca9 = global %G__0x418ca9_type zeroinitializer
@G__0x418cbe = global %G__0x418cbe_type zeroinitializer
@G__0x418cbf = global %G__0x418cbf_type zeroinitializer
@G__0x418cd6 = global %G__0x418cd6_type zeroinitializer
@G__0x418cd7 = global %G__0x418cd7_type zeroinitializer
@G__0x418cf1 = global %G__0x418cf1_type zeroinitializer
@G__0x418cf2 = global %G__0x418cf2_type zeroinitializer
@G__0x418d10 = global %G__0x418d10_type zeroinitializer
@G__0x418d11 = global %G__0x418d11_type zeroinitializer
@G__0x418d2c = global %G__0x418d2c_type zeroinitializer
@G__0x418d2d = global %G__0x418d2d_type zeroinitializer
@G__0x418d51 = global %G__0x418d51_type zeroinitializer
@G__0x418d52 = global %G__0x418d52_type zeroinitializer
@G__0x418d73 = global %G__0x418d73_type zeroinitializer
@G__0x418d74 = global %G__0x418d74_type zeroinitializer
@G__0x418d89 = global %G__0x418d89_type zeroinitializer
@G__0x418d8a = global %G__0x418d8a_type zeroinitializer
@G__0x418d9e = global %G__0x418d9e_type zeroinitializer
@G__0x418d9f = global %G__0x418d9f_type zeroinitializer
@G__0x418db4 = global %G__0x418db4_type zeroinitializer
@G__0x418db5 = global %G__0x418db5_type zeroinitializer
@G__0x418dc9 = global %G__0x418dc9_type zeroinitializer
@G__0x418dca = global %G__0x418dca_type zeroinitializer
@G__0x418de8 = global %G__0x418de8_type zeroinitializer
@G__0x418de9 = global %G__0x418de9_type zeroinitializer
@G__0x418e02 = global %G__0x418e02_type zeroinitializer
@G__0x418e03 = global %G__0x418e03_type zeroinitializer
@G__0x418e26 = global %G__0x418e26_type zeroinitializer
@G__0x418e27 = global %G__0x418e27_type zeroinitializer
@G__0x418e40 = global %G__0x418e40_type zeroinitializer
@G__0x418e41 = global %G__0x418e41_type zeroinitializer
@G__0x418e65 = global %G__0x418e65_type zeroinitializer
@G__0x418e66 = global %G__0x418e66_type zeroinitializer
@G__0x418e89 = global %G__0x418e89_type zeroinitializer
@G__0x418e8a = global %G__0x418e8a_type zeroinitializer
@G__0x418ea1 = global %G__0x418ea1_type zeroinitializer
@G__0x418ea2 = global %G__0x418ea2_type zeroinitializer
@G__0x418ec3 = global %G__0x418ec3_type zeroinitializer
@G__0x418ec4 = global %G__0x418ec4_type zeroinitializer
@G__0x418ee5 = global %G__0x418ee5_type zeroinitializer
@G__0x418ee6 = global %G__0x418ee6_type zeroinitializer
@G__0x418f05 = global %G__0x418f05_type zeroinitializer
@G__0x418f06 = global %G__0x418f06_type zeroinitializer
@G__0x418f1a = global %G__0x418f1a_type zeroinitializer
@G__0x418f1b = global %G__0x418f1b_type zeroinitializer
@G__0x418f38 = global %G__0x418f38_type zeroinitializer
@G__0x418f39 = global %G__0x418f39_type zeroinitializer
@G__0x418f4c = global %G__0x418f4c_type zeroinitializer
@G__0x418f4d = global %G__0x418f4d_type zeroinitializer
@G__0x418f69 = global %G__0x418f69_type zeroinitializer
@G__0x418f6a = global %G__0x418f6a_type zeroinitializer
@G__0x418f7e = global %G__0x418f7e_type zeroinitializer
@G__0x418f7f = global %G__0x418f7f_type zeroinitializer
@G__0x418f9c = global %G__0x418f9c_type zeroinitializer
@G__0x418f9d = global %G__0x418f9d_type zeroinitializer
@G__0x418fae = global %G__0x418fae_type zeroinitializer
@G__0x418faf = global %G__0x418faf_type zeroinitializer
@G__0x418fc5 = global %G__0x418fc5_type zeroinitializer
@G__0x418fc6 = global %G__0x418fc6_type zeroinitializer
@G__0x418fe1 = global %G__0x418fe1_type zeroinitializer
@G__0x418fe2 = global %G__0x418fe2_type zeroinitializer
@G__0x418ffd = global %G__0x418ffd_type zeroinitializer
@G__0x418ffe = global %G__0x418ffe_type zeroinitializer
@G__0x419017 = global %G__0x419017_type zeroinitializer
@G__0x419018 = global %G__0x419018_type zeroinitializer
@G__0x41902e = global %G__0x41902e_type zeroinitializer
@G__0x41902f = global %G__0x41902f_type zeroinitializer
@G__0x419047 = global %G__0x419047_type zeroinitializer
@G__0x419048 = global %G__0x419048_type zeroinitializer
@G__0x419063 = global %G__0x419063_type zeroinitializer
@G__0x419064 = global %G__0x419064_type zeroinitializer
@G__0x419083 = global %G__0x419083_type zeroinitializer
@G__0x419084 = global %G__0x419084_type zeroinitializer
@G__0x4190a0 = global %G__0x4190a0_type zeroinitializer
@G__0x4190a1 = global %G__0x4190a1_type zeroinitializer
@G__0x4190c6 = global %G__0x4190c6_type zeroinitializer
@G__0x4190c7 = global %G__0x4190c7_type zeroinitializer
@G__0x4190e9 = global %G__0x4190e9_type zeroinitializer
@G__0x4190ea = global %G__0x4190ea_type zeroinitializer
@G__0x419100 = global %G__0x419100_type zeroinitializer
@G__0x419101 = global %G__0x419101_type zeroinitializer
@G__0x419116 = global %G__0x419116_type zeroinitializer
@G__0x419117 = global %G__0x419117_type zeroinitializer
@G__0x41912d = global %G__0x41912d_type zeroinitializer
@G__0x41912e = global %G__0x41912e_type zeroinitializer
@G__0x419143 = global %G__0x419143_type zeroinitializer
@G__0x419144 = global %G__0x419144_type zeroinitializer
@G__0x419163 = global %G__0x419163_type zeroinitializer
@G__0x419164 = global %G__0x419164_type zeroinitializer
@G__0x41917e = global %G__0x41917e_type zeroinitializer
@G__0x41917f = global %G__0x41917f_type zeroinitializer
@G__0x4191a3 = global %G__0x4191a3_type zeroinitializer
@G__0x4191a4 = global %G__0x4191a4_type zeroinitializer
@G__0x4191be = global %G__0x4191be_type zeroinitializer
@G__0x4191bf = global %G__0x4191bf_type zeroinitializer
@G__0x4191e4 = global %G__0x4191e4_type zeroinitializer
@G__0x4191e5 = global %G__0x4191e5_type zeroinitializer
@G__0x419209 = global %G__0x419209_type zeroinitializer
@G__0x41920a = global %G__0x41920a_type zeroinitializer
@G__0x419222 = global %G__0x419222_type zeroinitializer
@G__0x419223 = global %G__0x419223_type zeroinitializer
@G__0x419245 = global %G__0x419245_type zeroinitializer
@G__0x419246 = global %G__0x419246_type zeroinitializer
@G__0x419268 = global %G__0x419268_type zeroinitializer
@G__0x419269 = global %G__0x419269_type zeroinitializer
@G__0x419289 = global %G__0x419289_type zeroinitializer
@G__0x41928a = global %G__0x41928a_type zeroinitializer
@G__0x41929f = global %G__0x41929f_type zeroinitializer
@G__0x4192a0 = global %G__0x4192a0_type zeroinitializer
@G__0x4192be = global %G__0x4192be_type zeroinitializer
@G__0x4192bf = global %G__0x4192bf_type zeroinitializer
@G__0x4192d3 = global %G__0x4192d3_type zeroinitializer
@G__0x4192d4 = global %G__0x4192d4_type zeroinitializer
@G__0x4192f1 = global %G__0x4192f1_type zeroinitializer
@G__0x4192f2 = global %G__0x4192f2_type zeroinitializer
@G__0x419307 = global %G__0x419307_type zeroinitializer
@G__0x419308 = global %G__0x419308_type zeroinitializer
@G__0x419326 = global %G__0x419326_type zeroinitializer
@G__0x419327 = global %G__0x419327_type zeroinitializer
@G__0x419338 = global %G__0x419338_type zeroinitializer
@G__0x419339 = global %G__0x419339_type zeroinitializer
@G__0x41934f = global %G__0x41934f_type zeroinitializer
@G__0x419350 = global %G__0x419350_type zeroinitializer
@G__0x41936b = global %G__0x41936b_type zeroinitializer
@G__0x41936c = global %G__0x41936c_type zeroinitializer
@G__0x419387 = global %G__0x419387_type zeroinitializer
@G__0x419388 = global %G__0x419388_type zeroinitializer
@G__0x4193a1 = global %G__0x4193a1_type zeroinitializer
@G__0x4193a2 = global %G__0x4193a2_type zeroinitializer
@G__0x4193b8 = global %G__0x4193b8_type zeroinitializer
@G__0x4193b9 = global %G__0x4193b9_type zeroinitializer
@G__0x4193d1 = global %G__0x4193d1_type zeroinitializer
@G__0x4193d2 = global %G__0x4193d2_type zeroinitializer
@G__0x4193ed = global %G__0x4193ed_type zeroinitializer
@G__0x4193ee = global %G__0x4193ee_type zeroinitializer
@G__0x41940d = global %G__0x41940d_type zeroinitializer
@G__0x41940e = global %G__0x41940e_type zeroinitializer
@G__0x41942a = global %G__0x41942a_type zeroinitializer
@G__0x41942b = global %G__0x41942b_type zeroinitializer
@G__0x419450 = global %G__0x419450_type zeroinitializer
@G__0x419451 = global %G__0x419451_type zeroinitializer
@G__0x419473 = global %G__0x419473_type zeroinitializer
@G__0x419474 = global %G__0x419474_type zeroinitializer
@G__0x41948a = global %G__0x41948a_type zeroinitializer
@G__0x41948b = global %G__0x41948b_type zeroinitializer
@G__0x4194a0 = global %G__0x4194a0_type zeroinitializer
@G__0x4194a1 = global %G__0x4194a1_type zeroinitializer
@G__0x4194b7 = global %G__0x4194b7_type zeroinitializer
@G__0x4194b8 = global %G__0x4194b8_type zeroinitializer
@G__0x4194cd = global %G__0x4194cd_type zeroinitializer
@G__0x4194ce = global %G__0x4194ce_type zeroinitializer
@G__0x4194ed = global %G__0x4194ed_type zeroinitializer
@G__0x4194ee = global %G__0x4194ee_type zeroinitializer
@G__0x419508 = global %G__0x419508_type zeroinitializer
@G__0x419509 = global %G__0x419509_type zeroinitializer
@G__0x41952d = global %G__0x41952d_type zeroinitializer
@G__0x41952e = global %G__0x41952e_type zeroinitializer
@G__0x419548 = global %G__0x419548_type zeroinitializer
@G__0x419549 = global %G__0x419549_type zeroinitializer
@G__0x41956e = global %G__0x41956e_type zeroinitializer
@G__0x41956f = global %G__0x41956f_type zeroinitializer
@G__0x419593 = global %G__0x419593_type zeroinitializer
@G__0x419594 = global %G__0x419594_type zeroinitializer
@G__0x4195ac = global %G__0x4195ac_type zeroinitializer
@G__0x4195ad = global %G__0x4195ad_type zeroinitializer
@G__0x4195cf = global %G__0x4195cf_type zeroinitializer
@G__0x4195d0 = global %G__0x4195d0_type zeroinitializer
@G__0x4195f2 = global %G__0x4195f2_type zeroinitializer
@G__0x4195f3 = global %G__0x4195f3_type zeroinitializer
@G__0x419613 = global %G__0x419613_type zeroinitializer
@G__0x419614 = global %G__0x419614_type zeroinitializer
@G__0x419629 = global %G__0x419629_type zeroinitializer
@G__0x41962a = global %G__0x41962a_type zeroinitializer
@G__0x419648 = global %G__0x419648_type zeroinitializer
@G__0x419649 = global %G__0x419649_type zeroinitializer
@G__0x41965d = global %G__0x41965d_type zeroinitializer
@G__0x41965e = global %G__0x41965e_type zeroinitializer
@G__0x41967b = global %G__0x41967b_type zeroinitializer
@G__0x41967c = global %G__0x41967c_type zeroinitializer
@G__0x419691 = global %G__0x419691_type zeroinitializer
@G__0x419692 = global %G__0x419692_type zeroinitializer
@G__0x4196b0 = global %G__0x4196b0_type zeroinitializer
@G__0x4196b1 = global %G__0x4196b1_type zeroinitializer
@G__0x4196c2 = global %G__0x4196c2_type zeroinitializer
@G__0x4196c3 = global %G__0x4196c3_type zeroinitializer
@G__0x4196d9 = global %G__0x4196d9_type zeroinitializer
@G__0x4196da = global %G__0x4196da_type zeroinitializer
@G__0x4196f5 = global %G__0x4196f5_type zeroinitializer
@G__0x4196f6 = global %G__0x4196f6_type zeroinitializer
@G__0x419711 = global %G__0x419711_type zeroinitializer
@G__0x419712 = global %G__0x419712_type zeroinitializer
@G__0x41972b = global %G__0x41972b_type zeroinitializer
@G__0x41972c = global %G__0x41972c_type zeroinitializer
@G__0x419742 = global %G__0x419742_type zeroinitializer
@G__0x419743 = global %G__0x419743_type zeroinitializer
@G__0x41975b = global %G__0x41975b_type zeroinitializer
@G__0x41975c = global %G__0x41975c_type zeroinitializer
@G__0x419777 = global %G__0x419777_type zeroinitializer
@G__0x419778 = global %G__0x419778_type zeroinitializer
@G__0x419797 = global %G__0x419797_type zeroinitializer
@G__0x419798 = global %G__0x419798_type zeroinitializer
@G__0x4197b4 = global %G__0x4197b4_type zeroinitializer
@G__0x4197b5 = global %G__0x4197b5_type zeroinitializer
@G__0x4197da = global %G__0x4197da_type zeroinitializer
@G__0x4197db = global %G__0x4197db_type zeroinitializer
@G__0x4197fd = global %G__0x4197fd_type zeroinitializer
@G__0x4197fe = global %G__0x4197fe_type zeroinitializer
@G__0x419814 = global %G__0x419814_type zeroinitializer
@G__0x419815 = global %G__0x419815_type zeroinitializer
@G__0x41982a = global %G__0x41982a_type zeroinitializer
@G__0x41982b = global %G__0x41982b_type zeroinitializer
@G__0x419841 = global %G__0x419841_type zeroinitializer
@G__0x419842 = global %G__0x419842_type zeroinitializer
@G__0x419857 = global %G__0x419857_type zeroinitializer
@G__0x419858 = global %G__0x419858_type zeroinitializer
@G__0x419877 = global %G__0x419877_type zeroinitializer
@G__0x419878 = global %G__0x419878_type zeroinitializer
@G__0x419892 = global %G__0x419892_type zeroinitializer
@G__0x419893 = global %G__0x419893_type zeroinitializer
@G__0x4198b7 = global %G__0x4198b7_type zeroinitializer
@G__0x4198b8 = global %G__0x4198b8_type zeroinitializer
@G__0x4198d2 = global %G__0x4198d2_type zeroinitializer
@G__0x4198d3 = global %G__0x4198d3_type zeroinitializer
@G__0x4198f8 = global %G__0x4198f8_type zeroinitializer
@G__0x4198f9 = global %G__0x4198f9_type zeroinitializer
@G__0x41991d = global %G__0x41991d_type zeroinitializer
@G__0x41991e = global %G__0x41991e_type zeroinitializer
@G__0x419936 = global %G__0x419936_type zeroinitializer
@G__0x419937 = global %G__0x419937_type zeroinitializer
@G__0x419959 = global %G__0x419959_type zeroinitializer
@G__0x41995a = global %G__0x41995a_type zeroinitializer
@G__0x41997c = global %G__0x41997c_type zeroinitializer
@G__0x41997d = global %G__0x41997d_type zeroinitializer
@G__0x41999d = global %G__0x41999d_type zeroinitializer
@G__0x41999e = global %G__0x41999e_type zeroinitializer
@G__0x4199b3 = global %G__0x4199b3_type zeroinitializer
@G__0x4199b4 = global %G__0x4199b4_type zeroinitializer
@G__0x4199d2 = global %G__0x4199d2_type zeroinitializer
@G__0x4199d3 = global %G__0x4199d3_type zeroinitializer
@G__0x4199e7 = global %G__0x4199e7_type zeroinitializer
@G__0x4199e8 = global %G__0x4199e8_type zeroinitializer
@G__0x419a05 = global %G__0x419a05_type zeroinitializer
@G__0x419a06 = global %G__0x419a06_type zeroinitializer
@G__0x419a1b = global %G__0x419a1b_type zeroinitializer
@G__0x419a1c = global %G__0x419a1c_type zeroinitializer
@G__0x419a3a = global %G__0x419a3a_type zeroinitializer
@G__0x419a49 = global %G__0x419a49_type zeroinitializer
@G__0x419a5d = global %G__0x419a5d_type zeroinitializer
@G__0x419a76 = global %G__0x419a76_type zeroinitializer
@G__0x419a8f = global %G__0x419a8f_type zeroinitializer
@G__0x419aa6 = global %G__0x419aa6_type zeroinitializer
@G__0x419ab9 = global %G__0x419ab9_type zeroinitializer
@G__0x419ad6 = global %G__0x419ad6_type zeroinitializer
@G__0x419aee = global %G__0x419aee_type zeroinitializer
@G__0x419b10 = global %G__0x419b10_type zeroinitializer
@G__0x419b28 = global %G__0x419b28_type zeroinitializer
@G__0x419b4b = global %G__0x419b4b_type zeroinitializer
@G__0x419b6d = global %G__0x419b6d_type zeroinitializer
@G__0x419b83 = global %G__0x419b83_type zeroinitializer
@G__0x419ba3 = global %G__0x419ba3_type zeroinitializer
@G__0x419bc3 = global %G__0x419bc3_type zeroinitializer
@G__0x419be1 = global %G__0x419be1_type zeroinitializer
@G__0x419bf1 = global %G__0x419bf1_type zeroinitializer
@G__0x419c06 = global %G__0x419c06_type zeroinitializer
@G__0x419c20 = global %G__0x419c20_type zeroinitializer
@G__0x419c3a = global %G__0x419c3a_type zeroinitializer
@G__0x419c52 = global %G__0x419c52_type zeroinitializer
@G__0x419c66 = global %G__0x419c66_type zeroinitializer
@G__0x419c84 = global %G__0x419c84_type zeroinitializer
@G__0x419c9d = global %G__0x419c9d_type zeroinitializer
@G__0x419cc0 = global %G__0x419cc0_type zeroinitializer
@G__0x419cd9 = global %G__0x419cd9_type zeroinitializer
@G__0x419cfd = global %G__0x419cfd_type zeroinitializer
@G__0x419d20 = global %G__0x419d20_type zeroinitializer
@G__0x419d37 = global %G__0x419d37_type zeroinitializer
@G__0x419d58 = global %G__0x419d58_type zeroinitializer
@G__0x419d79 = global %G__0x419d79_type zeroinitializer
@G__0x6220d0 = global %G__0x6220d0_type zeroinitializer
@G__0x631ad0 = global %G__0x631ad0_type zeroinitializer
@G__0x6397d0 = global %G__0x6397d0_type zeroinitializer
@G__0x6491d0 = global %G__0x6491d0_type zeroinitializer
@G__0x658bd0 = global %G__0x658bd0_type zeroinitializer
@G__0x6608d0 = global %G__0x6608d0_type zeroinitializer
@G__0x6685d0 = global %G__0x6685d0_type zeroinitializer
@G__0x66c450 = global %G__0x66c450_type zeroinitializer
@G__0x6702d0 = global %G__0x6702d0_type zeroinitializer
@G__0x672210 = global %G__0x672210_type zeroinitializer
@G__0x674150 = global %G__0x674150_type zeroinitializer

declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.ctpop.i32(i32) #0

; Function Attrs: nounwind readnone
declare double @llvm.fabs.f64(double) #0

; Function Attrs: nounwind readnone
declare double @llvm.trunc.f64(double) #0

declare extern_weak x86_64_sysvcc i64 @atof(i64)

declare extern_weak x86_64_sysvcc i64 @atoi(i64)

declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr

declare %struct.Memory* @sub_402b70._Z4fillIPaaEvT_S1_T0_(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_402bb0._Z13test_constantIa10custom_twoIaEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_402c50._Z13test_constantIa20custom_add_constantsIaEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_402cf0._Z13test_constantIa20custom_sub_constantsIaEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_402d90._Z13test_constantIa25custom_multiply_constantsIaEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_402e30._Z13test_constantIa23custom_divide_constantsIaEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_402ed0._Z13test_constantIa20custom_mod_constantsIaEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_402f70._Z13test_constantIa22custom_equal_constantsIaEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_403010._Z13test_constantIa25custom_notequal_constantsIaEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4030b0._Z13test_constantIa28custom_greaterthan_constantsIaEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_403150._Z13test_constantIa25custom_lessthan_constantsIaEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4031f0._Z13test_constantIa33custom_greaterthanequal_constantsIaEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_403290._Z13test_constantIa30custom_lessthanequal_constantsIaEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_403330._Z13test_constantIa20custom_and_constantsIaEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4033d0._Z13test_constantIa19custom_or_constantsIaEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_403470._Z13test_constantIa20custom_xor_constantsIaEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_403510._Z13test_constantIa19custom_constant_addIaEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4035b0._Z13test_constantIa28custom_multiple_constant_addIaEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_403650._Z13test_constantIa19custom_constant_subIaEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4036f0._Z13test_constantIa28custom_multiple_constant_subIaEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_403790._Z13test_constantIa24custom_constant_multiplyIaEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_403830._Z13test_constantIa33custom_multiple_constant_multiplyIaEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4038d0._Z13test_constantIa34custom_multiple_constant_multiply2IaEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_403970._Z13test_constantIa22custom_constant_divideIaEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_403a10._Z13test_constantIa31custom_multiple_constant_divideIaEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_403ab0._Z13test_constantIa32custom_multiple_constant_divide2IaEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_403b50._Z13test_constantIa30custom_multiple_constant_mixedIaEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_403bf0._Z13test_constantIa19custom_constant_andIaEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_403c90._Z13test_constantIa28custom_multiple_constant_andIaEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_403d30._Z13test_constantIa18custom_constant_orIaEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_403dd0._Z13test_constantIa27custom_multiple_constant_orIaEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_403e70._Z13test_constantIa19custom_constant_xorIaEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_403f10._Z13test_constantIa28custom_multiple_constant_xorIaEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_403fb0._Z4fillIPhhEvT_S1_T0_(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_403ff0._Z13test_constantIh10custom_twoIhEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_404090._Z13test_constantIh20custom_add_constantsIhEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_404130._Z13test_constantIh20custom_sub_constantsIhEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4041d0._Z13test_constantIh25custom_multiply_constantsIhEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_404270._Z13test_constantIh23custom_divide_constantsIhEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_404310._Z13test_constantIh20custom_mod_constantsIhEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4043b0._Z13test_constantIh22custom_equal_constantsIhEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_404450._Z13test_constantIh25custom_notequal_constantsIhEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4044f0._Z13test_constantIh28custom_greaterthan_constantsIhEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_404590._Z13test_constantIh25custom_lessthan_constantsIhEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_404630._Z13test_constantIh33custom_greaterthanequal_constantsIhEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4046d0._Z13test_constantIh30custom_lessthanequal_constantsIhEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_404770._Z13test_constantIh20custom_and_constantsIhEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_404810._Z13test_constantIh19custom_or_constantsIhEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4048b0._Z13test_constantIh20custom_xor_constantsIhEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_404950._Z13test_constantIh19custom_constant_addIhEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4049f0._Z13test_constantIh28custom_multiple_constant_addIhEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_404a90._Z13test_constantIh19custom_constant_subIhEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_404b30._Z13test_constantIh28custom_multiple_constant_subIhEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_404bd0._Z13test_constantIh24custom_constant_multiplyIhEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_404c70._Z13test_constantIh33custom_multiple_constant_multiplyIhEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_404d10._Z13test_constantIh34custom_multiple_constant_multiply2IhEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_404db0._Z13test_constantIh22custom_constant_divideIhEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_404e50._Z13test_constantIh31custom_multiple_constant_divideIhEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_404ef0._Z13test_constantIh32custom_multiple_constant_divide2IhEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_404f90._Z13test_constantIh30custom_multiple_constant_mixedIhEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_405030._Z13test_constantIh19custom_constant_andIhEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4050d0._Z13test_constantIh28custom_multiple_constant_andIhEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_405170._Z13test_constantIh18custom_constant_orIhEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_405210._Z13test_constantIh27custom_multiple_constant_orIhEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4052b0._Z13test_constantIh19custom_constant_xorIhEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_405350._Z13test_constantIh28custom_multiple_constant_xorIhEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4053f0._Z4fillIPssEvT_S1_T0_(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_405430._Z13test_constantIs10custom_twoIsEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4054e0._Z13test_constantIs20custom_add_constantsIsEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_405590._Z13test_constantIs20custom_sub_constantsIsEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_405640._Z13test_constantIs25custom_multiply_constantsIsEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4056f0._Z13test_constantIs23custom_divide_constantsIsEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4057a0._Z13test_constantIs20custom_mod_constantsIsEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_405850._Z13test_constantIs22custom_equal_constantsIsEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_405900._Z13test_constantIs25custom_notequal_constantsIsEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4059b0._Z13test_constantIs28custom_greaterthan_constantsIsEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_405a60._Z13test_constantIs25custom_lessthan_constantsIsEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_405b10._Z13test_constantIs33custom_greaterthanequal_constantsIsEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_405bc0._Z13test_constantIs30custom_lessthanequal_constantsIsEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_405c70._Z13test_constantIs20custom_and_constantsIsEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_405d20._Z13test_constantIs19custom_or_constantsIsEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_405dd0._Z13test_constantIs20custom_xor_constantsIsEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_405e80._Z13test_constantIs19custom_constant_addIsEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_405f30._Z13test_constantIs28custom_multiple_constant_addIsEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_405fe0._Z13test_constantIs19custom_constant_subIsEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_406090._Z13test_constantIs28custom_multiple_constant_subIsEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_406140._Z13test_constantIs24custom_constant_multiplyIsEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4061f0._Z13test_constantIs33custom_multiple_constant_multiplyIsEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4062a0._Z13test_constantIs34custom_multiple_constant_multiply2IsEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_406350._Z13test_constantIs22custom_constant_divideIsEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_406400._Z13test_constantIs31custom_multiple_constant_divideIsEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4064b0._Z13test_constantIs32custom_multiple_constant_divide2IsEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_406560._Z13test_constantIs30custom_multiple_constant_mixedIsEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_406610._Z13test_constantIs19custom_constant_andIsEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4066c0._Z13test_constantIs28custom_multiple_constant_andIsEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_406770._Z13test_constantIs18custom_constant_orIsEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_406820._Z13test_constantIs27custom_multiple_constant_orIsEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4068d0._Z13test_constantIs19custom_constant_xorIsEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_406980._Z13test_constantIs28custom_multiple_constant_xorIsEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_406a30._Z4fillIPttEvT_S1_T0_(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_406a70._Z13test_constantIt10custom_twoItEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_406b20._Z13test_constantIt20custom_add_constantsItEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_406bd0._Z13test_constantIt20custom_sub_constantsItEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_406c80._Z13test_constantIt25custom_multiply_constantsItEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_406d30._Z13test_constantIt23custom_divide_constantsItEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_406de0._Z13test_constantIt20custom_mod_constantsItEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_406e90._Z13test_constantIt22custom_equal_constantsItEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_406f40._Z13test_constantIt25custom_notequal_constantsItEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_406ff0._Z13test_constantIt28custom_greaterthan_constantsItEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4070a0._Z13test_constantIt25custom_lessthan_constantsItEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_407150._Z13test_constantIt33custom_greaterthanequal_constantsItEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_407200._Z13test_constantIt30custom_lessthanequal_constantsItEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4072b0._Z13test_constantIt20custom_and_constantsItEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_407360._Z13test_constantIt19custom_or_constantsItEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_407410._Z13test_constantIt20custom_xor_constantsItEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4074c0._Z13test_constantIt19custom_constant_addItEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_407570._Z13test_constantIt28custom_multiple_constant_addItEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_407620._Z13test_constantIt19custom_constant_subItEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4076d0._Z13test_constantIt28custom_multiple_constant_subItEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_407780._Z13test_constantIt24custom_constant_multiplyItEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_407830._Z13test_constantIt33custom_multiple_constant_multiplyItEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4078e0._Z13test_constantIt34custom_multiple_constant_multiply2ItEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_407990._Z13test_constantIt22custom_constant_divideItEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_407a40._Z13test_constantIt31custom_multiple_constant_divideItEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_407af0._Z13test_constantIt32custom_multiple_constant_divide2ItEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_407ba0._Z13test_constantIt30custom_multiple_constant_mixedItEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_407c50._Z13test_constantIt19custom_constant_andItEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_407d00._Z13test_constantIt28custom_multiple_constant_andItEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_407db0._Z13test_constantIt18custom_constant_orItEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_407e60._Z13test_constantIt27custom_multiple_constant_orItEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_407f10._Z13test_constantIt19custom_constant_xorItEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_407fc0._Z13test_constantIt28custom_multiple_constant_xorItEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_408070._Z4fillIPiiEvT_S1_T0_(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4080b0._Z13test_constantIi10custom_twoIiEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_408150._Z13test_constantIi20custom_add_constantsIiEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4081f0._Z13test_constantIi20custom_sub_constantsIiEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_408290._Z13test_constantIi25custom_multiply_constantsIiEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_408330._Z13test_constantIi23custom_divide_constantsIiEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4083d0._Z13test_constantIi20custom_mod_constantsIiEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_408470._Z13test_constantIi22custom_equal_constantsIiEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_408510._Z13test_constantIi25custom_notequal_constantsIiEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4085b0._Z13test_constantIi28custom_greaterthan_constantsIiEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_408650._Z13test_constantIi25custom_lessthan_constantsIiEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4086f0._Z13test_constantIi33custom_greaterthanequal_constantsIiEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_408790._Z13test_constantIi30custom_lessthanequal_constantsIiEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_408830._Z13test_constantIi20custom_and_constantsIiEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4088d0._Z13test_constantIi19custom_or_constantsIiEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_408970._Z13test_constantIi20custom_xor_constantsIiEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_408a10._Z13test_constantIi19custom_constant_addIiEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_408ab0._Z13test_constantIi28custom_multiple_constant_addIiEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_408b50._Z13test_constantIi19custom_constant_subIiEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_408bf0._Z13test_constantIi28custom_multiple_constant_subIiEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_408c90._Z13test_constantIi24custom_constant_multiplyIiEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_408d30._Z13test_constantIi33custom_multiple_constant_multiplyIiEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_408dd0._Z13test_constantIi34custom_multiple_constant_multiply2IiEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_408e70._Z13test_constantIi22custom_constant_divideIiEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_408f10._Z13test_constantIi31custom_multiple_constant_divideIiEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_408fb0._Z13test_constantIi32custom_multiple_constant_divide2IiEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_409050._Z13test_constantIi30custom_multiple_constant_mixedIiEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4090f0._Z13test_constantIi19custom_constant_andIiEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_409190._Z13test_constantIi28custom_multiple_constant_andIiEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_409230._Z13test_constantIi18custom_constant_orIiEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4092d0._Z13test_constantIi27custom_multiple_constant_orIiEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_409370._Z13test_constantIi19custom_constant_xorIiEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_409410._Z13test_constantIi28custom_multiple_constant_xorIiEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4094b0._Z4fillIPjjEvT_S1_T0_(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4094f0._Z13test_constantIj10custom_twoIjEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_409590._Z13test_constantIj20custom_add_constantsIjEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_409630._Z13test_constantIj20custom_sub_constantsIjEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4096d0._Z13test_constantIj25custom_multiply_constantsIjEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_409770._Z13test_constantIj23custom_divide_constantsIjEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_409810._Z13test_constantIj20custom_mod_constantsIjEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4098b0._Z13test_constantIj22custom_equal_constantsIjEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_409950._Z13test_constantIj25custom_notequal_constantsIjEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4099f0._Z13test_constantIj28custom_greaterthan_constantsIjEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_409a90._Z13test_constantIj25custom_lessthan_constantsIjEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_409b30._Z13test_constantIj33custom_greaterthanequal_constantsIjEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_409bd0._Z13test_constantIj30custom_lessthanequal_constantsIjEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_409c70._Z13test_constantIj20custom_and_constantsIjEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_409d10._Z13test_constantIj19custom_or_constantsIjEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_409db0._Z13test_constantIj20custom_xor_constantsIjEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_409e50._Z13test_constantIj19custom_constant_addIjEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_409ef0._Z13test_constantIj28custom_multiple_constant_addIjEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_409f90._Z13test_constantIj19custom_constant_subIjEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40a030._Z13test_constantIj28custom_multiple_constant_subIjEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40a0d0._Z13test_constantIj24custom_constant_multiplyIjEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40a170._Z13test_constantIj33custom_multiple_constant_multiplyIjEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40a210._Z13test_constantIj34custom_multiple_constant_multiply2IjEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40a2b0._Z13test_constantIj22custom_constant_divideIjEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40a350._Z13test_constantIj31custom_multiple_constant_divideIjEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40a3f0._Z13test_constantIj32custom_multiple_constant_divide2IjEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40a490._Z13test_constantIj30custom_multiple_constant_mixedIjEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40a530._Z13test_constantIj19custom_constant_andIjEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40a5d0._Z13test_constantIj28custom_multiple_constant_andIjEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40a670._Z13test_constantIj18custom_constant_orIjEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40a710._Z13test_constantIj27custom_multiple_constant_orIjEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40a7b0._Z13test_constantIj19custom_constant_xorIjEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40a850._Z13test_constantIj28custom_multiple_constant_xorIjEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40a8f0._Z4fillIPllEvT_S1_T0_(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40a930._Z13test_constantIl10custom_twoIlEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40a9d0._Z13test_constantIl20custom_add_constantsIlEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40aa70._Z13test_constantIl20custom_sub_constantsIlEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40ab10._Z13test_constantIl25custom_multiply_constantsIlEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40abb0._Z13test_constantIl23custom_divide_constantsIlEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40ac50._Z13test_constantIl20custom_mod_constantsIlEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40acf0._Z13test_constantIl22custom_equal_constantsIlEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40ad90._Z13test_constantIl25custom_notequal_constantsIlEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40ae30._Z13test_constantIl28custom_greaterthan_constantsIlEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40aed0._Z13test_constantIl25custom_lessthan_constantsIlEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40af70._Z13test_constantIl33custom_greaterthanequal_constantsIlEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40b010._Z13test_constantIl30custom_lessthanequal_constantsIlEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40b0b0._Z13test_constantIl20custom_and_constantsIlEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40b150._Z13test_constantIl19custom_or_constantsIlEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40b1f0._Z13test_constantIl20custom_xor_constantsIlEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40b290._Z13test_constantIl19custom_constant_addIlEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40b330._Z13test_constantIl28custom_multiple_constant_addIlEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40b3d0._Z13test_constantIl19custom_constant_subIlEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40b470._Z13test_constantIl28custom_multiple_constant_subIlEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40b510._Z13test_constantIl24custom_constant_multiplyIlEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40b5b0._Z13test_constantIl33custom_multiple_constant_multiplyIlEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40b650._Z13test_constantIl34custom_multiple_constant_multiply2IlEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40b6f0._Z13test_constantIl22custom_constant_divideIlEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40b790._Z13test_constantIl31custom_multiple_constant_divideIlEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40b830._Z13test_constantIl32custom_multiple_constant_divide2IlEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40b8d0._Z13test_constantIl30custom_multiple_constant_mixedIlEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40b970._Z13test_constantIl19custom_constant_andIlEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40ba10._Z13test_constantIl28custom_multiple_constant_andIlEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40bab0._Z13test_constantIl18custom_constant_orIlEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40bb50._Z13test_constantIl27custom_multiple_constant_orIlEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40bbf0._Z13test_constantIl19custom_constant_xorIlEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40bc90._Z13test_constantIl28custom_multiple_constant_xorIlEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40bd30._Z4fillIPmmEvT_S1_T0_(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40bd70._Z13test_constantIm10custom_twoImEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40be10._Z13test_constantIm20custom_add_constantsImEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40beb0._Z13test_constantIm20custom_sub_constantsImEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40bf50._Z13test_constantIm25custom_multiply_constantsImEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40bff0._Z13test_constantIm23custom_divide_constantsImEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40c090._Z13test_constantIm20custom_mod_constantsImEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40c130._Z13test_constantIm22custom_equal_constantsImEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40c1d0._Z13test_constantIm25custom_notequal_constantsImEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40c270._Z13test_constantIm28custom_greaterthan_constantsImEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40c310._Z13test_constantIm25custom_lessthan_constantsImEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40c3b0._Z13test_constantIm33custom_greaterthanequal_constantsImEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40c450._Z13test_constantIm30custom_lessthanequal_constantsImEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40c4f0._Z13test_constantIm20custom_and_constantsImEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40c590._Z13test_constantIm19custom_or_constantsImEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40c630._Z13test_constantIm20custom_xor_constantsImEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40c6d0._Z13test_constantIm19custom_constant_addImEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40c770._Z13test_constantIm28custom_multiple_constant_addImEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40c810._Z13test_constantIm19custom_constant_subImEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40c8b0._Z13test_constantIm28custom_multiple_constant_subImEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40c950._Z13test_constantIm24custom_constant_multiplyImEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40c9f0._Z13test_constantIm33custom_multiple_constant_multiplyImEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40ca90._Z13test_constantIm34custom_multiple_constant_multiply2ImEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40cb30._Z13test_constantIm22custom_constant_divideImEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40cbd0._Z13test_constantIm31custom_multiple_constant_divideImEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40cc70._Z13test_constantIm32custom_multiple_constant_divide2ImEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40cd10._Z13test_constantIm30custom_multiple_constant_mixedImEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40cdb0._Z13test_constantIm19custom_constant_andImEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40ce50._Z13test_constantIm28custom_multiple_constant_andImEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40cef0._Z13test_constantIm18custom_constant_orImEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40cf90._Z13test_constantIm27custom_multiple_constant_orImEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40d030._Z13test_constantIm19custom_constant_xorImEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40d0d0._Z13test_constantIm28custom_multiple_constant_xorImEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40d170._Z4fillIPffEvT_S1_T0_(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40d1b0._Z13test_constantIf10custom_twoIfEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40d250._Z13test_constantIf20custom_add_constantsIfEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40d2f0._Z13test_constantIf20custom_sub_constantsIfEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40d390._Z13test_constantIf25custom_multiply_constantsIfEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40d430._Z13test_constantIf23custom_divide_constantsIfEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40d4d0._Z13test_constantIf19custom_constant_addIfEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40d570._Z13test_constantIf28custom_multiple_constant_addIfEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40d610._Z13test_constantIf19custom_constant_subIfEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40d6b0._Z13test_constantIf28custom_multiple_constant_subIfEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40d750._Z13test_constantIf24custom_constant_multiplyIfEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40d7f0._Z13test_constantIf33custom_multiple_constant_multiplyIfEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40d890._Z13test_constantIf34custom_multiple_constant_multiply2IfEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40d930._Z13test_constantIf22custom_constant_divideIfEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40d9d0._Z13test_constantIf31custom_multiple_constant_divideIfEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40da70._Z13test_constantIf32custom_multiple_constant_divide2IfEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40db10._Z13test_constantIf30custom_multiple_constant_mixedIfEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40dbb0._Z4fillIPddEvT_S1_T0_(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40dbf0._Z13test_constantId10custom_twoIdEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40dc90._Z13test_constantId20custom_add_constantsIdEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40dd30._Z13test_constantId20custom_sub_constantsIdEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40ddd0._Z13test_constantId25custom_multiply_constantsIdEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40de70._Z13test_constantId23custom_divide_constantsIdEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40df10._Z13test_constantId19custom_constant_addIdEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40dfb0._Z13test_constantId28custom_multiple_constant_addIdEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40e050._Z13test_constantId19custom_constant_subIdEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40e0f0._Z13test_constantId28custom_multiple_constant_subIdEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40e190._Z13test_constantId24custom_constant_multiplyIdEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40e230._Z13test_constantId33custom_multiple_constant_multiplyIdEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40e2d0._Z13test_constantId34custom_multiple_constant_multiply2IdEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40e370._Z13test_constantId22custom_constant_divideIdEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40e410._Z13test_constantId31custom_multiple_constant_divideIdEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40e4b0._Z13test_constantId32custom_multiple_constant_divide2IdEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40e550._Z13test_constantId30custom_multiple_constant_mixedIdEEvPT_iPKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

; Function Attrs: alwaysinline
define %struct.Memory* @main(%struct.State* noalias, i64, %struct.Memory* noalias) local_unnamed_addr #1 {
entry:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP.i, align 8
  %5 = add i64 %1, 1
  store i64 %5, i64* %3, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %4, i64* %9, align 8
  %10 = load i64, i64* %3, align 8
  store i64 %8, i64* %RBP.i, align 8
  %11 = add i64 %7, -152
  store i64 %11, i64* %6, align 8
  %12 = icmp ult i64 %8, 144
  %13 = zext i1 %12 to i8
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13, i8* %14, align 1
  %15 = trunc i64 %11 to i32
  %16 = and i32 %15, 255
  %17 = tail call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = xor i64 %8, 16
  %23 = xor i64 %22, %11
  %24 = lshr i64 %23, 4
  %25 = trunc i64 %24 to i8
  %26 = and i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %26, i8* %27, align 1
  %28 = icmp eq i64 %11, 0
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %29, i8* %30, align 1
  %31 = lshr i64 %11, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %8, 63
  %35 = xor i64 %31, %34
  %36 = add nuw nsw i64 %35, %34
  %37 = icmp eq i64 %36, 2
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %38, i8* %39, align 1
  %40 = add i64 %7, -12
  %41 = add i64 %10, 17
  store i64 %41, i64* %3, align 8
  %42 = inttoptr i64 %40 to i32*
  store i32 0, i32* %42, align 4
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0
  %EDI.i = bitcast %union.anon* %43 to i32*
  %44 = load i64, i64* %RBP.i, align 8
  %45 = add i64 %44, -8
  %46 = load i32, i32* %EDI.i, align 4
  %47 = load i64, i64* %3, align 8
  %48 = add i64 %47, 3
  store i64 %48, i64* %3, align 8
  %49 = inttoptr i64 %45 to i32*
  store i32 %46, i32* %49, align 4
  %RSI.i3626 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %50 = load i64, i64* %RBP.i, align 8
  %51 = add i64 %50, -16
  %52 = load i64, i64* %RSI.i3626, align 8
  %53 = load i64, i64* %3, align 8
  %54 = add i64 %53, 4
  store i64 %54, i64* %3, align 8
  %55 = inttoptr i64 %51 to i64*
  store i64 %52, i64* %55, align 8
  %56 = load i64, i64* %RBP.i, align 8
  %57 = add i64 %56, -8
  %58 = load i64, i64* %3, align 8
  %59 = add i64 %58, 4
  store i64 %59, i64* %3, align 8
  %60 = inttoptr i64 %57 to i32*
  %61 = load i32, i32* %60, align 4
  %62 = add i32 %61, -1
  %63 = icmp eq i32 %61, 0
  %64 = zext i1 %63 to i8
  store i8 %64, i8* %14, align 1
  %65 = and i32 %62, 255
  %66 = tail call i32 @llvm.ctpop.i32(i32 %65)
  %67 = trunc i32 %66 to i8
  %68 = and i8 %67, 1
  %69 = xor i8 %68, 1
  store i8 %69, i8* %21, align 1
  %70 = xor i32 %62, %61
  %71 = lshr i32 %70, 4
  %72 = trunc i32 %71 to i8
  %73 = and i8 %72, 1
  store i8 %73, i8* %27, align 1
  %74 = icmp eq i32 %62, 0
  %75 = zext i1 %74 to i8
  store i8 %75, i8* %30, align 1
  %76 = lshr i32 %62, 31
  %77 = trunc i32 %76 to i8
  store i8 %77, i8* %33, align 1
  %78 = lshr i32 %61, 31
  %79 = xor i32 %76, %78
  %80 = add nuw nsw i32 %79, %78
  %81 = icmp eq i32 %80, 2
  %82 = zext i1 %81 to i8
  store i8 %82, i8* %39, align 1
  %83 = icmp ne i8 %77, 0
  %84 = xor i1 %83, %81
  %85 = or i1 %74, %84
  %.v = select i1 %85, i64 30, i64 10
  %86 = add i64 %58, %.v
  store i64 %86, i64* %3, align 8
  br i1 %85, label %block_.L_400f27, label %block_400f13

block_400f13:                                     ; preds = %entry
  %87 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %RAX.i3647 = getelementptr inbounds %union.anon, %union.anon* %87, i64 0, i32 0
  %88 = add i64 %56, -16
  %89 = add i64 %86, 4
  store i64 %89, i64* %3, align 8
  %90 = inttoptr i64 %88 to i64*
  %91 = load i64, i64* %90, align 8
  store i64 %91, i64* %RAX.i3647, align 8
  %RDI.i3645 = getelementptr inbounds %union.anon, %union.anon* %43, i64 0, i32 0
  %92 = add i64 %91, 8
  %93 = add i64 %86, 8
  store i64 %93, i64* %3, align 8
  %94 = inttoptr i64 %92 to i64*
  %95 = load i64, i64* %94, align 8
  store i64 %95, i64* %RDI.i3645, align 8
  %96 = add i64 %86, -2051
  %97 = add i64 %86, 13
  %98 = load i64, i64* %6, align 8
  %99 = add i64 %98, -8
  %100 = inttoptr i64 %99 to i64*
  store i64 %97, i64* %100, align 8
  store i64 %99, i64* %6, align 8
  store i64 %96, i64* %3, align 8
  %101 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64)* @atoi to i64), %struct.Memory* %2)
  %EAX.i3639 = bitcast %union.anon* %87 to i32*
  %102 = load i32, i32* %EAX.i3639, align 4
  %103 = load i64, i64* %3, align 8
  %104 = add i64 %103, 7
  store i64 %104, i64* %3, align 8
  store i32 %102, i32* bitcast (%G_0x622080_type* @G_0x622080 to i32*), align 8
  %.pre = load i64, i64* %RBP.i, align 8
  br label %block_.L_400f27

block_.L_400f27:                                  ; preds = %block_400f13, %entry
  %105 = phi i64 [ %86, %entry ], [ %104, %block_400f13 ]
  %106 = phi i64 [ %56, %entry ], [ %.pre, %block_400f13 ]
  %MEMORY.0 = phi %struct.Memory* [ %2, %entry ], [ %101, %block_400f13 ]
  %107 = add i64 %106, -8
  %108 = add i64 %105, 4
  store i64 %108, i64* %3, align 8
  %109 = inttoptr i64 %107 to i32*
  %110 = load i32, i32* %109, align 4
  %111 = add i32 %110, -2
  %112 = icmp ult i32 %110, 2
  %113 = zext i1 %112 to i8
  store i8 %113, i8* %14, align 1
  %114 = and i32 %111, 255
  %115 = tail call i32 @llvm.ctpop.i32(i32 %114)
  %116 = trunc i32 %115 to i8
  %117 = and i8 %116, 1
  %118 = xor i8 %117, 1
  store i8 %118, i8* %21, align 1
  %119 = xor i32 %111, %110
  %120 = lshr i32 %119, 4
  %121 = trunc i32 %120 to i8
  %122 = and i8 %121, 1
  store i8 %122, i8* %27, align 1
  %123 = icmp eq i32 %111, 0
  %124 = zext i1 %123 to i8
  store i8 %124, i8* %30, align 1
  %125 = lshr i32 %111, 31
  %126 = trunc i32 %125 to i8
  store i8 %126, i8* %33, align 1
  %127 = lshr i32 %110, 31
  %128 = xor i32 %125, %127
  %129 = add nuw nsw i32 %128, %127
  %130 = icmp eq i32 %129, 2
  %131 = zext i1 %130 to i8
  store i8 %131, i8* %39, align 1
  %132 = icmp ne i8 %126, 0
  %133 = xor i1 %132, %130
  %134 = or i1 %123, %133
  %.v18 = select i1 %134, i64 32, i64 10
  %135 = add i64 %105, %.v18
  store i64 %135, i64* %3, align 8
  br i1 %134, label %block_.L_400f27.block_.L_400f47_crit_edge, label %block_400f31

block_.L_400f27.block_.L_400f47_crit_edge:        ; preds = %block_.L_400f27
  %.pre16 = getelementptr inbounds %union.anon, %union.anon* %43, i64 0, i32 0
  br label %block_.L_400f47

block_400f31:                                     ; preds = %block_.L_400f27
  %RAX.i3633 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %136 = add i64 %106, -16
  %137 = add i64 %135, 4
  store i64 %137, i64* %3, align 8
  %138 = inttoptr i64 %136 to i64*
  %139 = load i64, i64* %138, align 8
  store i64 %139, i64* %RAX.i3633, align 8
  %RDI.i3631 = getelementptr inbounds %union.anon, %union.anon* %43, i64 0, i32 0
  %140 = add i64 %139, 16
  %141 = add i64 %135, 8
  store i64 %141, i64* %3, align 8
  %142 = inttoptr i64 %140 to i64*
  %143 = load i64, i64* %142, align 8
  store i64 %143, i64* %RDI.i3631, align 8
  %144 = add i64 %135, -2193
  %145 = add i64 %135, 13
  %146 = load i64, i64* %6, align 8
  %147 = add i64 %146, -8
  %148 = inttoptr i64 %147 to i64*
  store i64 %145, i64* %148, align 8
  store i64 %147, i64* %6, align 8
  store i64 %144, i64* %3, align 8
  %149 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64)* @atof to i64), %struct.Memory* %MEMORY.0)
  %150 = load i64, i64* %3, align 8
  %151 = add i64 %150, 9
  store i64 %151, i64* %3, align 8
  %152 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 0
  %153 = load i64, i64* %152, align 1
  store i64 %153, i64* bitcast (%G_0x622088_type* @G_0x622088 to i64*), align 8
  %.pre2 = load i64, i64* %RBP.i, align 8
  br label %block_.L_400f47

block_.L_400f47:                                  ; preds = %block_.L_400f27.block_.L_400f47_crit_edge, %block_400f31
  %RDI.i3611.pre-phi = phi i64* [ %.pre16, %block_.L_400f27.block_.L_400f47_crit_edge ], [ %RDI.i3631, %block_400f31 ]
  %154 = phi i64 [ %106, %block_.L_400f27.block_.L_400f47_crit_edge ], [ %.pre2, %block_400f31 ]
  %155 = phi i64 [ %135, %block_.L_400f27.block_.L_400f47_crit_edge ], [ %151, %block_400f31 ]
  %MEMORY.1 = phi %struct.Memory* [ %MEMORY.0, %block_.L_400f27.block_.L_400f47_crit_edge ], [ %149, %block_400f31 ]
  %156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %RAX.i3622 = getelementptr inbounds %union.anon, %union.anon* %156, i64 0, i32 0
  store i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64* %RAX.i3622, align 8
  %RCX.i3620 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  store i64 add (i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64 64000), i64* %RCX.i3620, align 8
  store i8 zext (i1 or (i1 icmp ult (i64 add (i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64 64000), i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64)), i1 icmp ult (i64 add (i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64 64000), i64 64000)) to i8), i8* %14, align 1
  %157 = tail call i32 @llvm.ctpop.i32(i32 and (i32 trunc (i64 add (i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64 64000) to i32), i32 255))
  %158 = trunc i32 %157 to i8
  %159 = and i8 %158, 1
  %160 = xor i8 %159, 1
  store i8 %160, i8* %21, align 1
  store i8 and (i8 trunc (i64 lshr (i64 xor (i64 xor (i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64 64000), i64 add (i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64 64000)), i64 4) to i8), i8 1), i8* %27, align 1
  store i8 zext (i1 icmp eq (i64 add (i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64 64000), i64 0) to i8), i8* %30, align 1
  store i8 trunc (i64 lshr (i64 add (i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64 64000), i64 63) to i8), i8* %33, align 1
  store i8 zext (i1 icmp eq (i64 add (i64 xor (i64 lshr (i64 add (i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64 64000), i64 63), i64 lshr (i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64 63)), i64 lshr (i64 add (i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64 64000), i64 63)), i64 2) to i8), i8* %39, align 1
  %RDX.i3615 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %161 = add i64 %155, add (i64 ptrtoint (%G_0x221125__rip__type* @G_0x221125__rip_ to i64), i64 20)
  %162 = add i64 %155, 28
  store i64 %162, i64* %3, align 8
  %163 = inttoptr i64 %161 to double*
  %164 = load double, double* %163, align 8
  %165 = tail call double @llvm.trunc.f64(double %164)
  %166 = tail call double @llvm.fabs.f64(double %165)
  %167 = fcmp ogt double %166, 0x41DFFFFFFFC00000
  %168 = fptosi double %165 to i32
  %169 = zext i32 %168 to i64
  %170 = select i1 %167, i64 2147483648, i64 %169
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x672210_type* @G__0x672210 to i64), i64 4294967295) to i32) to i64), i64* %RDI.i3611.pre-phi, align 8
  %171 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 17, i32 0
  %R8B.i3608 = bitcast %union.anon* %171 to i8*
  %172 = trunc i64 %170 to i8
  store i8 %172, i8* %R8B.i3608, align 1
  %sext = shl i64 %170, 56
  %173 = ashr exact i64 %sext, 56
  %174 = and i64 %173, 4294967295
  store i64 %174, i64* %RDX.i3615, align 8
  store i64 and (i64 ptrtoint (%G__0x674150_type* @G__0x674150 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  %175 = add i64 %154, -24
  %176 = add i64 %155, 51
  store i64 %176, i64* %3, align 8
  %177 = inttoptr i64 %175 to i64*
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x672210_type* @G__0x672210 to i64), i64 4294967295) to i32) to i64), i64* %177, align 8
  %178 = load i64, i64* %RBP.i, align 8
  %179 = add i64 %178, -32
  %180 = load i64, i64* %RAX.i3622, align 8
  %181 = load i64, i64* %3, align 8
  %182 = add i64 %181, 4
  store i64 %182, i64* %3, align 8
  %183 = inttoptr i64 %179 to i64*
  store i64 %180, i64* %183, align 8
  %184 = load i64, i64* %RBP.i, align 8
  %185 = add i64 %184, -40
  %186 = load i64, i64* %RCX.i3620, align 8
  %187 = load i64, i64* %3, align 8
  %188 = add i64 %187, 4
  store i64 %188, i64* %3, align 8
  %189 = inttoptr i64 %185 to i64*
  store i64 %186, i64* %189, align 8
  %190 = load i64, i64* %3, align 8
  %191 = add i64 %190, 7150
  %192 = add i64 %190, 5
  %193 = load i64, i64* %6, align 8
  %194 = add i64 %193, -8
  %195 = inttoptr i64 %194 to i64*
  store i64 %192, i64* %195, align 8
  store i64 %194, i64* %6, align 8
  store i64 %191, i64* %3, align 8
  %call2_400f82 = tail call %struct.Memory* @sub_402b70._Z4fillIPaaEvT_S1_T0_(%struct.State* nonnull %0, i64 %191, %struct.Memory* %MEMORY.1)
  %196 = load i64, i64* %3, align 8
  %197 = add i64 %196, ptrtoint (%G_0x2210f3__rip__type* @G_0x2210f3__rip_ to i64)
  %198 = add i64 %196, 6
  store i64 %198, i64* %3, align 8
  %199 = inttoptr i64 %197 to i32*
  %200 = load i32, i32* %199, align 4
  %201 = add i64 %196, add (i64 ptrtoint (%G_0x22112d__rip__type* @G_0x22112d__rip_ to i64), i64 6)
  %202 = add i64 %196, 12
  store i64 %202, i64* %3, align 8
  %203 = inttoptr i64 %201 to i32*
  store i32 %200, i32* %203, align 4
  %204 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x418c33_type* @G__0x418c33 to i64), i64 4294967295), i64* %RDX.i3615, align 8
  %205 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0
  %R9D.i3585 = bitcast %union.anon* %205 to i32*
  %206 = getelementptr inbounds %union.anon, %union.anon* %205, i64 0, i32 0
  store i64 8000, i64* %206, align 8
  %207 = load i64, i64* %RBP.i, align 8
  %208 = add i64 %207, -24
  %209 = add i64 %204, 15
  store i64 %209, i64* %3, align 8
  %210 = inttoptr i64 %208 to i64*
  %211 = load i64, i64* %210, align 8
  store i64 %211, i64* %RDI.i3611.pre-phi, align 8
  store i64 8000, i64* %RSI.i3626, align 8
  %212 = add i64 %207, -44
  %213 = add i64 %204, 22
  store i64 %213, i64* %3, align 8
  %214 = inttoptr i64 %212 to i32*
  store i32 8000, i32* %214, align 4
  %215 = load i64, i64* %3, align 8
  %216 = add i64 %215, 7175
  %217 = add i64 %215, 5
  %218 = load i64, i64* %6, align 8
  %219 = add i64 %218, -8
  %220 = inttoptr i64 %219 to i64*
  store i64 %217, i64* %220, align 8
  store i64 %219, i64* %6, align 8
  store i64 %216, i64* %3, align 8
  %call2_400fa9 = tail call %struct.Memory* @sub_402bb0._Z13test_constantIa10custom_twoIaEEvPT_iPKc(%struct.State* nonnull %0, i64 %216, %struct.Memory* %call2_400f82)
  %221 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x418c44_type* @G__0x418c44 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418c44_type* @G__0x418c44 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %222 = load i64, i64* %RBP.i, align 8
  %223 = add i64 %222, -24
  %224 = add i64 %221, 11
  store i64 %224, i64* %3, align 8
  %225 = inttoptr i64 %223 to i64*
  %226 = load i64, i64* %225, align 8
  store i64 %226, i64* %RDI.i3611.pre-phi, align 8
  %227 = add i64 %222, -44
  %228 = add i64 %221, 14
  store i64 %228, i64* %3, align 8
  %229 = inttoptr i64 %227 to i32*
  %230 = load i32, i32* %229, align 4
  %231 = zext i32 %230 to i64
  store i64 %231, i64* %RSI.i3626, align 8
  %232 = add i64 %221, 7330
  %233 = add i64 %221, 19
  %234 = load i64, i64* %6, align 8
  %235 = add i64 %234, -8
  %236 = inttoptr i64 %235 to i64*
  store i64 %233, i64* %236, align 8
  store i64 %235, i64* %6, align 8
  store i64 %232, i64* %3, align 8
  %call2_400fbc = tail call %struct.Memory* @sub_402c50._Z13test_constantIa20custom_add_constantsIaEEvPT_iPKc(%struct.State* nonnull %0, i64 %232, %struct.Memory* %call2_400fa9)
  %237 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x418c5a_type* @G__0x418c5a to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418c5a_type* @G__0x418c5a to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %238 = load i64, i64* %RBP.i, align 8
  %239 = add i64 %238, -24
  %240 = add i64 %237, 11
  store i64 %240, i64* %3, align 8
  %241 = inttoptr i64 %239 to i64*
  %242 = load i64, i64* %241, align 8
  store i64 %242, i64* %RDI.i3611.pre-phi, align 8
  %243 = add i64 %238, -44
  %244 = add i64 %237, 14
  store i64 %244, i64* %3, align 8
  %245 = inttoptr i64 %243 to i32*
  %246 = load i32, i32* %245, align 4
  %247 = zext i32 %246 to i64
  store i64 %247, i64* %RSI.i3626, align 8
  %248 = add i64 %237, 7471
  %249 = add i64 %237, 19
  %250 = load i64, i64* %6, align 8
  %251 = add i64 %250, -8
  %252 = inttoptr i64 %251 to i64*
  store i64 %249, i64* %252, align 8
  store i64 %251, i64* %6, align 8
  store i64 %248, i64* %3, align 8
  %call2_400fcf = tail call %struct.Memory* @sub_402cf0._Z13test_constantIa20custom_sub_constantsIaEEvPT_iPKc(%struct.State* nonnull %0, i64 %248, %struct.Memory* %call2_400fbc)
  %253 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x418c75_type* @G__0x418c75 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418c75_type* @G__0x418c75 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %254 = load i64, i64* %RBP.i, align 8
  %255 = add i64 %254, -24
  %256 = add i64 %253, 11
  store i64 %256, i64* %3, align 8
  %257 = inttoptr i64 %255 to i64*
  %258 = load i64, i64* %257, align 8
  store i64 %258, i64* %RDI.i3611.pre-phi, align 8
  %259 = add i64 %254, -44
  %260 = add i64 %253, 14
  store i64 %260, i64* %3, align 8
  %261 = inttoptr i64 %259 to i32*
  %262 = load i32, i32* %261, align 4
  %263 = zext i32 %262 to i64
  store i64 %263, i64* %RSI.i3626, align 8
  %264 = add i64 %253, 7612
  %265 = add i64 %253, 19
  %266 = load i64, i64* %6, align 8
  %267 = add i64 %266, -8
  %268 = inttoptr i64 %267 to i64*
  store i64 %265, i64* %268, align 8
  store i64 %267, i64* %6, align 8
  store i64 %264, i64* %3, align 8
  %call2_400fe2 = tail call %struct.Memory* @sub_402d90._Z13test_constantIa25custom_multiply_constantsIaEEvPT_iPKc(%struct.State* nonnull %0, i64 %264, %struct.Memory* %call2_400fcf)
  %269 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x418c90_type* @G__0x418c90 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418c90_type* @G__0x418c90 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %270 = load i64, i64* %RBP.i, align 8
  %271 = add i64 %270, -24
  %272 = add i64 %269, 11
  store i64 %272, i64* %3, align 8
  %273 = inttoptr i64 %271 to i64*
  %274 = load i64, i64* %273, align 8
  store i64 %274, i64* %RDI.i3611.pre-phi, align 8
  %275 = add i64 %270, -44
  %276 = add i64 %269, 14
  store i64 %276, i64* %3, align 8
  %277 = inttoptr i64 %275 to i32*
  %278 = load i32, i32* %277, align 4
  %279 = zext i32 %278 to i64
  store i64 %279, i64* %RSI.i3626, align 8
  %280 = add i64 %269, 7753
  %281 = add i64 %269, 19
  %282 = load i64, i64* %6, align 8
  %283 = add i64 %282, -8
  %284 = inttoptr i64 %283 to i64*
  store i64 %281, i64* %284, align 8
  store i64 %283, i64* %6, align 8
  store i64 %280, i64* %3, align 8
  %call2_400ff5 = tail call %struct.Memory* @sub_402e30._Z13test_constantIa23custom_divide_constantsIaEEvPT_iPKc(%struct.State* nonnull %0, i64 %280, %struct.Memory* %call2_400fe2)
  %285 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x418ca9_type* @G__0x418ca9 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418ca9_type* @G__0x418ca9 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %286 = load i64, i64* %RBP.i, align 8
  %287 = add i64 %286, -24
  %288 = add i64 %285, 11
  store i64 %288, i64* %3, align 8
  %289 = inttoptr i64 %287 to i64*
  %290 = load i64, i64* %289, align 8
  store i64 %290, i64* %RDI.i3611.pre-phi, align 8
  %291 = add i64 %286, -44
  %292 = add i64 %285, 14
  store i64 %292, i64* %3, align 8
  %293 = inttoptr i64 %291 to i32*
  %294 = load i32, i32* %293, align 4
  %295 = zext i32 %294 to i64
  store i64 %295, i64* %RSI.i3626, align 8
  %296 = add i64 %285, 7894
  %297 = add i64 %285, 19
  %298 = load i64, i64* %6, align 8
  %299 = add i64 %298, -8
  %300 = inttoptr i64 %299 to i64*
  store i64 %297, i64* %300, align 8
  store i64 %299, i64* %6, align 8
  store i64 %296, i64* %3, align 8
  %call2_401008 = tail call %struct.Memory* @sub_402ed0._Z13test_constantIa20custom_mod_constantsIaEEvPT_iPKc(%struct.State* nonnull %0, i64 %296, %struct.Memory* %call2_400ff5)
  %301 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x418cbf_type* @G__0x418cbf to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418cbf_type* @G__0x418cbf to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %302 = load i64, i64* %RBP.i, align 8
  %303 = add i64 %302, -24
  %304 = add i64 %301, 11
  store i64 %304, i64* %3, align 8
  %305 = inttoptr i64 %303 to i64*
  %306 = load i64, i64* %305, align 8
  store i64 %306, i64* %RDI.i3611.pre-phi, align 8
  %307 = add i64 %302, -44
  %308 = add i64 %301, 14
  store i64 %308, i64* %3, align 8
  %309 = inttoptr i64 %307 to i32*
  %310 = load i32, i32* %309, align 4
  %311 = zext i32 %310 to i64
  store i64 %311, i64* %RSI.i3626, align 8
  %312 = add i64 %301, 8035
  %313 = add i64 %301, 19
  %314 = load i64, i64* %6, align 8
  %315 = add i64 %314, -8
  %316 = inttoptr i64 %315 to i64*
  store i64 %313, i64* %316, align 8
  store i64 %315, i64* %6, align 8
  store i64 %312, i64* %3, align 8
  %call2_40101b = tail call %struct.Memory* @sub_402f70._Z13test_constantIa22custom_equal_constantsIaEEvPT_iPKc(%struct.State* nonnull %0, i64 %312, %struct.Memory* %call2_401008)
  %317 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x418cd7_type* @G__0x418cd7 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418cd7_type* @G__0x418cd7 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %318 = load i64, i64* %RBP.i, align 8
  %319 = add i64 %318, -24
  %320 = add i64 %317, 11
  store i64 %320, i64* %3, align 8
  %321 = inttoptr i64 %319 to i64*
  %322 = load i64, i64* %321, align 8
  store i64 %322, i64* %RDI.i3611.pre-phi, align 8
  %323 = add i64 %318, -44
  %324 = add i64 %317, 14
  store i64 %324, i64* %3, align 8
  %325 = inttoptr i64 %323 to i32*
  %326 = load i32, i32* %325, align 4
  %327 = zext i32 %326 to i64
  store i64 %327, i64* %RSI.i3626, align 8
  %328 = add i64 %317, 8176
  %329 = add i64 %317, 19
  %330 = load i64, i64* %6, align 8
  %331 = add i64 %330, -8
  %332 = inttoptr i64 %331 to i64*
  store i64 %329, i64* %332, align 8
  store i64 %331, i64* %6, align 8
  store i64 %328, i64* %3, align 8
  %call2_40102e = tail call %struct.Memory* @sub_403010._Z13test_constantIa25custom_notequal_constantsIaEEvPT_iPKc(%struct.State* nonnull %0, i64 %328, %struct.Memory* %call2_40101b)
  %333 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x418cf2_type* @G__0x418cf2 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418cf2_type* @G__0x418cf2 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %334 = load i64, i64* %RBP.i, align 8
  %335 = add i64 %334, -24
  %336 = add i64 %333, 11
  store i64 %336, i64* %3, align 8
  %337 = inttoptr i64 %335 to i64*
  %338 = load i64, i64* %337, align 8
  store i64 %338, i64* %RDI.i3611.pre-phi, align 8
  %339 = add i64 %334, -44
  %340 = add i64 %333, 14
  store i64 %340, i64* %3, align 8
  %341 = inttoptr i64 %339 to i32*
  %342 = load i32, i32* %341, align 4
  %343 = zext i32 %342 to i64
  store i64 %343, i64* %RSI.i3626, align 8
  %344 = add i64 %333, 8317
  %345 = add i64 %333, 19
  %346 = load i64, i64* %6, align 8
  %347 = add i64 %346, -8
  %348 = inttoptr i64 %347 to i64*
  store i64 %345, i64* %348, align 8
  store i64 %347, i64* %6, align 8
  store i64 %344, i64* %3, align 8
  %call2_401041 = tail call %struct.Memory* @sub_4030b0._Z13test_constantIa28custom_greaterthan_constantsIaEEvPT_iPKc(%struct.State* nonnull %0, i64 %344, %struct.Memory* %call2_40102e)
  %349 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x418d11_type* @G__0x418d11 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418d11_type* @G__0x418d11 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %350 = load i64, i64* %RBP.i, align 8
  %351 = add i64 %350, -24
  %352 = add i64 %349, 11
  store i64 %352, i64* %3, align 8
  %353 = inttoptr i64 %351 to i64*
  %354 = load i64, i64* %353, align 8
  store i64 %354, i64* %RDI.i3611.pre-phi, align 8
  %355 = add i64 %350, -44
  %356 = add i64 %349, 14
  store i64 %356, i64* %3, align 8
  %357 = inttoptr i64 %355 to i32*
  %358 = load i32, i32* %357, align 4
  %359 = zext i32 %358 to i64
  store i64 %359, i64* %RSI.i3626, align 8
  %360 = add i64 %349, 8458
  %361 = add i64 %349, 19
  %362 = load i64, i64* %6, align 8
  %363 = add i64 %362, -8
  %364 = inttoptr i64 %363 to i64*
  store i64 %361, i64* %364, align 8
  store i64 %363, i64* %6, align 8
  store i64 %360, i64* %3, align 8
  %call2_401054 = tail call %struct.Memory* @sub_403150._Z13test_constantIa25custom_lessthan_constantsIaEEvPT_iPKc(%struct.State* nonnull %0, i64 %360, %struct.Memory* %call2_401041)
  %365 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x418d2d_type* @G__0x418d2d to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418d2d_type* @G__0x418d2d to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %366 = load i64, i64* %RBP.i, align 8
  %367 = add i64 %366, -24
  %368 = add i64 %365, 11
  store i64 %368, i64* %3, align 8
  %369 = inttoptr i64 %367 to i64*
  %370 = load i64, i64* %369, align 8
  store i64 %370, i64* %RDI.i3611.pre-phi, align 8
  %371 = add i64 %366, -44
  %372 = add i64 %365, 14
  store i64 %372, i64* %3, align 8
  %373 = inttoptr i64 %371 to i32*
  %374 = load i32, i32* %373, align 4
  %375 = zext i32 %374 to i64
  store i64 %375, i64* %RSI.i3626, align 8
  %376 = add i64 %365, 8599
  %377 = add i64 %365, 19
  %378 = load i64, i64* %6, align 8
  %379 = add i64 %378, -8
  %380 = inttoptr i64 %379 to i64*
  store i64 %377, i64* %380, align 8
  store i64 %379, i64* %6, align 8
  store i64 %376, i64* %3, align 8
  %call2_401067 = tail call %struct.Memory* @sub_4031f0._Z13test_constantIa33custom_greaterthanequal_constantsIaEEvPT_iPKc(%struct.State* nonnull %0, i64 %376, %struct.Memory* %call2_401054)
  %381 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x418d52_type* @G__0x418d52 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418d52_type* @G__0x418d52 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %382 = load i64, i64* %RBP.i, align 8
  %383 = add i64 %382, -24
  %384 = add i64 %381, 11
  store i64 %384, i64* %3, align 8
  %385 = inttoptr i64 %383 to i64*
  %386 = load i64, i64* %385, align 8
  store i64 %386, i64* %RDI.i3611.pre-phi, align 8
  %387 = add i64 %382, -44
  %388 = add i64 %381, 14
  store i64 %388, i64* %3, align 8
  %389 = inttoptr i64 %387 to i32*
  %390 = load i32, i32* %389, align 4
  %391 = zext i32 %390 to i64
  store i64 %391, i64* %RSI.i3626, align 8
  %392 = add i64 %381, 8740
  %393 = add i64 %381, 19
  %394 = load i64, i64* %6, align 8
  %395 = add i64 %394, -8
  %396 = inttoptr i64 %395 to i64*
  store i64 %393, i64* %396, align 8
  store i64 %395, i64* %6, align 8
  store i64 %392, i64* %3, align 8
  %call2_40107a = tail call %struct.Memory* @sub_403290._Z13test_constantIa30custom_lessthanequal_constantsIaEEvPT_iPKc(%struct.State* nonnull %0, i64 %392, %struct.Memory* %call2_401067)
  %397 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x418d74_type* @G__0x418d74 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418d74_type* @G__0x418d74 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %398 = load i64, i64* %RBP.i, align 8
  %399 = add i64 %398, -24
  %400 = add i64 %397, 11
  store i64 %400, i64* %3, align 8
  %401 = inttoptr i64 %399 to i64*
  %402 = load i64, i64* %401, align 8
  store i64 %402, i64* %RDI.i3611.pre-phi, align 8
  %403 = add i64 %398, -44
  %404 = add i64 %397, 14
  store i64 %404, i64* %3, align 8
  %405 = inttoptr i64 %403 to i32*
  %406 = load i32, i32* %405, align 4
  %407 = zext i32 %406 to i64
  store i64 %407, i64* %RSI.i3626, align 8
  %408 = add i64 %397, 8881
  %409 = add i64 %397, 19
  %410 = load i64, i64* %6, align 8
  %411 = add i64 %410, -8
  %412 = inttoptr i64 %411 to i64*
  store i64 %409, i64* %412, align 8
  store i64 %411, i64* %6, align 8
  store i64 %408, i64* %3, align 8
  %call2_40108d = tail call %struct.Memory* @sub_403330._Z13test_constantIa20custom_and_constantsIaEEvPT_iPKc(%struct.State* nonnull %0, i64 %408, %struct.Memory* %call2_40107a)
  %413 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x418d8a_type* @G__0x418d8a to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418d8a_type* @G__0x418d8a to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %414 = load i64, i64* %RBP.i, align 8
  %415 = add i64 %414, -24
  %416 = add i64 %413, 11
  store i64 %416, i64* %3, align 8
  %417 = inttoptr i64 %415 to i64*
  %418 = load i64, i64* %417, align 8
  store i64 %418, i64* %RDI.i3611.pre-phi, align 8
  %419 = add i64 %414, -44
  %420 = add i64 %413, 14
  store i64 %420, i64* %3, align 8
  %421 = inttoptr i64 %419 to i32*
  %422 = load i32, i32* %421, align 4
  %423 = zext i32 %422 to i64
  store i64 %423, i64* %RSI.i3626, align 8
  %424 = add i64 %413, 9022
  %425 = add i64 %413, 19
  %426 = load i64, i64* %6, align 8
  %427 = add i64 %426, -8
  %428 = inttoptr i64 %427 to i64*
  store i64 %425, i64* %428, align 8
  store i64 %427, i64* %6, align 8
  store i64 %424, i64* %3, align 8
  %call2_4010a0 = tail call %struct.Memory* @sub_4033d0._Z13test_constantIa19custom_or_constantsIaEEvPT_iPKc(%struct.State* nonnull %0, i64 %424, %struct.Memory* %call2_40108d)
  %429 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x418d9f_type* @G__0x418d9f to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418d9f_type* @G__0x418d9f to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %430 = load i64, i64* %RBP.i, align 8
  %431 = add i64 %430, -24
  %432 = add i64 %429, 11
  store i64 %432, i64* %3, align 8
  %433 = inttoptr i64 %431 to i64*
  %434 = load i64, i64* %433, align 8
  store i64 %434, i64* %RDI.i3611.pre-phi, align 8
  %435 = add i64 %430, -44
  %436 = add i64 %429, 14
  store i64 %436, i64* %3, align 8
  %437 = inttoptr i64 %435 to i32*
  %438 = load i32, i32* %437, align 4
  %439 = zext i32 %438 to i64
  store i64 %439, i64* %RSI.i3626, align 8
  %440 = add i64 %429, 9163
  %441 = add i64 %429, 19
  %442 = load i64, i64* %6, align 8
  %443 = add i64 %442, -8
  %444 = inttoptr i64 %443 to i64*
  store i64 %441, i64* %444, align 8
  store i64 %443, i64* %6, align 8
  store i64 %440, i64* %3, align 8
  %call2_4010b3 = tail call %struct.Memory* @sub_403470._Z13test_constantIa20custom_xor_constantsIaEEvPT_iPKc(%struct.State* nonnull %0, i64 %440, %struct.Memory* %call2_4010a0)
  %445 = load i64, i64* %3, align 8
  %446 = add i64 %445, ptrtoint (%G_0x220fc1__rip__type* @G_0x220fc1__rip_ to i64)
  %447 = add i64 %445, 7
  store i64 %447, i64* %3, align 8
  %448 = inttoptr i64 %446 to i32*
  %449 = load i32, i32* %448, align 4
  %450 = sext i32 %449 to i64
  %451 = mul nsw i64 %450, 1717986919
  %452 = lshr i64 %451, 63
  store i64 %452, i64* %RCX.i3620, align 8
  %453 = trunc i64 %452 to i32
  %454 = ashr i64 %451, 34
  store i64 %454, i64* %RAX.i3622, align 8
  %455 = trunc i64 %454 to i32
  %EAX.i3390 = bitcast %union.anon* %156 to i32*
  %456 = add i32 %453, %455
  %457 = zext i32 %456 to i64
  store i64 %457, i64* %206, align 8
  %458 = icmp ult i32 %456, %455
  %459 = icmp ult i32 %456, %453
  %460 = or i1 %458, %459
  %461 = zext i1 %460 to i8
  store i8 %461, i8* %14, align 1
  %462 = and i32 %456, 255
  %463 = tail call i32 @llvm.ctpop.i32(i32 %462)
  %464 = trunc i32 %463 to i8
  %465 = and i8 %464, 1
  %466 = xor i8 %465, 1
  store i8 %466, i8* %21, align 1
  %467 = trunc i64 %454 to i32
  %468 = xor i32 %467, %456
  %469 = lshr i32 %468, 4
  %470 = trunc i32 %469 to i8
  %471 = and i8 %470, 1
  store i8 %471, i8* %27, align 1
  %472 = icmp eq i32 %456, 0
  %473 = zext i1 %472 to i8
  store i8 %473, i8* %30, align 1
  %474 = lshr i32 %456, 31
  %475 = trunc i32 %474 to i8
  store i8 %475, i8* %33, align 1
  %476 = lshr i64 %454, 31
  %477 = trunc i64 %476 to i32
  %478 = and i32 %477, 1
  %479 = xor i32 %474, %478
  %480 = add nuw nsw i32 %479, %474
  %481 = icmp eq i32 %480, 2
  %482 = zext i1 %481 to i8
  store i8 %482, i8* %39, align 1
  %483 = add i64 %445, add (i64 ptrtoint (%G_0x220fe0__rip__type* @G_0x220fe0__rip_ to i64), i64 33)
  %484 = add i64 %445, 40
  store i64 %484, i64* %3, align 8
  %485 = inttoptr i64 %483 to i32*
  store i32 %456, i32* %485, align 4
  %486 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x418db5_type* @G__0x418db5 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418db5_type* @G__0x418db5 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %487 = load i64, i64* %RBP.i, align 8
  %488 = add i64 %487, -24
  %489 = add i64 %486, 11
  store i64 %489, i64* %3, align 8
  %490 = inttoptr i64 %488 to i64*
  %491 = load i64, i64* %490, align 8
  store i64 %491, i64* %RDI.i3611.pre-phi, align 8
  %492 = add i64 %487, -44
  %493 = add i64 %486, 14
  store i64 %493, i64* %3, align 8
  %494 = inttoptr i64 %492 to i32*
  %495 = load i32, i32* %494, align 4
  %496 = zext i32 %495 to i64
  store i64 %496, i64* %RSI.i3626, align 8
  %497 = add i64 %486, 9264
  %498 = add i64 %486, 19
  %499 = load i64, i64* %6, align 8
  %500 = add i64 %499, -8
  %501 = inttoptr i64 %500 to i64*
  store i64 %498, i64* %501, align 8
  store i64 %500, i64* %6, align 8
  store i64 %497, i64* %3, align 8
  %call2_4010ee = tail call %struct.Memory* @sub_403510._Z13test_constantIa19custom_constant_addIaEEvPT_iPKc(%struct.State* nonnull %0, i64 %497, %struct.Memory* %call2_4010b3)
  %502 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x418dca_type* @G__0x418dca to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418dca_type* @G__0x418dca to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %503 = load i64, i64* %RBP.i, align 8
  %504 = add i64 %503, -24
  %505 = add i64 %502, 11
  store i64 %505, i64* %3, align 8
  %506 = inttoptr i64 %504 to i64*
  %507 = load i64, i64* %506, align 8
  store i64 %507, i64* %RDI.i3611.pre-phi, align 8
  %508 = add i64 %503, -44
  %509 = add i64 %502, 14
  store i64 %509, i64* %3, align 8
  %510 = inttoptr i64 %508 to i32*
  %511 = load i32, i32* %510, align 4
  %512 = zext i32 %511 to i64
  store i64 %512, i64* %RSI.i3626, align 8
  %513 = add i64 %502, 9405
  %514 = add i64 %502, 19
  %515 = load i64, i64* %6, align 8
  %516 = add i64 %515, -8
  %517 = inttoptr i64 %516 to i64*
  store i64 %514, i64* %517, align 8
  store i64 %516, i64* %6, align 8
  store i64 %513, i64* %3, align 8
  %call2_401101 = tail call %struct.Memory* @sub_4035b0._Z13test_constantIa28custom_multiple_constant_addIaEEvPT_iPKc(%struct.State* nonnull %0, i64 %513, %struct.Memory* %call2_4010ee)
  %518 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x418de9_type* @G__0x418de9 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418de9_type* @G__0x418de9 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %519 = load i64, i64* %RBP.i, align 8
  %520 = add i64 %519, -24
  %521 = add i64 %518, 11
  store i64 %521, i64* %3, align 8
  %522 = inttoptr i64 %520 to i64*
  %523 = load i64, i64* %522, align 8
  store i64 %523, i64* %RDI.i3611.pre-phi, align 8
  %524 = add i64 %519, -44
  %525 = add i64 %518, 14
  store i64 %525, i64* %3, align 8
  %526 = inttoptr i64 %524 to i32*
  %527 = load i32, i32* %526, align 4
  %528 = zext i32 %527 to i64
  store i64 %528, i64* %RSI.i3626, align 8
  %529 = add i64 %518, 9546
  %530 = add i64 %518, 19
  %531 = load i64, i64* %6, align 8
  %532 = add i64 %531, -8
  %533 = inttoptr i64 %532 to i64*
  store i64 %530, i64* %533, align 8
  store i64 %532, i64* %6, align 8
  store i64 %529, i64* %3, align 8
  %call2_401114 = tail call %struct.Memory* @sub_403650._Z13test_constantIa19custom_constant_subIaEEvPT_iPKc(%struct.State* nonnull %0, i64 %529, %struct.Memory* %call2_401101)
  %534 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x418e03_type* @G__0x418e03 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418e03_type* @G__0x418e03 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %535 = load i64, i64* %RBP.i, align 8
  %536 = add i64 %535, -24
  %537 = add i64 %534, 11
  store i64 %537, i64* %3, align 8
  %538 = inttoptr i64 %536 to i64*
  %539 = load i64, i64* %538, align 8
  store i64 %539, i64* %RDI.i3611.pre-phi, align 8
  %540 = add i64 %535, -44
  %541 = add i64 %534, 14
  store i64 %541, i64* %3, align 8
  %542 = inttoptr i64 %540 to i32*
  %543 = load i32, i32* %542, align 4
  %544 = zext i32 %543 to i64
  store i64 %544, i64* %RSI.i3626, align 8
  %545 = add i64 %534, 9687
  %546 = add i64 %534, 19
  %547 = load i64, i64* %6, align 8
  %548 = add i64 %547, -8
  %549 = inttoptr i64 %548 to i64*
  store i64 %546, i64* %549, align 8
  store i64 %548, i64* %6, align 8
  store i64 %545, i64* %3, align 8
  %call2_401127 = tail call %struct.Memory* @sub_4036f0._Z13test_constantIa28custom_multiple_constant_subIaEEvPT_iPKc(%struct.State* nonnull %0, i64 %545, %struct.Memory* %call2_401114)
  %550 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x418e27_type* @G__0x418e27 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418e27_type* @G__0x418e27 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %551 = load i64, i64* %RBP.i, align 8
  %552 = add i64 %551, -24
  %553 = add i64 %550, 11
  store i64 %553, i64* %3, align 8
  %554 = inttoptr i64 %552 to i64*
  %555 = load i64, i64* %554, align 8
  store i64 %555, i64* %RDI.i3611.pre-phi, align 8
  %556 = add i64 %551, -44
  %557 = add i64 %550, 14
  store i64 %557, i64* %3, align 8
  %558 = inttoptr i64 %556 to i32*
  %559 = load i32, i32* %558, align 4
  %560 = zext i32 %559 to i64
  store i64 %560, i64* %RSI.i3626, align 8
  %561 = add i64 %550, 9828
  %562 = add i64 %550, 19
  %563 = load i64, i64* %6, align 8
  %564 = add i64 %563, -8
  %565 = inttoptr i64 %564 to i64*
  store i64 %562, i64* %565, align 8
  store i64 %564, i64* %6, align 8
  store i64 %561, i64* %3, align 8
  %call2_40113a = tail call %struct.Memory* @sub_403790._Z13test_constantIa24custom_constant_multiplyIaEEvPT_iPKc(%struct.State* nonnull %0, i64 %561, %struct.Memory* %call2_401127)
  %566 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x418e41_type* @G__0x418e41 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418e41_type* @G__0x418e41 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %567 = load i64, i64* %RBP.i, align 8
  %568 = add i64 %567, -24
  %569 = add i64 %566, 11
  store i64 %569, i64* %3, align 8
  %570 = inttoptr i64 %568 to i64*
  %571 = load i64, i64* %570, align 8
  store i64 %571, i64* %RDI.i3611.pre-phi, align 8
  %572 = add i64 %567, -44
  %573 = add i64 %566, 14
  store i64 %573, i64* %3, align 8
  %574 = inttoptr i64 %572 to i32*
  %575 = load i32, i32* %574, align 4
  %576 = zext i32 %575 to i64
  store i64 %576, i64* %RSI.i3626, align 8
  %577 = add i64 %566, 9969
  %578 = add i64 %566, 19
  %579 = load i64, i64* %6, align 8
  %580 = add i64 %579, -8
  %581 = inttoptr i64 %580 to i64*
  store i64 %578, i64* %581, align 8
  store i64 %580, i64* %6, align 8
  store i64 %577, i64* %3, align 8
  %call2_40114d = tail call %struct.Memory* @sub_403830._Z13test_constantIa33custom_multiple_constant_multiplyIaEEvPT_iPKc(%struct.State* nonnull %0, i64 %577, %struct.Memory* %call2_40113a)
  %582 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x418e66_type* @G__0x418e66 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418e66_type* @G__0x418e66 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %583 = load i64, i64* %RBP.i, align 8
  %584 = add i64 %583, -24
  %585 = add i64 %582, 11
  store i64 %585, i64* %3, align 8
  %586 = inttoptr i64 %584 to i64*
  %587 = load i64, i64* %586, align 8
  store i64 %587, i64* %RDI.i3611.pre-phi, align 8
  %588 = add i64 %583, -44
  %589 = add i64 %582, 14
  store i64 %589, i64* %3, align 8
  %590 = inttoptr i64 %588 to i32*
  %591 = load i32, i32* %590, align 4
  %592 = zext i32 %591 to i64
  store i64 %592, i64* %RSI.i3626, align 8
  %593 = add i64 %582, 10110
  %594 = add i64 %582, 19
  %595 = load i64, i64* %6, align 8
  %596 = add i64 %595, -8
  %597 = inttoptr i64 %596 to i64*
  store i64 %594, i64* %597, align 8
  store i64 %596, i64* %6, align 8
  store i64 %593, i64* %3, align 8
  %call2_401160 = tail call %struct.Memory* @sub_4038d0._Z13test_constantIa34custom_multiple_constant_multiply2IaEEvPT_iPKc(%struct.State* nonnull %0, i64 %593, %struct.Memory* %call2_40114d)
  %598 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x418e8a_type* @G__0x418e8a to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418e8a_type* @G__0x418e8a to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %599 = load i64, i64* %RBP.i, align 8
  %600 = add i64 %599, -24
  %601 = add i64 %598, 11
  store i64 %601, i64* %3, align 8
  %602 = inttoptr i64 %600 to i64*
  %603 = load i64, i64* %602, align 8
  store i64 %603, i64* %RDI.i3611.pre-phi, align 8
  %604 = add i64 %599, -44
  %605 = add i64 %598, 14
  store i64 %605, i64* %3, align 8
  %606 = inttoptr i64 %604 to i32*
  %607 = load i32, i32* %606, align 4
  %608 = zext i32 %607 to i64
  store i64 %608, i64* %RSI.i3626, align 8
  %609 = add i64 %598, 10251
  %610 = add i64 %598, 19
  %611 = load i64, i64* %6, align 8
  %612 = add i64 %611, -8
  %613 = inttoptr i64 %612 to i64*
  store i64 %610, i64* %613, align 8
  store i64 %612, i64* %6, align 8
  store i64 %609, i64* %3, align 8
  %call2_401173 = tail call %struct.Memory* @sub_403970._Z13test_constantIa22custom_constant_divideIaEEvPT_iPKc(%struct.State* nonnull %0, i64 %609, %struct.Memory* %call2_401160)
  %614 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x418ea2_type* @G__0x418ea2 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418ea2_type* @G__0x418ea2 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %615 = load i64, i64* %RBP.i, align 8
  %616 = add i64 %615, -24
  %617 = add i64 %614, 11
  store i64 %617, i64* %3, align 8
  %618 = inttoptr i64 %616 to i64*
  %619 = load i64, i64* %618, align 8
  store i64 %619, i64* %RDI.i3611.pre-phi, align 8
  %620 = add i64 %615, -44
  %621 = add i64 %614, 14
  store i64 %621, i64* %3, align 8
  %622 = inttoptr i64 %620 to i32*
  %623 = load i32, i32* %622, align 4
  %624 = zext i32 %623 to i64
  store i64 %624, i64* %RSI.i3626, align 8
  %625 = add i64 %614, 10392
  %626 = add i64 %614, 19
  %627 = load i64, i64* %6, align 8
  %628 = add i64 %627, -8
  %629 = inttoptr i64 %628 to i64*
  store i64 %626, i64* %629, align 8
  store i64 %628, i64* %6, align 8
  store i64 %625, i64* %3, align 8
  %call2_401186 = tail call %struct.Memory* @sub_403a10._Z13test_constantIa31custom_multiple_constant_divideIaEEvPT_iPKc(%struct.State* nonnull %0, i64 %625, %struct.Memory* %call2_401173)
  %630 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x418ec4_type* @G__0x418ec4 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418ec4_type* @G__0x418ec4 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %631 = load i64, i64* %RBP.i, align 8
  %632 = add i64 %631, -24
  %633 = add i64 %630, 11
  store i64 %633, i64* %3, align 8
  %634 = inttoptr i64 %632 to i64*
  %635 = load i64, i64* %634, align 8
  store i64 %635, i64* %RDI.i3611.pre-phi, align 8
  %636 = add i64 %631, -44
  %637 = add i64 %630, 14
  store i64 %637, i64* %3, align 8
  %638 = inttoptr i64 %636 to i32*
  %639 = load i32, i32* %638, align 4
  %640 = zext i32 %639 to i64
  store i64 %640, i64* %RSI.i3626, align 8
  %641 = add i64 %630, 10533
  %642 = add i64 %630, 19
  %643 = load i64, i64* %6, align 8
  %644 = add i64 %643, -8
  %645 = inttoptr i64 %644 to i64*
  store i64 %642, i64* %645, align 8
  store i64 %644, i64* %6, align 8
  store i64 %641, i64* %3, align 8
  %call2_401199 = tail call %struct.Memory* @sub_403ab0._Z13test_constantIa32custom_multiple_constant_divide2IaEEvPT_iPKc(%struct.State* nonnull %0, i64 %641, %struct.Memory* %call2_401186)
  %646 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x418ee6_type* @G__0x418ee6 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418ee6_type* @G__0x418ee6 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %647 = load i64, i64* %RBP.i, align 8
  %648 = add i64 %647, -24
  %649 = add i64 %646, 11
  store i64 %649, i64* %3, align 8
  %650 = inttoptr i64 %648 to i64*
  %651 = load i64, i64* %650, align 8
  store i64 %651, i64* %RDI.i3611.pre-phi, align 8
  %652 = add i64 %647, -44
  %653 = add i64 %646, 14
  store i64 %653, i64* %3, align 8
  %654 = inttoptr i64 %652 to i32*
  %655 = load i32, i32* %654, align 4
  %656 = zext i32 %655 to i64
  store i64 %656, i64* %RSI.i3626, align 8
  %657 = add i64 %646, 10674
  %658 = add i64 %646, 19
  %659 = load i64, i64* %6, align 8
  %660 = add i64 %659, -8
  %661 = inttoptr i64 %660 to i64*
  store i64 %658, i64* %661, align 8
  store i64 %660, i64* %6, align 8
  store i64 %657, i64* %3, align 8
  %call2_4011ac = tail call %struct.Memory* @sub_403b50._Z13test_constantIa30custom_multiple_constant_mixedIaEEvPT_iPKc(%struct.State* nonnull %0, i64 %657, %struct.Memory* %call2_401199)
  %662 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x418f06_type* @G__0x418f06 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418f06_type* @G__0x418f06 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %663 = load i64, i64* %RBP.i, align 8
  %664 = add i64 %663, -24
  %665 = add i64 %662, 11
  store i64 %665, i64* %3, align 8
  %666 = inttoptr i64 %664 to i64*
  %667 = load i64, i64* %666, align 8
  store i64 %667, i64* %RDI.i3611.pre-phi, align 8
  %668 = add i64 %663, -44
  %669 = add i64 %662, 14
  store i64 %669, i64* %3, align 8
  %670 = inttoptr i64 %668 to i32*
  %671 = load i32, i32* %670, align 4
  %672 = zext i32 %671 to i64
  store i64 %672, i64* %RSI.i3626, align 8
  %673 = add i64 %662, 10815
  %674 = add i64 %662, 19
  %675 = load i64, i64* %6, align 8
  %676 = add i64 %675, -8
  %677 = inttoptr i64 %676 to i64*
  store i64 %674, i64* %677, align 8
  store i64 %676, i64* %6, align 8
  store i64 %673, i64* %3, align 8
  %call2_4011bf = tail call %struct.Memory* @sub_403bf0._Z13test_constantIa19custom_constant_andIaEEvPT_iPKc(%struct.State* nonnull %0, i64 %673, %struct.Memory* %call2_4011ac)
  %678 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x418f1b_type* @G__0x418f1b to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418f1b_type* @G__0x418f1b to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %679 = load i64, i64* %RBP.i, align 8
  %680 = add i64 %679, -24
  %681 = add i64 %678, 11
  store i64 %681, i64* %3, align 8
  %682 = inttoptr i64 %680 to i64*
  %683 = load i64, i64* %682, align 8
  store i64 %683, i64* %RDI.i3611.pre-phi, align 8
  %684 = add i64 %679, -44
  %685 = add i64 %678, 14
  store i64 %685, i64* %3, align 8
  %686 = inttoptr i64 %684 to i32*
  %687 = load i32, i32* %686, align 4
  %688 = zext i32 %687 to i64
  store i64 %688, i64* %RSI.i3626, align 8
  %689 = add i64 %678, 10956
  %690 = add i64 %678, 19
  %691 = load i64, i64* %6, align 8
  %692 = add i64 %691, -8
  %693 = inttoptr i64 %692 to i64*
  store i64 %690, i64* %693, align 8
  store i64 %692, i64* %6, align 8
  store i64 %689, i64* %3, align 8
  %call2_4011d2 = tail call %struct.Memory* @sub_403c90._Z13test_constantIa28custom_multiple_constant_andIaEEvPT_iPKc(%struct.State* nonnull %0, i64 %689, %struct.Memory* %call2_4011bf)
  %694 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x418f39_type* @G__0x418f39 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418f39_type* @G__0x418f39 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %695 = load i64, i64* %RBP.i, align 8
  %696 = add i64 %695, -24
  %697 = add i64 %694, 11
  store i64 %697, i64* %3, align 8
  %698 = inttoptr i64 %696 to i64*
  %699 = load i64, i64* %698, align 8
  store i64 %699, i64* %RDI.i3611.pre-phi, align 8
  %700 = add i64 %695, -44
  %701 = add i64 %694, 14
  store i64 %701, i64* %3, align 8
  %702 = inttoptr i64 %700 to i32*
  %703 = load i32, i32* %702, align 4
  %704 = zext i32 %703 to i64
  store i64 %704, i64* %RSI.i3626, align 8
  %705 = add i64 %694, 11097
  %706 = add i64 %694, 19
  %707 = load i64, i64* %6, align 8
  %708 = add i64 %707, -8
  %709 = inttoptr i64 %708 to i64*
  store i64 %706, i64* %709, align 8
  store i64 %708, i64* %6, align 8
  store i64 %705, i64* %3, align 8
  %call2_4011e5 = tail call %struct.Memory* @sub_403d30._Z13test_constantIa18custom_constant_orIaEEvPT_iPKc(%struct.State* nonnull %0, i64 %705, %struct.Memory* %call2_4011d2)
  %710 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x418f4d_type* @G__0x418f4d to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418f4d_type* @G__0x418f4d to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %711 = load i64, i64* %RBP.i, align 8
  %712 = add i64 %711, -24
  %713 = add i64 %710, 11
  store i64 %713, i64* %3, align 8
  %714 = inttoptr i64 %712 to i64*
  %715 = load i64, i64* %714, align 8
  store i64 %715, i64* %RDI.i3611.pre-phi, align 8
  %716 = add i64 %711, -44
  %717 = add i64 %710, 14
  store i64 %717, i64* %3, align 8
  %718 = inttoptr i64 %716 to i32*
  %719 = load i32, i32* %718, align 4
  %720 = zext i32 %719 to i64
  store i64 %720, i64* %RSI.i3626, align 8
  %721 = add i64 %710, 11238
  %722 = add i64 %710, 19
  %723 = load i64, i64* %6, align 8
  %724 = add i64 %723, -8
  %725 = inttoptr i64 %724 to i64*
  store i64 %722, i64* %725, align 8
  store i64 %724, i64* %6, align 8
  store i64 %721, i64* %3, align 8
  %call2_4011f8 = tail call %struct.Memory* @sub_403dd0._Z13test_constantIa27custom_multiple_constant_orIaEEvPT_iPKc(%struct.State* nonnull %0, i64 %721, %struct.Memory* %call2_4011e5)
  %726 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x418f6a_type* @G__0x418f6a to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418f6a_type* @G__0x418f6a to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %727 = load i64, i64* %RBP.i, align 8
  %728 = add i64 %727, -24
  %729 = add i64 %726, 11
  store i64 %729, i64* %3, align 8
  %730 = inttoptr i64 %728 to i64*
  %731 = load i64, i64* %730, align 8
  store i64 %731, i64* %RDI.i3611.pre-phi, align 8
  %732 = add i64 %727, -44
  %733 = add i64 %726, 14
  store i64 %733, i64* %3, align 8
  %734 = inttoptr i64 %732 to i32*
  %735 = load i32, i32* %734, align 4
  %736 = zext i32 %735 to i64
  store i64 %736, i64* %RSI.i3626, align 8
  %737 = add i64 %726, 11379
  %738 = add i64 %726, 19
  %739 = load i64, i64* %6, align 8
  %740 = add i64 %739, -8
  %741 = inttoptr i64 %740 to i64*
  store i64 %738, i64* %741, align 8
  store i64 %740, i64* %6, align 8
  store i64 %737, i64* %3, align 8
  %call2_40120b = tail call %struct.Memory* @sub_403e70._Z13test_constantIa19custom_constant_xorIaEEvPT_iPKc(%struct.State* nonnull %0, i64 %737, %struct.Memory* %call2_4011f8)
  %742 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x418f7f_type* @G__0x418f7f to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418f7f_type* @G__0x418f7f to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %743 = load i64, i64* %RBP.i, align 8
  %744 = add i64 %743, -24
  %745 = add i64 %742, 11
  store i64 %745, i64* %3, align 8
  %746 = inttoptr i64 %744 to i64*
  %747 = load i64, i64* %746, align 8
  store i64 %747, i64* %RDI.i3611.pre-phi, align 8
  %748 = add i64 %743, -44
  %749 = add i64 %742, 14
  store i64 %749, i64* %3, align 8
  %750 = inttoptr i64 %748 to i32*
  %751 = load i32, i32* %750, align 4
  %752 = zext i32 %751 to i64
  store i64 %752, i64* %RSI.i3626, align 8
  %753 = add i64 %742, 11520
  %754 = add i64 %742, 19
  %755 = load i64, i64* %6, align 8
  %756 = add i64 %755, -8
  %757 = inttoptr i64 %756 to i64*
  store i64 %754, i64* %757, align 8
  store i64 %756, i64* %6, align 8
  store i64 %753, i64* %3, align 8
  %call2_40121e = tail call %struct.Memory* @sub_403f10._Z13test_constantIa28custom_multiple_constant_xorIaEEvPT_iPKc(%struct.State* nonnull %0, i64 %753, %struct.Memory* %call2_40120b)
  %758 = load i64, i64* %3, align 8
  %759 = add i64 %758, ptrtoint (%G_0x220e5d__rip__type* @G_0x220e5d__rip_ to i64)
  %760 = add i64 %758, 8
  store i64 %760, i64* %3, align 8
  %761 = inttoptr i64 %759 to double*
  %762 = load double, double* %761, align 8
  %763 = tail call double @llvm.trunc.f64(double %762)
  %764 = tail call double @llvm.fabs.f64(double %763)
  %765 = fcmp ogt double %764, 0x41DFFFFFFFC00000
  %766 = fptosi double %763 to i32
  %767 = zext i32 %766 to i64
  %768 = select i1 %765, i64 2147483648, i64 %767
  store i64 and (i64 ptrtoint (%G__0x6702d0_type* @G__0x6702d0 to i64), i64 4294967295), i64* %206, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x6702d0_type* @G__0x6702d0 to i64), i64 4294967295) to i32) to i64), i64* %RAX.i3622, align 8
  %769 = trunc i64 %768 to i8
  store i8 %769, i8* %R8B.i3608, align 1
  %770 = and i64 %768, 255
  store i64 %770, i64* %RDX.i3615, align 8
  store i64 and (i64 ptrtoint (%G__0x672210_type* @G__0x672210 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x6702d0_type* @G__0x6702d0 to i64), i64 4294967295) to i32) to i64), i64* %RDI.i3611.pre-phi, align 8
  %771 = load i64, i64* %RBP.i, align 8
  %772 = add i64 %771, -56
  %773 = add i64 %758, 36
  store i64 %773, i64* %3, align 8
  %774 = inttoptr i64 %772 to i64*
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x6702d0_type* @G__0x6702d0 to i64), i64 4294967295) to i32) to i64), i64* %774, align 8
  %775 = load i64, i64* %3, align 8
  %776 = add i64 %775, 11625
  %777 = add i64 %775, 5
  %778 = load i64, i64* %6, align 8
  %779 = add i64 %778, -8
  %780 = inttoptr i64 %779 to i64*
  store i64 %777, i64* %780, align 8
  store i64 %779, i64* %6, align 8
  store i64 %776, i64* %3, align 8
  %call2_401247 = tail call %struct.Memory* @sub_403fb0._Z4fillIPhhEvT_S1_T0_(%struct.State* nonnull %0, i64 %776, %struct.Memory* %call2_40121e)
  %781 = load i64, i64* %3, align 8
  %782 = add i64 %781, ptrtoint (%G_0x220e2e__rip__type* @G_0x220e2e__rip_ to i64)
  %783 = add i64 %781, 6
  store i64 %783, i64* %3, align 8
  %784 = inttoptr i64 %782 to i32*
  %785 = load i32, i32* %784, align 4
  %786 = add i64 %781, add (i64 ptrtoint (%G_0x220e68__rip__type* @G_0x220e68__rip_ to i64), i64 6)
  %787 = add i64 %781, 12
  store i64 %787, i64* %3, align 8
  %788 = inttoptr i64 %786 to i32*
  store i32 %785, i32* %788, align 4
  %789 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x418c32_type* @G__0x418c32 to i64), i64 4294967295), i64* %RDX.i3615, align 8
  %790 = load i64, i64* %RBP.i, align 8
  %791 = add i64 %790, -56
  %792 = add i64 %789, 9
  store i64 %792, i64* %3, align 8
  %793 = inttoptr i64 %791 to i64*
  %794 = load i64, i64* %793, align 8
  store i64 %794, i64* %RDI.i3611.pre-phi, align 8
  %795 = add i64 %790, -44
  %796 = add i64 %789, 12
  store i64 %796, i64* %3, align 8
  %797 = inttoptr i64 %795 to i32*
  %798 = load i32, i32* %797, align 4
  %799 = zext i32 %798 to i64
  store i64 %799, i64* %RSI.i3626, align 8
  %800 = add i64 %789, 11672
  %801 = add i64 %789, 17
  %802 = load i64, i64* %6, align 8
  %803 = add i64 %802, -8
  %804 = inttoptr i64 %803 to i64*
  store i64 %801, i64* %804, align 8
  store i64 %803, i64* %6, align 8
  store i64 %800, i64* %3, align 8
  %call2_401264 = tail call %struct.Memory* @sub_403ff0._Z13test_constantIh10custom_twoIhEEvPT_iPKc(%struct.State* nonnull %0, i64 %800, %struct.Memory* %call2_401247)
  %805 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x418c43_type* @G__0x418c43 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418c43_type* @G__0x418c43 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %806 = load i64, i64* %RBP.i, align 8
  %807 = add i64 %806, -56
  %808 = add i64 %805, 11
  store i64 %808, i64* %3, align 8
  %809 = inttoptr i64 %807 to i64*
  %810 = load i64, i64* %809, align 8
  store i64 %810, i64* %RDI.i3611.pre-phi, align 8
  %811 = add i64 %806, -44
  %812 = add i64 %805, 14
  store i64 %812, i64* %3, align 8
  %813 = inttoptr i64 %811 to i32*
  %814 = load i32, i32* %813, align 4
  %815 = zext i32 %814 to i64
  store i64 %815, i64* %RSI.i3626, align 8
  %816 = add i64 %805, 11815
  %817 = add i64 %805, 19
  %818 = load i64, i64* %6, align 8
  %819 = add i64 %818, -8
  %820 = inttoptr i64 %819 to i64*
  store i64 %817, i64* %820, align 8
  store i64 %819, i64* %6, align 8
  store i64 %816, i64* %3, align 8
  %call2_401277 = tail call %struct.Memory* @sub_404090._Z13test_constantIh20custom_add_constantsIhEEvPT_iPKc(%struct.State* nonnull %0, i64 %816, %struct.Memory* %call2_401264)
  %821 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x418c59_type* @G__0x418c59 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418c59_type* @G__0x418c59 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %822 = load i64, i64* %RBP.i, align 8
  %823 = add i64 %822, -56
  %824 = add i64 %821, 11
  store i64 %824, i64* %3, align 8
  %825 = inttoptr i64 %823 to i64*
  %826 = load i64, i64* %825, align 8
  store i64 %826, i64* %RDI.i3611.pre-phi, align 8
  %827 = add i64 %822, -44
  %828 = add i64 %821, 14
  store i64 %828, i64* %3, align 8
  %829 = inttoptr i64 %827 to i32*
  %830 = load i32, i32* %829, align 4
  %831 = zext i32 %830 to i64
  store i64 %831, i64* %RSI.i3626, align 8
  %832 = add i64 %821, 11956
  %833 = add i64 %821, 19
  %834 = load i64, i64* %6, align 8
  %835 = add i64 %834, -8
  %836 = inttoptr i64 %835 to i64*
  store i64 %833, i64* %836, align 8
  store i64 %835, i64* %6, align 8
  store i64 %832, i64* %3, align 8
  %call2_40128a = tail call %struct.Memory* @sub_404130._Z13test_constantIh20custom_sub_constantsIhEEvPT_iPKc(%struct.State* nonnull %0, i64 %832, %struct.Memory* %call2_401277)
  %837 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x418c74_type* @G__0x418c74 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418c74_type* @G__0x418c74 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %838 = load i64, i64* %RBP.i, align 8
  %839 = add i64 %838, -56
  %840 = add i64 %837, 11
  store i64 %840, i64* %3, align 8
  %841 = inttoptr i64 %839 to i64*
  %842 = load i64, i64* %841, align 8
  store i64 %842, i64* %RDI.i3611.pre-phi, align 8
  %843 = add i64 %838, -44
  %844 = add i64 %837, 14
  store i64 %844, i64* %3, align 8
  %845 = inttoptr i64 %843 to i32*
  %846 = load i32, i32* %845, align 4
  %847 = zext i32 %846 to i64
  store i64 %847, i64* %RSI.i3626, align 8
  %848 = add i64 %837, 12097
  %849 = add i64 %837, 19
  %850 = load i64, i64* %6, align 8
  %851 = add i64 %850, -8
  %852 = inttoptr i64 %851 to i64*
  store i64 %849, i64* %852, align 8
  store i64 %851, i64* %6, align 8
  store i64 %848, i64* %3, align 8
  %call2_40129d = tail call %struct.Memory* @sub_4041d0._Z13test_constantIh25custom_multiply_constantsIhEEvPT_iPKc(%struct.State* nonnull %0, i64 %848, %struct.Memory* %call2_40128a)
  %853 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x418c8f_type* @G__0x418c8f to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418c8f_type* @G__0x418c8f to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %854 = load i64, i64* %RBP.i, align 8
  %855 = add i64 %854, -56
  %856 = add i64 %853, 11
  store i64 %856, i64* %3, align 8
  %857 = inttoptr i64 %855 to i64*
  %858 = load i64, i64* %857, align 8
  store i64 %858, i64* %RDI.i3611.pre-phi, align 8
  %859 = add i64 %854, -44
  %860 = add i64 %853, 14
  store i64 %860, i64* %3, align 8
  %861 = inttoptr i64 %859 to i32*
  %862 = load i32, i32* %861, align 4
  %863 = zext i32 %862 to i64
  store i64 %863, i64* %RSI.i3626, align 8
  %864 = add i64 %853, 12238
  %865 = add i64 %853, 19
  %866 = load i64, i64* %6, align 8
  %867 = add i64 %866, -8
  %868 = inttoptr i64 %867 to i64*
  store i64 %865, i64* %868, align 8
  store i64 %867, i64* %6, align 8
  store i64 %864, i64* %3, align 8
  %call2_4012b0 = tail call %struct.Memory* @sub_404270._Z13test_constantIh23custom_divide_constantsIhEEvPT_iPKc(%struct.State* nonnull %0, i64 %864, %struct.Memory* %call2_40129d)
  %869 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x418ca8_type* @G__0x418ca8 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418ca8_type* @G__0x418ca8 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %870 = load i64, i64* %RBP.i, align 8
  %871 = add i64 %870, -56
  %872 = add i64 %869, 11
  store i64 %872, i64* %3, align 8
  %873 = inttoptr i64 %871 to i64*
  %874 = load i64, i64* %873, align 8
  store i64 %874, i64* %RDI.i3611.pre-phi, align 8
  %875 = add i64 %870, -44
  %876 = add i64 %869, 14
  store i64 %876, i64* %3, align 8
  %877 = inttoptr i64 %875 to i32*
  %878 = load i32, i32* %877, align 4
  %879 = zext i32 %878 to i64
  store i64 %879, i64* %RSI.i3626, align 8
  %880 = add i64 %869, 12379
  %881 = add i64 %869, 19
  %882 = load i64, i64* %6, align 8
  %883 = add i64 %882, -8
  %884 = inttoptr i64 %883 to i64*
  store i64 %881, i64* %884, align 8
  store i64 %883, i64* %6, align 8
  store i64 %880, i64* %3, align 8
  %call2_4012c3 = tail call %struct.Memory* @sub_404310._Z13test_constantIh20custom_mod_constantsIhEEvPT_iPKc(%struct.State* nonnull %0, i64 %880, %struct.Memory* %call2_4012b0)
  %885 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x418cbe_type* @G__0x418cbe to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418cbe_type* @G__0x418cbe to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %886 = load i64, i64* %RBP.i, align 8
  %887 = add i64 %886, -56
  %888 = add i64 %885, 11
  store i64 %888, i64* %3, align 8
  %889 = inttoptr i64 %887 to i64*
  %890 = load i64, i64* %889, align 8
  store i64 %890, i64* %RDI.i3611.pre-phi, align 8
  %891 = add i64 %886, -44
  %892 = add i64 %885, 14
  store i64 %892, i64* %3, align 8
  %893 = inttoptr i64 %891 to i32*
  %894 = load i32, i32* %893, align 4
  %895 = zext i32 %894 to i64
  store i64 %895, i64* %RSI.i3626, align 8
  %896 = add i64 %885, 12520
  %897 = add i64 %885, 19
  %898 = load i64, i64* %6, align 8
  %899 = add i64 %898, -8
  %900 = inttoptr i64 %899 to i64*
  store i64 %897, i64* %900, align 8
  store i64 %899, i64* %6, align 8
  store i64 %896, i64* %3, align 8
  %call2_4012d6 = tail call %struct.Memory* @sub_4043b0._Z13test_constantIh22custom_equal_constantsIhEEvPT_iPKc(%struct.State* nonnull %0, i64 %896, %struct.Memory* %call2_4012c3)
  %901 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x418cd6_type* @G__0x418cd6 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418cd6_type* @G__0x418cd6 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %902 = load i64, i64* %RBP.i, align 8
  %903 = add i64 %902, -56
  %904 = add i64 %901, 11
  store i64 %904, i64* %3, align 8
  %905 = inttoptr i64 %903 to i64*
  %906 = load i64, i64* %905, align 8
  store i64 %906, i64* %RDI.i3611.pre-phi, align 8
  %907 = add i64 %902, -44
  %908 = add i64 %901, 14
  store i64 %908, i64* %3, align 8
  %909 = inttoptr i64 %907 to i32*
  %910 = load i32, i32* %909, align 4
  %911 = zext i32 %910 to i64
  store i64 %911, i64* %RSI.i3626, align 8
  %912 = add i64 %901, 12661
  %913 = add i64 %901, 19
  %914 = load i64, i64* %6, align 8
  %915 = add i64 %914, -8
  %916 = inttoptr i64 %915 to i64*
  store i64 %913, i64* %916, align 8
  store i64 %915, i64* %6, align 8
  store i64 %912, i64* %3, align 8
  %call2_4012e9 = tail call %struct.Memory* @sub_404450._Z13test_constantIh25custom_notequal_constantsIhEEvPT_iPKc(%struct.State* nonnull %0, i64 %912, %struct.Memory* %call2_4012d6)
  %917 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x418cf1_type* @G__0x418cf1 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418cf1_type* @G__0x418cf1 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %918 = load i64, i64* %RBP.i, align 8
  %919 = add i64 %918, -56
  %920 = add i64 %917, 11
  store i64 %920, i64* %3, align 8
  %921 = inttoptr i64 %919 to i64*
  %922 = load i64, i64* %921, align 8
  store i64 %922, i64* %RDI.i3611.pre-phi, align 8
  %923 = add i64 %918, -44
  %924 = add i64 %917, 14
  store i64 %924, i64* %3, align 8
  %925 = inttoptr i64 %923 to i32*
  %926 = load i32, i32* %925, align 4
  %927 = zext i32 %926 to i64
  store i64 %927, i64* %RSI.i3626, align 8
  %928 = add i64 %917, 12802
  %929 = add i64 %917, 19
  %930 = load i64, i64* %6, align 8
  %931 = add i64 %930, -8
  %932 = inttoptr i64 %931 to i64*
  store i64 %929, i64* %932, align 8
  store i64 %931, i64* %6, align 8
  store i64 %928, i64* %3, align 8
  %call2_4012fc = tail call %struct.Memory* @sub_4044f0._Z13test_constantIh28custom_greaterthan_constantsIhEEvPT_iPKc(%struct.State* nonnull %0, i64 %928, %struct.Memory* %call2_4012e9)
  %933 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x418d10_type* @G__0x418d10 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418d10_type* @G__0x418d10 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %934 = load i64, i64* %RBP.i, align 8
  %935 = add i64 %934, -56
  %936 = add i64 %933, 11
  store i64 %936, i64* %3, align 8
  %937 = inttoptr i64 %935 to i64*
  %938 = load i64, i64* %937, align 8
  store i64 %938, i64* %RDI.i3611.pre-phi, align 8
  %939 = add i64 %934, -44
  %940 = add i64 %933, 14
  store i64 %940, i64* %3, align 8
  %941 = inttoptr i64 %939 to i32*
  %942 = load i32, i32* %941, align 4
  %943 = zext i32 %942 to i64
  store i64 %943, i64* %RSI.i3626, align 8
  %944 = add i64 %933, 12943
  %945 = add i64 %933, 19
  %946 = load i64, i64* %6, align 8
  %947 = add i64 %946, -8
  %948 = inttoptr i64 %947 to i64*
  store i64 %945, i64* %948, align 8
  store i64 %947, i64* %6, align 8
  store i64 %944, i64* %3, align 8
  %call2_40130f = tail call %struct.Memory* @sub_404590._Z13test_constantIh25custom_lessthan_constantsIhEEvPT_iPKc(%struct.State* nonnull %0, i64 %944, %struct.Memory* %call2_4012fc)
  %949 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x418d2c_type* @G__0x418d2c to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418d2c_type* @G__0x418d2c to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %950 = load i64, i64* %RBP.i, align 8
  %951 = add i64 %950, -56
  %952 = add i64 %949, 11
  store i64 %952, i64* %3, align 8
  %953 = inttoptr i64 %951 to i64*
  %954 = load i64, i64* %953, align 8
  store i64 %954, i64* %RDI.i3611.pre-phi, align 8
  %955 = add i64 %950, -44
  %956 = add i64 %949, 14
  store i64 %956, i64* %3, align 8
  %957 = inttoptr i64 %955 to i32*
  %958 = load i32, i32* %957, align 4
  %959 = zext i32 %958 to i64
  store i64 %959, i64* %RSI.i3626, align 8
  %960 = add i64 %949, 13084
  %961 = add i64 %949, 19
  %962 = load i64, i64* %6, align 8
  %963 = add i64 %962, -8
  %964 = inttoptr i64 %963 to i64*
  store i64 %961, i64* %964, align 8
  store i64 %963, i64* %6, align 8
  store i64 %960, i64* %3, align 8
  %call2_401322 = tail call %struct.Memory* @sub_404630._Z13test_constantIh33custom_greaterthanequal_constantsIhEEvPT_iPKc(%struct.State* nonnull %0, i64 %960, %struct.Memory* %call2_40130f)
  %965 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x418d51_type* @G__0x418d51 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418d51_type* @G__0x418d51 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %966 = load i64, i64* %RBP.i, align 8
  %967 = add i64 %966, -56
  %968 = add i64 %965, 11
  store i64 %968, i64* %3, align 8
  %969 = inttoptr i64 %967 to i64*
  %970 = load i64, i64* %969, align 8
  store i64 %970, i64* %RDI.i3611.pre-phi, align 8
  %971 = add i64 %966, -44
  %972 = add i64 %965, 14
  store i64 %972, i64* %3, align 8
  %973 = inttoptr i64 %971 to i32*
  %974 = load i32, i32* %973, align 4
  %975 = zext i32 %974 to i64
  store i64 %975, i64* %RSI.i3626, align 8
  %976 = add i64 %965, 13225
  %977 = add i64 %965, 19
  %978 = load i64, i64* %6, align 8
  %979 = add i64 %978, -8
  %980 = inttoptr i64 %979 to i64*
  store i64 %977, i64* %980, align 8
  store i64 %979, i64* %6, align 8
  store i64 %976, i64* %3, align 8
  %call2_401335 = tail call %struct.Memory* @sub_4046d0._Z13test_constantIh30custom_lessthanequal_constantsIhEEvPT_iPKc(%struct.State* nonnull %0, i64 %976, %struct.Memory* %call2_401322)
  %981 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x418d73_type* @G__0x418d73 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418d73_type* @G__0x418d73 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %982 = load i64, i64* %RBP.i, align 8
  %983 = add i64 %982, -56
  %984 = add i64 %981, 11
  store i64 %984, i64* %3, align 8
  %985 = inttoptr i64 %983 to i64*
  %986 = load i64, i64* %985, align 8
  store i64 %986, i64* %RDI.i3611.pre-phi, align 8
  %987 = add i64 %982, -44
  %988 = add i64 %981, 14
  store i64 %988, i64* %3, align 8
  %989 = inttoptr i64 %987 to i32*
  %990 = load i32, i32* %989, align 4
  %991 = zext i32 %990 to i64
  store i64 %991, i64* %RSI.i3626, align 8
  %992 = add i64 %981, 13366
  %993 = add i64 %981, 19
  %994 = load i64, i64* %6, align 8
  %995 = add i64 %994, -8
  %996 = inttoptr i64 %995 to i64*
  store i64 %993, i64* %996, align 8
  store i64 %995, i64* %6, align 8
  store i64 %992, i64* %3, align 8
  %call2_401348 = tail call %struct.Memory* @sub_404770._Z13test_constantIh20custom_and_constantsIhEEvPT_iPKc(%struct.State* nonnull %0, i64 %992, %struct.Memory* %call2_401335)
  %997 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x418d89_type* @G__0x418d89 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418d89_type* @G__0x418d89 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %998 = load i64, i64* %RBP.i, align 8
  %999 = add i64 %998, -56
  %1000 = add i64 %997, 11
  store i64 %1000, i64* %3, align 8
  %1001 = inttoptr i64 %999 to i64*
  %1002 = load i64, i64* %1001, align 8
  store i64 %1002, i64* %RDI.i3611.pre-phi, align 8
  %1003 = add i64 %998, -44
  %1004 = add i64 %997, 14
  store i64 %1004, i64* %3, align 8
  %1005 = inttoptr i64 %1003 to i32*
  %1006 = load i32, i32* %1005, align 4
  %1007 = zext i32 %1006 to i64
  store i64 %1007, i64* %RSI.i3626, align 8
  %1008 = add i64 %997, 13507
  %1009 = add i64 %997, 19
  %1010 = load i64, i64* %6, align 8
  %1011 = add i64 %1010, -8
  %1012 = inttoptr i64 %1011 to i64*
  store i64 %1009, i64* %1012, align 8
  store i64 %1011, i64* %6, align 8
  store i64 %1008, i64* %3, align 8
  %call2_40135b = tail call %struct.Memory* @sub_404810._Z13test_constantIh19custom_or_constantsIhEEvPT_iPKc(%struct.State* nonnull %0, i64 %1008, %struct.Memory* %call2_401348)
  %1013 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x418d9e_type* @G__0x418d9e to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418d9e_type* @G__0x418d9e to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %1014 = load i64, i64* %RBP.i, align 8
  %1015 = add i64 %1014, -56
  %1016 = add i64 %1013, 11
  store i64 %1016, i64* %3, align 8
  %1017 = inttoptr i64 %1015 to i64*
  %1018 = load i64, i64* %1017, align 8
  store i64 %1018, i64* %RDI.i3611.pre-phi, align 8
  %1019 = add i64 %1014, -44
  %1020 = add i64 %1013, 14
  store i64 %1020, i64* %3, align 8
  %1021 = inttoptr i64 %1019 to i32*
  %1022 = load i32, i32* %1021, align 4
  %1023 = zext i32 %1022 to i64
  store i64 %1023, i64* %RSI.i3626, align 8
  %1024 = add i64 %1013, 13648
  %1025 = add i64 %1013, 19
  %1026 = load i64, i64* %6, align 8
  %1027 = add i64 %1026, -8
  %1028 = inttoptr i64 %1027 to i64*
  store i64 %1025, i64* %1028, align 8
  store i64 %1027, i64* %6, align 8
  store i64 %1024, i64* %3, align 8
  %call2_40136e = tail call %struct.Memory* @sub_4048b0._Z13test_constantIh20custom_xor_constantsIhEEvPT_iPKc(%struct.State* nonnull %0, i64 %1024, %struct.Memory* %call2_40135b)
  %1029 = load i64, i64* %3, align 8
  %1030 = add i64 %1029, ptrtoint (%G_0x220d06__rip__type* @G_0x220d06__rip_ to i64)
  %1031 = add i64 %1029, 7
  store i64 %1031, i64* %3, align 8
  %1032 = inttoptr i64 %1030 to i32*
  %1033 = load i32, i32* %1032, align 4
  %1034 = sext i32 %1033 to i64
  %1035 = mul nsw i64 %1034, 1717986919
  %1036 = lshr i64 %1035, 63
  store i64 %1036, i64* %RCX.i3620, align 8
  %1037 = trunc i64 %1036 to i32
  %1038 = ashr i64 %1035, 34
  store i64 %1038, i64* %RAX.i3622, align 8
  %1039 = trunc i64 %1038 to i32
  %1040 = add i32 %1037, %1039
  %1041 = zext i32 %1040 to i64
  store i64 %1041, i64* %206, align 8
  %1042 = icmp ult i32 %1040, %1039
  %1043 = icmp ult i32 %1040, %1037
  %1044 = or i1 %1042, %1043
  %1045 = zext i1 %1044 to i8
  store i8 %1045, i8* %14, align 1
  %1046 = and i32 %1040, 255
  %1047 = tail call i32 @llvm.ctpop.i32(i32 %1046)
  %1048 = trunc i32 %1047 to i8
  %1049 = and i8 %1048, 1
  %1050 = xor i8 %1049, 1
  store i8 %1050, i8* %21, align 1
  %1051 = trunc i64 %1038 to i32
  %1052 = xor i32 %1051, %1040
  %1053 = lshr i32 %1052, 4
  %1054 = trunc i32 %1053 to i8
  %1055 = and i8 %1054, 1
  store i8 %1055, i8* %27, align 1
  %1056 = icmp eq i32 %1040, 0
  %1057 = zext i1 %1056 to i8
  store i8 %1057, i8* %30, align 1
  %1058 = lshr i32 %1040, 31
  %1059 = trunc i32 %1058 to i8
  store i8 %1059, i8* %33, align 1
  %1060 = lshr i64 %1038, 31
  %1061 = trunc i64 %1060 to i32
  %1062 = and i32 %1061, 1
  %1063 = xor i32 %1058, %1062
  %1064 = add nuw nsw i32 %1063, %1058
  %1065 = icmp eq i32 %1064, 2
  %1066 = zext i1 %1065 to i8
  store i8 %1066, i8* %39, align 1
  %1067 = add i64 %1029, add (i64 ptrtoint (%G_0x220d25__rip__type* @G_0x220d25__rip_ to i64), i64 33)
  %1068 = add i64 %1029, 40
  store i64 %1068, i64* %3, align 8
  %1069 = inttoptr i64 %1067 to i32*
  store i32 %1040, i32* %1069, align 4
  %1070 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x418db4_type* @G__0x418db4 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418db4_type* @G__0x418db4 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %1071 = load i64, i64* %RBP.i, align 8
  %1072 = add i64 %1071, -56
  %1073 = add i64 %1070, 11
  store i64 %1073, i64* %3, align 8
  %1074 = inttoptr i64 %1072 to i64*
  %1075 = load i64, i64* %1074, align 8
  store i64 %1075, i64* %RDI.i3611.pre-phi, align 8
  %1076 = add i64 %1071, -44
  %1077 = add i64 %1070, 14
  store i64 %1077, i64* %3, align 8
  %1078 = inttoptr i64 %1076 to i32*
  %1079 = load i32, i32* %1078, align 4
  %1080 = zext i32 %1079 to i64
  store i64 %1080, i64* %RSI.i3626, align 8
  %1081 = add i64 %1070, 13749
  %1082 = add i64 %1070, 19
  %1083 = load i64, i64* %6, align 8
  %1084 = add i64 %1083, -8
  %1085 = inttoptr i64 %1084 to i64*
  store i64 %1082, i64* %1085, align 8
  store i64 %1084, i64* %6, align 8
  store i64 %1081, i64* %3, align 8
  %call2_4013a9 = tail call %struct.Memory* @sub_404950._Z13test_constantIh19custom_constant_addIhEEvPT_iPKc(%struct.State* nonnull %0, i64 %1081, %struct.Memory* %call2_40136e)
  %1086 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x418dc9_type* @G__0x418dc9 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418dc9_type* @G__0x418dc9 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %1087 = load i64, i64* %RBP.i, align 8
  %1088 = add i64 %1087, -56
  %1089 = add i64 %1086, 11
  store i64 %1089, i64* %3, align 8
  %1090 = inttoptr i64 %1088 to i64*
  %1091 = load i64, i64* %1090, align 8
  store i64 %1091, i64* %RDI.i3611.pre-phi, align 8
  %1092 = add i64 %1087, -44
  %1093 = add i64 %1086, 14
  store i64 %1093, i64* %3, align 8
  %1094 = inttoptr i64 %1092 to i32*
  %1095 = load i32, i32* %1094, align 4
  %1096 = zext i32 %1095 to i64
  store i64 %1096, i64* %RSI.i3626, align 8
  %1097 = add i64 %1086, 13890
  %1098 = add i64 %1086, 19
  %1099 = load i64, i64* %6, align 8
  %1100 = add i64 %1099, -8
  %1101 = inttoptr i64 %1100 to i64*
  store i64 %1098, i64* %1101, align 8
  store i64 %1100, i64* %6, align 8
  store i64 %1097, i64* %3, align 8
  %call2_4013bc = tail call %struct.Memory* @sub_4049f0._Z13test_constantIh28custom_multiple_constant_addIhEEvPT_iPKc(%struct.State* nonnull %0, i64 %1097, %struct.Memory* %call2_4013a9)
  %1102 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x418de8_type* @G__0x418de8 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418de8_type* @G__0x418de8 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %1103 = load i64, i64* %RBP.i, align 8
  %1104 = add i64 %1103, -56
  %1105 = add i64 %1102, 11
  store i64 %1105, i64* %3, align 8
  %1106 = inttoptr i64 %1104 to i64*
  %1107 = load i64, i64* %1106, align 8
  store i64 %1107, i64* %RDI.i3611.pre-phi, align 8
  %1108 = add i64 %1103, -44
  %1109 = add i64 %1102, 14
  store i64 %1109, i64* %3, align 8
  %1110 = inttoptr i64 %1108 to i32*
  %1111 = load i32, i32* %1110, align 4
  %1112 = zext i32 %1111 to i64
  store i64 %1112, i64* %RSI.i3626, align 8
  %1113 = add i64 %1102, 14031
  %1114 = add i64 %1102, 19
  %1115 = load i64, i64* %6, align 8
  %1116 = add i64 %1115, -8
  %1117 = inttoptr i64 %1116 to i64*
  store i64 %1114, i64* %1117, align 8
  store i64 %1116, i64* %6, align 8
  store i64 %1113, i64* %3, align 8
  %call2_4013cf = tail call %struct.Memory* @sub_404a90._Z13test_constantIh19custom_constant_subIhEEvPT_iPKc(%struct.State* nonnull %0, i64 %1113, %struct.Memory* %call2_4013bc)
  %1118 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x418e02_type* @G__0x418e02 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418e02_type* @G__0x418e02 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %1119 = load i64, i64* %RBP.i, align 8
  %1120 = add i64 %1119, -56
  %1121 = add i64 %1118, 11
  store i64 %1121, i64* %3, align 8
  %1122 = inttoptr i64 %1120 to i64*
  %1123 = load i64, i64* %1122, align 8
  store i64 %1123, i64* %RDI.i3611.pre-phi, align 8
  %1124 = add i64 %1119, -44
  %1125 = add i64 %1118, 14
  store i64 %1125, i64* %3, align 8
  %1126 = inttoptr i64 %1124 to i32*
  %1127 = load i32, i32* %1126, align 4
  %1128 = zext i32 %1127 to i64
  store i64 %1128, i64* %RSI.i3626, align 8
  %1129 = add i64 %1118, 14172
  %1130 = add i64 %1118, 19
  %1131 = load i64, i64* %6, align 8
  %1132 = add i64 %1131, -8
  %1133 = inttoptr i64 %1132 to i64*
  store i64 %1130, i64* %1133, align 8
  store i64 %1132, i64* %6, align 8
  store i64 %1129, i64* %3, align 8
  %call2_4013e2 = tail call %struct.Memory* @sub_404b30._Z13test_constantIh28custom_multiple_constant_subIhEEvPT_iPKc(%struct.State* nonnull %0, i64 %1129, %struct.Memory* %call2_4013cf)
  %1134 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x418e26_type* @G__0x418e26 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418e26_type* @G__0x418e26 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %1135 = load i64, i64* %RBP.i, align 8
  %1136 = add i64 %1135, -56
  %1137 = add i64 %1134, 11
  store i64 %1137, i64* %3, align 8
  %1138 = inttoptr i64 %1136 to i64*
  %1139 = load i64, i64* %1138, align 8
  store i64 %1139, i64* %RDI.i3611.pre-phi, align 8
  %1140 = add i64 %1135, -44
  %1141 = add i64 %1134, 14
  store i64 %1141, i64* %3, align 8
  %1142 = inttoptr i64 %1140 to i32*
  %1143 = load i32, i32* %1142, align 4
  %1144 = zext i32 %1143 to i64
  store i64 %1144, i64* %RSI.i3626, align 8
  %1145 = add i64 %1134, 14313
  %1146 = add i64 %1134, 19
  %1147 = load i64, i64* %6, align 8
  %1148 = add i64 %1147, -8
  %1149 = inttoptr i64 %1148 to i64*
  store i64 %1146, i64* %1149, align 8
  store i64 %1148, i64* %6, align 8
  store i64 %1145, i64* %3, align 8
  %call2_4013f5 = tail call %struct.Memory* @sub_404bd0._Z13test_constantIh24custom_constant_multiplyIhEEvPT_iPKc(%struct.State* nonnull %0, i64 %1145, %struct.Memory* %call2_4013e2)
  %1150 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x418e40_type* @G__0x418e40 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418e40_type* @G__0x418e40 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %1151 = load i64, i64* %RBP.i, align 8
  %1152 = add i64 %1151, -56
  %1153 = add i64 %1150, 11
  store i64 %1153, i64* %3, align 8
  %1154 = inttoptr i64 %1152 to i64*
  %1155 = load i64, i64* %1154, align 8
  store i64 %1155, i64* %RDI.i3611.pre-phi, align 8
  %1156 = add i64 %1151, -44
  %1157 = add i64 %1150, 14
  store i64 %1157, i64* %3, align 8
  %1158 = inttoptr i64 %1156 to i32*
  %1159 = load i32, i32* %1158, align 4
  %1160 = zext i32 %1159 to i64
  store i64 %1160, i64* %RSI.i3626, align 8
  %1161 = add i64 %1150, 14454
  %1162 = add i64 %1150, 19
  %1163 = load i64, i64* %6, align 8
  %1164 = add i64 %1163, -8
  %1165 = inttoptr i64 %1164 to i64*
  store i64 %1162, i64* %1165, align 8
  store i64 %1164, i64* %6, align 8
  store i64 %1161, i64* %3, align 8
  %call2_401408 = tail call %struct.Memory* @sub_404c70._Z13test_constantIh33custom_multiple_constant_multiplyIhEEvPT_iPKc(%struct.State* nonnull %0, i64 %1161, %struct.Memory* %call2_4013f5)
  %1166 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x418e65_type* @G__0x418e65 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418e65_type* @G__0x418e65 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %1167 = load i64, i64* %RBP.i, align 8
  %1168 = add i64 %1167, -56
  %1169 = add i64 %1166, 11
  store i64 %1169, i64* %3, align 8
  %1170 = inttoptr i64 %1168 to i64*
  %1171 = load i64, i64* %1170, align 8
  store i64 %1171, i64* %RDI.i3611.pre-phi, align 8
  %1172 = add i64 %1167, -44
  %1173 = add i64 %1166, 14
  store i64 %1173, i64* %3, align 8
  %1174 = inttoptr i64 %1172 to i32*
  %1175 = load i32, i32* %1174, align 4
  %1176 = zext i32 %1175 to i64
  store i64 %1176, i64* %RSI.i3626, align 8
  %1177 = add i64 %1166, 14595
  %1178 = add i64 %1166, 19
  %1179 = load i64, i64* %6, align 8
  %1180 = add i64 %1179, -8
  %1181 = inttoptr i64 %1180 to i64*
  store i64 %1178, i64* %1181, align 8
  store i64 %1180, i64* %6, align 8
  store i64 %1177, i64* %3, align 8
  %call2_40141b = tail call %struct.Memory* @sub_404d10._Z13test_constantIh34custom_multiple_constant_multiply2IhEEvPT_iPKc(%struct.State* nonnull %0, i64 %1177, %struct.Memory* %call2_401408)
  %1182 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x418e89_type* @G__0x418e89 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418e89_type* @G__0x418e89 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %1183 = load i64, i64* %RBP.i, align 8
  %1184 = add i64 %1183, -56
  %1185 = add i64 %1182, 11
  store i64 %1185, i64* %3, align 8
  %1186 = inttoptr i64 %1184 to i64*
  %1187 = load i64, i64* %1186, align 8
  store i64 %1187, i64* %RDI.i3611.pre-phi, align 8
  %1188 = add i64 %1183, -44
  %1189 = add i64 %1182, 14
  store i64 %1189, i64* %3, align 8
  %1190 = inttoptr i64 %1188 to i32*
  %1191 = load i32, i32* %1190, align 4
  %1192 = zext i32 %1191 to i64
  store i64 %1192, i64* %RSI.i3626, align 8
  %1193 = add i64 %1182, 14736
  %1194 = add i64 %1182, 19
  %1195 = load i64, i64* %6, align 8
  %1196 = add i64 %1195, -8
  %1197 = inttoptr i64 %1196 to i64*
  store i64 %1194, i64* %1197, align 8
  store i64 %1196, i64* %6, align 8
  store i64 %1193, i64* %3, align 8
  %call2_40142e = tail call %struct.Memory* @sub_404db0._Z13test_constantIh22custom_constant_divideIhEEvPT_iPKc(%struct.State* nonnull %0, i64 %1193, %struct.Memory* %call2_40141b)
  %1198 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x418ea1_type* @G__0x418ea1 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418ea1_type* @G__0x418ea1 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %1199 = load i64, i64* %RBP.i, align 8
  %1200 = add i64 %1199, -56
  %1201 = add i64 %1198, 11
  store i64 %1201, i64* %3, align 8
  %1202 = inttoptr i64 %1200 to i64*
  %1203 = load i64, i64* %1202, align 8
  store i64 %1203, i64* %RDI.i3611.pre-phi, align 8
  %1204 = add i64 %1199, -44
  %1205 = add i64 %1198, 14
  store i64 %1205, i64* %3, align 8
  %1206 = inttoptr i64 %1204 to i32*
  %1207 = load i32, i32* %1206, align 4
  %1208 = zext i32 %1207 to i64
  store i64 %1208, i64* %RSI.i3626, align 8
  %1209 = add i64 %1198, 14877
  %1210 = add i64 %1198, 19
  %1211 = load i64, i64* %6, align 8
  %1212 = add i64 %1211, -8
  %1213 = inttoptr i64 %1212 to i64*
  store i64 %1210, i64* %1213, align 8
  store i64 %1212, i64* %6, align 8
  store i64 %1209, i64* %3, align 8
  %call2_401441 = tail call %struct.Memory* @sub_404e50._Z13test_constantIh31custom_multiple_constant_divideIhEEvPT_iPKc(%struct.State* nonnull %0, i64 %1209, %struct.Memory* %call2_40142e)
  %1214 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x418ec3_type* @G__0x418ec3 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418ec3_type* @G__0x418ec3 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %1215 = load i64, i64* %RBP.i, align 8
  %1216 = add i64 %1215, -56
  %1217 = add i64 %1214, 11
  store i64 %1217, i64* %3, align 8
  %1218 = inttoptr i64 %1216 to i64*
  %1219 = load i64, i64* %1218, align 8
  store i64 %1219, i64* %RDI.i3611.pre-phi, align 8
  %1220 = add i64 %1215, -44
  %1221 = add i64 %1214, 14
  store i64 %1221, i64* %3, align 8
  %1222 = inttoptr i64 %1220 to i32*
  %1223 = load i32, i32* %1222, align 4
  %1224 = zext i32 %1223 to i64
  store i64 %1224, i64* %RSI.i3626, align 8
  %1225 = add i64 %1214, 15018
  %1226 = add i64 %1214, 19
  %1227 = load i64, i64* %6, align 8
  %1228 = add i64 %1227, -8
  %1229 = inttoptr i64 %1228 to i64*
  store i64 %1226, i64* %1229, align 8
  store i64 %1228, i64* %6, align 8
  store i64 %1225, i64* %3, align 8
  %call2_401454 = tail call %struct.Memory* @sub_404ef0._Z13test_constantIh32custom_multiple_constant_divide2IhEEvPT_iPKc(%struct.State* nonnull %0, i64 %1225, %struct.Memory* %call2_401441)
  %1230 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x418ee5_type* @G__0x418ee5 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418ee5_type* @G__0x418ee5 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %1231 = load i64, i64* %RBP.i, align 8
  %1232 = add i64 %1231, -56
  %1233 = add i64 %1230, 11
  store i64 %1233, i64* %3, align 8
  %1234 = inttoptr i64 %1232 to i64*
  %1235 = load i64, i64* %1234, align 8
  store i64 %1235, i64* %RDI.i3611.pre-phi, align 8
  %1236 = add i64 %1231, -44
  %1237 = add i64 %1230, 14
  store i64 %1237, i64* %3, align 8
  %1238 = inttoptr i64 %1236 to i32*
  %1239 = load i32, i32* %1238, align 4
  %1240 = zext i32 %1239 to i64
  store i64 %1240, i64* %RSI.i3626, align 8
  %1241 = add i64 %1230, 15159
  %1242 = add i64 %1230, 19
  %1243 = load i64, i64* %6, align 8
  %1244 = add i64 %1243, -8
  %1245 = inttoptr i64 %1244 to i64*
  store i64 %1242, i64* %1245, align 8
  store i64 %1244, i64* %6, align 8
  store i64 %1241, i64* %3, align 8
  %call2_401467 = tail call %struct.Memory* @sub_404f90._Z13test_constantIh30custom_multiple_constant_mixedIhEEvPT_iPKc(%struct.State* nonnull %0, i64 %1241, %struct.Memory* %call2_401454)
  %1246 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x418f05_type* @G__0x418f05 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418f05_type* @G__0x418f05 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %1247 = load i64, i64* %RBP.i, align 8
  %1248 = add i64 %1247, -56
  %1249 = add i64 %1246, 11
  store i64 %1249, i64* %3, align 8
  %1250 = inttoptr i64 %1248 to i64*
  %1251 = load i64, i64* %1250, align 8
  store i64 %1251, i64* %RDI.i3611.pre-phi, align 8
  %1252 = add i64 %1247, -44
  %1253 = add i64 %1246, 14
  store i64 %1253, i64* %3, align 8
  %1254 = inttoptr i64 %1252 to i32*
  %1255 = load i32, i32* %1254, align 4
  %1256 = zext i32 %1255 to i64
  store i64 %1256, i64* %RSI.i3626, align 8
  %1257 = add i64 %1246, 15300
  %1258 = add i64 %1246, 19
  %1259 = load i64, i64* %6, align 8
  %1260 = add i64 %1259, -8
  %1261 = inttoptr i64 %1260 to i64*
  store i64 %1258, i64* %1261, align 8
  store i64 %1260, i64* %6, align 8
  store i64 %1257, i64* %3, align 8
  %call2_40147a = tail call %struct.Memory* @sub_405030._Z13test_constantIh19custom_constant_andIhEEvPT_iPKc(%struct.State* nonnull %0, i64 %1257, %struct.Memory* %call2_401467)
  %1262 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x418f1a_type* @G__0x418f1a to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418f1a_type* @G__0x418f1a to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %1263 = load i64, i64* %RBP.i, align 8
  %1264 = add i64 %1263, -56
  %1265 = add i64 %1262, 11
  store i64 %1265, i64* %3, align 8
  %1266 = inttoptr i64 %1264 to i64*
  %1267 = load i64, i64* %1266, align 8
  store i64 %1267, i64* %RDI.i3611.pre-phi, align 8
  %1268 = add i64 %1263, -44
  %1269 = add i64 %1262, 14
  store i64 %1269, i64* %3, align 8
  %1270 = inttoptr i64 %1268 to i32*
  %1271 = load i32, i32* %1270, align 4
  %1272 = zext i32 %1271 to i64
  store i64 %1272, i64* %RSI.i3626, align 8
  %1273 = add i64 %1262, 15441
  %1274 = add i64 %1262, 19
  %1275 = load i64, i64* %6, align 8
  %1276 = add i64 %1275, -8
  %1277 = inttoptr i64 %1276 to i64*
  store i64 %1274, i64* %1277, align 8
  store i64 %1276, i64* %6, align 8
  store i64 %1273, i64* %3, align 8
  %call2_40148d = tail call %struct.Memory* @sub_4050d0._Z13test_constantIh28custom_multiple_constant_andIhEEvPT_iPKc(%struct.State* nonnull %0, i64 %1273, %struct.Memory* %call2_40147a)
  %1278 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x418f38_type* @G__0x418f38 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418f38_type* @G__0x418f38 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %1279 = load i64, i64* %RBP.i, align 8
  %1280 = add i64 %1279, -56
  %1281 = add i64 %1278, 11
  store i64 %1281, i64* %3, align 8
  %1282 = inttoptr i64 %1280 to i64*
  %1283 = load i64, i64* %1282, align 8
  store i64 %1283, i64* %RDI.i3611.pre-phi, align 8
  %1284 = add i64 %1279, -44
  %1285 = add i64 %1278, 14
  store i64 %1285, i64* %3, align 8
  %1286 = inttoptr i64 %1284 to i32*
  %1287 = load i32, i32* %1286, align 4
  %1288 = zext i32 %1287 to i64
  store i64 %1288, i64* %RSI.i3626, align 8
  %1289 = add i64 %1278, 15582
  %1290 = add i64 %1278, 19
  %1291 = load i64, i64* %6, align 8
  %1292 = add i64 %1291, -8
  %1293 = inttoptr i64 %1292 to i64*
  store i64 %1290, i64* %1293, align 8
  store i64 %1292, i64* %6, align 8
  store i64 %1289, i64* %3, align 8
  %call2_4014a0 = tail call %struct.Memory* @sub_405170._Z13test_constantIh18custom_constant_orIhEEvPT_iPKc(%struct.State* nonnull %0, i64 %1289, %struct.Memory* %call2_40148d)
  %1294 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x418f4c_type* @G__0x418f4c to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418f4c_type* @G__0x418f4c to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %1295 = load i64, i64* %RBP.i, align 8
  %1296 = add i64 %1295, -56
  %1297 = add i64 %1294, 11
  store i64 %1297, i64* %3, align 8
  %1298 = inttoptr i64 %1296 to i64*
  %1299 = load i64, i64* %1298, align 8
  store i64 %1299, i64* %RDI.i3611.pre-phi, align 8
  %1300 = add i64 %1295, -44
  %1301 = add i64 %1294, 14
  store i64 %1301, i64* %3, align 8
  %1302 = inttoptr i64 %1300 to i32*
  %1303 = load i32, i32* %1302, align 4
  %1304 = zext i32 %1303 to i64
  store i64 %1304, i64* %RSI.i3626, align 8
  %1305 = add i64 %1294, 15723
  %1306 = add i64 %1294, 19
  %1307 = load i64, i64* %6, align 8
  %1308 = add i64 %1307, -8
  %1309 = inttoptr i64 %1308 to i64*
  store i64 %1306, i64* %1309, align 8
  store i64 %1308, i64* %6, align 8
  store i64 %1305, i64* %3, align 8
  %call2_4014b3 = tail call %struct.Memory* @sub_405210._Z13test_constantIh27custom_multiple_constant_orIhEEvPT_iPKc(%struct.State* nonnull %0, i64 %1305, %struct.Memory* %call2_4014a0)
  %1310 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x418f69_type* @G__0x418f69 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418f69_type* @G__0x418f69 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %1311 = load i64, i64* %RBP.i, align 8
  %1312 = add i64 %1311, -56
  %1313 = add i64 %1310, 11
  store i64 %1313, i64* %3, align 8
  %1314 = inttoptr i64 %1312 to i64*
  %1315 = load i64, i64* %1314, align 8
  store i64 %1315, i64* %RDI.i3611.pre-phi, align 8
  %1316 = add i64 %1311, -44
  %1317 = add i64 %1310, 14
  store i64 %1317, i64* %3, align 8
  %1318 = inttoptr i64 %1316 to i32*
  %1319 = load i32, i32* %1318, align 4
  %1320 = zext i32 %1319 to i64
  store i64 %1320, i64* %RSI.i3626, align 8
  %1321 = add i64 %1310, 15864
  %1322 = add i64 %1310, 19
  %1323 = load i64, i64* %6, align 8
  %1324 = add i64 %1323, -8
  %1325 = inttoptr i64 %1324 to i64*
  store i64 %1322, i64* %1325, align 8
  store i64 %1324, i64* %6, align 8
  store i64 %1321, i64* %3, align 8
  %call2_4014c6 = tail call %struct.Memory* @sub_4052b0._Z13test_constantIh19custom_constant_xorIhEEvPT_iPKc(%struct.State* nonnull %0, i64 %1321, %struct.Memory* %call2_4014b3)
  %1326 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x418f7e_type* @G__0x418f7e to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418f7e_type* @G__0x418f7e to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %1327 = load i64, i64* %RBP.i, align 8
  %1328 = add i64 %1327, -56
  %1329 = add i64 %1326, 11
  store i64 %1329, i64* %3, align 8
  %1330 = inttoptr i64 %1328 to i64*
  %1331 = load i64, i64* %1330, align 8
  store i64 %1331, i64* %RDI.i3611.pre-phi, align 8
  %1332 = add i64 %1327, -44
  %1333 = add i64 %1326, 14
  store i64 %1333, i64* %3, align 8
  %1334 = inttoptr i64 %1332 to i32*
  %1335 = load i32, i32* %1334, align 4
  %1336 = zext i32 %1335 to i64
  store i64 %1336, i64* %RSI.i3626, align 8
  %1337 = add i64 %1326, 16005
  %1338 = add i64 %1326, 19
  %1339 = load i64, i64* %6, align 8
  %1340 = add i64 %1339, -8
  %1341 = inttoptr i64 %1340 to i64*
  store i64 %1338, i64* %1341, align 8
  store i64 %1340, i64* %6, align 8
  store i64 %1337, i64* %3, align 8
  %call2_4014d9 = tail call %struct.Memory* @sub_405350._Z13test_constantIh28custom_multiple_constant_xorIhEEvPT_iPKc(%struct.State* nonnull %0, i64 %1337, %struct.Memory* %call2_4014c6)
  %1342 = load i64, i64* %3, align 8
  %1343 = add i64 %1342, ptrtoint (%G_0x220ba2__rip__type* @G_0x220ba2__rip_ to i64)
  %1344 = add i64 %1342, 8
  store i64 %1344, i64* %3, align 8
  %1345 = inttoptr i64 %1343 to double*
  %1346 = load double, double* %1345, align 8
  %1347 = tail call double @llvm.trunc.f64(double %1346)
  %1348 = tail call double @llvm.fabs.f64(double %1347)
  %1349 = fcmp ogt double %1348, 0x41DFFFFFFFC00000
  %1350 = fptosi double %1347 to i32
  %1351 = zext i32 %1350 to i64
  %1352 = select i1 %1349, i64 2147483648, i64 %1351
  store i64 and (i64 ptrtoint (%G__0x66c450_type* @G__0x66c450 to i64), i64 4294967295), i64* %206, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x66c450_type* @G__0x66c450 to i64), i64 4294967295) to i32) to i64), i64* %RAX.i3622, align 8
  %1353 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 21, i32 0
  %R10W.i2745 = bitcast %union.anon* %1353 to i16*
  %1354 = trunc i64 %1352 to i16
  store i16 %1354, i16* %R10W.i2745, align 2
  %sext17 = shl i64 %1352, 48
  %1355 = ashr exact i64 %sext17, 48
  %1356 = and i64 %1355, 4294967295
  store i64 %1356, i64* %RDX.i3615, align 8
  store i64 and (i64 ptrtoint (%G__0x6702d0_type* @G__0x6702d0 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x66c450_type* @G__0x66c450 to i64), i64 4294967295) to i32) to i64), i64* %RDI.i3611.pre-phi, align 8
  %1357 = load i64, i64* %RBP.i, align 8
  %1358 = add i64 %1357, -64
  %1359 = add i64 %1342, 37
  store i64 %1359, i64* %3, align 8
  %1360 = inttoptr i64 %1358 to i64*
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x66c450_type* @G__0x66c450 to i64), i64 4294967295) to i32) to i64), i64* %1360, align 8
  %1361 = load i64, i64* %3, align 8
  %1362 = add i64 %1361, 16109
  %1363 = add i64 %1361, 5
  %1364 = load i64, i64* %6, align 8
  %1365 = add i64 %1364, -8
  %1366 = inttoptr i64 %1365 to i64*
  store i64 %1363, i64* %1366, align 8
  store i64 %1365, i64* %6, align 8
  store i64 %1362, i64* %3, align 8
  %call2_401503 = tail call %struct.Memory* @sub_4053f0._Z4fillIPssEvT_S1_T0_(%struct.State* nonnull %0, i64 %1362, %struct.Memory* %call2_4014d9)
  %1367 = load i64, i64* %3, align 8
  %1368 = add i64 %1367, ptrtoint (%G_0x220b72__rip__type* @G_0x220b72__rip_ to i64)
  %1369 = add i64 %1367, 6
  store i64 %1369, i64* %3, align 8
  %1370 = inttoptr i64 %1368 to i32*
  %1371 = load i32, i32* %1370, align 4
  %1372 = add i64 %1367, add (i64 ptrtoint (%G_0x220bac__rip__type* @G_0x220bac__rip_ to i64), i64 6)
  %1373 = add i64 %1367, 12
  store i64 %1373, i64* %3, align 8
  %1374 = inttoptr i64 %1372 to i32*
  store i32 %1371, i32* %1374, align 4
  %1375 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x418f9d_type* @G__0x418f9d to i64), i64 4294967295), i64* %RDX.i3615, align 8
  %1376 = load i64, i64* %RBP.i, align 8
  %1377 = add i64 %1376, -64
  %1378 = add i64 %1375, 9
  store i64 %1378, i64* %3, align 8
  %1379 = inttoptr i64 %1377 to i64*
  %1380 = load i64, i64* %1379, align 8
  store i64 %1380, i64* %RDI.i3611.pre-phi, align 8
  %1381 = add i64 %1376, -44
  %1382 = add i64 %1375, 12
  store i64 %1382, i64* %3, align 8
  %1383 = inttoptr i64 %1381 to i32*
  %1384 = load i32, i32* %1383, align 4
  %1385 = zext i32 %1384 to i64
  store i64 %1385, i64* %RSI.i3626, align 8
  %1386 = add i64 %1375, 16156
  %1387 = add i64 %1375, 17
  %1388 = load i64, i64* %6, align 8
  %1389 = add i64 %1388, -8
  %1390 = inttoptr i64 %1389 to i64*
  store i64 %1387, i64* %1390, align 8
  store i64 %1389, i64* %6, align 8
  store i64 %1386, i64* %3, align 8
  %call2_401520 = tail call %struct.Memory* @sub_405430._Z13test_constantIs10custom_twoIsEEvPT_iPKc(%struct.State* nonnull %0, i64 %1386, %struct.Memory* %call2_401503)
  %1391 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x418faf_type* @G__0x418faf to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418faf_type* @G__0x418faf to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %1392 = load i64, i64* %RBP.i, align 8
  %1393 = add i64 %1392, -64
  %1394 = add i64 %1391, 11
  store i64 %1394, i64* %3, align 8
  %1395 = inttoptr i64 %1393 to i64*
  %1396 = load i64, i64* %1395, align 8
  store i64 %1396, i64* %RDI.i3611.pre-phi, align 8
  %1397 = add i64 %1392, -44
  %1398 = add i64 %1391, 14
  store i64 %1398, i64* %3, align 8
  %1399 = inttoptr i64 %1397 to i32*
  %1400 = load i32, i32* %1399, align 4
  %1401 = zext i32 %1400 to i64
  store i64 %1401, i64* %RSI.i3626, align 8
  %1402 = add i64 %1391, 16315
  %1403 = add i64 %1391, 19
  %1404 = load i64, i64* %6, align 8
  %1405 = add i64 %1404, -8
  %1406 = inttoptr i64 %1405 to i64*
  store i64 %1403, i64* %1406, align 8
  store i64 %1405, i64* %6, align 8
  store i64 %1402, i64* %3, align 8
  %call2_401533 = tail call %struct.Memory* @sub_4054e0._Z13test_constantIs20custom_add_constantsIsEEvPT_iPKc(%struct.State* nonnull %0, i64 %1402, %struct.Memory* %call2_401520)
  %1407 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x418fc6_type* @G__0x418fc6 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418fc6_type* @G__0x418fc6 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %1408 = load i64, i64* %RBP.i, align 8
  %1409 = add i64 %1408, -64
  %1410 = add i64 %1407, 11
  store i64 %1410, i64* %3, align 8
  %1411 = inttoptr i64 %1409 to i64*
  %1412 = load i64, i64* %1411, align 8
  store i64 %1412, i64* %RDI.i3611.pre-phi, align 8
  %1413 = add i64 %1408, -44
  %1414 = add i64 %1407, 14
  store i64 %1414, i64* %3, align 8
  %1415 = inttoptr i64 %1413 to i32*
  %1416 = load i32, i32* %1415, align 4
  %1417 = zext i32 %1416 to i64
  store i64 %1417, i64* %RSI.i3626, align 8
  %1418 = add i64 %1407, 16472
  %1419 = add i64 %1407, 19
  %1420 = load i64, i64* %6, align 8
  %1421 = add i64 %1420, -8
  %1422 = inttoptr i64 %1421 to i64*
  store i64 %1419, i64* %1422, align 8
  store i64 %1421, i64* %6, align 8
  store i64 %1418, i64* %3, align 8
  %call2_401546 = tail call %struct.Memory* @sub_405590._Z13test_constantIs20custom_sub_constantsIsEEvPT_iPKc(%struct.State* nonnull %0, i64 %1418, %struct.Memory* %call2_401533)
  %1423 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x418fe2_type* @G__0x418fe2 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418fe2_type* @G__0x418fe2 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %1424 = load i64, i64* %RBP.i, align 8
  %1425 = add i64 %1424, -64
  %1426 = add i64 %1423, 11
  store i64 %1426, i64* %3, align 8
  %1427 = inttoptr i64 %1425 to i64*
  %1428 = load i64, i64* %1427, align 8
  store i64 %1428, i64* %RDI.i3611.pre-phi, align 8
  %1429 = add i64 %1424, -44
  %1430 = add i64 %1423, 14
  store i64 %1430, i64* %3, align 8
  %1431 = inttoptr i64 %1429 to i32*
  %1432 = load i32, i32* %1431, align 4
  %1433 = zext i32 %1432 to i64
  store i64 %1433, i64* %RSI.i3626, align 8
  %1434 = add i64 %1423, 16629
  %1435 = add i64 %1423, 19
  %1436 = load i64, i64* %6, align 8
  %1437 = add i64 %1436, -8
  %1438 = inttoptr i64 %1437 to i64*
  store i64 %1435, i64* %1438, align 8
  store i64 %1437, i64* %6, align 8
  store i64 %1434, i64* %3, align 8
  %call2_401559 = tail call %struct.Memory* @sub_405640._Z13test_constantIs25custom_multiply_constantsIsEEvPT_iPKc(%struct.State* nonnull %0, i64 %1434, %struct.Memory* %call2_401546)
  %1439 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x418ffe_type* @G__0x418ffe to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418ffe_type* @G__0x418ffe to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %1440 = load i64, i64* %RBP.i, align 8
  %1441 = add i64 %1440, -64
  %1442 = add i64 %1439, 11
  store i64 %1442, i64* %3, align 8
  %1443 = inttoptr i64 %1441 to i64*
  %1444 = load i64, i64* %1443, align 8
  store i64 %1444, i64* %RDI.i3611.pre-phi, align 8
  %1445 = add i64 %1440, -44
  %1446 = add i64 %1439, 14
  store i64 %1446, i64* %3, align 8
  %1447 = inttoptr i64 %1445 to i32*
  %1448 = load i32, i32* %1447, align 4
  %1449 = zext i32 %1448 to i64
  store i64 %1449, i64* %RSI.i3626, align 8
  %1450 = add i64 %1439, 16786
  %1451 = add i64 %1439, 19
  %1452 = load i64, i64* %6, align 8
  %1453 = add i64 %1452, -8
  %1454 = inttoptr i64 %1453 to i64*
  store i64 %1451, i64* %1454, align 8
  store i64 %1453, i64* %6, align 8
  store i64 %1450, i64* %3, align 8
  %call2_40156c = tail call %struct.Memory* @sub_4056f0._Z13test_constantIs23custom_divide_constantsIsEEvPT_iPKc(%struct.State* nonnull %0, i64 %1450, %struct.Memory* %call2_401559)
  %1455 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x419018_type* @G__0x419018 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419018_type* @G__0x419018 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %1456 = load i64, i64* %RBP.i, align 8
  %1457 = add i64 %1456, -64
  %1458 = add i64 %1455, 11
  store i64 %1458, i64* %3, align 8
  %1459 = inttoptr i64 %1457 to i64*
  %1460 = load i64, i64* %1459, align 8
  store i64 %1460, i64* %RDI.i3611.pre-phi, align 8
  %1461 = add i64 %1456, -44
  %1462 = add i64 %1455, 14
  store i64 %1462, i64* %3, align 8
  %1463 = inttoptr i64 %1461 to i32*
  %1464 = load i32, i32* %1463, align 4
  %1465 = zext i32 %1464 to i64
  store i64 %1465, i64* %RSI.i3626, align 8
  %1466 = add i64 %1455, 16943
  %1467 = add i64 %1455, 19
  %1468 = load i64, i64* %6, align 8
  %1469 = add i64 %1468, -8
  %1470 = inttoptr i64 %1469 to i64*
  store i64 %1467, i64* %1470, align 8
  store i64 %1469, i64* %6, align 8
  store i64 %1466, i64* %3, align 8
  %call2_40157f = tail call %struct.Memory* @sub_4057a0._Z13test_constantIs20custom_mod_constantsIsEEvPT_iPKc(%struct.State* nonnull %0, i64 %1466, %struct.Memory* %call2_40156c)
  %1471 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x41902f_type* @G__0x41902f to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41902f_type* @G__0x41902f to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %1472 = load i64, i64* %RBP.i, align 8
  %1473 = add i64 %1472, -64
  %1474 = add i64 %1471, 11
  store i64 %1474, i64* %3, align 8
  %1475 = inttoptr i64 %1473 to i64*
  %1476 = load i64, i64* %1475, align 8
  store i64 %1476, i64* %RDI.i3611.pre-phi, align 8
  %1477 = add i64 %1472, -44
  %1478 = add i64 %1471, 14
  store i64 %1478, i64* %3, align 8
  %1479 = inttoptr i64 %1477 to i32*
  %1480 = load i32, i32* %1479, align 4
  %1481 = zext i32 %1480 to i64
  store i64 %1481, i64* %RSI.i3626, align 8
  %1482 = add i64 %1471, 17100
  %1483 = add i64 %1471, 19
  %1484 = load i64, i64* %6, align 8
  %1485 = add i64 %1484, -8
  %1486 = inttoptr i64 %1485 to i64*
  store i64 %1483, i64* %1486, align 8
  store i64 %1485, i64* %6, align 8
  store i64 %1482, i64* %3, align 8
  %call2_401592 = tail call %struct.Memory* @sub_405850._Z13test_constantIs22custom_equal_constantsIsEEvPT_iPKc(%struct.State* nonnull %0, i64 %1482, %struct.Memory* %call2_40157f)
  %1487 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x419048_type* @G__0x419048 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419048_type* @G__0x419048 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %1488 = load i64, i64* %RBP.i, align 8
  %1489 = add i64 %1488, -64
  %1490 = add i64 %1487, 11
  store i64 %1490, i64* %3, align 8
  %1491 = inttoptr i64 %1489 to i64*
  %1492 = load i64, i64* %1491, align 8
  store i64 %1492, i64* %RDI.i3611.pre-phi, align 8
  %1493 = add i64 %1488, -44
  %1494 = add i64 %1487, 14
  store i64 %1494, i64* %3, align 8
  %1495 = inttoptr i64 %1493 to i32*
  %1496 = load i32, i32* %1495, align 4
  %1497 = zext i32 %1496 to i64
  store i64 %1497, i64* %RSI.i3626, align 8
  %1498 = add i64 %1487, 17257
  %1499 = add i64 %1487, 19
  %1500 = load i64, i64* %6, align 8
  %1501 = add i64 %1500, -8
  %1502 = inttoptr i64 %1501 to i64*
  store i64 %1499, i64* %1502, align 8
  store i64 %1501, i64* %6, align 8
  store i64 %1498, i64* %3, align 8
  %call2_4015a5 = tail call %struct.Memory* @sub_405900._Z13test_constantIs25custom_notequal_constantsIsEEvPT_iPKc(%struct.State* nonnull %0, i64 %1498, %struct.Memory* %call2_401592)
  %1503 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x419064_type* @G__0x419064 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419064_type* @G__0x419064 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %1504 = load i64, i64* %RBP.i, align 8
  %1505 = add i64 %1504, -64
  %1506 = add i64 %1503, 11
  store i64 %1506, i64* %3, align 8
  %1507 = inttoptr i64 %1505 to i64*
  %1508 = load i64, i64* %1507, align 8
  store i64 %1508, i64* %RDI.i3611.pre-phi, align 8
  %1509 = add i64 %1504, -44
  %1510 = add i64 %1503, 14
  store i64 %1510, i64* %3, align 8
  %1511 = inttoptr i64 %1509 to i32*
  %1512 = load i32, i32* %1511, align 4
  %1513 = zext i32 %1512 to i64
  store i64 %1513, i64* %RSI.i3626, align 8
  %1514 = add i64 %1503, 17414
  %1515 = add i64 %1503, 19
  %1516 = load i64, i64* %6, align 8
  %1517 = add i64 %1516, -8
  %1518 = inttoptr i64 %1517 to i64*
  store i64 %1515, i64* %1518, align 8
  store i64 %1517, i64* %6, align 8
  store i64 %1514, i64* %3, align 8
  %call2_4015b8 = tail call %struct.Memory* @sub_4059b0._Z13test_constantIs28custom_greaterthan_constantsIsEEvPT_iPKc(%struct.State* nonnull %0, i64 %1514, %struct.Memory* %call2_4015a5)
  %1519 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x419084_type* @G__0x419084 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419084_type* @G__0x419084 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %1520 = load i64, i64* %RBP.i, align 8
  %1521 = add i64 %1520, -64
  %1522 = add i64 %1519, 11
  store i64 %1522, i64* %3, align 8
  %1523 = inttoptr i64 %1521 to i64*
  %1524 = load i64, i64* %1523, align 8
  store i64 %1524, i64* %RDI.i3611.pre-phi, align 8
  %1525 = add i64 %1520, -44
  %1526 = add i64 %1519, 14
  store i64 %1526, i64* %3, align 8
  %1527 = inttoptr i64 %1525 to i32*
  %1528 = load i32, i32* %1527, align 4
  %1529 = zext i32 %1528 to i64
  store i64 %1529, i64* %RSI.i3626, align 8
  %1530 = add i64 %1519, 17571
  %1531 = add i64 %1519, 19
  %1532 = load i64, i64* %6, align 8
  %1533 = add i64 %1532, -8
  %1534 = inttoptr i64 %1533 to i64*
  store i64 %1531, i64* %1534, align 8
  store i64 %1533, i64* %6, align 8
  store i64 %1530, i64* %3, align 8
  %call2_4015cb = tail call %struct.Memory* @sub_405a60._Z13test_constantIs25custom_lessthan_constantsIsEEvPT_iPKc(%struct.State* nonnull %0, i64 %1530, %struct.Memory* %call2_4015b8)
  %1535 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x4190a1_type* @G__0x4190a1 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4190a1_type* @G__0x4190a1 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %1536 = load i64, i64* %RBP.i, align 8
  %1537 = add i64 %1536, -64
  %1538 = add i64 %1535, 11
  store i64 %1538, i64* %3, align 8
  %1539 = inttoptr i64 %1537 to i64*
  %1540 = load i64, i64* %1539, align 8
  store i64 %1540, i64* %RDI.i3611.pre-phi, align 8
  %1541 = add i64 %1536, -44
  %1542 = add i64 %1535, 14
  store i64 %1542, i64* %3, align 8
  %1543 = inttoptr i64 %1541 to i32*
  %1544 = load i32, i32* %1543, align 4
  %1545 = zext i32 %1544 to i64
  store i64 %1545, i64* %RSI.i3626, align 8
  %1546 = add i64 %1535, 17728
  %1547 = add i64 %1535, 19
  %1548 = load i64, i64* %6, align 8
  %1549 = add i64 %1548, -8
  %1550 = inttoptr i64 %1549 to i64*
  store i64 %1547, i64* %1550, align 8
  store i64 %1549, i64* %6, align 8
  store i64 %1546, i64* %3, align 8
  %call2_4015de = tail call %struct.Memory* @sub_405b10._Z13test_constantIs33custom_greaterthanequal_constantsIsEEvPT_iPKc(%struct.State* nonnull %0, i64 %1546, %struct.Memory* %call2_4015cb)
  %1551 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x4190c7_type* @G__0x4190c7 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4190c7_type* @G__0x4190c7 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %1552 = load i64, i64* %RBP.i, align 8
  %1553 = add i64 %1552, -64
  %1554 = add i64 %1551, 11
  store i64 %1554, i64* %3, align 8
  %1555 = inttoptr i64 %1553 to i64*
  %1556 = load i64, i64* %1555, align 8
  store i64 %1556, i64* %RDI.i3611.pre-phi, align 8
  %1557 = add i64 %1552, -44
  %1558 = add i64 %1551, 14
  store i64 %1558, i64* %3, align 8
  %1559 = inttoptr i64 %1557 to i32*
  %1560 = load i32, i32* %1559, align 4
  %1561 = zext i32 %1560 to i64
  store i64 %1561, i64* %RSI.i3626, align 8
  %1562 = add i64 %1551, 17885
  %1563 = add i64 %1551, 19
  %1564 = load i64, i64* %6, align 8
  %1565 = add i64 %1564, -8
  %1566 = inttoptr i64 %1565 to i64*
  store i64 %1563, i64* %1566, align 8
  store i64 %1565, i64* %6, align 8
  store i64 %1562, i64* %3, align 8
  %call2_4015f1 = tail call %struct.Memory* @sub_405bc0._Z13test_constantIs30custom_lessthanequal_constantsIsEEvPT_iPKc(%struct.State* nonnull %0, i64 %1562, %struct.Memory* %call2_4015de)
  %1567 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x4190ea_type* @G__0x4190ea to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4190ea_type* @G__0x4190ea to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %1568 = load i64, i64* %RBP.i, align 8
  %1569 = add i64 %1568, -64
  %1570 = add i64 %1567, 11
  store i64 %1570, i64* %3, align 8
  %1571 = inttoptr i64 %1569 to i64*
  %1572 = load i64, i64* %1571, align 8
  store i64 %1572, i64* %RDI.i3611.pre-phi, align 8
  %1573 = add i64 %1568, -44
  %1574 = add i64 %1567, 14
  store i64 %1574, i64* %3, align 8
  %1575 = inttoptr i64 %1573 to i32*
  %1576 = load i32, i32* %1575, align 4
  %1577 = zext i32 %1576 to i64
  store i64 %1577, i64* %RSI.i3626, align 8
  %1578 = add i64 %1567, 18042
  %1579 = add i64 %1567, 19
  %1580 = load i64, i64* %6, align 8
  %1581 = add i64 %1580, -8
  %1582 = inttoptr i64 %1581 to i64*
  store i64 %1579, i64* %1582, align 8
  store i64 %1581, i64* %6, align 8
  store i64 %1578, i64* %3, align 8
  %call2_401604 = tail call %struct.Memory* @sub_405c70._Z13test_constantIs20custom_and_constantsIsEEvPT_iPKc(%struct.State* nonnull %0, i64 %1578, %struct.Memory* %call2_4015f1)
  %1583 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x419101_type* @G__0x419101 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419101_type* @G__0x419101 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %1584 = load i64, i64* %RBP.i, align 8
  %1585 = add i64 %1584, -64
  %1586 = add i64 %1583, 11
  store i64 %1586, i64* %3, align 8
  %1587 = inttoptr i64 %1585 to i64*
  %1588 = load i64, i64* %1587, align 8
  store i64 %1588, i64* %RDI.i3611.pre-phi, align 8
  %1589 = add i64 %1584, -44
  %1590 = add i64 %1583, 14
  store i64 %1590, i64* %3, align 8
  %1591 = inttoptr i64 %1589 to i32*
  %1592 = load i32, i32* %1591, align 4
  %1593 = zext i32 %1592 to i64
  store i64 %1593, i64* %RSI.i3626, align 8
  %1594 = add i64 %1583, 18199
  %1595 = add i64 %1583, 19
  %1596 = load i64, i64* %6, align 8
  %1597 = add i64 %1596, -8
  %1598 = inttoptr i64 %1597 to i64*
  store i64 %1595, i64* %1598, align 8
  store i64 %1597, i64* %6, align 8
  store i64 %1594, i64* %3, align 8
  %call2_401617 = tail call %struct.Memory* @sub_405d20._Z13test_constantIs19custom_or_constantsIsEEvPT_iPKc(%struct.State* nonnull %0, i64 %1594, %struct.Memory* %call2_401604)
  %1599 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x419117_type* @G__0x419117 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419117_type* @G__0x419117 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %1600 = load i64, i64* %RBP.i, align 8
  %1601 = add i64 %1600, -64
  %1602 = add i64 %1599, 11
  store i64 %1602, i64* %3, align 8
  %1603 = inttoptr i64 %1601 to i64*
  %1604 = load i64, i64* %1603, align 8
  store i64 %1604, i64* %RDI.i3611.pre-phi, align 8
  %1605 = add i64 %1600, -44
  %1606 = add i64 %1599, 14
  store i64 %1606, i64* %3, align 8
  %1607 = inttoptr i64 %1605 to i32*
  %1608 = load i32, i32* %1607, align 4
  %1609 = zext i32 %1608 to i64
  store i64 %1609, i64* %RSI.i3626, align 8
  %1610 = add i64 %1599, 18356
  %1611 = add i64 %1599, 19
  %1612 = load i64, i64* %6, align 8
  %1613 = add i64 %1612, -8
  %1614 = inttoptr i64 %1613 to i64*
  store i64 %1611, i64* %1614, align 8
  store i64 %1613, i64* %6, align 8
  store i64 %1610, i64* %3, align 8
  %call2_40162a = tail call %struct.Memory* @sub_405dd0._Z13test_constantIs20custom_xor_constantsIsEEvPT_iPKc(%struct.State* nonnull %0, i64 %1610, %struct.Memory* %call2_401617)
  %1615 = load i64, i64* %3, align 8
  %1616 = add i64 %1615, ptrtoint (%G_0x220a4a__rip__type* @G_0x220a4a__rip_ to i64)
  %1617 = add i64 %1615, 7
  store i64 %1617, i64* %3, align 8
  %1618 = inttoptr i64 %1616 to i32*
  %1619 = load i32, i32* %1618, align 4
  %1620 = sext i32 %1619 to i64
  %1621 = mul nsw i64 %1620, 1717986919
  %1622 = lshr i64 %1621, 63
  store i64 %1622, i64* %RCX.i3620, align 8
  %1623 = trunc i64 %1622 to i32
  %1624 = ashr i64 %1621, 34
  store i64 %1624, i64* %RAX.i3622, align 8
  %1625 = trunc i64 %1624 to i32
  %1626 = add i32 %1623, %1625
  %1627 = zext i32 %1626 to i64
  store i64 %1627, i64* %206, align 8
  %1628 = icmp ult i32 %1626, %1625
  %1629 = icmp ult i32 %1626, %1623
  %1630 = or i1 %1628, %1629
  %1631 = zext i1 %1630 to i8
  store i8 %1631, i8* %14, align 1
  %1632 = and i32 %1626, 255
  %1633 = tail call i32 @llvm.ctpop.i32(i32 %1632)
  %1634 = trunc i32 %1633 to i8
  %1635 = and i8 %1634, 1
  %1636 = xor i8 %1635, 1
  store i8 %1636, i8* %21, align 1
  %1637 = trunc i64 %1624 to i32
  %1638 = xor i32 %1637, %1626
  %1639 = lshr i32 %1638, 4
  %1640 = trunc i32 %1639 to i8
  %1641 = and i8 %1640, 1
  store i8 %1641, i8* %27, align 1
  %1642 = icmp eq i32 %1626, 0
  %1643 = zext i1 %1642 to i8
  store i8 %1643, i8* %30, align 1
  %1644 = lshr i32 %1626, 31
  %1645 = trunc i32 %1644 to i8
  store i8 %1645, i8* %33, align 1
  %1646 = lshr i64 %1624, 31
  %1647 = trunc i64 %1646 to i32
  %1648 = and i32 %1647, 1
  %1649 = xor i32 %1644, %1648
  %1650 = add nuw nsw i32 %1649, %1644
  %1651 = icmp eq i32 %1650, 2
  %1652 = zext i1 %1651 to i8
  store i8 %1652, i8* %39, align 1
  %1653 = add i64 %1615, add (i64 ptrtoint (%G_0x220a69__rip__type* @G_0x220a69__rip_ to i64), i64 33)
  %1654 = add i64 %1615, 40
  store i64 %1654, i64* %3, align 8
  %1655 = inttoptr i64 %1653 to i32*
  store i32 %1626, i32* %1655, align 4
  %1656 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x41912e_type* @G__0x41912e to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41912e_type* @G__0x41912e to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %1657 = load i64, i64* %RBP.i, align 8
  %1658 = add i64 %1657, -64
  %1659 = add i64 %1656, 11
  store i64 %1659, i64* %3, align 8
  %1660 = inttoptr i64 %1658 to i64*
  %1661 = load i64, i64* %1660, align 8
  store i64 %1661, i64* %RDI.i3611.pre-phi, align 8
  %1662 = add i64 %1657, -44
  %1663 = add i64 %1656, 14
  store i64 %1663, i64* %3, align 8
  %1664 = inttoptr i64 %1662 to i32*
  %1665 = load i32, i32* %1664, align 4
  %1666 = zext i32 %1665 to i64
  store i64 %1666, i64* %RSI.i3626, align 8
  %1667 = add i64 %1656, 18473
  %1668 = add i64 %1656, 19
  %1669 = load i64, i64* %6, align 8
  %1670 = add i64 %1669, -8
  %1671 = inttoptr i64 %1670 to i64*
  store i64 %1668, i64* %1671, align 8
  store i64 %1670, i64* %6, align 8
  store i64 %1667, i64* %3, align 8
  %call2_401665 = tail call %struct.Memory* @sub_405e80._Z13test_constantIs19custom_constant_addIsEEvPT_iPKc(%struct.State* nonnull %0, i64 %1667, %struct.Memory* %call2_40162a)
  %1672 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x419144_type* @G__0x419144 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419144_type* @G__0x419144 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %1673 = load i64, i64* %RBP.i, align 8
  %1674 = add i64 %1673, -64
  %1675 = add i64 %1672, 11
  store i64 %1675, i64* %3, align 8
  %1676 = inttoptr i64 %1674 to i64*
  %1677 = load i64, i64* %1676, align 8
  store i64 %1677, i64* %RDI.i3611.pre-phi, align 8
  %1678 = add i64 %1673, -44
  %1679 = add i64 %1672, 14
  store i64 %1679, i64* %3, align 8
  %1680 = inttoptr i64 %1678 to i32*
  %1681 = load i32, i32* %1680, align 4
  %1682 = zext i32 %1681 to i64
  store i64 %1682, i64* %RSI.i3626, align 8
  %1683 = add i64 %1672, 18630
  %1684 = add i64 %1672, 19
  %1685 = load i64, i64* %6, align 8
  %1686 = add i64 %1685, -8
  %1687 = inttoptr i64 %1686 to i64*
  store i64 %1684, i64* %1687, align 8
  store i64 %1686, i64* %6, align 8
  store i64 %1683, i64* %3, align 8
  %call2_401678 = tail call %struct.Memory* @sub_405f30._Z13test_constantIs28custom_multiple_constant_addIsEEvPT_iPKc(%struct.State* nonnull %0, i64 %1683, %struct.Memory* %call2_401665)
  %1688 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x419164_type* @G__0x419164 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419164_type* @G__0x419164 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %1689 = load i64, i64* %RBP.i, align 8
  %1690 = add i64 %1689, -64
  %1691 = add i64 %1688, 11
  store i64 %1691, i64* %3, align 8
  %1692 = inttoptr i64 %1690 to i64*
  %1693 = load i64, i64* %1692, align 8
  store i64 %1693, i64* %RDI.i3611.pre-phi, align 8
  %1694 = add i64 %1689, -44
  %1695 = add i64 %1688, 14
  store i64 %1695, i64* %3, align 8
  %1696 = inttoptr i64 %1694 to i32*
  %1697 = load i32, i32* %1696, align 4
  %1698 = zext i32 %1697 to i64
  store i64 %1698, i64* %RSI.i3626, align 8
  %1699 = add i64 %1688, 18787
  %1700 = add i64 %1688, 19
  %1701 = load i64, i64* %6, align 8
  %1702 = add i64 %1701, -8
  %1703 = inttoptr i64 %1702 to i64*
  store i64 %1700, i64* %1703, align 8
  store i64 %1702, i64* %6, align 8
  store i64 %1699, i64* %3, align 8
  %call2_40168b = tail call %struct.Memory* @sub_405fe0._Z13test_constantIs19custom_constant_subIsEEvPT_iPKc(%struct.State* nonnull %0, i64 %1699, %struct.Memory* %call2_401678)
  %1704 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x41917f_type* @G__0x41917f to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41917f_type* @G__0x41917f to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %1705 = load i64, i64* %RBP.i, align 8
  %1706 = add i64 %1705, -64
  %1707 = add i64 %1704, 11
  store i64 %1707, i64* %3, align 8
  %1708 = inttoptr i64 %1706 to i64*
  %1709 = load i64, i64* %1708, align 8
  store i64 %1709, i64* %RDI.i3611.pre-phi, align 8
  %1710 = add i64 %1705, -44
  %1711 = add i64 %1704, 14
  store i64 %1711, i64* %3, align 8
  %1712 = inttoptr i64 %1710 to i32*
  %1713 = load i32, i32* %1712, align 4
  %1714 = zext i32 %1713 to i64
  store i64 %1714, i64* %RSI.i3626, align 8
  %1715 = add i64 %1704, 18944
  %1716 = add i64 %1704, 19
  %1717 = load i64, i64* %6, align 8
  %1718 = add i64 %1717, -8
  %1719 = inttoptr i64 %1718 to i64*
  store i64 %1716, i64* %1719, align 8
  store i64 %1718, i64* %6, align 8
  store i64 %1715, i64* %3, align 8
  %call2_40169e = tail call %struct.Memory* @sub_406090._Z13test_constantIs28custom_multiple_constant_subIsEEvPT_iPKc(%struct.State* nonnull %0, i64 %1715, %struct.Memory* %call2_40168b)
  %1720 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x4191a4_type* @G__0x4191a4 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4191a4_type* @G__0x4191a4 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %1721 = load i64, i64* %RBP.i, align 8
  %1722 = add i64 %1721, -64
  %1723 = add i64 %1720, 11
  store i64 %1723, i64* %3, align 8
  %1724 = inttoptr i64 %1722 to i64*
  %1725 = load i64, i64* %1724, align 8
  store i64 %1725, i64* %RDI.i3611.pre-phi, align 8
  %1726 = add i64 %1721, -44
  %1727 = add i64 %1720, 14
  store i64 %1727, i64* %3, align 8
  %1728 = inttoptr i64 %1726 to i32*
  %1729 = load i32, i32* %1728, align 4
  %1730 = zext i32 %1729 to i64
  store i64 %1730, i64* %RSI.i3626, align 8
  %1731 = add i64 %1720, 19101
  %1732 = add i64 %1720, 19
  %1733 = load i64, i64* %6, align 8
  %1734 = add i64 %1733, -8
  %1735 = inttoptr i64 %1734 to i64*
  store i64 %1732, i64* %1735, align 8
  store i64 %1734, i64* %6, align 8
  store i64 %1731, i64* %3, align 8
  %call2_4016b1 = tail call %struct.Memory* @sub_406140._Z13test_constantIs24custom_constant_multiplyIsEEvPT_iPKc(%struct.State* nonnull %0, i64 %1731, %struct.Memory* %call2_40169e)
  %1736 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x4191bf_type* @G__0x4191bf to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4191bf_type* @G__0x4191bf to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %1737 = load i64, i64* %RBP.i, align 8
  %1738 = add i64 %1737, -64
  %1739 = add i64 %1736, 11
  store i64 %1739, i64* %3, align 8
  %1740 = inttoptr i64 %1738 to i64*
  %1741 = load i64, i64* %1740, align 8
  store i64 %1741, i64* %RDI.i3611.pre-phi, align 8
  %1742 = add i64 %1737, -44
  %1743 = add i64 %1736, 14
  store i64 %1743, i64* %3, align 8
  %1744 = inttoptr i64 %1742 to i32*
  %1745 = load i32, i32* %1744, align 4
  %1746 = zext i32 %1745 to i64
  store i64 %1746, i64* %RSI.i3626, align 8
  %1747 = add i64 %1736, 19258
  %1748 = add i64 %1736, 19
  %1749 = load i64, i64* %6, align 8
  %1750 = add i64 %1749, -8
  %1751 = inttoptr i64 %1750 to i64*
  store i64 %1748, i64* %1751, align 8
  store i64 %1750, i64* %6, align 8
  store i64 %1747, i64* %3, align 8
  %call2_4016c4 = tail call %struct.Memory* @sub_4061f0._Z13test_constantIs33custom_multiple_constant_multiplyIsEEvPT_iPKc(%struct.State* nonnull %0, i64 %1747, %struct.Memory* %call2_4016b1)
  %1752 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x4191e5_type* @G__0x4191e5 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4191e5_type* @G__0x4191e5 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %1753 = load i64, i64* %RBP.i, align 8
  %1754 = add i64 %1753, -64
  %1755 = add i64 %1752, 11
  store i64 %1755, i64* %3, align 8
  %1756 = inttoptr i64 %1754 to i64*
  %1757 = load i64, i64* %1756, align 8
  store i64 %1757, i64* %RDI.i3611.pre-phi, align 8
  %1758 = add i64 %1753, -44
  %1759 = add i64 %1752, 14
  store i64 %1759, i64* %3, align 8
  %1760 = inttoptr i64 %1758 to i32*
  %1761 = load i32, i32* %1760, align 4
  %1762 = zext i32 %1761 to i64
  store i64 %1762, i64* %RSI.i3626, align 8
  %1763 = add i64 %1752, 19415
  %1764 = add i64 %1752, 19
  %1765 = load i64, i64* %6, align 8
  %1766 = add i64 %1765, -8
  %1767 = inttoptr i64 %1766 to i64*
  store i64 %1764, i64* %1767, align 8
  store i64 %1766, i64* %6, align 8
  store i64 %1763, i64* %3, align 8
  %call2_4016d7 = tail call %struct.Memory* @sub_4062a0._Z13test_constantIs34custom_multiple_constant_multiply2IsEEvPT_iPKc(%struct.State* nonnull %0, i64 %1763, %struct.Memory* %call2_4016c4)
  %1768 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x41920a_type* @G__0x41920a to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41920a_type* @G__0x41920a to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %1769 = load i64, i64* %RBP.i, align 8
  %1770 = add i64 %1769, -64
  %1771 = add i64 %1768, 11
  store i64 %1771, i64* %3, align 8
  %1772 = inttoptr i64 %1770 to i64*
  %1773 = load i64, i64* %1772, align 8
  store i64 %1773, i64* %RDI.i3611.pre-phi, align 8
  %1774 = add i64 %1769, -44
  %1775 = add i64 %1768, 14
  store i64 %1775, i64* %3, align 8
  %1776 = inttoptr i64 %1774 to i32*
  %1777 = load i32, i32* %1776, align 4
  %1778 = zext i32 %1777 to i64
  store i64 %1778, i64* %RSI.i3626, align 8
  %1779 = add i64 %1768, 19572
  %1780 = add i64 %1768, 19
  %1781 = load i64, i64* %6, align 8
  %1782 = add i64 %1781, -8
  %1783 = inttoptr i64 %1782 to i64*
  store i64 %1780, i64* %1783, align 8
  store i64 %1782, i64* %6, align 8
  store i64 %1779, i64* %3, align 8
  %call2_4016ea = tail call %struct.Memory* @sub_406350._Z13test_constantIs22custom_constant_divideIsEEvPT_iPKc(%struct.State* nonnull %0, i64 %1779, %struct.Memory* %call2_4016d7)
  %1784 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x419223_type* @G__0x419223 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419223_type* @G__0x419223 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %1785 = load i64, i64* %RBP.i, align 8
  %1786 = add i64 %1785, -64
  %1787 = add i64 %1784, 11
  store i64 %1787, i64* %3, align 8
  %1788 = inttoptr i64 %1786 to i64*
  %1789 = load i64, i64* %1788, align 8
  store i64 %1789, i64* %RDI.i3611.pre-phi, align 8
  %1790 = add i64 %1785, -44
  %1791 = add i64 %1784, 14
  store i64 %1791, i64* %3, align 8
  %1792 = inttoptr i64 %1790 to i32*
  %1793 = load i32, i32* %1792, align 4
  %1794 = zext i32 %1793 to i64
  store i64 %1794, i64* %RSI.i3626, align 8
  %1795 = add i64 %1784, 19729
  %1796 = add i64 %1784, 19
  %1797 = load i64, i64* %6, align 8
  %1798 = add i64 %1797, -8
  %1799 = inttoptr i64 %1798 to i64*
  store i64 %1796, i64* %1799, align 8
  store i64 %1798, i64* %6, align 8
  store i64 %1795, i64* %3, align 8
  %call2_4016fd = tail call %struct.Memory* @sub_406400._Z13test_constantIs31custom_multiple_constant_divideIsEEvPT_iPKc(%struct.State* nonnull %0, i64 %1795, %struct.Memory* %call2_4016ea)
  %1800 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x419246_type* @G__0x419246 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419246_type* @G__0x419246 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %1801 = load i64, i64* %RBP.i, align 8
  %1802 = add i64 %1801, -64
  %1803 = add i64 %1800, 11
  store i64 %1803, i64* %3, align 8
  %1804 = inttoptr i64 %1802 to i64*
  %1805 = load i64, i64* %1804, align 8
  store i64 %1805, i64* %RDI.i3611.pre-phi, align 8
  %1806 = add i64 %1801, -44
  %1807 = add i64 %1800, 14
  store i64 %1807, i64* %3, align 8
  %1808 = inttoptr i64 %1806 to i32*
  %1809 = load i32, i32* %1808, align 4
  %1810 = zext i32 %1809 to i64
  store i64 %1810, i64* %RSI.i3626, align 8
  %1811 = add i64 %1800, 19886
  %1812 = add i64 %1800, 19
  %1813 = load i64, i64* %6, align 8
  %1814 = add i64 %1813, -8
  %1815 = inttoptr i64 %1814 to i64*
  store i64 %1812, i64* %1815, align 8
  store i64 %1814, i64* %6, align 8
  store i64 %1811, i64* %3, align 8
  %call2_401710 = tail call %struct.Memory* @sub_4064b0._Z13test_constantIs32custom_multiple_constant_divide2IsEEvPT_iPKc(%struct.State* nonnull %0, i64 %1811, %struct.Memory* %call2_4016fd)
  %1816 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x419269_type* @G__0x419269 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419269_type* @G__0x419269 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %1817 = load i64, i64* %RBP.i, align 8
  %1818 = add i64 %1817, -64
  %1819 = add i64 %1816, 11
  store i64 %1819, i64* %3, align 8
  %1820 = inttoptr i64 %1818 to i64*
  %1821 = load i64, i64* %1820, align 8
  store i64 %1821, i64* %RDI.i3611.pre-phi, align 8
  %1822 = add i64 %1817, -44
  %1823 = add i64 %1816, 14
  store i64 %1823, i64* %3, align 8
  %1824 = inttoptr i64 %1822 to i32*
  %1825 = load i32, i32* %1824, align 4
  %1826 = zext i32 %1825 to i64
  store i64 %1826, i64* %RSI.i3626, align 8
  %1827 = add i64 %1816, 20043
  %1828 = add i64 %1816, 19
  %1829 = load i64, i64* %6, align 8
  %1830 = add i64 %1829, -8
  %1831 = inttoptr i64 %1830 to i64*
  store i64 %1828, i64* %1831, align 8
  store i64 %1830, i64* %6, align 8
  store i64 %1827, i64* %3, align 8
  %call2_401723 = tail call %struct.Memory* @sub_406560._Z13test_constantIs30custom_multiple_constant_mixedIsEEvPT_iPKc(%struct.State* nonnull %0, i64 %1827, %struct.Memory* %call2_401710)
  %1832 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x41928a_type* @G__0x41928a to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41928a_type* @G__0x41928a to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %1833 = load i64, i64* %RBP.i, align 8
  %1834 = add i64 %1833, -64
  %1835 = add i64 %1832, 11
  store i64 %1835, i64* %3, align 8
  %1836 = inttoptr i64 %1834 to i64*
  %1837 = load i64, i64* %1836, align 8
  store i64 %1837, i64* %RDI.i3611.pre-phi, align 8
  %1838 = add i64 %1833, -44
  %1839 = add i64 %1832, 14
  store i64 %1839, i64* %3, align 8
  %1840 = inttoptr i64 %1838 to i32*
  %1841 = load i32, i32* %1840, align 4
  %1842 = zext i32 %1841 to i64
  store i64 %1842, i64* %RSI.i3626, align 8
  %1843 = add i64 %1832, 20200
  %1844 = add i64 %1832, 19
  %1845 = load i64, i64* %6, align 8
  %1846 = add i64 %1845, -8
  %1847 = inttoptr i64 %1846 to i64*
  store i64 %1844, i64* %1847, align 8
  store i64 %1846, i64* %6, align 8
  store i64 %1843, i64* %3, align 8
  %call2_401736 = tail call %struct.Memory* @sub_406610._Z13test_constantIs19custom_constant_andIsEEvPT_iPKc(%struct.State* nonnull %0, i64 %1843, %struct.Memory* %call2_401723)
  %1848 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x4192a0_type* @G__0x4192a0 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4192a0_type* @G__0x4192a0 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %1849 = load i64, i64* %RBP.i, align 8
  %1850 = add i64 %1849, -64
  %1851 = add i64 %1848, 11
  store i64 %1851, i64* %3, align 8
  %1852 = inttoptr i64 %1850 to i64*
  %1853 = load i64, i64* %1852, align 8
  store i64 %1853, i64* %RDI.i3611.pre-phi, align 8
  %1854 = add i64 %1849, -44
  %1855 = add i64 %1848, 14
  store i64 %1855, i64* %3, align 8
  %1856 = inttoptr i64 %1854 to i32*
  %1857 = load i32, i32* %1856, align 4
  %1858 = zext i32 %1857 to i64
  store i64 %1858, i64* %RSI.i3626, align 8
  %1859 = add i64 %1848, 20357
  %1860 = add i64 %1848, 19
  %1861 = load i64, i64* %6, align 8
  %1862 = add i64 %1861, -8
  %1863 = inttoptr i64 %1862 to i64*
  store i64 %1860, i64* %1863, align 8
  store i64 %1862, i64* %6, align 8
  store i64 %1859, i64* %3, align 8
  %call2_401749 = tail call %struct.Memory* @sub_4066c0._Z13test_constantIs28custom_multiple_constant_andIsEEvPT_iPKc(%struct.State* nonnull %0, i64 %1859, %struct.Memory* %call2_401736)
  %1864 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x4192bf_type* @G__0x4192bf to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4192bf_type* @G__0x4192bf to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %1865 = load i64, i64* %RBP.i, align 8
  %1866 = add i64 %1865, -64
  %1867 = add i64 %1864, 11
  store i64 %1867, i64* %3, align 8
  %1868 = inttoptr i64 %1866 to i64*
  %1869 = load i64, i64* %1868, align 8
  store i64 %1869, i64* %RDI.i3611.pre-phi, align 8
  %1870 = add i64 %1865, -44
  %1871 = add i64 %1864, 14
  store i64 %1871, i64* %3, align 8
  %1872 = inttoptr i64 %1870 to i32*
  %1873 = load i32, i32* %1872, align 4
  %1874 = zext i32 %1873 to i64
  store i64 %1874, i64* %RSI.i3626, align 8
  %1875 = add i64 %1864, 20514
  %1876 = add i64 %1864, 19
  %1877 = load i64, i64* %6, align 8
  %1878 = add i64 %1877, -8
  %1879 = inttoptr i64 %1878 to i64*
  store i64 %1876, i64* %1879, align 8
  store i64 %1878, i64* %6, align 8
  store i64 %1875, i64* %3, align 8
  %call2_40175c = tail call %struct.Memory* @sub_406770._Z13test_constantIs18custom_constant_orIsEEvPT_iPKc(%struct.State* nonnull %0, i64 %1875, %struct.Memory* %call2_401749)
  %1880 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x4192d4_type* @G__0x4192d4 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4192d4_type* @G__0x4192d4 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %1881 = load i64, i64* %RBP.i, align 8
  %1882 = add i64 %1881, -64
  %1883 = add i64 %1880, 11
  store i64 %1883, i64* %3, align 8
  %1884 = inttoptr i64 %1882 to i64*
  %1885 = load i64, i64* %1884, align 8
  store i64 %1885, i64* %RDI.i3611.pre-phi, align 8
  %1886 = add i64 %1881, -44
  %1887 = add i64 %1880, 14
  store i64 %1887, i64* %3, align 8
  %1888 = inttoptr i64 %1886 to i32*
  %1889 = load i32, i32* %1888, align 4
  %1890 = zext i32 %1889 to i64
  store i64 %1890, i64* %RSI.i3626, align 8
  %1891 = add i64 %1880, 20671
  %1892 = add i64 %1880, 19
  %1893 = load i64, i64* %6, align 8
  %1894 = add i64 %1893, -8
  %1895 = inttoptr i64 %1894 to i64*
  store i64 %1892, i64* %1895, align 8
  store i64 %1894, i64* %6, align 8
  store i64 %1891, i64* %3, align 8
  %call2_40176f = tail call %struct.Memory* @sub_406820._Z13test_constantIs27custom_multiple_constant_orIsEEvPT_iPKc(%struct.State* nonnull %0, i64 %1891, %struct.Memory* %call2_40175c)
  %1896 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x4192f2_type* @G__0x4192f2 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4192f2_type* @G__0x4192f2 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %1897 = load i64, i64* %RBP.i, align 8
  %1898 = add i64 %1897, -64
  %1899 = add i64 %1896, 11
  store i64 %1899, i64* %3, align 8
  %1900 = inttoptr i64 %1898 to i64*
  %1901 = load i64, i64* %1900, align 8
  store i64 %1901, i64* %RDI.i3611.pre-phi, align 8
  %1902 = add i64 %1897, -44
  %1903 = add i64 %1896, 14
  store i64 %1903, i64* %3, align 8
  %1904 = inttoptr i64 %1902 to i32*
  %1905 = load i32, i32* %1904, align 4
  %1906 = zext i32 %1905 to i64
  store i64 %1906, i64* %RSI.i3626, align 8
  %1907 = add i64 %1896, 20828
  %1908 = add i64 %1896, 19
  %1909 = load i64, i64* %6, align 8
  %1910 = add i64 %1909, -8
  %1911 = inttoptr i64 %1910 to i64*
  store i64 %1908, i64* %1911, align 8
  store i64 %1910, i64* %6, align 8
  store i64 %1907, i64* %3, align 8
  %call2_401782 = tail call %struct.Memory* @sub_4068d0._Z13test_constantIs19custom_constant_xorIsEEvPT_iPKc(%struct.State* nonnull %0, i64 %1907, %struct.Memory* %call2_40176f)
  %1912 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x419308_type* @G__0x419308 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419308_type* @G__0x419308 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %1913 = load i64, i64* %RBP.i, align 8
  %1914 = add i64 %1913, -64
  %1915 = add i64 %1912, 11
  store i64 %1915, i64* %3, align 8
  %1916 = inttoptr i64 %1914 to i64*
  %1917 = load i64, i64* %1916, align 8
  store i64 %1917, i64* %RDI.i3611.pre-phi, align 8
  %1918 = add i64 %1913, -44
  %1919 = add i64 %1912, 14
  store i64 %1919, i64* %3, align 8
  %1920 = inttoptr i64 %1918 to i32*
  %1921 = load i32, i32* %1920, align 4
  %1922 = zext i32 %1921 to i64
  store i64 %1922, i64* %RSI.i3626, align 8
  %1923 = add i64 %1912, 20985
  %1924 = add i64 %1912, 19
  %1925 = load i64, i64* %6, align 8
  %1926 = add i64 %1925, -8
  %1927 = inttoptr i64 %1926 to i64*
  store i64 %1924, i64* %1927, align 8
  store i64 %1926, i64* %6, align 8
  store i64 %1923, i64* %3, align 8
  %call2_401795 = tail call %struct.Memory* @sub_406980._Z13test_constantIs28custom_multiple_constant_xorIsEEvPT_iPKc(%struct.State* nonnull %0, i64 %1923, %struct.Memory* %call2_401782)
  %1928 = load i64, i64* %3, align 8
  %1929 = add i64 %1928, ptrtoint (%G_0x2208e6__rip__type* @G_0x2208e6__rip_ to i64)
  %1930 = add i64 %1928, 8
  store i64 %1930, i64* %3, align 8
  %1931 = inttoptr i64 %1929 to double*
  %1932 = load double, double* %1931, align 8
  %1933 = tail call double @llvm.trunc.f64(double %1932)
  %1934 = tail call double @llvm.fabs.f64(double %1933)
  %1935 = fcmp ogt double %1934, 0x41DFFFFFFFC00000
  %1936 = fptosi double %1933 to i32
  %1937 = zext i32 %1936 to i64
  %1938 = select i1 %1935, i64 2147483648, i64 %1937
  store i64 and (i64 ptrtoint (%G__0x6685d0_type* @G__0x6685d0 to i64), i64 4294967295), i64* %206, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x6685d0_type* @G__0x6685d0 to i64), i64 4294967295) to i32) to i64), i64* %RAX.i3622, align 8
  %1939 = trunc i64 %1938 to i16
  store i16 %1939, i16* %R10W.i2745, align 2
  %1940 = and i64 %1938, 65535
  store i64 %1940, i64* %RDX.i3615, align 8
  store i64 and (i64 ptrtoint (%G__0x66c450_type* @G__0x66c450 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x6685d0_type* @G__0x6685d0 to i64), i64 4294967295) to i32) to i64), i64* %RDI.i3611.pre-phi, align 8
  %1941 = load i64, i64* %RBP.i, align 8
  %1942 = add i64 %1941, -72
  %1943 = add i64 %1928, 37
  store i64 %1943, i64* %3, align 8
  %1944 = inttoptr i64 %1942 to i64*
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x6685d0_type* @G__0x6685d0 to i64), i64 4294967295) to i32) to i64), i64* %1944, align 8
  %1945 = load i64, i64* %3, align 8
  %1946 = add i64 %1945, 21105
  %1947 = add i64 %1945, 5
  %1948 = load i64, i64* %6, align 8
  %1949 = add i64 %1948, -8
  %1950 = inttoptr i64 %1949 to i64*
  store i64 %1947, i64* %1950, align 8
  store i64 %1949, i64* %6, align 8
  store i64 %1946, i64* %3, align 8
  %call2_4017bf = tail call %struct.Memory* @sub_406a30._Z4fillIPttEvT_S1_T0_(%struct.State* nonnull %0, i64 %1946, %struct.Memory* %call2_401795)
  %1951 = load i64, i64* %3, align 8
  %1952 = add i64 %1951, ptrtoint (%G_0x2208b6__rip__type* @G_0x2208b6__rip_ to i64)
  %1953 = add i64 %1951, 6
  store i64 %1953, i64* %3, align 8
  %1954 = inttoptr i64 %1952 to i32*
  %1955 = load i32, i32* %1954, align 4
  %1956 = add i64 %1951, add (i64 ptrtoint (%G_0x2208f0__rip__type* @G_0x2208f0__rip_ to i64), i64 6)
  %1957 = add i64 %1951, 12
  store i64 %1957, i64* %3, align 8
  %1958 = inttoptr i64 %1956 to i32*
  store i32 %1955, i32* %1958, align 4
  %1959 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x418f9c_type* @G__0x418f9c to i64), i64 4294967295), i64* %RDX.i3615, align 8
  %1960 = load i64, i64* %RBP.i, align 8
  %1961 = add i64 %1960, -72
  %1962 = add i64 %1959, 9
  store i64 %1962, i64* %3, align 8
  %1963 = inttoptr i64 %1961 to i64*
  %1964 = load i64, i64* %1963, align 8
  store i64 %1964, i64* %RDI.i3611.pre-phi, align 8
  %1965 = add i64 %1960, -44
  %1966 = add i64 %1959, 12
  store i64 %1966, i64* %3, align 8
  %1967 = inttoptr i64 %1965 to i32*
  %1968 = load i32, i32* %1967, align 4
  %1969 = zext i32 %1968 to i64
  store i64 %1969, i64* %RSI.i3626, align 8
  %1970 = add i64 %1959, 21152
  %1971 = add i64 %1959, 17
  %1972 = load i64, i64* %6, align 8
  %1973 = add i64 %1972, -8
  %1974 = inttoptr i64 %1973 to i64*
  store i64 %1971, i64* %1974, align 8
  store i64 %1973, i64* %6, align 8
  store i64 %1970, i64* %3, align 8
  %call2_4017dc = tail call %struct.Memory* @sub_406a70._Z13test_constantIt10custom_twoItEEvPT_iPKc(%struct.State* nonnull %0, i64 %1970, %struct.Memory* %call2_4017bf)
  %1975 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x418fae_type* @G__0x418fae to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418fae_type* @G__0x418fae to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %1976 = load i64, i64* %RBP.i, align 8
  %1977 = add i64 %1976, -72
  %1978 = add i64 %1975, 11
  store i64 %1978, i64* %3, align 8
  %1979 = inttoptr i64 %1977 to i64*
  %1980 = load i64, i64* %1979, align 8
  store i64 %1980, i64* %RDI.i3611.pre-phi, align 8
  %1981 = add i64 %1976, -44
  %1982 = add i64 %1975, 14
  store i64 %1982, i64* %3, align 8
  %1983 = inttoptr i64 %1981 to i32*
  %1984 = load i32, i32* %1983, align 4
  %1985 = zext i32 %1984 to i64
  store i64 %1985, i64* %RSI.i3626, align 8
  %1986 = add i64 %1975, 21311
  %1987 = add i64 %1975, 19
  %1988 = load i64, i64* %6, align 8
  %1989 = add i64 %1988, -8
  %1990 = inttoptr i64 %1989 to i64*
  store i64 %1987, i64* %1990, align 8
  store i64 %1989, i64* %6, align 8
  store i64 %1986, i64* %3, align 8
  %call2_4017ef = tail call %struct.Memory* @sub_406b20._Z13test_constantIt20custom_add_constantsItEEvPT_iPKc(%struct.State* nonnull %0, i64 %1986, %struct.Memory* %call2_4017dc)
  %1991 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x418fc5_type* @G__0x418fc5 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418fc5_type* @G__0x418fc5 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %1992 = load i64, i64* %RBP.i, align 8
  %1993 = add i64 %1992, -72
  %1994 = add i64 %1991, 11
  store i64 %1994, i64* %3, align 8
  %1995 = inttoptr i64 %1993 to i64*
  %1996 = load i64, i64* %1995, align 8
  store i64 %1996, i64* %RDI.i3611.pre-phi, align 8
  %1997 = add i64 %1992, -44
  %1998 = add i64 %1991, 14
  store i64 %1998, i64* %3, align 8
  %1999 = inttoptr i64 %1997 to i32*
  %2000 = load i32, i32* %1999, align 4
  %2001 = zext i32 %2000 to i64
  store i64 %2001, i64* %RSI.i3626, align 8
  %2002 = add i64 %1991, 21468
  %2003 = add i64 %1991, 19
  %2004 = load i64, i64* %6, align 8
  %2005 = add i64 %2004, -8
  %2006 = inttoptr i64 %2005 to i64*
  store i64 %2003, i64* %2006, align 8
  store i64 %2005, i64* %6, align 8
  store i64 %2002, i64* %3, align 8
  %call2_401802 = tail call %struct.Memory* @sub_406bd0._Z13test_constantIt20custom_sub_constantsItEEvPT_iPKc(%struct.State* nonnull %0, i64 %2002, %struct.Memory* %call2_4017ef)
  %2007 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x418fe1_type* @G__0x418fe1 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418fe1_type* @G__0x418fe1 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %2008 = load i64, i64* %RBP.i, align 8
  %2009 = add i64 %2008, -72
  %2010 = add i64 %2007, 11
  store i64 %2010, i64* %3, align 8
  %2011 = inttoptr i64 %2009 to i64*
  %2012 = load i64, i64* %2011, align 8
  store i64 %2012, i64* %RDI.i3611.pre-phi, align 8
  %2013 = add i64 %2008, -44
  %2014 = add i64 %2007, 14
  store i64 %2014, i64* %3, align 8
  %2015 = inttoptr i64 %2013 to i32*
  %2016 = load i32, i32* %2015, align 4
  %2017 = zext i32 %2016 to i64
  store i64 %2017, i64* %RSI.i3626, align 8
  %2018 = add i64 %2007, 21625
  %2019 = add i64 %2007, 19
  %2020 = load i64, i64* %6, align 8
  %2021 = add i64 %2020, -8
  %2022 = inttoptr i64 %2021 to i64*
  store i64 %2019, i64* %2022, align 8
  store i64 %2021, i64* %6, align 8
  store i64 %2018, i64* %3, align 8
  %call2_401815 = tail call %struct.Memory* @sub_406c80._Z13test_constantIt25custom_multiply_constantsItEEvPT_iPKc(%struct.State* nonnull %0, i64 %2018, %struct.Memory* %call2_401802)
  %2023 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x418ffd_type* @G__0x418ffd to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x418ffd_type* @G__0x418ffd to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %2024 = load i64, i64* %RBP.i, align 8
  %2025 = add i64 %2024, -72
  %2026 = add i64 %2023, 11
  store i64 %2026, i64* %3, align 8
  %2027 = inttoptr i64 %2025 to i64*
  %2028 = load i64, i64* %2027, align 8
  store i64 %2028, i64* %RDI.i3611.pre-phi, align 8
  %2029 = add i64 %2024, -44
  %2030 = add i64 %2023, 14
  store i64 %2030, i64* %3, align 8
  %2031 = inttoptr i64 %2029 to i32*
  %2032 = load i32, i32* %2031, align 4
  %2033 = zext i32 %2032 to i64
  store i64 %2033, i64* %RSI.i3626, align 8
  %2034 = add i64 %2023, 21782
  %2035 = add i64 %2023, 19
  %2036 = load i64, i64* %6, align 8
  %2037 = add i64 %2036, -8
  %2038 = inttoptr i64 %2037 to i64*
  store i64 %2035, i64* %2038, align 8
  store i64 %2037, i64* %6, align 8
  store i64 %2034, i64* %3, align 8
  %call2_401828 = tail call %struct.Memory* @sub_406d30._Z13test_constantIt23custom_divide_constantsItEEvPT_iPKc(%struct.State* nonnull %0, i64 %2034, %struct.Memory* %call2_401815)
  %2039 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x419017_type* @G__0x419017 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419017_type* @G__0x419017 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %2040 = load i64, i64* %RBP.i, align 8
  %2041 = add i64 %2040, -72
  %2042 = add i64 %2039, 11
  store i64 %2042, i64* %3, align 8
  %2043 = inttoptr i64 %2041 to i64*
  %2044 = load i64, i64* %2043, align 8
  store i64 %2044, i64* %RDI.i3611.pre-phi, align 8
  %2045 = add i64 %2040, -44
  %2046 = add i64 %2039, 14
  store i64 %2046, i64* %3, align 8
  %2047 = inttoptr i64 %2045 to i32*
  %2048 = load i32, i32* %2047, align 4
  %2049 = zext i32 %2048 to i64
  store i64 %2049, i64* %RSI.i3626, align 8
  %2050 = add i64 %2039, 21939
  %2051 = add i64 %2039, 19
  %2052 = load i64, i64* %6, align 8
  %2053 = add i64 %2052, -8
  %2054 = inttoptr i64 %2053 to i64*
  store i64 %2051, i64* %2054, align 8
  store i64 %2053, i64* %6, align 8
  store i64 %2050, i64* %3, align 8
  %call2_40183b = tail call %struct.Memory* @sub_406de0._Z13test_constantIt20custom_mod_constantsItEEvPT_iPKc(%struct.State* nonnull %0, i64 %2050, %struct.Memory* %call2_401828)
  %2055 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x41902e_type* @G__0x41902e to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41902e_type* @G__0x41902e to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %2056 = load i64, i64* %RBP.i, align 8
  %2057 = add i64 %2056, -72
  %2058 = add i64 %2055, 11
  store i64 %2058, i64* %3, align 8
  %2059 = inttoptr i64 %2057 to i64*
  %2060 = load i64, i64* %2059, align 8
  store i64 %2060, i64* %RDI.i3611.pre-phi, align 8
  %2061 = add i64 %2056, -44
  %2062 = add i64 %2055, 14
  store i64 %2062, i64* %3, align 8
  %2063 = inttoptr i64 %2061 to i32*
  %2064 = load i32, i32* %2063, align 4
  %2065 = zext i32 %2064 to i64
  store i64 %2065, i64* %RSI.i3626, align 8
  %2066 = add i64 %2055, 22096
  %2067 = add i64 %2055, 19
  %2068 = load i64, i64* %6, align 8
  %2069 = add i64 %2068, -8
  %2070 = inttoptr i64 %2069 to i64*
  store i64 %2067, i64* %2070, align 8
  store i64 %2069, i64* %6, align 8
  store i64 %2066, i64* %3, align 8
  %call2_40184e = tail call %struct.Memory* @sub_406e90._Z13test_constantIt22custom_equal_constantsItEEvPT_iPKc(%struct.State* nonnull %0, i64 %2066, %struct.Memory* %call2_40183b)
  %2071 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x419047_type* @G__0x419047 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419047_type* @G__0x419047 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %2072 = load i64, i64* %RBP.i, align 8
  %2073 = add i64 %2072, -72
  %2074 = add i64 %2071, 11
  store i64 %2074, i64* %3, align 8
  %2075 = inttoptr i64 %2073 to i64*
  %2076 = load i64, i64* %2075, align 8
  store i64 %2076, i64* %RDI.i3611.pre-phi, align 8
  %2077 = add i64 %2072, -44
  %2078 = add i64 %2071, 14
  store i64 %2078, i64* %3, align 8
  %2079 = inttoptr i64 %2077 to i32*
  %2080 = load i32, i32* %2079, align 4
  %2081 = zext i32 %2080 to i64
  store i64 %2081, i64* %RSI.i3626, align 8
  %2082 = add i64 %2071, 22253
  %2083 = add i64 %2071, 19
  %2084 = load i64, i64* %6, align 8
  %2085 = add i64 %2084, -8
  %2086 = inttoptr i64 %2085 to i64*
  store i64 %2083, i64* %2086, align 8
  store i64 %2085, i64* %6, align 8
  store i64 %2082, i64* %3, align 8
  %call2_401861 = tail call %struct.Memory* @sub_406f40._Z13test_constantIt25custom_notequal_constantsItEEvPT_iPKc(%struct.State* nonnull %0, i64 %2082, %struct.Memory* %call2_40184e)
  %2087 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x419063_type* @G__0x419063 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419063_type* @G__0x419063 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %2088 = load i64, i64* %RBP.i, align 8
  %2089 = add i64 %2088, -72
  %2090 = add i64 %2087, 11
  store i64 %2090, i64* %3, align 8
  %2091 = inttoptr i64 %2089 to i64*
  %2092 = load i64, i64* %2091, align 8
  store i64 %2092, i64* %RDI.i3611.pre-phi, align 8
  %2093 = add i64 %2088, -44
  %2094 = add i64 %2087, 14
  store i64 %2094, i64* %3, align 8
  %2095 = inttoptr i64 %2093 to i32*
  %2096 = load i32, i32* %2095, align 4
  %2097 = zext i32 %2096 to i64
  store i64 %2097, i64* %RSI.i3626, align 8
  %2098 = add i64 %2087, 22410
  %2099 = add i64 %2087, 19
  %2100 = load i64, i64* %6, align 8
  %2101 = add i64 %2100, -8
  %2102 = inttoptr i64 %2101 to i64*
  store i64 %2099, i64* %2102, align 8
  store i64 %2101, i64* %6, align 8
  store i64 %2098, i64* %3, align 8
  %call2_401874 = tail call %struct.Memory* @sub_406ff0._Z13test_constantIt28custom_greaterthan_constantsItEEvPT_iPKc(%struct.State* nonnull %0, i64 %2098, %struct.Memory* %call2_401861)
  %2103 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x419083_type* @G__0x419083 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419083_type* @G__0x419083 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %2104 = load i64, i64* %RBP.i, align 8
  %2105 = add i64 %2104, -72
  %2106 = add i64 %2103, 11
  store i64 %2106, i64* %3, align 8
  %2107 = inttoptr i64 %2105 to i64*
  %2108 = load i64, i64* %2107, align 8
  store i64 %2108, i64* %RDI.i3611.pre-phi, align 8
  %2109 = add i64 %2104, -44
  %2110 = add i64 %2103, 14
  store i64 %2110, i64* %3, align 8
  %2111 = inttoptr i64 %2109 to i32*
  %2112 = load i32, i32* %2111, align 4
  %2113 = zext i32 %2112 to i64
  store i64 %2113, i64* %RSI.i3626, align 8
  %2114 = add i64 %2103, 22567
  %2115 = add i64 %2103, 19
  %2116 = load i64, i64* %6, align 8
  %2117 = add i64 %2116, -8
  %2118 = inttoptr i64 %2117 to i64*
  store i64 %2115, i64* %2118, align 8
  store i64 %2117, i64* %6, align 8
  store i64 %2114, i64* %3, align 8
  %call2_401887 = tail call %struct.Memory* @sub_4070a0._Z13test_constantIt25custom_lessthan_constantsItEEvPT_iPKc(%struct.State* nonnull %0, i64 %2114, %struct.Memory* %call2_401874)
  %2119 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x4190a0_type* @G__0x4190a0 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4190a0_type* @G__0x4190a0 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %2120 = load i64, i64* %RBP.i, align 8
  %2121 = add i64 %2120, -72
  %2122 = add i64 %2119, 11
  store i64 %2122, i64* %3, align 8
  %2123 = inttoptr i64 %2121 to i64*
  %2124 = load i64, i64* %2123, align 8
  store i64 %2124, i64* %RDI.i3611.pre-phi, align 8
  %2125 = add i64 %2120, -44
  %2126 = add i64 %2119, 14
  store i64 %2126, i64* %3, align 8
  %2127 = inttoptr i64 %2125 to i32*
  %2128 = load i32, i32* %2127, align 4
  %2129 = zext i32 %2128 to i64
  store i64 %2129, i64* %RSI.i3626, align 8
  %2130 = add i64 %2119, 22724
  %2131 = add i64 %2119, 19
  %2132 = load i64, i64* %6, align 8
  %2133 = add i64 %2132, -8
  %2134 = inttoptr i64 %2133 to i64*
  store i64 %2131, i64* %2134, align 8
  store i64 %2133, i64* %6, align 8
  store i64 %2130, i64* %3, align 8
  %call2_40189a = tail call %struct.Memory* @sub_407150._Z13test_constantIt33custom_greaterthanequal_constantsItEEvPT_iPKc(%struct.State* nonnull %0, i64 %2130, %struct.Memory* %call2_401887)
  %2135 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x4190c6_type* @G__0x4190c6 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4190c6_type* @G__0x4190c6 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %2136 = load i64, i64* %RBP.i, align 8
  %2137 = add i64 %2136, -72
  %2138 = add i64 %2135, 11
  store i64 %2138, i64* %3, align 8
  %2139 = inttoptr i64 %2137 to i64*
  %2140 = load i64, i64* %2139, align 8
  store i64 %2140, i64* %RDI.i3611.pre-phi, align 8
  %2141 = add i64 %2136, -44
  %2142 = add i64 %2135, 14
  store i64 %2142, i64* %3, align 8
  %2143 = inttoptr i64 %2141 to i32*
  %2144 = load i32, i32* %2143, align 4
  %2145 = zext i32 %2144 to i64
  store i64 %2145, i64* %RSI.i3626, align 8
  %2146 = add i64 %2135, 22881
  %2147 = add i64 %2135, 19
  %2148 = load i64, i64* %6, align 8
  %2149 = add i64 %2148, -8
  %2150 = inttoptr i64 %2149 to i64*
  store i64 %2147, i64* %2150, align 8
  store i64 %2149, i64* %6, align 8
  store i64 %2146, i64* %3, align 8
  %call2_4018ad = tail call %struct.Memory* @sub_407200._Z13test_constantIt30custom_lessthanequal_constantsItEEvPT_iPKc(%struct.State* nonnull %0, i64 %2146, %struct.Memory* %call2_40189a)
  %2151 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x4190e9_type* @G__0x4190e9 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4190e9_type* @G__0x4190e9 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %2152 = load i64, i64* %RBP.i, align 8
  %2153 = add i64 %2152, -72
  %2154 = add i64 %2151, 11
  store i64 %2154, i64* %3, align 8
  %2155 = inttoptr i64 %2153 to i64*
  %2156 = load i64, i64* %2155, align 8
  store i64 %2156, i64* %RDI.i3611.pre-phi, align 8
  %2157 = add i64 %2152, -44
  %2158 = add i64 %2151, 14
  store i64 %2158, i64* %3, align 8
  %2159 = inttoptr i64 %2157 to i32*
  %2160 = load i32, i32* %2159, align 4
  %2161 = zext i32 %2160 to i64
  store i64 %2161, i64* %RSI.i3626, align 8
  %2162 = add i64 %2151, 23038
  %2163 = add i64 %2151, 19
  %2164 = load i64, i64* %6, align 8
  %2165 = add i64 %2164, -8
  %2166 = inttoptr i64 %2165 to i64*
  store i64 %2163, i64* %2166, align 8
  store i64 %2165, i64* %6, align 8
  store i64 %2162, i64* %3, align 8
  %call2_4018c0 = tail call %struct.Memory* @sub_4072b0._Z13test_constantIt20custom_and_constantsItEEvPT_iPKc(%struct.State* nonnull %0, i64 %2162, %struct.Memory* %call2_4018ad)
  %2167 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x419100_type* @G__0x419100 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419100_type* @G__0x419100 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %2168 = load i64, i64* %RBP.i, align 8
  %2169 = add i64 %2168, -72
  %2170 = add i64 %2167, 11
  store i64 %2170, i64* %3, align 8
  %2171 = inttoptr i64 %2169 to i64*
  %2172 = load i64, i64* %2171, align 8
  store i64 %2172, i64* %RDI.i3611.pre-phi, align 8
  %2173 = add i64 %2168, -44
  %2174 = add i64 %2167, 14
  store i64 %2174, i64* %3, align 8
  %2175 = inttoptr i64 %2173 to i32*
  %2176 = load i32, i32* %2175, align 4
  %2177 = zext i32 %2176 to i64
  store i64 %2177, i64* %RSI.i3626, align 8
  %2178 = add i64 %2167, 23195
  %2179 = add i64 %2167, 19
  %2180 = load i64, i64* %6, align 8
  %2181 = add i64 %2180, -8
  %2182 = inttoptr i64 %2181 to i64*
  store i64 %2179, i64* %2182, align 8
  store i64 %2181, i64* %6, align 8
  store i64 %2178, i64* %3, align 8
  %call2_4018d3 = tail call %struct.Memory* @sub_407360._Z13test_constantIt19custom_or_constantsItEEvPT_iPKc(%struct.State* nonnull %0, i64 %2178, %struct.Memory* %call2_4018c0)
  %2183 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x419116_type* @G__0x419116 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419116_type* @G__0x419116 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %2184 = load i64, i64* %RBP.i, align 8
  %2185 = add i64 %2184, -72
  %2186 = add i64 %2183, 11
  store i64 %2186, i64* %3, align 8
  %2187 = inttoptr i64 %2185 to i64*
  %2188 = load i64, i64* %2187, align 8
  store i64 %2188, i64* %RDI.i3611.pre-phi, align 8
  %2189 = add i64 %2184, -44
  %2190 = add i64 %2183, 14
  store i64 %2190, i64* %3, align 8
  %2191 = inttoptr i64 %2189 to i32*
  %2192 = load i32, i32* %2191, align 4
  %2193 = zext i32 %2192 to i64
  store i64 %2193, i64* %RSI.i3626, align 8
  %2194 = add i64 %2183, 23352
  %2195 = add i64 %2183, 19
  %2196 = load i64, i64* %6, align 8
  %2197 = add i64 %2196, -8
  %2198 = inttoptr i64 %2197 to i64*
  store i64 %2195, i64* %2198, align 8
  store i64 %2197, i64* %6, align 8
  store i64 %2194, i64* %3, align 8
  %call2_4018e6 = tail call %struct.Memory* @sub_407410._Z13test_constantIt20custom_xor_constantsItEEvPT_iPKc(%struct.State* nonnull %0, i64 %2194, %struct.Memory* %call2_4018d3)
  %2199 = load i64, i64* %3, align 8
  %2200 = add i64 %2199, ptrtoint (%G_0x22078e__rip__type* @G_0x22078e__rip_ to i64)
  %2201 = add i64 %2199, 7
  store i64 %2201, i64* %3, align 8
  %2202 = inttoptr i64 %2200 to i32*
  %2203 = load i32, i32* %2202, align 4
  %2204 = sext i32 %2203 to i64
  %2205 = mul nsw i64 %2204, 1717986919
  %2206 = lshr i64 %2205, 63
  store i64 %2206, i64* %RCX.i3620, align 8
  %2207 = trunc i64 %2206 to i32
  %2208 = ashr i64 %2205, 34
  store i64 %2208, i64* %RAX.i3622, align 8
  %2209 = trunc i64 %2208 to i32
  %2210 = add i32 %2207, %2209
  %2211 = zext i32 %2210 to i64
  store i64 %2211, i64* %206, align 8
  %2212 = icmp ult i32 %2210, %2209
  %2213 = icmp ult i32 %2210, %2207
  %2214 = or i1 %2212, %2213
  %2215 = zext i1 %2214 to i8
  store i8 %2215, i8* %14, align 1
  %2216 = and i32 %2210, 255
  %2217 = tail call i32 @llvm.ctpop.i32(i32 %2216)
  %2218 = trunc i32 %2217 to i8
  %2219 = and i8 %2218, 1
  %2220 = xor i8 %2219, 1
  store i8 %2220, i8* %21, align 1
  %2221 = trunc i64 %2208 to i32
  %2222 = xor i32 %2221, %2210
  %2223 = lshr i32 %2222, 4
  %2224 = trunc i32 %2223 to i8
  %2225 = and i8 %2224, 1
  store i8 %2225, i8* %27, align 1
  %2226 = icmp eq i32 %2210, 0
  %2227 = zext i1 %2226 to i8
  store i8 %2227, i8* %30, align 1
  %2228 = lshr i32 %2210, 31
  %2229 = trunc i32 %2228 to i8
  store i8 %2229, i8* %33, align 1
  %2230 = lshr i64 %2208, 31
  %2231 = trunc i64 %2230 to i32
  %2232 = and i32 %2231, 1
  %2233 = xor i32 %2228, %2232
  %2234 = add nuw nsw i32 %2233, %2228
  %2235 = icmp eq i32 %2234, 2
  %2236 = zext i1 %2235 to i8
  store i8 %2236, i8* %39, align 1
  %2237 = add i64 %2199, add (i64 ptrtoint (%G_0x2207ad__rip__type* @G_0x2207ad__rip_ to i64), i64 33)
  %2238 = add i64 %2199, 40
  store i64 %2238, i64* %3, align 8
  %2239 = inttoptr i64 %2237 to i32*
  store i32 %2210, i32* %2239, align 4
  %2240 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x41912d_type* @G__0x41912d to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41912d_type* @G__0x41912d to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %2241 = load i64, i64* %RBP.i, align 8
  %2242 = add i64 %2241, -72
  %2243 = add i64 %2240, 11
  store i64 %2243, i64* %3, align 8
  %2244 = inttoptr i64 %2242 to i64*
  %2245 = load i64, i64* %2244, align 8
  store i64 %2245, i64* %RDI.i3611.pre-phi, align 8
  %2246 = add i64 %2241, -44
  %2247 = add i64 %2240, 14
  store i64 %2247, i64* %3, align 8
  %2248 = inttoptr i64 %2246 to i32*
  %2249 = load i32, i32* %2248, align 4
  %2250 = zext i32 %2249 to i64
  store i64 %2250, i64* %RSI.i3626, align 8
  %2251 = add i64 %2240, 23469
  %2252 = add i64 %2240, 19
  %2253 = load i64, i64* %6, align 8
  %2254 = add i64 %2253, -8
  %2255 = inttoptr i64 %2254 to i64*
  store i64 %2252, i64* %2255, align 8
  store i64 %2254, i64* %6, align 8
  store i64 %2251, i64* %3, align 8
  %call2_401921 = tail call %struct.Memory* @sub_4074c0._Z13test_constantIt19custom_constant_addItEEvPT_iPKc(%struct.State* nonnull %0, i64 %2251, %struct.Memory* %call2_4018e6)
  %2256 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x419143_type* @G__0x419143 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419143_type* @G__0x419143 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %2257 = load i64, i64* %RBP.i, align 8
  %2258 = add i64 %2257, -72
  %2259 = add i64 %2256, 11
  store i64 %2259, i64* %3, align 8
  %2260 = inttoptr i64 %2258 to i64*
  %2261 = load i64, i64* %2260, align 8
  store i64 %2261, i64* %RDI.i3611.pre-phi, align 8
  %2262 = add i64 %2257, -44
  %2263 = add i64 %2256, 14
  store i64 %2263, i64* %3, align 8
  %2264 = inttoptr i64 %2262 to i32*
  %2265 = load i32, i32* %2264, align 4
  %2266 = zext i32 %2265 to i64
  store i64 %2266, i64* %RSI.i3626, align 8
  %2267 = add i64 %2256, 23626
  %2268 = add i64 %2256, 19
  %2269 = load i64, i64* %6, align 8
  %2270 = add i64 %2269, -8
  %2271 = inttoptr i64 %2270 to i64*
  store i64 %2268, i64* %2271, align 8
  store i64 %2270, i64* %6, align 8
  store i64 %2267, i64* %3, align 8
  %call2_401934 = tail call %struct.Memory* @sub_407570._Z13test_constantIt28custom_multiple_constant_addItEEvPT_iPKc(%struct.State* nonnull %0, i64 %2267, %struct.Memory* %call2_401921)
  %2272 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x419163_type* @G__0x419163 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419163_type* @G__0x419163 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %2273 = load i64, i64* %RBP.i, align 8
  %2274 = add i64 %2273, -72
  %2275 = add i64 %2272, 11
  store i64 %2275, i64* %3, align 8
  %2276 = inttoptr i64 %2274 to i64*
  %2277 = load i64, i64* %2276, align 8
  store i64 %2277, i64* %RDI.i3611.pre-phi, align 8
  %2278 = add i64 %2273, -44
  %2279 = add i64 %2272, 14
  store i64 %2279, i64* %3, align 8
  %2280 = inttoptr i64 %2278 to i32*
  %2281 = load i32, i32* %2280, align 4
  %2282 = zext i32 %2281 to i64
  store i64 %2282, i64* %RSI.i3626, align 8
  %2283 = add i64 %2272, 23783
  %2284 = add i64 %2272, 19
  %2285 = load i64, i64* %6, align 8
  %2286 = add i64 %2285, -8
  %2287 = inttoptr i64 %2286 to i64*
  store i64 %2284, i64* %2287, align 8
  store i64 %2286, i64* %6, align 8
  store i64 %2283, i64* %3, align 8
  %call2_401947 = tail call %struct.Memory* @sub_407620._Z13test_constantIt19custom_constant_subItEEvPT_iPKc(%struct.State* nonnull %0, i64 %2283, %struct.Memory* %call2_401934)
  %2288 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x41917e_type* @G__0x41917e to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41917e_type* @G__0x41917e to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %2289 = load i64, i64* %RBP.i, align 8
  %2290 = add i64 %2289, -72
  %2291 = add i64 %2288, 11
  store i64 %2291, i64* %3, align 8
  %2292 = inttoptr i64 %2290 to i64*
  %2293 = load i64, i64* %2292, align 8
  store i64 %2293, i64* %RDI.i3611.pre-phi, align 8
  %2294 = add i64 %2289, -44
  %2295 = add i64 %2288, 14
  store i64 %2295, i64* %3, align 8
  %2296 = inttoptr i64 %2294 to i32*
  %2297 = load i32, i32* %2296, align 4
  %2298 = zext i32 %2297 to i64
  store i64 %2298, i64* %RSI.i3626, align 8
  %2299 = add i64 %2288, 23940
  %2300 = add i64 %2288, 19
  %2301 = load i64, i64* %6, align 8
  %2302 = add i64 %2301, -8
  %2303 = inttoptr i64 %2302 to i64*
  store i64 %2300, i64* %2303, align 8
  store i64 %2302, i64* %6, align 8
  store i64 %2299, i64* %3, align 8
  %call2_40195a = tail call %struct.Memory* @sub_4076d0._Z13test_constantIt28custom_multiple_constant_subItEEvPT_iPKc(%struct.State* nonnull %0, i64 %2299, %struct.Memory* %call2_401947)
  %2304 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x4191a3_type* @G__0x4191a3 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4191a3_type* @G__0x4191a3 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %2305 = load i64, i64* %RBP.i, align 8
  %2306 = add i64 %2305, -72
  %2307 = add i64 %2304, 11
  store i64 %2307, i64* %3, align 8
  %2308 = inttoptr i64 %2306 to i64*
  %2309 = load i64, i64* %2308, align 8
  store i64 %2309, i64* %RDI.i3611.pre-phi, align 8
  %2310 = add i64 %2305, -44
  %2311 = add i64 %2304, 14
  store i64 %2311, i64* %3, align 8
  %2312 = inttoptr i64 %2310 to i32*
  %2313 = load i32, i32* %2312, align 4
  %2314 = zext i32 %2313 to i64
  store i64 %2314, i64* %RSI.i3626, align 8
  %2315 = add i64 %2304, 24097
  %2316 = add i64 %2304, 19
  %2317 = load i64, i64* %6, align 8
  %2318 = add i64 %2317, -8
  %2319 = inttoptr i64 %2318 to i64*
  store i64 %2316, i64* %2319, align 8
  store i64 %2318, i64* %6, align 8
  store i64 %2315, i64* %3, align 8
  %call2_40196d = tail call %struct.Memory* @sub_407780._Z13test_constantIt24custom_constant_multiplyItEEvPT_iPKc(%struct.State* nonnull %0, i64 %2315, %struct.Memory* %call2_40195a)
  %2320 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x4191be_type* @G__0x4191be to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4191be_type* @G__0x4191be to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %2321 = load i64, i64* %RBP.i, align 8
  %2322 = add i64 %2321, -72
  %2323 = add i64 %2320, 11
  store i64 %2323, i64* %3, align 8
  %2324 = inttoptr i64 %2322 to i64*
  %2325 = load i64, i64* %2324, align 8
  store i64 %2325, i64* %RDI.i3611.pre-phi, align 8
  %2326 = add i64 %2321, -44
  %2327 = add i64 %2320, 14
  store i64 %2327, i64* %3, align 8
  %2328 = inttoptr i64 %2326 to i32*
  %2329 = load i32, i32* %2328, align 4
  %2330 = zext i32 %2329 to i64
  store i64 %2330, i64* %RSI.i3626, align 8
  %2331 = add i64 %2320, 24254
  %2332 = add i64 %2320, 19
  %2333 = load i64, i64* %6, align 8
  %2334 = add i64 %2333, -8
  %2335 = inttoptr i64 %2334 to i64*
  store i64 %2332, i64* %2335, align 8
  store i64 %2334, i64* %6, align 8
  store i64 %2331, i64* %3, align 8
  %call2_401980 = tail call %struct.Memory* @sub_407830._Z13test_constantIt33custom_multiple_constant_multiplyItEEvPT_iPKc(%struct.State* nonnull %0, i64 %2331, %struct.Memory* %call2_40196d)
  %2336 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x4191e4_type* @G__0x4191e4 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4191e4_type* @G__0x4191e4 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %2337 = load i64, i64* %RBP.i, align 8
  %2338 = add i64 %2337, -72
  %2339 = add i64 %2336, 11
  store i64 %2339, i64* %3, align 8
  %2340 = inttoptr i64 %2338 to i64*
  %2341 = load i64, i64* %2340, align 8
  store i64 %2341, i64* %RDI.i3611.pre-phi, align 8
  %2342 = add i64 %2337, -44
  %2343 = add i64 %2336, 14
  store i64 %2343, i64* %3, align 8
  %2344 = inttoptr i64 %2342 to i32*
  %2345 = load i32, i32* %2344, align 4
  %2346 = zext i32 %2345 to i64
  store i64 %2346, i64* %RSI.i3626, align 8
  %2347 = add i64 %2336, 24411
  %2348 = add i64 %2336, 19
  %2349 = load i64, i64* %6, align 8
  %2350 = add i64 %2349, -8
  %2351 = inttoptr i64 %2350 to i64*
  store i64 %2348, i64* %2351, align 8
  store i64 %2350, i64* %6, align 8
  store i64 %2347, i64* %3, align 8
  %call2_401993 = tail call %struct.Memory* @sub_4078e0._Z13test_constantIt34custom_multiple_constant_multiply2ItEEvPT_iPKc(%struct.State* nonnull %0, i64 %2347, %struct.Memory* %call2_401980)
  %2352 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x419209_type* @G__0x419209 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419209_type* @G__0x419209 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %2353 = load i64, i64* %RBP.i, align 8
  %2354 = add i64 %2353, -72
  %2355 = add i64 %2352, 11
  store i64 %2355, i64* %3, align 8
  %2356 = inttoptr i64 %2354 to i64*
  %2357 = load i64, i64* %2356, align 8
  store i64 %2357, i64* %RDI.i3611.pre-phi, align 8
  %2358 = add i64 %2353, -44
  %2359 = add i64 %2352, 14
  store i64 %2359, i64* %3, align 8
  %2360 = inttoptr i64 %2358 to i32*
  %2361 = load i32, i32* %2360, align 4
  %2362 = zext i32 %2361 to i64
  store i64 %2362, i64* %RSI.i3626, align 8
  %2363 = add i64 %2352, 24568
  %2364 = add i64 %2352, 19
  %2365 = load i64, i64* %6, align 8
  %2366 = add i64 %2365, -8
  %2367 = inttoptr i64 %2366 to i64*
  store i64 %2364, i64* %2367, align 8
  store i64 %2366, i64* %6, align 8
  store i64 %2363, i64* %3, align 8
  %call2_4019a6 = tail call %struct.Memory* @sub_407990._Z13test_constantIt22custom_constant_divideItEEvPT_iPKc(%struct.State* nonnull %0, i64 %2363, %struct.Memory* %call2_401993)
  %2368 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x419222_type* @G__0x419222 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419222_type* @G__0x419222 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %2369 = load i64, i64* %RBP.i, align 8
  %2370 = add i64 %2369, -72
  %2371 = add i64 %2368, 11
  store i64 %2371, i64* %3, align 8
  %2372 = inttoptr i64 %2370 to i64*
  %2373 = load i64, i64* %2372, align 8
  store i64 %2373, i64* %RDI.i3611.pre-phi, align 8
  %2374 = add i64 %2369, -44
  %2375 = add i64 %2368, 14
  store i64 %2375, i64* %3, align 8
  %2376 = inttoptr i64 %2374 to i32*
  %2377 = load i32, i32* %2376, align 4
  %2378 = zext i32 %2377 to i64
  store i64 %2378, i64* %RSI.i3626, align 8
  %2379 = add i64 %2368, 24725
  %2380 = add i64 %2368, 19
  %2381 = load i64, i64* %6, align 8
  %2382 = add i64 %2381, -8
  %2383 = inttoptr i64 %2382 to i64*
  store i64 %2380, i64* %2383, align 8
  store i64 %2382, i64* %6, align 8
  store i64 %2379, i64* %3, align 8
  %call2_4019b9 = tail call %struct.Memory* @sub_407a40._Z13test_constantIt31custom_multiple_constant_divideItEEvPT_iPKc(%struct.State* nonnull %0, i64 %2379, %struct.Memory* %call2_4019a6)
  %2384 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x419245_type* @G__0x419245 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419245_type* @G__0x419245 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %2385 = load i64, i64* %RBP.i, align 8
  %2386 = add i64 %2385, -72
  %2387 = add i64 %2384, 11
  store i64 %2387, i64* %3, align 8
  %2388 = inttoptr i64 %2386 to i64*
  %2389 = load i64, i64* %2388, align 8
  store i64 %2389, i64* %RDI.i3611.pre-phi, align 8
  %2390 = add i64 %2385, -44
  %2391 = add i64 %2384, 14
  store i64 %2391, i64* %3, align 8
  %2392 = inttoptr i64 %2390 to i32*
  %2393 = load i32, i32* %2392, align 4
  %2394 = zext i32 %2393 to i64
  store i64 %2394, i64* %RSI.i3626, align 8
  %2395 = add i64 %2384, 24882
  %2396 = add i64 %2384, 19
  %2397 = load i64, i64* %6, align 8
  %2398 = add i64 %2397, -8
  %2399 = inttoptr i64 %2398 to i64*
  store i64 %2396, i64* %2399, align 8
  store i64 %2398, i64* %6, align 8
  store i64 %2395, i64* %3, align 8
  %call2_4019cc = tail call %struct.Memory* @sub_407af0._Z13test_constantIt32custom_multiple_constant_divide2ItEEvPT_iPKc(%struct.State* nonnull %0, i64 %2395, %struct.Memory* %call2_4019b9)
  %2400 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x419268_type* @G__0x419268 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419268_type* @G__0x419268 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %2401 = load i64, i64* %RBP.i, align 8
  %2402 = add i64 %2401, -72
  %2403 = add i64 %2400, 11
  store i64 %2403, i64* %3, align 8
  %2404 = inttoptr i64 %2402 to i64*
  %2405 = load i64, i64* %2404, align 8
  store i64 %2405, i64* %RDI.i3611.pre-phi, align 8
  %2406 = add i64 %2401, -44
  %2407 = add i64 %2400, 14
  store i64 %2407, i64* %3, align 8
  %2408 = inttoptr i64 %2406 to i32*
  %2409 = load i32, i32* %2408, align 4
  %2410 = zext i32 %2409 to i64
  store i64 %2410, i64* %RSI.i3626, align 8
  %2411 = add i64 %2400, 25039
  %2412 = add i64 %2400, 19
  %2413 = load i64, i64* %6, align 8
  %2414 = add i64 %2413, -8
  %2415 = inttoptr i64 %2414 to i64*
  store i64 %2412, i64* %2415, align 8
  store i64 %2414, i64* %6, align 8
  store i64 %2411, i64* %3, align 8
  %call2_4019df = tail call %struct.Memory* @sub_407ba0._Z13test_constantIt30custom_multiple_constant_mixedItEEvPT_iPKc(%struct.State* nonnull %0, i64 %2411, %struct.Memory* %call2_4019cc)
  %2416 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x419289_type* @G__0x419289 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419289_type* @G__0x419289 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %2417 = load i64, i64* %RBP.i, align 8
  %2418 = add i64 %2417, -72
  %2419 = add i64 %2416, 11
  store i64 %2419, i64* %3, align 8
  %2420 = inttoptr i64 %2418 to i64*
  %2421 = load i64, i64* %2420, align 8
  store i64 %2421, i64* %RDI.i3611.pre-phi, align 8
  %2422 = add i64 %2417, -44
  %2423 = add i64 %2416, 14
  store i64 %2423, i64* %3, align 8
  %2424 = inttoptr i64 %2422 to i32*
  %2425 = load i32, i32* %2424, align 4
  %2426 = zext i32 %2425 to i64
  store i64 %2426, i64* %RSI.i3626, align 8
  %2427 = add i64 %2416, 25196
  %2428 = add i64 %2416, 19
  %2429 = load i64, i64* %6, align 8
  %2430 = add i64 %2429, -8
  %2431 = inttoptr i64 %2430 to i64*
  store i64 %2428, i64* %2431, align 8
  store i64 %2430, i64* %6, align 8
  store i64 %2427, i64* %3, align 8
  %call2_4019f2 = tail call %struct.Memory* @sub_407c50._Z13test_constantIt19custom_constant_andItEEvPT_iPKc(%struct.State* nonnull %0, i64 %2427, %struct.Memory* %call2_4019df)
  %2432 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x41929f_type* @G__0x41929f to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41929f_type* @G__0x41929f to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %2433 = load i64, i64* %RBP.i, align 8
  %2434 = add i64 %2433, -72
  %2435 = add i64 %2432, 11
  store i64 %2435, i64* %3, align 8
  %2436 = inttoptr i64 %2434 to i64*
  %2437 = load i64, i64* %2436, align 8
  store i64 %2437, i64* %RDI.i3611.pre-phi, align 8
  %2438 = add i64 %2433, -44
  %2439 = add i64 %2432, 14
  store i64 %2439, i64* %3, align 8
  %2440 = inttoptr i64 %2438 to i32*
  %2441 = load i32, i32* %2440, align 4
  %2442 = zext i32 %2441 to i64
  store i64 %2442, i64* %RSI.i3626, align 8
  %2443 = add i64 %2432, 25353
  %2444 = add i64 %2432, 19
  %2445 = load i64, i64* %6, align 8
  %2446 = add i64 %2445, -8
  %2447 = inttoptr i64 %2446 to i64*
  store i64 %2444, i64* %2447, align 8
  store i64 %2446, i64* %6, align 8
  store i64 %2443, i64* %3, align 8
  %call2_401a05 = tail call %struct.Memory* @sub_407d00._Z13test_constantIt28custom_multiple_constant_andItEEvPT_iPKc(%struct.State* nonnull %0, i64 %2443, %struct.Memory* %call2_4019f2)
  %2448 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x4192be_type* @G__0x4192be to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4192be_type* @G__0x4192be to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %2449 = load i64, i64* %RBP.i, align 8
  %2450 = add i64 %2449, -72
  %2451 = add i64 %2448, 11
  store i64 %2451, i64* %3, align 8
  %2452 = inttoptr i64 %2450 to i64*
  %2453 = load i64, i64* %2452, align 8
  store i64 %2453, i64* %RDI.i3611.pre-phi, align 8
  %2454 = add i64 %2449, -44
  %2455 = add i64 %2448, 14
  store i64 %2455, i64* %3, align 8
  %2456 = inttoptr i64 %2454 to i32*
  %2457 = load i32, i32* %2456, align 4
  %2458 = zext i32 %2457 to i64
  store i64 %2458, i64* %RSI.i3626, align 8
  %2459 = add i64 %2448, 25510
  %2460 = add i64 %2448, 19
  %2461 = load i64, i64* %6, align 8
  %2462 = add i64 %2461, -8
  %2463 = inttoptr i64 %2462 to i64*
  store i64 %2460, i64* %2463, align 8
  store i64 %2462, i64* %6, align 8
  store i64 %2459, i64* %3, align 8
  %call2_401a18 = tail call %struct.Memory* @sub_407db0._Z13test_constantIt18custom_constant_orItEEvPT_iPKc(%struct.State* nonnull %0, i64 %2459, %struct.Memory* %call2_401a05)
  %2464 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x4192d3_type* @G__0x4192d3 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4192d3_type* @G__0x4192d3 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %2465 = load i64, i64* %RBP.i, align 8
  %2466 = add i64 %2465, -72
  %2467 = add i64 %2464, 11
  store i64 %2467, i64* %3, align 8
  %2468 = inttoptr i64 %2466 to i64*
  %2469 = load i64, i64* %2468, align 8
  store i64 %2469, i64* %RDI.i3611.pre-phi, align 8
  %2470 = add i64 %2465, -44
  %2471 = add i64 %2464, 14
  store i64 %2471, i64* %3, align 8
  %2472 = inttoptr i64 %2470 to i32*
  %2473 = load i32, i32* %2472, align 4
  %2474 = zext i32 %2473 to i64
  store i64 %2474, i64* %RSI.i3626, align 8
  %2475 = add i64 %2464, 25667
  %2476 = add i64 %2464, 19
  %2477 = load i64, i64* %6, align 8
  %2478 = add i64 %2477, -8
  %2479 = inttoptr i64 %2478 to i64*
  store i64 %2476, i64* %2479, align 8
  store i64 %2478, i64* %6, align 8
  store i64 %2475, i64* %3, align 8
  %call2_401a2b = tail call %struct.Memory* @sub_407e60._Z13test_constantIt27custom_multiple_constant_orItEEvPT_iPKc(%struct.State* nonnull %0, i64 %2475, %struct.Memory* %call2_401a18)
  %2480 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x4192f1_type* @G__0x4192f1 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4192f1_type* @G__0x4192f1 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %2481 = load i64, i64* %RBP.i, align 8
  %2482 = add i64 %2481, -72
  %2483 = add i64 %2480, 11
  store i64 %2483, i64* %3, align 8
  %2484 = inttoptr i64 %2482 to i64*
  %2485 = load i64, i64* %2484, align 8
  store i64 %2485, i64* %RDI.i3611.pre-phi, align 8
  %2486 = add i64 %2481, -44
  %2487 = add i64 %2480, 14
  store i64 %2487, i64* %3, align 8
  %2488 = inttoptr i64 %2486 to i32*
  %2489 = load i32, i32* %2488, align 4
  %2490 = zext i32 %2489 to i64
  store i64 %2490, i64* %RSI.i3626, align 8
  %2491 = add i64 %2480, 25824
  %2492 = add i64 %2480, 19
  %2493 = load i64, i64* %6, align 8
  %2494 = add i64 %2493, -8
  %2495 = inttoptr i64 %2494 to i64*
  store i64 %2492, i64* %2495, align 8
  store i64 %2494, i64* %6, align 8
  store i64 %2491, i64* %3, align 8
  %call2_401a3e = tail call %struct.Memory* @sub_407f10._Z13test_constantIt19custom_constant_xorItEEvPT_iPKc(%struct.State* nonnull %0, i64 %2491, %struct.Memory* %call2_401a2b)
  %2496 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x419307_type* @G__0x419307 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419307_type* @G__0x419307 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %2497 = load i64, i64* %RBP.i, align 8
  %2498 = add i64 %2497, -72
  %2499 = add i64 %2496, 11
  store i64 %2499, i64* %3, align 8
  %2500 = inttoptr i64 %2498 to i64*
  %2501 = load i64, i64* %2500, align 8
  store i64 %2501, i64* %RDI.i3611.pre-phi, align 8
  %2502 = add i64 %2497, -44
  %2503 = add i64 %2496, 14
  store i64 %2503, i64* %3, align 8
  %2504 = inttoptr i64 %2502 to i32*
  %2505 = load i32, i32* %2504, align 4
  %2506 = zext i32 %2505 to i64
  store i64 %2506, i64* %RSI.i3626, align 8
  %2507 = add i64 %2496, 25981
  %2508 = add i64 %2496, 19
  %2509 = load i64, i64* %6, align 8
  %2510 = add i64 %2509, -8
  %2511 = inttoptr i64 %2510 to i64*
  store i64 %2508, i64* %2511, align 8
  store i64 %2510, i64* %6, align 8
  store i64 %2507, i64* %3, align 8
  %call2_401a51 = tail call %struct.Memory* @sub_407fc0._Z13test_constantIt28custom_multiple_constant_xorItEEvPT_iPKc(%struct.State* nonnull %0, i64 %2507, %struct.Memory* %call2_401a3e)
  %2512 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1
  %2513 = bitcast [32 x %union.VectorReg]* %2512 to i8*
  %2514 = load i64, i64* %3, align 8
  %2515 = add i64 %2514, ptrtoint (%G_0x22062a__rip__type* @G_0x22062a__rip_ to i64)
  %2516 = add i64 %2514, 8
  store i64 %2516, i64* %3, align 8
  %2517 = inttoptr i64 %2515 to i64*
  %2518 = load i64, i64* %2517, align 8
  %2519 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2512, i64 0, i64 0, i32 0, i32 0, i32 0, i64 0
  store i64 %2518, i64* %2519, align 1
  %2520 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 1
  %2521 = bitcast i64* %2520 to double*
  store double 0.000000e+00, double* %2521, align 1
  %2522 = bitcast i64 %2518 to double
  %2523 = tail call double @llvm.trunc.f64(double %2522)
  %2524 = tail call double @llvm.fabs.f64(double %2523)
  %2525 = fcmp ogt double %2524, 0x41DFFFFFFFC00000
  %2526 = fptosi double %2523 to i32
  %2527 = zext i32 %2526 to i64
  %2528 = select i1 %2525, i64 2147483648, i64 %2527
  store i64 %2528, i64* %RDX.i3615, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x6608d0_type* @G__0x6608d0 to i64), i64 4294967295) to i32) to i64), i64* %RAX.i3622, align 8
  store i64 and (i64 ptrtoint (%G__0x6685d0_type* @G__0x6685d0 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x6608d0_type* @G__0x6608d0 to i64), i64 4294967295) to i32) to i64), i64* %RDI.i3611.pre-phi, align 8
  %2529 = load i64, i64* %RBP.i, align 8
  %2530 = add i64 %2529, -80
  %2531 = add i64 %2514, 31
  store i64 %2531, i64* %3, align 8
  %2532 = inttoptr i64 %2530 to i64*
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x6608d0_type* @G__0x6608d0 to i64), i64 4294967295) to i32) to i64), i64* %2532, align 8
  %2533 = load i64, i64* %3, align 8
  %2534 = add i64 %2533, 26107
  %2535 = add i64 %2533, 5
  %2536 = load i64, i64* %6, align 8
  %2537 = add i64 %2536, -8
  %2538 = inttoptr i64 %2537 to i64*
  store i64 %2535, i64* %2538, align 8
  store i64 %2537, i64* %6, align 8
  store i64 %2534, i64* %3, align 8
  %call2_401a75 = tail call %struct.Memory* @sub_408070._Z4fillIPiiEvT_S1_T0_(%struct.State* nonnull %0, i64 %2534, %struct.Memory* %call2_401a51)
  %2539 = load i64, i64* %3, align 8
  %2540 = add i64 %2539, ptrtoint (%G_0x220600__rip__type* @G_0x220600__rip_ to i64)
  %2541 = add i64 %2539, 6
  store i64 %2541, i64* %3, align 8
  %2542 = inttoptr i64 %2540 to i32*
  %2543 = load i32, i32* %2542, align 4
  %2544 = add i64 %2539, add (i64 ptrtoint (%G_0x22063a__rip__type* @G_0x22063a__rip_ to i64), i64 6)
  %2545 = add i64 %2539, 12
  store i64 %2545, i64* %3, align 8
  %2546 = inttoptr i64 %2544 to i32*
  store i32 %2543, i32* %2546, align 4
  %2547 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x419327_type* @G__0x419327 to i64), i64 4294967295), i64* %RDX.i3615, align 8
  %2548 = load i64, i64* %RBP.i, align 8
  %2549 = add i64 %2548, -80
  %2550 = add i64 %2547, 9
  store i64 %2550, i64* %3, align 8
  %2551 = inttoptr i64 %2549 to i64*
  %2552 = load i64, i64* %2551, align 8
  store i64 %2552, i64* %RDI.i3611.pre-phi, align 8
  %2553 = add i64 %2548, -44
  %2554 = add i64 %2547, 12
  store i64 %2554, i64* %3, align 8
  %2555 = inttoptr i64 %2553 to i32*
  %2556 = load i32, i32* %2555, align 4
  %2557 = zext i32 %2556 to i64
  store i64 %2557, i64* %RSI.i3626, align 8
  %2558 = add i64 %2547, 26154
  %2559 = add i64 %2547, 17
  %2560 = load i64, i64* %6, align 8
  %2561 = add i64 %2560, -8
  %2562 = inttoptr i64 %2561 to i64*
  store i64 %2559, i64* %2562, align 8
  store i64 %2561, i64* %6, align 8
  store i64 %2558, i64* %3, align 8
  %call2_401a92 = tail call %struct.Memory* @sub_4080b0._Z13test_constantIi10custom_twoIiEEvPT_iPKc(%struct.State* nonnull %0, i64 %2558, %struct.Memory* %call2_401a75)
  %2563 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x419339_type* @G__0x419339 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419339_type* @G__0x419339 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %2564 = load i64, i64* %RBP.i, align 8
  %2565 = add i64 %2564, -80
  %2566 = add i64 %2563, 11
  store i64 %2566, i64* %3, align 8
  %2567 = inttoptr i64 %2565 to i64*
  %2568 = load i64, i64* %2567, align 8
  store i64 %2568, i64* %RDI.i3611.pre-phi, align 8
  %2569 = add i64 %2564, -44
  %2570 = add i64 %2563, 14
  store i64 %2570, i64* %3, align 8
  %2571 = inttoptr i64 %2569 to i32*
  %2572 = load i32, i32* %2571, align 4
  %2573 = zext i32 %2572 to i64
  store i64 %2573, i64* %RSI.i3626, align 8
  %2574 = add i64 %2563, 26297
  %2575 = add i64 %2563, 19
  %2576 = load i64, i64* %6, align 8
  %2577 = add i64 %2576, -8
  %2578 = inttoptr i64 %2577 to i64*
  store i64 %2575, i64* %2578, align 8
  store i64 %2577, i64* %6, align 8
  store i64 %2574, i64* %3, align 8
  %call2_401aa5 = tail call %struct.Memory* @sub_408150._Z13test_constantIi20custom_add_constantsIiEEvPT_iPKc(%struct.State* nonnull %0, i64 %2574, %struct.Memory* %call2_401a92)
  %2579 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x419350_type* @G__0x419350 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419350_type* @G__0x419350 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %2580 = load i64, i64* %RBP.i, align 8
  %2581 = add i64 %2580, -80
  %2582 = add i64 %2579, 11
  store i64 %2582, i64* %3, align 8
  %2583 = inttoptr i64 %2581 to i64*
  %2584 = load i64, i64* %2583, align 8
  store i64 %2584, i64* %RDI.i3611.pre-phi, align 8
  %2585 = add i64 %2580, -44
  %2586 = add i64 %2579, 14
  store i64 %2586, i64* %3, align 8
  %2587 = inttoptr i64 %2585 to i32*
  %2588 = load i32, i32* %2587, align 4
  %2589 = zext i32 %2588 to i64
  store i64 %2589, i64* %RSI.i3626, align 8
  %2590 = add i64 %2579, 26438
  %2591 = add i64 %2579, 19
  %2592 = load i64, i64* %6, align 8
  %2593 = add i64 %2592, -8
  %2594 = inttoptr i64 %2593 to i64*
  store i64 %2591, i64* %2594, align 8
  store i64 %2593, i64* %6, align 8
  store i64 %2590, i64* %3, align 8
  %call2_401ab8 = tail call %struct.Memory* @sub_4081f0._Z13test_constantIi20custom_sub_constantsIiEEvPT_iPKc(%struct.State* nonnull %0, i64 %2590, %struct.Memory* %call2_401aa5)
  %2595 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x41936c_type* @G__0x41936c to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41936c_type* @G__0x41936c to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %2596 = load i64, i64* %RBP.i, align 8
  %2597 = add i64 %2596, -80
  %2598 = add i64 %2595, 11
  store i64 %2598, i64* %3, align 8
  %2599 = inttoptr i64 %2597 to i64*
  %2600 = load i64, i64* %2599, align 8
  store i64 %2600, i64* %RDI.i3611.pre-phi, align 8
  %2601 = add i64 %2596, -44
  %2602 = add i64 %2595, 14
  store i64 %2602, i64* %3, align 8
  %2603 = inttoptr i64 %2601 to i32*
  %2604 = load i32, i32* %2603, align 4
  %2605 = zext i32 %2604 to i64
  store i64 %2605, i64* %RSI.i3626, align 8
  %2606 = add i64 %2595, 26579
  %2607 = add i64 %2595, 19
  %2608 = load i64, i64* %6, align 8
  %2609 = add i64 %2608, -8
  %2610 = inttoptr i64 %2609 to i64*
  store i64 %2607, i64* %2610, align 8
  store i64 %2609, i64* %6, align 8
  store i64 %2606, i64* %3, align 8
  %call2_401acb = tail call %struct.Memory* @sub_408290._Z13test_constantIi25custom_multiply_constantsIiEEvPT_iPKc(%struct.State* nonnull %0, i64 %2606, %struct.Memory* %call2_401ab8)
  %2611 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x419388_type* @G__0x419388 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419388_type* @G__0x419388 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %2612 = load i64, i64* %RBP.i, align 8
  %2613 = add i64 %2612, -80
  %2614 = add i64 %2611, 11
  store i64 %2614, i64* %3, align 8
  %2615 = inttoptr i64 %2613 to i64*
  %2616 = load i64, i64* %2615, align 8
  store i64 %2616, i64* %RDI.i3611.pre-phi, align 8
  %2617 = add i64 %2612, -44
  %2618 = add i64 %2611, 14
  store i64 %2618, i64* %3, align 8
  %2619 = inttoptr i64 %2617 to i32*
  %2620 = load i32, i32* %2619, align 4
  %2621 = zext i32 %2620 to i64
  store i64 %2621, i64* %RSI.i3626, align 8
  %2622 = add i64 %2611, 26720
  %2623 = add i64 %2611, 19
  %2624 = load i64, i64* %6, align 8
  %2625 = add i64 %2624, -8
  %2626 = inttoptr i64 %2625 to i64*
  store i64 %2623, i64* %2626, align 8
  store i64 %2625, i64* %6, align 8
  store i64 %2622, i64* %3, align 8
  %call2_401ade = tail call %struct.Memory* @sub_408330._Z13test_constantIi23custom_divide_constantsIiEEvPT_iPKc(%struct.State* nonnull %0, i64 %2622, %struct.Memory* %call2_401acb)
  %2627 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x4193a2_type* @G__0x4193a2 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4193a2_type* @G__0x4193a2 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %2628 = load i64, i64* %RBP.i, align 8
  %2629 = add i64 %2628, -80
  %2630 = add i64 %2627, 11
  store i64 %2630, i64* %3, align 8
  %2631 = inttoptr i64 %2629 to i64*
  %2632 = load i64, i64* %2631, align 8
  store i64 %2632, i64* %RDI.i3611.pre-phi, align 8
  %2633 = add i64 %2628, -44
  %2634 = add i64 %2627, 14
  store i64 %2634, i64* %3, align 8
  %2635 = inttoptr i64 %2633 to i32*
  %2636 = load i32, i32* %2635, align 4
  %2637 = zext i32 %2636 to i64
  store i64 %2637, i64* %RSI.i3626, align 8
  %2638 = add i64 %2627, 26861
  %2639 = add i64 %2627, 19
  %2640 = load i64, i64* %6, align 8
  %2641 = add i64 %2640, -8
  %2642 = inttoptr i64 %2641 to i64*
  store i64 %2639, i64* %2642, align 8
  store i64 %2641, i64* %6, align 8
  store i64 %2638, i64* %3, align 8
  %call2_401af1 = tail call %struct.Memory* @sub_4083d0._Z13test_constantIi20custom_mod_constantsIiEEvPT_iPKc(%struct.State* nonnull %0, i64 %2638, %struct.Memory* %call2_401ade)
  %2643 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x4193b9_type* @G__0x4193b9 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4193b9_type* @G__0x4193b9 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %2644 = load i64, i64* %RBP.i, align 8
  %2645 = add i64 %2644, -80
  %2646 = add i64 %2643, 11
  store i64 %2646, i64* %3, align 8
  %2647 = inttoptr i64 %2645 to i64*
  %2648 = load i64, i64* %2647, align 8
  store i64 %2648, i64* %RDI.i3611.pre-phi, align 8
  %2649 = add i64 %2644, -44
  %2650 = add i64 %2643, 14
  store i64 %2650, i64* %3, align 8
  %2651 = inttoptr i64 %2649 to i32*
  %2652 = load i32, i32* %2651, align 4
  %2653 = zext i32 %2652 to i64
  store i64 %2653, i64* %RSI.i3626, align 8
  %2654 = add i64 %2643, 27002
  %2655 = add i64 %2643, 19
  %2656 = load i64, i64* %6, align 8
  %2657 = add i64 %2656, -8
  %2658 = inttoptr i64 %2657 to i64*
  store i64 %2655, i64* %2658, align 8
  store i64 %2657, i64* %6, align 8
  store i64 %2654, i64* %3, align 8
  %call2_401b04 = tail call %struct.Memory* @sub_408470._Z13test_constantIi22custom_equal_constantsIiEEvPT_iPKc(%struct.State* nonnull %0, i64 %2654, %struct.Memory* %call2_401af1)
  %2659 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x4193d2_type* @G__0x4193d2 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4193d2_type* @G__0x4193d2 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %2660 = load i64, i64* %RBP.i, align 8
  %2661 = add i64 %2660, -80
  %2662 = add i64 %2659, 11
  store i64 %2662, i64* %3, align 8
  %2663 = inttoptr i64 %2661 to i64*
  %2664 = load i64, i64* %2663, align 8
  store i64 %2664, i64* %RDI.i3611.pre-phi, align 8
  %2665 = add i64 %2660, -44
  %2666 = add i64 %2659, 14
  store i64 %2666, i64* %3, align 8
  %2667 = inttoptr i64 %2665 to i32*
  %2668 = load i32, i32* %2667, align 4
  %2669 = zext i32 %2668 to i64
  store i64 %2669, i64* %RSI.i3626, align 8
  %2670 = add i64 %2659, 27143
  %2671 = add i64 %2659, 19
  %2672 = load i64, i64* %6, align 8
  %2673 = add i64 %2672, -8
  %2674 = inttoptr i64 %2673 to i64*
  store i64 %2671, i64* %2674, align 8
  store i64 %2673, i64* %6, align 8
  store i64 %2670, i64* %3, align 8
  %call2_401b17 = tail call %struct.Memory* @sub_408510._Z13test_constantIi25custom_notequal_constantsIiEEvPT_iPKc(%struct.State* nonnull %0, i64 %2670, %struct.Memory* %call2_401b04)
  %2675 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x4193ee_type* @G__0x4193ee to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4193ee_type* @G__0x4193ee to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %2676 = load i64, i64* %RBP.i, align 8
  %2677 = add i64 %2676, -80
  %2678 = add i64 %2675, 11
  store i64 %2678, i64* %3, align 8
  %2679 = inttoptr i64 %2677 to i64*
  %2680 = load i64, i64* %2679, align 8
  store i64 %2680, i64* %RDI.i3611.pre-phi, align 8
  %2681 = add i64 %2676, -44
  %2682 = add i64 %2675, 14
  store i64 %2682, i64* %3, align 8
  %2683 = inttoptr i64 %2681 to i32*
  %2684 = load i32, i32* %2683, align 4
  %2685 = zext i32 %2684 to i64
  store i64 %2685, i64* %RSI.i3626, align 8
  %2686 = add i64 %2675, 27284
  %2687 = add i64 %2675, 19
  %2688 = load i64, i64* %6, align 8
  %2689 = add i64 %2688, -8
  %2690 = inttoptr i64 %2689 to i64*
  store i64 %2687, i64* %2690, align 8
  store i64 %2689, i64* %6, align 8
  store i64 %2686, i64* %3, align 8
  %call2_401b2a = tail call %struct.Memory* @sub_4085b0._Z13test_constantIi28custom_greaterthan_constantsIiEEvPT_iPKc(%struct.State* nonnull %0, i64 %2686, %struct.Memory* %call2_401b17)
  %2691 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x41940e_type* @G__0x41940e to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41940e_type* @G__0x41940e to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %2692 = load i64, i64* %RBP.i, align 8
  %2693 = add i64 %2692, -80
  %2694 = add i64 %2691, 11
  store i64 %2694, i64* %3, align 8
  %2695 = inttoptr i64 %2693 to i64*
  %2696 = load i64, i64* %2695, align 8
  store i64 %2696, i64* %RDI.i3611.pre-phi, align 8
  %2697 = add i64 %2692, -44
  %2698 = add i64 %2691, 14
  store i64 %2698, i64* %3, align 8
  %2699 = inttoptr i64 %2697 to i32*
  %2700 = load i32, i32* %2699, align 4
  %2701 = zext i32 %2700 to i64
  store i64 %2701, i64* %RSI.i3626, align 8
  %2702 = add i64 %2691, 27425
  %2703 = add i64 %2691, 19
  %2704 = load i64, i64* %6, align 8
  %2705 = add i64 %2704, -8
  %2706 = inttoptr i64 %2705 to i64*
  store i64 %2703, i64* %2706, align 8
  store i64 %2705, i64* %6, align 8
  store i64 %2702, i64* %3, align 8
  %call2_401b3d = tail call %struct.Memory* @sub_408650._Z13test_constantIi25custom_lessthan_constantsIiEEvPT_iPKc(%struct.State* nonnull %0, i64 %2702, %struct.Memory* %call2_401b2a)
  %2707 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x41942b_type* @G__0x41942b to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41942b_type* @G__0x41942b to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %2708 = load i64, i64* %RBP.i, align 8
  %2709 = add i64 %2708, -80
  %2710 = add i64 %2707, 11
  store i64 %2710, i64* %3, align 8
  %2711 = inttoptr i64 %2709 to i64*
  %2712 = load i64, i64* %2711, align 8
  store i64 %2712, i64* %RDI.i3611.pre-phi, align 8
  %2713 = add i64 %2708, -44
  %2714 = add i64 %2707, 14
  store i64 %2714, i64* %3, align 8
  %2715 = inttoptr i64 %2713 to i32*
  %2716 = load i32, i32* %2715, align 4
  %2717 = zext i32 %2716 to i64
  store i64 %2717, i64* %RSI.i3626, align 8
  %2718 = add i64 %2707, 27566
  %2719 = add i64 %2707, 19
  %2720 = load i64, i64* %6, align 8
  %2721 = add i64 %2720, -8
  %2722 = inttoptr i64 %2721 to i64*
  store i64 %2719, i64* %2722, align 8
  store i64 %2721, i64* %6, align 8
  store i64 %2718, i64* %3, align 8
  %call2_401b50 = tail call %struct.Memory* @sub_4086f0._Z13test_constantIi33custom_greaterthanequal_constantsIiEEvPT_iPKc(%struct.State* nonnull %0, i64 %2718, %struct.Memory* %call2_401b3d)
  %2723 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x419451_type* @G__0x419451 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419451_type* @G__0x419451 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %2724 = load i64, i64* %RBP.i, align 8
  %2725 = add i64 %2724, -80
  %2726 = add i64 %2723, 11
  store i64 %2726, i64* %3, align 8
  %2727 = inttoptr i64 %2725 to i64*
  %2728 = load i64, i64* %2727, align 8
  store i64 %2728, i64* %RDI.i3611.pre-phi, align 8
  %2729 = add i64 %2724, -44
  %2730 = add i64 %2723, 14
  store i64 %2730, i64* %3, align 8
  %2731 = inttoptr i64 %2729 to i32*
  %2732 = load i32, i32* %2731, align 4
  %2733 = zext i32 %2732 to i64
  store i64 %2733, i64* %RSI.i3626, align 8
  %2734 = add i64 %2723, 27707
  %2735 = add i64 %2723, 19
  %2736 = load i64, i64* %6, align 8
  %2737 = add i64 %2736, -8
  %2738 = inttoptr i64 %2737 to i64*
  store i64 %2735, i64* %2738, align 8
  store i64 %2737, i64* %6, align 8
  store i64 %2734, i64* %3, align 8
  %call2_401b63 = tail call %struct.Memory* @sub_408790._Z13test_constantIi30custom_lessthanequal_constantsIiEEvPT_iPKc(%struct.State* nonnull %0, i64 %2734, %struct.Memory* %call2_401b50)
  %2739 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x419474_type* @G__0x419474 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419474_type* @G__0x419474 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %2740 = load i64, i64* %RBP.i, align 8
  %2741 = add i64 %2740, -80
  %2742 = add i64 %2739, 11
  store i64 %2742, i64* %3, align 8
  %2743 = inttoptr i64 %2741 to i64*
  %2744 = load i64, i64* %2743, align 8
  store i64 %2744, i64* %RDI.i3611.pre-phi, align 8
  %2745 = add i64 %2740, -44
  %2746 = add i64 %2739, 14
  store i64 %2746, i64* %3, align 8
  %2747 = inttoptr i64 %2745 to i32*
  %2748 = load i32, i32* %2747, align 4
  %2749 = zext i32 %2748 to i64
  store i64 %2749, i64* %RSI.i3626, align 8
  %2750 = add i64 %2739, 27848
  %2751 = add i64 %2739, 19
  %2752 = load i64, i64* %6, align 8
  %2753 = add i64 %2752, -8
  %2754 = inttoptr i64 %2753 to i64*
  store i64 %2751, i64* %2754, align 8
  store i64 %2753, i64* %6, align 8
  store i64 %2750, i64* %3, align 8
  %call2_401b76 = tail call %struct.Memory* @sub_408830._Z13test_constantIi20custom_and_constantsIiEEvPT_iPKc(%struct.State* nonnull %0, i64 %2750, %struct.Memory* %call2_401b63)
  %2755 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x41948b_type* @G__0x41948b to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41948b_type* @G__0x41948b to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %2756 = load i64, i64* %RBP.i, align 8
  %2757 = add i64 %2756, -80
  %2758 = add i64 %2755, 11
  store i64 %2758, i64* %3, align 8
  %2759 = inttoptr i64 %2757 to i64*
  %2760 = load i64, i64* %2759, align 8
  store i64 %2760, i64* %RDI.i3611.pre-phi, align 8
  %2761 = add i64 %2756, -44
  %2762 = add i64 %2755, 14
  store i64 %2762, i64* %3, align 8
  %2763 = inttoptr i64 %2761 to i32*
  %2764 = load i32, i32* %2763, align 4
  %2765 = zext i32 %2764 to i64
  store i64 %2765, i64* %RSI.i3626, align 8
  %2766 = add i64 %2755, 27989
  %2767 = add i64 %2755, 19
  %2768 = load i64, i64* %6, align 8
  %2769 = add i64 %2768, -8
  %2770 = inttoptr i64 %2769 to i64*
  store i64 %2767, i64* %2770, align 8
  store i64 %2769, i64* %6, align 8
  store i64 %2766, i64* %3, align 8
  %call2_401b89 = tail call %struct.Memory* @sub_4088d0._Z13test_constantIi19custom_or_constantsIiEEvPT_iPKc(%struct.State* nonnull %0, i64 %2766, %struct.Memory* %call2_401b76)
  %2771 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x4194a1_type* @G__0x4194a1 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4194a1_type* @G__0x4194a1 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %2772 = load i64, i64* %RBP.i, align 8
  %2773 = add i64 %2772, -80
  %2774 = add i64 %2771, 11
  store i64 %2774, i64* %3, align 8
  %2775 = inttoptr i64 %2773 to i64*
  %2776 = load i64, i64* %2775, align 8
  store i64 %2776, i64* %RDI.i3611.pre-phi, align 8
  %2777 = add i64 %2772, -44
  %2778 = add i64 %2771, 14
  store i64 %2778, i64* %3, align 8
  %2779 = inttoptr i64 %2777 to i32*
  %2780 = load i32, i32* %2779, align 4
  %2781 = zext i32 %2780 to i64
  store i64 %2781, i64* %RSI.i3626, align 8
  %2782 = add i64 %2771, 28130
  %2783 = add i64 %2771, 19
  %2784 = load i64, i64* %6, align 8
  %2785 = add i64 %2784, -8
  %2786 = inttoptr i64 %2785 to i64*
  store i64 %2783, i64* %2786, align 8
  store i64 %2785, i64* %6, align 8
  store i64 %2782, i64* %3, align 8
  %call2_401b9c = tail call %struct.Memory* @sub_408970._Z13test_constantIi20custom_xor_constantsIiEEvPT_iPKc(%struct.State* nonnull %0, i64 %2782, %struct.Memory* %call2_401b89)
  %2787 = load i64, i64* %3, align 8
  %2788 = add i64 %2787, ptrtoint (%G_0x2204d8__rip__type* @G_0x2204d8__rip_ to i64)
  %2789 = add i64 %2787, 7
  store i64 %2789, i64* %3, align 8
  %2790 = inttoptr i64 %2788 to i32*
  %2791 = load i32, i32* %2790, align 4
  %2792 = sext i32 %2791 to i64
  %2793 = mul nsw i64 %2792, 1717986919
  %2794 = lshr i64 %2793, 63
  store i64 %2794, i64* %RCX.i3620, align 8
  %2795 = trunc i64 %2794 to i32
  %2796 = ashr i64 %2793, 34
  store i64 %2796, i64* %RAX.i3622, align 8
  %2797 = trunc i64 %2796 to i32
  %2798 = add i32 %2795, %2797
  %2799 = zext i32 %2798 to i64
  store i64 %2799, i64* %206, align 8
  %2800 = icmp ult i32 %2798, %2797
  %2801 = icmp ult i32 %2798, %2795
  %2802 = or i1 %2800, %2801
  %2803 = zext i1 %2802 to i8
  store i8 %2803, i8* %14, align 1
  %2804 = and i32 %2798, 255
  %2805 = tail call i32 @llvm.ctpop.i32(i32 %2804)
  %2806 = trunc i32 %2805 to i8
  %2807 = and i8 %2806, 1
  %2808 = xor i8 %2807, 1
  store i8 %2808, i8* %21, align 1
  %2809 = trunc i64 %2796 to i32
  %2810 = xor i32 %2809, %2798
  %2811 = lshr i32 %2810, 4
  %2812 = trunc i32 %2811 to i8
  %2813 = and i8 %2812, 1
  store i8 %2813, i8* %27, align 1
  %2814 = icmp eq i32 %2798, 0
  %2815 = zext i1 %2814 to i8
  store i8 %2815, i8* %30, align 1
  %2816 = lshr i32 %2798, 31
  %2817 = trunc i32 %2816 to i8
  store i8 %2817, i8* %33, align 1
  %2818 = lshr i64 %2796, 31
  %2819 = trunc i64 %2818 to i32
  %2820 = and i32 %2819, 1
  %2821 = xor i32 %2816, %2820
  %2822 = add nuw nsw i32 %2821, %2816
  %2823 = icmp eq i32 %2822, 2
  %2824 = zext i1 %2823 to i8
  store i8 %2824, i8* %39, align 1
  %2825 = add i64 %2787, add (i64 ptrtoint (%G_0x2204f7__rip__type* @G_0x2204f7__rip_ to i64), i64 33)
  %2826 = add i64 %2787, 40
  store i64 %2826, i64* %3, align 8
  %2827 = inttoptr i64 %2825 to i32*
  store i32 %2798, i32* %2827, align 4
  %2828 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x4194b8_type* @G__0x4194b8 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4194b8_type* @G__0x4194b8 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %2829 = load i64, i64* %RBP.i, align 8
  %2830 = add i64 %2829, -80
  %2831 = add i64 %2828, 11
  store i64 %2831, i64* %3, align 8
  %2832 = inttoptr i64 %2830 to i64*
  %2833 = load i64, i64* %2832, align 8
  store i64 %2833, i64* %RDI.i3611.pre-phi, align 8
  %2834 = add i64 %2829, -44
  %2835 = add i64 %2828, 14
  store i64 %2835, i64* %3, align 8
  %2836 = inttoptr i64 %2834 to i32*
  %2837 = load i32, i32* %2836, align 4
  %2838 = zext i32 %2837 to i64
  store i64 %2838, i64* %RSI.i3626, align 8
  %2839 = add i64 %2828, 28231
  %2840 = add i64 %2828, 19
  %2841 = load i64, i64* %6, align 8
  %2842 = add i64 %2841, -8
  %2843 = inttoptr i64 %2842 to i64*
  store i64 %2840, i64* %2843, align 8
  store i64 %2842, i64* %6, align 8
  store i64 %2839, i64* %3, align 8
  %call2_401bd7 = tail call %struct.Memory* @sub_408a10._Z13test_constantIi19custom_constant_addIiEEvPT_iPKc(%struct.State* nonnull %0, i64 %2839, %struct.Memory* %call2_401b9c)
  %2844 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x4194ce_type* @G__0x4194ce to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4194ce_type* @G__0x4194ce to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %2845 = load i64, i64* %RBP.i, align 8
  %2846 = add i64 %2845, -80
  %2847 = add i64 %2844, 11
  store i64 %2847, i64* %3, align 8
  %2848 = inttoptr i64 %2846 to i64*
  %2849 = load i64, i64* %2848, align 8
  store i64 %2849, i64* %RDI.i3611.pre-phi, align 8
  %2850 = add i64 %2845, -44
  %2851 = add i64 %2844, 14
  store i64 %2851, i64* %3, align 8
  %2852 = inttoptr i64 %2850 to i32*
  %2853 = load i32, i32* %2852, align 4
  %2854 = zext i32 %2853 to i64
  store i64 %2854, i64* %RSI.i3626, align 8
  %2855 = add i64 %2844, 28372
  %2856 = add i64 %2844, 19
  %2857 = load i64, i64* %6, align 8
  %2858 = add i64 %2857, -8
  %2859 = inttoptr i64 %2858 to i64*
  store i64 %2856, i64* %2859, align 8
  store i64 %2858, i64* %6, align 8
  store i64 %2855, i64* %3, align 8
  %call2_401bea = tail call %struct.Memory* @sub_408ab0._Z13test_constantIi28custom_multiple_constant_addIiEEvPT_iPKc(%struct.State* nonnull %0, i64 %2855, %struct.Memory* %call2_401bd7)
  %2860 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x4194ee_type* @G__0x4194ee to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4194ee_type* @G__0x4194ee to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %2861 = load i64, i64* %RBP.i, align 8
  %2862 = add i64 %2861, -80
  %2863 = add i64 %2860, 11
  store i64 %2863, i64* %3, align 8
  %2864 = inttoptr i64 %2862 to i64*
  %2865 = load i64, i64* %2864, align 8
  store i64 %2865, i64* %RDI.i3611.pre-phi, align 8
  %2866 = add i64 %2861, -44
  %2867 = add i64 %2860, 14
  store i64 %2867, i64* %3, align 8
  %2868 = inttoptr i64 %2866 to i32*
  %2869 = load i32, i32* %2868, align 4
  %2870 = zext i32 %2869 to i64
  store i64 %2870, i64* %RSI.i3626, align 8
  %2871 = add i64 %2860, 28513
  %2872 = add i64 %2860, 19
  %2873 = load i64, i64* %6, align 8
  %2874 = add i64 %2873, -8
  %2875 = inttoptr i64 %2874 to i64*
  store i64 %2872, i64* %2875, align 8
  store i64 %2874, i64* %6, align 8
  store i64 %2871, i64* %3, align 8
  %call2_401bfd = tail call %struct.Memory* @sub_408b50._Z13test_constantIi19custom_constant_subIiEEvPT_iPKc(%struct.State* nonnull %0, i64 %2871, %struct.Memory* %call2_401bea)
  %2876 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x419509_type* @G__0x419509 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419509_type* @G__0x419509 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %2877 = load i64, i64* %RBP.i, align 8
  %2878 = add i64 %2877, -80
  %2879 = add i64 %2876, 11
  store i64 %2879, i64* %3, align 8
  %2880 = inttoptr i64 %2878 to i64*
  %2881 = load i64, i64* %2880, align 8
  store i64 %2881, i64* %RDI.i3611.pre-phi, align 8
  %2882 = add i64 %2877, -44
  %2883 = add i64 %2876, 14
  store i64 %2883, i64* %3, align 8
  %2884 = inttoptr i64 %2882 to i32*
  %2885 = load i32, i32* %2884, align 4
  %2886 = zext i32 %2885 to i64
  store i64 %2886, i64* %RSI.i3626, align 8
  %2887 = add i64 %2876, 28654
  %2888 = add i64 %2876, 19
  %2889 = load i64, i64* %6, align 8
  %2890 = add i64 %2889, -8
  %2891 = inttoptr i64 %2890 to i64*
  store i64 %2888, i64* %2891, align 8
  store i64 %2890, i64* %6, align 8
  store i64 %2887, i64* %3, align 8
  %call2_401c10 = tail call %struct.Memory* @sub_408bf0._Z13test_constantIi28custom_multiple_constant_subIiEEvPT_iPKc(%struct.State* nonnull %0, i64 %2887, %struct.Memory* %call2_401bfd)
  %2892 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x41952e_type* @G__0x41952e to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41952e_type* @G__0x41952e to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %2893 = load i64, i64* %RBP.i, align 8
  %2894 = add i64 %2893, -80
  %2895 = add i64 %2892, 11
  store i64 %2895, i64* %3, align 8
  %2896 = inttoptr i64 %2894 to i64*
  %2897 = load i64, i64* %2896, align 8
  store i64 %2897, i64* %RDI.i3611.pre-phi, align 8
  %2898 = add i64 %2893, -44
  %2899 = add i64 %2892, 14
  store i64 %2899, i64* %3, align 8
  %2900 = inttoptr i64 %2898 to i32*
  %2901 = load i32, i32* %2900, align 4
  %2902 = zext i32 %2901 to i64
  store i64 %2902, i64* %RSI.i3626, align 8
  %2903 = add i64 %2892, 28795
  %2904 = add i64 %2892, 19
  %2905 = load i64, i64* %6, align 8
  %2906 = add i64 %2905, -8
  %2907 = inttoptr i64 %2906 to i64*
  store i64 %2904, i64* %2907, align 8
  store i64 %2906, i64* %6, align 8
  store i64 %2903, i64* %3, align 8
  %call2_401c23 = tail call %struct.Memory* @sub_408c90._Z13test_constantIi24custom_constant_multiplyIiEEvPT_iPKc(%struct.State* nonnull %0, i64 %2903, %struct.Memory* %call2_401c10)
  %2908 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x419549_type* @G__0x419549 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419549_type* @G__0x419549 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %2909 = load i64, i64* %RBP.i, align 8
  %2910 = add i64 %2909, -80
  %2911 = add i64 %2908, 11
  store i64 %2911, i64* %3, align 8
  %2912 = inttoptr i64 %2910 to i64*
  %2913 = load i64, i64* %2912, align 8
  store i64 %2913, i64* %RDI.i3611.pre-phi, align 8
  %2914 = add i64 %2909, -44
  %2915 = add i64 %2908, 14
  store i64 %2915, i64* %3, align 8
  %2916 = inttoptr i64 %2914 to i32*
  %2917 = load i32, i32* %2916, align 4
  %2918 = zext i32 %2917 to i64
  store i64 %2918, i64* %RSI.i3626, align 8
  %2919 = add i64 %2908, 28936
  %2920 = add i64 %2908, 19
  %2921 = load i64, i64* %6, align 8
  %2922 = add i64 %2921, -8
  %2923 = inttoptr i64 %2922 to i64*
  store i64 %2920, i64* %2923, align 8
  store i64 %2922, i64* %6, align 8
  store i64 %2919, i64* %3, align 8
  %call2_401c36 = tail call %struct.Memory* @sub_408d30._Z13test_constantIi33custom_multiple_constant_multiplyIiEEvPT_iPKc(%struct.State* nonnull %0, i64 %2919, %struct.Memory* %call2_401c23)
  %2924 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x41956f_type* @G__0x41956f to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41956f_type* @G__0x41956f to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %2925 = load i64, i64* %RBP.i, align 8
  %2926 = add i64 %2925, -80
  %2927 = add i64 %2924, 11
  store i64 %2927, i64* %3, align 8
  %2928 = inttoptr i64 %2926 to i64*
  %2929 = load i64, i64* %2928, align 8
  store i64 %2929, i64* %RDI.i3611.pre-phi, align 8
  %2930 = add i64 %2925, -44
  %2931 = add i64 %2924, 14
  store i64 %2931, i64* %3, align 8
  %2932 = inttoptr i64 %2930 to i32*
  %2933 = load i32, i32* %2932, align 4
  %2934 = zext i32 %2933 to i64
  store i64 %2934, i64* %RSI.i3626, align 8
  %2935 = add i64 %2924, 29077
  %2936 = add i64 %2924, 19
  %2937 = load i64, i64* %6, align 8
  %2938 = add i64 %2937, -8
  %2939 = inttoptr i64 %2938 to i64*
  store i64 %2936, i64* %2939, align 8
  store i64 %2938, i64* %6, align 8
  store i64 %2935, i64* %3, align 8
  %call2_401c49 = tail call %struct.Memory* @sub_408dd0._Z13test_constantIi34custom_multiple_constant_multiply2IiEEvPT_iPKc(%struct.State* nonnull %0, i64 %2935, %struct.Memory* %call2_401c36)
  %2940 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x419594_type* @G__0x419594 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419594_type* @G__0x419594 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %2941 = load i64, i64* %RBP.i, align 8
  %2942 = add i64 %2941, -80
  %2943 = add i64 %2940, 11
  store i64 %2943, i64* %3, align 8
  %2944 = inttoptr i64 %2942 to i64*
  %2945 = load i64, i64* %2944, align 8
  store i64 %2945, i64* %RDI.i3611.pre-phi, align 8
  %2946 = add i64 %2941, -44
  %2947 = add i64 %2940, 14
  store i64 %2947, i64* %3, align 8
  %2948 = inttoptr i64 %2946 to i32*
  %2949 = load i32, i32* %2948, align 4
  %2950 = zext i32 %2949 to i64
  store i64 %2950, i64* %RSI.i3626, align 8
  %2951 = add i64 %2940, 29218
  %2952 = add i64 %2940, 19
  %2953 = load i64, i64* %6, align 8
  %2954 = add i64 %2953, -8
  %2955 = inttoptr i64 %2954 to i64*
  store i64 %2952, i64* %2955, align 8
  store i64 %2954, i64* %6, align 8
  store i64 %2951, i64* %3, align 8
  %call2_401c5c = tail call %struct.Memory* @sub_408e70._Z13test_constantIi22custom_constant_divideIiEEvPT_iPKc(%struct.State* nonnull %0, i64 %2951, %struct.Memory* %call2_401c49)
  %2956 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x4195ad_type* @G__0x4195ad to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4195ad_type* @G__0x4195ad to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %2957 = load i64, i64* %RBP.i, align 8
  %2958 = add i64 %2957, -80
  %2959 = add i64 %2956, 11
  store i64 %2959, i64* %3, align 8
  %2960 = inttoptr i64 %2958 to i64*
  %2961 = load i64, i64* %2960, align 8
  store i64 %2961, i64* %RDI.i3611.pre-phi, align 8
  %2962 = add i64 %2957, -44
  %2963 = add i64 %2956, 14
  store i64 %2963, i64* %3, align 8
  %2964 = inttoptr i64 %2962 to i32*
  %2965 = load i32, i32* %2964, align 4
  %2966 = zext i32 %2965 to i64
  store i64 %2966, i64* %RSI.i3626, align 8
  %2967 = add i64 %2956, 29359
  %2968 = add i64 %2956, 19
  %2969 = load i64, i64* %6, align 8
  %2970 = add i64 %2969, -8
  %2971 = inttoptr i64 %2970 to i64*
  store i64 %2968, i64* %2971, align 8
  store i64 %2970, i64* %6, align 8
  store i64 %2967, i64* %3, align 8
  %call2_401c6f = tail call %struct.Memory* @sub_408f10._Z13test_constantIi31custom_multiple_constant_divideIiEEvPT_iPKc(%struct.State* nonnull %0, i64 %2967, %struct.Memory* %call2_401c5c)
  %2972 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x4195d0_type* @G__0x4195d0 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4195d0_type* @G__0x4195d0 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %2973 = load i64, i64* %RBP.i, align 8
  %2974 = add i64 %2973, -80
  %2975 = add i64 %2972, 11
  store i64 %2975, i64* %3, align 8
  %2976 = inttoptr i64 %2974 to i64*
  %2977 = load i64, i64* %2976, align 8
  store i64 %2977, i64* %RDI.i3611.pre-phi, align 8
  %2978 = add i64 %2973, -44
  %2979 = add i64 %2972, 14
  store i64 %2979, i64* %3, align 8
  %2980 = inttoptr i64 %2978 to i32*
  %2981 = load i32, i32* %2980, align 4
  %2982 = zext i32 %2981 to i64
  store i64 %2982, i64* %RSI.i3626, align 8
  %2983 = add i64 %2972, 29500
  %2984 = add i64 %2972, 19
  %2985 = load i64, i64* %6, align 8
  %2986 = add i64 %2985, -8
  %2987 = inttoptr i64 %2986 to i64*
  store i64 %2984, i64* %2987, align 8
  store i64 %2986, i64* %6, align 8
  store i64 %2983, i64* %3, align 8
  %call2_401c82 = tail call %struct.Memory* @sub_408fb0._Z13test_constantIi32custom_multiple_constant_divide2IiEEvPT_iPKc(%struct.State* nonnull %0, i64 %2983, %struct.Memory* %call2_401c6f)
  %2988 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x4195f3_type* @G__0x4195f3 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4195f3_type* @G__0x4195f3 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %2989 = load i64, i64* %RBP.i, align 8
  %2990 = add i64 %2989, -80
  %2991 = add i64 %2988, 11
  store i64 %2991, i64* %3, align 8
  %2992 = inttoptr i64 %2990 to i64*
  %2993 = load i64, i64* %2992, align 8
  store i64 %2993, i64* %RDI.i3611.pre-phi, align 8
  %2994 = add i64 %2989, -44
  %2995 = add i64 %2988, 14
  store i64 %2995, i64* %3, align 8
  %2996 = inttoptr i64 %2994 to i32*
  %2997 = load i32, i32* %2996, align 4
  %2998 = zext i32 %2997 to i64
  store i64 %2998, i64* %RSI.i3626, align 8
  %2999 = add i64 %2988, 29641
  %3000 = add i64 %2988, 19
  %3001 = load i64, i64* %6, align 8
  %3002 = add i64 %3001, -8
  %3003 = inttoptr i64 %3002 to i64*
  store i64 %3000, i64* %3003, align 8
  store i64 %3002, i64* %6, align 8
  store i64 %2999, i64* %3, align 8
  %call2_401c95 = tail call %struct.Memory* @sub_409050._Z13test_constantIi30custom_multiple_constant_mixedIiEEvPT_iPKc(%struct.State* nonnull %0, i64 %2999, %struct.Memory* %call2_401c82)
  %3004 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x419614_type* @G__0x419614 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419614_type* @G__0x419614 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %3005 = load i64, i64* %RBP.i, align 8
  %3006 = add i64 %3005, -80
  %3007 = add i64 %3004, 11
  store i64 %3007, i64* %3, align 8
  %3008 = inttoptr i64 %3006 to i64*
  %3009 = load i64, i64* %3008, align 8
  store i64 %3009, i64* %RDI.i3611.pre-phi, align 8
  %3010 = add i64 %3005, -44
  %3011 = add i64 %3004, 14
  store i64 %3011, i64* %3, align 8
  %3012 = inttoptr i64 %3010 to i32*
  %3013 = load i32, i32* %3012, align 4
  %3014 = zext i32 %3013 to i64
  store i64 %3014, i64* %RSI.i3626, align 8
  %3015 = add i64 %3004, 29782
  %3016 = add i64 %3004, 19
  %3017 = load i64, i64* %6, align 8
  %3018 = add i64 %3017, -8
  %3019 = inttoptr i64 %3018 to i64*
  store i64 %3016, i64* %3019, align 8
  store i64 %3018, i64* %6, align 8
  store i64 %3015, i64* %3, align 8
  %call2_401ca8 = tail call %struct.Memory* @sub_4090f0._Z13test_constantIi19custom_constant_andIiEEvPT_iPKc(%struct.State* nonnull %0, i64 %3015, %struct.Memory* %call2_401c95)
  %3020 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x41962a_type* @G__0x41962a to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41962a_type* @G__0x41962a to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %3021 = load i64, i64* %RBP.i, align 8
  %3022 = add i64 %3021, -80
  %3023 = add i64 %3020, 11
  store i64 %3023, i64* %3, align 8
  %3024 = inttoptr i64 %3022 to i64*
  %3025 = load i64, i64* %3024, align 8
  store i64 %3025, i64* %RDI.i3611.pre-phi, align 8
  %3026 = add i64 %3021, -44
  %3027 = add i64 %3020, 14
  store i64 %3027, i64* %3, align 8
  %3028 = inttoptr i64 %3026 to i32*
  %3029 = load i32, i32* %3028, align 4
  %3030 = zext i32 %3029 to i64
  store i64 %3030, i64* %RSI.i3626, align 8
  %3031 = add i64 %3020, 29923
  %3032 = add i64 %3020, 19
  %3033 = load i64, i64* %6, align 8
  %3034 = add i64 %3033, -8
  %3035 = inttoptr i64 %3034 to i64*
  store i64 %3032, i64* %3035, align 8
  store i64 %3034, i64* %6, align 8
  store i64 %3031, i64* %3, align 8
  %call2_401cbb = tail call %struct.Memory* @sub_409190._Z13test_constantIi28custom_multiple_constant_andIiEEvPT_iPKc(%struct.State* nonnull %0, i64 %3031, %struct.Memory* %call2_401ca8)
  %3036 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x419649_type* @G__0x419649 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419649_type* @G__0x419649 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %3037 = load i64, i64* %RBP.i, align 8
  %3038 = add i64 %3037, -80
  %3039 = add i64 %3036, 11
  store i64 %3039, i64* %3, align 8
  %3040 = inttoptr i64 %3038 to i64*
  %3041 = load i64, i64* %3040, align 8
  store i64 %3041, i64* %RDI.i3611.pre-phi, align 8
  %3042 = add i64 %3037, -44
  %3043 = add i64 %3036, 14
  store i64 %3043, i64* %3, align 8
  %3044 = inttoptr i64 %3042 to i32*
  %3045 = load i32, i32* %3044, align 4
  %3046 = zext i32 %3045 to i64
  store i64 %3046, i64* %RSI.i3626, align 8
  %3047 = add i64 %3036, 30064
  %3048 = add i64 %3036, 19
  %3049 = load i64, i64* %6, align 8
  %3050 = add i64 %3049, -8
  %3051 = inttoptr i64 %3050 to i64*
  store i64 %3048, i64* %3051, align 8
  store i64 %3050, i64* %6, align 8
  store i64 %3047, i64* %3, align 8
  %call2_401cce = tail call %struct.Memory* @sub_409230._Z13test_constantIi18custom_constant_orIiEEvPT_iPKc(%struct.State* nonnull %0, i64 %3047, %struct.Memory* %call2_401cbb)
  %3052 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x41965e_type* @G__0x41965e to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41965e_type* @G__0x41965e to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %3053 = load i64, i64* %RBP.i, align 8
  %3054 = add i64 %3053, -80
  %3055 = add i64 %3052, 11
  store i64 %3055, i64* %3, align 8
  %3056 = inttoptr i64 %3054 to i64*
  %3057 = load i64, i64* %3056, align 8
  store i64 %3057, i64* %RDI.i3611.pre-phi, align 8
  %3058 = add i64 %3053, -44
  %3059 = add i64 %3052, 14
  store i64 %3059, i64* %3, align 8
  %3060 = inttoptr i64 %3058 to i32*
  %3061 = load i32, i32* %3060, align 4
  %3062 = zext i32 %3061 to i64
  store i64 %3062, i64* %RSI.i3626, align 8
  %3063 = add i64 %3052, 30205
  %3064 = add i64 %3052, 19
  %3065 = load i64, i64* %6, align 8
  %3066 = add i64 %3065, -8
  %3067 = inttoptr i64 %3066 to i64*
  store i64 %3064, i64* %3067, align 8
  store i64 %3066, i64* %6, align 8
  store i64 %3063, i64* %3, align 8
  %call2_401ce1 = tail call %struct.Memory* @sub_4092d0._Z13test_constantIi27custom_multiple_constant_orIiEEvPT_iPKc(%struct.State* nonnull %0, i64 %3063, %struct.Memory* %call2_401cce)
  %3068 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x41967c_type* @G__0x41967c to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41967c_type* @G__0x41967c to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %3069 = load i64, i64* %RBP.i, align 8
  %3070 = add i64 %3069, -80
  %3071 = add i64 %3068, 11
  store i64 %3071, i64* %3, align 8
  %3072 = inttoptr i64 %3070 to i64*
  %3073 = load i64, i64* %3072, align 8
  store i64 %3073, i64* %RDI.i3611.pre-phi, align 8
  %3074 = add i64 %3069, -44
  %3075 = add i64 %3068, 14
  store i64 %3075, i64* %3, align 8
  %3076 = inttoptr i64 %3074 to i32*
  %3077 = load i32, i32* %3076, align 4
  %3078 = zext i32 %3077 to i64
  store i64 %3078, i64* %RSI.i3626, align 8
  %3079 = add i64 %3068, 30346
  %3080 = add i64 %3068, 19
  %3081 = load i64, i64* %6, align 8
  %3082 = add i64 %3081, -8
  %3083 = inttoptr i64 %3082 to i64*
  store i64 %3080, i64* %3083, align 8
  store i64 %3082, i64* %6, align 8
  store i64 %3079, i64* %3, align 8
  %call2_401cf4 = tail call %struct.Memory* @sub_409370._Z13test_constantIi19custom_constant_xorIiEEvPT_iPKc(%struct.State* nonnull %0, i64 %3079, %struct.Memory* %call2_401ce1)
  %3084 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x419692_type* @G__0x419692 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419692_type* @G__0x419692 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %3085 = load i64, i64* %RBP.i, align 8
  %3086 = add i64 %3085, -80
  %3087 = add i64 %3084, 11
  store i64 %3087, i64* %3, align 8
  %3088 = inttoptr i64 %3086 to i64*
  %3089 = load i64, i64* %3088, align 8
  store i64 %3089, i64* %RDI.i3611.pre-phi, align 8
  %3090 = add i64 %3085, -44
  %3091 = add i64 %3084, 14
  store i64 %3091, i64* %3, align 8
  %3092 = inttoptr i64 %3090 to i32*
  %3093 = load i32, i32* %3092, align 4
  %3094 = zext i32 %3093 to i64
  store i64 %3094, i64* %RSI.i3626, align 8
  %3095 = add i64 %3084, 30487
  %3096 = add i64 %3084, 19
  %3097 = load i64, i64* %6, align 8
  %3098 = add i64 %3097, -8
  %3099 = inttoptr i64 %3098 to i64*
  store i64 %3096, i64* %3099, align 8
  store i64 %3098, i64* %6, align 8
  store i64 %3095, i64* %3, align 8
  %call2_401d07 = tail call %struct.Memory* @sub_409410._Z13test_constantIi28custom_multiple_constant_xorIiEEvPT_iPKc(%struct.State* nonnull %0, i64 %3095, %struct.Memory* %call2_401cf4)
  %3100 = load i64, i64* %3, align 8
  %3101 = add i64 %3100, ptrtoint (%G_0x220373__rip__type* @G_0x220373__rip_ to i64)
  %3102 = add i64 %3100, 9
  store i64 %3102, i64* %3, align 8
  %3103 = inttoptr i64 %3101 to double*
  %3104 = load double, double* %3103, align 8
  %3105 = tail call double @llvm.trunc.f64(double %3104)
  %3106 = tail call double @llvm.fabs.f64(double %3105)
  %3107 = fcmp ogt double %3106, 0x43E0000000000000
  %3108 = fptosi double %3105 to i64
  %3109 = trunc i64 %3108 to i32
  %3110 = select i1 %3107, i32 0, i32 %3109
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x658bd0_type* @G__0x658bd0 to i64), i64 4294967295) to i32) to i64), i64* %RAX.i3622, align 8
  store i64 and (i64 ptrtoint (%G__0x6608d0_type* @G__0x6608d0 to i64), i64 4294967295), i64* %206, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x6608d0_type* @G__0x6608d0 to i64), i64 4294967295) to i32) to i64), i64* %RCX.i3620, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x658bd0_type* @G__0x658bd0 to i64), i64 4294967295) to i32) to i64), i64* %RDI.i3611.pre-phi, align 8
  %3111 = load i64, i64* %RBP.i, align 8
  %3112 = add i64 %3111, -84
  %3113 = add i64 %3100, 35
  store i64 %3113, i64* %3, align 8
  %3114 = inttoptr i64 %3112 to i32*
  store i32 %3110, i32* %3114, align 4
  %3115 = load i64, i64* %RCX.i3620, align 8
  %3116 = load i64, i64* %3, align 8
  store i64 %3115, i64* %RSI.i3626, align 8
  %3117 = load i64, i64* %RBP.i, align 8
  %3118 = add i64 %3117, -84
  %3119 = add i64 %3116, 6
  store i64 %3119, i64* %3, align 8
  %3120 = inttoptr i64 %3118 to i32*
  %3121 = load i32, i32* %3120, align 4
  %3122 = zext i32 %3121 to i64
  store i64 %3122, i64* %RDX.i3615, align 8
  %3123 = add i64 %3117, -96
  %3124 = load i64, i64* %RAX.i3622, align 8
  %3125 = add i64 %3116, 10
  store i64 %3125, i64* %3, align 8
  %3126 = inttoptr i64 %3123 to i64*
  store i64 %3124, i64* %3126, align 8
  %3127 = load i64, i64* %3, align 8
  %3128 = add i64 %3127, 30583
  %3129 = add i64 %3127, 5
  %3130 = load i64, i64* %6, align 8
  %3131 = add i64 %3130, -8
  %3132 = inttoptr i64 %3131 to i64*
  store i64 %3129, i64* %3132, align 8
  store i64 %3131, i64* %6, align 8
  store i64 %3128, i64* %3, align 8
  %call2_401d39 = tail call %struct.Memory* @sub_4094b0._Z4fillIPjjEvT_S1_T0_(%struct.State* nonnull %0, i64 %3128, %struct.Memory* %call2_401d07)
  %3133 = load i64, i64* %3, align 8
  %3134 = add i64 %3133, ptrtoint (%G_0x22033c__rip__type* @G_0x22033c__rip_ to i64)
  %3135 = add i64 %3133, 6
  store i64 %3135, i64* %3, align 8
  %3136 = inttoptr i64 %3134 to i32*
  %3137 = load i32, i32* %3136, align 4
  %3138 = add i64 %3133, add (i64 ptrtoint (%G_0x220376__rip__type* @G_0x220376__rip_ to i64), i64 6)
  %3139 = add i64 %3133, 12
  store i64 %3139, i64* %3, align 8
  %3140 = inttoptr i64 %3138 to i32*
  store i32 %3137, i32* %3140, align 4
  %3141 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x419326_type* @G__0x419326 to i64), i64 4294967295), i64* %RDX.i3615, align 8
  %3142 = load i64, i64* %RBP.i, align 8
  %3143 = add i64 %3142, -96
  %3144 = add i64 %3141, 9
  store i64 %3144, i64* %3, align 8
  %3145 = inttoptr i64 %3143 to i64*
  %3146 = load i64, i64* %3145, align 8
  store i64 %3146, i64* %RDI.i3611.pre-phi, align 8
  %3147 = add i64 %3142, -44
  %3148 = add i64 %3141, 12
  store i64 %3148, i64* %3, align 8
  %3149 = inttoptr i64 %3147 to i32*
  %3150 = load i32, i32* %3149, align 4
  %3151 = zext i32 %3150 to i64
  store i64 %3151, i64* %RSI.i3626, align 8
  %3152 = add i64 %3141, 30630
  %3153 = add i64 %3141, 17
  %3154 = load i64, i64* %6, align 8
  %3155 = add i64 %3154, -8
  %3156 = inttoptr i64 %3155 to i64*
  store i64 %3153, i64* %3156, align 8
  store i64 %3155, i64* %6, align 8
  store i64 %3152, i64* %3, align 8
  %call2_401d56 = tail call %struct.Memory* @sub_4094f0._Z13test_constantIj10custom_twoIjEEvPT_iPKc(%struct.State* nonnull %0, i64 %3152, %struct.Memory* %call2_401d39)
  %3157 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x419338_type* @G__0x419338 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419338_type* @G__0x419338 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %3158 = load i64, i64* %RBP.i, align 8
  %3159 = add i64 %3158, -96
  %3160 = add i64 %3157, 11
  store i64 %3160, i64* %3, align 8
  %3161 = inttoptr i64 %3159 to i64*
  %3162 = load i64, i64* %3161, align 8
  store i64 %3162, i64* %RDI.i3611.pre-phi, align 8
  %3163 = add i64 %3158, -44
  %3164 = add i64 %3157, 14
  store i64 %3164, i64* %3, align 8
  %3165 = inttoptr i64 %3163 to i32*
  %3166 = load i32, i32* %3165, align 4
  %3167 = zext i32 %3166 to i64
  store i64 %3167, i64* %RSI.i3626, align 8
  %3168 = add i64 %3157, 30773
  %3169 = add i64 %3157, 19
  %3170 = load i64, i64* %6, align 8
  %3171 = add i64 %3170, -8
  %3172 = inttoptr i64 %3171 to i64*
  store i64 %3169, i64* %3172, align 8
  store i64 %3171, i64* %6, align 8
  store i64 %3168, i64* %3, align 8
  %call2_401d69 = tail call %struct.Memory* @sub_409590._Z13test_constantIj20custom_add_constantsIjEEvPT_iPKc(%struct.State* nonnull %0, i64 %3168, %struct.Memory* %call2_401d56)
  %3173 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x41934f_type* @G__0x41934f to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41934f_type* @G__0x41934f to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %3174 = load i64, i64* %RBP.i, align 8
  %3175 = add i64 %3174, -96
  %3176 = add i64 %3173, 11
  store i64 %3176, i64* %3, align 8
  %3177 = inttoptr i64 %3175 to i64*
  %3178 = load i64, i64* %3177, align 8
  store i64 %3178, i64* %RDI.i3611.pre-phi, align 8
  %3179 = add i64 %3174, -44
  %3180 = add i64 %3173, 14
  store i64 %3180, i64* %3, align 8
  %3181 = inttoptr i64 %3179 to i32*
  %3182 = load i32, i32* %3181, align 4
  %3183 = zext i32 %3182 to i64
  store i64 %3183, i64* %RSI.i3626, align 8
  %3184 = add i64 %3173, 30914
  %3185 = add i64 %3173, 19
  %3186 = load i64, i64* %6, align 8
  %3187 = add i64 %3186, -8
  %3188 = inttoptr i64 %3187 to i64*
  store i64 %3185, i64* %3188, align 8
  store i64 %3187, i64* %6, align 8
  store i64 %3184, i64* %3, align 8
  %call2_401d7c = tail call %struct.Memory* @sub_409630._Z13test_constantIj20custom_sub_constantsIjEEvPT_iPKc(%struct.State* nonnull %0, i64 %3184, %struct.Memory* %call2_401d69)
  %3189 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x41936b_type* @G__0x41936b to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41936b_type* @G__0x41936b to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %3190 = load i64, i64* %RBP.i, align 8
  %3191 = add i64 %3190, -96
  %3192 = add i64 %3189, 11
  store i64 %3192, i64* %3, align 8
  %3193 = inttoptr i64 %3191 to i64*
  %3194 = load i64, i64* %3193, align 8
  store i64 %3194, i64* %RDI.i3611.pre-phi, align 8
  %3195 = add i64 %3190, -44
  %3196 = add i64 %3189, 14
  store i64 %3196, i64* %3, align 8
  %3197 = inttoptr i64 %3195 to i32*
  %3198 = load i32, i32* %3197, align 4
  %3199 = zext i32 %3198 to i64
  store i64 %3199, i64* %RSI.i3626, align 8
  %3200 = add i64 %3189, 31055
  %3201 = add i64 %3189, 19
  %3202 = load i64, i64* %6, align 8
  %3203 = add i64 %3202, -8
  %3204 = inttoptr i64 %3203 to i64*
  store i64 %3201, i64* %3204, align 8
  store i64 %3203, i64* %6, align 8
  store i64 %3200, i64* %3, align 8
  %call2_401d8f = tail call %struct.Memory* @sub_4096d0._Z13test_constantIj25custom_multiply_constantsIjEEvPT_iPKc(%struct.State* nonnull %0, i64 %3200, %struct.Memory* %call2_401d7c)
  %3205 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x419387_type* @G__0x419387 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419387_type* @G__0x419387 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %3206 = load i64, i64* %RBP.i, align 8
  %3207 = add i64 %3206, -96
  %3208 = add i64 %3205, 11
  store i64 %3208, i64* %3, align 8
  %3209 = inttoptr i64 %3207 to i64*
  %3210 = load i64, i64* %3209, align 8
  store i64 %3210, i64* %RDI.i3611.pre-phi, align 8
  %3211 = add i64 %3206, -44
  %3212 = add i64 %3205, 14
  store i64 %3212, i64* %3, align 8
  %3213 = inttoptr i64 %3211 to i32*
  %3214 = load i32, i32* %3213, align 4
  %3215 = zext i32 %3214 to i64
  store i64 %3215, i64* %RSI.i3626, align 8
  %3216 = add i64 %3205, 31196
  %3217 = add i64 %3205, 19
  %3218 = load i64, i64* %6, align 8
  %3219 = add i64 %3218, -8
  %3220 = inttoptr i64 %3219 to i64*
  store i64 %3217, i64* %3220, align 8
  store i64 %3219, i64* %6, align 8
  store i64 %3216, i64* %3, align 8
  %call2_401da2 = tail call %struct.Memory* @sub_409770._Z13test_constantIj23custom_divide_constantsIjEEvPT_iPKc(%struct.State* nonnull %0, i64 %3216, %struct.Memory* %call2_401d8f)
  %3221 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x4193a1_type* @G__0x4193a1 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4193a1_type* @G__0x4193a1 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %3222 = load i64, i64* %RBP.i, align 8
  %3223 = add i64 %3222, -96
  %3224 = add i64 %3221, 11
  store i64 %3224, i64* %3, align 8
  %3225 = inttoptr i64 %3223 to i64*
  %3226 = load i64, i64* %3225, align 8
  store i64 %3226, i64* %RDI.i3611.pre-phi, align 8
  %3227 = add i64 %3222, -44
  %3228 = add i64 %3221, 14
  store i64 %3228, i64* %3, align 8
  %3229 = inttoptr i64 %3227 to i32*
  %3230 = load i32, i32* %3229, align 4
  %3231 = zext i32 %3230 to i64
  store i64 %3231, i64* %RSI.i3626, align 8
  %3232 = add i64 %3221, 31337
  %3233 = add i64 %3221, 19
  %3234 = load i64, i64* %6, align 8
  %3235 = add i64 %3234, -8
  %3236 = inttoptr i64 %3235 to i64*
  store i64 %3233, i64* %3236, align 8
  store i64 %3235, i64* %6, align 8
  store i64 %3232, i64* %3, align 8
  %call2_401db5 = tail call %struct.Memory* @sub_409810._Z13test_constantIj20custom_mod_constantsIjEEvPT_iPKc(%struct.State* nonnull %0, i64 %3232, %struct.Memory* %call2_401da2)
  %3237 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x4193b8_type* @G__0x4193b8 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4193b8_type* @G__0x4193b8 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %3238 = load i64, i64* %RBP.i, align 8
  %3239 = add i64 %3238, -96
  %3240 = add i64 %3237, 11
  store i64 %3240, i64* %3, align 8
  %3241 = inttoptr i64 %3239 to i64*
  %3242 = load i64, i64* %3241, align 8
  store i64 %3242, i64* %RDI.i3611.pre-phi, align 8
  %3243 = add i64 %3238, -44
  %3244 = add i64 %3237, 14
  store i64 %3244, i64* %3, align 8
  %3245 = inttoptr i64 %3243 to i32*
  %3246 = load i32, i32* %3245, align 4
  %3247 = zext i32 %3246 to i64
  store i64 %3247, i64* %RSI.i3626, align 8
  %3248 = add i64 %3237, 31478
  %3249 = add i64 %3237, 19
  %3250 = load i64, i64* %6, align 8
  %3251 = add i64 %3250, -8
  %3252 = inttoptr i64 %3251 to i64*
  store i64 %3249, i64* %3252, align 8
  store i64 %3251, i64* %6, align 8
  store i64 %3248, i64* %3, align 8
  %call2_401dc8 = tail call %struct.Memory* @sub_4098b0._Z13test_constantIj22custom_equal_constantsIjEEvPT_iPKc(%struct.State* nonnull %0, i64 %3248, %struct.Memory* %call2_401db5)
  %3253 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x4193d1_type* @G__0x4193d1 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4193d1_type* @G__0x4193d1 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %3254 = load i64, i64* %RBP.i, align 8
  %3255 = add i64 %3254, -96
  %3256 = add i64 %3253, 11
  store i64 %3256, i64* %3, align 8
  %3257 = inttoptr i64 %3255 to i64*
  %3258 = load i64, i64* %3257, align 8
  store i64 %3258, i64* %RDI.i3611.pre-phi, align 8
  %3259 = add i64 %3254, -44
  %3260 = add i64 %3253, 14
  store i64 %3260, i64* %3, align 8
  %3261 = inttoptr i64 %3259 to i32*
  %3262 = load i32, i32* %3261, align 4
  %3263 = zext i32 %3262 to i64
  store i64 %3263, i64* %RSI.i3626, align 8
  %3264 = add i64 %3253, 31619
  %3265 = add i64 %3253, 19
  %3266 = load i64, i64* %6, align 8
  %3267 = add i64 %3266, -8
  %3268 = inttoptr i64 %3267 to i64*
  store i64 %3265, i64* %3268, align 8
  store i64 %3267, i64* %6, align 8
  store i64 %3264, i64* %3, align 8
  %call2_401ddb = tail call %struct.Memory* @sub_409950._Z13test_constantIj25custom_notequal_constantsIjEEvPT_iPKc(%struct.State* nonnull %0, i64 %3264, %struct.Memory* %call2_401dc8)
  %3269 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x4193ed_type* @G__0x4193ed to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4193ed_type* @G__0x4193ed to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %3270 = load i64, i64* %RBP.i, align 8
  %3271 = add i64 %3270, -96
  %3272 = add i64 %3269, 11
  store i64 %3272, i64* %3, align 8
  %3273 = inttoptr i64 %3271 to i64*
  %3274 = load i64, i64* %3273, align 8
  store i64 %3274, i64* %RDI.i3611.pre-phi, align 8
  %3275 = add i64 %3270, -44
  %3276 = add i64 %3269, 14
  store i64 %3276, i64* %3, align 8
  %3277 = inttoptr i64 %3275 to i32*
  %3278 = load i32, i32* %3277, align 4
  %3279 = zext i32 %3278 to i64
  store i64 %3279, i64* %RSI.i3626, align 8
  %3280 = add i64 %3269, 31760
  %3281 = add i64 %3269, 19
  %3282 = load i64, i64* %6, align 8
  %3283 = add i64 %3282, -8
  %3284 = inttoptr i64 %3283 to i64*
  store i64 %3281, i64* %3284, align 8
  store i64 %3283, i64* %6, align 8
  store i64 %3280, i64* %3, align 8
  %call2_401dee = tail call %struct.Memory* @sub_4099f0._Z13test_constantIj28custom_greaterthan_constantsIjEEvPT_iPKc(%struct.State* nonnull %0, i64 %3280, %struct.Memory* %call2_401ddb)
  %3285 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x41940d_type* @G__0x41940d to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41940d_type* @G__0x41940d to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %3286 = load i64, i64* %RBP.i, align 8
  %3287 = add i64 %3286, -96
  %3288 = add i64 %3285, 11
  store i64 %3288, i64* %3, align 8
  %3289 = inttoptr i64 %3287 to i64*
  %3290 = load i64, i64* %3289, align 8
  store i64 %3290, i64* %RDI.i3611.pre-phi, align 8
  %3291 = add i64 %3286, -44
  %3292 = add i64 %3285, 14
  store i64 %3292, i64* %3, align 8
  %3293 = inttoptr i64 %3291 to i32*
  %3294 = load i32, i32* %3293, align 4
  %3295 = zext i32 %3294 to i64
  store i64 %3295, i64* %RSI.i3626, align 8
  %3296 = add i64 %3285, 31901
  %3297 = add i64 %3285, 19
  %3298 = load i64, i64* %6, align 8
  %3299 = add i64 %3298, -8
  %3300 = inttoptr i64 %3299 to i64*
  store i64 %3297, i64* %3300, align 8
  store i64 %3299, i64* %6, align 8
  store i64 %3296, i64* %3, align 8
  %call2_401e01 = tail call %struct.Memory* @sub_409a90._Z13test_constantIj25custom_lessthan_constantsIjEEvPT_iPKc(%struct.State* nonnull %0, i64 %3296, %struct.Memory* %call2_401dee)
  %3301 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x41942a_type* @G__0x41942a to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41942a_type* @G__0x41942a to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %3302 = load i64, i64* %RBP.i, align 8
  %3303 = add i64 %3302, -96
  %3304 = add i64 %3301, 11
  store i64 %3304, i64* %3, align 8
  %3305 = inttoptr i64 %3303 to i64*
  %3306 = load i64, i64* %3305, align 8
  store i64 %3306, i64* %RDI.i3611.pre-phi, align 8
  %3307 = add i64 %3302, -44
  %3308 = add i64 %3301, 14
  store i64 %3308, i64* %3, align 8
  %3309 = inttoptr i64 %3307 to i32*
  %3310 = load i32, i32* %3309, align 4
  %3311 = zext i32 %3310 to i64
  store i64 %3311, i64* %RSI.i3626, align 8
  %3312 = add i64 %3301, 32042
  %3313 = add i64 %3301, 19
  %3314 = load i64, i64* %6, align 8
  %3315 = add i64 %3314, -8
  %3316 = inttoptr i64 %3315 to i64*
  store i64 %3313, i64* %3316, align 8
  store i64 %3315, i64* %6, align 8
  store i64 %3312, i64* %3, align 8
  %call2_401e14 = tail call %struct.Memory* @sub_409b30._Z13test_constantIj33custom_greaterthanequal_constantsIjEEvPT_iPKc(%struct.State* nonnull %0, i64 %3312, %struct.Memory* %call2_401e01)
  %3317 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x419450_type* @G__0x419450 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419450_type* @G__0x419450 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %3318 = load i64, i64* %RBP.i, align 8
  %3319 = add i64 %3318, -96
  %3320 = add i64 %3317, 11
  store i64 %3320, i64* %3, align 8
  %3321 = inttoptr i64 %3319 to i64*
  %3322 = load i64, i64* %3321, align 8
  store i64 %3322, i64* %RDI.i3611.pre-phi, align 8
  %3323 = add i64 %3318, -44
  %3324 = add i64 %3317, 14
  store i64 %3324, i64* %3, align 8
  %3325 = inttoptr i64 %3323 to i32*
  %3326 = load i32, i32* %3325, align 4
  %3327 = zext i32 %3326 to i64
  store i64 %3327, i64* %RSI.i3626, align 8
  %3328 = add i64 %3317, 32183
  %3329 = add i64 %3317, 19
  %3330 = load i64, i64* %6, align 8
  %3331 = add i64 %3330, -8
  %3332 = inttoptr i64 %3331 to i64*
  store i64 %3329, i64* %3332, align 8
  store i64 %3331, i64* %6, align 8
  store i64 %3328, i64* %3, align 8
  %call2_401e27 = tail call %struct.Memory* @sub_409bd0._Z13test_constantIj30custom_lessthanequal_constantsIjEEvPT_iPKc(%struct.State* nonnull %0, i64 %3328, %struct.Memory* %call2_401e14)
  %3333 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x419473_type* @G__0x419473 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419473_type* @G__0x419473 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %3334 = load i64, i64* %RBP.i, align 8
  %3335 = add i64 %3334, -96
  %3336 = add i64 %3333, 11
  store i64 %3336, i64* %3, align 8
  %3337 = inttoptr i64 %3335 to i64*
  %3338 = load i64, i64* %3337, align 8
  store i64 %3338, i64* %RDI.i3611.pre-phi, align 8
  %3339 = add i64 %3334, -44
  %3340 = add i64 %3333, 14
  store i64 %3340, i64* %3, align 8
  %3341 = inttoptr i64 %3339 to i32*
  %3342 = load i32, i32* %3341, align 4
  %3343 = zext i32 %3342 to i64
  store i64 %3343, i64* %RSI.i3626, align 8
  %3344 = add i64 %3333, 32324
  %3345 = add i64 %3333, 19
  %3346 = load i64, i64* %6, align 8
  %3347 = add i64 %3346, -8
  %3348 = inttoptr i64 %3347 to i64*
  store i64 %3345, i64* %3348, align 8
  store i64 %3347, i64* %6, align 8
  store i64 %3344, i64* %3, align 8
  %call2_401e3a = tail call %struct.Memory* @sub_409c70._Z13test_constantIj20custom_and_constantsIjEEvPT_iPKc(%struct.State* nonnull %0, i64 %3344, %struct.Memory* %call2_401e27)
  %3349 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x41948a_type* @G__0x41948a to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41948a_type* @G__0x41948a to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %3350 = load i64, i64* %RBP.i, align 8
  %3351 = add i64 %3350, -96
  %3352 = add i64 %3349, 11
  store i64 %3352, i64* %3, align 8
  %3353 = inttoptr i64 %3351 to i64*
  %3354 = load i64, i64* %3353, align 8
  store i64 %3354, i64* %RDI.i3611.pre-phi, align 8
  %3355 = add i64 %3350, -44
  %3356 = add i64 %3349, 14
  store i64 %3356, i64* %3, align 8
  %3357 = inttoptr i64 %3355 to i32*
  %3358 = load i32, i32* %3357, align 4
  %3359 = zext i32 %3358 to i64
  store i64 %3359, i64* %RSI.i3626, align 8
  %3360 = add i64 %3349, 32465
  %3361 = add i64 %3349, 19
  %3362 = load i64, i64* %6, align 8
  %3363 = add i64 %3362, -8
  %3364 = inttoptr i64 %3363 to i64*
  store i64 %3361, i64* %3364, align 8
  store i64 %3363, i64* %6, align 8
  store i64 %3360, i64* %3, align 8
  %call2_401e4d = tail call %struct.Memory* @sub_409d10._Z13test_constantIj19custom_or_constantsIjEEvPT_iPKc(%struct.State* nonnull %0, i64 %3360, %struct.Memory* %call2_401e3a)
  %3365 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x4194a0_type* @G__0x4194a0 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4194a0_type* @G__0x4194a0 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %3366 = load i64, i64* %RBP.i, align 8
  %3367 = add i64 %3366, -96
  %3368 = add i64 %3365, 11
  store i64 %3368, i64* %3, align 8
  %3369 = inttoptr i64 %3367 to i64*
  %3370 = load i64, i64* %3369, align 8
  store i64 %3370, i64* %RDI.i3611.pre-phi, align 8
  %3371 = add i64 %3366, -44
  %3372 = add i64 %3365, 14
  store i64 %3372, i64* %3, align 8
  %3373 = inttoptr i64 %3371 to i32*
  %3374 = load i32, i32* %3373, align 4
  %3375 = zext i32 %3374 to i64
  store i64 %3375, i64* %RSI.i3626, align 8
  %3376 = add i64 %3365, 32606
  %3377 = add i64 %3365, 19
  %3378 = load i64, i64* %6, align 8
  %3379 = add i64 %3378, -8
  %3380 = inttoptr i64 %3379 to i64*
  store i64 %3377, i64* %3380, align 8
  store i64 %3379, i64* %6, align 8
  store i64 %3376, i64* %3, align 8
  %call2_401e60 = tail call %struct.Memory* @sub_409db0._Z13test_constantIj20custom_xor_constantsIjEEvPT_iPKc(%struct.State* nonnull %0, i64 %3376, %struct.Memory* %call2_401e4d)
  %3381 = load i64, i64* %3, align 8
  %3382 = add i64 %3381, ptrtoint (%G_0x220214__rip__type* @G_0x220214__rip_ to i64)
  %3383 = add i64 %3381, 7
  store i64 %3383, i64* %3, align 8
  %3384 = inttoptr i64 %3382 to i32*
  %3385 = load i32, i32* %3384, align 4
  %3386 = sext i32 %3385 to i64
  %3387 = mul nsw i64 %3386, 1717986919
  %3388 = lshr i64 %3387, 63
  store i64 %3388, i64* %RCX.i3620, align 8
  %3389 = trunc i64 %3388 to i32
  %3390 = ashr i64 %3387, 34
  store i64 %3390, i64* %RAX.i3622, align 8
  %3391 = trunc i64 %3390 to i32
  %3392 = add i32 %3389, %3391
  %3393 = zext i32 %3392 to i64
  store i64 %3393, i64* %206, align 8
  %3394 = icmp ult i32 %3392, %3391
  %3395 = icmp ult i32 %3392, %3389
  %3396 = or i1 %3394, %3395
  %3397 = zext i1 %3396 to i8
  store i8 %3397, i8* %14, align 1
  %3398 = and i32 %3392, 255
  %3399 = tail call i32 @llvm.ctpop.i32(i32 %3398)
  %3400 = trunc i32 %3399 to i8
  %3401 = and i8 %3400, 1
  %3402 = xor i8 %3401, 1
  store i8 %3402, i8* %21, align 1
  %3403 = trunc i64 %3390 to i32
  %3404 = xor i32 %3403, %3392
  %3405 = lshr i32 %3404, 4
  %3406 = trunc i32 %3405 to i8
  %3407 = and i8 %3406, 1
  store i8 %3407, i8* %27, align 1
  %3408 = icmp eq i32 %3392, 0
  %3409 = zext i1 %3408 to i8
  store i8 %3409, i8* %30, align 1
  %3410 = lshr i32 %3392, 31
  %3411 = trunc i32 %3410 to i8
  store i8 %3411, i8* %33, align 1
  %3412 = lshr i64 %3390, 31
  %3413 = trunc i64 %3412 to i32
  %3414 = and i32 %3413, 1
  %3415 = xor i32 %3410, %3414
  %3416 = add nuw nsw i32 %3415, %3410
  %3417 = icmp eq i32 %3416, 2
  %3418 = zext i1 %3417 to i8
  store i8 %3418, i8* %39, align 1
  %3419 = add i64 %3381, add (i64 ptrtoint (%G_0x220233__rip__type* @G_0x220233__rip_ to i64), i64 33)
  %3420 = add i64 %3381, 40
  store i64 %3420, i64* %3, align 8
  %3421 = inttoptr i64 %3419 to i32*
  store i32 %3392, i32* %3421, align 4
  %3422 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x4194b7_type* @G__0x4194b7 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4194b7_type* @G__0x4194b7 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %3423 = load i64, i64* %RBP.i, align 8
  %3424 = add i64 %3423, -96
  %3425 = add i64 %3422, 11
  store i64 %3425, i64* %3, align 8
  %3426 = inttoptr i64 %3424 to i64*
  %3427 = load i64, i64* %3426, align 8
  store i64 %3427, i64* %RDI.i3611.pre-phi, align 8
  %3428 = add i64 %3423, -44
  %3429 = add i64 %3422, 14
  store i64 %3429, i64* %3, align 8
  %3430 = inttoptr i64 %3428 to i32*
  %3431 = load i32, i32* %3430, align 4
  %3432 = zext i32 %3431 to i64
  store i64 %3432, i64* %RSI.i3626, align 8
  %3433 = add i64 %3422, 32707
  %3434 = add i64 %3422, 19
  %3435 = load i64, i64* %6, align 8
  %3436 = add i64 %3435, -8
  %3437 = inttoptr i64 %3436 to i64*
  store i64 %3434, i64* %3437, align 8
  store i64 %3436, i64* %6, align 8
  store i64 %3433, i64* %3, align 8
  %call2_401e9b = tail call %struct.Memory* @sub_409e50._Z13test_constantIj19custom_constant_addIjEEvPT_iPKc(%struct.State* nonnull %0, i64 %3433, %struct.Memory* %call2_401e60)
  %3438 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x4194cd_type* @G__0x4194cd to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4194cd_type* @G__0x4194cd to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %3439 = load i64, i64* %RBP.i, align 8
  %3440 = add i64 %3439, -96
  %3441 = add i64 %3438, 11
  store i64 %3441, i64* %3, align 8
  %3442 = inttoptr i64 %3440 to i64*
  %3443 = load i64, i64* %3442, align 8
  store i64 %3443, i64* %RDI.i3611.pre-phi, align 8
  %3444 = add i64 %3439, -44
  %3445 = add i64 %3438, 14
  store i64 %3445, i64* %3, align 8
  %3446 = inttoptr i64 %3444 to i32*
  %3447 = load i32, i32* %3446, align 4
  %3448 = zext i32 %3447 to i64
  store i64 %3448, i64* %RSI.i3626, align 8
  %3449 = add i64 %3438, 32848
  %3450 = add i64 %3438, 19
  %3451 = load i64, i64* %6, align 8
  %3452 = add i64 %3451, -8
  %3453 = inttoptr i64 %3452 to i64*
  store i64 %3450, i64* %3453, align 8
  store i64 %3452, i64* %6, align 8
  store i64 %3449, i64* %3, align 8
  %call2_401eae = tail call %struct.Memory* @sub_409ef0._Z13test_constantIj28custom_multiple_constant_addIjEEvPT_iPKc(%struct.State* nonnull %0, i64 %3449, %struct.Memory* %call2_401e9b)
  %3454 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x4194ed_type* @G__0x4194ed to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4194ed_type* @G__0x4194ed to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %3455 = load i64, i64* %RBP.i, align 8
  %3456 = add i64 %3455, -96
  %3457 = add i64 %3454, 11
  store i64 %3457, i64* %3, align 8
  %3458 = inttoptr i64 %3456 to i64*
  %3459 = load i64, i64* %3458, align 8
  store i64 %3459, i64* %RDI.i3611.pre-phi, align 8
  %3460 = add i64 %3455, -44
  %3461 = add i64 %3454, 14
  store i64 %3461, i64* %3, align 8
  %3462 = inttoptr i64 %3460 to i32*
  %3463 = load i32, i32* %3462, align 4
  %3464 = zext i32 %3463 to i64
  store i64 %3464, i64* %RSI.i3626, align 8
  %3465 = add i64 %3454, 32989
  %3466 = add i64 %3454, 19
  %3467 = load i64, i64* %6, align 8
  %3468 = add i64 %3467, -8
  %3469 = inttoptr i64 %3468 to i64*
  store i64 %3466, i64* %3469, align 8
  store i64 %3468, i64* %6, align 8
  store i64 %3465, i64* %3, align 8
  %call2_401ec1 = tail call %struct.Memory* @sub_409f90._Z13test_constantIj19custom_constant_subIjEEvPT_iPKc(%struct.State* nonnull %0, i64 %3465, %struct.Memory* %call2_401eae)
  %3470 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x419508_type* @G__0x419508 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419508_type* @G__0x419508 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %3471 = load i64, i64* %RBP.i, align 8
  %3472 = add i64 %3471, -96
  %3473 = add i64 %3470, 11
  store i64 %3473, i64* %3, align 8
  %3474 = inttoptr i64 %3472 to i64*
  %3475 = load i64, i64* %3474, align 8
  store i64 %3475, i64* %RDI.i3611.pre-phi, align 8
  %3476 = add i64 %3471, -44
  %3477 = add i64 %3470, 14
  store i64 %3477, i64* %3, align 8
  %3478 = inttoptr i64 %3476 to i32*
  %3479 = load i32, i32* %3478, align 4
  %3480 = zext i32 %3479 to i64
  store i64 %3480, i64* %RSI.i3626, align 8
  %3481 = add i64 %3470, 33130
  %3482 = add i64 %3470, 19
  %3483 = load i64, i64* %6, align 8
  %3484 = add i64 %3483, -8
  %3485 = inttoptr i64 %3484 to i64*
  store i64 %3482, i64* %3485, align 8
  store i64 %3484, i64* %6, align 8
  store i64 %3481, i64* %3, align 8
  %call2_401ed4 = tail call %struct.Memory* @sub_40a030._Z13test_constantIj28custom_multiple_constant_subIjEEvPT_iPKc(%struct.State* nonnull %0, i64 %3481, %struct.Memory* %call2_401ec1)
  %3486 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x41952d_type* @G__0x41952d to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41952d_type* @G__0x41952d to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %3487 = load i64, i64* %RBP.i, align 8
  %3488 = add i64 %3487, -96
  %3489 = add i64 %3486, 11
  store i64 %3489, i64* %3, align 8
  %3490 = inttoptr i64 %3488 to i64*
  %3491 = load i64, i64* %3490, align 8
  store i64 %3491, i64* %RDI.i3611.pre-phi, align 8
  %3492 = add i64 %3487, -44
  %3493 = add i64 %3486, 14
  store i64 %3493, i64* %3, align 8
  %3494 = inttoptr i64 %3492 to i32*
  %3495 = load i32, i32* %3494, align 4
  %3496 = zext i32 %3495 to i64
  store i64 %3496, i64* %RSI.i3626, align 8
  %3497 = add i64 %3486, 33271
  %3498 = add i64 %3486, 19
  %3499 = load i64, i64* %6, align 8
  %3500 = add i64 %3499, -8
  %3501 = inttoptr i64 %3500 to i64*
  store i64 %3498, i64* %3501, align 8
  store i64 %3500, i64* %6, align 8
  store i64 %3497, i64* %3, align 8
  %call2_401ee7 = tail call %struct.Memory* @sub_40a0d0._Z13test_constantIj24custom_constant_multiplyIjEEvPT_iPKc(%struct.State* nonnull %0, i64 %3497, %struct.Memory* %call2_401ed4)
  %3502 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x419548_type* @G__0x419548 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419548_type* @G__0x419548 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %3503 = load i64, i64* %RBP.i, align 8
  %3504 = add i64 %3503, -96
  %3505 = add i64 %3502, 11
  store i64 %3505, i64* %3, align 8
  %3506 = inttoptr i64 %3504 to i64*
  %3507 = load i64, i64* %3506, align 8
  store i64 %3507, i64* %RDI.i3611.pre-phi, align 8
  %3508 = add i64 %3503, -44
  %3509 = add i64 %3502, 14
  store i64 %3509, i64* %3, align 8
  %3510 = inttoptr i64 %3508 to i32*
  %3511 = load i32, i32* %3510, align 4
  %3512 = zext i32 %3511 to i64
  store i64 %3512, i64* %RSI.i3626, align 8
  %3513 = add i64 %3502, 33412
  %3514 = add i64 %3502, 19
  %3515 = load i64, i64* %6, align 8
  %3516 = add i64 %3515, -8
  %3517 = inttoptr i64 %3516 to i64*
  store i64 %3514, i64* %3517, align 8
  store i64 %3516, i64* %6, align 8
  store i64 %3513, i64* %3, align 8
  %call2_401efa = tail call %struct.Memory* @sub_40a170._Z13test_constantIj33custom_multiple_constant_multiplyIjEEvPT_iPKc(%struct.State* nonnull %0, i64 %3513, %struct.Memory* %call2_401ee7)
  %3518 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x41956e_type* @G__0x41956e to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41956e_type* @G__0x41956e to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %3519 = load i64, i64* %RBP.i, align 8
  %3520 = add i64 %3519, -96
  %3521 = add i64 %3518, 11
  store i64 %3521, i64* %3, align 8
  %3522 = inttoptr i64 %3520 to i64*
  %3523 = load i64, i64* %3522, align 8
  store i64 %3523, i64* %RDI.i3611.pre-phi, align 8
  %3524 = add i64 %3519, -44
  %3525 = add i64 %3518, 14
  store i64 %3525, i64* %3, align 8
  %3526 = inttoptr i64 %3524 to i32*
  %3527 = load i32, i32* %3526, align 4
  %3528 = zext i32 %3527 to i64
  store i64 %3528, i64* %RSI.i3626, align 8
  %3529 = add i64 %3518, 33553
  %3530 = add i64 %3518, 19
  %3531 = load i64, i64* %6, align 8
  %3532 = add i64 %3531, -8
  %3533 = inttoptr i64 %3532 to i64*
  store i64 %3530, i64* %3533, align 8
  store i64 %3532, i64* %6, align 8
  store i64 %3529, i64* %3, align 8
  %call2_401f0d = tail call %struct.Memory* @sub_40a210._Z13test_constantIj34custom_multiple_constant_multiply2IjEEvPT_iPKc(%struct.State* nonnull %0, i64 %3529, %struct.Memory* %call2_401efa)
  %3534 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x419593_type* @G__0x419593 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419593_type* @G__0x419593 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %3535 = load i64, i64* %RBP.i, align 8
  %3536 = add i64 %3535, -96
  %3537 = add i64 %3534, 11
  store i64 %3537, i64* %3, align 8
  %3538 = inttoptr i64 %3536 to i64*
  %3539 = load i64, i64* %3538, align 8
  store i64 %3539, i64* %RDI.i3611.pre-phi, align 8
  %3540 = add i64 %3535, -44
  %3541 = add i64 %3534, 14
  store i64 %3541, i64* %3, align 8
  %3542 = inttoptr i64 %3540 to i32*
  %3543 = load i32, i32* %3542, align 4
  %3544 = zext i32 %3543 to i64
  store i64 %3544, i64* %RSI.i3626, align 8
  %3545 = add i64 %3534, 33694
  %3546 = add i64 %3534, 19
  %3547 = load i64, i64* %6, align 8
  %3548 = add i64 %3547, -8
  %3549 = inttoptr i64 %3548 to i64*
  store i64 %3546, i64* %3549, align 8
  store i64 %3548, i64* %6, align 8
  store i64 %3545, i64* %3, align 8
  %call2_401f20 = tail call %struct.Memory* @sub_40a2b0._Z13test_constantIj22custom_constant_divideIjEEvPT_iPKc(%struct.State* nonnull %0, i64 %3545, %struct.Memory* %call2_401f0d)
  %3550 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x4195ac_type* @G__0x4195ac to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4195ac_type* @G__0x4195ac to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %3551 = load i64, i64* %RBP.i, align 8
  %3552 = add i64 %3551, -96
  %3553 = add i64 %3550, 11
  store i64 %3553, i64* %3, align 8
  %3554 = inttoptr i64 %3552 to i64*
  %3555 = load i64, i64* %3554, align 8
  store i64 %3555, i64* %RDI.i3611.pre-phi, align 8
  %3556 = add i64 %3551, -44
  %3557 = add i64 %3550, 14
  store i64 %3557, i64* %3, align 8
  %3558 = inttoptr i64 %3556 to i32*
  %3559 = load i32, i32* %3558, align 4
  %3560 = zext i32 %3559 to i64
  store i64 %3560, i64* %RSI.i3626, align 8
  %3561 = add i64 %3550, 33835
  %3562 = add i64 %3550, 19
  %3563 = load i64, i64* %6, align 8
  %3564 = add i64 %3563, -8
  %3565 = inttoptr i64 %3564 to i64*
  store i64 %3562, i64* %3565, align 8
  store i64 %3564, i64* %6, align 8
  store i64 %3561, i64* %3, align 8
  %call2_401f33 = tail call %struct.Memory* @sub_40a350._Z13test_constantIj31custom_multiple_constant_divideIjEEvPT_iPKc(%struct.State* nonnull %0, i64 %3561, %struct.Memory* %call2_401f20)
  %3566 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x4195cf_type* @G__0x4195cf to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4195cf_type* @G__0x4195cf to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %3567 = load i64, i64* %RBP.i, align 8
  %3568 = add i64 %3567, -96
  %3569 = add i64 %3566, 11
  store i64 %3569, i64* %3, align 8
  %3570 = inttoptr i64 %3568 to i64*
  %3571 = load i64, i64* %3570, align 8
  store i64 %3571, i64* %RDI.i3611.pre-phi, align 8
  %3572 = add i64 %3567, -44
  %3573 = add i64 %3566, 14
  store i64 %3573, i64* %3, align 8
  %3574 = inttoptr i64 %3572 to i32*
  %3575 = load i32, i32* %3574, align 4
  %3576 = zext i32 %3575 to i64
  store i64 %3576, i64* %RSI.i3626, align 8
  %3577 = add i64 %3566, 33976
  %3578 = add i64 %3566, 19
  %3579 = load i64, i64* %6, align 8
  %3580 = add i64 %3579, -8
  %3581 = inttoptr i64 %3580 to i64*
  store i64 %3578, i64* %3581, align 8
  store i64 %3580, i64* %6, align 8
  store i64 %3577, i64* %3, align 8
  %call2_401f46 = tail call %struct.Memory* @sub_40a3f0._Z13test_constantIj32custom_multiple_constant_divide2IjEEvPT_iPKc(%struct.State* nonnull %0, i64 %3577, %struct.Memory* %call2_401f33)
  %3582 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x4195f2_type* @G__0x4195f2 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4195f2_type* @G__0x4195f2 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %3583 = load i64, i64* %RBP.i, align 8
  %3584 = add i64 %3583, -96
  %3585 = add i64 %3582, 11
  store i64 %3585, i64* %3, align 8
  %3586 = inttoptr i64 %3584 to i64*
  %3587 = load i64, i64* %3586, align 8
  store i64 %3587, i64* %RDI.i3611.pre-phi, align 8
  %3588 = add i64 %3583, -44
  %3589 = add i64 %3582, 14
  store i64 %3589, i64* %3, align 8
  %3590 = inttoptr i64 %3588 to i32*
  %3591 = load i32, i32* %3590, align 4
  %3592 = zext i32 %3591 to i64
  store i64 %3592, i64* %RSI.i3626, align 8
  %3593 = add i64 %3582, 34117
  %3594 = add i64 %3582, 19
  %3595 = load i64, i64* %6, align 8
  %3596 = add i64 %3595, -8
  %3597 = inttoptr i64 %3596 to i64*
  store i64 %3594, i64* %3597, align 8
  store i64 %3596, i64* %6, align 8
  store i64 %3593, i64* %3, align 8
  %call2_401f59 = tail call %struct.Memory* @sub_40a490._Z13test_constantIj30custom_multiple_constant_mixedIjEEvPT_iPKc(%struct.State* nonnull %0, i64 %3593, %struct.Memory* %call2_401f46)
  %3598 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x419613_type* @G__0x419613 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419613_type* @G__0x419613 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %3599 = load i64, i64* %RBP.i, align 8
  %3600 = add i64 %3599, -96
  %3601 = add i64 %3598, 11
  store i64 %3601, i64* %3, align 8
  %3602 = inttoptr i64 %3600 to i64*
  %3603 = load i64, i64* %3602, align 8
  store i64 %3603, i64* %RDI.i3611.pre-phi, align 8
  %3604 = add i64 %3599, -44
  %3605 = add i64 %3598, 14
  store i64 %3605, i64* %3, align 8
  %3606 = inttoptr i64 %3604 to i32*
  %3607 = load i32, i32* %3606, align 4
  %3608 = zext i32 %3607 to i64
  store i64 %3608, i64* %RSI.i3626, align 8
  %3609 = add i64 %3598, 34258
  %3610 = add i64 %3598, 19
  %3611 = load i64, i64* %6, align 8
  %3612 = add i64 %3611, -8
  %3613 = inttoptr i64 %3612 to i64*
  store i64 %3610, i64* %3613, align 8
  store i64 %3612, i64* %6, align 8
  store i64 %3609, i64* %3, align 8
  %call2_401f6c = tail call %struct.Memory* @sub_40a530._Z13test_constantIj19custom_constant_andIjEEvPT_iPKc(%struct.State* nonnull %0, i64 %3609, %struct.Memory* %call2_401f59)
  %3614 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x419629_type* @G__0x419629 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419629_type* @G__0x419629 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %3615 = load i64, i64* %RBP.i, align 8
  %3616 = add i64 %3615, -96
  %3617 = add i64 %3614, 11
  store i64 %3617, i64* %3, align 8
  %3618 = inttoptr i64 %3616 to i64*
  %3619 = load i64, i64* %3618, align 8
  store i64 %3619, i64* %RDI.i3611.pre-phi, align 8
  %3620 = add i64 %3615, -44
  %3621 = add i64 %3614, 14
  store i64 %3621, i64* %3, align 8
  %3622 = inttoptr i64 %3620 to i32*
  %3623 = load i32, i32* %3622, align 4
  %3624 = zext i32 %3623 to i64
  store i64 %3624, i64* %RSI.i3626, align 8
  %3625 = add i64 %3614, 34399
  %3626 = add i64 %3614, 19
  %3627 = load i64, i64* %6, align 8
  %3628 = add i64 %3627, -8
  %3629 = inttoptr i64 %3628 to i64*
  store i64 %3626, i64* %3629, align 8
  store i64 %3628, i64* %6, align 8
  store i64 %3625, i64* %3, align 8
  %call2_401f7f = tail call %struct.Memory* @sub_40a5d0._Z13test_constantIj28custom_multiple_constant_andIjEEvPT_iPKc(%struct.State* nonnull %0, i64 %3625, %struct.Memory* %call2_401f6c)
  %3630 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x419648_type* @G__0x419648 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419648_type* @G__0x419648 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %3631 = load i64, i64* %RBP.i, align 8
  %3632 = add i64 %3631, -96
  %3633 = add i64 %3630, 11
  store i64 %3633, i64* %3, align 8
  %3634 = inttoptr i64 %3632 to i64*
  %3635 = load i64, i64* %3634, align 8
  store i64 %3635, i64* %RDI.i3611.pre-phi, align 8
  %3636 = add i64 %3631, -44
  %3637 = add i64 %3630, 14
  store i64 %3637, i64* %3, align 8
  %3638 = inttoptr i64 %3636 to i32*
  %3639 = load i32, i32* %3638, align 4
  %3640 = zext i32 %3639 to i64
  store i64 %3640, i64* %RSI.i3626, align 8
  %3641 = add i64 %3630, 34540
  %3642 = add i64 %3630, 19
  %3643 = load i64, i64* %6, align 8
  %3644 = add i64 %3643, -8
  %3645 = inttoptr i64 %3644 to i64*
  store i64 %3642, i64* %3645, align 8
  store i64 %3644, i64* %6, align 8
  store i64 %3641, i64* %3, align 8
  %call2_401f92 = tail call %struct.Memory* @sub_40a670._Z13test_constantIj18custom_constant_orIjEEvPT_iPKc(%struct.State* nonnull %0, i64 %3641, %struct.Memory* %call2_401f7f)
  %3646 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x41965d_type* @G__0x41965d to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41965d_type* @G__0x41965d to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %3647 = load i64, i64* %RBP.i, align 8
  %3648 = add i64 %3647, -96
  %3649 = add i64 %3646, 11
  store i64 %3649, i64* %3, align 8
  %3650 = inttoptr i64 %3648 to i64*
  %3651 = load i64, i64* %3650, align 8
  store i64 %3651, i64* %RDI.i3611.pre-phi, align 8
  %3652 = add i64 %3647, -44
  %3653 = add i64 %3646, 14
  store i64 %3653, i64* %3, align 8
  %3654 = inttoptr i64 %3652 to i32*
  %3655 = load i32, i32* %3654, align 4
  %3656 = zext i32 %3655 to i64
  store i64 %3656, i64* %RSI.i3626, align 8
  %3657 = add i64 %3646, 34681
  %3658 = add i64 %3646, 19
  %3659 = load i64, i64* %6, align 8
  %3660 = add i64 %3659, -8
  %3661 = inttoptr i64 %3660 to i64*
  store i64 %3658, i64* %3661, align 8
  store i64 %3660, i64* %6, align 8
  store i64 %3657, i64* %3, align 8
  %call2_401fa5 = tail call %struct.Memory* @sub_40a710._Z13test_constantIj27custom_multiple_constant_orIjEEvPT_iPKc(%struct.State* nonnull %0, i64 %3657, %struct.Memory* %call2_401f92)
  %3662 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x41967b_type* @G__0x41967b to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41967b_type* @G__0x41967b to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %3663 = load i64, i64* %RBP.i, align 8
  %3664 = add i64 %3663, -96
  %3665 = add i64 %3662, 11
  store i64 %3665, i64* %3, align 8
  %3666 = inttoptr i64 %3664 to i64*
  %3667 = load i64, i64* %3666, align 8
  store i64 %3667, i64* %RDI.i3611.pre-phi, align 8
  %3668 = add i64 %3663, -44
  %3669 = add i64 %3662, 14
  store i64 %3669, i64* %3, align 8
  %3670 = inttoptr i64 %3668 to i32*
  %3671 = load i32, i32* %3670, align 4
  %3672 = zext i32 %3671 to i64
  store i64 %3672, i64* %RSI.i3626, align 8
  %3673 = add i64 %3662, 34822
  %3674 = add i64 %3662, 19
  %3675 = load i64, i64* %6, align 8
  %3676 = add i64 %3675, -8
  %3677 = inttoptr i64 %3676 to i64*
  store i64 %3674, i64* %3677, align 8
  store i64 %3676, i64* %6, align 8
  store i64 %3673, i64* %3, align 8
  %call2_401fb8 = tail call %struct.Memory* @sub_40a7b0._Z13test_constantIj19custom_constant_xorIjEEvPT_iPKc(%struct.State* nonnull %0, i64 %3673, %struct.Memory* %call2_401fa5)
  %3678 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x419691_type* @G__0x419691 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419691_type* @G__0x419691 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %3679 = load i64, i64* %RBP.i, align 8
  %3680 = add i64 %3679, -96
  %3681 = add i64 %3678, 11
  store i64 %3681, i64* %3, align 8
  %3682 = inttoptr i64 %3680 to i64*
  %3683 = load i64, i64* %3682, align 8
  store i64 %3683, i64* %RDI.i3611.pre-phi, align 8
  %3684 = add i64 %3679, -44
  %3685 = add i64 %3678, 14
  store i64 %3685, i64* %3, align 8
  %3686 = inttoptr i64 %3684 to i32*
  %3687 = load i32, i32* %3686, align 4
  %3688 = zext i32 %3687 to i64
  store i64 %3688, i64* %RSI.i3626, align 8
  %3689 = add i64 %3678, 34963
  %3690 = add i64 %3678, 19
  %3691 = load i64, i64* %6, align 8
  %3692 = add i64 %3691, -8
  %3693 = inttoptr i64 %3692 to i64*
  store i64 %3690, i64* %3693, align 8
  store i64 %3692, i64* %6, align 8
  store i64 %3689, i64* %3, align 8
  %call2_401fcb = tail call %struct.Memory* @sub_40a850._Z13test_constantIj28custom_multiple_constant_xorIjEEvPT_iPKc(%struct.State* nonnull %0, i64 %3689, %struct.Memory* %call2_401fb8)
  %3694 = load i64, i64* %3, align 8
  %3695 = add i64 %3694, ptrtoint (%G_0x2200b0__rip__type* @G_0x2200b0__rip_ to i64)
  %3696 = add i64 %3694, 8
  store i64 %3696, i64* %3, align 8
  %3697 = inttoptr i64 %3695 to i64*
  %3698 = load i64, i64* %3697, align 8
  store i64 %3698, i64* %2519, align 1
  store double 0.000000e+00, double* %2521, align 1
  %.cast = bitcast i64 %3698 to double
  %3699 = tail call double @llvm.trunc.f64(double %.cast)
  %3700 = tail call double @llvm.fabs.f64(double %3699)
  %3701 = fcmp ogt double %3700, 0x43E0000000000000
  %3702 = fptosi double %3699 to i64
  %3703 = select i1 %3701, i64 -9223372036854775808, i64 %3702
  store i64 %3703, i64* %RDX.i3615, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x6491d0_type* @G__0x6491d0 to i64), i64 4294967295) to i32) to i64), i64* %RAX.i3622, align 8
  store i64 and (i64 ptrtoint (%G__0x658bd0_type* @G__0x658bd0 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x6491d0_type* @G__0x6491d0 to i64), i64 4294967295) to i32) to i64), i64* %RDI.i3611.pre-phi, align 8
  %3704 = load i64, i64* %RBP.i, align 8
  %3705 = add i64 %3704, -104
  %3706 = add i64 %3694, 32
  store i64 %3706, i64* %3, align 8
  %3707 = inttoptr i64 %3705 to i64*
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x6491d0_type* @G__0x6491d0 to i64), i64 4294967295) to i32) to i64), i64* %3707, align 8
  %3708 = load i64, i64* %3, align 8
  %3709 = add i64 %3708, 35072
  %3710 = add i64 %3708, 5
  %3711 = load i64, i64* %6, align 8
  %3712 = add i64 %3711, -8
  %3713 = inttoptr i64 %3712 to i64*
  store i64 %3710, i64* %3713, align 8
  store i64 %3712, i64* %6, align 8
  store i64 %3709, i64* %3, align 8
  %call2_401ff0 = tail call %struct.Memory* @sub_40a8f0._Z4fillIPllEvT_S1_T0_(%struct.State* nonnull %0, i64 %3709, %struct.Memory* %call2_401fcb)
  %3714 = load i64, i64* %3, align 8
  %3715 = add i64 %3714, ptrtoint (%G_0x220084__rip__type* @G_0x220084__rip_ to i64)
  %3716 = add i64 %3714, 7
  store i64 %3716, i64* %3, align 8
  %3717 = inttoptr i64 %3715 to i32*
  %3718 = load i32, i32* %3717, align 4
  %3719 = add i64 %3714, add (i64 ptrtoint (%G_0x2200bd__rip__type* @G_0x2200bd__rip_ to i64), i64 7)
  %3720 = add i64 %3714, 14
  store i64 %3720, i64* %3, align 8
  %3721 = inttoptr i64 %3719 to i32*
  store i32 %3718, i32* %3721, align 4
  %3722 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x4196b1_type* @G__0x4196b1 to i64), i64 4294967295), i64* %206, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4196b1_type* @G__0x4196b1 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %3723 = load i64, i64* %RBP.i, align 8
  %3724 = add i64 %3723, -104
  %3725 = add i64 %3722, 13
  store i64 %3725, i64* %3, align 8
  %3726 = inttoptr i64 %3724 to i64*
  %3727 = load i64, i64* %3726, align 8
  store i64 %3727, i64* %RDI.i3611.pre-phi, align 8
  %3728 = add i64 %3723, -44
  %3729 = add i64 %3722, 16
  store i64 %3729, i64* %3, align 8
  %3730 = inttoptr i64 %3728 to i32*
  %3731 = load i32, i32* %3730, align 4
  %3732 = zext i32 %3731 to i64
  store i64 %3732, i64* %RSI.i3626, align 8
  %3733 = add i64 %3722, 35117
  %3734 = add i64 %3722, 21
  %3735 = load i64, i64* %6, align 8
  %3736 = add i64 %3735, -8
  %3737 = inttoptr i64 %3736 to i64*
  store i64 %3734, i64* %3737, align 8
  store i64 %3736, i64* %6, align 8
  store i64 %3733, i64* %3, align 8
  %call2_402013 = tail call %struct.Memory* @sub_40a930._Z13test_constantIl10custom_twoIlEEvPT_iPKc(%struct.State* nonnull %0, i64 %3733, %struct.Memory* %call2_401ff0)
  %3738 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x4196c3_type* @G__0x4196c3 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4196c3_type* @G__0x4196c3 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %3739 = load i64, i64* %RBP.i, align 8
  %3740 = add i64 %3739, -104
  %3741 = add i64 %3738, 11
  store i64 %3741, i64* %3, align 8
  %3742 = inttoptr i64 %3740 to i64*
  %3743 = load i64, i64* %3742, align 8
  store i64 %3743, i64* %RDI.i3611.pre-phi, align 8
  %3744 = add i64 %3739, -44
  %3745 = add i64 %3738, 14
  store i64 %3745, i64* %3, align 8
  %3746 = inttoptr i64 %3744 to i32*
  %3747 = load i32, i32* %3746, align 4
  %3748 = zext i32 %3747 to i64
  store i64 %3748, i64* %RSI.i3626, align 8
  %3749 = add i64 %3738, 35256
  %3750 = add i64 %3738, 19
  %3751 = load i64, i64* %6, align 8
  %3752 = add i64 %3751, -8
  %3753 = inttoptr i64 %3752 to i64*
  store i64 %3750, i64* %3753, align 8
  store i64 %3752, i64* %6, align 8
  store i64 %3749, i64* %3, align 8
  %call2_402026 = tail call %struct.Memory* @sub_40a9d0._Z13test_constantIl20custom_add_constantsIlEEvPT_iPKc(%struct.State* nonnull %0, i64 %3749, %struct.Memory* %call2_402013)
  %3754 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x4196da_type* @G__0x4196da to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4196da_type* @G__0x4196da to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %3755 = load i64, i64* %RBP.i, align 8
  %3756 = add i64 %3755, -104
  %3757 = add i64 %3754, 11
  store i64 %3757, i64* %3, align 8
  %3758 = inttoptr i64 %3756 to i64*
  %3759 = load i64, i64* %3758, align 8
  store i64 %3759, i64* %RDI.i3611.pre-phi, align 8
  %3760 = add i64 %3755, -44
  %3761 = add i64 %3754, 14
  store i64 %3761, i64* %3, align 8
  %3762 = inttoptr i64 %3760 to i32*
  %3763 = load i32, i32* %3762, align 4
  %3764 = zext i32 %3763 to i64
  store i64 %3764, i64* %RSI.i3626, align 8
  %3765 = add i64 %3754, 35397
  %3766 = add i64 %3754, 19
  %3767 = load i64, i64* %6, align 8
  %3768 = add i64 %3767, -8
  %3769 = inttoptr i64 %3768 to i64*
  store i64 %3766, i64* %3769, align 8
  store i64 %3768, i64* %6, align 8
  store i64 %3765, i64* %3, align 8
  %call2_402039 = tail call %struct.Memory* @sub_40aa70._Z13test_constantIl20custom_sub_constantsIlEEvPT_iPKc(%struct.State* nonnull %0, i64 %3765, %struct.Memory* %call2_402026)
  %3770 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x4196f6_type* @G__0x4196f6 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4196f6_type* @G__0x4196f6 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %3771 = load i64, i64* %RBP.i, align 8
  %3772 = add i64 %3771, -104
  %3773 = add i64 %3770, 11
  store i64 %3773, i64* %3, align 8
  %3774 = inttoptr i64 %3772 to i64*
  %3775 = load i64, i64* %3774, align 8
  store i64 %3775, i64* %RDI.i3611.pre-phi, align 8
  %3776 = add i64 %3771, -44
  %3777 = add i64 %3770, 14
  store i64 %3777, i64* %3, align 8
  %3778 = inttoptr i64 %3776 to i32*
  %3779 = load i32, i32* %3778, align 4
  %3780 = zext i32 %3779 to i64
  store i64 %3780, i64* %RSI.i3626, align 8
  %3781 = add i64 %3770, 35538
  %3782 = add i64 %3770, 19
  %3783 = load i64, i64* %6, align 8
  %3784 = add i64 %3783, -8
  %3785 = inttoptr i64 %3784 to i64*
  store i64 %3782, i64* %3785, align 8
  store i64 %3784, i64* %6, align 8
  store i64 %3781, i64* %3, align 8
  %call2_40204c = tail call %struct.Memory* @sub_40ab10._Z13test_constantIl25custom_multiply_constantsIlEEvPT_iPKc(%struct.State* nonnull %0, i64 %3781, %struct.Memory* %call2_402039)
  %3786 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x419712_type* @G__0x419712 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419712_type* @G__0x419712 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %3787 = load i64, i64* %RBP.i, align 8
  %3788 = add i64 %3787, -104
  %3789 = add i64 %3786, 11
  store i64 %3789, i64* %3, align 8
  %3790 = inttoptr i64 %3788 to i64*
  %3791 = load i64, i64* %3790, align 8
  store i64 %3791, i64* %RDI.i3611.pre-phi, align 8
  %3792 = add i64 %3787, -44
  %3793 = add i64 %3786, 14
  store i64 %3793, i64* %3, align 8
  %3794 = inttoptr i64 %3792 to i32*
  %3795 = load i32, i32* %3794, align 4
  %3796 = zext i32 %3795 to i64
  store i64 %3796, i64* %RSI.i3626, align 8
  %3797 = add i64 %3786, 35679
  %3798 = add i64 %3786, 19
  %3799 = load i64, i64* %6, align 8
  %3800 = add i64 %3799, -8
  %3801 = inttoptr i64 %3800 to i64*
  store i64 %3798, i64* %3801, align 8
  store i64 %3800, i64* %6, align 8
  store i64 %3797, i64* %3, align 8
  %call2_40205f = tail call %struct.Memory* @sub_40abb0._Z13test_constantIl23custom_divide_constantsIlEEvPT_iPKc(%struct.State* nonnull %0, i64 %3797, %struct.Memory* %call2_40204c)
  %3802 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x41972c_type* @G__0x41972c to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41972c_type* @G__0x41972c to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %3803 = load i64, i64* %RBP.i, align 8
  %3804 = add i64 %3803, -104
  %3805 = add i64 %3802, 11
  store i64 %3805, i64* %3, align 8
  %3806 = inttoptr i64 %3804 to i64*
  %3807 = load i64, i64* %3806, align 8
  store i64 %3807, i64* %RDI.i3611.pre-phi, align 8
  %3808 = add i64 %3803, -44
  %3809 = add i64 %3802, 14
  store i64 %3809, i64* %3, align 8
  %3810 = inttoptr i64 %3808 to i32*
  %3811 = load i32, i32* %3810, align 4
  %3812 = zext i32 %3811 to i64
  store i64 %3812, i64* %RSI.i3626, align 8
  %3813 = add i64 %3802, 35820
  %3814 = add i64 %3802, 19
  %3815 = load i64, i64* %6, align 8
  %3816 = add i64 %3815, -8
  %3817 = inttoptr i64 %3816 to i64*
  store i64 %3814, i64* %3817, align 8
  store i64 %3816, i64* %6, align 8
  store i64 %3813, i64* %3, align 8
  %call2_402072 = tail call %struct.Memory* @sub_40ac50._Z13test_constantIl20custom_mod_constantsIlEEvPT_iPKc(%struct.State* nonnull %0, i64 %3813, %struct.Memory* %call2_40205f)
  %3818 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x419743_type* @G__0x419743 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419743_type* @G__0x419743 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %3819 = load i64, i64* %RBP.i, align 8
  %3820 = add i64 %3819, -104
  %3821 = add i64 %3818, 11
  store i64 %3821, i64* %3, align 8
  %3822 = inttoptr i64 %3820 to i64*
  %3823 = load i64, i64* %3822, align 8
  store i64 %3823, i64* %RDI.i3611.pre-phi, align 8
  %3824 = add i64 %3819, -44
  %3825 = add i64 %3818, 14
  store i64 %3825, i64* %3, align 8
  %3826 = inttoptr i64 %3824 to i32*
  %3827 = load i32, i32* %3826, align 4
  %3828 = zext i32 %3827 to i64
  store i64 %3828, i64* %RSI.i3626, align 8
  %3829 = add i64 %3818, 35961
  %3830 = add i64 %3818, 19
  %3831 = load i64, i64* %6, align 8
  %3832 = add i64 %3831, -8
  %3833 = inttoptr i64 %3832 to i64*
  store i64 %3830, i64* %3833, align 8
  store i64 %3832, i64* %6, align 8
  store i64 %3829, i64* %3, align 8
  %call2_402085 = tail call %struct.Memory* @sub_40acf0._Z13test_constantIl22custom_equal_constantsIlEEvPT_iPKc(%struct.State* nonnull %0, i64 %3829, %struct.Memory* %call2_402072)
  %3834 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x41975c_type* @G__0x41975c to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41975c_type* @G__0x41975c to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %3835 = load i64, i64* %RBP.i, align 8
  %3836 = add i64 %3835, -104
  %3837 = add i64 %3834, 11
  store i64 %3837, i64* %3, align 8
  %3838 = inttoptr i64 %3836 to i64*
  %3839 = load i64, i64* %3838, align 8
  store i64 %3839, i64* %RDI.i3611.pre-phi, align 8
  %3840 = add i64 %3835, -44
  %3841 = add i64 %3834, 14
  store i64 %3841, i64* %3, align 8
  %3842 = inttoptr i64 %3840 to i32*
  %3843 = load i32, i32* %3842, align 4
  %3844 = zext i32 %3843 to i64
  store i64 %3844, i64* %RSI.i3626, align 8
  %3845 = add i64 %3834, 36102
  %3846 = add i64 %3834, 19
  %3847 = load i64, i64* %6, align 8
  %3848 = add i64 %3847, -8
  %3849 = inttoptr i64 %3848 to i64*
  store i64 %3846, i64* %3849, align 8
  store i64 %3848, i64* %6, align 8
  store i64 %3845, i64* %3, align 8
  %call2_402098 = tail call %struct.Memory* @sub_40ad90._Z13test_constantIl25custom_notequal_constantsIlEEvPT_iPKc(%struct.State* nonnull %0, i64 %3845, %struct.Memory* %call2_402085)
  %3850 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x419778_type* @G__0x419778 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419778_type* @G__0x419778 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %3851 = load i64, i64* %RBP.i, align 8
  %3852 = add i64 %3851, -104
  %3853 = add i64 %3850, 11
  store i64 %3853, i64* %3, align 8
  %3854 = inttoptr i64 %3852 to i64*
  %3855 = load i64, i64* %3854, align 8
  store i64 %3855, i64* %RDI.i3611.pre-phi, align 8
  %3856 = add i64 %3851, -44
  %3857 = add i64 %3850, 14
  store i64 %3857, i64* %3, align 8
  %3858 = inttoptr i64 %3856 to i32*
  %3859 = load i32, i32* %3858, align 4
  %3860 = zext i32 %3859 to i64
  store i64 %3860, i64* %RSI.i3626, align 8
  %3861 = add i64 %3850, 36243
  %3862 = add i64 %3850, 19
  %3863 = load i64, i64* %6, align 8
  %3864 = add i64 %3863, -8
  %3865 = inttoptr i64 %3864 to i64*
  store i64 %3862, i64* %3865, align 8
  store i64 %3864, i64* %6, align 8
  store i64 %3861, i64* %3, align 8
  %call2_4020ab = tail call %struct.Memory* @sub_40ae30._Z13test_constantIl28custom_greaterthan_constantsIlEEvPT_iPKc(%struct.State* nonnull %0, i64 %3861, %struct.Memory* %call2_402098)
  %3866 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x419798_type* @G__0x419798 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419798_type* @G__0x419798 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %3867 = load i64, i64* %RBP.i, align 8
  %3868 = add i64 %3867, -104
  %3869 = add i64 %3866, 11
  store i64 %3869, i64* %3, align 8
  %3870 = inttoptr i64 %3868 to i64*
  %3871 = load i64, i64* %3870, align 8
  store i64 %3871, i64* %RDI.i3611.pre-phi, align 8
  %3872 = add i64 %3867, -44
  %3873 = add i64 %3866, 14
  store i64 %3873, i64* %3, align 8
  %3874 = inttoptr i64 %3872 to i32*
  %3875 = load i32, i32* %3874, align 4
  %3876 = zext i32 %3875 to i64
  store i64 %3876, i64* %RSI.i3626, align 8
  %3877 = add i64 %3866, 36384
  %3878 = add i64 %3866, 19
  %3879 = load i64, i64* %6, align 8
  %3880 = add i64 %3879, -8
  %3881 = inttoptr i64 %3880 to i64*
  store i64 %3878, i64* %3881, align 8
  store i64 %3880, i64* %6, align 8
  store i64 %3877, i64* %3, align 8
  %call2_4020be = tail call %struct.Memory* @sub_40aed0._Z13test_constantIl25custom_lessthan_constantsIlEEvPT_iPKc(%struct.State* nonnull %0, i64 %3877, %struct.Memory* %call2_4020ab)
  %3882 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x4197b5_type* @G__0x4197b5 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4197b5_type* @G__0x4197b5 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %3883 = load i64, i64* %RBP.i, align 8
  %3884 = add i64 %3883, -104
  %3885 = add i64 %3882, 11
  store i64 %3885, i64* %3, align 8
  %3886 = inttoptr i64 %3884 to i64*
  %3887 = load i64, i64* %3886, align 8
  store i64 %3887, i64* %RDI.i3611.pre-phi, align 8
  %3888 = add i64 %3883, -44
  %3889 = add i64 %3882, 14
  store i64 %3889, i64* %3, align 8
  %3890 = inttoptr i64 %3888 to i32*
  %3891 = load i32, i32* %3890, align 4
  %3892 = zext i32 %3891 to i64
  store i64 %3892, i64* %RSI.i3626, align 8
  %3893 = add i64 %3882, 36525
  %3894 = add i64 %3882, 19
  %3895 = load i64, i64* %6, align 8
  %3896 = add i64 %3895, -8
  %3897 = inttoptr i64 %3896 to i64*
  store i64 %3894, i64* %3897, align 8
  store i64 %3896, i64* %6, align 8
  store i64 %3893, i64* %3, align 8
  %call2_4020d1 = tail call %struct.Memory* @sub_40af70._Z13test_constantIl33custom_greaterthanequal_constantsIlEEvPT_iPKc(%struct.State* nonnull %0, i64 %3893, %struct.Memory* %call2_4020be)
  %3898 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x4197db_type* @G__0x4197db to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4197db_type* @G__0x4197db to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %3899 = load i64, i64* %RBP.i, align 8
  %3900 = add i64 %3899, -104
  %3901 = add i64 %3898, 11
  store i64 %3901, i64* %3, align 8
  %3902 = inttoptr i64 %3900 to i64*
  %3903 = load i64, i64* %3902, align 8
  store i64 %3903, i64* %RDI.i3611.pre-phi, align 8
  %3904 = add i64 %3899, -44
  %3905 = add i64 %3898, 14
  store i64 %3905, i64* %3, align 8
  %3906 = inttoptr i64 %3904 to i32*
  %3907 = load i32, i32* %3906, align 4
  %3908 = zext i32 %3907 to i64
  store i64 %3908, i64* %RSI.i3626, align 8
  %3909 = add i64 %3898, 36666
  %3910 = add i64 %3898, 19
  %3911 = load i64, i64* %6, align 8
  %3912 = add i64 %3911, -8
  %3913 = inttoptr i64 %3912 to i64*
  store i64 %3910, i64* %3913, align 8
  store i64 %3912, i64* %6, align 8
  store i64 %3909, i64* %3, align 8
  %call2_4020e4 = tail call %struct.Memory* @sub_40b010._Z13test_constantIl30custom_lessthanequal_constantsIlEEvPT_iPKc(%struct.State* nonnull %0, i64 %3909, %struct.Memory* %call2_4020d1)
  %3914 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x4197fe_type* @G__0x4197fe to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4197fe_type* @G__0x4197fe to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %3915 = load i64, i64* %RBP.i, align 8
  %3916 = add i64 %3915, -104
  %3917 = add i64 %3914, 11
  store i64 %3917, i64* %3, align 8
  %3918 = inttoptr i64 %3916 to i64*
  %3919 = load i64, i64* %3918, align 8
  store i64 %3919, i64* %RDI.i3611.pre-phi, align 8
  %3920 = add i64 %3915, -44
  %3921 = add i64 %3914, 14
  store i64 %3921, i64* %3, align 8
  %3922 = inttoptr i64 %3920 to i32*
  %3923 = load i32, i32* %3922, align 4
  %3924 = zext i32 %3923 to i64
  store i64 %3924, i64* %RSI.i3626, align 8
  %3925 = add i64 %3914, 36807
  %3926 = add i64 %3914, 19
  %3927 = load i64, i64* %6, align 8
  %3928 = add i64 %3927, -8
  %3929 = inttoptr i64 %3928 to i64*
  store i64 %3926, i64* %3929, align 8
  store i64 %3928, i64* %6, align 8
  store i64 %3925, i64* %3, align 8
  %call2_4020f7 = tail call %struct.Memory* @sub_40b0b0._Z13test_constantIl20custom_and_constantsIlEEvPT_iPKc(%struct.State* nonnull %0, i64 %3925, %struct.Memory* %call2_4020e4)
  %3930 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x419815_type* @G__0x419815 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419815_type* @G__0x419815 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %3931 = load i64, i64* %RBP.i, align 8
  %3932 = add i64 %3931, -104
  %3933 = add i64 %3930, 11
  store i64 %3933, i64* %3, align 8
  %3934 = inttoptr i64 %3932 to i64*
  %3935 = load i64, i64* %3934, align 8
  store i64 %3935, i64* %RDI.i3611.pre-phi, align 8
  %3936 = add i64 %3931, -44
  %3937 = add i64 %3930, 14
  store i64 %3937, i64* %3, align 8
  %3938 = inttoptr i64 %3936 to i32*
  %3939 = load i32, i32* %3938, align 4
  %3940 = zext i32 %3939 to i64
  store i64 %3940, i64* %RSI.i3626, align 8
  %3941 = add i64 %3930, 36948
  %3942 = add i64 %3930, 19
  %3943 = load i64, i64* %6, align 8
  %3944 = add i64 %3943, -8
  %3945 = inttoptr i64 %3944 to i64*
  store i64 %3942, i64* %3945, align 8
  store i64 %3944, i64* %6, align 8
  store i64 %3941, i64* %3, align 8
  %call2_40210a = tail call %struct.Memory* @sub_40b150._Z13test_constantIl19custom_or_constantsIlEEvPT_iPKc(%struct.State* nonnull %0, i64 %3941, %struct.Memory* %call2_4020f7)
  %3946 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x41982b_type* @G__0x41982b to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41982b_type* @G__0x41982b to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %3947 = load i64, i64* %RBP.i, align 8
  %3948 = add i64 %3947, -104
  %3949 = add i64 %3946, 11
  store i64 %3949, i64* %3, align 8
  %3950 = inttoptr i64 %3948 to i64*
  %3951 = load i64, i64* %3950, align 8
  store i64 %3951, i64* %RDI.i3611.pre-phi, align 8
  %3952 = add i64 %3947, -44
  %3953 = add i64 %3946, 14
  store i64 %3953, i64* %3, align 8
  %3954 = inttoptr i64 %3952 to i32*
  %3955 = load i32, i32* %3954, align 4
  %3956 = zext i32 %3955 to i64
  store i64 %3956, i64* %RSI.i3626, align 8
  %3957 = add i64 %3946, 37089
  %3958 = add i64 %3946, 19
  %3959 = load i64, i64* %6, align 8
  %3960 = add i64 %3959, -8
  %3961 = inttoptr i64 %3960 to i64*
  store i64 %3958, i64* %3961, align 8
  store i64 %3960, i64* %6, align 8
  store i64 %3957, i64* %3, align 8
  %call2_40211d = tail call %struct.Memory* @sub_40b1f0._Z13test_constantIl20custom_xor_constantsIlEEvPT_iPKc(%struct.State* nonnull %0, i64 %3957, %struct.Memory* %call2_40210a)
  %3962 = load i64, i64* %3, align 8
  %3963 = add i64 %3962, ptrtoint (%G_0x21ff57__rip__type* @G_0x21ff57__rip_ to i64)
  %3964 = add i64 %3962, 7
  store i64 %3964, i64* %3, align 8
  %3965 = inttoptr i64 %3963 to i32*
  %3966 = load i32, i32* %3965, align 4
  %3967 = sext i32 %3966 to i64
  %3968 = mul nsw i64 %3967, 1717986919
  %3969 = lshr i64 %3968, 63
  store i64 %3969, i64* %RCX.i3620, align 8
  %3970 = trunc i64 %3969 to i32
  %3971 = ashr i64 %3968, 34
  store i64 %3971, i64* %RAX.i3622, align 8
  %3972 = trunc i64 %3971 to i32
  %3973 = add i32 %3970, %3972
  %3974 = zext i32 %3973 to i64
  store i64 %3974, i64* %206, align 8
  %3975 = icmp ult i32 %3973, %3972
  %3976 = icmp ult i32 %3973, %3970
  %3977 = or i1 %3975, %3976
  %3978 = zext i1 %3977 to i8
  store i8 %3978, i8* %14, align 1
  %3979 = and i32 %3973, 255
  %3980 = tail call i32 @llvm.ctpop.i32(i32 %3979)
  %3981 = trunc i32 %3980 to i8
  %3982 = and i8 %3981, 1
  %3983 = xor i8 %3982, 1
  store i8 %3983, i8* %21, align 1
  %3984 = trunc i64 %3971 to i32
  %3985 = xor i32 %3984, %3973
  %3986 = lshr i32 %3985, 4
  %3987 = trunc i32 %3986 to i8
  %3988 = and i8 %3987, 1
  store i8 %3988, i8* %27, align 1
  %3989 = icmp eq i32 %3973, 0
  %3990 = zext i1 %3989 to i8
  store i8 %3990, i8* %30, align 1
  %3991 = lshr i32 %3973, 31
  %3992 = trunc i32 %3991 to i8
  store i8 %3992, i8* %33, align 1
  %3993 = lshr i64 %3971, 31
  %3994 = trunc i64 %3993 to i32
  %3995 = and i32 %3994, 1
  %3996 = xor i32 %3991, %3995
  %3997 = add nuw nsw i32 %3996, %3991
  %3998 = icmp eq i32 %3997, 2
  %3999 = zext i1 %3998 to i8
  store i8 %3999, i8* %39, align 1
  %4000 = add i64 %3962, add (i64 ptrtoint (%G_0x21ff76__rip__type* @G_0x21ff76__rip_ to i64), i64 33)
  %4001 = add i64 %3962, 40
  store i64 %4001, i64* %3, align 8
  %4002 = inttoptr i64 %4000 to i32*
  store i32 %3973, i32* %4002, align 4
  %4003 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x419842_type* @G__0x419842 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419842_type* @G__0x419842 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %4004 = load i64, i64* %RBP.i, align 8
  %4005 = add i64 %4004, -104
  %4006 = add i64 %4003, 11
  store i64 %4006, i64* %3, align 8
  %4007 = inttoptr i64 %4005 to i64*
  %4008 = load i64, i64* %4007, align 8
  store i64 %4008, i64* %RDI.i3611.pre-phi, align 8
  %4009 = add i64 %4004, -44
  %4010 = add i64 %4003, 14
  store i64 %4010, i64* %3, align 8
  %4011 = inttoptr i64 %4009 to i32*
  %4012 = load i32, i32* %4011, align 4
  %4013 = zext i32 %4012 to i64
  store i64 %4013, i64* %RSI.i3626, align 8
  %4014 = add i64 %4003, 37190
  %4015 = add i64 %4003, 19
  %4016 = load i64, i64* %6, align 8
  %4017 = add i64 %4016, -8
  %4018 = inttoptr i64 %4017 to i64*
  store i64 %4015, i64* %4018, align 8
  store i64 %4017, i64* %6, align 8
  store i64 %4014, i64* %3, align 8
  %call2_402158 = tail call %struct.Memory* @sub_40b290._Z13test_constantIl19custom_constant_addIlEEvPT_iPKc(%struct.State* nonnull %0, i64 %4014, %struct.Memory* %call2_40211d)
  %4019 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x419858_type* @G__0x419858 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419858_type* @G__0x419858 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %4020 = load i64, i64* %RBP.i, align 8
  %4021 = add i64 %4020, -104
  %4022 = add i64 %4019, 11
  store i64 %4022, i64* %3, align 8
  %4023 = inttoptr i64 %4021 to i64*
  %4024 = load i64, i64* %4023, align 8
  store i64 %4024, i64* %RDI.i3611.pre-phi, align 8
  %4025 = add i64 %4020, -44
  %4026 = add i64 %4019, 14
  store i64 %4026, i64* %3, align 8
  %4027 = inttoptr i64 %4025 to i32*
  %4028 = load i32, i32* %4027, align 4
  %4029 = zext i32 %4028 to i64
  store i64 %4029, i64* %RSI.i3626, align 8
  %4030 = add i64 %4019, 37331
  %4031 = add i64 %4019, 19
  %4032 = load i64, i64* %6, align 8
  %4033 = add i64 %4032, -8
  %4034 = inttoptr i64 %4033 to i64*
  store i64 %4031, i64* %4034, align 8
  store i64 %4033, i64* %6, align 8
  store i64 %4030, i64* %3, align 8
  %call2_40216b = tail call %struct.Memory* @sub_40b330._Z13test_constantIl28custom_multiple_constant_addIlEEvPT_iPKc(%struct.State* nonnull %0, i64 %4030, %struct.Memory* %call2_402158)
  %4035 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x419878_type* @G__0x419878 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419878_type* @G__0x419878 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %4036 = load i64, i64* %RBP.i, align 8
  %4037 = add i64 %4036, -104
  %4038 = add i64 %4035, 11
  store i64 %4038, i64* %3, align 8
  %4039 = inttoptr i64 %4037 to i64*
  %4040 = load i64, i64* %4039, align 8
  store i64 %4040, i64* %RDI.i3611.pre-phi, align 8
  %4041 = add i64 %4036, -44
  %4042 = add i64 %4035, 14
  store i64 %4042, i64* %3, align 8
  %4043 = inttoptr i64 %4041 to i32*
  %4044 = load i32, i32* %4043, align 4
  %4045 = zext i32 %4044 to i64
  store i64 %4045, i64* %RSI.i3626, align 8
  %4046 = add i64 %4035, 37472
  %4047 = add i64 %4035, 19
  %4048 = load i64, i64* %6, align 8
  %4049 = add i64 %4048, -8
  %4050 = inttoptr i64 %4049 to i64*
  store i64 %4047, i64* %4050, align 8
  store i64 %4049, i64* %6, align 8
  store i64 %4046, i64* %3, align 8
  %call2_40217e = tail call %struct.Memory* @sub_40b3d0._Z13test_constantIl19custom_constant_subIlEEvPT_iPKc(%struct.State* nonnull %0, i64 %4046, %struct.Memory* %call2_40216b)
  %4051 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x419893_type* @G__0x419893 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419893_type* @G__0x419893 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %4052 = load i64, i64* %RBP.i, align 8
  %4053 = add i64 %4052, -104
  %4054 = add i64 %4051, 11
  store i64 %4054, i64* %3, align 8
  %4055 = inttoptr i64 %4053 to i64*
  %4056 = load i64, i64* %4055, align 8
  store i64 %4056, i64* %RDI.i3611.pre-phi, align 8
  %4057 = add i64 %4052, -44
  %4058 = add i64 %4051, 14
  store i64 %4058, i64* %3, align 8
  %4059 = inttoptr i64 %4057 to i32*
  %4060 = load i32, i32* %4059, align 4
  %4061 = zext i32 %4060 to i64
  store i64 %4061, i64* %RSI.i3626, align 8
  %4062 = add i64 %4051, 37613
  %4063 = add i64 %4051, 19
  %4064 = load i64, i64* %6, align 8
  %4065 = add i64 %4064, -8
  %4066 = inttoptr i64 %4065 to i64*
  store i64 %4063, i64* %4066, align 8
  store i64 %4065, i64* %6, align 8
  store i64 %4062, i64* %3, align 8
  %call2_402191 = tail call %struct.Memory* @sub_40b470._Z13test_constantIl28custom_multiple_constant_subIlEEvPT_iPKc(%struct.State* nonnull %0, i64 %4062, %struct.Memory* %call2_40217e)
  %4067 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x4198b8_type* @G__0x4198b8 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4198b8_type* @G__0x4198b8 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %4068 = load i64, i64* %RBP.i, align 8
  %4069 = add i64 %4068, -104
  %4070 = add i64 %4067, 11
  store i64 %4070, i64* %3, align 8
  %4071 = inttoptr i64 %4069 to i64*
  %4072 = load i64, i64* %4071, align 8
  store i64 %4072, i64* %RDI.i3611.pre-phi, align 8
  %4073 = add i64 %4068, -44
  %4074 = add i64 %4067, 14
  store i64 %4074, i64* %3, align 8
  %4075 = inttoptr i64 %4073 to i32*
  %4076 = load i32, i32* %4075, align 4
  %4077 = zext i32 %4076 to i64
  store i64 %4077, i64* %RSI.i3626, align 8
  %4078 = add i64 %4067, 37754
  %4079 = add i64 %4067, 19
  %4080 = load i64, i64* %6, align 8
  %4081 = add i64 %4080, -8
  %4082 = inttoptr i64 %4081 to i64*
  store i64 %4079, i64* %4082, align 8
  store i64 %4081, i64* %6, align 8
  store i64 %4078, i64* %3, align 8
  %call2_4021a4 = tail call %struct.Memory* @sub_40b510._Z13test_constantIl24custom_constant_multiplyIlEEvPT_iPKc(%struct.State* nonnull %0, i64 %4078, %struct.Memory* %call2_402191)
  %4083 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x4198d3_type* @G__0x4198d3 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4198d3_type* @G__0x4198d3 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %4084 = load i64, i64* %RBP.i, align 8
  %4085 = add i64 %4084, -104
  %4086 = add i64 %4083, 11
  store i64 %4086, i64* %3, align 8
  %4087 = inttoptr i64 %4085 to i64*
  %4088 = load i64, i64* %4087, align 8
  store i64 %4088, i64* %RDI.i3611.pre-phi, align 8
  %4089 = add i64 %4084, -44
  %4090 = add i64 %4083, 14
  store i64 %4090, i64* %3, align 8
  %4091 = inttoptr i64 %4089 to i32*
  %4092 = load i32, i32* %4091, align 4
  %4093 = zext i32 %4092 to i64
  store i64 %4093, i64* %RSI.i3626, align 8
  %4094 = add i64 %4083, 37895
  %4095 = add i64 %4083, 19
  %4096 = load i64, i64* %6, align 8
  %4097 = add i64 %4096, -8
  %4098 = inttoptr i64 %4097 to i64*
  store i64 %4095, i64* %4098, align 8
  store i64 %4097, i64* %6, align 8
  store i64 %4094, i64* %3, align 8
  %call2_4021b7 = tail call %struct.Memory* @sub_40b5b0._Z13test_constantIl33custom_multiple_constant_multiplyIlEEvPT_iPKc(%struct.State* nonnull %0, i64 %4094, %struct.Memory* %call2_4021a4)
  %4099 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x4198f9_type* @G__0x4198f9 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4198f9_type* @G__0x4198f9 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %4100 = load i64, i64* %RBP.i, align 8
  %4101 = add i64 %4100, -104
  %4102 = add i64 %4099, 11
  store i64 %4102, i64* %3, align 8
  %4103 = inttoptr i64 %4101 to i64*
  %4104 = load i64, i64* %4103, align 8
  store i64 %4104, i64* %RDI.i3611.pre-phi, align 8
  %4105 = add i64 %4100, -44
  %4106 = add i64 %4099, 14
  store i64 %4106, i64* %3, align 8
  %4107 = inttoptr i64 %4105 to i32*
  %4108 = load i32, i32* %4107, align 4
  %4109 = zext i32 %4108 to i64
  store i64 %4109, i64* %RSI.i3626, align 8
  %4110 = add i64 %4099, 38036
  %4111 = add i64 %4099, 19
  %4112 = load i64, i64* %6, align 8
  %4113 = add i64 %4112, -8
  %4114 = inttoptr i64 %4113 to i64*
  store i64 %4111, i64* %4114, align 8
  store i64 %4113, i64* %6, align 8
  store i64 %4110, i64* %3, align 8
  %call2_4021ca = tail call %struct.Memory* @sub_40b650._Z13test_constantIl34custom_multiple_constant_multiply2IlEEvPT_iPKc(%struct.State* nonnull %0, i64 %4110, %struct.Memory* %call2_4021b7)
  %4115 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x41991e_type* @G__0x41991e to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41991e_type* @G__0x41991e to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %4116 = load i64, i64* %RBP.i, align 8
  %4117 = add i64 %4116, -104
  %4118 = add i64 %4115, 11
  store i64 %4118, i64* %3, align 8
  %4119 = inttoptr i64 %4117 to i64*
  %4120 = load i64, i64* %4119, align 8
  store i64 %4120, i64* %RDI.i3611.pre-phi, align 8
  %4121 = add i64 %4116, -44
  %4122 = add i64 %4115, 14
  store i64 %4122, i64* %3, align 8
  %4123 = inttoptr i64 %4121 to i32*
  %4124 = load i32, i32* %4123, align 4
  %4125 = zext i32 %4124 to i64
  store i64 %4125, i64* %RSI.i3626, align 8
  %4126 = add i64 %4115, 38177
  %4127 = add i64 %4115, 19
  %4128 = load i64, i64* %6, align 8
  %4129 = add i64 %4128, -8
  %4130 = inttoptr i64 %4129 to i64*
  store i64 %4127, i64* %4130, align 8
  store i64 %4129, i64* %6, align 8
  store i64 %4126, i64* %3, align 8
  %call2_4021dd = tail call %struct.Memory* @sub_40b6f0._Z13test_constantIl22custom_constant_divideIlEEvPT_iPKc(%struct.State* nonnull %0, i64 %4126, %struct.Memory* %call2_4021ca)
  %4131 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x419937_type* @G__0x419937 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419937_type* @G__0x419937 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %4132 = load i64, i64* %RBP.i, align 8
  %4133 = add i64 %4132, -104
  %4134 = add i64 %4131, 11
  store i64 %4134, i64* %3, align 8
  %4135 = inttoptr i64 %4133 to i64*
  %4136 = load i64, i64* %4135, align 8
  store i64 %4136, i64* %RDI.i3611.pre-phi, align 8
  %4137 = add i64 %4132, -44
  %4138 = add i64 %4131, 14
  store i64 %4138, i64* %3, align 8
  %4139 = inttoptr i64 %4137 to i32*
  %4140 = load i32, i32* %4139, align 4
  %4141 = zext i32 %4140 to i64
  store i64 %4141, i64* %RSI.i3626, align 8
  %4142 = add i64 %4131, 38318
  %4143 = add i64 %4131, 19
  %4144 = load i64, i64* %6, align 8
  %4145 = add i64 %4144, -8
  %4146 = inttoptr i64 %4145 to i64*
  store i64 %4143, i64* %4146, align 8
  store i64 %4145, i64* %6, align 8
  store i64 %4142, i64* %3, align 8
  %call2_4021f0 = tail call %struct.Memory* @sub_40b790._Z13test_constantIl31custom_multiple_constant_divideIlEEvPT_iPKc(%struct.State* nonnull %0, i64 %4142, %struct.Memory* %call2_4021dd)
  %4147 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x41995a_type* @G__0x41995a to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41995a_type* @G__0x41995a to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %4148 = load i64, i64* %RBP.i, align 8
  %4149 = add i64 %4148, -104
  %4150 = add i64 %4147, 11
  store i64 %4150, i64* %3, align 8
  %4151 = inttoptr i64 %4149 to i64*
  %4152 = load i64, i64* %4151, align 8
  store i64 %4152, i64* %RDI.i3611.pre-phi, align 8
  %4153 = add i64 %4148, -44
  %4154 = add i64 %4147, 14
  store i64 %4154, i64* %3, align 8
  %4155 = inttoptr i64 %4153 to i32*
  %4156 = load i32, i32* %4155, align 4
  %4157 = zext i32 %4156 to i64
  store i64 %4157, i64* %RSI.i3626, align 8
  %4158 = add i64 %4147, 38459
  %4159 = add i64 %4147, 19
  %4160 = load i64, i64* %6, align 8
  %4161 = add i64 %4160, -8
  %4162 = inttoptr i64 %4161 to i64*
  store i64 %4159, i64* %4162, align 8
  store i64 %4161, i64* %6, align 8
  store i64 %4158, i64* %3, align 8
  %call2_402203 = tail call %struct.Memory* @sub_40b830._Z13test_constantIl32custom_multiple_constant_divide2IlEEvPT_iPKc(%struct.State* nonnull %0, i64 %4158, %struct.Memory* %call2_4021f0)
  %4163 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x41997d_type* @G__0x41997d to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41997d_type* @G__0x41997d to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %4164 = load i64, i64* %RBP.i, align 8
  %4165 = add i64 %4164, -104
  %4166 = add i64 %4163, 11
  store i64 %4166, i64* %3, align 8
  %4167 = inttoptr i64 %4165 to i64*
  %4168 = load i64, i64* %4167, align 8
  store i64 %4168, i64* %RDI.i3611.pre-phi, align 8
  %4169 = add i64 %4164, -44
  %4170 = add i64 %4163, 14
  store i64 %4170, i64* %3, align 8
  %4171 = inttoptr i64 %4169 to i32*
  %4172 = load i32, i32* %4171, align 4
  %4173 = zext i32 %4172 to i64
  store i64 %4173, i64* %RSI.i3626, align 8
  %4174 = add i64 %4163, 38600
  %4175 = add i64 %4163, 19
  %4176 = load i64, i64* %6, align 8
  %4177 = add i64 %4176, -8
  %4178 = inttoptr i64 %4177 to i64*
  store i64 %4175, i64* %4178, align 8
  store i64 %4177, i64* %6, align 8
  store i64 %4174, i64* %3, align 8
  %call2_402216 = tail call %struct.Memory* @sub_40b8d0._Z13test_constantIl30custom_multiple_constant_mixedIlEEvPT_iPKc(%struct.State* nonnull %0, i64 %4174, %struct.Memory* %call2_402203)
  %4179 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x41999e_type* @G__0x41999e to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41999e_type* @G__0x41999e to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %4180 = load i64, i64* %RBP.i, align 8
  %4181 = add i64 %4180, -104
  %4182 = add i64 %4179, 11
  store i64 %4182, i64* %3, align 8
  %4183 = inttoptr i64 %4181 to i64*
  %4184 = load i64, i64* %4183, align 8
  store i64 %4184, i64* %RDI.i3611.pre-phi, align 8
  %4185 = add i64 %4180, -44
  %4186 = add i64 %4179, 14
  store i64 %4186, i64* %3, align 8
  %4187 = inttoptr i64 %4185 to i32*
  %4188 = load i32, i32* %4187, align 4
  %4189 = zext i32 %4188 to i64
  store i64 %4189, i64* %RSI.i3626, align 8
  %4190 = add i64 %4179, 38741
  %4191 = add i64 %4179, 19
  %4192 = load i64, i64* %6, align 8
  %4193 = add i64 %4192, -8
  %4194 = inttoptr i64 %4193 to i64*
  store i64 %4191, i64* %4194, align 8
  store i64 %4193, i64* %6, align 8
  store i64 %4190, i64* %3, align 8
  %call2_402229 = tail call %struct.Memory* @sub_40b970._Z13test_constantIl19custom_constant_andIlEEvPT_iPKc(%struct.State* nonnull %0, i64 %4190, %struct.Memory* %call2_402216)
  %4195 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x4199b4_type* @G__0x4199b4 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4199b4_type* @G__0x4199b4 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %4196 = load i64, i64* %RBP.i, align 8
  %4197 = add i64 %4196, -104
  %4198 = add i64 %4195, 11
  store i64 %4198, i64* %3, align 8
  %4199 = inttoptr i64 %4197 to i64*
  %4200 = load i64, i64* %4199, align 8
  store i64 %4200, i64* %RDI.i3611.pre-phi, align 8
  %4201 = add i64 %4196, -44
  %4202 = add i64 %4195, 14
  store i64 %4202, i64* %3, align 8
  %4203 = inttoptr i64 %4201 to i32*
  %4204 = load i32, i32* %4203, align 4
  %4205 = zext i32 %4204 to i64
  store i64 %4205, i64* %RSI.i3626, align 8
  %4206 = add i64 %4195, 38882
  %4207 = add i64 %4195, 19
  %4208 = load i64, i64* %6, align 8
  %4209 = add i64 %4208, -8
  %4210 = inttoptr i64 %4209 to i64*
  store i64 %4207, i64* %4210, align 8
  store i64 %4209, i64* %6, align 8
  store i64 %4206, i64* %3, align 8
  %call2_40223c = tail call %struct.Memory* @sub_40ba10._Z13test_constantIl28custom_multiple_constant_andIlEEvPT_iPKc(%struct.State* nonnull %0, i64 %4206, %struct.Memory* %call2_402229)
  %4211 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x4199d3_type* @G__0x4199d3 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4199d3_type* @G__0x4199d3 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %4212 = load i64, i64* %RBP.i, align 8
  %4213 = add i64 %4212, -104
  %4214 = add i64 %4211, 11
  store i64 %4214, i64* %3, align 8
  %4215 = inttoptr i64 %4213 to i64*
  %4216 = load i64, i64* %4215, align 8
  store i64 %4216, i64* %RDI.i3611.pre-phi, align 8
  %4217 = add i64 %4212, -44
  %4218 = add i64 %4211, 14
  store i64 %4218, i64* %3, align 8
  %4219 = inttoptr i64 %4217 to i32*
  %4220 = load i32, i32* %4219, align 4
  %4221 = zext i32 %4220 to i64
  store i64 %4221, i64* %RSI.i3626, align 8
  %4222 = add i64 %4211, 39023
  %4223 = add i64 %4211, 19
  %4224 = load i64, i64* %6, align 8
  %4225 = add i64 %4224, -8
  %4226 = inttoptr i64 %4225 to i64*
  store i64 %4223, i64* %4226, align 8
  store i64 %4225, i64* %6, align 8
  store i64 %4222, i64* %3, align 8
  %call2_40224f = tail call %struct.Memory* @sub_40bab0._Z13test_constantIl18custom_constant_orIlEEvPT_iPKc(%struct.State* nonnull %0, i64 %4222, %struct.Memory* %call2_40223c)
  %4227 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x4199e8_type* @G__0x4199e8 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4199e8_type* @G__0x4199e8 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %4228 = load i64, i64* %RBP.i, align 8
  %4229 = add i64 %4228, -104
  %4230 = add i64 %4227, 11
  store i64 %4230, i64* %3, align 8
  %4231 = inttoptr i64 %4229 to i64*
  %4232 = load i64, i64* %4231, align 8
  store i64 %4232, i64* %RDI.i3611.pre-phi, align 8
  %4233 = add i64 %4228, -44
  %4234 = add i64 %4227, 14
  store i64 %4234, i64* %3, align 8
  %4235 = inttoptr i64 %4233 to i32*
  %4236 = load i32, i32* %4235, align 4
  %4237 = zext i32 %4236 to i64
  store i64 %4237, i64* %RSI.i3626, align 8
  %4238 = add i64 %4227, 39164
  %4239 = add i64 %4227, 19
  %4240 = load i64, i64* %6, align 8
  %4241 = add i64 %4240, -8
  %4242 = inttoptr i64 %4241 to i64*
  store i64 %4239, i64* %4242, align 8
  store i64 %4241, i64* %6, align 8
  store i64 %4238, i64* %3, align 8
  %call2_402262 = tail call %struct.Memory* @sub_40bb50._Z13test_constantIl27custom_multiple_constant_orIlEEvPT_iPKc(%struct.State* nonnull %0, i64 %4238, %struct.Memory* %call2_40224f)
  %4243 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x419a06_type* @G__0x419a06 to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419a06_type* @G__0x419a06 to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %4244 = load i64, i64* %RBP.i, align 8
  %4245 = add i64 %4244, -104
  %4246 = add i64 %4243, 11
  store i64 %4246, i64* %3, align 8
  %4247 = inttoptr i64 %4245 to i64*
  %4248 = load i64, i64* %4247, align 8
  store i64 %4248, i64* %RDI.i3611.pre-phi, align 8
  %4249 = add i64 %4244, -44
  %4250 = add i64 %4243, 14
  store i64 %4250, i64* %3, align 8
  %4251 = inttoptr i64 %4249 to i32*
  %4252 = load i32, i32* %4251, align 4
  %4253 = zext i32 %4252 to i64
  store i64 %4253, i64* %RSI.i3626, align 8
  %4254 = add i64 %4243, 39305
  %4255 = add i64 %4243, 19
  %4256 = load i64, i64* %6, align 8
  %4257 = add i64 %4256, -8
  %4258 = inttoptr i64 %4257 to i64*
  store i64 %4255, i64* %4258, align 8
  store i64 %4257, i64* %6, align 8
  store i64 %4254, i64* %3, align 8
  %call2_402275 = tail call %struct.Memory* @sub_40bbf0._Z13test_constantIl19custom_constant_xorIlEEvPT_iPKc(%struct.State* nonnull %0, i64 %4254, %struct.Memory* %call2_402262)
  %4259 = load i64, i64* %3, align 8
  store i64 and (i64 ptrtoint (%G__0x419a1c_type* @G__0x419a1c to i64), i64 4294967295), i64* %RSI.i3626, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x419a1c_type* @G__0x419a1c to i64), i64 4294967295) to i32) to i64), i64* %RDX.i3615, align 8
  %4260 = load i64, i64* %RBP.i, align 8
  %4261 = add i64 %4260, -104
  %4262 = add i64 %4259, 11
  store i64 %4262, i64* %3, align 8
  %4263 = inttoptr i64 %4261 to i64*
  %4264 = load i64, i64* %4263, align 8
  store i64 %4264, i64* %RDI.i3611.pre-phi, align 8
  %4265 = add i64 %4260, -44
  %4266 = add i64 %4259, 14
  store i64 %4266, i64* %3, align 8
  %4267 = inttoptr i64 %4265 to i32*
  %4268 = load i32, i32* %4267, align 4
  %4269 = zext i32 %4268 to i64
  store i64 %4269, i64* %RSI.i3626, align 8
  %4270 = add i64 %4259, 39446
  %4271 = add i64 %4259, 19
  %4272 = load i64, i64* %6, align 8
  %4273 = add i64 %4272, -8
  %4274 = inttoptr i64 %4273 to i64*
  store i64 %4271, i64* %4274, align 8
  store i64 %4273, i64* %6, align 8
  store i64 %4270, i64* %3, align 8
  %call2_402288 = tail call %struct.Memory* @sub_40bc90._Z13test_constantIl28custom_multiple_constant_xorIlEEvPT_iPKc(%struct.State* nonnull %0, i64 %4270, %struct.Memory* %call2_402275)
  %4275 = load i64, i64* %3, align 8
  %4276 = add i64 %4275, ptrtoint (%G_0x21fdf3__rip__type* @G_0x21fdf3__rip_ to i64)
  %4277 = add i64 %4275, 8
  store i64 %4277, i64* %3, align 8
  %4278 = inttoptr i64 %4276 to i64*
  %4279 = load i64, i64* %4278, align 8
  store i64 %4279, i64* %2519, align 1
  store double 0.000000e+00, double* %2521, align 1
  %4280 = add i64 %4275, add (i64 ptrtoint (%G_0x16793__rip__type* @G_0x16793__rip_ to i64), i64 8)
  %4281 = add i64 %4275, 16
  store i64 %4281, i64* %3, align 8
  %4282 = inttoptr i64 %4280 to i64*
  %4283 = load i64, i64* %4282, align 8
  %4284 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 1, i32 0, i32 0, i32 0, i64 0
  store i64 %4283, i64* %4284, align 1
  %4285 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 1, i32 0, i32 0, i32 0, i64 1
  %4286 = bitcast i64* %4285 to double*
  store double 0.000000e+00, double* %4286, align 1
  %4287 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 2
  %4288 = bitcast %union.VectorReg* %4287 to i8*
  %4289 = bitcast [32 x %union.VectorReg]* %2512 to <2 x i32>*
  %4290 = bitcast i64 %4279 to <2 x i32>
  %4291 = bitcast i64* %2520 to <2 x i32>*
  %4292 = extractelement <2 x i32> %4290, i32 0
  %4293 = bitcast %union.VectorReg* %4287 to i32*
  store i32 %4292, i32* %4293, align 1
  %4294 = extractelement <2 x i32> %4290, i32 1
  %4295 = getelementptr inbounds i8, i8* %4288, i64 4
  %4296 = bitcast i8* %4295 to i32*
  store i32 %4294, i32* %4296, align 1
  %4297 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 2, i32 0, i32 0, i32 0, i64 1
  %4298 = bitcast i64* %4297 to i32*
  store i32 0, i32* %4298, align 1
  %4299 = getelementptr inbounds i8, i8* %4288, i64 12
  %4300 = bitcast i8* %4299 to i32*
  store i32 0, i32* %4300, align 1
  %4301 = bitcast %union.VectorReg* %4287 to double*
  %4302 = load double, double* %4301, align 1
  %4303 = bitcast i64 %4283 to double
  %4304 = fsub double %4302, %4303
  store double %4304, double* %4301, align 1
  %4305 = tail call double @llvm.trunc.f64(double %4304)
  %4306 = tail call double @llvm.fabs.f64(double %4305)
  %4307 = fcmp ogt double %4306, 0x43E0000000000000
  %4308 = fptosi double %4305 to i64
  %4309 = select i1 %4307, i64 -9223372036854775808, i64 %4308
  %4310 = xor i64 %4309, -9223372036854775808
  store i64 %4310, i64* %RAX.i3622, align 8
  store i8 0, i8* %14, align 1
  %4311 = trunc i64 %4309 to i32
  %4312 = and i32 %4311, 255
  %4313 = tail call i32 @llvm.ctpop.i32(i32 %4312)
  %4314 = trunc i32 %4313 to i8
  %4315 = and i8 %4314, 1
  %4316 = xor i8 %4315, 1
  store i8 %4316, i8* %21, align 1
  %4317 = icmp eq i64 %4310, 0
  %4318 = zext i1 %4317 to i8
  store i8 %4318, i8* %30, align 1
  %4319 = lshr i64 %4310, 63
  %4320 = trunc i64 %4319 to i8
  store i8 %4320, i8* %33, align 1
  store i8 0, i8* %39, align 1
  store i8 0, i8* %27, align 1
  %4321 = bitcast i64 %4279 to double
  %4322 = tail call double @llvm.trunc.f64(double %4321)
  %4323 = tail call double @llvm.fabs.f64(double %4322)
  %4324 = fcmp ogt double %4323, 0x43E0000000000000
  %4325 = fptosi double %4322 to i64
  %4326 = select i1 %4324, i64 -9223372036854775808, i64 %4325
  store i64 %4326, i64* %RCX.i3620, align 8
  %4327 = add i64 %4275, 50
  store i64 %4327, i64* %3, align 8
  %4328 = fcmp uno double %4303, %4321
  br i1 %4328, label %4329, label %4339

; <label>:4329:                                   ; preds = %block_.L_400f47
  %4330 = fadd double %4303, %4321
  %4331 = bitcast double %4330 to i64
  %4332 = and i64 %4331, 9221120237041090560
  %4333 = icmp eq i64 %4332, 9218868437227405312
  %4334 = and i64 %4331, 2251799813685247
  %4335 = icmp ne i64 %4334, 0
  %4336 = and i1 %4333, %4335
  br i1 %4336, label %4337, label %4345

; <label>:4337:                                   ; preds = %4329
  %4338 = tail call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %4327, %struct.Memory* %call2_402288)
  %.pre3 = load i64, i64* %RCX.i3620, align 8
  %.pre4 = load i64, i64* %3, align 8
  %.pre5 = load i8, i8* %14, align 1
  %.pre6 = load i8, i8* %30, align 1
  %.pre7 = load i64, i64* %RAX.i3622, align 8
  br label %routine_ucomisd__xmm0___xmm1.exit

; <label>:4339:                                   ; preds = %block_.L_400f47
  %4340 = fcmp ogt double %4303, %4321
  br i1 %4340, label %4345, label %4341

; <label>:4341:                                   ; preds = %4339
  %4342 = fcmp olt double %4303, %4321
  br i1 %4342, label %4345, label %4343

; <label>:4343:                                   ; preds = %4341
  %4344 = fcmp oeq double %4303, %4321
  br i1 %4344, label %4345, label %4349

; <label>:4345:                                   ; preds = %4343, %4341, %4339, %4329
  %4346 = phi i8 [ 0, %4339 ], [ 0, %4341 ], [ 1, %4343 ], [ 1, %4329 ]
  %4347 = phi i8 [ 0, %4339 ], [ 0, %4341 ], [ 0, %4343 ], [ 1, %4329 ]
  %4348 = phi i8 [ 0, %4339 ], [ 1, %4341 ], [ 0, %4343 ], [ 1, %4329 ]
  store i8 %4346, i8* %30, align 1
  store i8 %4347, i8* %21, align 1
  store i8 %4348, i8* %14, align 1
  br label %4349

; <label>:4349:                                   ; preds = %4345, %4343
  %4350 = phi i8 [ %4346, %4345 ], [ %4318, %4343 ]
  %4351 = phi i8 [ %4348, %4345 ], [ 0, %4343 ]
  store i8 0, i8* %39, align 1
  store i8 0, i8* %33, align 1
  store i8 0, i8* %27, align 1
  br label %routine_ucomisd__xmm0___xmm1.exit

routine_ucomisd__xmm0___xmm1.exit:                ; preds = %4349, %4337
  %4352 = phi i64 [ %.pre7, %4337 ], [ %4310, %4349 ]
  %4353 = phi i8 [ %.pre6, %4337 ], [ %4350, %4349 ]
  %4354 = phi i8 [ %.pre5, %4337 ], [ %4351, %4349 ]
  %4355 = phi i64 [ %.pre4, %4337 ], [ %4327, %4349 ]
  %4356 = phi i64 [ %.pre3, %4337 ], [ %4326, %4349 ]
  %4357 = phi %struct.Memory* [ %4338, %4337 ], [ %call2_402288, %4349 ]
  %4358 = or i8 %4353, %4354
  %4359 = icmp eq i8 %4358, 0
  %4360 = select i1 %4359, i64 %4356, i64 %4352
  store i64 %4360, i64* %RAX.i3622, align 8
  %4361 = load i64, i64* %RBP.i, align 8
  %4362 = add i64 %4361, -32
  %4363 = add i64 %4355, 8
  store i64 %4363, i64* %3, align 8
  %4364 = inttoptr i64 %4362 to i64*
  %4365 = load i64, i64* %4364, align 8
  store i64 %4365, i64* %RDI.i3611.pre-phi, align 8
  %4366 = add i64 %4361, -40
  %4367 = add i64 %4355, 12
  store i64 %4367, i64* %3, align 8
  %4368 = inttoptr i64 %4366 to i64*
  %4369 = load i64, i64* %4368, align 8
  store i64 %4369, i64* %RSI.i3626, align 8
  store i64 %4360, i64* %RDX.i3615, align 8
  %4370 = add i64 %4355, 39537
  %4371 = add i64 %4355, 20
  %4372 = load i64, i64* %6, align 8
  %4373 = add i64 %4372, -8
  %4374 = inttoptr i64 %4373 to i64*
  store i64 %4371, i64* %4374, align 8
  store i64 %4373, i64* %6, align 8
  store i64 %4370, i64* %3, align 8
  %call2_4022ce = tail call %struct.Memory* @sub_40bd30._Z4fillIPmmEvT_S1_T0_(%struct.State* nonnull %0, i64 %4370, %struct.Memory* %4357)
  %4375 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64* %RDI.i3611.pre-phi, align 8
  store i64 8000, i64* %RSI.i3626, align 8
  store i64 ptrtoint (%G__0x4196b0_type* @G__0x4196b0 to i64), i64* %RDX.i3615, align 8
  %4376 = load i32, i32* bitcast (%G_0x622080_type* @G_0x622080 to i32*), align 8
  %4377 = zext i32 %4376 to i64
  store i64 %4377, i64* %206, align 8
  store i32 %4376, i32* bitcast (%G_0x6220c0_type* @G_0x6220c0 to i32*), align 8
  %4378 = add i64 %4375, 39581
  %4379 = add i64 %4375, 46
  %4380 = load i64, i64* %6, align 8
  %4381 = add i64 %4380, -8
  %4382 = inttoptr i64 %4381 to i64*
  store i64 %4379, i64* %4382, align 8
  store i64 %4381, i64* %6, align 8
  store i64 %4378, i64* %3, align 8
  %call2_4022fc = tail call %struct.Memory* @sub_40bd70._Z13test_constantIm10custom_twoImEEvPT_iPKc(%struct.State* nonnull %0, i64 %4378, %struct.Memory* %call2_4022ce)
  %4383 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64* %RDI.i3611.pre-phi, align 8
  store i64 8000, i64* %RSI.i3626, align 8
  store i64 ptrtoint (%G__0x4196c2_type* @G__0x4196c2 to i64), i64* %RDX.i3615, align 8
  %4384 = add i64 %4383, 39695
  %4385 = add i64 %4383, 30
  %4386 = load i64, i64* %6, align 8
  %4387 = add i64 %4386, -8
  %4388 = inttoptr i64 %4387 to i64*
  store i64 %4385, i64* %4388, align 8
  store i64 %4387, i64* %6, align 8
  store i64 %4384, i64* %3, align 8
  %call2_40231a = tail call %struct.Memory* @sub_40be10._Z13test_constantIm20custom_add_constantsImEEvPT_iPKc(%struct.State* nonnull %0, i64 %4384, %struct.Memory* %call2_4022fc)
  %4389 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64* %RDI.i3611.pre-phi, align 8
  store i64 8000, i64* %RSI.i3626, align 8
  store i64 ptrtoint (%G__0x4196d9_type* @G__0x4196d9 to i64), i64* %RDX.i3615, align 8
  %4390 = add i64 %4389, 39825
  %4391 = add i64 %4389, 30
  %4392 = load i64, i64* %6, align 8
  %4393 = add i64 %4392, -8
  %4394 = inttoptr i64 %4393 to i64*
  store i64 %4391, i64* %4394, align 8
  store i64 %4393, i64* %6, align 8
  store i64 %4390, i64* %3, align 8
  %call2_402338 = tail call %struct.Memory* @sub_40beb0._Z13test_constantIm20custom_sub_constantsImEEvPT_iPKc(%struct.State* nonnull %0, i64 %4390, %struct.Memory* %call2_40231a)
  %4395 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64* %RDI.i3611.pre-phi, align 8
  store i64 8000, i64* %RSI.i3626, align 8
  store i64 ptrtoint (%G__0x4196f5_type* @G__0x4196f5 to i64), i64* %RDX.i3615, align 8
  %4396 = add i64 %4395, 39955
  %4397 = add i64 %4395, 30
  %4398 = load i64, i64* %6, align 8
  %4399 = add i64 %4398, -8
  %4400 = inttoptr i64 %4399 to i64*
  store i64 %4397, i64* %4400, align 8
  store i64 %4399, i64* %6, align 8
  store i64 %4396, i64* %3, align 8
  %call2_402356 = tail call %struct.Memory* @sub_40bf50._Z13test_constantIm25custom_multiply_constantsImEEvPT_iPKc(%struct.State* nonnull %0, i64 %4396, %struct.Memory* %call2_402338)
  %4401 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64* %RDI.i3611.pre-phi, align 8
  store i64 8000, i64* %RSI.i3626, align 8
  store i64 ptrtoint (%G__0x419711_type* @G__0x419711 to i64), i64* %RDX.i3615, align 8
  %4402 = add i64 %4401, 40085
  %4403 = add i64 %4401, 30
  %4404 = load i64, i64* %6, align 8
  %4405 = add i64 %4404, -8
  %4406 = inttoptr i64 %4405 to i64*
  store i64 %4403, i64* %4406, align 8
  store i64 %4405, i64* %6, align 8
  store i64 %4402, i64* %3, align 8
  %call2_402374 = tail call %struct.Memory* @sub_40bff0._Z13test_constantIm23custom_divide_constantsImEEvPT_iPKc(%struct.State* nonnull %0, i64 %4402, %struct.Memory* %call2_402356)
  %4407 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64* %RDI.i3611.pre-phi, align 8
  store i64 8000, i64* %RSI.i3626, align 8
  store i64 ptrtoint (%G__0x41972b_type* @G__0x41972b to i64), i64* %RDX.i3615, align 8
  %4408 = add i64 %4407, 40215
  %4409 = add i64 %4407, 30
  %4410 = load i64, i64* %6, align 8
  %4411 = add i64 %4410, -8
  %4412 = inttoptr i64 %4411 to i64*
  store i64 %4409, i64* %4412, align 8
  store i64 %4411, i64* %6, align 8
  store i64 %4408, i64* %3, align 8
  %call2_402392 = tail call %struct.Memory* @sub_40c090._Z13test_constantIm20custom_mod_constantsImEEvPT_iPKc(%struct.State* nonnull %0, i64 %4408, %struct.Memory* %call2_402374)
  %4413 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64* %RDI.i3611.pre-phi, align 8
  store i64 8000, i64* %RSI.i3626, align 8
  store i64 ptrtoint (%G__0x419742_type* @G__0x419742 to i64), i64* %RDX.i3615, align 8
  %4414 = add i64 %4413, 40345
  %4415 = add i64 %4413, 30
  %4416 = load i64, i64* %6, align 8
  %4417 = add i64 %4416, -8
  %4418 = inttoptr i64 %4417 to i64*
  store i64 %4415, i64* %4418, align 8
  store i64 %4417, i64* %6, align 8
  store i64 %4414, i64* %3, align 8
  %call2_4023b0 = tail call %struct.Memory* @sub_40c130._Z13test_constantIm22custom_equal_constantsImEEvPT_iPKc(%struct.State* nonnull %0, i64 %4414, %struct.Memory* %call2_402392)
  %4419 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64* %RDI.i3611.pre-phi, align 8
  store i64 8000, i64* %RSI.i3626, align 8
  store i64 ptrtoint (%G__0x41975b_type* @G__0x41975b to i64), i64* %RDX.i3615, align 8
  %4420 = add i64 %4419, 40475
  %4421 = add i64 %4419, 30
  %4422 = load i64, i64* %6, align 8
  %4423 = add i64 %4422, -8
  %4424 = inttoptr i64 %4423 to i64*
  store i64 %4421, i64* %4424, align 8
  store i64 %4423, i64* %6, align 8
  store i64 %4420, i64* %3, align 8
  %call2_4023ce = tail call %struct.Memory* @sub_40c1d0._Z13test_constantIm25custom_notequal_constantsImEEvPT_iPKc(%struct.State* nonnull %0, i64 %4420, %struct.Memory* %call2_4023b0)
  %4425 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64* %RDI.i3611.pre-phi, align 8
  store i64 8000, i64* %RSI.i3626, align 8
  store i64 ptrtoint (%G__0x419777_type* @G__0x419777 to i64), i64* %RDX.i3615, align 8
  %4426 = add i64 %4425, 40605
  %4427 = add i64 %4425, 30
  %4428 = load i64, i64* %6, align 8
  %4429 = add i64 %4428, -8
  %4430 = inttoptr i64 %4429 to i64*
  store i64 %4427, i64* %4430, align 8
  store i64 %4429, i64* %6, align 8
  store i64 %4426, i64* %3, align 8
  %call2_4023ec = tail call %struct.Memory* @sub_40c270._Z13test_constantIm28custom_greaterthan_constantsImEEvPT_iPKc(%struct.State* nonnull %0, i64 %4426, %struct.Memory* %call2_4023ce)
  %4431 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64* %RDI.i3611.pre-phi, align 8
  store i64 8000, i64* %RSI.i3626, align 8
  store i64 ptrtoint (%G__0x419797_type* @G__0x419797 to i64), i64* %RDX.i3615, align 8
  %4432 = add i64 %4431, 40735
  %4433 = add i64 %4431, 30
  %4434 = load i64, i64* %6, align 8
  %4435 = add i64 %4434, -8
  %4436 = inttoptr i64 %4435 to i64*
  store i64 %4433, i64* %4436, align 8
  store i64 %4435, i64* %6, align 8
  store i64 %4432, i64* %3, align 8
  %call2_40240a = tail call %struct.Memory* @sub_40c310._Z13test_constantIm25custom_lessthan_constantsImEEvPT_iPKc(%struct.State* nonnull %0, i64 %4432, %struct.Memory* %call2_4023ec)
  %4437 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64* %RDI.i3611.pre-phi, align 8
  store i64 8000, i64* %RSI.i3626, align 8
  store i64 ptrtoint (%G__0x4197b4_type* @G__0x4197b4 to i64), i64* %RDX.i3615, align 8
  %4438 = add i64 %4437, 40865
  %4439 = add i64 %4437, 30
  %4440 = load i64, i64* %6, align 8
  %4441 = add i64 %4440, -8
  %4442 = inttoptr i64 %4441 to i64*
  store i64 %4439, i64* %4442, align 8
  store i64 %4441, i64* %6, align 8
  store i64 %4438, i64* %3, align 8
  %call2_402428 = tail call %struct.Memory* @sub_40c3b0._Z13test_constantIm33custom_greaterthanequal_constantsImEEvPT_iPKc(%struct.State* nonnull %0, i64 %4438, %struct.Memory* %call2_40240a)
  %4443 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64* %RDI.i3611.pre-phi, align 8
  store i64 8000, i64* %RSI.i3626, align 8
  store i64 ptrtoint (%G__0x4197da_type* @G__0x4197da to i64), i64* %RDX.i3615, align 8
  %4444 = add i64 %4443, 40995
  %4445 = add i64 %4443, 30
  %4446 = load i64, i64* %6, align 8
  %4447 = add i64 %4446, -8
  %4448 = inttoptr i64 %4447 to i64*
  store i64 %4445, i64* %4448, align 8
  store i64 %4447, i64* %6, align 8
  store i64 %4444, i64* %3, align 8
  %call2_402446 = tail call %struct.Memory* @sub_40c450._Z13test_constantIm30custom_lessthanequal_constantsImEEvPT_iPKc(%struct.State* nonnull %0, i64 %4444, %struct.Memory* %call2_402428)
  %4449 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64* %RDI.i3611.pre-phi, align 8
  store i64 8000, i64* %RSI.i3626, align 8
  store i64 ptrtoint (%G__0x4197fd_type* @G__0x4197fd to i64), i64* %RDX.i3615, align 8
  %4450 = add i64 %4449, 41125
  %4451 = add i64 %4449, 30
  %4452 = load i64, i64* %6, align 8
  %4453 = add i64 %4452, -8
  %4454 = inttoptr i64 %4453 to i64*
  store i64 %4451, i64* %4454, align 8
  store i64 %4453, i64* %6, align 8
  store i64 %4450, i64* %3, align 8
  %call2_402464 = tail call %struct.Memory* @sub_40c4f0._Z13test_constantIm20custom_and_constantsImEEvPT_iPKc(%struct.State* nonnull %0, i64 %4450, %struct.Memory* %call2_402446)
  %4455 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64* %RDI.i3611.pre-phi, align 8
  store i64 8000, i64* %RSI.i3626, align 8
  store i64 ptrtoint (%G__0x419814_type* @G__0x419814 to i64), i64* %RDX.i3615, align 8
  %4456 = add i64 %4455, 41255
  %4457 = add i64 %4455, 30
  %4458 = load i64, i64* %6, align 8
  %4459 = add i64 %4458, -8
  %4460 = inttoptr i64 %4459 to i64*
  store i64 %4457, i64* %4460, align 8
  store i64 %4459, i64* %6, align 8
  store i64 %4456, i64* %3, align 8
  %call2_402482 = tail call %struct.Memory* @sub_40c590._Z13test_constantIm19custom_or_constantsImEEvPT_iPKc(%struct.State* nonnull %0, i64 %4456, %struct.Memory* %call2_402464)
  %4461 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64* %RDI.i3611.pre-phi, align 8
  store i64 8000, i64* %RSI.i3626, align 8
  store i64 ptrtoint (%G__0x41982a_type* @G__0x41982a to i64), i64* %RDX.i3615, align 8
  %4462 = add i64 %4461, 41385
  %4463 = add i64 %4461, 30
  %4464 = load i64, i64* %6, align 8
  %4465 = add i64 %4464, -8
  %4466 = inttoptr i64 %4465 to i64*
  store i64 %4463, i64* %4466, align 8
  store i64 %4465, i64* %6, align 8
  store i64 %4462, i64* %3, align 8
  %call2_4024a0 = tail call %struct.Memory* @sub_40c630._Z13test_constantIm20custom_xor_constantsImEEvPT_iPKc(%struct.State* nonnull %0, i64 %4462, %struct.Memory* %call2_402482)
  %4467 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64* %RDI.i3611.pre-phi, align 8
  store i64 8000, i64* %RSI.i3626, align 8
  store i64 10, i64* %206, align 8
  %4468 = load i32, i32* bitcast (%G_0x622080_type* @G_0x622080 to i32*), align 8
  %4469 = zext i32 %4468 to i64
  store i64 %4469, i64* %RAX.i3622, align 8
  %4470 = load i64, i64* %RBP.i, align 8
  %4471 = add i64 %4470, -112
  %4472 = add i64 %4467, 42
  store i64 %4472, i64* %3, align 8
  %4473 = inttoptr i64 %4471 to i64*
  store i64 ptrtoint (%G__0x419841_type* @G__0x419841 to i64), i64* %4473, align 8
  %4474 = load i64, i64* %3, align 8
  %4475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %4476 = load i32, i32* %EAX.i3390, align 8
  %4477 = sext i32 %4476 to i64
  %4478 = lshr i64 %4477, 32
  store i64 %4478, i64* %4475, align 8
  %4479 = load i32, i32* %R9D.i3585, align 4
  %4480 = add i64 %4474, 4
  store i64 %4480, i64* %3, align 8
  %4481 = zext i32 %4476 to i64
  %4482 = sext i32 %4479 to i64
  %4483 = shl nuw i64 %4478, 32
  %4484 = or i64 %4483, %4481
  %4485 = sdiv i64 %4484, %4482
  %4486 = shl i64 %4485, 32
  %4487 = ashr exact i64 %4486, 32
  %4488 = icmp eq i64 %4485, %4487
  br i1 %4488, label %4491, label %4489

; <label>:4489:                                   ; preds = %routine_ucomisd__xmm0___xmm1.exit
  %4490 = tail call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %4480, %struct.Memory* %call2_4024a0)
  %.pre8 = load i32, i32* %EAX.i3390, align 4
  %.pre9 = load i64, i64* %3, align 8
  br label %routine_idivl__r9d.exit447

; <label>:4491:                                   ; preds = %routine_ucomisd__xmm0___xmm1.exit
  %4492 = srem i64 %4484, %4482
  %4493 = and i64 %4485, 4294967295
  store i64 %4493, i64* %RAX.i3622, align 8
  %4494 = and i64 %4492, 4294967295
  store i64 %4494, i64* %RDX.i3615, align 8
  store i8 0, i8* %14, align 1
  store i8 0, i8* %21, align 1
  store i8 0, i8* %27, align 1
  store i8 0, i8* %30, align 1
  store i8 0, i8* %33, align 1
  store i8 0, i8* %39, align 1
  %4495 = trunc i64 %4485 to i32
  br label %routine_idivl__r9d.exit447

routine_idivl__r9d.exit447:                       ; preds = %4491, %4489
  %4496 = phi i64 [ %.pre9, %4489 ], [ %4480, %4491 ]
  %4497 = phi i32 [ %.pre8, %4489 ], [ %4495, %4491 ]
  %4498 = phi %struct.Memory* [ %4490, %4489 ], [ %call2_4024a0, %4491 ]
  store i32 %4497, i32* bitcast (%G_0x6220c0_type* @G_0x6220c0 to i32*), align 8
  %4499 = load i64, i64* %RBP.i, align 8
  %4500 = add i64 %4499, -112
  %4501 = add i64 %4496, 11
  store i64 %4501, i64* %3, align 8
  %4502 = inttoptr i64 %4500 to i64*
  %4503 = load i64, i64* %4502, align 8
  store i64 %4503, i64* %RCX.i3620, align 8
  store i64 %4503, i64* %RDX.i3615, align 8
  %4504 = add i64 %4496, 41469
  %4505 = add i64 %4496, 19
  %4506 = load i64, i64* %6, align 8
  %4507 = add i64 %4506, -8
  %4508 = inttoptr i64 %4507 to i64*
  store i64 %4505, i64* %4508, align 8
  store i64 %4507, i64* %6, align 8
  store i64 %4504, i64* %3, align 8
  %call2_4024e1 = tail call %struct.Memory* @sub_40c6d0._Z13test_constantIm19custom_constant_addImEEvPT_iPKc(%struct.State* nonnull %0, i64 %4504, %struct.Memory* %4498)
  %4509 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64* %RDI.i3611.pre-phi, align 8
  store i64 8000, i64* %RSI.i3626, align 8
  store i64 ptrtoint (%G__0x419857_type* @G__0x419857 to i64), i64* %RDX.i3615, align 8
  %4510 = add i64 %4509, 41610
  %4511 = add i64 %4509, 30
  %4512 = load i64, i64* %6, align 8
  %4513 = add i64 %4512, -8
  %4514 = inttoptr i64 %4513 to i64*
  store i64 %4511, i64* %4514, align 8
  store i64 %4513, i64* %6, align 8
  store i64 %4510, i64* %3, align 8
  %call2_4024ff = tail call %struct.Memory* @sub_40c770._Z13test_constantIm28custom_multiple_constant_addImEEvPT_iPKc(%struct.State* nonnull %0, i64 %4510, %struct.Memory* %call2_4024e1)
  %4515 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64* %RDI.i3611.pre-phi, align 8
  store i64 8000, i64* %RSI.i3626, align 8
  store i64 ptrtoint (%G__0x419877_type* @G__0x419877 to i64), i64* %RDX.i3615, align 8
  %4516 = add i64 %4515, 41740
  %4517 = add i64 %4515, 30
  %4518 = load i64, i64* %6, align 8
  %4519 = add i64 %4518, -8
  %4520 = inttoptr i64 %4519 to i64*
  store i64 %4517, i64* %4520, align 8
  store i64 %4519, i64* %6, align 8
  store i64 %4516, i64* %3, align 8
  %call2_40251d = tail call %struct.Memory* @sub_40c810._Z13test_constantIm19custom_constant_subImEEvPT_iPKc(%struct.State* nonnull %0, i64 %4516, %struct.Memory* %call2_4024ff)
  %4521 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64* %RDI.i3611.pre-phi, align 8
  store i64 8000, i64* %RSI.i3626, align 8
  store i64 ptrtoint (%G__0x419892_type* @G__0x419892 to i64), i64* %RDX.i3615, align 8
  %4522 = add i64 %4521, 41870
  %4523 = add i64 %4521, 30
  %4524 = load i64, i64* %6, align 8
  %4525 = add i64 %4524, -8
  %4526 = inttoptr i64 %4525 to i64*
  store i64 %4523, i64* %4526, align 8
  store i64 %4525, i64* %6, align 8
  store i64 %4522, i64* %3, align 8
  %call2_40253b = tail call %struct.Memory* @sub_40c8b0._Z13test_constantIm28custom_multiple_constant_subImEEvPT_iPKc(%struct.State* nonnull %0, i64 %4522, %struct.Memory* %call2_40251d)
  %4527 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64* %RDI.i3611.pre-phi, align 8
  store i64 8000, i64* %RSI.i3626, align 8
  store i64 ptrtoint (%G__0x4198b7_type* @G__0x4198b7 to i64), i64* %RDX.i3615, align 8
  %4528 = add i64 %4527, 42000
  %4529 = add i64 %4527, 30
  %4530 = load i64, i64* %6, align 8
  %4531 = add i64 %4530, -8
  %4532 = inttoptr i64 %4531 to i64*
  store i64 %4529, i64* %4532, align 8
  store i64 %4531, i64* %6, align 8
  store i64 %4528, i64* %3, align 8
  %call2_402559 = tail call %struct.Memory* @sub_40c950._Z13test_constantIm24custom_constant_multiplyImEEvPT_iPKc(%struct.State* nonnull %0, i64 %4528, %struct.Memory* %call2_40253b)
  %4533 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64* %RDI.i3611.pre-phi, align 8
  store i64 8000, i64* %RSI.i3626, align 8
  store i64 ptrtoint (%G__0x4198d2_type* @G__0x4198d2 to i64), i64* %RDX.i3615, align 8
  %4534 = add i64 %4533, 42130
  %4535 = add i64 %4533, 30
  %4536 = load i64, i64* %6, align 8
  %4537 = add i64 %4536, -8
  %4538 = inttoptr i64 %4537 to i64*
  store i64 %4535, i64* %4538, align 8
  store i64 %4537, i64* %6, align 8
  store i64 %4534, i64* %3, align 8
  %call2_402577 = tail call %struct.Memory* @sub_40c9f0._Z13test_constantIm33custom_multiple_constant_multiplyImEEvPT_iPKc(%struct.State* nonnull %0, i64 %4534, %struct.Memory* %call2_402559)
  %4539 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64* %RDI.i3611.pre-phi, align 8
  store i64 8000, i64* %RSI.i3626, align 8
  store i64 ptrtoint (%G__0x4198f8_type* @G__0x4198f8 to i64), i64* %RDX.i3615, align 8
  %4540 = add i64 %4539, 42260
  %4541 = add i64 %4539, 30
  %4542 = load i64, i64* %6, align 8
  %4543 = add i64 %4542, -8
  %4544 = inttoptr i64 %4543 to i64*
  store i64 %4541, i64* %4544, align 8
  store i64 %4543, i64* %6, align 8
  store i64 %4540, i64* %3, align 8
  %call2_402595 = tail call %struct.Memory* @sub_40ca90._Z13test_constantIm34custom_multiple_constant_multiply2ImEEvPT_iPKc(%struct.State* nonnull %0, i64 %4540, %struct.Memory* %call2_402577)
  %4545 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64* %RDI.i3611.pre-phi, align 8
  store i64 8000, i64* %RSI.i3626, align 8
  store i64 ptrtoint (%G__0x41991d_type* @G__0x41991d to i64), i64* %RDX.i3615, align 8
  %4546 = add i64 %4545, 42390
  %4547 = add i64 %4545, 30
  %4548 = load i64, i64* %6, align 8
  %4549 = add i64 %4548, -8
  %4550 = inttoptr i64 %4549 to i64*
  store i64 %4547, i64* %4550, align 8
  store i64 %4549, i64* %6, align 8
  store i64 %4546, i64* %3, align 8
  %call2_4025b3 = tail call %struct.Memory* @sub_40cb30._Z13test_constantIm22custom_constant_divideImEEvPT_iPKc(%struct.State* nonnull %0, i64 %4546, %struct.Memory* %call2_402595)
  %4551 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64* %RDI.i3611.pre-phi, align 8
  store i64 8000, i64* %RSI.i3626, align 8
  store i64 ptrtoint (%G__0x419936_type* @G__0x419936 to i64), i64* %RDX.i3615, align 8
  %4552 = add i64 %4551, 42520
  %4553 = add i64 %4551, 30
  %4554 = load i64, i64* %6, align 8
  %4555 = add i64 %4554, -8
  %4556 = inttoptr i64 %4555 to i64*
  store i64 %4553, i64* %4556, align 8
  store i64 %4555, i64* %6, align 8
  store i64 %4552, i64* %3, align 8
  %call2_4025d1 = tail call %struct.Memory* @sub_40cbd0._Z13test_constantIm31custom_multiple_constant_divideImEEvPT_iPKc(%struct.State* nonnull %0, i64 %4552, %struct.Memory* %call2_4025b3)
  %4557 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64* %RDI.i3611.pre-phi, align 8
  store i64 8000, i64* %RSI.i3626, align 8
  store i64 ptrtoint (%G__0x419959_type* @G__0x419959 to i64), i64* %RDX.i3615, align 8
  %4558 = add i64 %4557, 42650
  %4559 = add i64 %4557, 30
  %4560 = load i64, i64* %6, align 8
  %4561 = add i64 %4560, -8
  %4562 = inttoptr i64 %4561 to i64*
  store i64 %4559, i64* %4562, align 8
  store i64 %4561, i64* %6, align 8
  store i64 %4558, i64* %3, align 8
  %call2_4025ef = tail call %struct.Memory* @sub_40cc70._Z13test_constantIm32custom_multiple_constant_divide2ImEEvPT_iPKc(%struct.State* nonnull %0, i64 %4558, %struct.Memory* %call2_4025d1)
  %4563 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64* %RDI.i3611.pre-phi, align 8
  store i64 8000, i64* %RSI.i3626, align 8
  store i64 ptrtoint (%G__0x41997c_type* @G__0x41997c to i64), i64* %RDX.i3615, align 8
  %4564 = add i64 %4563, 42780
  %4565 = add i64 %4563, 30
  %4566 = load i64, i64* %6, align 8
  %4567 = add i64 %4566, -8
  %4568 = inttoptr i64 %4567 to i64*
  store i64 %4565, i64* %4568, align 8
  store i64 %4567, i64* %6, align 8
  store i64 %4564, i64* %3, align 8
  %call2_40260d = tail call %struct.Memory* @sub_40cd10._Z13test_constantIm30custom_multiple_constant_mixedImEEvPT_iPKc(%struct.State* nonnull %0, i64 %4564, %struct.Memory* %call2_4025ef)
  %4569 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64* %RDI.i3611.pre-phi, align 8
  store i64 8000, i64* %RSI.i3626, align 8
  store i64 ptrtoint (%G__0x41999d_type* @G__0x41999d to i64), i64* %RDX.i3615, align 8
  %4570 = add i64 %4569, 42910
  %4571 = add i64 %4569, 30
  %4572 = load i64, i64* %6, align 8
  %4573 = add i64 %4572, -8
  %4574 = inttoptr i64 %4573 to i64*
  store i64 %4571, i64* %4574, align 8
  store i64 %4573, i64* %6, align 8
  store i64 %4570, i64* %3, align 8
  %call2_40262b = tail call %struct.Memory* @sub_40cdb0._Z13test_constantIm19custom_constant_andImEEvPT_iPKc(%struct.State* nonnull %0, i64 %4570, %struct.Memory* %call2_40260d)
  %4575 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64* %RDI.i3611.pre-phi, align 8
  store i64 8000, i64* %RSI.i3626, align 8
  store i64 ptrtoint (%G__0x4199b3_type* @G__0x4199b3 to i64), i64* %RDX.i3615, align 8
  %4576 = add i64 %4575, 43040
  %4577 = add i64 %4575, 30
  %4578 = load i64, i64* %6, align 8
  %4579 = add i64 %4578, -8
  %4580 = inttoptr i64 %4579 to i64*
  store i64 %4577, i64* %4580, align 8
  store i64 %4579, i64* %6, align 8
  store i64 %4576, i64* %3, align 8
  %call2_402649 = tail call %struct.Memory* @sub_40ce50._Z13test_constantIm28custom_multiple_constant_andImEEvPT_iPKc(%struct.State* nonnull %0, i64 %4576, %struct.Memory* %call2_40262b)
  %4581 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64* %RDI.i3611.pre-phi, align 8
  store i64 8000, i64* %RSI.i3626, align 8
  store i64 ptrtoint (%G__0x4199d2_type* @G__0x4199d2 to i64), i64* %RDX.i3615, align 8
  %4582 = add i64 %4581, 43170
  %4583 = add i64 %4581, 30
  %4584 = load i64, i64* %6, align 8
  %4585 = add i64 %4584, -8
  %4586 = inttoptr i64 %4585 to i64*
  store i64 %4583, i64* %4586, align 8
  store i64 %4585, i64* %6, align 8
  store i64 %4582, i64* %3, align 8
  %call2_402667 = tail call %struct.Memory* @sub_40cef0._Z13test_constantIm18custom_constant_orImEEvPT_iPKc(%struct.State* nonnull %0, i64 %4582, %struct.Memory* %call2_402649)
  %4587 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64* %RDI.i3611.pre-phi, align 8
  store i64 8000, i64* %RSI.i3626, align 8
  store i64 ptrtoint (%G__0x4199e7_type* @G__0x4199e7 to i64), i64* %RDX.i3615, align 8
  %4588 = add i64 %4587, 43300
  %4589 = add i64 %4587, 30
  %4590 = load i64, i64* %6, align 8
  %4591 = add i64 %4590, -8
  %4592 = inttoptr i64 %4591 to i64*
  store i64 %4589, i64* %4592, align 8
  store i64 %4591, i64* %6, align 8
  store i64 %4588, i64* %3, align 8
  %call2_402685 = tail call %struct.Memory* @sub_40cf90._Z13test_constantIm27custom_multiple_constant_orImEEvPT_iPKc(%struct.State* nonnull %0, i64 %4588, %struct.Memory* %call2_402667)
  %4593 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64* %RDI.i3611.pre-phi, align 8
  store i64 8000, i64* %RSI.i3626, align 8
  store i64 ptrtoint (%G__0x419a05_type* @G__0x419a05 to i64), i64* %RDX.i3615, align 8
  %4594 = add i64 %4593, 43430
  %4595 = add i64 %4593, 30
  %4596 = load i64, i64* %6, align 8
  %4597 = add i64 %4596, -8
  %4598 = inttoptr i64 %4597 to i64*
  store i64 %4595, i64* %4598, align 8
  store i64 %4597, i64* %6, align 8
  store i64 %4594, i64* %3, align 8
  %call2_4026a3 = tail call %struct.Memory* @sub_40d030._Z13test_constantIm19custom_constant_xorImEEvPT_iPKc(%struct.State* nonnull %0, i64 %4594, %struct.Memory* %call2_402685)
  %4599 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64* %RDI.i3611.pre-phi, align 8
  store i64 8000, i64* %RSI.i3626, align 8
  store i64 ptrtoint (%G__0x419a1b_type* @G__0x419a1b to i64), i64* %RDX.i3615, align 8
  %4600 = add i64 %4599, 43560
  %4601 = add i64 %4599, 30
  %4602 = load i64, i64* %6, align 8
  %4603 = add i64 %4602, -8
  %4604 = inttoptr i64 %4603 to i64*
  store i64 %4601, i64* %4604, align 8
  store i64 %4603, i64* %6, align 8
  store i64 %4600, i64* %3, align 8
  %call2_4026c1 = tail call %struct.Memory* @sub_40d0d0._Z13test_constantIm28custom_multiple_constant_xorImEEvPT_iPKc(%struct.State* nonnull %0, i64 %4600, %struct.Memory* %call2_4026a3)
  %4605 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x631ad0_type* @G__0x631ad0 to i64), i64* %RCX.i3620, align 8
  store i64 add (i64 ptrtoint (%G__0x631ad0_type* @G__0x631ad0 to i64), i64 32000), i64* %RDX.i3615, align 8
  store i8 zext (i1 or (i1 icmp ult (i64 add (i64 ptrtoint (%G__0x631ad0_type* @G__0x631ad0 to i64), i64 32000), i64 ptrtoint (%G__0x631ad0_type* @G__0x631ad0 to i64)), i1 icmp ult (i64 add (i64 ptrtoint (%G__0x631ad0_type* @G__0x631ad0 to i64), i64 32000), i64 32000)) to i8), i8* %14, align 1
  %4606 = tail call i32 @llvm.ctpop.i32(i32 and (i32 trunc (i64 add (i64 ptrtoint (%G__0x631ad0_type* @G__0x631ad0 to i64), i64 32000) to i32), i32 255))
  %4607 = trunc i32 %4606 to i8
  %4608 = and i8 %4607, 1
  %4609 = xor i8 %4608, 1
  store i8 %4609, i8* %21, align 1
  store i8 and (i8 trunc (i64 lshr (i64 xor (i64 xor (i64 ptrtoint (%G__0x631ad0_type* @G__0x631ad0 to i64), i64 32000), i64 add (i64 ptrtoint (%G__0x631ad0_type* @G__0x631ad0 to i64), i64 32000)), i64 4) to i8), i8 1), i8* %27, align 1
  store i8 zext (i1 icmp eq (i64 add (i64 ptrtoint (%G__0x631ad0_type* @G__0x631ad0 to i64), i64 32000), i64 0) to i8), i8* %30, align 1
  store i8 trunc (i64 lshr (i64 add (i64 ptrtoint (%G__0x631ad0_type* @G__0x631ad0 to i64), i64 32000), i64 63) to i8), i8* %33, align 1
  store i8 zext (i1 icmp eq (i64 add (i64 xor (i64 lshr (i64 add (i64 ptrtoint (%G__0x631ad0_type* @G__0x631ad0 to i64), i64 32000), i64 63), i64 lshr (i64 ptrtoint (%G__0x631ad0_type* @G__0x631ad0 to i64), i64 63)), i64 lshr (i64 add (i64 ptrtoint (%G__0x631ad0_type* @G__0x631ad0 to i64), i64 32000), i64 63)), i64 2) to i8), i8* %39, align 1
  %4610 = load <2 x i32>, <2 x i32>* %4289, align 1
  %4611 = load <2 x i32>, <2 x i32>* %4291, align 1
  %4612 = load double, double* bitcast (%G_0x622088_type* @G_0x622088 to double*), align 8
  %4613 = fptrunc double %4612 to float
  %4614 = bitcast [32 x %union.VectorReg]* %2512 to float*
  store float %4613, float* %4614, align 1
  %4615 = extractelement <2 x i32> %4610, i32 1
  %4616 = getelementptr inbounds i8, i8* %2513, i64 4
  %4617 = bitcast i8* %4616 to i32*
  store i32 %4615, i32* %4617, align 1
  %4618 = extractelement <2 x i32> %4611, i32 0
  %4619 = bitcast i64* %2520 to i32*
  store i32 %4618, i32* %4619, align 1
  %4620 = extractelement <2 x i32> %4611, i32 1
  %4621 = getelementptr inbounds i8, i8* %2513, i64 12
  %4622 = bitcast i8* %4621 to i32*
  store i32 %4620, i32* %4622, align 1
  store i64 ptrtoint (%G__0x631ad0_type* @G__0x631ad0 to i64), i64* %RDI.i3611.pre-phi, align 8
  store i64 add (i64 ptrtoint (%G__0x631ad0_type* @G__0x631ad0 to i64), i64 32000), i64* %RSI.i3626, align 8
  %4623 = add i64 %4605, 43690
  %4624 = add i64 %4605, 40
  %4625 = load i64, i64* %6, align 8
  %4626 = add i64 %4625, -8
  %4627 = inttoptr i64 %4626 to i64*
  store i64 %4624, i64* %4627, align 8
  store i64 %4626, i64* %6, align 8
  store i64 %4623, i64* %3, align 8
  %call2_4026e9 = tail call %struct.Memory* @sub_40d170._Z4fillIPffEvT_S1_T0_(%struct.State* nonnull %0, i64 %4623, %struct.Memory* %call2_4026c1)
  %4628 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x631ad0_type* @G__0x631ad0 to i64), i64* %RDI.i3611.pre-phi, align 8
  store i64 8000, i64* %RSI.i3626, align 8
  store i64 ptrtoint (%G__0x419a3a_type* @G__0x419a3a to i64), i64* %RDX.i3615, align 8
  %4629 = load i32, i32* bitcast (%G_0x622080_type* @G_0x622080 to i32*), align 8
  %4630 = zext i32 %4629 to i64
  store i64 %4630, i64* %RAX.i3622, align 8
  store i32 %4629, i32* bitcast (%G_0x6220c0_type* @G_0x6220c0 to i32*), align 8
  %4631 = add i64 %4628, 43714
  %4632 = add i64 %4628, 44
  %4633 = load i64, i64* %6, align 8
  %4634 = add i64 %4633, -8
  %4635 = inttoptr i64 %4634 to i64*
  store i64 %4632, i64* %4635, align 8
  store i64 %4634, i64* %6, align 8
  store i64 %4631, i64* %3, align 8
  %call2_402715 = tail call %struct.Memory* @sub_40d1b0._Z13test_constantIf10custom_twoIfEEvPT_iPKc(%struct.State* nonnull %0, i64 %4631, %struct.Memory* %call2_4026e9)
  %4636 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x631ad0_type* @G__0x631ad0 to i64), i64* %RDI.i3611.pre-phi, align 8
  store i64 8000, i64* %RSI.i3626, align 8
  store i64 ptrtoint (%G__0x419a49_type* @G__0x419a49 to i64), i64* %RDX.i3615, align 8
  %4637 = add i64 %4636, 43830
  %4638 = add i64 %4636, 30
  %4639 = load i64, i64* %6, align 8
  %4640 = add i64 %4639, -8
  %4641 = inttoptr i64 %4640 to i64*
  store i64 %4638, i64* %4641, align 8
  store i64 %4640, i64* %6, align 8
  store i64 %4637, i64* %3, align 8
  %call2_402733 = tail call %struct.Memory* @sub_40d250._Z13test_constantIf20custom_add_constantsIfEEvPT_iPKc(%struct.State* nonnull %0, i64 %4637, %struct.Memory* %call2_402715)
  %4642 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x631ad0_type* @G__0x631ad0 to i64), i64* %RDI.i3611.pre-phi, align 8
  store i64 8000, i64* %RSI.i3626, align 8
  store i64 ptrtoint (%G__0x419a5d_type* @G__0x419a5d to i64), i64* %RDX.i3615, align 8
  %4643 = add i64 %4642, 43960
  %4644 = add i64 %4642, 30
  %4645 = load i64, i64* %6, align 8
  %4646 = add i64 %4645, -8
  %4647 = inttoptr i64 %4646 to i64*
  store i64 %4644, i64* %4647, align 8
  store i64 %4646, i64* %6, align 8
  store i64 %4643, i64* %3, align 8
  %call2_402751 = tail call %struct.Memory* @sub_40d2f0._Z13test_constantIf20custom_sub_constantsIfEEvPT_iPKc(%struct.State* nonnull %0, i64 %4643, %struct.Memory* %call2_402733)
  %4648 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x631ad0_type* @G__0x631ad0 to i64), i64* %RDI.i3611.pre-phi, align 8
  store i64 8000, i64* %RSI.i3626, align 8
  store i64 ptrtoint (%G__0x419a76_type* @G__0x419a76 to i64), i64* %RDX.i3615, align 8
  %4649 = add i64 %4648, 44090
  %4650 = add i64 %4648, 30
  %4651 = load i64, i64* %6, align 8
  %4652 = add i64 %4651, -8
  %4653 = inttoptr i64 %4652 to i64*
  store i64 %4650, i64* %4653, align 8
  store i64 %4652, i64* %6, align 8
  store i64 %4649, i64* %3, align 8
  %call2_40276f = tail call %struct.Memory* @sub_40d390._Z13test_constantIf25custom_multiply_constantsIfEEvPT_iPKc(%struct.State* nonnull %0, i64 %4649, %struct.Memory* %call2_402751)
  %4654 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x631ad0_type* @G__0x631ad0 to i64), i64* %RDI.i3611.pre-phi, align 8
  store i64 8000, i64* %RSI.i3626, align 8
  store i64 ptrtoint (%G__0x419a8f_type* @G__0x419a8f to i64), i64* %RDX.i3615, align 8
  %4655 = add i64 %4654, 44220
  %4656 = add i64 %4654, 30
  %4657 = load i64, i64* %6, align 8
  %4658 = add i64 %4657, -8
  %4659 = inttoptr i64 %4658 to i64*
  store i64 %4656, i64* %4659, align 8
  store i64 %4658, i64* %6, align 8
  store i64 %4655, i64* %3, align 8
  %call2_40278d = tail call %struct.Memory* @sub_40d430._Z13test_constantIf23custom_divide_constantsIfEEvPT_iPKc(%struct.State* nonnull %0, i64 %4655, %struct.Memory* %call2_40276f)
  %4660 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x631ad0_type* @G__0x631ad0 to i64), i64* %RDI.i3611.pre-phi, align 8
  store i64 8000, i64* %RSI.i3626, align 8
  store i64 ptrtoint (%G__0x419aa6_type* @G__0x419aa6 to i64), i64* %RDX.i3615, align 8
  %4661 = load i32, i32* bitcast (%G_0x622080_type* @G_0x622080 to i32*), align 8
  %4662 = zext i32 %4661 to i64
  store i64 %4662, i64* %206, align 8
  %4663 = load i64, i64* %RBP.i, align 8
  %4664 = add i64 %4663, -116
  %4665 = add i64 %4660, 41
  store i64 %4665, i64* %3, align 8
  %4666 = inttoptr i64 %4664 to i32*
  store i32 10, i32* %4666, align 4
  %4667 = load i32, i32* %R9D.i3585, align 4
  %4668 = zext i32 %4667 to i64
  %4669 = load i64, i64* %3, align 8
  store i64 %4668, i64* %RAX.i3622, align 8
  %4670 = load i64, i64* %RBP.i, align 8
  %4671 = add i64 %4670, -128
  %4672 = load i64, i64* %RDX.i3615, align 8
  %4673 = add i64 %4669, 7
  store i64 %4673, i64* %3, align 8
  %4674 = inttoptr i64 %4671 to i64*
  store i64 %4672, i64* %4674, align 8
  %4675 = load i64, i64* %3, align 8
  %4676 = load i32, i32* %EAX.i3390, align 8
  %4677 = sext i32 %4676 to i64
  %4678 = lshr i64 %4677, 32
  store i64 %4678, i64* %4475, align 8
  %4679 = load i64, i64* %RBP.i, align 8
  %4680 = add i64 %4679, -116
  %4681 = add i64 %4675, 5
  store i64 %4681, i64* %3, align 8
  %4682 = inttoptr i64 %4680 to i32*
  %4683 = load i32, i32* %4682, align 4
  %4684 = zext i32 %4683 to i64
  store i64 %4684, i64* %206, align 8
  %4685 = add i64 %4675, 8
  store i64 %4685, i64* %3, align 8
  %4686 = zext i32 %4676 to i64
  %4687 = sext i32 %4683 to i64
  %4688 = shl nuw i64 %4678, 32
  %4689 = or i64 %4688, %4686
  %4690 = sdiv i64 %4689, %4687
  %4691 = shl i64 %4690, 32
  %4692 = ashr exact i64 %4691, 32
  %4693 = icmp eq i64 %4690, %4692
  br i1 %4693, label %4696, label %4694

; <label>:4694:                                   ; preds = %routine_idivl__r9d.exit447
  %4695 = tail call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %4685, %struct.Memory* %call2_40278d)
  %.pre10 = load i32, i32* %EAX.i3390, align 4
  %.pre11 = load i64, i64* %3, align 8
  %.pre12 = load i64, i64* %RBP.i, align 8
  br label %routine_idivl__r9d.exit243

; <label>:4696:                                   ; preds = %routine_idivl__r9d.exit447
  %4697 = srem i64 %4689, %4687
  %4698 = and i64 %4690, 4294967295
  store i64 %4698, i64* %RAX.i3622, align 8
  %4699 = and i64 %4697, 4294967295
  store i64 %4699, i64* %RDX.i3615, align 8
  store i8 0, i8* %14, align 1
  store i8 0, i8* %21, align 1
  store i8 0, i8* %27, align 1
  store i8 0, i8* %30, align 1
  store i8 0, i8* %33, align 1
  store i8 0, i8* %39, align 1
  %4700 = trunc i64 %4690 to i32
  br label %routine_idivl__r9d.exit243

routine_idivl__r9d.exit243:                       ; preds = %4696, %4694
  %4701 = phi i64 [ %.pre12, %4694 ], [ %4679, %4696 ]
  %4702 = phi i64 [ %.pre11, %4694 ], [ %4685, %4696 ]
  %4703 = phi i32 [ %.pre10, %4694 ], [ %4700, %4696 ]
  %4704 = phi %struct.Memory* [ %4695, %4694 ], [ %call2_40278d, %4696 ]
  store i32 %4703, i32* bitcast (%G_0x6220c0_type* @G_0x6220c0 to i32*), align 8
  %4705 = add i64 %4701, -128
  %4706 = add i64 %4702, 11
  store i64 %4706, i64* %3, align 8
  %4707 = inttoptr i64 %4705 to i64*
  %4708 = load i64, i64* %4707, align 8
  store i64 %4708, i64* %RCX.i3620, align 8
  store i64 %4708, i64* %RDX.i3615, align 8
  %4709 = add i64 %4702, 44294
  %4710 = add i64 %4702, 19
  %4711 = load i64, i64* %6, align 8
  %4712 = add i64 %4711, -8
  %4713 = inttoptr i64 %4712 to i64*
  store i64 %4710, i64* %4713, align 8
  store i64 %4712, i64* %6, align 8
  store i64 %4709, i64* %3, align 8
  %call2_4027d8 = tail call %struct.Memory* @sub_40d4d0._Z13test_constantIf19custom_constant_addIfEEvPT_iPKc(%struct.State* nonnull %0, i64 %4709, %struct.Memory* %4704)
  %4714 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x631ad0_type* @G__0x631ad0 to i64), i64* %RDI.i3611.pre-phi, align 8
  store i64 8000, i64* %RSI.i3626, align 8
  store i64 ptrtoint (%G__0x419ab9_type* @G__0x419ab9 to i64), i64* %RDX.i3615, align 8
  %4715 = add i64 %4714, 44435
  %4716 = add i64 %4714, 30
  %4717 = load i64, i64* %6, align 8
  %4718 = add i64 %4717, -8
  %4719 = inttoptr i64 %4718 to i64*
  store i64 %4716, i64* %4719, align 8
  store i64 %4718, i64* %6, align 8
  store i64 %4715, i64* %3, align 8
  %call2_4027f6 = tail call %struct.Memory* @sub_40d570._Z13test_constantIf28custom_multiple_constant_addIfEEvPT_iPKc(%struct.State* nonnull %0, i64 %4715, %struct.Memory* %call2_4027d8)
  %4720 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x631ad0_type* @G__0x631ad0 to i64), i64* %RDI.i3611.pre-phi, align 8
  store i64 8000, i64* %RSI.i3626, align 8
  store i64 ptrtoint (%G__0x419ad6_type* @G__0x419ad6 to i64), i64* %RDX.i3615, align 8
  %4721 = add i64 %4720, 44565
  %4722 = add i64 %4720, 30
  %4723 = load i64, i64* %6, align 8
  %4724 = add i64 %4723, -8
  %4725 = inttoptr i64 %4724 to i64*
  store i64 %4722, i64* %4725, align 8
  store i64 %4724, i64* %6, align 8
  store i64 %4721, i64* %3, align 8
  %call2_402814 = tail call %struct.Memory* @sub_40d610._Z13test_constantIf19custom_constant_subIfEEvPT_iPKc(%struct.State* nonnull %0, i64 %4721, %struct.Memory* %call2_4027f6)
  %4726 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x631ad0_type* @G__0x631ad0 to i64), i64* %RDI.i3611.pre-phi, align 8
  store i64 8000, i64* %RSI.i3626, align 8
  store i64 ptrtoint (%G__0x419aee_type* @G__0x419aee to i64), i64* %RDX.i3615, align 8
  %4727 = add i64 %4726, 44695
  %4728 = add i64 %4726, 30
  %4729 = load i64, i64* %6, align 8
  %4730 = add i64 %4729, -8
  %4731 = inttoptr i64 %4730 to i64*
  store i64 %4728, i64* %4731, align 8
  store i64 %4730, i64* %6, align 8
  store i64 %4727, i64* %3, align 8
  %call2_402832 = tail call %struct.Memory* @sub_40d6b0._Z13test_constantIf28custom_multiple_constant_subIfEEvPT_iPKc(%struct.State* nonnull %0, i64 %4727, %struct.Memory* %call2_402814)
  %4732 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x631ad0_type* @G__0x631ad0 to i64), i64* %RDI.i3611.pre-phi, align 8
  store i64 8000, i64* %RSI.i3626, align 8
  store i64 ptrtoint (%G__0x419b10_type* @G__0x419b10 to i64), i64* %RDX.i3615, align 8
  %4733 = add i64 %4732, 44825
  %4734 = add i64 %4732, 30
  %4735 = load i64, i64* %6, align 8
  %4736 = add i64 %4735, -8
  %4737 = inttoptr i64 %4736 to i64*
  store i64 %4734, i64* %4737, align 8
  store i64 %4736, i64* %6, align 8
  store i64 %4733, i64* %3, align 8
  %call2_402850 = tail call %struct.Memory* @sub_40d750._Z13test_constantIf24custom_constant_multiplyIfEEvPT_iPKc(%struct.State* nonnull %0, i64 %4733, %struct.Memory* %call2_402832)
  %4738 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x631ad0_type* @G__0x631ad0 to i64), i64* %RDI.i3611.pre-phi, align 8
  store i64 8000, i64* %RSI.i3626, align 8
  store i64 ptrtoint (%G__0x419b28_type* @G__0x419b28 to i64), i64* %RDX.i3615, align 8
  %4739 = add i64 %4738, 44955
  %4740 = add i64 %4738, 30
  %4741 = load i64, i64* %6, align 8
  %4742 = add i64 %4741, -8
  %4743 = inttoptr i64 %4742 to i64*
  store i64 %4740, i64* %4743, align 8
  store i64 %4742, i64* %6, align 8
  store i64 %4739, i64* %3, align 8
  %call2_40286e = tail call %struct.Memory* @sub_40d7f0._Z13test_constantIf33custom_multiple_constant_multiplyIfEEvPT_iPKc(%struct.State* nonnull %0, i64 %4739, %struct.Memory* %call2_402850)
  %4744 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x631ad0_type* @G__0x631ad0 to i64), i64* %RDI.i3611.pre-phi, align 8
  store i64 8000, i64* %RSI.i3626, align 8
  store i64 ptrtoint (%G__0x419b4b_type* @G__0x419b4b to i64), i64* %RDX.i3615, align 8
  %4745 = add i64 %4744, 45085
  %4746 = add i64 %4744, 30
  %4747 = load i64, i64* %6, align 8
  %4748 = add i64 %4747, -8
  %4749 = inttoptr i64 %4748 to i64*
  store i64 %4746, i64* %4749, align 8
  store i64 %4748, i64* %6, align 8
  store i64 %4745, i64* %3, align 8
  %call2_40288c = tail call %struct.Memory* @sub_40d890._Z13test_constantIf34custom_multiple_constant_multiply2IfEEvPT_iPKc(%struct.State* nonnull %0, i64 %4745, %struct.Memory* %call2_40286e)
  %4750 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x631ad0_type* @G__0x631ad0 to i64), i64* %RDI.i3611.pre-phi, align 8
  store i64 8000, i64* %RSI.i3626, align 8
  store i64 ptrtoint (%G__0x419b6d_type* @G__0x419b6d to i64), i64* %RDX.i3615, align 8
  %4751 = add i64 %4750, 45215
  %4752 = add i64 %4750, 30
  %4753 = load i64, i64* %6, align 8
  %4754 = add i64 %4753, -8
  %4755 = inttoptr i64 %4754 to i64*
  store i64 %4752, i64* %4755, align 8
  store i64 %4754, i64* %6, align 8
  store i64 %4751, i64* %3, align 8
  %call2_4028aa = tail call %struct.Memory* @sub_40d930._Z13test_constantIf22custom_constant_divideIfEEvPT_iPKc(%struct.State* nonnull %0, i64 %4751, %struct.Memory* %call2_40288c)
  %4756 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x631ad0_type* @G__0x631ad0 to i64), i64* %RDI.i3611.pre-phi, align 8
  store i64 8000, i64* %RSI.i3626, align 8
  store i64 ptrtoint (%G__0x419b83_type* @G__0x419b83 to i64), i64* %RDX.i3615, align 8
  %4757 = add i64 %4756, 45345
  %4758 = add i64 %4756, 30
  %4759 = load i64, i64* %6, align 8
  %4760 = add i64 %4759, -8
  %4761 = inttoptr i64 %4760 to i64*
  store i64 %4758, i64* %4761, align 8
  store i64 %4760, i64* %6, align 8
  store i64 %4757, i64* %3, align 8
  %call2_4028c8 = tail call %struct.Memory* @sub_40d9d0._Z13test_constantIf31custom_multiple_constant_divideIfEEvPT_iPKc(%struct.State* nonnull %0, i64 %4757, %struct.Memory* %call2_4028aa)
  %4762 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x631ad0_type* @G__0x631ad0 to i64), i64* %RDI.i3611.pre-phi, align 8
  store i64 8000, i64* %RSI.i3626, align 8
  store i64 ptrtoint (%G__0x419ba3_type* @G__0x419ba3 to i64), i64* %RDX.i3615, align 8
  %4763 = add i64 %4762, 45475
  %4764 = add i64 %4762, 30
  %4765 = load i64, i64* %6, align 8
  %4766 = add i64 %4765, -8
  %4767 = inttoptr i64 %4766 to i64*
  store i64 %4764, i64* %4767, align 8
  store i64 %4766, i64* %6, align 8
  store i64 %4763, i64* %3, align 8
  %call2_4028e6 = tail call %struct.Memory* @sub_40da70._Z13test_constantIf32custom_multiple_constant_divide2IfEEvPT_iPKc(%struct.State* nonnull %0, i64 %4763, %struct.Memory* %call2_4028c8)
  %4768 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x631ad0_type* @G__0x631ad0 to i64), i64* %RDI.i3611.pre-phi, align 8
  store i64 8000, i64* %RSI.i3626, align 8
  store i64 ptrtoint (%G__0x419bc3_type* @G__0x419bc3 to i64), i64* %RDX.i3615, align 8
  %4769 = add i64 %4768, 45605
  %4770 = add i64 %4768, 30
  %4771 = load i64, i64* %6, align 8
  %4772 = add i64 %4771, -8
  %4773 = inttoptr i64 %4772 to i64*
  store i64 %4770, i64* %4773, align 8
  store i64 %4772, i64* %6, align 8
  store i64 %4769, i64* %3, align 8
  %call2_402904 = tail call %struct.Memory* @sub_40db10._Z13test_constantIf30custom_multiple_constant_mixedIfEEvPT_iPKc(%struct.State* nonnull %0, i64 %4769, %struct.Memory* %call2_4028e6)
  %4774 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x6220d0_type* @G__0x6220d0 to i64), i64* %RCX.i3620, align 8
  store i64 add (i64 ptrtoint (%G__0x6220d0_type* @G__0x6220d0 to i64), i64 64000), i64* %RDX.i3615, align 8
  store i8 zext (i1 or (i1 icmp ult (i64 add (i64 ptrtoint (%G__0x6220d0_type* @G__0x6220d0 to i64), i64 64000), i64 ptrtoint (%G__0x6220d0_type* @G__0x6220d0 to i64)), i1 icmp ult (i64 add (i64 ptrtoint (%G__0x6220d0_type* @G__0x6220d0 to i64), i64 64000), i64 64000)) to i8), i8* %14, align 1
  %4775 = tail call i32 @llvm.ctpop.i32(i32 and (i32 trunc (i64 add (i64 ptrtoint (%G__0x6220d0_type* @G__0x6220d0 to i64), i64 64000) to i32), i32 255))
  %4776 = trunc i32 %4775 to i8
  %4777 = and i8 %4776, 1
  %4778 = xor i8 %4777, 1
  store i8 %4778, i8* %21, align 1
  store i8 and (i8 trunc (i64 lshr (i64 xor (i64 xor (i64 ptrtoint (%G__0x6220d0_type* @G__0x6220d0 to i64), i64 64000), i64 add (i64 ptrtoint (%G__0x6220d0_type* @G__0x6220d0 to i64), i64 64000)), i64 4) to i8), i8 1), i8* %27, align 1
  store i8 zext (i1 icmp eq (i64 add (i64 ptrtoint (%G__0x6220d0_type* @G__0x6220d0 to i64), i64 64000), i64 0) to i8), i8* %30, align 1
  store i8 trunc (i64 lshr (i64 add (i64 ptrtoint (%G__0x6220d0_type* @G__0x6220d0 to i64), i64 64000), i64 63) to i8), i8* %33, align 1
  store i8 zext (i1 icmp eq (i64 add (i64 xor (i64 lshr (i64 add (i64 ptrtoint (%G__0x6220d0_type* @G__0x6220d0 to i64), i64 64000), i64 63), i64 lshr (i64 ptrtoint (%G__0x6220d0_type* @G__0x6220d0 to i64), i64 63)), i64 lshr (i64 add (i64 ptrtoint (%G__0x6220d0_type* @G__0x6220d0 to i64), i64 64000), i64 63)), i64 2) to i8), i8* %39, align 1
  %4779 = load i64, i64* bitcast (%G_0x622088_type* @G_0x622088 to i64*), align 8
  store i64 %4779, i64* %2519, align 1
  store double 0.000000e+00, double* %2521, align 1
  store i64 ptrtoint (%G__0x6220d0_type* @G__0x6220d0 to i64), i64* %RDI.i3611.pre-phi, align 8
  store i64 add (i64 ptrtoint (%G__0x6220d0_type* @G__0x6220d0 to i64), i64 64000), i64* %RSI.i3626, align 8
  %4780 = add i64 %4774, 45735
  %4781 = add i64 %4774, 40
  %4782 = load i64, i64* %6, align 8
  %4783 = add i64 %4782, -8
  %4784 = inttoptr i64 %4783 to i64*
  store i64 %4781, i64* %4784, align 8
  store i64 %4783, i64* %6, align 8
  store i64 %4780, i64* %3, align 8
  %call2_40292c = tail call %struct.Memory* @sub_40dbb0._Z4fillIPddEvT_S1_T0_(%struct.State* nonnull %0, i64 %4780, %struct.Memory* %call2_402904)
  %4785 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x6220d0_type* @G__0x6220d0 to i64), i64* %RDI.i3611.pre-phi, align 8
  store i64 8000, i64* %RSI.i3626, align 8
  store i64 ptrtoint (%G__0x419be1_type* @G__0x419be1 to i64), i64* %RDX.i3615, align 8
  %4786 = load i32, i32* bitcast (%G_0x622080_type* @G_0x622080 to i32*), align 8
  %4787 = zext i32 %4786 to i64
  store i64 %4787, i64* %RAX.i3622, align 8
  store i32 %4786, i32* bitcast (%G_0x6220c0_type* @G_0x6220c0 to i32*), align 8
  %4788 = add i64 %4785, 45759
  %4789 = add i64 %4785, 44
  %4790 = load i64, i64* %6, align 8
  %4791 = add i64 %4790, -8
  %4792 = inttoptr i64 %4791 to i64*
  store i64 %4789, i64* %4792, align 8
  store i64 %4791, i64* %6, align 8
  store i64 %4788, i64* %3, align 8
  %call2_402958 = tail call %struct.Memory* @sub_40dbf0._Z13test_constantId10custom_twoIdEEvPT_iPKc(%struct.State* nonnull %0, i64 %4788, %struct.Memory* %call2_40292c)
  %4793 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x6220d0_type* @G__0x6220d0 to i64), i64* %RDI.i3611.pre-phi, align 8
  store i64 8000, i64* %RSI.i3626, align 8
  store i64 ptrtoint (%G__0x419bf1_type* @G__0x419bf1 to i64), i64* %RDX.i3615, align 8
  %4794 = add i64 %4793, 45875
  %4795 = add i64 %4793, 30
  %4796 = load i64, i64* %6, align 8
  %4797 = add i64 %4796, -8
  %4798 = inttoptr i64 %4797 to i64*
  store i64 %4795, i64* %4798, align 8
  store i64 %4797, i64* %6, align 8
  store i64 %4794, i64* %3, align 8
  %call2_402976 = tail call %struct.Memory* @sub_40dc90._Z13test_constantId20custom_add_constantsIdEEvPT_iPKc(%struct.State* nonnull %0, i64 %4794, %struct.Memory* %call2_402958)
  %4799 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x6220d0_type* @G__0x6220d0 to i64), i64* %RDI.i3611.pre-phi, align 8
  store i64 8000, i64* %RSI.i3626, align 8
  store i64 ptrtoint (%G__0x419c06_type* @G__0x419c06 to i64), i64* %RDX.i3615, align 8
  %4800 = add i64 %4799, 46005
  %4801 = add i64 %4799, 30
  %4802 = load i64, i64* %6, align 8
  %4803 = add i64 %4802, -8
  %4804 = inttoptr i64 %4803 to i64*
  store i64 %4801, i64* %4804, align 8
  store i64 %4803, i64* %6, align 8
  store i64 %4800, i64* %3, align 8
  %call2_402994 = tail call %struct.Memory* @sub_40dd30._Z13test_constantId20custom_sub_constantsIdEEvPT_iPKc(%struct.State* nonnull %0, i64 %4800, %struct.Memory* %call2_402976)
  %4805 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x6220d0_type* @G__0x6220d0 to i64), i64* %RDI.i3611.pre-phi, align 8
  store i64 8000, i64* %RSI.i3626, align 8
  store i64 ptrtoint (%G__0x419c20_type* @G__0x419c20 to i64), i64* %RDX.i3615, align 8
  %4806 = add i64 %4805, 46135
  %4807 = add i64 %4805, 30
  %4808 = load i64, i64* %6, align 8
  %4809 = add i64 %4808, -8
  %4810 = inttoptr i64 %4809 to i64*
  store i64 %4807, i64* %4810, align 8
  store i64 %4809, i64* %6, align 8
  store i64 %4806, i64* %3, align 8
  %call2_4029b2 = tail call %struct.Memory* @sub_40ddd0._Z13test_constantId25custom_multiply_constantsIdEEvPT_iPKc(%struct.State* nonnull %0, i64 %4806, %struct.Memory* %call2_402994)
  %4811 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x6220d0_type* @G__0x6220d0 to i64), i64* %RDI.i3611.pre-phi, align 8
  store i64 8000, i64* %RSI.i3626, align 8
  store i64 ptrtoint (%G__0x419c3a_type* @G__0x419c3a to i64), i64* %RDX.i3615, align 8
  %4812 = add i64 %4811, 46265
  %4813 = add i64 %4811, 30
  %4814 = load i64, i64* %6, align 8
  %4815 = add i64 %4814, -8
  %4816 = inttoptr i64 %4815 to i64*
  store i64 %4813, i64* %4816, align 8
  store i64 %4815, i64* %6, align 8
  store i64 %4812, i64* %3, align 8
  %call2_4029d0 = tail call %struct.Memory* @sub_40de70._Z13test_constantId23custom_divide_constantsIdEEvPT_iPKc(%struct.State* nonnull %0, i64 %4812, %struct.Memory* %call2_4029b2)
  %4817 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x6220d0_type* @G__0x6220d0 to i64), i64* %RDI.i3611.pre-phi, align 8
  store i64 8000, i64* %RSI.i3626, align 8
  store i64 ptrtoint (%G__0x419c52_type* @G__0x419c52 to i64), i64* %RDX.i3615, align 8
  %4818 = load i32, i32* bitcast (%G_0x622080_type* @G_0x622080 to i32*), align 8
  %4819 = zext i32 %4818 to i64
  store i64 %4819, i64* %206, align 8
  %4820 = load i64, i64* %RBP.i, align 8
  %4821 = add i64 %4820, -132
  %4822 = add i64 %4817, 44
  store i64 %4822, i64* %3, align 8
  %4823 = inttoptr i64 %4821 to i32*
  store i32 10, i32* %4823, align 4
  %4824 = load i32, i32* %R9D.i3585, align 4
  %4825 = zext i32 %4824 to i64
  %4826 = load i64, i64* %3, align 8
  store i64 %4825, i64* %RAX.i3622, align 8
  %4827 = load i64, i64* %RBP.i, align 8
  %4828 = add i64 %4827, -144
  %4829 = load i64, i64* %RDX.i3615, align 8
  %4830 = add i64 %4826, 10
  store i64 %4830, i64* %3, align 8
  %4831 = inttoptr i64 %4828 to i64*
  store i64 %4829, i64* %4831, align 8
  %4832 = load i64, i64* %3, align 8
  %4833 = load i32, i32* %EAX.i3390, align 8
  %4834 = sext i32 %4833 to i64
  %4835 = lshr i64 %4834, 32
  store i64 %4835, i64* %4475, align 8
  %4836 = load i64, i64* %RBP.i, align 8
  %4837 = add i64 %4836, -132
  %4838 = add i64 %4832, 8
  store i64 %4838, i64* %3, align 8
  %4839 = inttoptr i64 %4837 to i32*
  %4840 = load i32, i32* %4839, align 4
  %4841 = zext i32 %4840 to i64
  store i64 %4841, i64* %206, align 8
  %4842 = add i64 %4832, 11
  store i64 %4842, i64* %3, align 8
  %4843 = zext i32 %4833 to i64
  %4844 = sext i32 %4840 to i64
  %4845 = shl nuw i64 %4835, 32
  %4846 = or i64 %4845, %4843
  %4847 = sdiv i64 %4846, %4844
  %4848 = shl i64 %4847, 32
  %4849 = ashr exact i64 %4848, 32
  %4850 = icmp eq i64 %4847, %4849
  br i1 %4850, label %4853, label %4851

; <label>:4851:                                   ; preds = %routine_idivl__r9d.exit243
  %4852 = tail call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %4842, %struct.Memory* %call2_4029d0)
  %.pre13 = load i32, i32* %EAX.i3390, align 4
  %.pre14 = load i64, i64* %3, align 8
  %.pre15 = load i64, i64* %RBP.i, align 8
  br label %routine_idivl__r9d.exit

; <label>:4853:                                   ; preds = %routine_idivl__r9d.exit243
  %4854 = srem i64 %4846, %4844
  %4855 = and i64 %4847, 4294967295
  store i64 %4855, i64* %RAX.i3622, align 8
  %4856 = and i64 %4854, 4294967295
  store i64 %4856, i64* %RDX.i3615, align 8
  store i8 0, i8* %14, align 1
  store i8 0, i8* %21, align 1
  store i8 0, i8* %27, align 1
  store i8 0, i8* %30, align 1
  store i8 0, i8* %33, align 1
  store i8 0, i8* %39, align 1
  %4857 = trunc i64 %4847 to i32
  br label %routine_idivl__r9d.exit

routine_idivl__r9d.exit:                          ; preds = %4853, %4851
  %4858 = phi i64 [ %.pre15, %4851 ], [ %4836, %4853 ]
  %4859 = phi i64 [ %.pre14, %4851 ], [ %4842, %4853 ]
  %4860 = phi i32 [ %.pre13, %4851 ], [ %4857, %4853 ]
  %4861 = phi %struct.Memory* [ %4852, %4851 ], [ %call2_4029d0, %4853 ]
  store i32 %4860, i32* bitcast (%G_0x6220c0_type* @G_0x6220c0 to i32*), align 8
  %4862 = add i64 %4858, -144
  %4863 = add i64 %4859, 14
  store i64 %4863, i64* %3, align 8
  %4864 = inttoptr i64 %4862 to i64*
  %4865 = load i64, i64* %4864, align 8
  store i64 %4865, i64* %RCX.i3620, align 8
  store i64 %4865, i64* %RDX.i3615, align 8
  %4866 = add i64 %4859, 46330
  %4867 = add i64 %4859, 22
  %4868 = load i64, i64* %6, align 8
  %4869 = add i64 %4868, -8
  %4870 = inttoptr i64 %4869 to i64*
  store i64 %4867, i64* %4870, align 8
  store i64 %4869, i64* %6, align 8
  store i64 %4866, i64* %3, align 8
  %call2_402a27 = tail call %struct.Memory* @sub_40df10._Z13test_constantId19custom_constant_addIdEEvPT_iPKc(%struct.State* nonnull %0, i64 %4866, %struct.Memory* %4861)
  %4871 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x6220d0_type* @G__0x6220d0 to i64), i64* %RDI.i3611.pre-phi, align 8
  store i64 8000, i64* %RSI.i3626, align 8
  store i64 ptrtoint (%G__0x419c66_type* @G__0x419c66 to i64), i64* %RDX.i3615, align 8
  %4872 = add i64 %4871, 46468
  %4873 = add i64 %4871, 30
  %4874 = load i64, i64* %6, align 8
  %4875 = add i64 %4874, -8
  %4876 = inttoptr i64 %4875 to i64*
  store i64 %4873, i64* %4876, align 8
  store i64 %4875, i64* %6, align 8
  store i64 %4872, i64* %3, align 8
  %call2_402a45 = tail call %struct.Memory* @sub_40dfb0._Z13test_constantId28custom_multiple_constant_addIdEEvPT_iPKc(%struct.State* nonnull %0, i64 %4872, %struct.Memory* %call2_402a27)
  %4877 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x6220d0_type* @G__0x6220d0 to i64), i64* %RDI.i3611.pre-phi, align 8
  store i64 8000, i64* %RSI.i3626, align 8
  store i64 ptrtoint (%G__0x419c84_type* @G__0x419c84 to i64), i64* %RDX.i3615, align 8
  %4878 = add i64 %4877, 46598
  %4879 = add i64 %4877, 30
  %4880 = load i64, i64* %6, align 8
  %4881 = add i64 %4880, -8
  %4882 = inttoptr i64 %4881 to i64*
  store i64 %4879, i64* %4882, align 8
  store i64 %4881, i64* %6, align 8
  store i64 %4878, i64* %3, align 8
  %call2_402a63 = tail call %struct.Memory* @sub_40e050._Z13test_constantId19custom_constant_subIdEEvPT_iPKc(%struct.State* nonnull %0, i64 %4878, %struct.Memory* %call2_402a45)
  %4883 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x6220d0_type* @G__0x6220d0 to i64), i64* %RDI.i3611.pre-phi, align 8
  store i64 8000, i64* %RSI.i3626, align 8
  store i64 ptrtoint (%G__0x419c9d_type* @G__0x419c9d to i64), i64* %RDX.i3615, align 8
  %4884 = add i64 %4883, 46728
  %4885 = add i64 %4883, 30
  %4886 = load i64, i64* %6, align 8
  %4887 = add i64 %4886, -8
  %4888 = inttoptr i64 %4887 to i64*
  store i64 %4885, i64* %4888, align 8
  store i64 %4887, i64* %6, align 8
  store i64 %4884, i64* %3, align 8
  %call2_402a81 = tail call %struct.Memory* @sub_40e0f0._Z13test_constantId28custom_multiple_constant_subIdEEvPT_iPKc(%struct.State* nonnull %0, i64 %4884, %struct.Memory* %call2_402a63)
  %4889 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x6220d0_type* @G__0x6220d0 to i64), i64* %RDI.i3611.pre-phi, align 8
  store i64 8000, i64* %RSI.i3626, align 8
  store i64 ptrtoint (%G__0x419cc0_type* @G__0x419cc0 to i64), i64* %RDX.i3615, align 8
  %4890 = add i64 %4889, 46858
  %4891 = add i64 %4889, 30
  %4892 = load i64, i64* %6, align 8
  %4893 = add i64 %4892, -8
  %4894 = inttoptr i64 %4893 to i64*
  store i64 %4891, i64* %4894, align 8
  store i64 %4893, i64* %6, align 8
  store i64 %4890, i64* %3, align 8
  %call2_402a9f = tail call %struct.Memory* @sub_40e190._Z13test_constantId24custom_constant_multiplyIdEEvPT_iPKc(%struct.State* nonnull %0, i64 %4890, %struct.Memory* %call2_402a81)
  %4895 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x6220d0_type* @G__0x6220d0 to i64), i64* %RDI.i3611.pre-phi, align 8
  store i64 8000, i64* %RSI.i3626, align 8
  store i64 ptrtoint (%G__0x419cd9_type* @G__0x419cd9 to i64), i64* %RDX.i3615, align 8
  %4896 = add i64 %4895, 46988
  %4897 = add i64 %4895, 30
  %4898 = load i64, i64* %6, align 8
  %4899 = add i64 %4898, -8
  %4900 = inttoptr i64 %4899 to i64*
  store i64 %4897, i64* %4900, align 8
  store i64 %4899, i64* %6, align 8
  store i64 %4896, i64* %3, align 8
  %call2_402abd = tail call %struct.Memory* @sub_40e230._Z13test_constantId33custom_multiple_constant_multiplyIdEEvPT_iPKc(%struct.State* nonnull %0, i64 %4896, %struct.Memory* %call2_402a9f)
  %4901 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x6220d0_type* @G__0x6220d0 to i64), i64* %RDI.i3611.pre-phi, align 8
  store i64 8000, i64* %RSI.i3626, align 8
  store i64 ptrtoint (%G__0x419cfd_type* @G__0x419cfd to i64), i64* %RDX.i3615, align 8
  %4902 = add i64 %4901, 47118
  %4903 = add i64 %4901, 30
  %4904 = load i64, i64* %6, align 8
  %4905 = add i64 %4904, -8
  %4906 = inttoptr i64 %4905 to i64*
  store i64 %4903, i64* %4906, align 8
  store i64 %4905, i64* %6, align 8
  store i64 %4902, i64* %3, align 8
  %call2_402adb = tail call %struct.Memory* @sub_40e2d0._Z13test_constantId34custom_multiple_constant_multiply2IdEEvPT_iPKc(%struct.State* nonnull %0, i64 %4902, %struct.Memory* %call2_402abd)
  %4907 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x6220d0_type* @G__0x6220d0 to i64), i64* %RDI.i3611.pre-phi, align 8
  store i64 8000, i64* %RSI.i3626, align 8
  store i64 ptrtoint (%G__0x419d20_type* @G__0x419d20 to i64), i64* %RDX.i3615, align 8
  %4908 = add i64 %4907, 47248
  %4909 = add i64 %4907, 30
  %4910 = load i64, i64* %6, align 8
  %4911 = add i64 %4910, -8
  %4912 = inttoptr i64 %4911 to i64*
  store i64 %4909, i64* %4912, align 8
  store i64 %4911, i64* %6, align 8
  store i64 %4908, i64* %3, align 8
  %call2_402af9 = tail call %struct.Memory* @sub_40e370._Z13test_constantId22custom_constant_divideIdEEvPT_iPKc(%struct.State* nonnull %0, i64 %4908, %struct.Memory* %call2_402adb)
  %4913 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x6220d0_type* @G__0x6220d0 to i64), i64* %RDI.i3611.pre-phi, align 8
  store i64 8000, i64* %RSI.i3626, align 8
  store i64 ptrtoint (%G__0x419d37_type* @G__0x419d37 to i64), i64* %RDX.i3615, align 8
  %4914 = add i64 %4913, 47378
  %4915 = add i64 %4913, 30
  %4916 = load i64, i64* %6, align 8
  %4917 = add i64 %4916, -8
  %4918 = inttoptr i64 %4917 to i64*
  store i64 %4915, i64* %4918, align 8
  store i64 %4917, i64* %6, align 8
  store i64 %4914, i64* %3, align 8
  %call2_402b17 = tail call %struct.Memory* @sub_40e410._Z13test_constantId31custom_multiple_constant_divideIdEEvPT_iPKc(%struct.State* nonnull %0, i64 %4914, %struct.Memory* %call2_402af9)
  %4919 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x6220d0_type* @G__0x6220d0 to i64), i64* %RDI.i3611.pre-phi, align 8
  store i64 8000, i64* %RSI.i3626, align 8
  store i64 ptrtoint (%G__0x419d58_type* @G__0x419d58 to i64), i64* %RDX.i3615, align 8
  %4920 = add i64 %4919, 47508
  %4921 = add i64 %4919, 30
  %4922 = load i64, i64* %6, align 8
  %4923 = add i64 %4922, -8
  %4924 = inttoptr i64 %4923 to i64*
  store i64 %4921, i64* %4924, align 8
  store i64 %4923, i64* %6, align 8
  store i64 %4920, i64* %3, align 8
  %call2_402b35 = tail call %struct.Memory* @sub_40e4b0._Z13test_constantId32custom_multiple_constant_divide2IdEEvPT_iPKc(%struct.State* nonnull %0, i64 %4920, %struct.Memory* %call2_402b17)
  %4925 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x6220d0_type* @G__0x6220d0 to i64), i64* %RDI.i3611.pre-phi, align 8
  store i64 8000, i64* %RSI.i3626, align 8
  store i64 ptrtoint (%G__0x419d79_type* @G__0x419d79 to i64), i64* %RDX.i3615, align 8
  %4926 = add i64 %4925, 47638
  %4927 = add i64 %4925, 30
  %4928 = load i64, i64* %6, align 8
  %4929 = add i64 %4928, -8
  %4930 = inttoptr i64 %4929 to i64*
  store i64 %4927, i64* %4930, align 8
  store i64 %4929, i64* %6, align 8
  store i64 %4926, i64* %3, align 8
  %call2_402b53 = tail call %struct.Memory* @sub_40e550._Z13test_constantId30custom_multiple_constant_mixedIdEEvPT_iPKc(%struct.State* nonnull %0, i64 %4926, %struct.Memory* %call2_402b35)
  %4931 = load i64, i64* %3, align 8
  store i64 0, i64* %RAX.i3622, align 8
  %4932 = load i64, i64* %6, align 8
  %4933 = add i64 %4932, 144
  store i64 %4933, i64* %6, align 8
  %4934 = icmp ugt i64 %4932, -145
  %4935 = zext i1 %4934 to i8
  store i8 %4935, i8* %14, align 1
  %4936 = trunc i64 %4933 to i32
  %4937 = and i32 %4936, 255
  %4938 = tail call i32 @llvm.ctpop.i32(i32 %4937)
  %4939 = trunc i32 %4938 to i8
  %4940 = and i8 %4939, 1
  %4941 = xor i8 %4940, 1
  store i8 %4941, i8* %21, align 1
  %4942 = xor i64 %4932, 16
  %4943 = xor i64 %4942, %4933
  %4944 = lshr i64 %4943, 4
  %4945 = trunc i64 %4944 to i8
  %4946 = and i8 %4945, 1
  store i8 %4946, i8* %27, align 1
  %4947 = icmp eq i64 %4933, 0
  %4948 = zext i1 %4947 to i8
  store i8 %4948, i8* %30, align 1
  %4949 = lshr i64 %4933, 63
  %4950 = trunc i64 %4949 to i8
  store i8 %4950, i8* %33, align 1
  %4951 = lshr i64 %4932, 63
  %4952 = xor i64 %4949, %4951
  %4953 = add nuw nsw i64 %4952, %4949
  %4954 = icmp eq i64 %4953, 2
  %4955 = zext i1 %4954 to i8
  store i8 %4955, i8* %39, align 1
  %4956 = add i64 %4931, 10
  store i64 %4956, i64* %3, align 8
  %4957 = add i64 %4932, 152
  %4958 = inttoptr i64 %4933 to i64*
  %4959 = load i64, i64* %4958, align 8
  store i64 %4959, i64* %RBP.i, align 8
  store i64 %4957, i64* %6, align 8
  %4960 = add i64 %4931, 11
  store i64 %4960, i64* %3, align 8
  %4961 = inttoptr i64 %4957 to i64*
  %4962 = load i64, i64* %4961, align 8
  store i64 %4962, i64* %3, align 8
  %4963 = add i64 %4932, 160
  store i64 %4963, i64* %6, align 8
  ret %struct.Memory* %call2_402b53
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_pushq__rbp(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 1
  store i64 %5, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %3, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__rsp___rbp(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RSP, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 3
  store i64 %5, i64* %PC, align 8
  store i64 %3, i64* %RBP, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline nounwind
define %struct.Memory* @routine_subq__0x90___rsp(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3 = load i64, i64* %RSP, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 7
  store i64 %5, i64* %PC, align 8
  %6 = add i64 %3, -144
  store i64 %6, i64* %RSP, align 8
  %7 = icmp ult i64 %3, 144
  %8 = zext i1 %7 to i8
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8, i8* %9, align 1
  %10 = trunc i64 %6 to i32
  %11 = and i32 %10, 255
  %12 = tail call i32 @llvm.ctpop.i32(i32 %11)
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = xor i64 %3, 16
  %18 = xor i64 %17, %6
  %19 = lshr i64 %18, 4
  %20 = trunc i64 %19 to i8
  %21 = and i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %21, i8* %22, align 1
  %23 = icmp eq i64 %6, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i64 %6, 63
  %27 = trunc i64 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i64 %3, 63
  %30 = xor i64 %26, %29
  %31 = add nuw nsw i64 %30, %29
  %32 = icmp eq i64 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x0__MINUS0x4__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -4
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i32*
  store i32 0, i32* %7, align 4
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__edi__MINUS0x8__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0
  %EDI = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -8
  %6 = load i32, i32* %EDI, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 3
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__rsi__MINUS0x10__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -16
  %5 = load i64, i64* %RSI, align 8
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 4
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %4 to i64*
  store i64 %5, i64* %8, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline nounwind
define %struct.Memory* @routine_cmpl__0x1__MINUS0x8__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, -1
  %10 = icmp eq i32 %8, 0
  %11 = zext i1 %10 to i8
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11, i8* %12, align 1
  %13 = and i32 %9, 255
  %14 = tail call i32 @llvm.ctpop.i32(i32 %13)
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i32 %9, %8
  %20 = lshr i32 %19, 4
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i32 %9, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %9, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %8, 31
  %31 = xor i32 %27, %30
  %32 = add nuw nsw i32 %31, %30
  %33 = icmp eq i32 %32, 2
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %34, i8* %35, align 1
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_jle_.L_400f27(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp ne i8 %5, 0
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8 = load i8, i8* %7, align 1
  %9 = icmp ne i8 %8, 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %11 = load i8, i8* %10, align 1
  %12 = icmp ne i8 %11, 0
  %13 = xor i1 %9, %12
  %14 = or i1 %6, %13
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %14, i64 %rel_off1, i64 %rel_off2
  %16 = add i64 %.v, %3
  store i64 %16, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq_MINUS0x10__rbp____rax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -16
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq_0x8__rax____rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %RAX, align 8
  %4 = add i64 %3, 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_.atoi_plt(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__eax__0x622080(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %4 = load i32, i32* %EAX, align 4
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i32 %4, i32* bitcast (%G_0x622080_type* @G_0x622080 to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline nounwind
define %struct.Memory* @routine_cmpl__0x2__MINUS0x8__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, -2
  %10 = icmp ult i32 %8, 2
  %11 = zext i1 %10 to i8
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11, i8* %12, align 1
  %13 = and i32 %9, 255
  %14 = tail call i32 @llvm.ctpop.i32(i32 %13)
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i32 %9, %8
  %20 = lshr i32 %19, 4
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i32 %9, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %9, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %8, 31
  %31 = xor i32 %27, %30
  %32 = add nuw nsw i32 %31, %30
  %33 = icmp eq i32 %32, 2
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %34, i8* %35, align 1
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_jle_.L_400f47(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp ne i8 %5, 0
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8 = load i8, i8* %7, align 1
  %9 = icmp ne i8 %8, 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %11 = load i8, i8* %10, align 1
  %12 = icmp ne i8 %11, 0
  %13 = xor i1 %9, %12
  %14 = or i1 %6, %13
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %14, i64 %rel_off1, i64 %rel_off2
  %16 = add i64 %.v, %3
  store i64 %16, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq_0x10__rax____rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %RAX, align 8
  %4 = add i64 %3, 16
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_.atof_plt(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movsd__xmm0__0x622088(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 9
  store i64 %4, i64* %PC, align 8
  %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 0
  %6 = load i64, i64* %5, align 1
  store i64 %6, i64* bitcast (%G_0x622088_type* @G_0x622088 to i64*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__0x6397d0___rax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__rax___rcx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %3 = load i64, i64* %RAX, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 3
  store i64 %5, i64* %PC, align 8
  store i64 %3, i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline nounwind
define %struct.Memory* @routine_addq__0xfa00___rcx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %3 = load i64, i64* %RCX, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 7
  store i64 %5, i64* %PC, align 8
  %6 = add i64 %3, 64000
  store i64 %6, i64* %RCX, align 8
  %7 = icmp ugt i64 %3, -64001
  %8 = zext i1 %7 to i8
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8, i8* %9, align 1
  %10 = trunc i64 %6 to i32
  %11 = and i32 %10, 255
  %12 = tail call i32 @llvm.ctpop.i32(i32 %11)
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = xor i64 %6, %3
  %18 = lshr i64 %17, 4
  %19 = trunc i64 %18 to i8
  %20 = and i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20, i8* %21, align 1
  %22 = icmp eq i64 %6, 0
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23, i8* %24, align 1
  %25 = lshr i64 %6, 63
  %26 = trunc i64 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26, i8* %27, align 1
  %28 = lshr i64 %3, 63
  %29 = xor i64 %25, %28
  %30 = add nuw nsw i64 %29, %25
  %31 = icmp eq i64 %30, 2
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %32, i8* %33, align 1
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline nounwind
define %struct.Memory* @routine_cvttsd2si_0x221125__rip____edx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, ptrtoint (%G_0x221125__rip__type* @G_0x221125__rip_ to i64)
  %5 = add i64 %3, 8
  store i64 %5, i64* %PC, align 8
  %6 = inttoptr i64 %4 to double*
  %7 = load double, double* %6, align 8
  %8 = tail call double @llvm.trunc.f64(double %7)
  %9 = tail call double @llvm.fabs.f64(double %8)
  %10 = fcmp ogt double %9, 0x41DFFFFFFFC00000
  %11 = fptosi double %8 to i32
  %12 = zext i32 %11 to i64
  %13 = select i1 %10, i64 2147483648, i64 %12
  store i64 %13, i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x672210___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x672210_type* @G__0x672210 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__esi___edi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0
  %ESI = bitcast %union.anon* %3 to i32*
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %4 = load i32, i32* %ESI, align 4
  %5 = zext i32 %4 to i64
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 2
  store i64 %7, i64* %PC, align 8
  store i64 %5, i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movb__dl___r8b(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %DL = bitcast %union.anon* %3 to i8*
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 17, i32 0
  %R8B = bitcast %union.anon* %4 to i8*
  %5 = load i8, i8* %DL, align 1
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 3
  store i64 %7, i64* %PC, align 8
  store i8 %5, i8* %R8B, align 1
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movsbl__r8b___edx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 17, i32 0
  %R8B = bitcast %union.anon* %3 to i8*
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %4 = load i8, i8* %R8B, align 1
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = sext i8 %4 to i64
  %8 = and i64 %7, 4294967295
  store i64 %8, i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x674150___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x674150_type* @G__0x674150 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__rdi__MINUS0x18__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -24
  %5 = load i64, i64* %RDI, align 8
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 4
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %4 to i64*
  store i64 %5, i64* %8, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__rax__MINUS0x20__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -32
  %5 = load i64, i64* %RAX, align 8
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 4
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %4 to i64*
  store i64 %5, i64* %8, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__rcx__MINUS0x28__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -40
  %5 = load i64, i64* %RCX, align 8
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 4
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %4 to i64*
  store i64 %5, i64* %8, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z4fillIPaaEvT_S1_T0_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl_0x2210f3__rip____edx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, ptrtoint (%G_0x2210f3__rip__type* @G_0x2210f3__rip_ to i64)
  %5 = add i64 %3, 6
  store i64 %5, i64* %PC, align 8
  %6 = inttoptr i64 %4 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  store i64 %8, i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__edx__0x22112d__rip_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %EDX = bitcast %union.anon* %3 to i32*
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, ptrtoint (%G_0x22112d__rip__type* @G_0x22112d__rip_ to i64)
  %6 = load i32, i32* %EDX, align 4
  %7 = add i64 %4, 6
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %8, align 4
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x418c33___edx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418c33_type* @G__0x418c33 to i64), i64 4294967295), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x1f40___r9d(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0, i32 0
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 6
  store i64 %5, i64* %PC, align 8
  store i64 8000, i64* %3, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq_MINUS0x18__rbp____rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -24
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__r9d___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0
  %R9D = bitcast %union.anon* %3 to i32*
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %4 = load i32, i32* %R9D, align 4
  %5 = zext i32 %4 to i64
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 3
  store i64 %7, i64* %PC, align 8
  store i64 %5, i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__r9d__MINUS0x2c__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0
  %R9D = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -44
  %6 = load i32, i32* %R9D, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 4
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIa10custom_twoIaEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x418c44___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418c44_type* @G__0x418c44 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__esi___edx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0
  %ESI = bitcast %union.anon* %3 to i32*
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %4 = load i32, i32* %ESI, align 4
  %5 = zext i32 %4 to i64
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 2
  store i64 %7, i64* %PC, align 8
  store i64 %5, i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl_MINUS0x2c__rbp____esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -44
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 3
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIa20custom_add_constantsIaEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x418c5a___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418c5a_type* @G__0x418c5a to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIa20custom_sub_constantsIaEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x418c75___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418c75_type* @G__0x418c75 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIa25custom_multiply_constantsIaEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x418c90___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418c90_type* @G__0x418c90 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIa23custom_divide_constantsIaEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x418ca9___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418ca9_type* @G__0x418ca9 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIa20custom_mod_constantsIaEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x418cbf___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418cbf_type* @G__0x418cbf to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIa22custom_equal_constantsIaEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x418cd7___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418cd7_type* @G__0x418cd7 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIa25custom_notequal_constantsIaEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x418cf2___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418cf2_type* @G__0x418cf2 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIa28custom_greaterthan_constantsIaEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x418d11___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418d11_type* @G__0x418d11 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIa25custom_lessthan_constantsIaEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x418d2d___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418d2d_type* @G__0x418d2d to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIa33custom_greaterthanequal_constantsIaEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x418d52___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418d52_type* @G__0x418d52 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIa30custom_lessthanequal_constantsIaEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x418d74___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418d74_type* @G__0x418d74 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIa20custom_and_constantsIaEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x418d8a___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418d8a_type* @G__0x418d8a to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIa19custom_or_constantsIaEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x418d9f___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418d9f_type* @G__0x418d9f to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIa20custom_xor_constantsIaEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movslq_0x220fc1__rip____rax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, ptrtoint (%G_0x220fc1__rip__type* @G_0x220fc1__rip_ to i64)
  %5 = add i64 %3, 7
  store i64 %5, i64* %PC, align 8
  %6 = inttoptr i64 %4 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = sext i32 %7 to i64
  store i64 %8, i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline nounwind
define %struct.Memory* @routine_imulq__0x66666667___rax___rax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %RAX, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 7
  store i64 %5, i64* %PC, align 8
  %6 = sext i64 %3 to i128
  %7 = and i128 %6, -18446744073709551616
  %8 = zext i64 %3 to i128
  %9 = or i128 %7, %8
  %10 = mul nsw i128 %9, 1717986919
  %11 = trunc i128 %10 to i64
  store i64 %11, i64* %RAX, align 8
  %12 = sext i64 %11 to i128
  %13 = icmp ne i128 %12, %10
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14, i8* %15, align 1
  %16 = trunc i128 %10 to i32
  %17 = and i32 %16, 255
  %18 = tail call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %23, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %24, align 1
  %25 = lshr i64 %11, 63
  %26 = trunc i64 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14, i8* %28, align 1
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline nounwind
define %struct.Memory* @routine_shrq__0x3f___rcx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %3 = load i64, i64* %RCX, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 4
  store i64 %5, i64* %PC, align 8
  %6 = lshr i64 %3, 62
  %7 = trunc i64 %6 to i8
  %8 = and i8 %7, 1
  %9 = lshr i64 %3, 63
  store i64 %9, i64* %RCX, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8, i8* %10, align 1
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %12 = trunc i64 %9 to i32
  %13 = tail call i32 @llvm.ctpop.i32(i32 %12)
  %14 = trunc i32 %13 to i8
  %15 = xor i8 %14, 1
  store i8 %15, i8* %11, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %18 = trunc i64 %9 to i8
  %19 = xor i8 %18, 1
  store i8 %19, i8* %17, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %20, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %21, align 1
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__ecx___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0
  %ECX = bitcast %union.anon* %3 to i32*
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %4 = load i32, i32* %ECX, align 4
  %5 = zext i32 %4 to i64
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 2
  store i64 %7, i64* %PC, align 8
  store i64 %5, i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline nounwind
define %struct.Memory* @routine_sarq__0x22___rax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %RAX, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 4
  store i64 %5, i64* %PC, align 8
  %6 = lshr i64 %3, 33
  %7 = trunc i64 %6 to i8
  %8 = and i8 %7, 1
  %9 = ashr i64 %3, 34
  store i64 %9, i64* %RAX, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8, i8* %10, align 1
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %12 = trunc i64 %9 to i32
  %13 = and i32 %12, 255
  %14 = tail call i32 @llvm.ctpop.i32(i32 %13)
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  store i8 %17, i8* %11, align 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %18, align 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %20 = icmp eq i64 %9, 0
  %21 = zext i1 %20 to i8
  store i8 %21, i8* %19, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %23 = lshr i64 %9, 63
  %24 = trunc i64 %23 to i8
  store i8 %24, i8* %22, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %25, align 1
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__eax___r9d(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0, i32 0
  %5 = load i32, i32* %EAX, align 4
  %6 = zext i32 %5 to i64
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 3
  store i64 %8, i64* %PC, align 8
  store i64 %6, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline nounwind
define %struct.Memory* @routine_addl__esi___r9d(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0
  %ESI = bitcast %union.anon* %3 to i32*
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0
  %R9D = bitcast %union.anon* %4 to i32*
  %5 = getelementptr inbounds %union.anon, %union.anon* %4, i64 0, i32 0
  %6 = load i32, i32* %R9D, align 4
  %7 = load i32, i32* %ESI, align 4
  %8 = load i64, i64* %PC, align 8
  %9 = add i64 %8, 3
  store i64 %9, i64* %PC, align 8
  %10 = add i32 %7, %6
  %11 = zext i32 %10 to i64
  store i64 %11, i64* %5, align 8
  %12 = icmp ult i32 %10, %6
  %13 = icmp ult i32 %10, %7
  %14 = or i1 %12, %13
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %16, align 1
  %17 = and i32 %10, 255
  %18 = tail call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i32 %7, %6
  %24 = xor i32 %23, %10
  %25 = lshr i32 %24, 4
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27, i8* %28, align 1
  %29 = icmp eq i32 %10, 0
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30, i8* %31, align 1
  %32 = lshr i32 %10, 31
  %33 = trunc i32 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33, i8* %34, align 1
  %35 = lshr i32 %6, 31
  %36 = lshr i32 %7, 31
  %37 = xor i32 %32, %35
  %38 = xor i32 %32, %36
  %39 = add nuw nsw i32 %37, %38
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__r9d__0x220fe0__rip_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0
  %R9D = bitcast %union.anon* %3 to i32*
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, ptrtoint (%G_0x220fe0__rip__type* @G_0x220fe0__rip_ to i64)
  %6 = load i32, i32* %R9D, align 4
  %7 = add i64 %4, 7
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %8, align 4
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x418db5___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418db5_type* @G__0x418db5 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIa19custom_constant_addIaEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x418dca___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418dca_type* @G__0x418dca to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIa28custom_multiple_constant_addIaEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x418de9___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418de9_type* @G__0x418de9 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIa19custom_constant_subIaEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x418e03___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418e03_type* @G__0x418e03 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIa28custom_multiple_constant_subIaEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x418e27___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418e27_type* @G__0x418e27 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIa24custom_constant_multiplyIaEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x418e41___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418e41_type* @G__0x418e41 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIa33custom_multiple_constant_multiplyIaEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x418e66___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418e66_type* @G__0x418e66 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIa34custom_multiple_constant_multiply2IaEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x418e8a___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418e8a_type* @G__0x418e8a to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIa22custom_constant_divideIaEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x418ea2___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418ea2_type* @G__0x418ea2 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIa31custom_multiple_constant_divideIaEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x418ec4___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418ec4_type* @G__0x418ec4 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIa32custom_multiple_constant_divide2IaEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x418ee6___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418ee6_type* @G__0x418ee6 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIa30custom_multiple_constant_mixedIaEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x418f06___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418f06_type* @G__0x418f06 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIa19custom_constant_andIaEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x418f1b___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418f1b_type* @G__0x418f1b to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIa28custom_multiple_constant_andIaEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x418f39___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418f39_type* @G__0x418f39 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIa18custom_constant_orIaEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x418f4d___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418f4d_type* @G__0x418f4d to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIa27custom_multiple_constant_orIaEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x418f6a___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418f6a_type* @G__0x418f6a to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIa19custom_constant_xorIaEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x418f7f___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418f7f_type* @G__0x418f7f to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIa28custom_multiple_constant_xorIaEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline nounwind
define %struct.Memory* @routine_cvttsd2si_0x220e5d__rip____esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, ptrtoint (%G_0x220e5d__rip__type* @G_0x220e5d__rip_ to i64)
  %5 = add i64 %3, 8
  store i64 %5, i64* %PC, align 8
  %6 = inttoptr i64 %4 to double*
  %7 = load double, double* %6, align 8
  %8 = tail call double @llvm.trunc.f64(double %7)
  %9 = tail call double @llvm.fabs.f64(double %8)
  %10 = fcmp ogt double %9, 0x41DFFFFFFFC00000
  %11 = fptosi double %8 to i32
  %12 = zext i32 %11 to i64
  %13 = select i1 %10, i64 2147483648, i64 %12
  store i64 %13, i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x6702d0___r9d(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0, i32 0
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 6
  store i64 %5, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x6702d0_type* @G__0x6702d0 to i64), i64 4294967295), i64* %3, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__r9d___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0
  %R9D = bitcast %union.anon* %3 to i32*
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %4 = load i32, i32* %R9D, align 4
  %5 = zext i32 %4 to i64
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 3
  store i64 %7, i64* %PC, align 8
  store i64 %5, i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movb__sil___r8b(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0
  %SIL = bitcast %union.anon* %3 to i8*
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 17, i32 0
  %R8B = bitcast %union.anon* %4 to i8*
  %5 = load i8, i8* %SIL, align 1
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 3
  store i64 %7, i64* %PC, align 8
  store i8 %5, i8* %R8B, align 1
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movzbl__r8b___edx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 17, i32 0
  %R8B = bitcast %union.anon* %3 to i8*
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %4 = load i8, i8* %R8B, align 1
  %5 = zext i8 %4 to i64
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 4
  store i64 %7, i64* %PC, align 8
  store i64 %5, i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__rax___rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %RAX, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 3
  store i64 %5, i64* %PC, align 8
  store i64 %3, i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__rax__MINUS0x38__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -56
  %5 = load i64, i64* %RAX, align 8
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 4
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %4 to i64*
  store i64 %5, i64* %8, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z4fillIPhhEvT_S1_T0_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl_0x220e2e__rip____edx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, ptrtoint (%G_0x220e2e__rip__type* @G_0x220e2e__rip_ to i64)
  %5 = add i64 %3, 6
  store i64 %5, i64* %PC, align 8
  %6 = inttoptr i64 %4 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  store i64 %8, i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__edx__0x220e68__rip_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %EDX = bitcast %union.anon* %3 to i32*
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, ptrtoint (%G_0x220e68__rip__type* @G_0x220e68__rip_ to i64)
  %6 = load i32, i32* %EDX, align 4
  %7 = add i64 %4, 6
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %8, align 4
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x418c32___edx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418c32_type* @G__0x418c32 to i64), i64 4294967295), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq_MINUS0x38__rbp____rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -56
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIh10custom_twoIhEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x418c43___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418c43_type* @G__0x418c43 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIh20custom_add_constantsIhEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x418c59___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418c59_type* @G__0x418c59 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIh20custom_sub_constantsIhEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x418c74___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418c74_type* @G__0x418c74 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIh25custom_multiply_constantsIhEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x418c8f___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418c8f_type* @G__0x418c8f to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIh23custom_divide_constantsIhEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x418ca8___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418ca8_type* @G__0x418ca8 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIh20custom_mod_constantsIhEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x418cbe___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418cbe_type* @G__0x418cbe to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIh22custom_equal_constantsIhEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x418cd6___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418cd6_type* @G__0x418cd6 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIh25custom_notequal_constantsIhEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x418cf1___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418cf1_type* @G__0x418cf1 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIh28custom_greaterthan_constantsIhEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x418d10___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418d10_type* @G__0x418d10 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIh25custom_lessthan_constantsIhEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x418d2c___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418d2c_type* @G__0x418d2c to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIh33custom_greaterthanequal_constantsIhEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x418d51___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418d51_type* @G__0x418d51 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIh30custom_lessthanequal_constantsIhEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x418d73___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418d73_type* @G__0x418d73 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIh20custom_and_constantsIhEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x418d89___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418d89_type* @G__0x418d89 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIh19custom_or_constantsIhEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x418d9e___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418d9e_type* @G__0x418d9e to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIh20custom_xor_constantsIhEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movslq_0x220d06__rip____rax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, ptrtoint (%G_0x220d06__rip__type* @G_0x220d06__rip_ to i64)
  %5 = add i64 %3, 7
  store i64 %5, i64* %PC, align 8
  %6 = inttoptr i64 %4 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = sext i32 %7 to i64
  store i64 %8, i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__r9d__0x220d25__rip_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0
  %R9D = bitcast %union.anon* %3 to i32*
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, ptrtoint (%G_0x220d25__rip__type* @G_0x220d25__rip_ to i64)
  %6 = load i32, i32* %R9D, align 4
  %7 = add i64 %4, 7
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %8, align 4
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x418db4___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418db4_type* @G__0x418db4 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIh19custom_constant_addIhEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x418dc9___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418dc9_type* @G__0x418dc9 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIh28custom_multiple_constant_addIhEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x418de8___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418de8_type* @G__0x418de8 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIh19custom_constant_subIhEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x418e02___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418e02_type* @G__0x418e02 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIh28custom_multiple_constant_subIhEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x418e26___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418e26_type* @G__0x418e26 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIh24custom_constant_multiplyIhEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x418e40___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418e40_type* @G__0x418e40 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIh33custom_multiple_constant_multiplyIhEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x418e65___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418e65_type* @G__0x418e65 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIh34custom_multiple_constant_multiply2IhEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x418e89___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418e89_type* @G__0x418e89 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIh22custom_constant_divideIhEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x418ea1___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418ea1_type* @G__0x418ea1 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIh31custom_multiple_constant_divideIhEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x418ec3___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418ec3_type* @G__0x418ec3 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIh32custom_multiple_constant_divide2IhEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x418ee5___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418ee5_type* @G__0x418ee5 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIh30custom_multiple_constant_mixedIhEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x418f05___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418f05_type* @G__0x418f05 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIh19custom_constant_andIhEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x418f1a___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418f1a_type* @G__0x418f1a to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIh28custom_multiple_constant_andIhEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x418f38___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418f38_type* @G__0x418f38 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIh18custom_constant_orIhEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x418f4c___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418f4c_type* @G__0x418f4c to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIh27custom_multiple_constant_orIhEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x418f69___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418f69_type* @G__0x418f69 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIh19custom_constant_xorIhEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x418f7e___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418f7e_type* @G__0x418f7e to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIh28custom_multiple_constant_xorIhEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline nounwind
define %struct.Memory* @routine_cvttsd2si_0x220ba2__rip____esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, ptrtoint (%G_0x220ba2__rip__type* @G_0x220ba2__rip_ to i64)
  %5 = add i64 %3, 8
  store i64 %5, i64* %PC, align 8
  %6 = inttoptr i64 %4 to double*
  %7 = load double, double* %6, align 8
  %8 = tail call double @llvm.trunc.f64(double %7)
  %9 = tail call double @llvm.fabs.f64(double %8)
  %10 = fcmp ogt double %9, 0x41DFFFFFFFC00000
  %11 = fptosi double %8 to i32
  %12 = zext i32 %11 to i64
  %13 = select i1 %10, i64 2147483648, i64 %12
  store i64 %13, i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x66c450___r9d(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0, i32 0
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 6
  store i64 %5, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x66c450_type* @G__0x66c450 to i64), i64 4294967295), i64* %3, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movw__si___r10w(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0
  %SI = bitcast %union.anon* %3 to i16*
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 21, i32 0
  %R10W = bitcast %union.anon* %4 to i16*
  %5 = load i16, i16* %SI, align 2
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 4
  store i64 %7, i64* %PC, align 8
  store i16 %5, i16* %R10W, align 2
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movswl__r10w___edx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 21, i32 0
  %R10W = bitcast %union.anon* %3 to i16*
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %4 = load i16, i16* %R10W, align 2
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = sext i16 %4 to i64
  %8 = and i64 %7, 4294967295
  store i64 %8, i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x6702d0___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x6702d0_type* @G__0x6702d0 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__rax__MINUS0x40__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -64
  %5 = load i64, i64* %RAX, align 8
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 4
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %4 to i64*
  store i64 %5, i64* %8, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z4fillIPssEvT_S1_T0_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl_0x220b72__rip____edx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, ptrtoint (%G_0x220b72__rip__type* @G_0x220b72__rip_ to i64)
  %5 = add i64 %3, 6
  store i64 %5, i64* %PC, align 8
  %6 = inttoptr i64 %4 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  store i64 %8, i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__edx__0x220bac__rip_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %EDX = bitcast %union.anon* %3 to i32*
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, ptrtoint (%G_0x220bac__rip__type* @G_0x220bac__rip_ to i64)
  %6 = load i32, i32* %EDX, align 4
  %7 = add i64 %4, 6
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %8, align 4
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x418f9d___edx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418f9d_type* @G__0x418f9d to i64), i64 4294967295), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq_MINUS0x40__rbp____rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -64
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIs10custom_twoIsEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x418faf___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418faf_type* @G__0x418faf to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIs20custom_add_constantsIsEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x418fc6___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418fc6_type* @G__0x418fc6 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIs20custom_sub_constantsIsEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x418fe2___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418fe2_type* @G__0x418fe2 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIs25custom_multiply_constantsIsEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x418ffe___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418ffe_type* @G__0x418ffe to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIs23custom_divide_constantsIsEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x419018___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419018_type* @G__0x419018 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIs20custom_mod_constantsIsEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x41902f___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41902f_type* @G__0x41902f to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIs22custom_equal_constantsIsEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x419048___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419048_type* @G__0x419048 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIs25custom_notequal_constantsIsEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x419064___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419064_type* @G__0x419064 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIs28custom_greaterthan_constantsIsEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x419084___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419084_type* @G__0x419084 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIs25custom_lessthan_constantsIsEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x4190a1___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4190a1_type* @G__0x4190a1 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIs33custom_greaterthanequal_constantsIsEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x4190c7___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4190c7_type* @G__0x4190c7 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIs30custom_lessthanequal_constantsIsEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x4190ea___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4190ea_type* @G__0x4190ea to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIs20custom_and_constantsIsEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x419101___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419101_type* @G__0x419101 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIs19custom_or_constantsIsEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x419117___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419117_type* @G__0x419117 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIs20custom_xor_constantsIsEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movslq_0x220a4a__rip____rax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, ptrtoint (%G_0x220a4a__rip__type* @G_0x220a4a__rip_ to i64)
  %5 = add i64 %3, 7
  store i64 %5, i64* %PC, align 8
  %6 = inttoptr i64 %4 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = sext i32 %7 to i64
  store i64 %8, i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__r9d__0x220a69__rip_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0
  %R9D = bitcast %union.anon* %3 to i32*
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, ptrtoint (%G_0x220a69__rip__type* @G_0x220a69__rip_ to i64)
  %6 = load i32, i32* %R9D, align 4
  %7 = add i64 %4, 7
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %8, align 4
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x41912e___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41912e_type* @G__0x41912e to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIs19custom_constant_addIsEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x419144___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419144_type* @G__0x419144 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIs28custom_multiple_constant_addIsEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x419164___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419164_type* @G__0x419164 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIs19custom_constant_subIsEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x41917f___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41917f_type* @G__0x41917f to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIs28custom_multiple_constant_subIsEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x4191a4___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4191a4_type* @G__0x4191a4 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIs24custom_constant_multiplyIsEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x4191bf___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4191bf_type* @G__0x4191bf to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIs33custom_multiple_constant_multiplyIsEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x4191e5___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4191e5_type* @G__0x4191e5 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIs34custom_multiple_constant_multiply2IsEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x41920a___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41920a_type* @G__0x41920a to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIs22custom_constant_divideIsEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x419223___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419223_type* @G__0x419223 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIs31custom_multiple_constant_divideIsEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x419246___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419246_type* @G__0x419246 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIs32custom_multiple_constant_divide2IsEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x419269___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419269_type* @G__0x419269 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIs30custom_multiple_constant_mixedIsEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x41928a___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41928a_type* @G__0x41928a to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIs19custom_constant_andIsEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x4192a0___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4192a0_type* @G__0x4192a0 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIs28custom_multiple_constant_andIsEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x4192bf___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4192bf_type* @G__0x4192bf to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIs18custom_constant_orIsEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x4192d4___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4192d4_type* @G__0x4192d4 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIs27custom_multiple_constant_orIsEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x4192f2___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4192f2_type* @G__0x4192f2 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIs19custom_constant_xorIsEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x419308___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419308_type* @G__0x419308 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIs28custom_multiple_constant_xorIsEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline nounwind
define %struct.Memory* @routine_cvttsd2si_0x2208e6__rip____esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, ptrtoint (%G_0x2208e6__rip__type* @G_0x2208e6__rip_ to i64)
  %5 = add i64 %3, 8
  store i64 %5, i64* %PC, align 8
  %6 = inttoptr i64 %4 to double*
  %7 = load double, double* %6, align 8
  %8 = tail call double @llvm.trunc.f64(double %7)
  %9 = tail call double @llvm.fabs.f64(double %8)
  %10 = fcmp ogt double %9, 0x41DFFFFFFFC00000
  %11 = fptosi double %8 to i32
  %12 = zext i32 %11 to i64
  %13 = select i1 %10, i64 2147483648, i64 %12
  store i64 %13, i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x6685d0___r9d(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0, i32 0
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 6
  store i64 %5, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x6685d0_type* @G__0x6685d0 to i64), i64 4294967295), i64* %3, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movzwl__r10w___edx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 21, i32 0
  %R10W = bitcast %union.anon* %3 to i16*
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %4 = load i16, i16* %R10W, align 2
  %5 = zext i16 %4 to i64
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 4
  store i64 %7, i64* %PC, align 8
  store i64 %5, i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x66c450___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x66c450_type* @G__0x66c450 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__rax__MINUS0x48__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -72
  %5 = load i64, i64* %RAX, align 8
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 4
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %4 to i64*
  store i64 %5, i64* %8, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z4fillIPttEvT_S1_T0_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl_0x2208b6__rip____edx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, ptrtoint (%G_0x2208b6__rip__type* @G_0x2208b6__rip_ to i64)
  %5 = add i64 %3, 6
  store i64 %5, i64* %PC, align 8
  %6 = inttoptr i64 %4 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  store i64 %8, i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__edx__0x2208f0__rip_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %EDX = bitcast %union.anon* %3 to i32*
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, ptrtoint (%G_0x2208f0__rip__type* @G_0x2208f0__rip_ to i64)
  %6 = load i32, i32* %EDX, align 4
  %7 = add i64 %4, 6
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %8, align 4
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x418f9c___edx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418f9c_type* @G__0x418f9c to i64), i64 4294967295), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq_MINUS0x48__rbp____rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -72
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIt10custom_twoItEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x418fae___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418fae_type* @G__0x418fae to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIt20custom_add_constantsItEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x418fc5___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418fc5_type* @G__0x418fc5 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIt20custom_sub_constantsItEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x418fe1___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418fe1_type* @G__0x418fe1 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIt25custom_multiply_constantsItEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x418ffd___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x418ffd_type* @G__0x418ffd to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIt23custom_divide_constantsItEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x419017___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419017_type* @G__0x419017 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIt20custom_mod_constantsItEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x41902e___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41902e_type* @G__0x41902e to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIt22custom_equal_constantsItEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x419047___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419047_type* @G__0x419047 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIt25custom_notequal_constantsItEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x419063___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419063_type* @G__0x419063 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIt28custom_greaterthan_constantsItEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x419083___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419083_type* @G__0x419083 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIt25custom_lessthan_constantsItEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x4190a0___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4190a0_type* @G__0x4190a0 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIt33custom_greaterthanequal_constantsItEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x4190c6___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4190c6_type* @G__0x4190c6 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIt30custom_lessthanequal_constantsItEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x4190e9___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4190e9_type* @G__0x4190e9 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIt20custom_and_constantsItEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x419100___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419100_type* @G__0x419100 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIt19custom_or_constantsItEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x419116___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419116_type* @G__0x419116 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIt20custom_xor_constantsItEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movslq_0x22078e__rip____rax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, ptrtoint (%G_0x22078e__rip__type* @G_0x22078e__rip_ to i64)
  %5 = add i64 %3, 7
  store i64 %5, i64* %PC, align 8
  %6 = inttoptr i64 %4 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = sext i32 %7 to i64
  store i64 %8, i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__r9d__0x2207ad__rip_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0
  %R9D = bitcast %union.anon* %3 to i32*
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, ptrtoint (%G_0x2207ad__rip__type* @G_0x2207ad__rip_ to i64)
  %6 = load i32, i32* %R9D, align 4
  %7 = add i64 %4, 7
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %8, align 4
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x41912d___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41912d_type* @G__0x41912d to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIt19custom_constant_addItEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x419143___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419143_type* @G__0x419143 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIt28custom_multiple_constant_addItEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x419163___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419163_type* @G__0x419163 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIt19custom_constant_subItEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x41917e___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41917e_type* @G__0x41917e to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIt28custom_multiple_constant_subItEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x4191a3___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4191a3_type* @G__0x4191a3 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIt24custom_constant_multiplyItEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x4191be___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4191be_type* @G__0x4191be to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIt33custom_multiple_constant_multiplyItEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x4191e4___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4191e4_type* @G__0x4191e4 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIt34custom_multiple_constant_multiply2ItEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x419209___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419209_type* @G__0x419209 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIt22custom_constant_divideItEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x419222___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419222_type* @G__0x419222 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIt31custom_multiple_constant_divideItEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x419245___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419245_type* @G__0x419245 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIt32custom_multiple_constant_divide2ItEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x419268___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419268_type* @G__0x419268 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIt30custom_multiple_constant_mixedItEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x419289___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419289_type* @G__0x419289 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIt19custom_constant_andItEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x41929f___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41929f_type* @G__0x41929f to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIt28custom_multiple_constant_andItEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x4192be___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4192be_type* @G__0x4192be to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIt18custom_constant_orItEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x4192d3___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4192d3_type* @G__0x4192d3 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIt27custom_multiple_constant_orItEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x4192f1___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4192f1_type* @G__0x4192f1 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIt19custom_constant_xorItEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x419307___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419307_type* @G__0x419307 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIt28custom_multiple_constant_xorItEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movsd_0x22062a__rip____xmm0(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, ptrtoint (%G_0x22062a__rip__type* @G_0x22062a__rip_ to i64)
  %5 = add i64 %3, 8
  store i64 %5, i64* %PC, align 8
  %6 = inttoptr i64 %4 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 0
  store i64 %7, i64* %8, align 1
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 1
  %10 = bitcast i64* %9 to double*
  store double 0.000000e+00, double* %10, align 1
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline nounwind
define %struct.Memory* @routine_cvttsd2si__xmm0___edx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 4
  store i64 %5, i64* %PC, align 8
  %6 = bitcast %union.VectorReg* %3 to double*
  %7 = load double, double* %6, align 1
  %8 = tail call double @llvm.trunc.f64(double %7)
  %9 = tail call double @llvm.fabs.f64(double %8)
  %10 = fcmp ogt double %9, 0x41DFFFFFFFC00000
  %11 = fptosi double %8 to i32
  %12 = zext i32 %11 to i64
  %13 = select i1 %10, i64 2147483648, i64 %12
  store i64 %13, i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x6608d0___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x6608d0_type* @G__0x6608d0 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__esi___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0
  %ESI = bitcast %union.anon* %3 to i32*
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %4 = load i32, i32* %ESI, align 4
  %5 = zext i32 %4 to i64
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 2
  store i64 %7, i64* %PC, align 8
  store i64 %5, i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x6685d0___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x6685d0_type* @G__0x6685d0 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__rax__MINUS0x50__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -80
  %5 = load i64, i64* %RAX, align 8
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 4
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %4 to i64*
  store i64 %5, i64* %8, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z4fillIPiiEvT_S1_T0_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl_0x220600__rip____edx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, ptrtoint (%G_0x220600__rip__type* @G_0x220600__rip_ to i64)
  %5 = add i64 %3, 6
  store i64 %5, i64* %PC, align 8
  %6 = inttoptr i64 %4 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  store i64 %8, i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__edx__0x22063a__rip_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %EDX = bitcast %union.anon* %3 to i32*
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, ptrtoint (%G_0x22063a__rip__type* @G_0x22063a__rip_ to i64)
  %6 = load i32, i32* %EDX, align 4
  %7 = add i64 %4, 6
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %8, align 4
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x419327___edx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419327_type* @G__0x419327 to i64), i64 4294967295), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq_MINUS0x50__rbp____rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -80
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIi10custom_twoIiEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x419339___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419339_type* @G__0x419339 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIi20custom_add_constantsIiEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x419350___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419350_type* @G__0x419350 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIi20custom_sub_constantsIiEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x41936c___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41936c_type* @G__0x41936c to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIi25custom_multiply_constantsIiEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x419388___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419388_type* @G__0x419388 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIi23custom_divide_constantsIiEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x4193a2___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4193a2_type* @G__0x4193a2 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIi20custom_mod_constantsIiEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x4193b9___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4193b9_type* @G__0x4193b9 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIi22custom_equal_constantsIiEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x4193d2___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4193d2_type* @G__0x4193d2 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIi25custom_notequal_constantsIiEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x4193ee___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4193ee_type* @G__0x4193ee to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIi28custom_greaterthan_constantsIiEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x41940e___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41940e_type* @G__0x41940e to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIi25custom_lessthan_constantsIiEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x41942b___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41942b_type* @G__0x41942b to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIi33custom_greaterthanequal_constantsIiEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x419451___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419451_type* @G__0x419451 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIi30custom_lessthanequal_constantsIiEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x419474___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419474_type* @G__0x419474 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIi20custom_and_constantsIiEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x41948b___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41948b_type* @G__0x41948b to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIi19custom_or_constantsIiEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x4194a1___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4194a1_type* @G__0x4194a1 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIi20custom_xor_constantsIiEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movslq_0x2204d8__rip____rax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, ptrtoint (%G_0x2204d8__rip__type* @G_0x2204d8__rip_ to i64)
  %5 = add i64 %3, 7
  store i64 %5, i64* %PC, align 8
  %6 = inttoptr i64 %4 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = sext i32 %7 to i64
  store i64 %8, i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__r9d__0x2204f7__rip_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0
  %R9D = bitcast %union.anon* %3 to i32*
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, ptrtoint (%G_0x2204f7__rip__type* @G_0x2204f7__rip_ to i64)
  %6 = load i32, i32* %R9D, align 4
  %7 = add i64 %4, 7
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %8, align 4
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x4194b8___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4194b8_type* @G__0x4194b8 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIi19custom_constant_addIiEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x4194ce___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4194ce_type* @G__0x4194ce to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIi28custom_multiple_constant_addIiEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x4194ee___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4194ee_type* @G__0x4194ee to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIi19custom_constant_subIiEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x419509___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419509_type* @G__0x419509 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIi28custom_multiple_constant_subIiEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x41952e___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41952e_type* @G__0x41952e to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIi24custom_constant_multiplyIiEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x419549___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419549_type* @G__0x419549 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIi33custom_multiple_constant_multiplyIiEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x41956f___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41956f_type* @G__0x41956f to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIi34custom_multiple_constant_multiply2IiEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x419594___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419594_type* @G__0x419594 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIi22custom_constant_divideIiEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x4195ad___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4195ad_type* @G__0x4195ad to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIi31custom_multiple_constant_divideIiEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x4195d0___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4195d0_type* @G__0x4195d0 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIi32custom_multiple_constant_divide2IiEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x4195f3___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4195f3_type* @G__0x4195f3 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIi30custom_multiple_constant_mixedIiEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x419614___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419614_type* @G__0x419614 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIi19custom_constant_andIiEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x41962a___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41962a_type* @G__0x41962a to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIi28custom_multiple_constant_andIiEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x419649___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419649_type* @G__0x419649 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIi18custom_constant_orIiEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x41965e___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41965e_type* @G__0x41965e to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIi27custom_multiple_constant_orIiEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x41967c___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41967c_type* @G__0x41967c to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIi19custom_constant_xorIiEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x419692___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419692_type* @G__0x419692 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIi28custom_multiple_constant_xorIiEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline nounwind
define %struct.Memory* @routine_cvttsd2si_0x220373__rip____rax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, ptrtoint (%G_0x220373__rip__type* @G_0x220373__rip_ to i64)
  %5 = add i64 %3, 9
  store i64 %5, i64* %PC, align 8
  %6 = inttoptr i64 %4 to double*
  %7 = load double, double* %6, align 8
  %8 = tail call double @llvm.trunc.f64(double %7)
  %9 = tail call double @llvm.fabs.f64(double %8)
  %10 = fcmp ogt double %9, 0x43E0000000000000
  %11 = fptosi double %8 to i64
  %12 = select i1 %10, i64 -9223372036854775808, i64 %11
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__eax___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %4 = load i32, i32* %EAX, align 4
  %5 = zext i32 %4 to i64
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 2
  store i64 %7, i64* %PC, align 8
  store i64 %5, i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x658bd0___r9d(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0, i32 0
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 6
  store i64 %5, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x658bd0_type* @G__0x658bd0 to i64), i64 4294967295), i64* %3, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x6608d0___r9d(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0, i32 0
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 6
  store i64 %5, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x6608d0_type* @G__0x6608d0 to i64), i64 4294967295), i64* %3, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__r9d___ecx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0
  %R9D = bitcast %union.anon* %3 to i32*
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %4 = load i32, i32* %R9D, align 4
  %5 = zext i32 %4 to i64
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 3
  store i64 %7, i64* %PC, align 8
  store i64 %5, i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__esi__MINUS0x54__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0
  %ESI = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -84
  %6 = load i32, i32* %ESI, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 3
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__rcx___rsi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %RCX, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 3
  store i64 %5, i64* %PC, align 8
  store i64 %3, i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl_MINUS0x54__rbp____edx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -84
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 3
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__rax__MINUS0x60__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -96
  %5 = load i64, i64* %RAX, align 8
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 4
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %4 to i64*
  store i64 %5, i64* %8, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z4fillIPjjEvT_S1_T0_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl_0x22033c__rip____edx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, ptrtoint (%G_0x22033c__rip__type* @G_0x22033c__rip_ to i64)
  %5 = add i64 %3, 6
  store i64 %5, i64* %PC, align 8
  %6 = inttoptr i64 %4 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  store i64 %8, i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__edx__0x220376__rip_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %EDX = bitcast %union.anon* %3 to i32*
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, ptrtoint (%G_0x220376__rip__type* @G_0x220376__rip_ to i64)
  %6 = load i32, i32* %EDX, align 4
  %7 = add i64 %4, 6
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %8, align 4
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x419326___edx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419326_type* @G__0x419326 to i64), i64 4294967295), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq_MINUS0x60__rbp____rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -96
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIj10custom_twoIjEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x419338___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419338_type* @G__0x419338 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIj20custom_add_constantsIjEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x41934f___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41934f_type* @G__0x41934f to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIj20custom_sub_constantsIjEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x41936b___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41936b_type* @G__0x41936b to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIj25custom_multiply_constantsIjEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x419387___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419387_type* @G__0x419387 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIj23custom_divide_constantsIjEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x4193a1___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4193a1_type* @G__0x4193a1 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIj20custom_mod_constantsIjEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x4193b8___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4193b8_type* @G__0x4193b8 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIj22custom_equal_constantsIjEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x4193d1___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4193d1_type* @G__0x4193d1 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIj25custom_notequal_constantsIjEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x4193ed___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4193ed_type* @G__0x4193ed to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIj28custom_greaterthan_constantsIjEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x41940d___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41940d_type* @G__0x41940d to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIj25custom_lessthan_constantsIjEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x41942a___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41942a_type* @G__0x41942a to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIj33custom_greaterthanequal_constantsIjEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x419450___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419450_type* @G__0x419450 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIj30custom_lessthanequal_constantsIjEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x419473___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419473_type* @G__0x419473 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIj20custom_and_constantsIjEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x41948a___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41948a_type* @G__0x41948a to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIj19custom_or_constantsIjEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x4194a0___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4194a0_type* @G__0x4194a0 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIj20custom_xor_constantsIjEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movslq_0x220214__rip____rax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, ptrtoint (%G_0x220214__rip__type* @G_0x220214__rip_ to i64)
  %5 = add i64 %3, 7
  store i64 %5, i64* %PC, align 8
  %6 = inttoptr i64 %4 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = sext i32 %7 to i64
  store i64 %8, i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__r9d__0x220233__rip_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0
  %R9D = bitcast %union.anon* %3 to i32*
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, ptrtoint (%G_0x220233__rip__type* @G_0x220233__rip_ to i64)
  %6 = load i32, i32* %R9D, align 4
  %7 = add i64 %4, 7
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %8, align 4
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x4194b7___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4194b7_type* @G__0x4194b7 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIj19custom_constant_addIjEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x4194cd___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4194cd_type* @G__0x4194cd to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIj28custom_multiple_constant_addIjEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x4194ed___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4194ed_type* @G__0x4194ed to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIj19custom_constant_subIjEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x419508___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419508_type* @G__0x419508 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIj28custom_multiple_constant_subIjEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x41952d___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41952d_type* @G__0x41952d to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIj24custom_constant_multiplyIjEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x419548___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419548_type* @G__0x419548 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIj33custom_multiple_constant_multiplyIjEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x41956e___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41956e_type* @G__0x41956e to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIj34custom_multiple_constant_multiply2IjEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x419593___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419593_type* @G__0x419593 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIj22custom_constant_divideIjEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x4195ac___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4195ac_type* @G__0x4195ac to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIj31custom_multiple_constant_divideIjEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x4195cf___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4195cf_type* @G__0x4195cf to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIj32custom_multiple_constant_divide2IjEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x4195f2___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4195f2_type* @G__0x4195f2 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIj30custom_multiple_constant_mixedIjEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x419613___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419613_type* @G__0x419613 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIj19custom_constant_andIjEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x419629___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419629_type* @G__0x419629 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIj28custom_multiple_constant_andIjEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x419648___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419648_type* @G__0x419648 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIj18custom_constant_orIjEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x41965d___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41965d_type* @G__0x41965d to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIj27custom_multiple_constant_orIjEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x41967b___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41967b_type* @G__0x41967b to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIj19custom_constant_xorIjEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x419691___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419691_type* @G__0x419691 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIj28custom_multiple_constant_xorIjEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movsd_0x2200b0__rip____xmm0(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, ptrtoint (%G_0x2200b0__rip__type* @G_0x2200b0__rip_ to i64)
  %5 = add i64 %3, 8
  store i64 %5, i64* %PC, align 8
  %6 = inttoptr i64 %4 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 0
  store i64 %7, i64* %8, align 1
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 1
  %10 = bitcast i64* %9 to double*
  store double 0.000000e+00, double* %10, align 1
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline nounwind
define %struct.Memory* @routine_cvttsd2si__xmm0___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 5
  store i64 %5, i64* %PC, align 8
  %6 = bitcast %union.VectorReg* %3 to double*
  %7 = load double, double* %6, align 1
  %8 = tail call double @llvm.trunc.f64(double %7)
  %9 = tail call double @llvm.fabs.f64(double %8)
  %10 = fcmp ogt double %9, 0x43E0000000000000
  %11 = fptosi double %8 to i64
  %12 = select i1 %10, i64 -9223372036854775808, i64 %11
  store i64 %12, i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x6491d0___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x6491d0_type* @G__0x6491d0 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x658bd0___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x658bd0_type* @G__0x658bd0 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__rax__MINUS0x68__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -104
  %5 = load i64, i64* %RAX, align 8
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 4
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %4 to i64*
  store i64 %5, i64* %8, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z4fillIPllEvT_S1_T0_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl_0x220084__rip____r9d(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0, i32 0
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, ptrtoint (%G_0x220084__rip__type* @G_0x220084__rip_ to i64)
  %6 = add i64 %4, 7
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %5 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %3, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__r9d__0x2200bd__rip_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0
  %R9D = bitcast %union.anon* %3 to i32*
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, ptrtoint (%G_0x2200bd__rip__type* @G_0x2200bd__rip_ to i64)
  %6 = load i32, i32* %R9D, align 4
  %7 = add i64 %4, 7
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %8, align 4
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x4196b1___r9d(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0, i32 0
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 6
  store i64 %5, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4196b1_type* @G__0x4196b1 to i64), i64 4294967295), i64* %3, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__r9d___edx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0
  %R9D = bitcast %union.anon* %3 to i32*
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %4 = load i32, i32* %R9D, align 4
  %5 = zext i32 %4 to i64
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 3
  store i64 %7, i64* %PC, align 8
  store i64 %5, i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq_MINUS0x68__rbp____rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -104
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIl10custom_twoIlEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x4196c3___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4196c3_type* @G__0x4196c3 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIl20custom_add_constantsIlEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x4196da___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4196da_type* @G__0x4196da to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIl20custom_sub_constantsIlEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x4196f6___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4196f6_type* @G__0x4196f6 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIl25custom_multiply_constantsIlEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x419712___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419712_type* @G__0x419712 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIl23custom_divide_constantsIlEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x41972c___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41972c_type* @G__0x41972c to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIl20custom_mod_constantsIlEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x419743___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419743_type* @G__0x419743 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIl22custom_equal_constantsIlEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x41975c___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41975c_type* @G__0x41975c to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIl25custom_notequal_constantsIlEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x419778___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419778_type* @G__0x419778 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIl28custom_greaterthan_constantsIlEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x419798___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419798_type* @G__0x419798 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIl25custom_lessthan_constantsIlEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x4197b5___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4197b5_type* @G__0x4197b5 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIl33custom_greaterthanequal_constantsIlEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x4197db___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4197db_type* @G__0x4197db to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIl30custom_lessthanequal_constantsIlEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x4197fe___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4197fe_type* @G__0x4197fe to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIl20custom_and_constantsIlEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x419815___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419815_type* @G__0x419815 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIl19custom_or_constantsIlEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x41982b___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41982b_type* @G__0x41982b to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIl20custom_xor_constantsIlEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movslq_0x21ff57__rip____rax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, ptrtoint (%G_0x21ff57__rip__type* @G_0x21ff57__rip_ to i64)
  %5 = add i64 %3, 7
  store i64 %5, i64* %PC, align 8
  %6 = inttoptr i64 %4 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = sext i32 %7 to i64
  store i64 %8, i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__r9d__0x21ff76__rip_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0
  %R9D = bitcast %union.anon* %3 to i32*
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, ptrtoint (%G_0x21ff76__rip__type* @G_0x21ff76__rip_ to i64)
  %6 = load i32, i32* %R9D, align 4
  %7 = add i64 %4, 7
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %8, align 4
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x419842___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419842_type* @G__0x419842 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIl19custom_constant_addIlEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x419858___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419858_type* @G__0x419858 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIl28custom_multiple_constant_addIlEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x419878___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419878_type* @G__0x419878 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIl19custom_constant_subIlEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x419893___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419893_type* @G__0x419893 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIl28custom_multiple_constant_subIlEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x4198b8___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4198b8_type* @G__0x4198b8 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIl24custom_constant_multiplyIlEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x4198d3___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4198d3_type* @G__0x4198d3 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIl33custom_multiple_constant_multiplyIlEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x4198f9___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4198f9_type* @G__0x4198f9 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIl34custom_multiple_constant_multiply2IlEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x41991e___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41991e_type* @G__0x41991e to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIl22custom_constant_divideIlEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x419937___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419937_type* @G__0x419937 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIl31custom_multiple_constant_divideIlEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x41995a___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41995a_type* @G__0x41995a to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIl32custom_multiple_constant_divide2IlEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x41997d___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41997d_type* @G__0x41997d to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIl30custom_multiple_constant_mixedIlEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x41999e___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41999e_type* @G__0x41999e to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIl19custom_constant_andIlEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x4199b4___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4199b4_type* @G__0x4199b4 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIl28custom_multiple_constant_andIlEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x4199d3___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4199d3_type* @G__0x4199d3 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIl18custom_constant_orIlEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x4199e8___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4199e8_type* @G__0x4199e8 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIl27custom_multiple_constant_orIlEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x419a06___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419a06_type* @G__0x419a06 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIl19custom_constant_xorIlEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x419a1c___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x419a1c_type* @G__0x419a1c to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIl28custom_multiple_constant_xorIlEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movsd_0x21fdf3__rip____xmm0(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, ptrtoint (%G_0x21fdf3__rip__type* @G_0x21fdf3__rip_ to i64)
  %5 = add i64 %3, 8
  store i64 %5, i64* %PC, align 8
  %6 = inttoptr i64 %4 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 0
  store i64 %7, i64* %8, align 1
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 1
  %10 = bitcast i64* %9 to double*
  store double 0.000000e+00, double* %10, align 1
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movsd_0x16793__rip____xmm1(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, ptrtoint (%G_0x16793__rip__type* @G_0x16793__rip_ to i64)
  %5 = add i64 %3, 8
  store i64 %5, i64* %PC, align 8
  %6 = inttoptr i64 %4 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 1, i32 0, i32 0, i32 0, i64 0
  store i64 %7, i64* %8, align 1
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 1, i32 0, i32 0, i32 0, i64 1
  %10 = bitcast i64* %9 to double*
  store double 0.000000e+00, double* %10, align 1
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movaps__xmm0___xmm2(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 2
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0
  %5 = bitcast %union.VectorReg* %3 to i8*
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 3
  store i64 %7, i64* %PC, align 8
  %8 = bitcast %union.VectorReg* %4 to <2 x i32>*
  %9 = load <2 x i32>, <2 x i32>* %8, align 1
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 1
  %11 = bitcast i64* %10 to <2 x i32>*
  %12 = load <2 x i32>, <2 x i32>* %11, align 1
  %13 = extractelement <2 x i32> %9, i32 0
  %14 = bitcast %union.VectorReg* %3 to i32*
  store i32 %13, i32* %14, align 1
  %15 = extractelement <2 x i32> %9, i32 1
  %16 = getelementptr inbounds i8, i8* %5, i64 4
  %17 = bitcast i8* %16 to i32*
  store i32 %15, i32* %17, align 1
  %18 = extractelement <2 x i32> %12, i32 0
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 2, i32 0, i32 0, i32 0, i64 1
  %20 = bitcast i64* %19 to i32*
  store i32 %18, i32* %20, align 1
  %21 = extractelement <2 x i32> %12, i32 1
  %22 = getelementptr inbounds i8, i8* %5, i64 12
  %23 = bitcast i8* %22 to i32*
  store i32 %21, i32* %23, align 1
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_subsd__xmm1___xmm2(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 2
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 1
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = bitcast %union.VectorReg* %3 to double*
  %8 = load double, double* %7, align 1
  %9 = bitcast %union.VectorReg* %4 to double*
  %10 = load double, double* %9, align 1
  %11 = fsub double %8, %10
  store double %11, double* %7, align 1
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline nounwind
define %struct.Memory* @routine_cvttsd2si__xmm2___rax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 2
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 5
  store i64 %5, i64* %PC, align 8
  %6 = bitcast %union.VectorReg* %3 to double*
  %7 = load double, double* %6, align 1
  %8 = tail call double @llvm.trunc.f64(double %7)
  %9 = tail call double @llvm.fabs.f64(double %8)
  %10 = fcmp ogt double %9, 0x43E0000000000000
  %11 = fptosi double %8 to i64
  %12 = select i1 %10, i64 -9223372036854775808, i64 %11
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__0x8000000000000000___rcx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 -9223372036854775808, i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline nounwind
define %struct.Memory* @routine_xorq__rcx___rax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %3 = load i64, i64* %RAX, align 8
  %4 = load i64, i64* %RCX, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 3
  store i64 %6, i64* %PC, align 8
  %7 = xor i64 %4, %3
  store i64 %7, i64* %RAX, align 8
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8, align 1
  %9 = trunc i64 %7 to i32
  %10 = and i32 %9, 255
  %11 = tail call i32 @llvm.ctpop.i32(i32 %10)
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = icmp eq i64 %7, 0
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17, i8* %18, align 1
  %19 = lshr i64 %7, 63
  %20 = trunc i64 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %22, align 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %23, align 1
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline nounwind
define %struct.Memory* @routine_cvttsd2si__xmm0___rcx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 5
  store i64 %5, i64* %PC, align 8
  %6 = bitcast %union.VectorReg* %3 to double*
  %7 = load double, double* %6, align 1
  %8 = tail call double @llvm.trunc.f64(double %7)
  %9 = tail call double @llvm.fabs.f64(double %8)
  %10 = fcmp ogt double %9, 0x43E0000000000000
  %11 = fptosi double %8 to i64
  %12 = select i1 %10, i64 -9223372036854775808, i64 %11
  store i64 %12, i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline
define %struct.Memory* @routine_ucomisd__xmm0___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr #1 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 1
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = bitcast %union.VectorReg* %4 to double*
  %8 = load double, double* %7, align 1
  %9 = bitcast [32 x %union.VectorReg]* %3 to double*
  %10 = load double, double* %9, align 1
  %11 = fcmp uno double %8, %10
  br i1 %11, label %12, label %22

; <label>:12:                                     ; preds = %block_400488
  %13 = fadd double %8, %10
  %14 = bitcast double %13 to i64
  %15 = and i64 %14, 9221120237041090560
  %16 = icmp eq i64 %15, 9218868437227405312
  %17 = and i64 %14, 2251799813685247
  %18 = icmp ne i64 %17, 0
  %19 = and i1 %16, %18
  br i1 %19, label %20, label %28

; <label>:20:                                     ; preds = %12
  %21 = tail call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %6, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit

; <label>:22:                                     ; preds = %block_400488
  %23 = fcmp ogt double %8, %10
  br i1 %23, label %28, label %24

; <label>:24:                                     ; preds = %22
  %25 = fcmp olt double %8, %10
  br i1 %25, label %28, label %26

; <label>:26:                                     ; preds = %24
  %27 = fcmp oeq double %8, %10
  br i1 %27, label %28, label %35

; <label>:28:                                     ; preds = %26, %24, %22, %12
  %29 = phi i8 [ 0, %22 ], [ 0, %24 ], [ 1, %26 ], [ 1, %12 ]
  %30 = phi i8 [ 0, %22 ], [ 0, %24 ], [ 0, %26 ], [ 1, %12 ]
  %31 = phi i8 [ 0, %22 ], [ 1, %24 ], [ 0, %26 ], [ 1, %12 ]
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %29, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %30, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %31, i8* %34, align 1
  br label %35

; <label>:35:                                     ; preds = %28, %26
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %36, align 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %37, align 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %38, align 1
  br label %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit

_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit: ; preds = %35, %20
  %39 = phi %struct.Memory* [ %21, %20 ], [ %2, %35 ]
  ret %struct.Memory* %39
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_cmovaq__rcx___rax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %3 = load i64, i64* %RCX, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 4
  store i64 %5, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %7 = load i8, i8* %6, align 1
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9 = load i8, i8* %8, align 1
  %10 = or i8 %9, %7
  %11 = icmp eq i8 %10, 0
  %12 = load i64, i64* %RAX, align 8
  %13 = select i1 %11, i64 %3, i64 %12
  store i64 %13, i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq_MINUS0x20__rbp____rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -32
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq_MINUS0x28__rbp____rsi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -40
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__rax___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %RAX, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 3
  store i64 %5, i64* %PC, align 8
  store i64 %3, i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z4fillIPmmEvT_S1_T0_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__0x6397d0___rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x6397d0_type* @G__0x6397d0 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0x1f40___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 8000, i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__0x4196b0___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4196b0_type* @G__0x4196b0 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl_0x622080___r9d(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0, i32 0
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 8
  store i64 %5, i64* %PC, align 8
  %6 = load i32, i32* bitcast (%G_0x622080_type* @G_0x622080 to i32*), align 8
  %7 = zext i32 %6 to i64
  store i64 %7, i64* %3, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__r9d__0x6220c0(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0
  %R9D = bitcast %union.anon* %3 to i32*
  %4 = load i32, i32* %R9D, align 4
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 8
  store i64 %6, i64* %PC, align 8
  store i32 %4, i32* bitcast (%G_0x6220c0_type* @G_0x6220c0 to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIm10custom_twoImEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__0x4196c2___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4196c2_type* @G__0x4196c2 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIm20custom_add_constantsImEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__0x4196d9___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4196d9_type* @G__0x4196d9 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIm20custom_sub_constantsImEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__0x4196f5___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4196f5_type* @G__0x4196f5 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIm25custom_multiply_constantsImEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__0x419711___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419711_type* @G__0x419711 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIm23custom_divide_constantsImEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__0x41972b___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x41972b_type* @G__0x41972b to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIm20custom_mod_constantsImEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__0x419742___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419742_type* @G__0x419742 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIm22custom_equal_constantsImEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__0x41975b___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x41975b_type* @G__0x41975b to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIm25custom_notequal_constantsImEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__0x419777___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419777_type* @G__0x419777 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIm28custom_greaterthan_constantsImEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__0x419797___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419797_type* @G__0x419797 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIm25custom_lessthan_constantsImEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__0x4197b4___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4197b4_type* @G__0x4197b4 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIm33custom_greaterthanequal_constantsImEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__0x4197da___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4197da_type* @G__0x4197da to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIm30custom_lessthanequal_constantsImEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__0x4197fd___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4197fd_type* @G__0x4197fd to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIm20custom_and_constantsImEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__0x419814___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419814_type* @G__0x419814 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIm19custom_or_constantsImEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__0x41982a___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x41982a_type* @G__0x41982a to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIm20custom_xor_constantsImEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__0x419841___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419841_type* @G__0x419841 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0xa___r9d(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0, i32 0
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 6
  store i64 %5, i64* %PC, align 8
  store i64 10, i64* %3, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl_0x622080___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 7
  store i64 %4, i64* %PC, align 8
  %5 = load i32, i32* bitcast (%G_0x622080_type* @G_0x622080 to i32*), align 8
  %6 = zext i32 %5 to i64
  store i64 %6, i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__rdx__MINUS0x70__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -112
  %5 = load i64, i64* %RDX, align 8
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 4
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %4 to i64*
  store i64 %5, i64* %8, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_cltd(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 1
  store i64 %4, i64* %PC, align 8
  %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %7 = bitcast %union.anon* %6 to i32*
  %8 = load i32, i32* %7, align 8
  %9 = sext i32 %8 to i64
  %10 = lshr i64 %9, 32
  store i64 %10, i64* %5, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline
define %struct.Memory* @routine_idivl__r9d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr #1 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0
  %R9D = bitcast %union.anon* %3 to i32*
  %4 = load i32, i32* %R9D, align 4
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 3
  store i64 %6, i64* %PC, align 8
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %8 = bitcast %union.anon* %7 to i32*
  %9 = load i32, i32* %8, align 8
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %12 = bitcast %union.anon* %11 to i32*
  %13 = load i32, i32* %12, align 8
  %14 = zext i32 %13 to i64
  %15 = sext i32 %4 to i64
  %16 = shl nuw i64 %14, 32
  %17 = or i64 %16, %10
  %18 = sdiv i64 %17, %15
  %19 = shl i64 %18, 32
  %20 = ashr exact i64 %19, 32
  %21 = icmp eq i64 %18, %20
  br i1 %21, label %24, label %22

; <label>:22:                                     ; preds = %block_400488
  %23 = tail call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %6, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:24:                                     ; preds = %block_400488
  %25 = srem i64 %17, %15
  %26 = getelementptr inbounds %union.anon, %union.anon* %7, i64 0, i32 0
  %27 = and i64 %18, 4294967295
  store i64 %27, i64* %26, align 8
  %28 = getelementptr inbounds %union.anon, %union.anon* %11, i64 0, i32 0
  %29 = and i64 %25, 4294967295
  store i64 %29, i64* %28, align 8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %30, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %31, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %35, align 1
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %24, %22
  %36 = phi %struct.Memory* [ %23, %22 ], [ %2, %24 ]
  ret %struct.Memory* %36
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__eax__0x6220c0(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %4 = load i32, i32* %EAX, align 4
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i32 %4, i32* bitcast (%G_0x6220c0_type* @G_0x6220c0 to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq_MINUS0x70__rbp____rcx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -112
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__rcx___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %RCX, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 3
  store i64 %5, i64* %PC, align 8
  store i64 %3, i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIm19custom_constant_addImEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__0x419857___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419857_type* @G__0x419857 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIm28custom_multiple_constant_addImEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__0x419877___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419877_type* @G__0x419877 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIm19custom_constant_subImEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__0x419892___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419892_type* @G__0x419892 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIm28custom_multiple_constant_subImEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__0x4198b7___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4198b7_type* @G__0x4198b7 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIm24custom_constant_multiplyImEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__0x4198d2___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4198d2_type* @G__0x4198d2 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIm33custom_multiple_constant_multiplyImEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__0x4198f8___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4198f8_type* @G__0x4198f8 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIm34custom_multiple_constant_multiply2ImEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__0x41991d___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x41991d_type* @G__0x41991d to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIm22custom_constant_divideImEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__0x419936___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419936_type* @G__0x419936 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIm31custom_multiple_constant_divideImEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__0x419959___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419959_type* @G__0x419959 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIm32custom_multiple_constant_divide2ImEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__0x41997c___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x41997c_type* @G__0x41997c to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIm30custom_multiple_constant_mixedImEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__0x41999d___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x41999d_type* @G__0x41999d to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIm19custom_constant_andImEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__0x4199b3___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4199b3_type* @G__0x4199b3 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIm28custom_multiple_constant_andImEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__0x4199d2___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4199d2_type* @G__0x4199d2 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIm18custom_constant_orImEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__0x4199e7___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4199e7_type* @G__0x4199e7 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIm27custom_multiple_constant_orImEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__0x419a05___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419a05_type* @G__0x419a05 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIm19custom_constant_xorImEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__0x419a1b___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419a1b_type* @G__0x419a1b to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIm28custom_multiple_constant_xorImEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__0x631ad0___rcx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x631ad0_type* @G__0x631ad0 to i64), i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline nounwind
define %struct.Memory* @routine_addq__0x7d00___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %RDX, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 7
  store i64 %5, i64* %PC, align 8
  %6 = add i64 %3, 32000
  store i64 %6, i64* %RDX, align 8
  %7 = icmp ugt i64 %3, -32001
  %8 = zext i1 %7 to i8
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8, i8* %9, align 1
  %10 = trunc i64 %6 to i32
  %11 = and i32 %10, 255
  %12 = tail call i32 @llvm.ctpop.i32(i32 %11)
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = xor i64 %6, %3
  %18 = lshr i64 %17, 4
  %19 = trunc i64 %18 to i8
  %20 = and i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20, i8* %21, align 1
  %22 = icmp eq i64 %6, 0
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23, i8* %24, align 1
  %25 = lshr i64 %6, 63
  %26 = trunc i64 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26, i8* %27, align 1
  %28 = lshr i64 %3, 63
  %29 = xor i64 %25, %28
  %30 = add nuw nsw i64 %29, %25
  %31 = icmp eq i64 %30, 2
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %32, i8* %33, align 1
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_cvtsd2ss_0x622088___xmm0(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0
  %4 = bitcast %union.VectorReg* %3 to i8*
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 9
  store i64 %6, i64* %PC, align 8
  %7 = bitcast %union.VectorReg* %3 to <2 x i32>*
  %8 = load <2 x i32>, <2 x i32>* %7, align 1
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 1
  %10 = bitcast i64* %9 to <2 x i32>*
  %11 = load <2 x i32>, <2 x i32>* %10, align 1
  %12 = load double, double* bitcast (%G_0x622088_type* @G_0x622088 to double*), align 8
  %13 = fptrunc double %12 to float
  %14 = bitcast %union.VectorReg* %3 to float*
  store float %13, float* %14, align 1
  %15 = extractelement <2 x i32> %8, i32 1
  %16 = getelementptr inbounds i8, i8* %4, i64 4
  %17 = bitcast i8* %16 to i32*
  store i32 %15, i32* %17, align 1
  %18 = extractelement <2 x i32> %11, i32 0
  %19 = bitcast i64* %9 to i32*
  store i32 %18, i32* %19, align 1
  %20 = extractelement <2 x i32> %11, i32 1
  %21 = getelementptr inbounds i8, i8* %4, i64 12
  %22 = bitcast i8* %21 to i32*
  store i32 %20, i32* %22, align 1
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__rcx___rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %RCX, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 3
  store i64 %5, i64* %PC, align 8
  store i64 %3, i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__rdx___rsi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %RDX, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 3
  store i64 %5, i64* %PC, align 8
  store i64 %3, i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z4fillIPffEvT_S1_T0_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__0x631ad0___rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x631ad0_type* @G__0x631ad0 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__0x419a3a___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419a3a_type* @G__0x419a3a to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIf10custom_twoIfEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__0x419a49___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419a49_type* @G__0x419a49 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIf20custom_add_constantsIfEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__0x419a5d___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419a5d_type* @G__0x419a5d to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIf20custom_sub_constantsIfEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__0x419a76___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419a76_type* @G__0x419a76 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIf25custom_multiply_constantsIfEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__0x419a8f___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419a8f_type* @G__0x419a8f to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIf23custom_divide_constantsIfEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__0x419aa6___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419aa6_type* @G__0x419aa6 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__0xa___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 10, i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x74__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -116
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 3
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__rdx__MINUS0x80__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -128
  %5 = load i64, i64* %RDX, align 8
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 4
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %4 to i64*
  store i64 %5, i64* %8, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl_MINUS0x74__rbp____r9d(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -116
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 4
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %5 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  store i64 %10, i64* %3, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq_MINUS0x80__rbp____rcx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -128
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIf19custom_constant_addIfEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__0x419ab9___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419ab9_type* @G__0x419ab9 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIf28custom_multiple_constant_addIfEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__0x419ad6___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419ad6_type* @G__0x419ad6 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIf19custom_constant_subIfEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__0x419aee___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419aee_type* @G__0x419aee to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIf28custom_multiple_constant_subIfEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__0x419b10___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419b10_type* @G__0x419b10 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIf24custom_constant_multiplyIfEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__0x419b28___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419b28_type* @G__0x419b28 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIf33custom_multiple_constant_multiplyIfEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__0x419b4b___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419b4b_type* @G__0x419b4b to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIf34custom_multiple_constant_multiply2IfEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__0x419b6d___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419b6d_type* @G__0x419b6d to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIf22custom_constant_divideIfEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__0x419b83___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419b83_type* @G__0x419b83 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIf31custom_multiple_constant_divideIfEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__0x419ba3___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419ba3_type* @G__0x419ba3 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIf32custom_multiple_constant_divide2IfEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__0x419bc3___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419bc3_type* @G__0x419bc3 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantIf30custom_multiple_constant_mixedIfEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__0x6220d0___rcx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x6220d0_type* @G__0x6220d0 to i64), i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline nounwind
define %struct.Memory* @routine_addq__0xfa00___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %RDX, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 7
  store i64 %5, i64* %PC, align 8
  %6 = add i64 %3, 64000
  store i64 %6, i64* %RDX, align 8
  %7 = icmp ugt i64 %3, -64001
  %8 = zext i1 %7 to i8
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8, i8* %9, align 1
  %10 = trunc i64 %6 to i32
  %11 = and i32 %10, 255
  %12 = tail call i32 @llvm.ctpop.i32(i32 %11)
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = xor i64 %6, %3
  %18 = lshr i64 %17, 4
  %19 = trunc i64 %18 to i8
  %20 = and i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20, i8* %21, align 1
  %22 = icmp eq i64 %6, 0
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23, i8* %24, align 1
  %25 = lshr i64 %6, 63
  %26 = trunc i64 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26, i8* %27, align 1
  %28 = lshr i64 %3, 63
  %29 = xor i64 %25, %28
  %30 = add nuw nsw i64 %29, %25
  %31 = icmp eq i64 %30, 2
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %32, i8* %33, align 1
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movsd_0x622088___xmm0(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 9
  store i64 %4, i64* %PC, align 8
  %5 = load i64, i64* bitcast (%G_0x622088_type* @G_0x622088 to i64*), align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 0
  store i64 %5, i64* %6, align 1
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 1
  %8 = bitcast i64* %7 to double*
  store double 0.000000e+00, double* %8, align 1
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z4fillIPddEvT_S1_T0_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__0x6220d0___rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x6220d0_type* @G__0x6220d0 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__0x419be1___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419be1_type* @G__0x419be1 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantId10custom_twoIdEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__0x419bf1___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419bf1_type* @G__0x419bf1 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantId20custom_add_constantsIdEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__0x419c06___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419c06_type* @G__0x419c06 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantId20custom_sub_constantsIdEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__0x419c20___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419c20_type* @G__0x419c20 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantId25custom_multiply_constantsIdEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__0x419c3a___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419c3a_type* @G__0x419c3a to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantId23custom_divide_constantsIdEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__0x419c52___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419c52_type* @G__0x419c52 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x84__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -132
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__rdx__MINUS0x90__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -144
  %5 = load i64, i64* %RDX, align 8
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 7
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %4 to i64*
  store i64 %5, i64* %8, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movl_MINUS0x84__rbp____r9d(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -132
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 7
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %5 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  store i64 %10, i64* %3, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq_MINUS0x90__rbp____rcx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -144
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantId19custom_constant_addIdEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__0x419c66___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419c66_type* @G__0x419c66 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantId28custom_multiple_constant_addIdEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__0x419c84___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419c84_type* @G__0x419c84 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantId19custom_constant_subIdEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__0x419c9d___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419c9d_type* @G__0x419c9d to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantId28custom_multiple_constant_subIdEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__0x419cc0___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419cc0_type* @G__0x419cc0 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantId24custom_constant_multiplyIdEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__0x419cd9___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419cd9_type* @G__0x419cd9 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantId33custom_multiple_constant_multiplyIdEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__0x419cfd___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419cfd_type* @G__0x419cfd to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantId34custom_multiple_constant_multiply2IdEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__0x419d20___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419d20_type* @G__0x419d20 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantId22custom_constant_divideIdEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__0x419d37___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419d37_type* @G__0x419d37 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantId31custom_multiple_constant_divideIdEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__0x419d58___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419d58_type* @G__0x419d58 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantId32custom_multiple_constant_divide2IdEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_movq__0x419d79___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x419d79_type* @G__0x419d79 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_callq_._Z13test_constantId30custom_multiple_constant_mixedIdEEvPT_iPKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline nounwind
define %struct.Memory* @routine_xorl__eax___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 2
  store i64 %4, i64* %PC, align 8
  store i64 0, i64* %RAX, align 8
  %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5, align 1
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 1, i8* %6, align 1
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 1, i8* %7, align 1
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %8, align 1
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9, align 1
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10, align 1
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline nounwind
define %struct.Memory* @routine_addq__0x90___rsp(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3 = load i64, i64* %RSP, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 7
  store i64 %5, i64* %PC, align 8
  %6 = add i64 %3, 144
  store i64 %6, i64* %RSP, align 8
  %7 = icmp ugt i64 %3, -145
  %8 = zext i1 %7 to i8
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8, i8* %9, align 1
  %10 = trunc i64 %6 to i32
  %11 = and i32 %10, 255
  %12 = tail call i32 @llvm.ctpop.i32(i32 %11)
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = xor i64 %3, 16
  %18 = xor i64 %17, %6
  %19 = lshr i64 %18, 4
  %20 = trunc i64 %19 to i8
  %21 = and i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %21, i8* %22, align 1
  %23 = icmp eq i64 %6, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i64 %6, 63
  %27 = trunc i64 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i64 %3, 63
  %30 = xor i64 %26, %29
  %31 = add nuw nsw i64 %30, %26
  %32 = icmp eq i64 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_popq__rbp(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 1
  store i64 %4, i64* %PC, align 8
  %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, 8
  %8 = inttoptr i64 %6 to i64*
  %9 = load i64, i64* %8, align 8
  store i64 %9, i64* %RBP, align 8
  store i64 %7, i64* %5, align 8
  ret %struct.Memory* %2
}

; Function Attrs: alwaysinline norecurse nounwind
define %struct.Memory* @routine_retq(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 1
  store i64 %4, i64* %PC, align 8
  %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = inttoptr i64 %6 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %PC, align 8
  %9 = add i64 %6, 8
  store i64 %9, i64* %5, align 8
  ret %struct.Memory* %2
}

attributes #0 = { nounwind readnone }
attributes #1 = { alwaysinline }
attributes #2 = { alwaysinline norecurse nounwind }
attributes #3 = { alwaysinline nounwind }
