Writing '/tmp/tmpk_osmgrl.dot'...
Writing '/tmp/tmpk_osmgrl.dot':Done

Reading LLVM: /tmp/tmph7mrdj6h-query.ll
Extracting function [_GLOBAL__sub_I_simple_types_constant_folding.cpp] from /tmp/tmph7mrdj6h-query.ll
Dot file generated!
Writing '/tmp/tmpubea0263.dot'...
Writing '/tmp/tmpubea0263.dot':Done

Reading LLVM: /tmp/tmp1rn9j8bj-target.ll
Extracting function [_GLOBAL__sub_I_simple_types_constant_folding.cpp] from /tmp/tmp1rn9j8bj-target.ll
Dot file generated!
================ Starting round 0
MAPPING:
- 0 %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 2 %4 = load i64, i64* %RBP.i, align 8
- 3 %5 = add i64 %1, 1
- 4 store i64 %5, i64* %3, align 8
- 5 %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 6 %7 = load i64, i64* %6, align 8
- 7 %8 = add i64 %7, -8
- 8 %9 = inttoptr i64 %8 to i64*
- 9 store i64 %4, i64* %9, align 8
- 10 %10 = load i64, i64* %3, align 8
- 11 store i64 %8, i64* %RBP.i, align 8
- 12 %11 = add i64 %10, 15
- 13 %12 = add i64 %10, 8
- 14 %13 = add i64 %7, -16
- 15 %14 = inttoptr i64 %13 to i64*
- 16 store i64 %12, i64* %14, align 8
- 17 store i64 %13, i64* %6, align 8
- 18 store i64 %11, i64* %3, align 8
- 19 %call2_400734 = tail call %struct.Memory* @sub_400740.__cxx_global_var_init(%struct.State* %0, i64 %11, %struct.Memory* %2)
- 20 %15 = load i64, i64* %3, align 8
- 21 %16 = add i64 %15, 1
- 22 store i64 %16, i64* %3, align 8
- 23 %17 = load i64, i64* %6, align 8
- 24 %18 = add i64 %17, 8
- 25 %19 = inttoptr i64 %17 to i64*
- 26 %20 = load i64, i64* %19, align 8
- 27 store i64 %20, i64* %RBP.i, align 8
- 28 store i64 %18, i64* %6, align 8
- 29 %21 = add i64 %15, 2
- 30 store i64 %21, i64* %3, align 8
- 31 %22 = inttoptr i64 %18 to i64*
- 32 %23 = load i64, i64* %22, align 8
- 33 store i64 %23, i64* %3, align 8
- 34 %24 = add i64 %17, 16
- 35 store i64 %24, i64* %6, align 8
- 36 ret %struct.Memory* %call2_400734
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f4c4eb8df28>, {0: {0}, 1: {1}, 2: {32, 2, 6, 10, 20, 23, 26}, 3: {3, 21}, 4: {33, 35, 4, 9, 11, 16, 17, 18, 22, 27, 28, 30}, 5: {5}, 6: {32, 2, 6, 10, 20, 23, 26}, 7: {7}, 8: {8, 25, 31, 15}, 9: {33, 35, 4, 9, 11, 16, 17, 18, 22, 27, 28, 30}, 10: {32, 2, 6, 10, 20, 23, 26}, 11: {33, 35, 4, 9, 11, 16, 17, 18, 22, 27, 28, 30}, 12: {12}, 13: {24, 13}, 14: {14}, 15: {8, 25, 31, 15}, 16: {33, 35, 4, 9, 11, 16, 17, 18, 22, 27, 28, 30}, 17: {33, 35, 4, 9, 11, 16, 17, 18, 22, 27, 28, 30}, 18: {33, 35, 4, 9, 11, 16, 17, 18, 22, 27, 28, 30}, 19: {19}, 20: {32, 2, 6, 10, 20, 23, 26}, 21: {3, 21}, 22: {33, 35, 4, 9, 11, 16, 17, 18, 22, 27, 28, 30}, 23: {32, 2, 6, 10, 20, 23, 26}, 24: {24, 13}, 25: {8, 25, 31, 15}, 26: {32, 2, 6, 10, 20, 23, 26}, 27: {33, 35, 4, 9, 11, 16, 17, 18, 22, 27, 28, 30}, 28: {33, 35, 4, 9, 11, 16, 17, 18, 22, 27, 28, 30}, 29: {29}, 30: {33, 35, 4, 9, 11, 16, 17, 18, 22, 27, 28, 30}, 31: {8, 25, 31, 15}, 32: {32, 2, 6, 10, 20, 23, 26}, 33: {33, 35, 4, 9, 11, 16, 17, 18, 22, 27, 28, 30}, 34: {34}, 35: {33, 35, 4, 9, 11, 16, 17, 18, 22, 27, 28, 30}, 36: {36}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f4c4eb8df28>, {0: {0}, 1: {1}, 2: {2}, 3: {3, 21}, 4: {4, 22}, 5: {5}, 6: {6}, 7: {7}, 8: {8}, 9: {9}, 10: {10}, 11: {11}, 12: {12}, 13: {13}, 14: {14}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 load load
MORE 3 POT: 2
MORE 4 POT: 2
EXACT 5 getelementptr getelementptr
EXACT 6 load load
EXACT 7 add add
EXACT 8 inttoptr inttoptr
EXACT 9 store store
EXACT 10 load load
EXACT 11 store store
EXACT 12 add add
EXACT 13 add add
EXACT 14 add add
EXACT 15 inttoptr inttoptr
EXACT 16 store store
EXACT 17 store store
EXACT 18 store store
EXACT 19 tail tail
EXACT 20 load load
EXACT 21 add add
EXACT 22 store store
EXACT 23 load load
EXACT 24 add add
EXACT 25 inttoptr inttoptr
EXACT 26 load load
EXACT 27 store store
EXACT 28 store store
EXACT 29 add add
EXACT 30 store store
EXACT 31 inttoptr inttoptr
EXACT 32 load load
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 ret ret
================ Starting round 1
MAPPING:
- 0 %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 2 %3 = load i64, i64* %RBP, align 8
- 3 %4 = add i64 %1, 1
- 4 store i64 %4, i64* %PC, align 8
- 5 %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 6 %6 = load i64, i64* %5, align 8
- 7 %7 = add i64 %6, -8
- 8 %8 = inttoptr i64 %7 to i64*
- 9 store i64 %3, i64* %8, align 8
- 10 %9 = load i64, i64* %PC, align 8
- 11 store i64 %7, i64* %RBP, align 8
- 12 %10 = add i64 %9, 15
- 13 %11 = add i64 %9, 8
- 14 %12 = add i64 %6, -16
- 15 %13 = inttoptr i64 %12 to i64*
- 16 store i64 %11, i64* %13, align 8
- 17 store i64 %12, i64* %5, align 8
- 18 store i64 %10, i64* %PC, align 8
- 19 %14 = tail call %struct.Memory* @sub_400740___cxx_global_var_init_renamed_(%struct.State* nonnull %0, i64 %10, %struct.Memory* %2)
- 20 %15 = load i64, i64* %PC, align 8
- 21 %16 = add i64 %15, 1
- 22 store i64 %16, i64* %PC, align 8
- 23 %17 = load i64, i64* %5, align 8
- 24 %18 = add i64 %17, 8
- 25 %19 = inttoptr i64 %17 to i64*
- 26 %20 = load i64, i64* %19, align 8
- 27 store i64 %20, i64* %RBP, align 8
- 28 store i64 %18, i64* %5, align 8
- 29 %21 = add i64 %15, 2
- 30 store i64 %21, i64* %PC, align 8
- 31 %22 = inttoptr i64 %18 to i64*
- 32 %23 = load i64, i64* %22, align 8
- 33 store i64 %23, i64* %PC, align 8
- 34 %24 = add i64 %17, 16
- 35 store i64 %24, i64* %5, align 8
- 36 ret %struct.Memory* %14
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f4c4e990510>, {0: {0}, 1: {1}, 2: {32, 2, 6, 10, 20, 23, 26}, 3: {3, 21}, 4: {33, 35, 4, 9, 11, 16, 17, 18, 22, 27, 28, 30}, 5: {5}, 6: {32, 2, 6, 10, 20, 23, 26}, 7: {7}, 8: {8, 25, 31, 15}, 9: {33, 35, 4, 9, 11, 16, 17, 18, 22, 27, 28, 30}, 10: {32, 2, 6, 10, 20, 23, 26}, 11: {33, 35, 4, 9, 11, 16, 17, 18, 22, 27, 28, 30}, 12: {12}, 13: {24, 13}, 14: {14}, 15: {8, 25, 31, 15}, 16: {33, 35, 4, 9, 11, 16, 17, 18, 22, 27, 28, 30}, 17: {33, 35, 4, 9, 11, 16, 17, 18, 22, 27, 28, 30}, 18: {33, 35, 4, 9, 11, 16, 17, 18, 22, 27, 28, 30}, 19: {19}, 20: {32, 2, 6, 10, 20, 23, 26}, 21: {3, 21}, 22: {33, 35, 4, 9, 11, 16, 17, 18, 22, 27, 28, 30}, 23: {32, 2, 6, 10, 20, 23, 26}, 24: {24, 13}, 25: {8, 25, 31, 15}, 26: {32, 2, 6, 10, 20, 23, 26}, 27: {33, 35, 4, 9, 11, 16, 17, 18, 22, 27, 28, 30}, 28: {33, 35, 4, 9, 11, 16, 17, 18, 22, 27, 28, 30}, 29: {29}, 30: {33, 35, 4, 9, 11, 16, 17, 18, 22, 27, 28, 30}, 31: {8, 25, 31, 15}, 32: {32, 2, 6, 10, 20, 23, 26}, 33: {33, 35, 4, 9, 11, 16, 17, 18, 22, 27, 28, 30}, 34: {34}, 35: {33, 35, 4, 9, 11, 16, 17, 18, 22, 27, 28, 30}, 36: {36}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f4c4e990510>, {0: {0}, 1: {1}, 2: {2}, 3: {3, 21}, 4: {4, 22}, 5: {5}, 6: {6}, 7: {7}, 8: {8}, 9: {9}, 10: {10}, 11: {11}, 12: {12}, 13: {13}, 14: {14}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 load load
MORE 3 POT: 2
MORE 4 POT: 2
EXACT 5 getelementptr getelementptr
EXACT 6 load load
EXACT 7 add add
EXACT 8 inttoptr inttoptr
EXACT 9 store store
EXACT 10 load load
EXACT 11 store store
EXACT 12 add add
EXACT 13 add add
EXACT 14 add add
EXACT 15 inttoptr inttoptr
EXACT 16 store store
EXACT 17 store store
EXACT 18 store store
EXACT 19 tail tail
EXACT 20 load load
EXACT 21 add add
EXACT 22 store store
EXACT 23 load load
EXACT 24 add add
EXACT 25 inttoptr inttoptr
EXACT 26 load load
EXACT 27 store store
EXACT 28 store store
EXACT 29 add add
EXACT 30 store store
EXACT 31 inttoptr inttoptr
EXACT 32 load load
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 ret ret
FP: 63 1.0 False
TO REMOVE: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', '%10 = load i64, i64* %3, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%11 = add i64 %10, 15', '%12 = add i64 %10, 8', '%13 = add i64 %7, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %6, align 8', 'store i64 %11, i64* %3, align 8', '%call2_400734 = tail call %struct.Memory* @sub_400740.__cxx_global_var_init(%struct.State* %0, i64 %11, %struct.Memory* %2)', '%15 = load i64, i64* %3, align 8', '%16 = add i64 %15, 1', 'store i64 %16, i64* %3, align 8', '%17 = load i64, i64* %6, align 8', '%18 = add i64 %17, 8', '%19 = inttoptr i64 %17 to i64*', '%20 = load i64, i64* %19, align 8', 'store i64 %20, i64* %RBP.i, align 8', 'store i64 %18, i64* %6, align 8', '%21 = add i64 %15, 2', 'store i64 %21, i64* %3, align 8', '%22 = inttoptr i64 %18 to i64*', '%23 = load i64, i64* %22, align 8', 'store i64 %23, i64* %3, align 8', '%24 = add i64 %17, 16', 'store i64 %24, i64* %6, align 8', 'ret %struct.Memory* %call2_400734'])Writing '/tmp/tmpck3gqt1l.dot'...
Writing '/tmp/tmpck3gqt1l.dot':Done

Reading LLVM: /tmp/tmph7mrdj6h-query.ll
Extracting function [_GLOBAL__sub_I_simple_types_constant_folding.cpp] from /tmp/tmph7mrdj6h-query.ll
Dot file generated!
Writing '/tmp/tmpet2ubdnr.dot'...
Writing '/tmp/tmpet2ubdnr.dot':Done

Reading LLVM: /tmp/tmp1rn9j8bj-target.ll
Extracting function [_GLOBAL__sub_I_simple_types_constant_folding.cpp] from /tmp/tmp1rn9j8bj-target.ll
Dot file generated!

Keep: entry:
Keep: %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
Found line to remove! %RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
Found line to remove! %4 = load i64, i64* %RBP.i, align 8
Keep: %5 = add i64 %1, 1
Keep: store i64 %5, i64* %3, align 8
Found line to remove! %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
Found line to remove! %7 = load i64, i64* %6, align 8
Found line to remove! %8 = add i64 %7, -8
Found line to remove! %9 = inttoptr i64 %8 to i64*
Found line to remove! store i64 %4, i64* %9, align 8
Found line to remove! %10 = load i64, i64* %3, align 8
Found line to remove! store i64 %8, i64* %RBP.i, align 8
Found line to remove! %11 = add i64 %10, 15
Found line to remove! %12 = add i64 %10, 8
Found line to remove! %13 = add i64 %7, -16
Found line to remove! %14 = inttoptr i64 %13 to i64*
Found line to remove! store i64 %12, i64* %14, align 8
Found line to remove! store i64 %13, i64* %6, align 8
Found line to remove! store i64 %11, i64* %3, align 8
Found line to remove! %call2_400734 = tail call %struct.Memory* @sub_400740.__cxx_global_var_init(%struct.State* %0, i64 %11, %struct.Memory* %2)
Found line to remove! %15 = load i64, i64* %3, align 8
Found line to remove! %16 = add i64 %15, 1
Found line to remove! store i64 %16, i64* %3, align 8
Found line to remove! %17 = load i64, i64* %6, align 8
Found line to remove! %18 = add i64 %17, 8
Found line to remove! %19 = inttoptr i64 %17 to i64*
Found line to remove! %20 = load i64, i64* %19, align 8
Found line to remove! store i64 %20, i64* %RBP.i, align 8
Found line to remove! store i64 %18, i64* %6, align 8
Found line to remove! %21 = add i64 %15, 2
Found line to remove! store i64 %21, i64* %3, align 8
Found line to remove! %22 = inttoptr i64 %18 to i64*
Found line to remove! %23 = load i64, i64* %22, align 8
Found line to remove! store i64 %23, i64* %3, align 8
Found line to remove! %24 = add i64 %17, 16
Found line to remove! store i64 %24, i64* %6, align 8
Found line to remove! ret %struct.Memory* %call2_400734
TO REMOVE: dict_keys(['%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', '%9 = load i64, i64* %PC, align 8', 'store i64 %7, i64* %RBP, align 8', '%10 = add i64 %9, 15', '%11 = add i64 %9, 8', '%12 = add i64 %6, -16', '%13 = inttoptr i64 %12 to i64*', 'store i64 %11, i64* %13, align 8', 'store i64 %12, i64* %5, align 8', 'store i64 %10, i64* %PC, align 8', '%14 = tail call %struct.Memory* @sub_400740___cxx_global_var_init_renamed_(%struct.State* nonnull %0, i64 %10, %struct.Memory* %2)', '%15 = load i64, i64* %PC, align 8', '%16 = add i64 %15, 1', 'store i64 %16, i64* %PC, align 8', '%17 = load i64, i64* %5, align 8', '%18 = add i64 %17, 8', '%19 = inttoptr i64 %17 to i64*', '%20 = load i64, i64* %19, align 8', 'store i64 %20, i64* %RBP, align 8', 'store i64 %18, i64* %5, align 8', '%21 = add i64 %15, 2', 'store i64 %21, i64* %PC, align 8', '%22 = inttoptr i64 %18 to i64*', '%23 = load i64, i64* %22, align 8', 'store i64 %23, i64* %PC, align 8', '%24 = add i64 %17, 16', 'store i64 %24, i64* %5, align 8', 'ret %struct.Memory* %14'])
Keep: block_400730:
Keep: %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
Found line to remove! %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
Found line to remove! %3 = load i64, i64* %RBP, align 8
Keep: %4 = add i64 %1, 1
Keep: store i64 %4, i64* %PC, align 8
Found line to remove! %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
Found line to remove! %6 = load i64, i64* %5, align 8
Found line to remove! %7 = add i64 %6, -8
Found line to remove! %8 = inttoptr i64 %7 to i64*
Found line to remove! store i64 %3, i64* %8, align 8
Found line to remove! %9 = load i64, i64* %PC, align 8
Found line to remove! store i64 %7, i64* %RBP, align 8
Found line to remove! %10 = add i64 %9, 15
Found line to remove! %11 = add i64 %9, 8
Found line to remove! %12 = add i64 %6, -16
Found line to remove! %13 = inttoptr i64 %12 to i64*
Found line to remove! store i64 %11, i64* %13, align 8
Found line to remove! store i64 %12, i64* %5, align 8
Found line to remove! store i64 %10, i64* %PC, align 8
Found line to remove! %14 = tail call %struct.Memory* @sub_400740___cxx_global_var_init_renamed_(%struct.State* nonnull %0, i64 %10, %struct.Memory* %2)
Found line to remove! %15 = load i64, i64* %PC, align 8
Found line to remove! %16 = add i64 %15, 1
Found line to remove! store i64 %16, i64* %PC, align 8
Found line to remove! %17 = load i64, i64* %5, align 8
Found line to remove! %18 = add i64 %17, 8
Found line to remove! %19 = inttoptr i64 %17 to i64*
Found line to remove! %20 = load i64, i64* %19, align 8
Found line to remove! store i64 %20, i64* %RBP, align 8
Found line to remove! store i64 %18, i64* %5, align 8
Found line to remove! %21 = add i64 %15, 2
Found line to remove! store i64 %21, i64* %PC, align 8
Found line to remove! %22 = inttoptr i64 %18 to i64*
Found line to remove! %23 = load i64, i64* %22, align 8
Found line to remove! store i64 %23, i64* %PC, align 8
Found line to remove! %24 = add i64 %17, 16
Found line to remove! store i64 %24, i64* %5, align 8
Found line to remove! ret %struct.Memory* %14
================ Starting round 2
MAPPING:
- 0 %var_2_3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %var_2_5 = add i64 %1, 1
- 2 store i64 %var_2_5, i64* %var_2_3, align 8
- 3 ret %struct.Memory* %2
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f4c4de36268>, {0: {0}, 1: {1}, 2: {2}, 3: {3}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f4c4de36268>, {0: {0}, 1: {1}, 2: {2}, 3: {3}})
EXACT 0 getelementptr getelementptr
EXACT 1 add add
EXACT 2 store store
EXACT 3 ret ret
================ Starting round 3
MAPPING:
- 0 %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %var_2_4 = add i64 %1, 1
- 2 store i64 %var_2_4, i64* %PC, align 8
- 3 ret %struct.Memory* %2
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f4c4ddd5950>, {0: {0}, 1: {1}, 2: {2}, 3: {3}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f4c4ddd5950>, {0: {0}, 1: {1}, 2: {2}, 3: {3}})
EXACT 0 getelementptr getelementptr
EXACT 1 add add
EXACT 2 store store
EXACT 3 ret ret
FP: 63 2.0 True
TO REMOVE: dict_keys(['%var_2_3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0', '%var_2_5 = add i64 %1, 1', 'store i64 %var_2_5, i64* %var_2_3, align 8', 'ret %struct.Memory* %2'])
Keep: entry:
Found line to remove! %var_2_3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
Found line to remove! %var_2_5 = add i64 %1, 1
Found line to remove! store i64 %var_2_5, i64* %var_2_3, align 8
Found line to remove! ret %struct.Memory* %2
TO REMOVE: dict_keys(['%PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0', '%var_2_4 = add i64 %1, 1', 'store i64 %var_2_4, i64* %PC, align 8', 'ret %struct.Memory* %2'])
Keep: block_400730:
Found line to remove! %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
Found line to remove! %var_2_4 = add i64 %1, 1
Found line to remove! store i64 %var_2_4, i64* %PC, align 8
Found line to remove! ret %struct.Memory* %2
[*] Found exact, syntactic match! /home/ubuntu/Github/validating-binary-decompilation/tests/program_translation_validation/single-source-benchmark/simple_types_constant_folding/_GLOBAL__sub_I_simple_types_constant_folding.cpp/mcsema/test.proposed.ll /home/ubuntu/Github/validating-binary-decompilation/tests/program_translation_validation/single-source-benchmark/simple_types_constant_folding/binary/test.mcsema.calls_renamed.ll _GLOBAL__sub_I_simple_types_constant_folding.cpp
/home/ubuntu/Github/llir-matcher/matcher/match.py:718: YAMLLoadWarning: calling yaml.load() without Loader=... is deprecated, as the default Loader is unsafe. Please read https://msg.pyyaml.org/load for full details.
  config = yaml.load(fd)
