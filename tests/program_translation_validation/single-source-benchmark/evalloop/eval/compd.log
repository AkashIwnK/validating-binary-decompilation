Disassembling ../binary/test
Disassembled output
  .text
  .globl eval
  .type eval, @function

#! file-offset 0x530
#! rip-offset  0x400530
#! capacity    86 bytes

# Text                          #  Line  RIP       Bytes  Opcode              Target                
.eval:                          #        0x400530  0      OPC=<label>         18446744073709551615  
  pushq %rbp                    #  1     0x400530  1      OPC=pushq_r64_1     18446744073709551615  
  movq %rsp, %rbp               #  2     0x400531  3      OPC=movq_r64_r64    18446744073709551615  
  subq $0x30, %rsp              #  3     0x400534  4      OPC=subq_r64_imm8   18446744073709551615  
  movq %rdi, -0x8(%rbp)         #  4     0x400538  4      OPC=movq_m64_r64    18446744073709551615  
  movl $0x0, -0xc(%rbp)         #  5     0x40053c  7      OPC=movl_m32_imm32  18446744073709551615  
.L_400543:                      #        0x400543  0      OPC=<label>         18446744073709551615  
  movq -0x8(%rbp), %rax         #  6     0x400543  4      OPC=movq_r64_m64    18446744073709551615  
  movq %rax, %rcx               #  7     0x400547  3      OPC=movq_r64_r64    18446744073709551615  
  addq $0x4, %rcx               #  8     0x40054a  4      OPC=addq_r64_imm8   18446744073709551615  
  movq %rcx, -0x8(%rbp)         #  9     0x40054e  4      OPC=movq_m64_r64    18446744073709551615  
  movl (%rax), %edx             #  10    0x400552  2      OPC=movl_r32_m32    18446744073709551615  
  movl %edx, %eax               #  11    0x400554  2      OPC=movl_r32_r32    18446744073709551615  
  movq %rax, %rcx               #  12    0x400556  3      OPC=movq_r64_r64    18446744073709551615  
  subq $0x1f, %rcx              #  13    0x400559  4      OPC=subq_r64_imm8   18446744073709551615  
  movq %rax, -0x18(%rbp)        #  14    0x40055d  4      OPC=movq_m64_r64    18446744073709551615  
  movq %rcx, -0x20(%rbp)        #  15    0x400561  4      OPC=movq_m64_r64    18446744073709551615  
  ja .L_400b9a                  #  16    0x400565  6      OPC=ja_label_1      4197274               
  movq -0x18(%rbp), %rax        #  17    0x40056b  4      OPC=movq_r64_m64    18446744073709551615  
  movq 0x400d08(,%rax,8), %rcx  #  18    0x40056f  8      OPC=movq_r64_m64    18446744073709551615  
  jmpq %rcx                     #  19    0x400577  2      OPC=jmpq_r64        18446744073709551615  
  movl $0x0, -0xc(%rbp)         #  20    0x400579  7      OPC=movl_m32_imm32  18446744073709551615  
  addq $0x30, %rsp              #  21    0x400580  4      OPC=addq_r64_imm8   18446744073709551615  
  popq %rbp                     #  22    0x400584  1      OPC=popq_r64_1      18446744073709551615  
  retq                          #  23    0x400585  1      OPC=retq            18446744073709551615  
                                                                                                    
.size eval, .-eval
Disassembling Done.


Decompiling mcsema/test.proposed.ll
Computing Label PC values ...
.L_400543->4195651
.eval->4195632

Computing Label PC values: Done.


Executing: cat ${HOME}/Github/validating-binary-decompilation/source/libs/compositional-decompiler/data/mcsema_template.txt
declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*)
declare i32 @__remill_fpu_exception_test_and_clear(i32, i32)
declare void @llvm.lifetime.start(i64, i8* nocapture)
declare void @llvm.lifetime.end(i64, i8* nocapture)
declare i32 @llvm.ctpop.i32(i32)
declare i32 @llvm.bswap.i32(i32)
declare i64 @llvm.bswap.i64(i64)
declare i32 @llvm.cttz.i32(i32, i1)
declare i64 @llvm.cttz.i64(i64, i1)
declare i32 @llvm.ctlz.i32(i32, i1)
declare i64 @llvm.ctlz.i64(i64, i1)
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1)
declare double @llvm.nearbyint.f64(double)
declare double @llvm.fabs.f64(double)
declare <4 x double> @llvm.nearbyint.v4f64(<4 x double>)
declare <4 x double> @llvm.fabs.v4f64(<4 x double>)
declare double @llvm.trunc.f64(double)
declare <4 x double> @llvm.trunc.v4f64(<4 x double>)
declare float @llvm.nearbyint.f32(float)
declare float @llvm.fabs.f32(float)
declare <4 x float> @llvm.nearbyint.v4f32(<4 x float>)
declare <4 x float> @llvm.fabs.v4f32(<4 x float>)
declare float @llvm.trunc.f32(float)
declare <4 x float> @llvm.trunc.v4f32(<4 x float>)
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1)

Decompiling Function: eval...


Decompiling instr:.eval:...


Decompiling instr:pushq %rbp...
Instr: pushq %rbp
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//pushq__rbp
Running artifacts...
Already Exists
Running artifacts...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//pushq__rbp/test.mod.ll
Reusing Declutter Output: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//pushq__rbp/test.mod.ll
FuncCache inserted: _ZN12_GLOBAL__N_1L4PUSHI2InImEEEP6MemoryS4_R5StateT_
FuncCache inserted: routine_pushq__rbp


Decompiling instr:movq %rsp, %rbp...
Instr: movq %rsp, %rbp
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movq__rsp___rbp
Running artifacts...
Already Exists
Running artifacts...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movq__rsp___rbp/test.mod.ll
Reusing Declutter Output: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movq__rsp___rbp/test.mod.ll
Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache inserted: _ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_
FuncCache inserted: routine_movq__rsp___rbp


Decompiling instr:subq $0x30, %rsp...
Instr: subq $0x30, %rsp
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//subq__0x30___rsp
Running artifacts...
Already Exists
Running artifacts...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//subq__0x30___rsp/test.mod.ll
Reusing Declutter Output: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//subq__0x30___rsp/test.mod.ll
Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache inserted: _ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_
FuncCache inserted: routine_subq__0x30___rsp


Decompiling instr:movq %rdi, -0x8(%rbp)...
Instr: movq %rdi, -0x8(%rbp)
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movq__rdi__MINUS0x8__rbp_
Running artifacts...
Already Exists
Running artifacts...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movq__rdi__MINUS0x8__rbp_/test.mod.ll
Reusing Declutter Output: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movq__rdi__MINUS0x8__rbp_/test.mod.ll
Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache inserted: _ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_
FuncCache inserted: routine_movq__rdi__MINUS0x8__rbp_


Decompiling instr:movl $0x0, -0xc(%rbp)...
Instr: movl $0x0, -0xc(%rbp)
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movl__0x0__MINUS0xc__rbp_
Running artifacts...
Already Exists
Running artifacts...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movl__0x0__MINUS0xc__rbp_/test.mod.ll
Reusing Declutter Output: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movl__0x0__MINUS0xc__rbp_/test.mod.ll
Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache inserted: _ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_
FuncCache inserted: routine_movl__0x0__MINUS0xc__rbp_


Decompiling instr:.L_400543:...


Decompiling instr:movq -0x8(%rbp), %rax...
Instr: movq -0x8(%rbp), %rax
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movq_MINUS0x8__rbp____rax
Running artifacts...
Already Exists
Running artifacts...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movq_MINUS0x8__rbp____rax/test.mod.ll
Reusing Declutter Output: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movq_MINUS0x8__rbp____rax/test.mod.ll
Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache inserted: _ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_
FuncCache inserted: routine_movq_MINUS0x8__rbp____rax


Decompiling instr:movq %rax, %rcx...
Instr: movq %rax, %rcx
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movq__rax___rcx
Running artifacts...
Already Exists
Running artifacts...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movq__rax___rcx/test.mod.ll
Reusing Declutter Output: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movq__rax___rcx/test.mod.ll
Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache skipped: _ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_
FuncCache inserted: routine_movq__rax___rcx


Decompiling instr:addq $0x4, %rcx...
Instr: addq $0x4, %rcx
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//addq__0x4___rcx
Running artifacts...
Already Exists
Running artifacts...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//addq__0x4___rcx/test.mod.ll
Reusing Declutter Output: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//addq__0x4___rcx/test.mod.ll
Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache inserted: _ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_
FuncCache inserted: routine_addq__0x4___rcx


Decompiling instr:movq %rcx, -0x8(%rbp)...
Instr: movq %rcx, -0x8(%rbp)
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movq__rcx__MINUS0x8__rbp_
Running artifacts...
Already Exists
Running artifacts...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movq__rcx__MINUS0x8__rbp_/test.mod.ll
Reusing Declutter Output: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movq__rcx__MINUS0x8__rbp_/test.mod.ll
Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache skipped: _ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_
FuncCache inserted: routine_movq__rcx__MINUS0x8__rbp_


Decompiling instr:movl (%rax), %edx...
Instr: movl (%rax), %edx
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movl___rax____edx
Running artifacts...
Already Exists
Running artifacts...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movl___rax____edx/test.mod.ll
Reusing Declutter Output: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movl___rax____edx/test.mod.ll
Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache inserted: _ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_
FuncCache inserted: routine_movl___rax____edx


Decompiling instr:movl %edx, %eax...
Instr: movl %edx, %eax
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movl__edx___eax
Running artifacts...
Already Exists
Running artifacts...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movl__edx___eax/test.mod.ll
Reusing Declutter Output: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movl__edx___eax/test.mod.ll
Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache inserted: _ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_
FuncCache inserted: routine_movl__edx___eax


Decompiling instr:movq %rax, %rcx...
Instr: movq %rax, %rcx
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movq__rax___rcx
Running artifacts...
Already Exists
Running artifacts...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movq__rax___rcx/test.mod.ll
Reusing Declutter Output: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movq__rax___rcx/test.mod.ll
Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache skipped: _ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_
FuncCache skipped: routine_movq__rax___rcx


Decompiling instr:subq $0x1f, %rcx...
Instr: subq $0x1f, %rcx
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//subq__0x1f___rcx
Running artifacts...
Already Exists
Running artifacts...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//subq__0x1f___rcx/test.mod.ll
Reusing Declutter Output: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//subq__0x1f___rcx/test.mod.ll
Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache skipped: _ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_
FuncCache inserted: routine_subq__0x1f___rcx


Decompiling instr:movq %rax, -0x18(%rbp)...
Instr: movq %rax, -0x18(%rbp)
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movq__rax__MINUS0x18__rbp_
Running artifacts...
Already Exists
Running artifacts...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movq__rax__MINUS0x18__rbp_/test.mod.ll
Reusing Declutter Output: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movq__rax__MINUS0x18__rbp_/test.mod.ll
Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache skipped: _ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_
FuncCache inserted: routine_movq__rax__MINUS0x18__rbp_


Decompiling instr:movq %rcx, -0x20(%rbp)...
Instr: movq %rcx, -0x20(%rbp)
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movq__rcx__MINUS0x20__rbp_
Running artifacts...
Already Exists
Running artifacts...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movq__rcx__MINUS0x20__rbp_/test.mod.ll
Reusing Declutter Output: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movq__rcx__MINUS0x20__rbp_/test.mod.ll
Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache skipped: _ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_
FuncCache inserted: routine_movq__rcx__MINUS0x20__rbp_


Decompiling instr:ja .L_400b9a...
Instr: ja .L_400b9a
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//ja_.L_400b9a
Running artifacts...
Already Exists
Running artifacts...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//ja_.L_400b9a/test.mod.ll
Reusing Declutter Output: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//ja_.L_400b9a/test.mod.ll
Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache inserted: _ZN12_GLOBAL__N_1L4JNBEEP6MemoryR5State3RnWIhE2InImES7_
FuncCache inserted: routine_ja_.L_400b9a


Decompiling instr:movq -0x18(%rbp), %rax...
Instr: movq -0x18(%rbp), %rax
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movq_MINUS0x18__rbp____rax
Running artifacts...
Already Exists
Running artifacts...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movq_MINUS0x18__rbp____rax/test.mod.ll
Reusing Declutter Output: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movq_MINUS0x18__rbp____rax/test.mod.ll
Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache skipped: _ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_
FuncCache inserted: routine_movq_MINUS0x18__rbp____rax


Decompiling instr:movq 0x400d08(,%rax,8), %rcx...
Instr: movq 0x400d08(,%rax,8), %rcx
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movq_0x400d08___rax_8____rcx
Running artifacts...
Already Exists
Running artifacts...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movq_0x400d08___rax_8____rcx/test.mod.ll
Reusing Declutter Output: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movq_0x400d08___rax_8____rcx/test.mod.ll
Multiple defintions of %seg_4003a0__text_type
Multiple defintions of @seg_4003a0__text
FuncCache skipped: _ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_
FuncCache inserted: routine_movq_0x400d08___rax_8____rcx
FATAL ERROR: Missing target address for: jmpq %rcx
decompiler: /home/ubuntu/Github/stoke-develop/src/ext/cpputil/include/io/abort.h:35: void cpputil::Abort::operator()(std::streambuf*, char): Assertion `false' failed.
Aborted (core dumped)
