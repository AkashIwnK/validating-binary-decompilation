; ModuleID = 'mcsema/test.inline.ll'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"

%union.anon = type { i64 }
%seg_400420__text_type = type <{ [2258 x i8] }>
%seg_400d00__rodata_type = type <{ [264 x i8], [9 x i8] }>
%seg_601df0__init_array_type = type <{ i64, i64 }>
%seg_601ff0__got_type = type <{ i64, i64 }>
%seg_602020__data_type = type <{ [16 x i8], i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }>
%__bss_start_type = type <{ [4 x i8] }>
%sum_type = type <{ [4 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque
%struct.anon.2 = type { i8, i8 }
%"class.std::bitset" = type { %struct.uint64v4_t }
%struct.uint64v4_t = type { [4 x i64] }

@DR0 = external global i64, align 8
@DR1 = external global i64, align 8
@DR2 = external global i64, align 8
@DR3 = external global i64, align 8
@DR4 = external global i64, align 8
@DR5 = external global i64, align 8
@DR6 = external global i64, align 8
@DR7 = external global i64, align 8
@gCR0 = external global %union.anon, align 1
@gCR1 = external global %union.anon, align 1
@gCR2 = external global %union.anon, align 1
@gCR3 = external global %union.anon, align 1
@gCR4 = external global %union.anon, align 1
@gCR8 = external global %union.anon, align 1
@seg_400420__text = internal constant %seg_400420__text_type <{ [2258 x i8] c"1\EDI\89\D1^H\89\E2H\83\E4\F0PTI\C7\C0\F0\0C@\00H\C7\C1\80\0C@\00H\C7\C7\A0\0B@\00\FF\15\A6\1B \00\F4\0F\1FD\00\00\F3\C3f.\0F\1F\84\00\00\00\00\00\0F\1F@\00U\B80!`\00H=0!`\00H\89\E5t\17\B8\00\00\00\00H\85\C0t\0D]\BF0!`\00\FF\E0\0F\1FD\00\00]\C3f\0F\1FD\00\00\BE0!`\00UH\81\EE0!`\00H\89\E5H\C1\FE\03H\89\F0H\C1\E8?H\01\C6H\D1\FEt\15\B8\00\00\00\00H\85\C0t\0B]\BF0!`\00\FF\E0\0F\1F\00]\C3f\0F\1FD\00\00\80=Y\1C \00\00u\17UH\89\E5\E8~\FF\FF\FF\C6\05G\1C \00\01]\C3\0F\1FD\00\00\F3\C3\0F\1F@\00f.\0F\1F\84\00\00\00\00\00UH\89\E5]\EB\89f\0F\1F\84\00\00\00\00\00UH\89\E5\89}\FC\8B}\FC\03<%4!`\00\89<%4!`\00]\C3f\0F\1FD\00\00UH\89\E5H\83\EC0H\89}\F8\C7E\F4\00\00\00\00H\8BE\F8H\89\C1H\83\C1\04H\89M\F8\8B\10\89\D0H\89\C1H\83\E9\1FH\89E\E8H\89M\E0\0F\87/\06\00\00H\8BE\E8H\8B\0C\C5\08\0D@\00\FF\E1\C7E\F4\00\00\00\00H\83\C40]\C3H\8BE\D8\FF\E0\C7E\F4\01\00\00\00\8B}\F4\E8u\FF\FF\FFH\8BE\F8H\89\C1H\83\C1\04H\89M\F8Hc\00H\8B\04\C50 `\00H\89E\D8\E9\C8\FF\FF\FF\C7E\F4\02\00\00\00\8B}\F4\E8C\FF\FF\FFH\8BE\F8H\89\C1H\83\C1\04H\89M\F8Hc\00H\8B\04\C50 `\00H\89E\D8\E9\96\FF\FF\FF\C7E\F4\03\00\00\00\8B}\F4\E8\11\FF\FF\FFH\8BE\F8H\89\C1H\83\C1\04H\89M\F8Hc\00H\8B\04\C50 `\00H\89E\D8\E9d\FF\FF\FF\C7E\F4\04\00\00\00\8B}\F4\E8\DF\FE\FF\FFH\8BE\F8H\89\C1H\83\C1\04H\89M\F8Hc\00H\8B\04\C50 `\00H\89E\D8\E92\FF\FF\FF\C7E\F4\05\00\00\00\8B}\F4\E8\AD\FE\FF\FFH\8BE\F8H\89\C1H\83\C1\04H\89M\F8Hc\00H\8B\04\C50 `\00H\89E\D8\E9\00\FF\FF\FF\C7E\F4\06\00\00\00\8B}\F4\E8{\FE\FF\FFH\8BE\F8H\89\C1H\83\C1\04H\89M\F8Hc\00H\8B\04\C50 `\00H\89E\D8\E9\CE\FE\FF\FF\C7E\F4\07\00\00\00\8B}\F4\E8I\FE\FF\FFH\8BE\F8H\89\C1H\83\C1\04H\89M\F8Hc\00H\8B\04\C50 `\00H\89E\D8\E9\9C\FE\FF\FF\C7E\F4\08\00\00\00\8B}\F4\E8\17\FE\FF\FFH\8BE\F8H\89\C1H\83\C1\04H\89M\F8Hc\00H\8B\04\C50 `\00H\89E\D8\E9j\FE\FF\FF\C7E\F4\09\00\00\00\8B}\F4\E8\E5\FD\FF\FFH\8BE\F8H\89\C1H\83\C1\04H\89M\F8Hc\00H\8B\04\C50 `\00H\89E\D8\E98\FE\FF\FF\C7E\F4\0A\00\00\00\8B}\F4\E8\B3\FD\FF\FFH\8BE\F8H\89\C1H\83\C1\04H\89M\F8Hc\00H\8B\04\C50 `\00H\89E\D8\E9\06\FE\FF\FF\C7E\F4\0B\00\00\00\8B}\F4\E8\81\FD\FF\FFH\8BE\F8H\89\C1H\83\C1\04H\89M\F8Hc\00H\8B\04\C50 `\00H\89E\D8\E9\D4\FD\FF\FF\C7E\F4\0C\00\00\00\8B}\F4\E8O\FD\FF\FFH\8BE\F8H\89\C1H\83\C1\04H\89M\F8Hc\00H\8B\04\C50 `\00H\89E\D8\E9\A2\FD\FF\FF\C7E\F4\0D\00\00\00\8B}\F4\E8\1D\FD\FF\FFH\8BE\F8H\89\C1H\83\C1\04H\89M\F8Hc\00H\8B\04\C50 `\00H\89E\D8\E9p\FD\FF\FF\C7E\F4\0E\00\00\00\8B}\F4\E8\EB\FC\FF\FFH\8BE\F8H\89\C1H\83\C1\04H\89M\F8Hc\00H\8B\04\C50 `\00H\89E\D8\E9>\FD\FF\FF\C7E\F4\0F\00\00\00\8B}\F4\E8\B9\FC\FF\FFH\8BE\F8H\89\C1H\83\C1\04H\89M\F8Hc\00H\8B\04\C50 `\00H\89E\D8\E9\0C\FD\FF\FF\C7E\F4\10\00\00\00\8B}\F4\E8\87\FC\FF\FFH\8BE\F8H\89\C1H\83\C1\04H\89M\F8Hc\00H\8B\04\C50 `\00H\89E\D8\E9\DA\FC\FF\FF\C7E\F4\11\00\00\00\8B}\F4\E8U\FC\FF\FFH\8BE\F8H\89\C1H\83\C1\04H\89M\F8Hc\00H\8B\04\C50 `\00H\89E\D8\E9\A8\FC\FF\FF\C7E\F4\12\00\00\00\8B}\F4\E8#\FC\FF\FFH\8BE\F8H\89\C1H\83\C1\04H\89M\F8Hc\00H\8B\04\C50 `\00H\89E\D8\E9v\FC\FF\FF\C7E\F4\13\00\00\00\8B}\F4\E8\F1\FB\FF\FFH\8BE\F8H\89\C1H\83\C1\04H\89M\F8Hc\00H\8B\04\C50 `\00H\89E\D8\E9D\FC\FF\FF\C7E\F4\14\00\00\00\8B}\F4\E8\BF\FB\FF\FFH\8BE\F8H\89\C1H\83\C1\04H\89M\F8Hc\00H\8B\04\C50 `\00H\89E\D8\E9\12\FC\FF\FF\C7E\F4\15\00\00\00\8B}\F4\E8\8D\FB\FF\FFH\8BE\F8H\89\C1H\83\C1\04H\89M\F8Hc\00H\8B\04\C50 `\00H\89E\D8\E9\E0\FB\FF\FF\C7E\F4\16\00\00\00\8B}\F4\E8[\FB\FF\FFH\8BE\F8H\89\C1H\83\C1\04H\89M\F8Hc\00H\8B\04\C50 `\00H\89E\D8\E9\AE\FB\FF\FF\C7E\F4\17\00\00\00\8B}\F4\E8)\FB\FF\FFH\8BE\F8H\89\C1H\83\C1\04H\89M\F8Hc\00H\8B\04\C50 `\00H\89E\D8\E9|\FB\FF\FF\C7E\F4\18\00\00\00\8B}\F4\E8\F7\FA\FF\FFH\8BE\F8H\89\C1H\83\C1\04H\89M\F8Hc\00H\8B\04\C50 `\00H\89E\D8\E9J\FB\FF\FF\C7E\F4\19\00\00\00\8B}\F4\E8\C5\FA\FF\FFH\8BE\F8H\89\C1H\83\C1\04H\89M\F8Hc\00H\8B\04\C50 `\00H\89E\D8\E9\18\FB\FF\FF\C7E\F4\1A\00\00\00\8B}\F4\E8\93\FA\FF\FFH\8BE\F8H\89\C1H\83\C1\04H\89M\F8Hc\00H\8B\04\C50 `\00H\89E\D8\E9\E6\FA\FF\FF\C7E\F4\1B\00\00\00\8B}\F4\E8a\FA\FF\FFH\8BE\F8H\89\C1H\83\C1\04H\89M\F8Hc\00H\8B\04\C50 `\00H\89E\D8\E9\B4\FA\FF\FF\C7E\F4\1C\00\00\00\8B}\F4\E8/\FA\FF\FFH\8BE\F8H\89\C1H\83\C1\04H\89M\F8Hc\00H\8B\04\C50 `\00H\89E\D8\E9\82\FA\FF\FF\C7E\F4\1D\00\00\00\8B}\F4\E8\FD\F9\FF\FFH\8BE\F8H\89\C1H\83\C1\04H\89M\F8Hc\00H\8B\04\C50 `\00H\89E\D8\E9P\FA\FF\FF\C7E\F4\1E\00\00\00\8B}\F4\E8\CB\F9\FF\FFH\8BE\F8H\89\C1H\83\C1\04H\89M\F8Hc\00H\8B\04\C50 `\00H\89E\D8\E9\1E\FA\FF\FF\C7E\F4\1F\00\00\00\8B}\F4\E8\99\F9\FF\FFH\8BE\F8H\89\C1H\83\C1\04H\89M\F8Hc\00H\8B\04\C50 `\00H\89E\D8\E9\EC\F9\FF\FF\E9\A4\F9\FF\FF\90UH\89\E5H\81\EC  \00\00\C7E\FC\00\00\00\00\C7E\F8\00\08\00\00\C7\85\EC\DF\FF\FF\00\00\00\00\81\BD\EC\DF\FF\FF\FF\07\00\00\0F\8DA\00\00\00\B8\1F\00\00\00\8B\8D\EC\DF\FF\FF\89\85\E4\DF\FF\FF\89\C8\99\8B\8D\E4\DF\FF\FF\F7\F9\83\C2\01Hc\B5\EC\DF\FF\FF\89\94\B5\F0\DF\FF\FF\8B\85\EC\DF\FF\FF\83\C0\01\89\85\EC\DF\FF\FF\E9\AF\FF\FF\FF\C7E\EC\00\00\00\00\C7\85\E8\DF\FF\FF\00\00\00\00\81\BD\E8\DF\FF\FF\A0\86\01\00\0F\8D \00\00\00H\8D\BD\F0\DF\FF\FF\E8\EF\F8\FF\FF\8B\85\E8\DF\FF\FF\83\C0\01\89\85\E8\DF\FF\FF\E9\D0\FF\FF\FFH\BF\08\0E@\00\00\00\00\00\8B4%4!`\00\B0\00\E8\A3\F7\FF\FF1\F6\89\85\E0\DF\FF\FF\89\F0H\81\C4  \00\00]\C3AWAVI\89\D7AUATL\8D%^\11 \00UH\8D-^\11 \00SA\89\FDI\89\F6L)\E5H\83\EC\08H\C1\FD\03\E8/\F7\FF\FFH\85\EDt 1\DB\0F\1F\84\00\00\00\00\00L\89\FAL\89\F6D\89\EFA\FF\14\DCH\83\C3\01H9\DDu\EAH\83\C4\08[]A\5CA]A^A_\C3\90f.\0F\1F\84\00\00\00\00\00\F3\C3" }>
@seg_400d00__rodata = internal constant %seg_400d00__rodata_type <{ [264 x i8] c"\01\00\02\00\00\00\00\00\80\05@\00\00\00\00\00\93\05@\00\00\00\00\00\C5\05@\00\00\00\00\00\F7\05@\00\00\00\00\00)\06@\00\00\00\00\00[\06@\00\00\00\00\00\8D\06@\00\00\00\00\00\BF\06@\00\00\00\00\00\F1\06@\00\00\00\00\00#\07@\00\00\00\00\00U\07@\00\00\00\00\00\87\07@\00\00\00\00\00\B9\07@\00\00\00\00\00\EB\07@\00\00\00\00\00\1D\08@\00\00\00\00\00O\08@\00\00\00\00\00\81\08@\00\00\00\00\00\B3\08@\00\00\00\00\00\E5\08@\00\00\00\00\00\17\09@\00\00\00\00\00I\09@\00\00\00\00\00{\09@\00\00\00\00\00\AD\09@\00\00\00\00\00\DF\09@\00\00\00\00\00\11\0A@\00\00\00\00\00C\0A@\00\00\00\00\00u\0A@\00\00\00\00\00\A7\0A@\00\00\00\00\00\D9\0A@\00\00\00\00\00\0B\0B@\00\00\00\00\00=\0B@\00\00\00\00\00o\0B@\00\00\00\00\00", [9 x i8] c"Sum: %u\0A\00" }>
@seg_601df0__init_array = internal global %seg_601df0__init_array_type <{ i64 ptrtoint (void ()* @callback_sub_400500_frame_dummy to i64), i64 ptrtoint (void ()* @callback_sub_4004d0___do_global_dtors_aux to i64) }>
@seg_601ff0__got = internal global %seg_601ff0__got_type <{ i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64)* @__libc_start_main to i64), i64 ptrtoint (i64 ()* @__gmon_start__ to i64) }>
@seg_602020__data = internal global %seg_602020__data_type <{ [16 x i8] zeroinitializer, i64 add (i64 ptrtoint (%seg_400420__text_type* @seg_400420__text to i64), i64 345), i64 add (i64 ptrtoint (%seg_400420__text_type* @seg_400420__text to i64), i64 364), i64 add (i64 ptrtoint (%seg_400420__text_type* @seg_400420__text to i64), i64 414), i64 add (i64 ptrtoint (%seg_400420__text_type* @seg_400420__text to i64), i64 464), i64 add (i64 ptrtoint (%seg_400420__text_type* @seg_400420__text to i64), i64 514), i64 add (i64 ptrtoint (%seg_400420__text_type* @seg_400420__text to i64), i64 564), i64 add (i64 ptrtoint (%seg_400420__text_type* @seg_400420__text to i64), i64 614), i64 add (i64 ptrtoint (%seg_400420__text_type* @seg_400420__text to i64), i64 664), i64 add (i64 ptrtoint (%seg_400420__text_type* @seg_400420__text to i64), i64 714), i64 add (i64 ptrtoint (%seg_400420__text_type* @seg_400420__text to i64), i64 764), i64 add (i64 ptrtoint (%seg_400420__text_type* @seg_400420__text to i64), i64 814), i64 add (i64 ptrtoint (%seg_400420__text_type* @seg_400420__text to i64), i64 864), i64 add (i64 ptrtoint (%seg_400420__text_type* @seg_400420__text to i64), i64 914), i64 add (i64 ptrtoint (%seg_400420__text_type* @seg_400420__text to i64), i64 964), i64 add (i64 ptrtoint (%seg_400420__text_type* @seg_400420__text to i64), i64 1014), i64 add (i64 ptrtoint (%seg_400420__text_type* @seg_400420__text to i64), i64 1064), i64 add (i64 ptrtoint (%seg_400420__text_type* @seg_400420__text to i64), i64 1114), i64 add (i64 ptrtoint (%seg_400420__text_type* @seg_400420__text to i64), i64 1164), i64 add (i64 ptrtoint (%seg_400420__text_type* @seg_400420__text to i64), i64 1214), i64 add (i64 ptrtoint (%seg_400420__text_type* @seg_400420__text to i64), i64 1264), i64 add (i64 ptrtoint (%seg_400420__text_type* @seg_400420__text to i64), i64 1314), i64 add (i64 ptrtoint (%seg_400420__text_type* @seg_400420__text to i64), i64 1364), i64 add (i64 ptrtoint (%seg_400420__text_type* @seg_400420__text to i64), i64 1414), i64 add (i64 ptrtoint (%seg_400420__text_type* @seg_400420__text to i64), i64 1464), i64 add (i64 ptrtoint (%seg_400420__text_type* @seg_400420__text to i64), i64 1514), i64 add (i64 ptrtoint (%seg_400420__text_type* @seg_400420__text to i64), i64 1564), i64 add (i64 ptrtoint (%seg_400420__text_type* @seg_400420__text to i64), i64 1614), i64 add (i64 ptrtoint (%seg_400420__text_type* @seg_400420__text to i64), i64 1664), i64 add (i64 ptrtoint (%seg_400420__text_type* @seg_400420__text to i64), i64 1714), i64 add (i64 ptrtoint (%seg_400420__text_type* @seg_400420__text to i64), i64 1764), i64 add (i64 ptrtoint (%seg_400420__text_type* @seg_400420__text to i64), i64 1814), i64 add (i64 ptrtoint (%seg_400420__text_type* @seg_400420__text to i64), i64 1864) }>
@__bss_start = global %__bss_start_type zeroinitializer
@sum = local_unnamed_addr global %sum_type zeroinitializer
@0 = internal global i1 false
@1 = internal constant %struct.Memory* (%struct.State*, i64, %struct.Memory*)* @callback_sub_400500_frame_dummy_wrapper
@2 = internal constant void ()* @__mcsema_attach_call
@3 = internal constant %struct.Memory* (%struct.State*, i64, %struct.Memory*)* @callback_sub_4004d0___do_global_dtors_aux_wrapper
@4 = internal constant %struct.Memory* (%struct.State*, i64, %struct.Memory*)* @callback_sub_400cf0___libc_csu_fini_wrapper
@5 = internal constant %struct.Memory* (%struct.State*, i64, %struct.Memory*)* @callback_sub_400c80___libc_csu_init_wrapper
@6 = internal constant %struct.Memory* (%struct.State*, i64, %struct.Memory*)* @main_wrapper
@7 = internal constant %struct.Memory* (%struct.State*, i64, %struct.Memory*)* @eval_wrapper
@8 = internal constant %struct.Memory* (%struct.State*, i64, %struct.Memory*)* @.init_proc_wrapper
@9 = internal constant %struct.Memory* (%struct.State*, i64, %struct.Memory*)* @.term_proc_wrapper
@10 = internal constant %struct.Memory* (%struct.State*, i64, %struct.Memory*)* @execute_wrapper
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 101, void ()* @__mcsema_constructor, i8* null }]
@llvm.global_dtors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 101, void ()* @__mcsema_destructor, i8* null }]

; Function Attrs: nounwind readnone
declare i32 @llvm.ctpop.i32(i32) #0

; Function Attrs: noduplicate noinline nounwind optnone
declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr #1

; Function Attrs: noinline nounwind optnone
define %struct.Memory* @__remill_basic_block(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) local_unnamed_addr #2 !dbg !1261 {
  %state = alloca %struct.State*, align 8
  %curr_pc = alloca i64, align 8
  %memory = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  %SS_BASE = alloca i64, align 8
  %ES_BASE = alloca i64, align 8
  %DS_BASE = alloca i64, align 8
  %CS_BASE = alloca i64, align 8
  %STATE = alloca %struct.State*, align 8
  %MEMORY = alloca %struct.Memory*, align 8
  %_DR0 = alloca i64*, align 8
  %_DR1 = alloca i64*, align 8
  %_DR2 = alloca i64*, align 8
  %_DR3 = alloca i64*, align 8
  %_DR4 = alloca i64*, align 8
  %_DR5 = alloca i64*, align 8
  %_DR6 = alloca i64*, align 8
  %_DR7 = alloca i64*, align 8
  %CR0 = alloca i64*, align 8
  %CR1 = alloca i64*, align 8
  %CR2 = alloca i64*, align 8
  %CR3 = alloca i64*, align 8
  %CR4 = alloca i64*, align 8
  %CR8 = alloca i64*, align 8
  store %struct.State* %0, %struct.State** %state, align 8
  store i64 %1, i64* %curr_pc, align 8
  store %struct.Memory* %2, %struct.Memory** %memory, align 8
  store i8 0, i8* %BRANCH_TAKEN, align 1, !dbg !1952
  store i64 0, i64* %SS_BASE, align 8, !dbg !1953
  store i64 0, i64* %ES_BASE, align 8, !dbg !1954
  store i64 0, i64* %DS_BASE, align 8, !dbg !1955
  store i64 0, i64* %CS_BASE, align 8, !dbg !1956
  store %struct.State* %0, %struct.State** %STATE, align 8, !dbg !1957
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8, !dbg !1958
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !1959
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33, !dbg !1960
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0, !dbg !1961
  %PC = bitcast %union.anon* %6 to i64*, !dbg !1961
  store i64 %1, i64* %PC, align 8, !dbg !1962
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !1963
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 1, !dbg !1964
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0, !dbg !1965
  %10 = bitcast %union.anon* %9 to %struct.anon.2*, !dbg !1965
  %AH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10, i32 0, i32 1, !dbg !1966
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !1967
  %12 = getelementptr inbounds %struct.GPR, %struct.GPR* %11, i32 0, i32 3, !dbg !1968
  %13 = getelementptr inbounds %struct.Reg, %struct.Reg* %12, i32 0, i32 0, !dbg !1969
  %14 = bitcast %union.anon* %13 to %struct.anon.2*, !dbg !1969
  %BH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %14, i32 0, i32 1, !dbg !1970
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !1971
  %16 = getelementptr inbounds %struct.GPR, %struct.GPR* %15, i32 0, i32 5, !dbg !1972
  %17 = getelementptr inbounds %struct.Reg, %struct.Reg* %16, i32 0, i32 0, !dbg !1973
  %18 = bitcast %union.anon* %17 to %struct.anon.2*, !dbg !1973
  %CH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %18, i32 0, i32 1, !dbg !1974
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !1975
  %20 = getelementptr inbounds %struct.GPR, %struct.GPR* %19, i32 0, i32 7, !dbg !1976
  %21 = getelementptr inbounds %struct.Reg, %struct.Reg* %20, i32 0, i32 0, !dbg !1977
  %22 = bitcast %union.anon* %21 to %struct.anon.2*, !dbg !1977
  %DH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %22, i32 0, i32 1, !dbg !1978
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !1979
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 1, !dbg !1980
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0, !dbg !1981
  %26 = bitcast %union.anon* %25 to %struct.anon.2*, !dbg !1981
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %26, i32 0, i32 0, !dbg !1982
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !1983
  %28 = getelementptr inbounds %struct.GPR, %struct.GPR* %27, i32 0, i32 3, !dbg !1984
  %29 = getelementptr inbounds %struct.Reg, %struct.Reg* %28, i32 0, i32 0, !dbg !1985
  %30 = bitcast %union.anon* %29 to %struct.anon.2*, !dbg !1985
  %BL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %30, i32 0, i32 0, !dbg !1986
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !1987
  %32 = getelementptr inbounds %struct.GPR, %struct.GPR* %31, i32 0, i32 5, !dbg !1988
  %33 = getelementptr inbounds %struct.Reg, %struct.Reg* %32, i32 0, i32 0, !dbg !1989
  %34 = bitcast %union.anon* %33 to %struct.anon.2*, !dbg !1989
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %34, i32 0, i32 0, !dbg !1990
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !1991
  %36 = getelementptr inbounds %struct.GPR, %struct.GPR* %35, i32 0, i32 7, !dbg !1992
  %37 = getelementptr inbounds %struct.Reg, %struct.Reg* %36, i32 0, i32 0, !dbg !1993
  %38 = bitcast %union.anon* %37 to %struct.anon.2*, !dbg !1993
  %DL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %38, i32 0, i32 0, !dbg !1994
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !1995
  %40 = getelementptr inbounds %struct.GPR, %struct.GPR* %39, i32 0, i32 9, !dbg !1996
  %41 = getelementptr inbounds %struct.Reg, %struct.Reg* %40, i32 0, i32 0, !dbg !1997
  %42 = bitcast %union.anon* %41 to %struct.anon.2*, !dbg !1997
  %SIL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %42, i32 0, i32 0, !dbg !1998
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !1999
  %44 = getelementptr inbounds %struct.GPR, %struct.GPR* %43, i32 0, i32 11, !dbg !2000
  %45 = getelementptr inbounds %struct.Reg, %struct.Reg* %44, i32 0, i32 0, !dbg !2001
  %46 = bitcast %union.anon* %45 to %struct.anon.2*, !dbg !2001
  %DIL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %46, i32 0, i32 0, !dbg !2002
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2003
  %48 = getelementptr inbounds %struct.GPR, %struct.GPR* %47, i32 0, i32 13, !dbg !2004
  %49 = getelementptr inbounds %struct.Reg, %struct.Reg* %48, i32 0, i32 0, !dbg !2005
  %50 = bitcast %union.anon* %49 to %struct.anon.2*, !dbg !2005
  %SPL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %50, i32 0, i32 0, !dbg !2006
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2007
  %52 = getelementptr inbounds %struct.GPR, %struct.GPR* %51, i32 0, i32 15, !dbg !2008
  %53 = getelementptr inbounds %struct.Reg, %struct.Reg* %52, i32 0, i32 0, !dbg !2009
  %54 = bitcast %union.anon* %53 to %struct.anon.2*, !dbg !2009
  %BPL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %54, i32 0, i32 0, !dbg !2010
  %55 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2011
  %56 = getelementptr inbounds %struct.GPR, %struct.GPR* %55, i32 0, i32 17, !dbg !2012
  %57 = getelementptr inbounds %struct.Reg, %struct.Reg* %56, i32 0, i32 0, !dbg !2013
  %58 = bitcast %union.anon* %57 to %struct.anon.2*, !dbg !2013
  %R8B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %58, i32 0, i32 0, !dbg !2014
  %59 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2015
  %60 = getelementptr inbounds %struct.GPR, %struct.GPR* %59, i32 0, i32 19, !dbg !2016
  %61 = getelementptr inbounds %struct.Reg, %struct.Reg* %60, i32 0, i32 0, !dbg !2017
  %62 = bitcast %union.anon* %61 to %struct.anon.2*, !dbg !2017
  %R9B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %62, i32 0, i32 0, !dbg !2018
  %63 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2019
  %64 = getelementptr inbounds %struct.GPR, %struct.GPR* %63, i32 0, i32 21, !dbg !2020
  %65 = getelementptr inbounds %struct.Reg, %struct.Reg* %64, i32 0, i32 0, !dbg !2021
  %66 = bitcast %union.anon* %65 to %struct.anon.2*, !dbg !2021
  %R10B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %66, i32 0, i32 0, !dbg !2022
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2023
  %68 = getelementptr inbounds %struct.GPR, %struct.GPR* %67, i32 0, i32 23, !dbg !2024
  %69 = getelementptr inbounds %struct.Reg, %struct.Reg* %68, i32 0, i32 0, !dbg !2025
  %70 = bitcast %union.anon* %69 to %struct.anon.2*, !dbg !2025
  %R11B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %70, i32 0, i32 0, !dbg !2026
  %71 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2027
  %72 = getelementptr inbounds %struct.GPR, %struct.GPR* %71, i32 0, i32 25, !dbg !2028
  %73 = getelementptr inbounds %struct.Reg, %struct.Reg* %72, i32 0, i32 0, !dbg !2029
  %74 = bitcast %union.anon* %73 to %struct.anon.2*, !dbg !2029
  %R12B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %74, i32 0, i32 0, !dbg !2030
  %75 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2031
  %76 = getelementptr inbounds %struct.GPR, %struct.GPR* %75, i32 0, i32 27, !dbg !2032
  %77 = getelementptr inbounds %struct.Reg, %struct.Reg* %76, i32 0, i32 0, !dbg !2033
  %78 = bitcast %union.anon* %77 to %struct.anon.2*, !dbg !2033
  %R13B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %78, i32 0, i32 0, !dbg !2034
  %79 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2035
  %80 = getelementptr inbounds %struct.GPR, %struct.GPR* %79, i32 0, i32 29, !dbg !2036
  %81 = getelementptr inbounds %struct.Reg, %struct.Reg* %80, i32 0, i32 0, !dbg !2037
  %82 = bitcast %union.anon* %81 to %struct.anon.2*, !dbg !2037
  %R14B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %82, i32 0, i32 0, !dbg !2038
  %83 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2039
  %84 = getelementptr inbounds %struct.GPR, %struct.GPR* %83, i32 0, i32 31, !dbg !2040
  %85 = getelementptr inbounds %struct.Reg, %struct.Reg* %84, i32 0, i32 0, !dbg !2041
  %86 = bitcast %union.anon* %85 to %struct.anon.2*, !dbg !2041
  %R15B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %86, i32 0, i32 0, !dbg !2042
  %87 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2043
  %88 = getelementptr inbounds %struct.GPR, %struct.GPR* %87, i32 0, i32 1, !dbg !2044
  %89 = getelementptr inbounds %struct.Reg, %struct.Reg* %88, i32 0, i32 0, !dbg !2045
  %AX = bitcast %union.anon* %89 to i16*, !dbg !2045
  %90 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2046
  %91 = getelementptr inbounds %struct.GPR, %struct.GPR* %90, i32 0, i32 3, !dbg !2047
  %92 = getelementptr inbounds %struct.Reg, %struct.Reg* %91, i32 0, i32 0, !dbg !2048
  %BX = bitcast %union.anon* %92 to i16*, !dbg !2048
  %93 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2049
  %94 = getelementptr inbounds %struct.GPR, %struct.GPR* %93, i32 0, i32 5, !dbg !2050
  %95 = getelementptr inbounds %struct.Reg, %struct.Reg* %94, i32 0, i32 0, !dbg !2051
  %CX = bitcast %union.anon* %95 to i16*, !dbg !2051
  %96 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2052
  %97 = getelementptr inbounds %struct.GPR, %struct.GPR* %96, i32 0, i32 7, !dbg !2053
  %98 = getelementptr inbounds %struct.Reg, %struct.Reg* %97, i32 0, i32 0, !dbg !2054
  %DX = bitcast %union.anon* %98 to i16*, !dbg !2054
  %99 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2055
  %100 = getelementptr inbounds %struct.GPR, %struct.GPR* %99, i32 0, i32 9, !dbg !2056
  %101 = getelementptr inbounds %struct.Reg, %struct.Reg* %100, i32 0, i32 0, !dbg !2057
  %SI = bitcast %union.anon* %101 to i16*, !dbg !2057
  %102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2058
  %103 = getelementptr inbounds %struct.GPR, %struct.GPR* %102, i32 0, i32 11, !dbg !2059
  %104 = getelementptr inbounds %struct.Reg, %struct.Reg* %103, i32 0, i32 0, !dbg !2060
  %DI = bitcast %union.anon* %104 to i16*, !dbg !2060
  %105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2061
  %106 = getelementptr inbounds %struct.GPR, %struct.GPR* %105, i32 0, i32 13, !dbg !2062
  %107 = getelementptr inbounds %struct.Reg, %struct.Reg* %106, i32 0, i32 0, !dbg !2063
  %SP = bitcast %union.anon* %107 to i16*, !dbg !2063
  %108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2064
  %109 = getelementptr inbounds %struct.GPR, %struct.GPR* %108, i32 0, i32 15, !dbg !2065
  %110 = getelementptr inbounds %struct.Reg, %struct.Reg* %109, i32 0, i32 0, !dbg !2066
  %BP = bitcast %union.anon* %110 to i16*, !dbg !2066
  %111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2067
  %112 = getelementptr inbounds %struct.GPR, %struct.GPR* %111, i32 0, i32 17, !dbg !2068
  %113 = getelementptr inbounds %struct.Reg, %struct.Reg* %112, i32 0, i32 0, !dbg !2069
  %R8W = bitcast %union.anon* %113 to i16*, !dbg !2069
  %114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2070
  %115 = getelementptr inbounds %struct.GPR, %struct.GPR* %114, i32 0, i32 19, !dbg !2071
  %116 = getelementptr inbounds %struct.Reg, %struct.Reg* %115, i32 0, i32 0, !dbg !2072
  %R9W = bitcast %union.anon* %116 to i16*, !dbg !2072
  %117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2073
  %118 = getelementptr inbounds %struct.GPR, %struct.GPR* %117, i32 0, i32 21, !dbg !2074
  %119 = getelementptr inbounds %struct.Reg, %struct.Reg* %118, i32 0, i32 0, !dbg !2075
  %R10W = bitcast %union.anon* %119 to i16*, !dbg !2075
  %120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2076
  %121 = getelementptr inbounds %struct.GPR, %struct.GPR* %120, i32 0, i32 23, !dbg !2077
  %122 = getelementptr inbounds %struct.Reg, %struct.Reg* %121, i32 0, i32 0, !dbg !2078
  %R11W = bitcast %union.anon* %122 to i16*, !dbg !2078
  %123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2079
  %124 = getelementptr inbounds %struct.GPR, %struct.GPR* %123, i32 0, i32 25, !dbg !2080
  %125 = getelementptr inbounds %struct.Reg, %struct.Reg* %124, i32 0, i32 0, !dbg !2081
  %R12W = bitcast %union.anon* %125 to i16*, !dbg !2081
  %126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2082
  %127 = getelementptr inbounds %struct.GPR, %struct.GPR* %126, i32 0, i32 27, !dbg !2083
  %128 = getelementptr inbounds %struct.Reg, %struct.Reg* %127, i32 0, i32 0, !dbg !2084
  %R13W = bitcast %union.anon* %128 to i16*, !dbg !2084
  %129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2085
  %130 = getelementptr inbounds %struct.GPR, %struct.GPR* %129, i32 0, i32 29, !dbg !2086
  %131 = getelementptr inbounds %struct.Reg, %struct.Reg* %130, i32 0, i32 0, !dbg !2087
  %R14W = bitcast %union.anon* %131 to i16*, !dbg !2087
  %132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2088
  %133 = getelementptr inbounds %struct.GPR, %struct.GPR* %132, i32 0, i32 31, !dbg !2089
  %134 = getelementptr inbounds %struct.Reg, %struct.Reg* %133, i32 0, i32 0, !dbg !2090
  %R15W = bitcast %union.anon* %134 to i16*, !dbg !2090
  %135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2091
  %136 = getelementptr inbounds %struct.GPR, %struct.GPR* %135, i32 0, i32 33, !dbg !2092
  %137 = getelementptr inbounds %struct.Reg, %struct.Reg* %136, i32 0, i32 0, !dbg !2093
  %IP = bitcast %union.anon* %137 to i16*, !dbg !2093
  %138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2094
  %139 = getelementptr inbounds %struct.GPR, %struct.GPR* %138, i32 0, i32 1, !dbg !2095
  %140 = getelementptr inbounds %struct.Reg, %struct.Reg* %139, i32 0, i32 0, !dbg !2096
  %EAX = bitcast %union.anon* %140 to i32*, !dbg !2096
  %141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2097
  %142 = getelementptr inbounds %struct.GPR, %struct.GPR* %141, i32 0, i32 3, !dbg !2098
  %143 = getelementptr inbounds %struct.Reg, %struct.Reg* %142, i32 0, i32 0, !dbg !2099
  %EBX = bitcast %union.anon* %143 to i32*, !dbg !2099
  %144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2100
  %145 = getelementptr inbounds %struct.GPR, %struct.GPR* %144, i32 0, i32 5, !dbg !2101
  %146 = getelementptr inbounds %struct.Reg, %struct.Reg* %145, i32 0, i32 0, !dbg !2102
  %ECX = bitcast %union.anon* %146 to i32*, !dbg !2102
  %147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2103
  %148 = getelementptr inbounds %struct.GPR, %struct.GPR* %147, i32 0, i32 7, !dbg !2104
  %149 = getelementptr inbounds %struct.Reg, %struct.Reg* %148, i32 0, i32 0, !dbg !2105
  %EDX = bitcast %union.anon* %149 to i32*, !dbg !2105
  %150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2106
  %151 = getelementptr inbounds %struct.GPR, %struct.GPR* %150, i32 0, i32 9, !dbg !2107
  %152 = getelementptr inbounds %struct.Reg, %struct.Reg* %151, i32 0, i32 0, !dbg !2108
  %ESI = bitcast %union.anon* %152 to i32*, !dbg !2108
  %153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2109
  %154 = getelementptr inbounds %struct.GPR, %struct.GPR* %153, i32 0, i32 11, !dbg !2110
  %155 = getelementptr inbounds %struct.Reg, %struct.Reg* %154, i32 0, i32 0, !dbg !2111
  %EDI = bitcast %union.anon* %155 to i32*, !dbg !2111
  %156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2112
  %157 = getelementptr inbounds %struct.GPR, %struct.GPR* %156, i32 0, i32 13, !dbg !2113
  %158 = getelementptr inbounds %struct.Reg, %struct.Reg* %157, i32 0, i32 0, !dbg !2114
  %ESP = bitcast %union.anon* %158 to i32*, !dbg !2114
  %159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2115
  %160 = getelementptr inbounds %struct.GPR, %struct.GPR* %159, i32 0, i32 15, !dbg !2116
  %161 = getelementptr inbounds %struct.Reg, %struct.Reg* %160, i32 0, i32 0, !dbg !2117
  %EBP = bitcast %union.anon* %161 to i32*, !dbg !2117
  %162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2118
  %163 = getelementptr inbounds %struct.GPR, %struct.GPR* %162, i32 0, i32 33, !dbg !2119
  %164 = getelementptr inbounds %struct.Reg, %struct.Reg* %163, i32 0, i32 0, !dbg !2120
  %EIP = bitcast %union.anon* %164 to i32*, !dbg !2120
  %165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2121
  %166 = getelementptr inbounds %struct.GPR, %struct.GPR* %165, i32 0, i32 17, !dbg !2122
  %167 = getelementptr inbounds %struct.Reg, %struct.Reg* %166, i32 0, i32 0, !dbg !2123
  %R8D = bitcast %union.anon* %167 to i32*, !dbg !2123
  %168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2124
  %169 = getelementptr inbounds %struct.GPR, %struct.GPR* %168, i32 0, i32 19, !dbg !2125
  %170 = getelementptr inbounds %struct.Reg, %struct.Reg* %169, i32 0, i32 0, !dbg !2126
  %R9D = bitcast %union.anon* %170 to i32*, !dbg !2126
  %171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2127
  %172 = getelementptr inbounds %struct.GPR, %struct.GPR* %171, i32 0, i32 21, !dbg !2128
  %173 = getelementptr inbounds %struct.Reg, %struct.Reg* %172, i32 0, i32 0, !dbg !2129
  %R10D = bitcast %union.anon* %173 to i32*, !dbg !2129
  %174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2130
  %175 = getelementptr inbounds %struct.GPR, %struct.GPR* %174, i32 0, i32 23, !dbg !2131
  %176 = getelementptr inbounds %struct.Reg, %struct.Reg* %175, i32 0, i32 0, !dbg !2132
  %R11D = bitcast %union.anon* %176 to i32*, !dbg !2132
  %177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2133
  %178 = getelementptr inbounds %struct.GPR, %struct.GPR* %177, i32 0, i32 25, !dbg !2134
  %179 = getelementptr inbounds %struct.Reg, %struct.Reg* %178, i32 0, i32 0, !dbg !2135
  %R12D = bitcast %union.anon* %179 to i32*, !dbg !2135
  %180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2136
  %181 = getelementptr inbounds %struct.GPR, %struct.GPR* %180, i32 0, i32 27, !dbg !2137
  %182 = getelementptr inbounds %struct.Reg, %struct.Reg* %181, i32 0, i32 0, !dbg !2138
  %R13D = bitcast %union.anon* %182 to i32*, !dbg !2138
  %183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2139
  %184 = getelementptr inbounds %struct.GPR, %struct.GPR* %183, i32 0, i32 29, !dbg !2140
  %185 = getelementptr inbounds %struct.Reg, %struct.Reg* %184, i32 0, i32 0, !dbg !2141
  %R14D = bitcast %union.anon* %185 to i32*, !dbg !2141
  %186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2142
  %187 = getelementptr inbounds %struct.GPR, %struct.GPR* %186, i32 0, i32 31, !dbg !2143
  %188 = getelementptr inbounds %struct.Reg, %struct.Reg* %187, i32 0, i32 0, !dbg !2144
  %R15D = bitcast %union.anon* %188 to i32*, !dbg !2144
  %189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2145
  %190 = getelementptr inbounds %struct.GPR, %struct.GPR* %189, i32 0, i32 1, !dbg !2146
  %191 = getelementptr inbounds %struct.Reg, %struct.Reg* %190, i32 0, i32 0, !dbg !2147
  %RAX = bitcast %union.anon* %191 to i64*, !dbg !2147
  %192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2148
  %193 = getelementptr inbounds %struct.GPR, %struct.GPR* %192, i32 0, i32 3, !dbg !2149
  %194 = getelementptr inbounds %struct.Reg, %struct.Reg* %193, i32 0, i32 0, !dbg !2150
  %RBX = bitcast %union.anon* %194 to i64*, !dbg !2150
  %195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2151
  %196 = getelementptr inbounds %struct.GPR, %struct.GPR* %195, i32 0, i32 5, !dbg !2152
  %197 = getelementptr inbounds %struct.Reg, %struct.Reg* %196, i32 0, i32 0, !dbg !2153
  %RCX = bitcast %union.anon* %197 to i64*, !dbg !2153
  %198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2154
  %199 = getelementptr inbounds %struct.GPR, %struct.GPR* %198, i32 0, i32 7, !dbg !2155
  %200 = getelementptr inbounds %struct.Reg, %struct.Reg* %199, i32 0, i32 0, !dbg !2156
  %RDX = bitcast %union.anon* %200 to i64*, !dbg !2156
  %201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2157
  %202 = getelementptr inbounds %struct.GPR, %struct.GPR* %201, i32 0, i32 9, !dbg !2158
  %203 = getelementptr inbounds %struct.Reg, %struct.Reg* %202, i32 0, i32 0, !dbg !2159
  %RSI = bitcast %union.anon* %203 to i64*, !dbg !2159
  %204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2160
  %205 = getelementptr inbounds %struct.GPR, %struct.GPR* %204, i32 0, i32 11, !dbg !2161
  %206 = getelementptr inbounds %struct.Reg, %struct.Reg* %205, i32 0, i32 0, !dbg !2162
  %RDI = bitcast %union.anon* %206 to i64*, !dbg !2162
  %207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2163
  %208 = getelementptr inbounds %struct.GPR, %struct.GPR* %207, i32 0, i32 13, !dbg !2164
  %209 = getelementptr inbounds %struct.Reg, %struct.Reg* %208, i32 0, i32 0, !dbg !2165
  %RSP = bitcast %union.anon* %209 to i64*, !dbg !2165
  %210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2166
  %211 = getelementptr inbounds %struct.GPR, %struct.GPR* %210, i32 0, i32 15, !dbg !2167
  %212 = getelementptr inbounds %struct.Reg, %struct.Reg* %211, i32 0, i32 0, !dbg !2168
  %RBP = bitcast %union.anon* %212 to i64*, !dbg !2168
  %213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2169
  %214 = getelementptr inbounds %struct.GPR, %struct.GPR* %213, i32 0, i32 17, !dbg !2170
  %215 = getelementptr inbounds %struct.Reg, %struct.Reg* %214, i32 0, i32 0, !dbg !2171
  %R8 = bitcast %union.anon* %215 to i64*, !dbg !2171
  %216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2172
  %217 = getelementptr inbounds %struct.GPR, %struct.GPR* %216, i32 0, i32 19, !dbg !2173
  %218 = getelementptr inbounds %struct.Reg, %struct.Reg* %217, i32 0, i32 0, !dbg !2174
  %R9 = bitcast %union.anon* %218 to i64*, !dbg !2174
  %219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2175
  %220 = getelementptr inbounds %struct.GPR, %struct.GPR* %219, i32 0, i32 21, !dbg !2176
  %221 = getelementptr inbounds %struct.Reg, %struct.Reg* %220, i32 0, i32 0, !dbg !2177
  %R10 = bitcast %union.anon* %221 to i64*, !dbg !2177
  %222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2178
  %223 = getelementptr inbounds %struct.GPR, %struct.GPR* %222, i32 0, i32 23, !dbg !2179
  %224 = getelementptr inbounds %struct.Reg, %struct.Reg* %223, i32 0, i32 0, !dbg !2180
  %R11 = bitcast %union.anon* %224 to i64*, !dbg !2180
  %225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2181
  %226 = getelementptr inbounds %struct.GPR, %struct.GPR* %225, i32 0, i32 25, !dbg !2182
  %227 = getelementptr inbounds %struct.Reg, %struct.Reg* %226, i32 0, i32 0, !dbg !2183
  %R12 = bitcast %union.anon* %227 to i64*, !dbg !2183
  %228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2184
  %229 = getelementptr inbounds %struct.GPR, %struct.GPR* %228, i32 0, i32 27, !dbg !2185
  %230 = getelementptr inbounds %struct.Reg, %struct.Reg* %229, i32 0, i32 0, !dbg !2186
  %R13 = bitcast %union.anon* %230 to i64*, !dbg !2186
  %231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2187
  %232 = getelementptr inbounds %struct.GPR, %struct.GPR* %231, i32 0, i32 29, !dbg !2188
  %233 = getelementptr inbounds %struct.Reg, %struct.Reg* %232, i32 0, i32 0, !dbg !2189
  %R14 = bitcast %union.anon* %233 to i64*, !dbg !2189
  %234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2190
  %235 = getelementptr inbounds %struct.GPR, %struct.GPR* %234, i32 0, i32 31, !dbg !2191
  %236 = getelementptr inbounds %struct.Reg, %struct.Reg* %235, i32 0, i32 0, !dbg !2192
  %R15 = bitcast %union.anon* %236 to i64*, !dbg !2192
  %237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2193
  %238 = getelementptr inbounds %struct.GPR, %struct.GPR* %237, i32 0, i32 33, !dbg !2194
  %239 = getelementptr inbounds %struct.Reg, %struct.Reg* %238, i32 0, i32 0, !dbg !2195
  %RIP = bitcast %union.anon* %239 to i64*, !dbg !2195
  %240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4, !dbg !2196
  %241 = getelementptr inbounds %struct.Segments, %struct.Segments* %240, i32 0, i32 1, !dbg !2197
  %SS = bitcast %union.SegmentSelector* %241 to i16*, !dbg !2198
  %242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4, !dbg !2199
  %243 = getelementptr inbounds %struct.Segments, %struct.Segments* %242, i32 0, i32 3, !dbg !2200
  %ES = bitcast %union.SegmentSelector* %243 to i16*, !dbg !2201
  %244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4, !dbg !2202
  %245 = getelementptr inbounds %struct.Segments, %struct.Segments* %244, i32 0, i32 5, !dbg !2203
  %GS = bitcast %union.SegmentSelector* %245 to i16*, !dbg !2204
  %246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4, !dbg !2205
  %247 = getelementptr inbounds %struct.Segments, %struct.Segments* %246, i32 0, i32 7, !dbg !2206
  %FS = bitcast %union.SegmentSelector* %247 to i16*, !dbg !2207
  %248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4, !dbg !2208
  %249 = getelementptr inbounds %struct.Segments, %struct.Segments* %248, i32 0, i32 9, !dbg !2209
  %DS = bitcast %union.SegmentSelector* %249 to i16*, !dbg !2210
  %250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4, !dbg !2211
  %251 = getelementptr inbounds %struct.Segments, %struct.Segments* %250, i32 0, i32 11, !dbg !2212
  %CS = bitcast %union.SegmentSelector* %251 to i16*, !dbg !2213
  %252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5, !dbg !2214
  %253 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %252, i32 0, i32 5, !dbg !2215
  %254 = getelementptr inbounds %struct.Reg, %struct.Reg* %253, i32 0, i32 0, !dbg !2216
  %GS_BASE = bitcast %union.anon* %254 to i64*, !dbg !2216
  %255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5, !dbg !2217
  %256 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %255, i32 0, i32 7, !dbg !2218
  %257 = getelementptr inbounds %struct.Reg, %struct.Reg* %256, i32 0, i32 0, !dbg !2219
  %FS_BASE = bitcast %union.anon* %257 to i64*, !dbg !2219
  %258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2220
  %259 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %258, i64 0, i64 0, !dbg !2221
  %YMM0 = bitcast %union.VectorReg* %259 to %"class.std::bitset"*, !dbg !2222
  %260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2223
  %261 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %260, i64 0, i64 1, !dbg !2224
  %YMM1 = bitcast %union.VectorReg* %261 to %"class.std::bitset"*, !dbg !2225
  %262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2226
  %263 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %262, i64 0, i64 2, !dbg !2227
  %YMM2 = bitcast %union.VectorReg* %263 to %"class.std::bitset"*, !dbg !2228
  %264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2229
  %265 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %264, i64 0, i64 3, !dbg !2230
  %YMM3 = bitcast %union.VectorReg* %265 to %"class.std::bitset"*, !dbg !2231
  %266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2232
  %267 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %266, i64 0, i64 4, !dbg !2233
  %YMM4 = bitcast %union.VectorReg* %267 to %"class.std::bitset"*, !dbg !2234
  %268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2235
  %269 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %268, i64 0, i64 5, !dbg !2236
  %YMM5 = bitcast %union.VectorReg* %269 to %"class.std::bitset"*, !dbg !2237
  %270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2238
  %271 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %270, i64 0, i64 6, !dbg !2239
  %YMM6 = bitcast %union.VectorReg* %271 to %"class.std::bitset"*, !dbg !2240
  %272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2241
  %273 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %272, i64 0, i64 7, !dbg !2242
  %YMM7 = bitcast %union.VectorReg* %273 to %"class.std::bitset"*, !dbg !2243
  %274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2244
  %275 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %274, i64 0, i64 8, !dbg !2245
  %YMM8 = bitcast %union.VectorReg* %275 to %"class.std::bitset"*, !dbg !2246
  %276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2247
  %277 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %276, i64 0, i64 9, !dbg !2248
  %YMM9 = bitcast %union.VectorReg* %277 to %"class.std::bitset"*, !dbg !2249
  %278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2250
  %279 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %278, i64 0, i64 10, !dbg !2251
  %YMM10 = bitcast %union.VectorReg* %279 to %"class.std::bitset"*, !dbg !2252
  %280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2253
  %281 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %280, i64 0, i64 11, !dbg !2254
  %YMM11 = bitcast %union.VectorReg* %281 to %"class.std::bitset"*, !dbg !2255
  %282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2256
  %283 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %282, i64 0, i64 12, !dbg !2257
  %YMM12 = bitcast %union.VectorReg* %283 to %"class.std::bitset"*, !dbg !2258
  %284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2259
  %285 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %284, i64 0, i64 13, !dbg !2260
  %YMM13 = bitcast %union.VectorReg* %285 to %"class.std::bitset"*, !dbg !2261
  %286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2262
  %287 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %286, i64 0, i64 14, !dbg !2263
  %YMM14 = bitcast %union.VectorReg* %287 to %"class.std::bitset"*, !dbg !2264
  %288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2265
  %289 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %288, i64 0, i64 15, !dbg !2266
  %YMM15 = bitcast %union.VectorReg* %289 to %"class.std::bitset"*, !dbg !2267
  %290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2268
  %291 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %290, i64 0, i64 0, !dbg !2269
  %XMM0 = bitcast %union.VectorReg* %291 to %union.vec128_t*, !dbg !2270
  %292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2271
  %293 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %292, i64 0, i64 1, !dbg !2272
  %XMM1 = bitcast %union.VectorReg* %293 to %union.vec128_t*, !dbg !2273
  %294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2274
  %295 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %294, i64 0, i64 2, !dbg !2275
  %XMM2 = bitcast %union.VectorReg* %295 to %union.vec128_t*, !dbg !2276
  %296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2277
  %297 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %296, i64 0, i64 3, !dbg !2278
  %XMM3 = bitcast %union.VectorReg* %297 to %union.vec128_t*, !dbg !2279
  %298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2280
  %299 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %298, i64 0, i64 4, !dbg !2281
  %XMM4 = bitcast %union.VectorReg* %299 to %union.vec128_t*, !dbg !2282
  %300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2283
  %301 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %300, i64 0, i64 5, !dbg !2284
  %XMM5 = bitcast %union.VectorReg* %301 to %union.vec128_t*, !dbg !2285
  %302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2286
  %303 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %302, i64 0, i64 6, !dbg !2287
  %XMM6 = bitcast %union.VectorReg* %303 to %union.vec128_t*, !dbg !2288
  %304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2289
  %305 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %304, i64 0, i64 7, !dbg !2290
  %XMM7 = bitcast %union.VectorReg* %305 to %union.vec128_t*, !dbg !2291
  %306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2292
  %307 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %306, i64 0, i64 8, !dbg !2293
  %XMM8 = bitcast %union.VectorReg* %307 to %union.vec128_t*, !dbg !2294
  %308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2295
  %309 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %308, i64 0, i64 9, !dbg !2296
  %XMM9 = bitcast %union.VectorReg* %309 to %union.vec128_t*, !dbg !2297
  %310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2298
  %311 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %310, i64 0, i64 10, !dbg !2299
  %XMM10 = bitcast %union.VectorReg* %311 to %union.vec128_t*, !dbg !2300
  %312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2301
  %313 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %312, i64 0, i64 11, !dbg !2302
  %XMM11 = bitcast %union.VectorReg* %313 to %union.vec128_t*, !dbg !2303
  %314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2304
  %315 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %314, i64 0, i64 12, !dbg !2305
  %XMM12 = bitcast %union.VectorReg* %315 to %union.vec128_t*, !dbg !2306
  %316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2307
  %317 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %316, i64 0, i64 13, !dbg !2308
  %XMM13 = bitcast %union.VectorReg* %317 to %union.vec128_t*, !dbg !2309
  %318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2310
  %319 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %318, i64 0, i64 14, !dbg !2311
  %XMM14 = bitcast %union.VectorReg* %319 to %union.vec128_t*, !dbg !2312
  %320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2313
  %321 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %320, i64 0, i64 15, !dbg !2314
  %XMM15 = bitcast %union.VectorReg* %321 to %union.vec128_t*, !dbg !2315
  %322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7, !dbg !2316
  %323 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %322, i32 0, i32 0, !dbg !2317
  %324 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %323, i64 0, i64 0, !dbg !2318
  %ST0 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %324, i32 0, i32 1, !dbg !2319
  %325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7, !dbg !2320
  %326 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %325, i32 0, i32 0, !dbg !2321
  %327 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %326, i64 0, i64 1, !dbg !2322
  %ST1 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %327, i32 0, i32 1, !dbg !2323
  %328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7, !dbg !2324
  %329 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %328, i32 0, i32 0, !dbg !2325
  %330 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %329, i64 0, i64 2, !dbg !2326
  %ST2 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %330, i32 0, i32 1, !dbg !2327
  %331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7, !dbg !2328
  %332 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %331, i32 0, i32 0, !dbg !2329
  %333 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %332, i64 0, i64 3, !dbg !2330
  %ST3 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %333, i32 0, i32 1, !dbg !2331
  %334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7, !dbg !2332
  %335 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %334, i32 0, i32 0, !dbg !2333
  %336 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %335, i64 0, i64 4, !dbg !2334
  %ST4 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %336, i32 0, i32 1, !dbg !2335
  %337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7, !dbg !2336
  %338 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %337, i32 0, i32 0, !dbg !2337
  %339 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %338, i64 0, i64 5, !dbg !2338
  %ST5 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %339, i32 0, i32 1, !dbg !2339
  %340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7, !dbg !2340
  %341 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %340, i32 0, i32 0, !dbg !2341
  %342 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %341, i64 0, i64 6, !dbg !2342
  %ST6 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %342, i32 0, i32 1, !dbg !2343
  %343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7, !dbg !2344
  %344 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %343, i32 0, i32 0, !dbg !2345
  %345 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %344, i64 0, i64 7, !dbg !2346
  %ST7 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %345, i32 0, i32 1, !dbg !2347
  %346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8, !dbg !2348
  %347 = getelementptr inbounds %struct.MMX, %struct.MMX* %346, i32 0, i32 0, !dbg !2349
  %348 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %347, i64 0, i64 0, !dbg !2350
  %349 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %348, i32 0, i32 1, !dbg !2351
  %350 = bitcast %union.vec64_t* %349 to %struct.uint64v1_t*, !dbg !2352
  %351 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %350, i32 0, i32 0, !dbg !2353
  %MM0 = getelementptr inbounds [1 x i64], [1 x i64]* %351, i64 0, i64 0, !dbg !2350
  %352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8, !dbg !2354
  %353 = getelementptr inbounds %struct.MMX, %struct.MMX* %352, i32 0, i32 0, !dbg !2355
  %354 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %353, i64 0, i64 1, !dbg !2356
  %355 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %354, i32 0, i32 1, !dbg !2357
  %356 = bitcast %union.vec64_t* %355 to %struct.uint64v1_t*, !dbg !2358
  %357 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %356, i32 0, i32 0, !dbg !2359
  %MM1 = getelementptr inbounds [1 x i64], [1 x i64]* %357, i64 0, i64 0, !dbg !2356
  %358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8, !dbg !2360
  %359 = getelementptr inbounds %struct.MMX, %struct.MMX* %358, i32 0, i32 0, !dbg !2361
  %360 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %359, i64 0, i64 2, !dbg !2362
  %361 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %360, i32 0, i32 1, !dbg !2363
  %362 = bitcast %union.vec64_t* %361 to %struct.uint64v1_t*, !dbg !2364
  %363 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %362, i32 0, i32 0, !dbg !2365
  %MM2 = getelementptr inbounds [1 x i64], [1 x i64]* %363, i64 0, i64 0, !dbg !2362
  %364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8, !dbg !2366
  %365 = getelementptr inbounds %struct.MMX, %struct.MMX* %364, i32 0, i32 0, !dbg !2367
  %366 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %365, i64 0, i64 3, !dbg !2368
  %367 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %366, i32 0, i32 1, !dbg !2369
  %368 = bitcast %union.vec64_t* %367 to %struct.uint64v1_t*, !dbg !2370
  %369 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %368, i32 0, i32 0, !dbg !2371
  %MM3 = getelementptr inbounds [1 x i64], [1 x i64]* %369, i64 0, i64 0, !dbg !2368
  %370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8, !dbg !2372
  %371 = getelementptr inbounds %struct.MMX, %struct.MMX* %370, i32 0, i32 0, !dbg !2373
  %372 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %371, i64 0, i64 4, !dbg !2374
  %373 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %372, i32 0, i32 1, !dbg !2375
  %374 = bitcast %union.vec64_t* %373 to %struct.uint64v1_t*, !dbg !2376
  %375 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %374, i32 0, i32 0, !dbg !2377
  %MM4 = getelementptr inbounds [1 x i64], [1 x i64]* %375, i64 0, i64 0, !dbg !2374
  %376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8, !dbg !2378
  %377 = getelementptr inbounds %struct.MMX, %struct.MMX* %376, i32 0, i32 0, !dbg !2379
  %378 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %377, i64 0, i64 5, !dbg !2380
  %379 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %378, i32 0, i32 1, !dbg !2381
  %380 = bitcast %union.vec64_t* %379 to %struct.uint64v1_t*, !dbg !2382
  %381 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %380, i32 0, i32 0, !dbg !2383
  %MM5 = getelementptr inbounds [1 x i64], [1 x i64]* %381, i64 0, i64 0, !dbg !2380
  %382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8, !dbg !2384
  %383 = getelementptr inbounds %struct.MMX, %struct.MMX* %382, i32 0, i32 0, !dbg !2385
  %384 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %383, i64 0, i64 6, !dbg !2386
  %385 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %384, i32 0, i32 1, !dbg !2387
  %386 = bitcast %union.vec64_t* %385 to %struct.uint64v1_t*, !dbg !2388
  %387 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %386, i32 0, i32 0, !dbg !2389
  %MM6 = getelementptr inbounds [1 x i64], [1 x i64]* %387, i64 0, i64 0, !dbg !2386
  %388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8, !dbg !2390
  %389 = getelementptr inbounds %struct.MMX, %struct.MMX* %388, i32 0, i32 0, !dbg !2391
  %390 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %389, i64 0, i64 7, !dbg !2392
  %391 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %390, i32 0, i32 1, !dbg !2393
  %392 = bitcast %union.vec64_t* %391 to %struct.uint64v1_t*, !dbg !2394
  %393 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %392, i32 0, i32 0, !dbg !2395
  %MM7 = getelementptr inbounds [1 x i64], [1 x i64]* %393, i64 0, i64 0, !dbg !2392
  %394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2, !dbg !2396
  %AF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %394, i32 0, i32 5, !dbg !2397
  %395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2, !dbg !2398
  %CF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %395, i32 0, i32 1, !dbg !2399
  %396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2, !dbg !2400
  %DF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %396, i32 0, i32 11, !dbg !2401
  %397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2, !dbg !2402
  %OF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %397, i32 0, i32 13, !dbg !2403
  %398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2, !dbg !2404
  %PF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %398, i32 0, i32 3, !dbg !2405
  %399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2, !dbg !2406
  %SF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %399, i32 0, i32 9, !dbg !2407
  %400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2, !dbg !2408
  %ZF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %400, i32 0, i32 7, !dbg !2409
  store i64* @DR0, i64** %_DR0, align 8, !dbg !2410
  store i64* @DR1, i64** %_DR1, align 8, !dbg !2411
  store i64* @DR2, i64** %_DR2, align 8, !dbg !2412
  store i64* @DR3, i64** %_DR3, align 8, !dbg !2413
  store i64* @DR4, i64** %_DR4, align 8, !dbg !2414
  store i64* @DR5, i64** %_DR5, align 8, !dbg !2415
  store i64* @DR6, i64** %_DR6, align 8, !dbg !2416
  store i64* @DR7, i64** %_DR7, align 8, !dbg !2417
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0, align 8, !dbg !2418
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1, align 8, !dbg !2419
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2, align 8, !dbg !2420
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3, align 8, !dbg !2421
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4, align 8, !dbg !2422
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8, align 8, !dbg !2423
  ret %struct.Memory* %2, !dbg !2424
}

; Function Attrs: noduplicate noinline nounwind optnone
define void @__remill_intrinsics() local_unnamed_addr #3 !dbg !2425 {
  ret void, !dbg !2427
}

; Function Attrs: noduplicate noinline nounwind optnone
declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr #4

; Function Attrs: noduplicate noinline nounwind optnone
declare %struct.Memory* @__remill_jump(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr #4

; Function Attrs: noduplicate noinline nounwind optnone
declare %struct.Memory* @__remill_missing_block(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr #4

; Function Attrs: noinline
declare extern_weak x86_64_sysvcc i64 @__libc_start_main(i64, i64, i64, i64, i64, i64, i64, i64) #5

; Function Attrs: noinline
declare extern_weak x86_64_sysvcc i64 @__gmon_start__() #5

; Function Attrs: noinline
declare extern_weak x86_64_sysvcc i64 @printf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #5

; Function Attrs: noinline nounwind
define %struct.Memory* @sub_4006bf(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) local_unnamed_addr #6 {
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %PC, align 8
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %11 = bitcast i64* %RAX to i32**
  br label %block_4006bf

block_40087a:                                     ; preds = %block_4006bf
  %12 = add i64 %129, -12
  store i64 4196481, i64* %PC, align 8
  %13 = inttoptr i64 %12 to i32*
  store i32 16, i32* %13, align 4
  %14 = load i64, i64* %PC, align 8
  %15 = tail call %struct.Memory* @sub_400881(%struct.State* nonnull %0, i64 %14, %struct.Memory* %2)
  ret %struct.Memory* %15

block_4005f0:                                     ; preds = %block_4006bf
  %16 = add i64 %129, -12
  store i64 4195831, i64* %PC, align 8
  %17 = inttoptr i64 %16 to i32*
  store i32 3, i32* %17, align 4
  %18 = load i64, i64* %PC, align 8
  %19 = tail call %struct.Memory* @sub_4005f7(%struct.State* nonnull %0, i64 %18, %struct.Memory* %2)
  ret %struct.Memory* %19

block_400a6e:                                     ; preds = %block_4006bf
  %20 = add i64 %129, -12
  store i64 4196981, i64* %PC, align 8
  %21 = inttoptr i64 %20 to i32*
  store i32 26, i32* %21, align 4
  %22 = load i64, i64* %PC, align 8
  %23 = tail call %struct.Memory* @sub_400a75(%struct.State* nonnull %0, i64 %22, %struct.Memory* %2)
  ret %struct.Memory* %23

block_4006ea:                                     ; preds = %block_4006bf
  %24 = add i64 %129, -12
  store i64 4196081, i64* %PC, align 8
  %25 = inttoptr i64 %24 to i32*
  store i32 8, i32* %25, align 4
  %26 = load i64, i64* %PC, align 8
  %27 = tail call %struct.Memory* @sub_4006f1(%struct.State* nonnull %0, i64 %26, %struct.Memory* %2)
  ret %struct.Memory* %27

block_400b68:                                     ; preds = %block_4006bf
  %28 = add i64 %129, -12
  store i64 4197231, i64* %PC, align 8
  %29 = inttoptr i64 %28 to i32*
  store i32 31, i32* %29, align 4
  %30 = load i64, i64* %PC, align 8
  %31 = tail call %struct.Memory* @sub_400b6f(%struct.State* nonnull %0, i64 %30, %struct.Memory* %2)
  ret %struct.Memory* %31

block_4007e4:                                     ; preds = %block_4006bf
  %32 = add i64 %129, -12
  store i64 4196331, i64* %PC, align 8
  %33 = inttoptr i64 %32 to i32*
  store i32 13, i32* %33, align 4
  %34 = load i64, i64* %PC, align 8
  %35 = tail call %struct.Memory* @sub_4007eb(%struct.State* nonnull %0, i64 %34, %struct.Memory* %2)
  ret %struct.Memory* %35

block_4008de:                                     ; preds = %block_4006bf
  %36 = add i64 %129, -12
  store i64 4196581, i64* %PC, align 8
  %37 = inttoptr i64 %36 to i32*
  store i32 18, i32* %37, align 4
  %38 = load i64, i64* %PC, align 8
  %39 = tail call %struct.Memory* @sub_4008e5(%struct.State* nonnull %0, i64 %38, %struct.Memory* %2)
  ret %struct.Memory* %39

block_4009d8:                                     ; preds = %block_4006bf
  %40 = add i64 %129, -12
  store i64 4196831, i64* %PC, align 8
  %41 = inttoptr i64 %40 to i32*
  store i32 23, i32* %41, align 4
  %42 = load i64, i64* %PC, align 8
  %43 = tail call %struct.Memory* @sub_4009df(%struct.State* nonnull %0, i64 %42, %struct.Memory* %2)
  ret %struct.Memory* %43

block_400654:                                     ; preds = %block_4006bf
  %44 = add i64 %129, -12
  store i64 4195931, i64* %PC, align 8
  %45 = inttoptr i64 %44 to i32*
  store i32 5, i32* %45, align 4
  %46 = load i64, i64* %PC, align 8
  %47 = tail call %struct.Memory* @sub_40065b(%struct.State* nonnull %0, i64 %46, %struct.Memory* %2)
  ret %struct.Memory* %47

block_400579:                                     ; preds = %block_4006bf
  %48 = add i64 %129, -12
  store i64 4195712, i64* %PC, align 8
  %49 = inttoptr i64 %48 to i32*
  store i32 0, i32* %49, align 4
  %50 = load i64, i64* %PC, align 8
  %51 = tail call %struct.Memory* @sub_400580(%struct.State* nonnull %0, i64 %50, %struct.Memory* %2)
  ret %struct.Memory* %51

block_400ad2:                                     ; preds = %block_4006bf
  %52 = add i64 %129, -12
  store i64 4197081, i64* %PC, align 8
  %53 = inttoptr i64 %52 to i32*
  store i32 28, i32* %53, align 4
  %54 = load i64, i64* %PC, align 8
  %55 = tail call %struct.Memory* @sub_400ad9(%struct.State* nonnull %0, i64 %54, %struct.Memory* %2)
  ret %struct.Memory* %55

block_40074e:                                     ; preds = %block_4006bf
  %56 = add i64 %129, -12
  store i64 4196181, i64* %PC, align 8
  %57 = inttoptr i64 %56 to i32*
  store i32 10, i32* %57, align 4
  %58 = load i64, i64* %PC, align 8
  %59 = tail call %struct.Memory* @sub_400755(%struct.State* nonnull %0, i64 %58, %struct.Memory* %2)
  ret %struct.Memory* %59

block_400848:                                     ; preds = %block_4006bf
  %60 = add i64 %129, -12
  store i64 4196431, i64* %PC, align 8
  %61 = inttoptr i64 %60 to i32*
  store i32 15, i32* %61, align 4
  %62 = load i64, i64* %PC, align 8
  %63 = tail call %struct.Memory* @sub_40084f(%struct.State* nonnull %0, i64 %62, %struct.Memory* %2)
  ret %struct.Memory* %63

block_400974:                                     ; preds = %block_4006bf
  %64 = add i64 %129, -12
  store i64 4196731, i64* %PC, align 8
  %65 = inttoptr i64 %64 to i32*
  store i32 21, i32* %65, align 4
  %66 = load i64, i64* %PC, align 8
  %67 = tail call %struct.Memory* @sub_40097b(%struct.State* nonnull %0, i64 %66, %struct.Memory* %2)
  ret %struct.Memory* %67

block_400942:                                     ; preds = %block_4006bf
  %68 = add i64 %129, -12
  store i64 4196681, i64* %PC, align 8
  %69 = inttoptr i64 %68 to i32*
  store i32 20, i32* %69, align 4
  %70 = load i64, i64* %PC, align 8
  %71 = tail call %struct.Memory* @sub_400949(%struct.State* nonnull %0, i64 %70, %struct.Memory* %2)
  ret %struct.Memory* %71

block_4006bf:                                     ; preds = %block_4006b8, %3
  %72 = phi i64 [ %.pre, %block_4006b8 ], [ %1, %3 ]
  %73 = load i64, i64* %RBP, align 8
  %74 = add i64 %73, -12
  %75 = add i64 %72, 3
  store i64 %75, i64* %PC, align 8
  %76 = inttoptr i64 %74 to i32*
  %77 = load i32, i32* %76, align 4
  %78 = zext i32 %77 to i64
  store i64 %78, i64* %RDI, align 8, !tbaa !2428
  %79 = add i64 %72, -431
  %80 = add i64 %72, 8
  %81 = load i64, i64* %4, align 8, !tbaa !2428
  %82 = add i64 %81, -8
  %83 = inttoptr i64 %82 to i64*
  store i64 %80, i64* %83, align 8
  store i64 %82, i64* %4, align 8, !tbaa !2428
  store i64 %79, i64* %PC, align 8, !tbaa !2428
  %84 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %79, %struct.Memory* %2)
  %85 = load i64, i64* %RBP, align 8
  %86 = add i64 %85, -8
  %87 = load i64, i64* %PC, align 8
  %88 = add i64 %87, 4
  store i64 %88, i64* %PC, align 8
  %89 = inttoptr i64 %86 to i64*
  %90 = load i64, i64* %89, align 8
  store i64 %90, i64* %RAX, align 8, !tbaa !2428
  %91 = add i64 %90, 4
  store i64 %91, i64* %RCX, align 8, !tbaa !2428
  %92 = icmp ugt i64 %90, -5
  %93 = zext i1 %92 to i8
  store i8 %93, i8* %5, align 1, !tbaa !2432
  %94 = trunc i64 %91 to i32
  %95 = and i32 %94, 255
  %96 = tail call i32 @llvm.ctpop.i32(i32 %95) #9
  %97 = trunc i32 %96 to i8
  %98 = and i8 %97, 1
  %99 = xor i8 %98, 1
  store i8 %99, i8* %6, align 1, !tbaa !2446
  %100 = xor i64 %91, %90
  %101 = lshr i64 %100, 4
  %102 = trunc i64 %101 to i8
  %103 = and i8 %102, 1
  store i8 %103, i8* %7, align 1, !tbaa !2447
  %104 = icmp eq i64 %91, 0
  %105 = zext i1 %104 to i8
  store i8 %105, i8* %8, align 1, !tbaa !2448
  %106 = lshr i64 %91, 63
  %107 = trunc i64 %106 to i8
  store i8 %107, i8* %9, align 1, !tbaa !2449
  %108 = lshr i64 %90, 63
  %109 = xor i64 %106, %108
  %110 = add nuw nsw i64 %109, %106
  %111 = icmp eq i64 %110, 2
  %112 = zext i1 %111 to i8
  store i8 %112, i8* %10, align 1, !tbaa !2450
  %113 = add i64 %87, 15
  store i64 %113, i64* %PC, align 8
  store i64 %91, i64* %89, align 8
  %114 = load i32*, i32** %11, align 8
  %115 = load i64, i64* %PC, align 8
  %116 = add i64 %115, 3
  store i64 %116, i64* %PC, align 8
  %117 = load i32, i32* %114, align 4
  %118 = sext i32 %117 to i64
  store i64 %118, i64* %RAX, align 8, !tbaa !2428
  %119 = shl nsw i64 %118, 3
  %120 = add i64 %119, add (i64 ptrtoint (%seg_602020__data_type* @seg_602020__data to i64), i64 16)
  %121 = add i64 %115, 11
  store i64 %121, i64* %PC, align 8
  %122 = inttoptr i64 %120 to i64*
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %RAX, align 8, !tbaa !2428
  %124 = load i64, i64* %RBP, align 8
  %125 = add i64 %124, -40
  %126 = add i64 %115, 15
  store i64 %126, i64* %PC, align 8
  %127 = inttoptr i64 %125 to i64*
  store i64 %123, i64* %127, align 8
  %128 = load i64, i64* %PC, align 8
  %129 = load i64, i64* %RBP, align 8
  %130 = add i64 %129, -40
  %131 = add i64 %128, -347
  store i64 %131, i64* %PC, align 8
  %132 = inttoptr i64 %130 to i64*
  %133 = load i64, i64* %132, align 8
  store i64 %133, i64* %RAX, align 8, !tbaa !2428
  store i64 %133, i64* %PC, align 8, !tbaa !2428
  switch i64 %133, label %200 [
    i64 4196224, label %block_400780
    i64 4197124, label %block_400b04
    i64 4195974, label %block_400686
    i64 4196874, label %block_400a0a
    i64 4196624, label %block_400910
    i64 4196374, label %block_400816
    i64 4196124, label %block_40071c
    i64 4197024, label %block_400aa0
    i64 4195874, label %block_400622
    i64 4195774, label %block_4005be
    i64 4196924, label %block_400a3c
    i64 4196574, label %block_4008de
    i64 4196324, label %block_4007e4
    i64 4197224, label %block_400b68
    i64 4196074, label %block_4006ea
    i64 4195924, label %block_400654
    i64 4197074, label %block_400ad2
    i64 4196474, label %block_40087a
    i64 4196824, label %block_4009d8
    i64 4195724, label %block_40058c
    i64 4195824, label %block_4005f0
    i64 4195705, label %block_400579
    i64 4196974, label %block_400a6e
    i64 4196174, label %block_40074e
    i64 4196424, label %block_400848
    i64 4196724, label %block_400974
    i64 4196674, label %block_400942
    i64 4196024, label %block_4006b8
    i64 4197174, label %block_400b36
    i64 4196274, label %block_4007b2
    i64 4196524, label %block_4008ac
    i64 4196774, label %block_4009a6
  ]

block_4005be:                                     ; preds = %block_4006bf
  %134 = add i64 %129, -12
  store i64 4195781, i64* %PC, align 8
  %135 = inttoptr i64 %134 to i32*
  store i32 2, i32* %135, align 4
  %136 = load i64, i64* %PC, align 8
  %137 = tail call %struct.Memory* @sub_4005c5(%struct.State* nonnull %0, i64 %136, %struct.Memory* %2)
  ret %struct.Memory* %137

block_400a3c:                                     ; preds = %block_4006bf
  %138 = add i64 %129, -12
  store i64 4196931, i64* %PC, align 8
  %139 = inttoptr i64 %138 to i32*
  store i32 25, i32* %139, align 4
  %140 = load i64, i64* %PC, align 8
  %141 = tail call %struct.Memory* @sub_400a43(%struct.State* nonnull %0, i64 %140, %struct.Memory* %2)
  ret %struct.Memory* %141

block_4006b8:                                     ; preds = %block_4006bf
  %142 = add i64 %129, -12
  store i64 4196031, i64* %PC, align 8
  %143 = inttoptr i64 %142 to i32*
  store i32 7, i32* %143, align 4
  %.pre = load i64, i64* %PC, align 8
  br label %block_4006bf

block_400b36:                                     ; preds = %block_4006bf
  %144 = add i64 %129, -12
  store i64 4197181, i64* %PC, align 8
  %145 = inttoptr i64 %144 to i32*
  store i32 30, i32* %145, align 4
  %146 = load i64, i64* %PC, align 8
  %147 = tail call %struct.Memory* @sub_400b3d(%struct.State* nonnull %0, i64 %146, %struct.Memory* %2)
  ret %struct.Memory* %147

block_4007b2:                                     ; preds = %block_4006bf
  %148 = add i64 %129, -12
  store i64 4196281, i64* %PC, align 8
  %149 = inttoptr i64 %148 to i32*
  store i32 12, i32* %149, align 4
  %150 = load i64, i64* %PC, align 8
  %151 = tail call %struct.Memory* @sub_4007b9(%struct.State* nonnull %0, i64 %150, %struct.Memory* %2)
  ret %struct.Memory* %151

block_4008ac:                                     ; preds = %block_4006bf
  %152 = add i64 %129, -12
  store i64 4196531, i64* %PC, align 8
  %153 = inttoptr i64 %152 to i32*
  store i32 17, i32* %153, align 4
  %154 = load i64, i64* %PC, align 8
  %155 = tail call %struct.Memory* @sub_4008b3(%struct.State* nonnull %0, i64 %154, %struct.Memory* %2)
  ret %struct.Memory* %155

block_4009a6:                                     ; preds = %block_4006bf
  %156 = add i64 %129, -12
  store i64 4196781, i64* %PC, align 8
  %157 = inttoptr i64 %156 to i32*
  store i32 22, i32* %157, align 4
  %158 = load i64, i64* %PC, align 8
  %159 = tail call %struct.Memory* @sub_4009ad(%struct.State* nonnull %0, i64 %158, %struct.Memory* %2)
  ret %struct.Memory* %159

block_400622:                                     ; preds = %block_4006bf
  %160 = add i64 %129, -12
  store i64 4195881, i64* %PC, align 8
  %161 = inttoptr i64 %160 to i32*
  store i32 4, i32* %161, align 4
  %162 = load i64, i64* %PC, align 8
  %163 = tail call %struct.Memory* @sub_400629(%struct.State* nonnull %0, i64 %162, %struct.Memory* %2)
  ret %struct.Memory* %163

block_400aa0:                                     ; preds = %block_4006bf
  %164 = add i64 %129, -12
  store i64 4197031, i64* %PC, align 8
  %165 = inttoptr i64 %164 to i32*
  store i32 27, i32* %165, align 4
  %166 = load i64, i64* %PC, align 8
  %167 = tail call %struct.Memory* @sub_400aa7(%struct.State* nonnull %0, i64 %166, %struct.Memory* %2)
  ret %struct.Memory* %167

block_40071c:                                     ; preds = %block_4006bf
  %168 = add i64 %129, -12
  store i64 4196131, i64* %PC, align 8
  %169 = inttoptr i64 %168 to i32*
  store i32 9, i32* %169, align 4
  %170 = load i64, i64* %PC, align 8
  %171 = tail call %struct.Memory* @sub_400723(%struct.State* nonnull %0, i64 %170, %struct.Memory* %2)
  ret %struct.Memory* %171

block_400816:                                     ; preds = %block_4006bf
  %172 = add i64 %129, -12
  store i64 4196381, i64* %PC, align 8
  %173 = inttoptr i64 %172 to i32*
  store i32 14, i32* %173, align 4
  %174 = load i64, i64* %PC, align 8
  %175 = tail call %struct.Memory* @sub_40081d(%struct.State* nonnull %0, i64 %174, %struct.Memory* %2)
  ret %struct.Memory* %175

block_400910:                                     ; preds = %block_4006bf
  %176 = add i64 %129, -12
  store i64 4196631, i64* %PC, align 8
  %177 = inttoptr i64 %176 to i32*
  store i32 19, i32* %177, align 4
  %178 = load i64, i64* %PC, align 8
  %179 = tail call %struct.Memory* @sub_400917(%struct.State* nonnull %0, i64 %178, %struct.Memory* %2)
  ret %struct.Memory* %179

block_40058c:                                     ; preds = %block_4006bf
  %180 = add i64 %129, -12
  store i64 4195731, i64* %PC, align 8
  %181 = inttoptr i64 %180 to i32*
  store i32 1, i32* %181, align 4
  %182 = load i64, i64* %PC, align 8
  %183 = tail call %struct.Memory* @sub_400593(%struct.State* nonnull %0, i64 %182, %struct.Memory* %2)
  ret %struct.Memory* %183

block_400a0a:                                     ; preds = %block_4006bf
  %184 = add i64 %129, -12
  store i64 4196881, i64* %PC, align 8
  %185 = inttoptr i64 %184 to i32*
  store i32 24, i32* %185, align 4
  %186 = load i64, i64* %PC, align 8
  %187 = tail call %struct.Memory* @sub_400a11(%struct.State* nonnull %0, i64 %186, %struct.Memory* %2)
  ret %struct.Memory* %187

block_400686:                                     ; preds = %block_4006bf
  %188 = add i64 %129, -12
  store i64 4195981, i64* %PC, align 8
  %189 = inttoptr i64 %188 to i32*
  store i32 6, i32* %189, align 4
  %190 = load i64, i64* %PC, align 8
  %191 = tail call %struct.Memory* @sub_40068d(%struct.State* nonnull %0, i64 %190, %struct.Memory* %2)
  ret %struct.Memory* %191

block_400b04:                                     ; preds = %block_4006bf
  %192 = add i64 %129, -12
  store i64 4197131, i64* %PC, align 8
  %193 = inttoptr i64 %192 to i32*
  store i32 29, i32* %193, align 4
  %194 = load i64, i64* %PC, align 8
  %195 = tail call %struct.Memory* @sub_400b0b(%struct.State* nonnull %0, i64 %194, %struct.Memory* %2)
  ret %struct.Memory* %195

block_400780:                                     ; preds = %block_4006bf
  %196 = add i64 %129, -12
  store i64 4196231, i64* %PC, align 8
  %197 = inttoptr i64 %196 to i32*
  store i32 11, i32* %197, align 4
  %198 = load i64, i64* %PC, align 8
  %199 = tail call %struct.Memory* @sub_400787(%struct.State* nonnull %0, i64 %198, %struct.Memory* %2)
  ret %struct.Memory* %199

; <label>:200:                                    ; preds = %block_4006bf
  %201 = tail call %struct.Memory* @__remill_jump(%struct.State* nonnull %0, i64 %133, %struct.Memory* %2)
  ret %struct.Memory* %201
}

; Function Attrs: noinline nounwind
define %struct.Memory* @sub_40097b(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) local_unnamed_addr #6 {
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %PC, align 8
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %11 = bitcast i64* %RAX to i32**
  br label %block_40097b

block_4005f0:                                     ; preds = %block_400586
  %12 = add i64 %197, -12
  store i64 4195831, i64* %PC, align 8
  %13 = inttoptr i64 %12 to i32*
  store i32 3, i32* %13, align 4
  %14 = load i64, i64* %PC, align 8
  %15 = tail call %struct.Memory* @sub_4005f7(%struct.State* nonnull %0, i64 %14, %struct.Memory* %2)
  ret %struct.Memory* %15

block_4007e4:                                     ; preds = %block_400586
  %16 = add i64 %197, -12
  store i64 4196331, i64* %PC, align 8
  %17 = inttoptr i64 %16 to i32*
  store i32 13, i32* %17, align 4
  %18 = load i64, i64* %PC, align 8
  %19 = tail call %struct.Memory* @sub_4007eb(%struct.State* nonnull %0, i64 %18, %struct.Memory* %2)
  ret %struct.Memory* %19

block_4008de:                                     ; preds = %block_400586
  %20 = add i64 %197, -12
  store i64 4196581, i64* %PC, align 8
  %21 = inttoptr i64 %20 to i32*
  store i32 18, i32* %21, align 4
  %22 = load i64, i64* %PC, align 8
  %23 = tail call %struct.Memory* @sub_4008e5(%struct.State* nonnull %0, i64 %22, %struct.Memory* %2)
  ret %struct.Memory* %23

block_4009d8:                                     ; preds = %block_400586
  %24 = add i64 %197, -12
  store i64 4196831, i64* %PC, align 8
  %25 = inttoptr i64 %24 to i32*
  store i32 23, i32* %25, align 4
  %26 = load i64, i64* %PC, align 8
  %27 = tail call %struct.Memory* @sub_4009df(%struct.State* nonnull %0, i64 %26, %struct.Memory* %2)
  ret %struct.Memory* %27

block_400ad2:                                     ; preds = %block_400586
  %28 = add i64 %197, -12
  store i64 4197081, i64* %PC, align 8
  %29 = inttoptr i64 %28 to i32*
  store i32 28, i32* %29, align 4
  %30 = load i64, i64* %PC, align 8
  %31 = tail call %struct.Memory* @sub_400ad9(%struct.State* nonnull %0, i64 %30, %struct.Memory* %2)
  ret %struct.Memory* %31

block_4006b8:                                     ; preds = %block_400586
  %32 = add i64 %197, -12
  store i64 4196031, i64* %PC, align 8
  %33 = inttoptr i64 %32 to i32*
  store i32 7, i32* %33, align 4
  %34 = load i64, i64* %RBP, align 8
  %35 = add i64 %34, -12
  %36 = load i64, i64* %PC, align 8
  %37 = add i64 %36, 3
  store i64 %37, i64* %PC, align 8
  %38 = inttoptr i64 %35 to i32*
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i64
  store i64 %40, i64* %RDI, align 8, !tbaa !2428
  %41 = add i64 %36, -431
  br label %block_400586.backedge

block_400586.backedge:                            ; preds = %block_4006b8, %block_400b36
  %.sink128 = phi i64 [ %36, %block_4006b8 ], [ %138, %block_400b36 ]
  %.sink123 = phi i64 [ %41, %block_4006b8 ], [ %143, %block_400b36 ]
  %.sink5.be = phi i64 [ 351, %block_4006b8 ], [ 1501, %block_400b36 ]
  %42 = add i64 %.sink128, 8
  %43 = load i64, i64* %4, align 8, !tbaa !2428
  %44 = add i64 %43, -8
  %45 = inttoptr i64 %44 to i64*
  store i64 %42, i64* %45, align 8
  store i64 %44, i64* %4, align 8, !tbaa !2428
  store i64 %.sink123, i64* %PC, align 8, !tbaa !2428
  %46 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %.sink123, %struct.Memory* %2)
  br label %block_400586

block_4007b2:                                     ; preds = %block_400586
  %47 = add i64 %197, -12
  store i64 4196281, i64* %PC, align 8
  %48 = inttoptr i64 %47 to i32*
  store i32 12, i32* %48, align 4
  %49 = load i64, i64* %PC, align 8
  %50 = tail call %struct.Memory* @sub_4007b9(%struct.State* nonnull %0, i64 %49, %struct.Memory* %2)
  ret %struct.Memory* %50

block_4008ac:                                     ; preds = %block_400586
  %51 = add i64 %197, -12
  store i64 4196531, i64* %PC, align 8
  %52 = inttoptr i64 %51 to i32*
  store i32 17, i32* %52, align 4
  %53 = load i64, i64* %PC, align 8
  %54 = tail call %struct.Memory* @sub_4008b3(%struct.State* nonnull %0, i64 %53, %struct.Memory* %2)
  ret %struct.Memory* %54

block_4009a6:                                     ; preds = %block_400586
  %55 = add i64 %197, -12
  store i64 4196781, i64* %PC, align 8
  %56 = inttoptr i64 %55 to i32*
  store i32 22, i32* %56, align 4
  %57 = load i64, i64* %PC, align 8
  %58 = tail call %struct.Memory* @sub_4009ad(%struct.State* nonnull %0, i64 %57, %struct.Memory* %2)
  ret %struct.Memory* %58

block_400aa0:                                     ; preds = %block_400586
  %59 = add i64 %197, -12
  store i64 4197031, i64* %PC, align 8
  %60 = inttoptr i64 %59 to i32*
  store i32 27, i32* %60, align 4
  %61 = load i64, i64* %PC, align 8
  %62 = tail call %struct.Memory* @sub_400aa7(%struct.State* nonnull %0, i64 %61, %struct.Memory* %2)
  ret %struct.Memory* %62

block_40058c:                                     ; preds = %block_400586
  %63 = add i64 %197, -12
  store i64 4195731, i64* %PC, align 8
  %64 = inttoptr i64 %63 to i32*
  store i32 1, i32* %64, align 4
  %65 = load i64, i64* %PC, align 8
  %66 = tail call %struct.Memory* @sub_400593(%struct.State* nonnull %0, i64 %65, %struct.Memory* %2)
  ret %struct.Memory* %66

block_400686:                                     ; preds = %block_400586
  %67 = add i64 %197, -12
  store i64 4195981, i64* %PC, align 8
  %68 = inttoptr i64 %67 to i32*
  store i32 6, i32* %68, align 4
  %69 = load i64, i64* %PC, align 8
  %70 = tail call %struct.Memory* @sub_40068d(%struct.State* nonnull %0, i64 %69, %struct.Memory* %2)
  ret %struct.Memory* %70

block_40097b:                                     ; preds = %block_400974, %3
  %71 = phi i64 [ %.pre, %block_400974 ], [ %1, %3 ]
  %72 = load i64, i64* %RBP, align 8
  %73 = add i64 %72, -12
  %74 = add i64 %71, 3
  store i64 %74, i64* %PC, align 8
  %75 = inttoptr i64 %73 to i32*
  %76 = load i32, i32* %75, align 4
  %77 = zext i32 %76 to i64
  store i64 %77, i64* %RDI, align 8, !tbaa !2428
  %78 = add i64 %71, -1131
  %79 = add i64 %71, 8
  %80 = load i64, i64* %4, align 8, !tbaa !2428
  %81 = add i64 %80, -8
  %82 = inttoptr i64 %81 to i64*
  store i64 %79, i64* %82, align 8
  store i64 %81, i64* %4, align 8, !tbaa !2428
  store i64 %78, i64* %PC, align 8, !tbaa !2428
  %83 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %78, %struct.Memory* %2)
  br label %block_400586

block_40087a:                                     ; preds = %block_400586
  %84 = add i64 %197, -12
  store i64 4196481, i64* %PC, align 8
  %85 = inttoptr i64 %84 to i32*
  store i32 16, i32* %85, align 4
  %86 = load i64, i64* %PC, align 8
  %87 = tail call %struct.Memory* @sub_400881(%struct.State* nonnull %0, i64 %86, %struct.Memory* %2)
  ret %struct.Memory* %87

block_400974:                                     ; preds = %block_400586
  %88 = add i64 %197, -12
  store i64 4196731, i64* %PC, align 8
  %89 = inttoptr i64 %88 to i32*
  store i32 21, i32* %89, align 4
  %.pre = load i64, i64* %PC, align 8
  br label %block_40097b

block_400a6e:                                     ; preds = %block_400586
  %90 = add i64 %197, -12
  store i64 4196981, i64* %PC, align 8
  %91 = inttoptr i64 %90 to i32*
  store i32 26, i32* %91, align 4
  %92 = load i64, i64* %PC, align 8
  %93 = tail call %struct.Memory* @sub_400a75(%struct.State* nonnull %0, i64 %92, %struct.Memory* %2)
  ret %struct.Memory* %93

block_400780:                                     ; preds = %block_400586
  %94 = add i64 %197, -12
  store i64 4196231, i64* %PC, align 8
  %95 = inttoptr i64 %94 to i32*
  store i32 11, i32* %95, align 4
  %96 = load i64, i64* %PC, align 8
  %97 = tail call %struct.Memory* @sub_400787(%struct.State* nonnull %0, i64 %96, %struct.Memory* %2)
  ret %struct.Memory* %97

block_400b68:                                     ; preds = %block_400586
  %98 = add i64 %197, -12
  store i64 4197231, i64* %PC, align 8
  %99 = inttoptr i64 %98 to i32*
  store i32 31, i32* %99, align 4
  %100 = load i64, i64* %PC, align 8
  %101 = tail call %struct.Memory* @sub_400b6f(%struct.State* nonnull %0, i64 %100, %struct.Memory* %2)
  ret %struct.Memory* %101

block_400654:                                     ; preds = %block_400586
  %102 = add i64 %197, -12
  store i64 4195931, i64* %PC, align 8
  %103 = inttoptr i64 %102 to i32*
  store i32 5, i32* %103, align 4
  %104 = load i64, i64* %PC, align 8
  %105 = tail call %struct.Memory* @sub_40065b(%struct.State* nonnull %0, i64 %104, %struct.Memory* %2)
  ret %struct.Memory* %105

block_40074e:                                     ; preds = %block_400586
  %106 = add i64 %197, -12
  store i64 4196181, i64* %PC, align 8
  %107 = inttoptr i64 %106 to i32*
  store i32 10, i32* %107, align 4
  %108 = load i64, i64* %PC, align 8
  %109 = tail call %struct.Memory* @sub_400755(%struct.State* nonnull %0, i64 %108, %struct.Memory* %2)
  ret %struct.Memory* %109

block_400848:                                     ; preds = %block_400586
  %110 = add i64 %197, -12
  store i64 4196431, i64* %PC, align 8
  %111 = inttoptr i64 %110 to i32*
  store i32 15, i32* %111, align 4
  %112 = load i64, i64* %PC, align 8
  %113 = tail call %struct.Memory* @sub_40084f(%struct.State* nonnull %0, i64 %112, %struct.Memory* %2)
  ret %struct.Memory* %113

block_4005be:                                     ; preds = %block_400586
  %114 = add i64 %197, -12
  store i64 4195781, i64* %PC, align 8
  %115 = inttoptr i64 %114 to i32*
  store i32 2, i32* %115, align 4
  %116 = load i64, i64* %PC, align 8
  %117 = tail call %struct.Memory* @sub_4005c5(%struct.State* nonnull %0, i64 %116, %struct.Memory* %2)
  ret %struct.Memory* %117

block_400942:                                     ; preds = %block_400586
  %118 = add i64 %197, -12
  store i64 4196681, i64* %PC, align 8
  %119 = inttoptr i64 %118 to i32*
  store i32 20, i32* %119, align 4
  %120 = load i64, i64* %PC, align 8
  %121 = tail call %struct.Memory* @sub_400949(%struct.State* nonnull %0, i64 %120, %struct.Memory* %2)
  ret %struct.Memory* %121

block_4006ea:                                     ; preds = %block_400586
  %122 = add i64 %197, -12
  store i64 4196081, i64* %PC, align 8
  %123 = inttoptr i64 %122 to i32*
  store i32 8, i32* %123, align 4
  %124 = load i64, i64* %PC, align 8
  %125 = tail call %struct.Memory* @sub_4006f1(%struct.State* nonnull %0, i64 %124, %struct.Memory* %2)
  ret %struct.Memory* %125

block_400579:                                     ; preds = %block_400586
  %126 = add i64 %197, -12
  store i64 4195712, i64* %PC, align 8
  %127 = inttoptr i64 %126 to i32*
  store i32 0, i32* %127, align 4
  %128 = load i64, i64* %PC, align 8
  %129 = tail call %struct.Memory* @sub_400580(%struct.State* nonnull %0, i64 %128, %struct.Memory* %2)
  ret %struct.Memory* %129

block_400a3c:                                     ; preds = %block_400586
  %130 = add i64 %197, -12
  store i64 4196931, i64* %PC, align 8
  %131 = inttoptr i64 %130 to i32*
  store i32 25, i32* %131, align 4
  %132 = load i64, i64* %PC, align 8
  %133 = tail call %struct.Memory* @sub_400a43(%struct.State* nonnull %0, i64 %132, %struct.Memory* %2)
  ret %struct.Memory* %133

block_400b36:                                     ; preds = %block_400586
  %134 = add i64 %197, -12
  store i64 4197181, i64* %PC, align 8
  %135 = inttoptr i64 %134 to i32*
  store i32 30, i32* %135, align 4
  %136 = load i64, i64* %RBP, align 8
  %137 = add i64 %136, -12
  %138 = load i64, i64* %PC, align 8
  %139 = add i64 %138, 3
  store i64 %139, i64* %PC, align 8
  %140 = inttoptr i64 %137 to i32*
  %141 = load i32, i32* %140, align 4
  %142 = zext i32 %141 to i64
  store i64 %142, i64* %RDI, align 8, !tbaa !2428
  %143 = add i64 %138, -1581
  br label %block_400586.backedge

block_400622:                                     ; preds = %block_400586
  %144 = add i64 %197, -12
  store i64 4195881, i64* %PC, align 8
  %145 = inttoptr i64 %144 to i32*
  store i32 4, i32* %145, align 4
  %146 = load i64, i64* %PC, align 8
  %147 = tail call %struct.Memory* @sub_400629(%struct.State* nonnull %0, i64 %146, %struct.Memory* %2)
  ret %struct.Memory* %147

block_40071c:                                     ; preds = %block_400586
  %148 = add i64 %197, -12
  store i64 4196131, i64* %PC, align 8
  %149 = inttoptr i64 %148 to i32*
  store i32 9, i32* %149, align 4
  %150 = load i64, i64* %PC, align 8
  %151 = tail call %struct.Memory* @sub_400723(%struct.State* nonnull %0, i64 %150, %struct.Memory* %2)
  ret %struct.Memory* %151

block_400586:                                     ; preds = %block_400586.backedge, %block_40097b
  %.sink5 = phi i64 [ 1051, %block_40097b ], [ %.sink5.be, %block_400586.backedge ]
  %152 = load i64, i64* %RBP, align 8
  %153 = add i64 %152, -8
  %154 = load i64, i64* %PC, align 8
  %155 = add i64 %154, 4
  store i64 %155, i64* %PC, align 8
  %156 = inttoptr i64 %153 to i64*
  %157 = load i64, i64* %156, align 8
  store i64 %157, i64* %RAX, align 8, !tbaa !2428
  %158 = add i64 %157, 4
  store i64 %158, i64* %RCX, align 8, !tbaa !2428
  %159 = icmp ugt i64 %157, -5
  %160 = zext i1 %159 to i8
  store i8 %160, i8* %5, align 1, !tbaa !2432
  %161 = trunc i64 %158 to i32
  %162 = and i32 %161, 255
  %163 = tail call i32 @llvm.ctpop.i32(i32 %162) #9
  %164 = trunc i32 %163 to i8
  %165 = and i8 %164, 1
  %166 = xor i8 %165, 1
  store i8 %166, i8* %6, align 1, !tbaa !2446
  %167 = xor i64 %158, %157
  %168 = lshr i64 %167, 4
  %169 = trunc i64 %168 to i8
  %170 = and i8 %169, 1
  store i8 %170, i8* %7, align 1, !tbaa !2447
  %171 = icmp eq i64 %158, 0
  %172 = zext i1 %171 to i8
  store i8 %172, i8* %8, align 1, !tbaa !2448
  %173 = lshr i64 %158, 63
  %174 = trunc i64 %173 to i8
  store i8 %174, i8* %9, align 1, !tbaa !2449
  %175 = lshr i64 %157, 63
  %176 = xor i64 %173, %175
  %177 = add nuw nsw i64 %176, %173
  %178 = icmp eq i64 %177, 2
  %179 = zext i1 %178 to i8
  store i8 %179, i8* %10, align 1, !tbaa !2450
  %180 = add i64 %154, 15
  store i64 %180, i64* %PC, align 8
  store i64 %158, i64* %156, align 8
  %181 = load i32*, i32** %11, align 8
  %182 = load i64, i64* %PC, align 8
  %183 = add i64 %182, 3
  store i64 %183, i64* %PC, align 8
  %184 = load i32, i32* %181, align 4
  %185 = sext i32 %184 to i64
  store i64 %185, i64* %RAX, align 8, !tbaa !2428
  %186 = shl nsw i64 %185, 3
  %187 = add i64 %186, add (i64 ptrtoint (%seg_602020__data_type* @seg_602020__data to i64), i64 16)
  %188 = add i64 %182, 11
  store i64 %188, i64* %PC, align 8
  %189 = inttoptr i64 %187 to i64*
  %190 = load i64, i64* %189, align 8
  store i64 %190, i64* %RAX, align 8, !tbaa !2428
  %191 = load i64, i64* %RBP, align 8
  %192 = add i64 %191, -40
  %193 = add i64 %182, 15
  store i64 %193, i64* %PC, align 8
  %194 = inttoptr i64 %192 to i64*
  store i64 %190, i64* %194, align 8
  %195 = load i64, i64* %PC, align 8
  %196 = sub i64 %195, %.sink5
  %197 = load i64, i64* %RBP, align 8
  %198 = add i64 %197, -40
  %199 = add i64 %196, 4
  store i64 %199, i64* %PC, align 8
  %200 = inttoptr i64 %198 to i64*
  %201 = load i64, i64* %200, align 8
  store i64 %201, i64* %RAX, align 8, !tbaa !2428
  store i64 %201, i64* %PC, align 8, !tbaa !2428
  switch i64 %201, label %218 [
    i64 4197124, label %block_400b04
    i64 4196874, label %block_400a0a
    i64 4196624, label %block_400910
    i64 4196374, label %block_400816
    i64 4196124, label %block_40071c
    i64 4195874, label %block_400622
    i64 4197174, label %block_400b36
    i64 4196924, label %block_400a3c
    i64 4197024, label %block_400aa0
    i64 4196774, label %block_4009a6
    i64 4196524, label %block_4008ac
    i64 4197074, label %block_400ad2
    i64 4195924, label %block_400654
    i64 4195824, label %block_4005f0
    i64 4195705, label %block_400579
    i64 4196974, label %block_400a6e
    i64 4196324, label %block_4007e4
    i64 4196024, label %block_4006b8
    i64 4196574, label %block_4008de
    i64 4196274, label %block_4007b2
    i64 4195724, label %block_40058c
    i64 4196824, label %block_4009d8
    i64 4195974, label %block_400686
    i64 4196474, label %block_40087a
    i64 4196724, label %block_400974
    i64 4196224, label %block_400780
    i64 4197224, label %block_400b68
    i64 4196074, label %block_4006ea
    i64 4196174, label %block_40074e
    i64 4196424, label %block_400848
    i64 4195774, label %block_4005be
    i64 4196674, label %block_400942
  ]

block_400816:                                     ; preds = %block_400586
  %202 = add i64 %197, -12
  store i64 4196381, i64* %PC, align 8
  %203 = inttoptr i64 %202 to i32*
  store i32 14, i32* %203, align 4
  %204 = load i64, i64* %PC, align 8
  %205 = tail call %struct.Memory* @sub_40081d(%struct.State* nonnull %0, i64 %204, %struct.Memory* %2)
  ret %struct.Memory* %205

block_400910:                                     ; preds = %block_400586
  %206 = add i64 %197, -12
  store i64 4196631, i64* %PC, align 8
  %207 = inttoptr i64 %206 to i32*
  store i32 19, i32* %207, align 4
  %208 = load i64, i64* %PC, align 8
  %209 = tail call %struct.Memory* @sub_400917(%struct.State* nonnull %0, i64 %208, %struct.Memory* %2)
  ret %struct.Memory* %209

block_400a0a:                                     ; preds = %block_400586
  %210 = add i64 %197, -12
  store i64 4196881, i64* %PC, align 8
  %211 = inttoptr i64 %210 to i32*
  store i32 24, i32* %211, align 4
  %212 = load i64, i64* %PC, align 8
  %213 = tail call %struct.Memory* @sub_400a11(%struct.State* nonnull %0, i64 %212, %struct.Memory* %2)
  ret %struct.Memory* %213

block_400b04:                                     ; preds = %block_400586
  %214 = add i64 %197, -12
  store i64 4197131, i64* %PC, align 8
  %215 = inttoptr i64 %214 to i32*
  store i32 29, i32* %215, align 4
  %216 = load i64, i64* %PC, align 8
  %217 = tail call %struct.Memory* @sub_400b0b(%struct.State* nonnull %0, i64 %216, %struct.Memory* %2)
  ret %struct.Memory* %217

; <label>:218:                                    ; preds = %block_400586
  %219 = tail call %struct.Memory* @__remill_jump(%struct.State* nonnull %0, i64 %201, %struct.Memory* %2)
  ret %struct.Memory* %219
}

; Function Attrs: noinline nounwind
define %struct.Memory* @sub_4007b9(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) local_unnamed_addr #6 {
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %PC, align 8
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %11 = bitcast i64* %RAX to i32**
  br label %block_4007b9

block_4005f0:                                     ; preds = %block_400586
  %12 = add i64 %203, -12
  store i64 4195831, i64* %PC, align 8
  %13 = inttoptr i64 %12 to i32*
  store i32 3, i32* %13, align 4
  %14 = load i64, i64* %PC, align 8
  %15 = tail call %struct.Memory* @sub_4005f7(%struct.State* nonnull %0, i64 %14, %struct.Memory* %2)
  ret %struct.Memory* %15

block_4007e4:                                     ; preds = %block_400586
  %16 = add i64 %203, -12
  store i64 4196331, i64* %PC, align 8
  %17 = inttoptr i64 %16 to i32*
  store i32 13, i32* %17, align 4
  %18 = load i64, i64* %PC, align 8
  %19 = tail call %struct.Memory* @sub_4007eb(%struct.State* nonnull %0, i64 %18, %struct.Memory* %2)
  ret %struct.Memory* %19

block_4008de:                                     ; preds = %block_400586
  %20 = add i64 %203, -12
  store i64 4196581, i64* %PC, align 8
  %21 = inttoptr i64 %20 to i32*
  store i32 18, i32* %21, align 4
  %22 = load i64, i64* %PC, align 8
  %23 = tail call %struct.Memory* @sub_4008e5(%struct.State* nonnull %0, i64 %22, %struct.Memory* %2)
  ret %struct.Memory* %23

block_4009d8:                                     ; preds = %block_400586
  %24 = add i64 %203, -12
  store i64 4196831, i64* %PC, align 8
  %25 = inttoptr i64 %24 to i32*
  store i32 23, i32* %25, align 4
  %26 = load i64, i64* %PC, align 8
  %27 = tail call %struct.Memory* @sub_4009df(%struct.State* nonnull %0, i64 %26, %struct.Memory* %2)
  ret %struct.Memory* %27

block_400ad2:                                     ; preds = %block_400586
  %28 = add i64 %203, -12
  store i64 4197081, i64* %PC, align 8
  %29 = inttoptr i64 %28 to i32*
  store i32 28, i32* %29, align 4
  %30 = load i64, i64* %PC, align 8
  %31 = tail call %struct.Memory* @sub_400ad9(%struct.State* nonnull %0, i64 %30, %struct.Memory* %2)
  ret %struct.Memory* %31

block_4006b8:                                     ; preds = %block_400586
  %32 = add i64 %203, -12
  store i64 4196031, i64* %PC, align 8
  %33 = inttoptr i64 %32 to i32*
  store i32 7, i32* %33, align 4
  %34 = load i64, i64* %RBP, align 8
  %35 = add i64 %34, -12
  %36 = load i64, i64* %PC, align 8
  %37 = add i64 %36, 3
  store i64 %37, i64* %PC, align 8
  %38 = inttoptr i64 %35 to i32*
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i64
  store i64 %40, i64* %RDI, align 8, !tbaa !2428
  %41 = add i64 %36, -431
  br label %block_400586.backedge

block_400586.backedge:                            ; preds = %block_4006b8, %block_400974, %block_400b36
  %.sink126 = phi i64 [ %36, %block_4006b8 ], [ %77, %block_400974 ], [ %144, %block_400b36 ]
  %.sink121 = phi i64 [ %41, %block_4006b8 ], [ %82, %block_400974 ], [ %149, %block_400b36 ]
  %.sink5.be = phi i64 [ 351, %block_4006b8 ], [ 1051, %block_400974 ], [ 1501, %block_400b36 ]
  %42 = add i64 %.sink126, 8
  %43 = load i64, i64* %4, align 8, !tbaa !2428
  %44 = add i64 %43, -8
  %45 = inttoptr i64 %44 to i64*
  store i64 %42, i64* %45, align 8
  store i64 %44, i64* %4, align 8, !tbaa !2428
  store i64 %.sink121, i64* %PC, align 8, !tbaa !2428
  %46 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %.sink121, %struct.Memory* %2)
  br label %block_400586

block_4007b2:                                     ; preds = %block_400586
  %47 = add i64 %203, -12
  store i64 4196281, i64* %PC, align 8
  %48 = inttoptr i64 %47 to i32*
  store i32 12, i32* %48, align 4
  %.pre = load i64, i64* %PC, align 8
  br label %block_4007b9

block_4008ac:                                     ; preds = %block_400586
  %49 = add i64 %203, -12
  store i64 4196531, i64* %PC, align 8
  %50 = inttoptr i64 %49 to i32*
  store i32 17, i32* %50, align 4
  %51 = load i64, i64* %PC, align 8
  %52 = tail call %struct.Memory* @sub_4008b3(%struct.State* nonnull %0, i64 %51, %struct.Memory* %2)
  ret %struct.Memory* %52

block_4009a6:                                     ; preds = %block_400586
  %53 = add i64 %203, -12
  store i64 4196781, i64* %PC, align 8
  %54 = inttoptr i64 %53 to i32*
  store i32 22, i32* %54, align 4
  %55 = load i64, i64* %PC, align 8
  %56 = tail call %struct.Memory* @sub_4009ad(%struct.State* nonnull %0, i64 %55, %struct.Memory* %2)
  ret %struct.Memory* %56

block_400aa0:                                     ; preds = %block_400586
  %57 = add i64 %203, -12
  store i64 4197031, i64* %PC, align 8
  %58 = inttoptr i64 %57 to i32*
  store i32 27, i32* %58, align 4
  %59 = load i64, i64* %PC, align 8
  %60 = tail call %struct.Memory* @sub_400aa7(%struct.State* nonnull %0, i64 %59, %struct.Memory* %2)
  ret %struct.Memory* %60

block_40058c:                                     ; preds = %block_400586
  %61 = add i64 %203, -12
  store i64 4195731, i64* %PC, align 8
  %62 = inttoptr i64 %61 to i32*
  store i32 1, i32* %62, align 4
  %63 = load i64, i64* %PC, align 8
  %64 = tail call %struct.Memory* @sub_400593(%struct.State* nonnull %0, i64 %63, %struct.Memory* %2)
  ret %struct.Memory* %64

block_400686:                                     ; preds = %block_400586
  %65 = add i64 %203, -12
  store i64 4195981, i64* %PC, align 8
  %66 = inttoptr i64 %65 to i32*
  store i32 6, i32* %66, align 4
  %67 = load i64, i64* %PC, align 8
  %68 = tail call %struct.Memory* @sub_40068d(%struct.State* nonnull %0, i64 %67, %struct.Memory* %2)
  ret %struct.Memory* %68

block_40087a:                                     ; preds = %block_400586
  %69 = add i64 %203, -12
  store i64 4196481, i64* %PC, align 8
  %70 = inttoptr i64 %69 to i32*
  store i32 16, i32* %70, align 4
  %71 = load i64, i64* %PC, align 8
  %72 = tail call %struct.Memory* @sub_400881(%struct.State* nonnull %0, i64 %71, %struct.Memory* %2)
  ret %struct.Memory* %72

block_400974:                                     ; preds = %block_400586
  %73 = add i64 %203, -12
  store i64 4196731, i64* %PC, align 8
  %74 = inttoptr i64 %73 to i32*
  store i32 21, i32* %74, align 4
  %75 = load i64, i64* %RBP, align 8
  %76 = add i64 %75, -12
  %77 = load i64, i64* %PC, align 8
  %78 = add i64 %77, 3
  store i64 %78, i64* %PC, align 8
  %79 = inttoptr i64 %76 to i32*
  %80 = load i32, i32* %79, align 4
  %81 = zext i32 %80 to i64
  store i64 %81, i64* %RDI, align 8, !tbaa !2428
  %82 = add i64 %77, -1131
  br label %block_400586.backedge

block_400a6e:                                     ; preds = %block_400586
  %83 = add i64 %203, -12
  store i64 4196981, i64* %PC, align 8
  %84 = inttoptr i64 %83 to i32*
  store i32 26, i32* %84, align 4
  %85 = load i64, i64* %PC, align 8
  %86 = tail call %struct.Memory* @sub_400a75(%struct.State* nonnull %0, i64 %85, %struct.Memory* %2)
  ret %struct.Memory* %86

block_400780:                                     ; preds = %block_400586
  %87 = add i64 %203, -12
  store i64 4196231, i64* %PC, align 8
  %88 = inttoptr i64 %87 to i32*
  store i32 11, i32* %88, align 4
  %89 = load i64, i64* %PC, align 8
  %90 = tail call %struct.Memory* @sub_400787(%struct.State* nonnull %0, i64 %89, %struct.Memory* %2)
  ret %struct.Memory* %90

block_4007b9:                                     ; preds = %block_4007b2, %3
  %91 = phi i64 [ %.pre, %block_4007b2 ], [ %1, %3 ]
  %92 = load i64, i64* %RBP, align 8
  %93 = add i64 %92, -12
  %94 = add i64 %91, 3
  store i64 %94, i64* %PC, align 8
  %95 = inttoptr i64 %93 to i32*
  %96 = load i32, i32* %95, align 4
  %97 = zext i32 %96 to i64
  store i64 %97, i64* %RDI, align 8, !tbaa !2428
  %98 = add i64 %91, -681
  %99 = add i64 %91, 8
  %100 = load i64, i64* %4, align 8, !tbaa !2428
  %101 = add i64 %100, -8
  %102 = inttoptr i64 %101 to i64*
  store i64 %99, i64* %102, align 8
  store i64 %101, i64* %4, align 8, !tbaa !2428
  store i64 %98, i64* %PC, align 8, !tbaa !2428
  %103 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %98, %struct.Memory* %2)
  br label %block_400586

block_400b68:                                     ; preds = %block_400586
  %104 = add i64 %203, -12
  store i64 4197231, i64* %PC, align 8
  %105 = inttoptr i64 %104 to i32*
  store i32 31, i32* %105, align 4
  %106 = load i64, i64* %PC, align 8
  %107 = tail call %struct.Memory* @sub_400b6f(%struct.State* nonnull %0, i64 %106, %struct.Memory* %2)
  ret %struct.Memory* %107

block_400654:                                     ; preds = %block_400586
  %108 = add i64 %203, -12
  store i64 4195931, i64* %PC, align 8
  %109 = inttoptr i64 %108 to i32*
  store i32 5, i32* %109, align 4
  %110 = load i64, i64* %PC, align 8
  %111 = tail call %struct.Memory* @sub_40065b(%struct.State* nonnull %0, i64 %110, %struct.Memory* %2)
  ret %struct.Memory* %111

block_40074e:                                     ; preds = %block_400586
  %112 = add i64 %203, -12
  store i64 4196181, i64* %PC, align 8
  %113 = inttoptr i64 %112 to i32*
  store i32 10, i32* %113, align 4
  %114 = load i64, i64* %PC, align 8
  %115 = tail call %struct.Memory* @sub_400755(%struct.State* nonnull %0, i64 %114, %struct.Memory* %2)
  ret %struct.Memory* %115

block_400848:                                     ; preds = %block_400586
  %116 = add i64 %203, -12
  store i64 4196431, i64* %PC, align 8
  %117 = inttoptr i64 %116 to i32*
  store i32 15, i32* %117, align 4
  %118 = load i64, i64* %PC, align 8
  %119 = tail call %struct.Memory* @sub_40084f(%struct.State* nonnull %0, i64 %118, %struct.Memory* %2)
  ret %struct.Memory* %119

block_4005be:                                     ; preds = %block_400586
  %120 = add i64 %203, -12
  store i64 4195781, i64* %PC, align 8
  %121 = inttoptr i64 %120 to i32*
  store i32 2, i32* %121, align 4
  %122 = load i64, i64* %PC, align 8
  %123 = tail call %struct.Memory* @sub_4005c5(%struct.State* nonnull %0, i64 %122, %struct.Memory* %2)
  ret %struct.Memory* %123

block_400942:                                     ; preds = %block_400586
  %124 = add i64 %203, -12
  store i64 4196681, i64* %PC, align 8
  %125 = inttoptr i64 %124 to i32*
  store i32 20, i32* %125, align 4
  %126 = load i64, i64* %PC, align 8
  %127 = tail call %struct.Memory* @sub_400949(%struct.State* nonnull %0, i64 %126, %struct.Memory* %2)
  ret %struct.Memory* %127

block_4006ea:                                     ; preds = %block_400586
  %128 = add i64 %203, -12
  store i64 4196081, i64* %PC, align 8
  %129 = inttoptr i64 %128 to i32*
  store i32 8, i32* %129, align 4
  %130 = load i64, i64* %PC, align 8
  %131 = tail call %struct.Memory* @sub_4006f1(%struct.State* nonnull %0, i64 %130, %struct.Memory* %2)
  ret %struct.Memory* %131

block_400579:                                     ; preds = %block_400586
  %132 = add i64 %203, -12
  store i64 4195712, i64* %PC, align 8
  %133 = inttoptr i64 %132 to i32*
  store i32 0, i32* %133, align 4
  %134 = load i64, i64* %PC, align 8
  %135 = tail call %struct.Memory* @sub_400580(%struct.State* nonnull %0, i64 %134, %struct.Memory* %2)
  ret %struct.Memory* %135

block_400a3c:                                     ; preds = %block_400586
  %136 = add i64 %203, -12
  store i64 4196931, i64* %PC, align 8
  %137 = inttoptr i64 %136 to i32*
  store i32 25, i32* %137, align 4
  %138 = load i64, i64* %PC, align 8
  %139 = tail call %struct.Memory* @sub_400a43(%struct.State* nonnull %0, i64 %138, %struct.Memory* %2)
  ret %struct.Memory* %139

block_400b36:                                     ; preds = %block_400586
  %140 = add i64 %203, -12
  store i64 4197181, i64* %PC, align 8
  %141 = inttoptr i64 %140 to i32*
  store i32 30, i32* %141, align 4
  %142 = load i64, i64* %RBP, align 8
  %143 = add i64 %142, -12
  %144 = load i64, i64* %PC, align 8
  %145 = add i64 %144, 3
  store i64 %145, i64* %PC, align 8
  %146 = inttoptr i64 %143 to i32*
  %147 = load i32, i32* %146, align 4
  %148 = zext i32 %147 to i64
  store i64 %148, i64* %RDI, align 8, !tbaa !2428
  %149 = add i64 %144, -1581
  br label %block_400586.backedge

block_400622:                                     ; preds = %block_400586
  %150 = add i64 %203, -12
  store i64 4195881, i64* %PC, align 8
  %151 = inttoptr i64 %150 to i32*
  store i32 4, i32* %151, align 4
  %152 = load i64, i64* %PC, align 8
  %153 = tail call %struct.Memory* @sub_400629(%struct.State* nonnull %0, i64 %152, %struct.Memory* %2)
  ret %struct.Memory* %153

block_40071c:                                     ; preds = %block_400586
  %154 = add i64 %203, -12
  store i64 4196131, i64* %PC, align 8
  %155 = inttoptr i64 %154 to i32*
  store i32 9, i32* %155, align 4
  %156 = load i64, i64* %PC, align 8
  %157 = tail call %struct.Memory* @sub_400723(%struct.State* nonnull %0, i64 %156, %struct.Memory* %2)
  ret %struct.Memory* %157

block_400586:                                     ; preds = %block_400586.backedge, %block_4007b9
  %.sink5 = phi i64 [ 601, %block_4007b9 ], [ %.sink5.be, %block_400586.backedge ]
  %158 = load i64, i64* %RBP, align 8
  %159 = add i64 %158, -8
  %160 = load i64, i64* %PC, align 8
  %161 = add i64 %160, 4
  store i64 %161, i64* %PC, align 8
  %162 = inttoptr i64 %159 to i64*
  %163 = load i64, i64* %162, align 8
  store i64 %163, i64* %RAX, align 8, !tbaa !2428
  %164 = add i64 %163, 4
  store i64 %164, i64* %RCX, align 8, !tbaa !2428
  %165 = icmp ugt i64 %163, -5
  %166 = zext i1 %165 to i8
  store i8 %166, i8* %5, align 1, !tbaa !2432
  %167 = trunc i64 %164 to i32
  %168 = and i32 %167, 255
  %169 = tail call i32 @llvm.ctpop.i32(i32 %168) #9
  %170 = trunc i32 %169 to i8
  %171 = and i8 %170, 1
  %172 = xor i8 %171, 1
  store i8 %172, i8* %6, align 1, !tbaa !2446
  %173 = xor i64 %164, %163
  %174 = lshr i64 %173, 4
  %175 = trunc i64 %174 to i8
  %176 = and i8 %175, 1
  store i8 %176, i8* %7, align 1, !tbaa !2447
  %177 = icmp eq i64 %164, 0
  %178 = zext i1 %177 to i8
  store i8 %178, i8* %8, align 1, !tbaa !2448
  %179 = lshr i64 %164, 63
  %180 = trunc i64 %179 to i8
  store i8 %180, i8* %9, align 1, !tbaa !2449
  %181 = lshr i64 %163, 63
  %182 = xor i64 %179, %181
  %183 = add nuw nsw i64 %182, %179
  %184 = icmp eq i64 %183, 2
  %185 = zext i1 %184 to i8
  store i8 %185, i8* %10, align 1, !tbaa !2450
  %186 = add i64 %160, 15
  store i64 %186, i64* %PC, align 8
  store i64 %164, i64* %162, align 8
  %187 = load i32*, i32** %11, align 8
  %188 = load i64, i64* %PC, align 8
  %189 = add i64 %188, 3
  store i64 %189, i64* %PC, align 8
  %190 = load i32, i32* %187, align 4
  %191 = sext i32 %190 to i64
  store i64 %191, i64* %RAX, align 8, !tbaa !2428
  %192 = shl nsw i64 %191, 3
  %193 = add i64 %192, add (i64 ptrtoint (%seg_602020__data_type* @seg_602020__data to i64), i64 16)
  %194 = add i64 %188, 11
  store i64 %194, i64* %PC, align 8
  %195 = inttoptr i64 %193 to i64*
  %196 = load i64, i64* %195, align 8
  store i64 %196, i64* %RAX, align 8, !tbaa !2428
  %197 = load i64, i64* %RBP, align 8
  %198 = add i64 %197, -40
  %199 = add i64 %188, 15
  store i64 %199, i64* %PC, align 8
  %200 = inttoptr i64 %198 to i64*
  store i64 %196, i64* %200, align 8
  %201 = load i64, i64* %PC, align 8
  %202 = sub i64 %201, %.sink5
  %203 = load i64, i64* %RBP, align 8
  %204 = add i64 %203, -40
  %205 = add i64 %202, 4
  store i64 %205, i64* %PC, align 8
  %206 = inttoptr i64 %204 to i64*
  %207 = load i64, i64* %206, align 8
  store i64 %207, i64* %RAX, align 8, !tbaa !2428
  store i64 %207, i64* %PC, align 8, !tbaa !2428
  switch i64 %207, label %224 [
    i64 4197124, label %block_400b04
    i64 4196874, label %block_400a0a
    i64 4196624, label %block_400910
    i64 4196374, label %block_400816
    i64 4196124, label %block_40071c
    i64 4195874, label %block_400622
    i64 4197174, label %block_400b36
    i64 4196924, label %block_400a3c
    i64 4197024, label %block_400aa0
    i64 4196774, label %block_4009a6
    i64 4196524, label %block_4008ac
    i64 4197074, label %block_400ad2
    i64 4195924, label %block_400654
    i64 4195824, label %block_4005f0
    i64 4195705, label %block_400579
    i64 4196974, label %block_400a6e
    i64 4196324, label %block_4007e4
    i64 4196024, label %block_4006b8
    i64 4196574, label %block_4008de
    i64 4196274, label %block_4007b2
    i64 4195724, label %block_40058c
    i64 4196824, label %block_4009d8
    i64 4195974, label %block_400686
    i64 4196474, label %block_40087a
    i64 4196724, label %block_400974
    i64 4196224, label %block_400780
    i64 4197224, label %block_400b68
    i64 4196074, label %block_4006ea
    i64 4196174, label %block_40074e
    i64 4196424, label %block_400848
    i64 4195774, label %block_4005be
    i64 4196674, label %block_400942
  ]

block_400816:                                     ; preds = %block_400586
  %208 = add i64 %203, -12
  store i64 4196381, i64* %PC, align 8
  %209 = inttoptr i64 %208 to i32*
  store i32 14, i32* %209, align 4
  %210 = load i64, i64* %PC, align 8
  %211 = tail call %struct.Memory* @sub_40081d(%struct.State* nonnull %0, i64 %210, %struct.Memory* %2)
  ret %struct.Memory* %211

block_400910:                                     ; preds = %block_400586
  %212 = add i64 %203, -12
  store i64 4196631, i64* %PC, align 8
  %213 = inttoptr i64 %212 to i32*
  store i32 19, i32* %213, align 4
  %214 = load i64, i64* %PC, align 8
  %215 = tail call %struct.Memory* @sub_400917(%struct.State* nonnull %0, i64 %214, %struct.Memory* %2)
  ret %struct.Memory* %215

block_400a0a:                                     ; preds = %block_400586
  %216 = add i64 %203, -12
  store i64 4196881, i64* %PC, align 8
  %217 = inttoptr i64 %216 to i32*
  store i32 24, i32* %217, align 4
  %218 = load i64, i64* %PC, align 8
  %219 = tail call %struct.Memory* @sub_400a11(%struct.State* nonnull %0, i64 %218, %struct.Memory* %2)
  ret %struct.Memory* %219

block_400b04:                                     ; preds = %block_400586
  %220 = add i64 %203, -12
  store i64 4197131, i64* %PC, align 8
  %221 = inttoptr i64 %220 to i32*
  store i32 29, i32* %221, align 4
  %222 = load i64, i64* %PC, align 8
  %223 = tail call %struct.Memory* @sub_400b0b(%struct.State* nonnull %0, i64 %222, %struct.Memory* %2)
  ret %struct.Memory* %223

; <label>:224:                                    ; preds = %block_400586
  %225 = tail call %struct.Memory* @__remill_jump(%struct.State* nonnull %0, i64 %207, %struct.Memory* %2)
  ret %struct.Memory* %225
}

; Function Attrs: noinline norecurse nounwind
define %struct.Memory* @sub_400450__dl_relocate_static_pie(%struct.State* noalias nocapture dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr #7 {
block_400450:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = add i64 %1, 2
  store i64 %3, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %5 = load i64, i64* %4, align 8, !tbaa !2428
  %6 = inttoptr i64 %5 to i64*
  %7 = load i64, i64* %6, align 8
  store i64 %7, i64* %PC, align 8, !tbaa !2428
  %8 = add i64 %5, 8
  store i64 %8, i64* %4, align 8, !tbaa !2428
  ret %struct.Memory* %2
}

; Function Attrs: noinline nounwind
define %struct.Memory* @sub_4008b3(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) local_unnamed_addr #6 {
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %PC, align 8
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %11 = bitcast i64* %RAX to i32**
  br label %block_4008b3

block_4005f0:                                     ; preds = %block_400586
  %12 = add i64 %209, -12
  store i64 4195831, i64* %PC, align 8
  %13 = inttoptr i64 %12 to i32*
  store i32 3, i32* %13, align 4
  %14 = load i64, i64* %RBP, align 8
  %15 = add i64 %14, -12
  %16 = load i64, i64* %PC, align 8
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC, align 8
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i64
  store i64 %20, i64* %RDI, align 8, !tbaa !2428
  %21 = add i64 %16, -231
  br label %block_400586.backedge

block_400586.backedge:                            ; preds = %block_4005f0, %block_4006b8, %block_4007b2, %block_400974, %block_400a6e, %block_400b36
  %.sink120 = phi i64 [ %16, %block_4005f0 ], [ %51, %block_4006b8 ], [ %78, %block_4007b2 ], [ %110, %block_400974 ], [ %120, %block_400a6e ], [ %158, %block_400b36 ]
  %.sink115 = phi i64 [ %21, %block_4005f0 ], [ %56, %block_4006b8 ], [ %83, %block_4007b2 ], [ %115, %block_400974 ], [ %125, %block_400a6e ], [ %163, %block_400b36 ]
  %.sink5.be = phi i64 [ 151, %block_4005f0 ], [ 351, %block_4006b8 ], [ 601, %block_4007b2 ], [ 1051, %block_400974 ], [ 1301, %block_400a6e ], [ 1501, %block_400b36 ]
  %22 = add i64 %.sink120, 8
  %23 = load i64, i64* %4, align 8, !tbaa !2428
  %24 = add i64 %23, -8
  %25 = inttoptr i64 %24 to i64*
  store i64 %22, i64* %25, align 8
  store i64 %24, i64* %4, align 8, !tbaa !2428
  store i64 %.sink115, i64* %PC, align 8, !tbaa !2428
  %26 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %.sink115, %struct.Memory* %2)
  br label %block_400586

block_4009d8:                                     ; preds = %block_400586
  %27 = add i64 %209, -12
  store i64 4196831, i64* %PC, align 8
  %28 = inttoptr i64 %27 to i32*
  store i32 23, i32* %28, align 4
  %29 = load i64, i64* %PC, align 8
  %30 = tail call %struct.Memory* @sub_4009df(%struct.State* nonnull %0, i64 %29, %struct.Memory* %2)
  ret %struct.Memory* %30

block_400ad2:                                     ; preds = %block_400586
  %31 = add i64 %209, -12
  store i64 4197081, i64* %PC, align 8
  %32 = inttoptr i64 %31 to i32*
  store i32 28, i32* %32, align 4
  %33 = load i64, i64* %PC, align 8
  %34 = tail call %struct.Memory* @sub_400ad9(%struct.State* nonnull %0, i64 %33, %struct.Memory* %2)
  ret %struct.Memory* %34

block_4006ea:                                     ; preds = %block_400586
  %35 = add i64 %209, -12
  store i64 4196081, i64* %PC, align 8
  %36 = inttoptr i64 %35 to i32*
  store i32 8, i32* %36, align 4
  %37 = load i64, i64* %PC, align 8
  %38 = tail call %struct.Memory* @sub_4006f1(%struct.State* nonnull %0, i64 %37, %struct.Memory* %2)
  ret %struct.Memory* %38

block_4005be:                                     ; preds = %block_400586
  %39 = add i64 %209, -12
  store i64 4195781, i64* %PC, align 8
  %40 = inttoptr i64 %39 to i32*
  store i32 2, i32* %40, align 4
  %41 = load i64, i64* %PC, align 8
  %42 = tail call %struct.Memory* @sub_4005c5(%struct.State* nonnull %0, i64 %41, %struct.Memory* %2)
  ret %struct.Memory* %42

block_4007e4:                                     ; preds = %block_400586
  %43 = add i64 %209, -12
  store i64 4196331, i64* %PC, align 8
  %44 = inttoptr i64 %43 to i32*
  store i32 13, i32* %44, align 4
  %45 = load i64, i64* %PC, align 8
  %46 = tail call %struct.Memory* @sub_4007eb(%struct.State* nonnull %0, i64 %45, %struct.Memory* %2)
  ret %struct.Memory* %46

block_4006b8:                                     ; preds = %block_400586
  %47 = add i64 %209, -12
  store i64 4196031, i64* %PC, align 8
  %48 = inttoptr i64 %47 to i32*
  store i32 7, i32* %48, align 4
  %49 = load i64, i64* %RBP, align 8
  %50 = add i64 %49, -12
  %51 = load i64, i64* %PC, align 8
  %52 = add i64 %51, 3
  store i64 %52, i64* %PC, align 8
  %53 = inttoptr i64 %50 to i32*
  %54 = load i32, i32* %53, align 4
  %55 = zext i32 %54 to i64
  store i64 %55, i64* %RDI, align 8, !tbaa !2428
  %56 = add i64 %51, -431
  br label %block_400586.backedge

block_4008de:                                     ; preds = %block_400586
  %57 = add i64 %209, -12
  store i64 4196581, i64* %PC, align 8
  %58 = inttoptr i64 %57 to i32*
  store i32 18, i32* %58, align 4
  %59 = load i64, i64* %PC, align 8
  %60 = tail call %struct.Memory* @sub_4008e5(%struct.State* nonnull %0, i64 %59, %struct.Memory* %2)
  ret %struct.Memory* %60

block_4008b3:                                     ; preds = %block_4008ac, %3
  %61 = phi i64 [ %.pre, %block_4008ac ], [ %1, %3 ]
  %62 = load i64, i64* %RBP, align 8
  %63 = add i64 %62, -12
  %64 = add i64 %61, 3
  store i64 %64, i64* %PC, align 8
  %65 = inttoptr i64 %63 to i32*
  %66 = load i32, i32* %65, align 4
  %67 = zext i32 %66 to i64
  store i64 %67, i64* %RDI, align 8, !tbaa !2428
  %68 = add i64 %61, -931
  %69 = add i64 %61, 8
  %70 = load i64, i64* %4, align 8, !tbaa !2428
  %71 = add i64 %70, -8
  %72 = inttoptr i64 %71 to i64*
  store i64 %69, i64* %72, align 8
  store i64 %71, i64* %4, align 8, !tbaa !2428
  store i64 %68, i64* %PC, align 8, !tbaa !2428
  %73 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %68, %struct.Memory* %2)
  br label %block_400586

block_4007b2:                                     ; preds = %block_400586
  %74 = add i64 %209, -12
  store i64 4196281, i64* %PC, align 8
  %75 = inttoptr i64 %74 to i32*
  store i32 12, i32* %75, align 4
  %76 = load i64, i64* %RBP, align 8
  %77 = add i64 %76, -12
  %78 = load i64, i64* %PC, align 8
  %79 = add i64 %78, 3
  store i64 %79, i64* %PC, align 8
  %80 = inttoptr i64 %77 to i32*
  %81 = load i32, i32* %80, align 4
  %82 = zext i32 %81 to i64
  store i64 %82, i64* %RDI, align 8, !tbaa !2428
  %83 = add i64 %78, -681
  br label %block_400586.backedge

block_4008ac:                                     ; preds = %block_400586
  %84 = add i64 %209, -12
  store i64 4196531, i64* %PC, align 8
  %85 = inttoptr i64 %84 to i32*
  store i32 17, i32* %85, align 4
  %.pre = load i64, i64* %PC, align 8
  br label %block_4008b3

block_40058c:                                     ; preds = %block_400586
  %86 = add i64 %209, -12
  store i64 4195731, i64* %PC, align 8
  %87 = inttoptr i64 %86 to i32*
  store i32 1, i32* %87, align 4
  %88 = load i64, i64* %PC, align 8
  %89 = tail call %struct.Memory* @sub_400593(%struct.State* nonnull %0, i64 %88, %struct.Memory* %2)
  ret %struct.Memory* %89

block_400686:                                     ; preds = %block_400586
  %90 = add i64 %209, -12
  store i64 4195981, i64* %PC, align 8
  %91 = inttoptr i64 %90 to i32*
  store i32 6, i32* %91, align 4
  %92 = load i64, i64* %PC, align 8
  %93 = tail call %struct.Memory* @sub_40068d(%struct.State* nonnull %0, i64 %92, %struct.Memory* %2)
  ret %struct.Memory* %93

block_400780:                                     ; preds = %block_400586
  %94 = add i64 %209, -12
  store i64 4196231, i64* %PC, align 8
  %95 = inttoptr i64 %94 to i32*
  store i32 11, i32* %95, align 4
  %96 = load i64, i64* %PC, align 8
  %97 = tail call %struct.Memory* @sub_400787(%struct.State* nonnull %0, i64 %96, %struct.Memory* %2)
  ret %struct.Memory* %97

block_4009a6:                                     ; preds = %block_400586
  %98 = add i64 %209, -12
  store i64 4196781, i64* %PC, align 8
  %99 = inttoptr i64 %98 to i32*
  store i32 22, i32* %99, align 4
  %100 = load i64, i64* %PC, align 8
  %101 = tail call %struct.Memory* @sub_4009ad(%struct.State* nonnull %0, i64 %100, %struct.Memory* %2)
  ret %struct.Memory* %101

block_40087a:                                     ; preds = %block_400586
  %102 = add i64 %209, -12
  store i64 4196481, i64* %PC, align 8
  %103 = inttoptr i64 %102 to i32*
  store i32 16, i32* %103, align 4
  %104 = load i64, i64* %PC, align 8
  %105 = tail call %struct.Memory* @sub_400881(%struct.State* nonnull %0, i64 %104, %struct.Memory* %2)
  ret %struct.Memory* %105

block_400974:                                     ; preds = %block_400586
  %106 = add i64 %209, -12
  store i64 4196731, i64* %PC, align 8
  %107 = inttoptr i64 %106 to i32*
  store i32 21, i32* %107, align 4
  %108 = load i64, i64* %RBP, align 8
  %109 = add i64 %108, -12
  %110 = load i64, i64* %PC, align 8
  %111 = add i64 %110, 3
  store i64 %111, i64* %PC, align 8
  %112 = inttoptr i64 %109 to i32*
  %113 = load i32, i32* %112, align 4
  %114 = zext i32 %113 to i64
  store i64 %114, i64* %RDI, align 8, !tbaa !2428
  %115 = add i64 %110, -1131
  br label %block_400586.backedge

block_400a6e:                                     ; preds = %block_400586
  %116 = add i64 %209, -12
  store i64 4196981, i64* %PC, align 8
  %117 = inttoptr i64 %116 to i32*
  store i32 26, i32* %117, align 4
  %118 = load i64, i64* %RBP, align 8
  %119 = add i64 %118, -12
  %120 = load i64, i64* %PC, align 8
  %121 = add i64 %120, 3
  store i64 %121, i64* %PC, align 8
  %122 = inttoptr i64 %119 to i32*
  %123 = load i32, i32* %122, align 4
  %124 = zext i32 %123 to i64
  store i64 %124, i64* %RDI, align 8, !tbaa !2428
  %125 = add i64 %120, -1381
  br label %block_400586.backedge

block_400aa0:                                     ; preds = %block_400586
  %126 = add i64 %209, -12
  store i64 4197031, i64* %PC, align 8
  %127 = inttoptr i64 %126 to i32*
  store i32 27, i32* %127, align 4
  %128 = load i64, i64* %PC, align 8
  %129 = tail call %struct.Memory* @sub_400aa7(%struct.State* nonnull %0, i64 %128, %struct.Memory* %2)
  ret %struct.Memory* %129

block_400654:                                     ; preds = %block_400586
  %130 = add i64 %209, -12
  store i64 4195931, i64* %PC, align 8
  %131 = inttoptr i64 %130 to i32*
  store i32 5, i32* %131, align 4
  %132 = load i64, i64* %PC, align 8
  %133 = tail call %struct.Memory* @sub_40065b(%struct.State* nonnull %0, i64 %132, %struct.Memory* %2)
  ret %struct.Memory* %133

block_40074e:                                     ; preds = %block_400586
  %134 = add i64 %209, -12
  store i64 4196181, i64* %PC, align 8
  %135 = inttoptr i64 %134 to i32*
  store i32 10, i32* %135, align 4
  %136 = load i64, i64* %PC, align 8
  %137 = tail call %struct.Memory* @sub_400755(%struct.State* nonnull %0, i64 %136, %struct.Memory* %2)
  ret %struct.Memory* %137

block_400848:                                     ; preds = %block_400586
  %138 = add i64 %209, -12
  store i64 4196431, i64* %PC, align 8
  %139 = inttoptr i64 %138 to i32*
  store i32 15, i32* %139, align 4
  %140 = load i64, i64* %PC, align 8
  %141 = tail call %struct.Memory* @sub_40084f(%struct.State* nonnull %0, i64 %140, %struct.Memory* %2)
  ret %struct.Memory* %141

block_400942:                                     ; preds = %block_400586
  %142 = add i64 %209, -12
  store i64 4196681, i64* %PC, align 8
  %143 = inttoptr i64 %142 to i32*
  store i32 20, i32* %143, align 4
  %144 = load i64, i64* %PC, align 8
  %145 = tail call %struct.Memory* @sub_400949(%struct.State* nonnull %0, i64 %144, %struct.Memory* %2)
  ret %struct.Memory* %145

block_400b68:                                     ; preds = %block_400586
  %146 = add i64 %209, -12
  store i64 4197231, i64* %PC, align 8
  %147 = inttoptr i64 %146 to i32*
  store i32 31, i32* %147, align 4
  %148 = load i64, i64* %PC, align 8
  %149 = tail call %struct.Memory* @sub_400b6f(%struct.State* nonnull %0, i64 %148, %struct.Memory* %2)
  ret %struct.Memory* %149

block_400a3c:                                     ; preds = %block_400586
  %150 = add i64 %209, -12
  store i64 4196931, i64* %PC, align 8
  %151 = inttoptr i64 %150 to i32*
  store i32 25, i32* %151, align 4
  %152 = load i64, i64* %PC, align 8
  %153 = tail call %struct.Memory* @sub_400a43(%struct.State* nonnull %0, i64 %152, %struct.Memory* %2)
  ret %struct.Memory* %153

block_400b36:                                     ; preds = %block_400586
  %154 = add i64 %209, -12
  store i64 4197181, i64* %PC, align 8
  %155 = inttoptr i64 %154 to i32*
  store i32 30, i32* %155, align 4
  %156 = load i64, i64* %RBP, align 8
  %157 = add i64 %156, -12
  %158 = load i64, i64* %PC, align 8
  %159 = add i64 %158, 3
  store i64 %159, i64* %PC, align 8
  %160 = inttoptr i64 %157 to i32*
  %161 = load i32, i32* %160, align 4
  %162 = zext i32 %161 to i64
  store i64 %162, i64* %RDI, align 8, !tbaa !2428
  %163 = add i64 %158, -1581
  br label %block_400586.backedge

block_400586:                                     ; preds = %block_400586.backedge, %block_4008b3
  %.sink5 = phi i64 [ 851, %block_4008b3 ], [ %.sink5.be, %block_400586.backedge ]
  %164 = load i64, i64* %RBP, align 8
  %165 = add i64 %164, -8
  %166 = load i64, i64* %PC, align 8
  %167 = add i64 %166, 4
  store i64 %167, i64* %PC, align 8
  %168 = inttoptr i64 %165 to i64*
  %169 = load i64, i64* %168, align 8
  store i64 %169, i64* %RAX, align 8, !tbaa !2428
  %170 = add i64 %169, 4
  store i64 %170, i64* %RCX, align 8, !tbaa !2428
  %171 = icmp ugt i64 %169, -5
  %172 = zext i1 %171 to i8
  store i8 %172, i8* %5, align 1, !tbaa !2432
  %173 = trunc i64 %170 to i32
  %174 = and i32 %173, 255
  %175 = tail call i32 @llvm.ctpop.i32(i32 %174) #9
  %176 = trunc i32 %175 to i8
  %177 = and i8 %176, 1
  %178 = xor i8 %177, 1
  store i8 %178, i8* %6, align 1, !tbaa !2446
  %179 = xor i64 %170, %169
  %180 = lshr i64 %179, 4
  %181 = trunc i64 %180 to i8
  %182 = and i8 %181, 1
  store i8 %182, i8* %7, align 1, !tbaa !2447
  %183 = icmp eq i64 %170, 0
  %184 = zext i1 %183 to i8
  store i8 %184, i8* %8, align 1, !tbaa !2448
  %185 = lshr i64 %170, 63
  %186 = trunc i64 %185 to i8
  store i8 %186, i8* %9, align 1, !tbaa !2449
  %187 = lshr i64 %169, 63
  %188 = xor i64 %185, %187
  %189 = add nuw nsw i64 %188, %185
  %190 = icmp eq i64 %189, 2
  %191 = zext i1 %190 to i8
  store i8 %191, i8* %10, align 1, !tbaa !2450
  %192 = add i64 %166, 15
  store i64 %192, i64* %PC, align 8
  store i64 %170, i64* %168, align 8
  %193 = load i32*, i32** %11, align 8
  %194 = load i64, i64* %PC, align 8
  %195 = add i64 %194, 3
  store i64 %195, i64* %PC, align 8
  %196 = load i32, i32* %193, align 4
  %197 = sext i32 %196 to i64
  store i64 %197, i64* %RAX, align 8, !tbaa !2428
  %198 = shl nsw i64 %197, 3
  %199 = add i64 %198, add (i64 ptrtoint (%seg_602020__data_type* @seg_602020__data to i64), i64 16)
  %200 = add i64 %194, 11
  store i64 %200, i64* %PC, align 8
  %201 = inttoptr i64 %199 to i64*
  %202 = load i64, i64* %201, align 8
  store i64 %202, i64* %RAX, align 8, !tbaa !2428
  %203 = load i64, i64* %RBP, align 8
  %204 = add i64 %203, -40
  %205 = add i64 %194, 15
  store i64 %205, i64* %PC, align 8
  %206 = inttoptr i64 %204 to i64*
  store i64 %202, i64* %206, align 8
  %207 = load i64, i64* %PC, align 8
  %208 = sub i64 %207, %.sink5
  %209 = load i64, i64* %RBP, align 8
  %210 = add i64 %209, -40
  %211 = add i64 %208, 4
  store i64 %211, i64* %PC, align 8
  %212 = inttoptr i64 %210 to i64*
  %213 = load i64, i64* %212, align 8
  store i64 %213, i64* %RAX, align 8, !tbaa !2428
  store i64 %213, i64* %PC, align 8, !tbaa !2428
  switch i64 %213, label %242 [
    i64 4197124, label %block_400b04
    i64 4196874, label %block_400a0a
    i64 4196624, label %block_400910
    i64 4196374, label %block_400816
    i64 4196124, label %block_40071c
    i64 4195874, label %block_400622
    i64 4197174, label %block_400b36
    i64 4196924, label %block_400a3c
    i64 4196574, label %block_4008de
    i64 4196024, label %block_4006b8
    i64 4196324, label %block_4007e4
    i64 4195774, label %block_4005be
    i64 4195824, label %block_4005f0
    i64 4195705, label %block_400579
    i64 4196974, label %block_400a6e
    i64 4196274, label %block_4007b2
    i64 4195724, label %block_40058c
    i64 4196824, label %block_4009d8
    i64 4196524, label %block_4008ac
    i64 4197074, label %block_400ad2
    i64 4195924, label %block_400654
    i64 4196074, label %block_4006ea
    i64 4197224, label %block_400b68
    i64 4195974, label %block_400686
    i64 4196224, label %block_400780
    i64 4196774, label %block_4009a6
    i64 4196474, label %block_40087a
    i64 4196724, label %block_400974
    i64 4197024, label %block_400aa0
    i64 4196174, label %block_40074e
    i64 4196424, label %block_400848
    i64 4196674, label %block_400942
  ]

block_400622:                                     ; preds = %block_400586
  %214 = add i64 %209, -12
  store i64 4195881, i64* %PC, align 8
  %215 = inttoptr i64 %214 to i32*
  store i32 4, i32* %215, align 4
  %216 = load i64, i64* %PC, align 8
  %217 = tail call %struct.Memory* @sub_400629(%struct.State* nonnull %0, i64 %216, %struct.Memory* %2)
  ret %struct.Memory* %217

block_40071c:                                     ; preds = %block_400586
  %218 = add i64 %209, -12
  store i64 4196131, i64* %PC, align 8
  %219 = inttoptr i64 %218 to i32*
  store i32 9, i32* %219, align 4
  %220 = load i64, i64* %PC, align 8
  %221 = tail call %struct.Memory* @sub_400723(%struct.State* nonnull %0, i64 %220, %struct.Memory* %2)
  ret %struct.Memory* %221

block_400816:                                     ; preds = %block_400586
  %222 = add i64 %209, -12
  store i64 4196381, i64* %PC, align 8
  %223 = inttoptr i64 %222 to i32*
  store i32 14, i32* %223, align 4
  %224 = load i64, i64* %PC, align 8
  %225 = tail call %struct.Memory* @sub_40081d(%struct.State* nonnull %0, i64 %224, %struct.Memory* %2)
  ret %struct.Memory* %225

block_400910:                                     ; preds = %block_400586
  %226 = add i64 %209, -12
  store i64 4196631, i64* %PC, align 8
  %227 = inttoptr i64 %226 to i32*
  store i32 19, i32* %227, align 4
  %228 = load i64, i64* %PC, align 8
  %229 = tail call %struct.Memory* @sub_400917(%struct.State* nonnull %0, i64 %228, %struct.Memory* %2)
  ret %struct.Memory* %229

block_400a0a:                                     ; preds = %block_400586
  %230 = add i64 %209, -12
  store i64 4196881, i64* %PC, align 8
  %231 = inttoptr i64 %230 to i32*
  store i32 24, i32* %231, align 4
  %232 = load i64, i64* %PC, align 8
  %233 = tail call %struct.Memory* @sub_400a11(%struct.State* nonnull %0, i64 %232, %struct.Memory* %2)
  ret %struct.Memory* %233

block_400579:                                     ; preds = %block_400586
  %234 = add i64 %209, -12
  store i64 4195712, i64* %PC, align 8
  %235 = inttoptr i64 %234 to i32*
  store i32 0, i32* %235, align 4
  %236 = load i64, i64* %PC, align 8
  %237 = tail call %struct.Memory* @sub_400580(%struct.State* nonnull %0, i64 %236, %struct.Memory* %2)
  ret %struct.Memory* %237

block_400b04:                                     ; preds = %block_400586
  %238 = add i64 %209, -12
  store i64 4197131, i64* %PC, align 8
  %239 = inttoptr i64 %238 to i32*
  store i32 29, i32* %239, align 4
  %240 = load i64, i64* %PC, align 8
  %241 = tail call %struct.Memory* @sub_400b0b(%struct.State* nonnull %0, i64 %240, %struct.Memory* %2)
  ret %struct.Memory* %241

; <label>:242:                                    ; preds = %block_400586
  %243 = tail call %struct.Memory* @__remill_jump(%struct.State* nonnull %0, i64 %213, %struct.Memory* %2)
  ret %struct.Memory* %243
}

; Function Attrs: noinline nounwind
define %struct.Memory* @sub_4006f1(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) local_unnamed_addr #6 {
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %PC, align 8
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RSP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %10 = bitcast i64* %RAX to i32**
  br label %block_4006f1

block_4005f0:                                     ; preds = %block_400586
  %11 = add i64 %245, -12
  store i64 4195831, i64* %PC, align 8
  %12 = inttoptr i64 %11 to i32*
  store i32 3, i32* %12, align 4
  %13 = load i64, i64* %RBP, align 8
  %14 = add i64 %13, -12
  %15 = load i64, i64* %PC, align 8
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC, align 8
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RDI, align 8, !tbaa !2428
  %20 = add i64 %15, -231
  br label %block_400586.backedge

block_400586.backedge:                            ; preds = %block_4005f0, %block_4006b8, %block_4007b2, %block_4008ac, %block_400974, %block_400a6e, %block_400b36
  %.sink274 = phi i64 [ %15, %block_4005f0 ], [ %50, %block_4006b8 ], [ %60, %block_4007b2 ], [ %70, %block_4008ac ], [ %96, %block_400974 ], [ %154, %block_400a6e ], [ %194, %block_400b36 ]
  %.sink269 = phi i64 [ %20, %block_4005f0 ], [ %55, %block_4006b8 ], [ %65, %block_4007b2 ], [ %75, %block_4008ac ], [ %101, %block_400974 ], [ %159, %block_400a6e ], [ %199, %block_400b36 ]
  %.sink5.be = phi i64 [ 151, %block_4005f0 ], [ 351, %block_4006b8 ], [ 601, %block_4007b2 ], [ 851, %block_4008ac ], [ 1051, %block_400974 ], [ 1301, %block_400a6e ], [ 1501, %block_400b36 ]
  %21 = add i64 %.sink274, 8
  %22 = load i64, i64* %RSP, align 8, !tbaa !2428
  %23 = add i64 %22, -8
  %24 = inttoptr i64 %23 to i64*
  store i64 %21, i64* %24, align 8
  store i64 %23, i64* %RSP, align 8, !tbaa !2428
  store i64 %.sink269, i64* %PC, align 8, !tbaa !2428
  %25 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %.sink269, %struct.Memory* %2)
  br label %block_400586

block_4007e4:                                     ; preds = %block_400586
  %26 = add i64 %245, -12
  store i64 4196331, i64* %PC, align 8
  %27 = inttoptr i64 %26 to i32*
  store i32 13, i32* %27, align 4
  %28 = load i64, i64* %PC, align 8
  %29 = tail call %struct.Memory* @sub_4007eb(%struct.State* nonnull %0, i64 %28, %struct.Memory* %2)
  ret %struct.Memory* %29

block_4008de:                                     ; preds = %block_400586
  %30 = add i64 %245, -12
  store i64 4196581, i64* %PC, align 8
  %31 = inttoptr i64 %30 to i32*
  store i32 18, i32* %31, align 4
  %32 = load i64, i64* %PC, align 8
  %33 = tail call %struct.Memory* @sub_4008e5(%struct.State* nonnull %0, i64 %32, %struct.Memory* %2)
  ret %struct.Memory* %33

block_4009d8:                                     ; preds = %block_400586
  %34 = add i64 %245, -12
  store i64 4196831, i64* %PC, align 8
  %35 = inttoptr i64 %34 to i32*
  store i32 23, i32* %35, align 4
  %36 = load i64, i64* %PC, align 8
  %37 = tail call %struct.Memory* @sub_4009df(%struct.State* nonnull %0, i64 %36, %struct.Memory* %2)
  ret %struct.Memory* %37

block_400ad2:                                     ; preds = %block_400586
  %38 = add i64 %245, -12
  store i64 4197081, i64* %PC, align 8
  %39 = inttoptr i64 %38 to i32*
  store i32 28, i32* %39, align 4
  %40 = load i64, i64* %PC, align 8
  %41 = tail call %struct.Memory* @sub_400ad9(%struct.State* nonnull %0, i64 %40, %struct.Memory* %2)
  ret %struct.Memory* %41

block_4005be:                                     ; preds = %block_400586
  %42 = add i64 %245, -12
  store i64 4195781, i64* %PC, align 8
  %43 = inttoptr i64 %42 to i32*
  store i32 2, i32* %43, align 4
  %44 = load i64, i64* %PC, align 8
  %45 = tail call %struct.Memory* @sub_4005c5(%struct.State* nonnull %0, i64 %44, %struct.Memory* %2)
  ret %struct.Memory* %45

block_4006b8:                                     ; preds = %block_400586
  %46 = add i64 %245, -12
  store i64 4196031, i64* %PC, align 8
  %47 = inttoptr i64 %46 to i32*
  store i32 7, i32* %47, align 4
  %48 = load i64, i64* %RBP, align 8
  %49 = add i64 %48, -12
  %50 = load i64, i64* %PC, align 8
  %51 = add i64 %50, 3
  store i64 %51, i64* %PC, align 8
  %52 = inttoptr i64 %49 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = zext i32 %53 to i64
  store i64 %54, i64* %RDI, align 8, !tbaa !2428
  %55 = add i64 %50, -431
  br label %block_400586.backedge

block_4007b2:                                     ; preds = %block_400586
  %56 = add i64 %245, -12
  store i64 4196281, i64* %PC, align 8
  %57 = inttoptr i64 %56 to i32*
  store i32 12, i32* %57, align 4
  %58 = load i64, i64* %RBP, align 8
  %59 = add i64 %58, -12
  %60 = load i64, i64* %PC, align 8
  %61 = add i64 %60, 3
  store i64 %61, i64* %PC, align 8
  %62 = inttoptr i64 %59 to i32*
  %63 = load i32, i32* %62, align 4
  %64 = zext i32 %63 to i64
  store i64 %64, i64* %RDI, align 8, !tbaa !2428
  %65 = add i64 %60, -681
  br label %block_400586.backedge

block_4008ac:                                     ; preds = %block_400586
  %66 = add i64 %245, -12
  store i64 4196531, i64* %PC, align 8
  %67 = inttoptr i64 %66 to i32*
  store i32 17, i32* %67, align 4
  %68 = load i64, i64* %RBP, align 8
  %69 = add i64 %68, -12
  %70 = load i64, i64* %PC, align 8
  %71 = add i64 %70, 3
  store i64 %71, i64* %PC, align 8
  %72 = inttoptr i64 %69 to i32*
  %73 = load i32, i32* %72, align 4
  %74 = zext i32 %73 to i64
  store i64 %74, i64* %RDI, align 8, !tbaa !2428
  %75 = add i64 %70, -931
  br label %block_400586.backedge

block_4009a6:                                     ; preds = %block_400586
  %76 = add i64 %245, -12
  store i64 4196781, i64* %PC, align 8
  %77 = inttoptr i64 %76 to i32*
  store i32 22, i32* %77, align 4
  %78 = load i64, i64* %PC, align 8
  %79 = tail call %struct.Memory* @sub_4009ad(%struct.State* nonnull %0, i64 %78, %struct.Memory* %2)
  ret %struct.Memory* %79

block_400aa0:                                     ; preds = %block_400586
  %80 = add i64 %245, -12
  store i64 4197031, i64* %PC, align 8
  %81 = inttoptr i64 %80 to i32*
  store i32 27, i32* %81, align 4
  %82 = load i64, i64* %PC, align 8
  %83 = tail call %struct.Memory* @sub_400aa7(%struct.State* nonnull %0, i64 %82, %struct.Memory* %2)
  ret %struct.Memory* %83

block_400686:                                     ; preds = %block_400586
  %84 = add i64 %245, -12
  store i64 4195981, i64* %PC, align 8
  %85 = inttoptr i64 %84 to i32*
  store i32 6, i32* %85, align 4
  %86 = load i64, i64* %PC, align 8
  %87 = tail call %struct.Memory* @sub_40068d(%struct.State* nonnull %0, i64 %86, %struct.Memory* %2)
  ret %struct.Memory* %87

block_40087a:                                     ; preds = %block_400586
  %88 = add i64 %245, -12
  store i64 4196481, i64* %PC, align 8
  %89 = inttoptr i64 %88 to i32*
  store i32 16, i32* %89, align 4
  %90 = load i64, i64* %PC, align 8
  %91 = tail call %struct.Memory* @sub_400881(%struct.State* nonnull %0, i64 %90, %struct.Memory* %2)
  ret %struct.Memory* %91

block_400974:                                     ; preds = %block_400586
  %92 = add i64 %245, -12
  store i64 4196731, i64* %PC, align 8
  %93 = inttoptr i64 %92 to i32*
  store i32 21, i32* %93, align 4
  %94 = load i64, i64* %RBP, align 8
  %95 = add i64 %94, -12
  %96 = load i64, i64* %PC, align 8
  %97 = add i64 %96, 3
  store i64 %97, i64* %PC, align 8
  %98 = inttoptr i64 %95 to i32*
  %99 = load i32, i32* %98, align 4
  %100 = zext i32 %99 to i64
  store i64 %100, i64* %RDI, align 8, !tbaa !2428
  %101 = add i64 %96, -1131
  br label %block_400586.backedge

block_4006f1:                                     ; preds = %block_4006ea, %3
  %102 = phi i64 [ %.pre, %block_4006ea ], [ %1, %3 ]
  %103 = load i64, i64* %RBP, align 8
  %104 = add i64 %103, -12
  %105 = add i64 %102, 3
  store i64 %105, i64* %PC, align 8
  %106 = inttoptr i64 %104 to i32*
  %107 = load i32, i32* %106, align 4
  %108 = zext i32 %107 to i64
  store i64 %108, i64* %RDI, align 8, !tbaa !2428
  %109 = add i64 %102, -481
  %110 = add i64 %102, 8
  %111 = load i64, i64* %RSP, align 8, !tbaa !2428
  %112 = add i64 %111, -8
  %113 = inttoptr i64 %112 to i64*
  store i64 %110, i64* %113, align 8
  store i64 %112, i64* %RSP, align 8, !tbaa !2428
  store i64 %109, i64* %PC, align 8, !tbaa !2428
  %114 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %109, %struct.Memory* %2)
  br label %block_400586

block_400579:                                     ; preds = %block_400586
  %115 = add i64 %245, -12
  store i64 4195712, i64* %PC, align 8
  %116 = inttoptr i64 %115 to i32*
  store i32 0, i32* %116, align 4
  %117 = load i64, i64* %RSP, align 8
  %118 = load i64, i64* %PC, align 8
  %119 = add i64 %117, 48
  store i64 %119, i64* %RSP, align 8, !tbaa !2428
  %120 = icmp ugt i64 %117, -49
  %121 = zext i1 %120 to i8
  store i8 %121, i8* %4, align 1, !tbaa !2432
  %122 = trunc i64 %119 to i32
  %123 = and i32 %122, 255
  %124 = tail call i32 @llvm.ctpop.i32(i32 %123) #9
  %125 = trunc i32 %124 to i8
  %126 = and i8 %125, 1
  %127 = xor i8 %126, 1
  store i8 %127, i8* %5, align 1, !tbaa !2446
  %128 = xor i64 %117, 16
  %129 = xor i64 %128, %119
  %130 = lshr i64 %129, 4
  %131 = trunc i64 %130 to i8
  %132 = and i8 %131, 1
  store i8 %132, i8* %6, align 1, !tbaa !2447
  %133 = icmp eq i64 %119, 0
  %134 = zext i1 %133 to i8
  store i8 %134, i8* %7, align 1, !tbaa !2448
  %135 = lshr i64 %119, 63
  %136 = trunc i64 %135 to i8
  store i8 %136, i8* %8, align 1, !tbaa !2449
  %137 = lshr i64 %117, 63
  %138 = xor i64 %135, %137
  %139 = add nuw nsw i64 %138, %135
  %140 = icmp eq i64 %139, 2
  %141 = zext i1 %140 to i8
  store i8 %141, i8* %9, align 1, !tbaa !2450
  %142 = add i64 %118, 5
  store i64 %142, i64* %PC, align 8
  %143 = add i64 %117, 56
  %144 = inttoptr i64 %119 to i64*
  %145 = load i64, i64* %144, align 8
  store i64 %145, i64* %RBP, align 8, !tbaa !2428
  store i64 %143, i64* %RSP, align 8, !tbaa !2428
  %146 = add i64 %118, 6
  store i64 %146, i64* %PC, align 8
  %147 = inttoptr i64 %143 to i64*
  %148 = load i64, i64* %147, align 8
  store i64 %148, i64* %PC, align 8, !tbaa !2428
  %149 = add i64 %117, 64
  store i64 %149, i64* %RSP, align 8, !tbaa !2428
  ret %struct.Memory* %2

block_400a6e:                                     ; preds = %block_400586
  %150 = add i64 %245, -12
  store i64 4196981, i64* %PC, align 8
  %151 = inttoptr i64 %150 to i32*
  store i32 26, i32* %151, align 4
  %152 = load i64, i64* %RBP, align 8
  %153 = add i64 %152, -12
  %154 = load i64, i64* %PC, align 8
  %155 = add i64 %154, 3
  store i64 %155, i64* %PC, align 8
  %156 = inttoptr i64 %153 to i32*
  %157 = load i32, i32* %156, align 4
  %158 = zext i32 %157 to i64
  store i64 %158, i64* %RDI, align 8, !tbaa !2428
  %159 = add i64 %154, -1381
  br label %block_400586.backedge

block_400b68:                                     ; preds = %block_400586
  %160 = add i64 %245, -12
  store i64 4197231, i64* %PC, align 8
  %161 = inttoptr i64 %160 to i32*
  store i32 31, i32* %161, align 4
  %162 = load i64, i64* %PC, align 8
  %163 = tail call %struct.Memory* @sub_400b6f(%struct.State* nonnull %0, i64 %162, %struct.Memory* %2)
  ret %struct.Memory* %163

block_400654:                                     ; preds = %block_400586
  %164 = add i64 %245, -12
  store i64 4195931, i64* %PC, align 8
  %165 = inttoptr i64 %164 to i32*
  store i32 5, i32* %165, align 4
  %166 = load i64, i64* %PC, align 8
  %167 = tail call %struct.Memory* @sub_40065b(%struct.State* nonnull %0, i64 %166, %struct.Memory* %2)
  ret %struct.Memory* %167

block_40074e:                                     ; preds = %block_400586
  %168 = add i64 %245, -12
  store i64 4196181, i64* %PC, align 8
  %169 = inttoptr i64 %168 to i32*
  store i32 10, i32* %169, align 4
  %170 = load i64, i64* %PC, align 8
  %171 = tail call %struct.Memory* @sub_400755(%struct.State* nonnull %0, i64 %170, %struct.Memory* %2)
  ret %struct.Memory* %171

block_400848:                                     ; preds = %block_400586
  %172 = add i64 %245, -12
  store i64 4196431, i64* %PC, align 8
  %173 = inttoptr i64 %172 to i32*
  store i32 15, i32* %173, align 4
  %174 = load i64, i64* %PC, align 8
  %175 = tail call %struct.Memory* @sub_40084f(%struct.State* nonnull %0, i64 %174, %struct.Memory* %2)
  ret %struct.Memory* %175

block_4006ea:                                     ; preds = %block_400586
  %176 = add i64 %245, -12
  store i64 4196081, i64* %PC, align 8
  %177 = inttoptr i64 %176 to i32*
  store i32 8, i32* %177, align 4
  %.pre = load i64, i64* %PC, align 8
  br label %block_4006f1

block_400942:                                     ; preds = %block_400586
  %178 = add i64 %245, -12
  store i64 4196681, i64* %PC, align 8
  %179 = inttoptr i64 %178 to i32*
  store i32 20, i32* %179, align 4
  %180 = load i64, i64* %PC, align 8
  %181 = tail call %struct.Memory* @sub_400949(%struct.State* nonnull %0, i64 %180, %struct.Memory* %2)
  ret %struct.Memory* %181

block_40058c:                                     ; preds = %block_400586
  %182 = add i64 %245, -12
  store i64 4195731, i64* %PC, align 8
  %183 = inttoptr i64 %182 to i32*
  store i32 1, i32* %183, align 4
  %184 = load i64, i64* %PC, align 8
  %185 = tail call %struct.Memory* @sub_400593(%struct.State* nonnull %0, i64 %184, %struct.Memory* %2)
  ret %struct.Memory* %185

block_400a3c:                                     ; preds = %block_400586
  %186 = add i64 %245, -12
  store i64 4196931, i64* %PC, align 8
  %187 = inttoptr i64 %186 to i32*
  store i32 25, i32* %187, align 4
  %188 = load i64, i64* %PC, align 8
  %189 = tail call %struct.Memory* @sub_400a43(%struct.State* nonnull %0, i64 %188, %struct.Memory* %2)
  ret %struct.Memory* %189

block_400b36:                                     ; preds = %block_400586
  %190 = add i64 %245, -12
  store i64 4197181, i64* %PC, align 8
  %191 = inttoptr i64 %190 to i32*
  store i32 30, i32* %191, align 4
  %192 = load i64, i64* %RBP, align 8
  %193 = add i64 %192, -12
  %194 = load i64, i64* %PC, align 8
  %195 = add i64 %194, 3
  store i64 %195, i64* %PC, align 8
  %196 = inttoptr i64 %193 to i32*
  %197 = load i32, i32* %196, align 4
  %198 = zext i32 %197 to i64
  store i64 %198, i64* %RDI, align 8, !tbaa !2428
  %199 = add i64 %194, -1581
  br label %block_400586.backedge

block_400586:                                     ; preds = %block_400586.backedge, %block_4006f1
  %.sink5 = phi i64 [ 401, %block_4006f1 ], [ %.sink5.be, %block_400586.backedge ]
  %200 = load i64, i64* %RBP, align 8
  %201 = add i64 %200, -8
  %202 = load i64, i64* %PC, align 8
  %203 = add i64 %202, 4
  store i64 %203, i64* %PC, align 8
  %204 = inttoptr i64 %201 to i64*
  %205 = load i64, i64* %204, align 8
  store i64 %205, i64* %RAX, align 8, !tbaa !2428
  %206 = add i64 %205, 4
  store i64 %206, i64* %RCX, align 8, !tbaa !2428
  %207 = icmp ugt i64 %205, -5
  %208 = zext i1 %207 to i8
  store i8 %208, i8* %4, align 1, !tbaa !2432
  %209 = trunc i64 %206 to i32
  %210 = and i32 %209, 255
  %211 = tail call i32 @llvm.ctpop.i32(i32 %210) #9
  %212 = trunc i32 %211 to i8
  %213 = and i8 %212, 1
  %214 = xor i8 %213, 1
  store i8 %214, i8* %5, align 1, !tbaa !2446
  %215 = xor i64 %206, %205
  %216 = lshr i64 %215, 4
  %217 = trunc i64 %216 to i8
  %218 = and i8 %217, 1
  store i8 %218, i8* %6, align 1, !tbaa !2447
  %219 = icmp eq i64 %206, 0
  %220 = zext i1 %219 to i8
  store i8 %220, i8* %7, align 1, !tbaa !2448
  %221 = lshr i64 %206, 63
  %222 = trunc i64 %221 to i8
  store i8 %222, i8* %8, align 1, !tbaa !2449
  %223 = lshr i64 %205, 63
  %224 = xor i64 %221, %223
  %225 = add nuw nsw i64 %224, %221
  %226 = icmp eq i64 %225, 2
  %227 = zext i1 %226 to i8
  store i8 %227, i8* %9, align 1, !tbaa !2450
  %228 = add i64 %202, 15
  store i64 %228, i64* %PC, align 8
  store i64 %206, i64* %204, align 8
  %229 = load i32*, i32** %10, align 8
  %230 = load i64, i64* %PC, align 8
  %231 = add i64 %230, 3
  store i64 %231, i64* %PC, align 8
  %232 = load i32, i32* %229, align 4
  %233 = sext i32 %232 to i64
  store i64 %233, i64* %RAX, align 8, !tbaa !2428
  %234 = shl nsw i64 %233, 3
  %235 = add i64 %234, add (i64 ptrtoint (%seg_602020__data_type* @seg_602020__data to i64), i64 16)
  %236 = add i64 %230, 11
  store i64 %236, i64* %PC, align 8
  %237 = inttoptr i64 %235 to i64*
  %238 = load i64, i64* %237, align 8
  store i64 %238, i64* %RAX, align 8, !tbaa !2428
  %239 = load i64, i64* %RBP, align 8
  %240 = add i64 %239, -40
  %241 = add i64 %230, 15
  store i64 %241, i64* %PC, align 8
  %242 = inttoptr i64 %240 to i64*
  store i64 %238, i64* %242, align 8
  %243 = load i64, i64* %PC, align 8
  %244 = sub i64 %243, %.sink5
  %245 = load i64, i64* %RBP, align 8
  %246 = add i64 %245, -40
  %247 = add i64 %244, 4
  store i64 %247, i64* %PC, align 8
  %248 = inttoptr i64 %246 to i64*
  %249 = load i64, i64* %248, align 8
  store i64 %249, i64* %RAX, align 8, !tbaa !2428
  store i64 %249, i64* %PC, align 8, !tbaa !2428
  switch i64 %249, label %278 [
    i64 4196224, label %block_400780
    i64 4197124, label %block_400b04
    i64 4196874, label %block_400a0a
    i64 4196624, label %block_400910
    i64 4196374, label %block_400816
    i64 4196124, label %block_40071c
    i64 4195874, label %block_400622
    i64 4197174, label %block_400b36
    i64 4196924, label %block_400a3c
    i64 4196774, label %block_4009a6
    i64 4196524, label %block_4008ac
    i64 4197074, label %block_400ad2
    i64 4195924, label %block_400654
    i64 4195824, label %block_4005f0
    i64 4195774, label %block_4005be
    i64 4196974, label %block_400a6e
    i64 4195705, label %block_400579
    i64 4196324, label %block_4007e4
    i64 4196024, label %block_4006b8
    i64 4196574, label %block_4008de
    i64 4196274, label %block_4007b2
    i64 4195724, label %block_40058c
    i64 4196824, label %block_4009d8
    i64 4197024, label %block_400aa0
    i64 4195974, label %block_400686
    i64 4196474, label %block_40087a
    i64 4196724, label %block_400974
    i64 4197224, label %block_400b68
    i64 4196074, label %block_4006ea
    i64 4196174, label %block_40074e
    i64 4196424, label %block_400848
    i64 4196674, label %block_400942
  ]

block_400622:                                     ; preds = %block_400586
  %250 = add i64 %245, -12
  store i64 4195881, i64* %PC, align 8
  %251 = inttoptr i64 %250 to i32*
  store i32 4, i32* %251, align 4
  %252 = load i64, i64* %PC, align 8
  %253 = tail call %struct.Memory* @sub_400629(%struct.State* nonnull %0, i64 %252, %struct.Memory* %2)
  ret %struct.Memory* %253

block_40071c:                                     ; preds = %block_400586
  %254 = add i64 %245, -12
  store i64 4196131, i64* %PC, align 8
  %255 = inttoptr i64 %254 to i32*
  store i32 9, i32* %255, align 4
  %256 = load i64, i64* %PC, align 8
  %257 = tail call %struct.Memory* @sub_400723(%struct.State* nonnull %0, i64 %256, %struct.Memory* %2)
  ret %struct.Memory* %257

block_400816:                                     ; preds = %block_400586
  %258 = add i64 %245, -12
  store i64 4196381, i64* %PC, align 8
  %259 = inttoptr i64 %258 to i32*
  store i32 14, i32* %259, align 4
  %260 = load i64, i64* %PC, align 8
  %261 = tail call %struct.Memory* @sub_40081d(%struct.State* nonnull %0, i64 %260, %struct.Memory* %2)
  ret %struct.Memory* %261

block_400910:                                     ; preds = %block_400586
  %262 = add i64 %245, -12
  store i64 4196631, i64* %PC, align 8
  %263 = inttoptr i64 %262 to i32*
  store i32 19, i32* %263, align 4
  %264 = load i64, i64* %PC, align 8
  %265 = tail call %struct.Memory* @sub_400917(%struct.State* nonnull %0, i64 %264, %struct.Memory* %2)
  ret %struct.Memory* %265

block_400a0a:                                     ; preds = %block_400586
  %266 = add i64 %245, -12
  store i64 4196881, i64* %PC, align 8
  %267 = inttoptr i64 %266 to i32*
  store i32 24, i32* %267, align 4
  %268 = load i64, i64* %PC, align 8
  %269 = tail call %struct.Memory* @sub_400a11(%struct.State* nonnull %0, i64 %268, %struct.Memory* %2)
  ret %struct.Memory* %269

block_400b04:                                     ; preds = %block_400586
  %270 = add i64 %245, -12
  store i64 4197131, i64* %PC, align 8
  %271 = inttoptr i64 %270 to i32*
  store i32 29, i32* %271, align 4
  %272 = load i64, i64* %PC, align 8
  %273 = tail call %struct.Memory* @sub_400b0b(%struct.State* nonnull %0, i64 %272, %struct.Memory* %2)
  ret %struct.Memory* %273

block_400780:                                     ; preds = %block_400586
  %274 = add i64 %245, -12
  store i64 4196231, i64* %PC, align 8
  %275 = inttoptr i64 %274 to i32*
  store i32 11, i32* %275, align 4
  %276 = load i64, i64* %PC, align 8
  %277 = tail call %struct.Memory* @sub_400787(%struct.State* nonnull %0, i64 %276, %struct.Memory* %2)
  ret %struct.Memory* %277

; <label>:278:                                    ; preds = %block_400586
  %279 = tail call %struct.Memory* @__remill_jump(%struct.State* nonnull %0, i64 %249, %struct.Memory* %2)
  ret %struct.Memory* %279
}

; Function Attrs: noinline nounwind
define %struct.Memory* @sub_400b6f(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) local_unnamed_addr #6 {
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %PC, align 8
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RSP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %10 = bitcast i64* %RAX to i32**
  br label %block_400b6f

block_4005f0:                                     ; preds = %block_400586
  %11 = add i64 %251, -12
  store i64 4195831, i64* %PC, align 8
  %12 = inttoptr i64 %11 to i32*
  store i32 3, i32* %12, align 4
  %13 = load i64, i64* %RBP, align 8
  %14 = add i64 %13, -12
  %15 = load i64, i64* %PC, align 8
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC, align 8
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RDI, align 8, !tbaa !2428
  %20 = add i64 %15, -231
  br label %block_400586.backedge

block_400586.backedge:                            ; preds = %block_4005f0, %block_4006b8, %block_4007b2, %block_4008ac, %block_400974, %block_400a6e, %block_4006ea, %block_400b36
  %.sink266 = phi i64 [ %15, %block_4005f0 ], [ %46, %block_4006b8 ], [ %56, %block_4007b2 ], [ %66, %block_4008ac ], [ %92, %block_400974 ], [ %154, %block_400a6e ], [ %178, %block_4006ea ], [ %200, %block_400b36 ]
  %.sink261 = phi i64 [ %20, %block_4005f0 ], [ %51, %block_4006b8 ], [ %61, %block_4007b2 ], [ %71, %block_4008ac ], [ %97, %block_400974 ], [ %159, %block_400a6e ], [ %183, %block_4006ea ], [ %205, %block_400b36 ]
  %.sink5.be = phi i64 [ 151, %block_4005f0 ], [ 351, %block_4006b8 ], [ 601, %block_4007b2 ], [ 851, %block_4008ac ], [ 1051, %block_400974 ], [ 1301, %block_400a6e ], [ 401, %block_4006ea ], [ 1501, %block_400b36 ]
  %21 = add i64 %.sink266, 8
  %22 = load i64, i64* %RSP, align 8, !tbaa !2428
  %23 = add i64 %22, -8
  %24 = inttoptr i64 %23 to i64*
  store i64 %21, i64* %24, align 8
  store i64 %23, i64* %RSP, align 8, !tbaa !2428
  store i64 %.sink261, i64* %PC, align 8, !tbaa !2428
  %25 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %.sink261, %struct.Memory* %2)
  br label %block_400586

block_4007e4:                                     ; preds = %block_400586
  %26 = add i64 %251, -12
  store i64 4196331, i64* %PC, align 8
  %27 = inttoptr i64 %26 to i32*
  store i32 13, i32* %27, align 4
  %28 = load i64, i64* %PC, align 8
  %29 = tail call %struct.Memory* @sub_4007eb(%struct.State* nonnull %0, i64 %28, %struct.Memory* %2)
  ret %struct.Memory* %29

block_4008de:                                     ; preds = %block_400586
  %30 = add i64 %251, -12
  store i64 4196581, i64* %PC, align 8
  %31 = inttoptr i64 %30 to i32*
  store i32 18, i32* %31, align 4
  %32 = load i64, i64* %PC, align 8
  %33 = tail call %struct.Memory* @sub_4008e5(%struct.State* nonnull %0, i64 %32, %struct.Memory* %2)
  ret %struct.Memory* %33

block_4009d8:                                     ; preds = %block_400586
  %34 = add i64 %251, -12
  store i64 4196831, i64* %PC, align 8
  %35 = inttoptr i64 %34 to i32*
  store i32 23, i32* %35, align 4
  %36 = load i64, i64* %PC, align 8
  %37 = tail call %struct.Memory* @sub_4009df(%struct.State* nonnull %0, i64 %36, %struct.Memory* %2)
  ret %struct.Memory* %37

block_400ad2:                                     ; preds = %block_400586
  %38 = add i64 %251, -12
  store i64 4197081, i64* %PC, align 8
  %39 = inttoptr i64 %38 to i32*
  store i32 28, i32* %39, align 4
  %40 = load i64, i64* %PC, align 8
  %41 = tail call %struct.Memory* @sub_400ad9(%struct.State* nonnull %0, i64 %40, %struct.Memory* %2)
  ret %struct.Memory* %41

block_4006b8:                                     ; preds = %block_400586
  %42 = add i64 %251, -12
  store i64 4196031, i64* %PC, align 8
  %43 = inttoptr i64 %42 to i32*
  store i32 7, i32* %43, align 4
  %44 = load i64, i64* %RBP, align 8
  %45 = add i64 %44, -12
  %46 = load i64, i64* %PC, align 8
  %47 = add i64 %46, 3
  store i64 %47, i64* %PC, align 8
  %48 = inttoptr i64 %45 to i32*
  %49 = load i32, i32* %48, align 4
  %50 = zext i32 %49 to i64
  store i64 %50, i64* %RDI, align 8, !tbaa !2428
  %51 = add i64 %46, -431
  br label %block_400586.backedge

block_4007b2:                                     ; preds = %block_400586
  %52 = add i64 %251, -12
  store i64 4196281, i64* %PC, align 8
  %53 = inttoptr i64 %52 to i32*
  store i32 12, i32* %53, align 4
  %54 = load i64, i64* %RBP, align 8
  %55 = add i64 %54, -12
  %56 = load i64, i64* %PC, align 8
  %57 = add i64 %56, 3
  store i64 %57, i64* %PC, align 8
  %58 = inttoptr i64 %55 to i32*
  %59 = load i32, i32* %58, align 4
  %60 = zext i32 %59 to i64
  store i64 %60, i64* %RDI, align 8, !tbaa !2428
  %61 = add i64 %56, -681
  br label %block_400586.backedge

block_4008ac:                                     ; preds = %block_400586
  %62 = add i64 %251, -12
  store i64 4196531, i64* %PC, align 8
  %63 = inttoptr i64 %62 to i32*
  store i32 17, i32* %63, align 4
  %64 = load i64, i64* %RBP, align 8
  %65 = add i64 %64, -12
  %66 = load i64, i64* %PC, align 8
  %67 = add i64 %66, 3
  store i64 %67, i64* %PC, align 8
  %68 = inttoptr i64 %65 to i32*
  %69 = load i32, i32* %68, align 4
  %70 = zext i32 %69 to i64
  store i64 %70, i64* %RDI, align 8, !tbaa !2428
  %71 = add i64 %66, -931
  br label %block_400586.backedge

block_4009a6:                                     ; preds = %block_400586
  %72 = add i64 %251, -12
  store i64 4196781, i64* %PC, align 8
  %73 = inttoptr i64 %72 to i32*
  store i32 22, i32* %73, align 4
  %74 = load i64, i64* %PC, align 8
  %75 = tail call %struct.Memory* @sub_4009ad(%struct.State* nonnull %0, i64 %74, %struct.Memory* %2)
  ret %struct.Memory* %75

block_400aa0:                                     ; preds = %block_400586
  %76 = add i64 %251, -12
  store i64 4197031, i64* %PC, align 8
  %77 = inttoptr i64 %76 to i32*
  store i32 27, i32* %77, align 4
  %78 = load i64, i64* %PC, align 8
  %79 = tail call %struct.Memory* @sub_400aa7(%struct.State* nonnull %0, i64 %78, %struct.Memory* %2)
  ret %struct.Memory* %79

block_400686:                                     ; preds = %block_400586
  %80 = add i64 %251, -12
  store i64 4195981, i64* %PC, align 8
  %81 = inttoptr i64 %80 to i32*
  store i32 6, i32* %81, align 4
  %82 = load i64, i64* %PC, align 8
  %83 = tail call %struct.Memory* @sub_40068d(%struct.State* nonnull %0, i64 %82, %struct.Memory* %2)
  ret %struct.Memory* %83

block_40087a:                                     ; preds = %block_400586
  %84 = add i64 %251, -12
  store i64 4196481, i64* %PC, align 8
  %85 = inttoptr i64 %84 to i32*
  store i32 16, i32* %85, align 4
  %86 = load i64, i64* %PC, align 8
  %87 = tail call %struct.Memory* @sub_400881(%struct.State* nonnull %0, i64 %86, %struct.Memory* %2)
  ret %struct.Memory* %87

block_400974:                                     ; preds = %block_400586
  %88 = add i64 %251, -12
  store i64 4196731, i64* %PC, align 8
  %89 = inttoptr i64 %88 to i32*
  store i32 21, i32* %89, align 4
  %90 = load i64, i64* %RBP, align 8
  %91 = add i64 %90, -12
  %92 = load i64, i64* %PC, align 8
  %93 = add i64 %92, 3
  store i64 %93, i64* %PC, align 8
  %94 = inttoptr i64 %91 to i32*
  %95 = load i32, i32* %94, align 4
  %96 = zext i32 %95 to i64
  store i64 %96, i64* %RDI, align 8, !tbaa !2428
  %97 = add i64 %92, -1131
  br label %block_400586.backedge

block_4005be:                                     ; preds = %block_400586
  %98 = add i64 %251, -12
  store i64 4195781, i64* %PC, align 8
  %99 = inttoptr i64 %98 to i32*
  store i32 2, i32* %99, align 4
  %100 = load i64, i64* %PC, align 8
  %101 = tail call %struct.Memory* @sub_4005c5(%struct.State* nonnull %0, i64 %100, %struct.Memory* %2)
  ret %struct.Memory* %101

block_400b6f:                                     ; preds = %block_400b68, %3
  %102 = phi i64 [ %.pre, %block_400b68 ], [ %1, %3 ]
  %103 = load i64, i64* %RBP, align 8
  %104 = add i64 %103, -12
  %105 = add i64 %102, 3
  store i64 %105, i64* %PC, align 8
  %106 = inttoptr i64 %104 to i32*
  %107 = load i32, i32* %106, align 4
  %108 = zext i32 %107 to i64
  store i64 %108, i64* %RDI, align 8, !tbaa !2428
  %109 = add i64 %102, -1631
  %110 = add i64 %102, 8
  %111 = load i64, i64* %RSP, align 8, !tbaa !2428
  %112 = add i64 %111, -8
  %113 = inttoptr i64 %112 to i64*
  store i64 %110, i64* %113, align 8
  store i64 %112, i64* %RSP, align 8, !tbaa !2428
  store i64 %109, i64* %PC, align 8, !tbaa !2428
  %114 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %109, %struct.Memory* %2)
  br label %block_400586

block_400579:                                     ; preds = %block_400586
  %115 = add i64 %251, -12
  store i64 4195712, i64* %PC, align 8
  %116 = inttoptr i64 %115 to i32*
  store i32 0, i32* %116, align 4
  %117 = load i64, i64* %RSP, align 8
  %118 = load i64, i64* %PC, align 8
  %119 = add i64 %117, 48
  store i64 %119, i64* %RSP, align 8, !tbaa !2428
  %120 = icmp ugt i64 %117, -49
  %121 = zext i1 %120 to i8
  store i8 %121, i8* %4, align 1, !tbaa !2432
  %122 = trunc i64 %119 to i32
  %123 = and i32 %122, 255
  %124 = tail call i32 @llvm.ctpop.i32(i32 %123) #9
  %125 = trunc i32 %124 to i8
  %126 = and i8 %125, 1
  %127 = xor i8 %126, 1
  store i8 %127, i8* %5, align 1, !tbaa !2446
  %128 = xor i64 %117, 16
  %129 = xor i64 %128, %119
  %130 = lshr i64 %129, 4
  %131 = trunc i64 %130 to i8
  %132 = and i8 %131, 1
  store i8 %132, i8* %6, align 1, !tbaa !2447
  %133 = icmp eq i64 %119, 0
  %134 = zext i1 %133 to i8
  store i8 %134, i8* %7, align 1, !tbaa !2448
  %135 = lshr i64 %119, 63
  %136 = trunc i64 %135 to i8
  store i8 %136, i8* %8, align 1, !tbaa !2449
  %137 = lshr i64 %117, 63
  %138 = xor i64 %135, %137
  %139 = add nuw nsw i64 %138, %135
  %140 = icmp eq i64 %139, 2
  %141 = zext i1 %140 to i8
  store i8 %141, i8* %9, align 1, !tbaa !2450
  %142 = add i64 %118, 5
  store i64 %142, i64* %PC, align 8
  %143 = add i64 %117, 56
  %144 = inttoptr i64 %119 to i64*
  %145 = load i64, i64* %144, align 8
  store i64 %145, i64* %RBP, align 8, !tbaa !2428
  store i64 %143, i64* %RSP, align 8, !tbaa !2428
  %146 = add i64 %118, 6
  store i64 %146, i64* %PC, align 8
  %147 = inttoptr i64 %143 to i64*
  %148 = load i64, i64* %147, align 8
  store i64 %148, i64* %PC, align 8, !tbaa !2428
  %149 = add i64 %117, 64
  store i64 %149, i64* %RSP, align 8, !tbaa !2428
  ret %struct.Memory* %2

block_400a6e:                                     ; preds = %block_400586
  %150 = add i64 %251, -12
  store i64 4196981, i64* %PC, align 8
  %151 = inttoptr i64 %150 to i32*
  store i32 26, i32* %151, align 4
  %152 = load i64, i64* %RBP, align 8
  %153 = add i64 %152, -12
  %154 = load i64, i64* %PC, align 8
  %155 = add i64 %154, 3
  store i64 %155, i64* %PC, align 8
  %156 = inttoptr i64 %153 to i32*
  %157 = load i32, i32* %156, align 4
  %158 = zext i32 %157 to i64
  store i64 %158, i64* %RDI, align 8, !tbaa !2428
  %159 = add i64 %154, -1381
  br label %block_400586.backedge

block_400b68:                                     ; preds = %block_400586
  %160 = add i64 %251, -12
  store i64 4197231, i64* %PC, align 8
  %161 = inttoptr i64 %160 to i32*
  store i32 31, i32* %161, align 4
  %.pre = load i64, i64* %PC, align 8
  br label %block_400b6f

block_400654:                                     ; preds = %block_400586
  %162 = add i64 %251, -12
  store i64 4195931, i64* %PC, align 8
  %163 = inttoptr i64 %162 to i32*
  store i32 5, i32* %163, align 4
  %164 = load i64, i64* %PC, align 8
  %165 = tail call %struct.Memory* @sub_40065b(%struct.State* nonnull %0, i64 %164, %struct.Memory* %2)
  ret %struct.Memory* %165

block_40074e:                                     ; preds = %block_400586
  %166 = add i64 %251, -12
  store i64 4196181, i64* %PC, align 8
  %167 = inttoptr i64 %166 to i32*
  store i32 10, i32* %167, align 4
  %168 = load i64, i64* %PC, align 8
  %169 = tail call %struct.Memory* @sub_400755(%struct.State* nonnull %0, i64 %168, %struct.Memory* %2)
  ret %struct.Memory* %169

block_400848:                                     ; preds = %block_400586
  %170 = add i64 %251, -12
  store i64 4196431, i64* %PC, align 8
  %171 = inttoptr i64 %170 to i32*
  store i32 15, i32* %171, align 4
  %172 = load i64, i64* %PC, align 8
  %173 = tail call %struct.Memory* @sub_40084f(%struct.State* nonnull %0, i64 %172, %struct.Memory* %2)
  ret %struct.Memory* %173

block_4006ea:                                     ; preds = %block_400586
  %174 = add i64 %251, -12
  store i64 4196081, i64* %PC, align 8
  %175 = inttoptr i64 %174 to i32*
  store i32 8, i32* %175, align 4
  %176 = load i64, i64* %RBP, align 8
  %177 = add i64 %176, -12
  %178 = load i64, i64* %PC, align 8
  %179 = add i64 %178, 3
  store i64 %179, i64* %PC, align 8
  %180 = inttoptr i64 %177 to i32*
  %181 = load i32, i32* %180, align 4
  %182 = zext i32 %181 to i64
  store i64 %182, i64* %RDI, align 8, !tbaa !2428
  %183 = add i64 %178, -481
  br label %block_400586.backedge

block_400942:                                     ; preds = %block_400586
  %184 = add i64 %251, -12
  store i64 4196681, i64* %PC, align 8
  %185 = inttoptr i64 %184 to i32*
  store i32 20, i32* %185, align 4
  %186 = load i64, i64* %PC, align 8
  %187 = tail call %struct.Memory* @sub_400949(%struct.State* nonnull %0, i64 %186, %struct.Memory* %2)
  ret %struct.Memory* %187

block_40058c:                                     ; preds = %block_400586
  %188 = add i64 %251, -12
  store i64 4195731, i64* %PC, align 8
  %189 = inttoptr i64 %188 to i32*
  store i32 1, i32* %189, align 4
  %190 = load i64, i64* %PC, align 8
  %191 = tail call %struct.Memory* @sub_400593(%struct.State* nonnull %0, i64 %190, %struct.Memory* %2)
  ret %struct.Memory* %191

block_400a3c:                                     ; preds = %block_400586
  %192 = add i64 %251, -12
  store i64 4196931, i64* %PC, align 8
  %193 = inttoptr i64 %192 to i32*
  store i32 25, i32* %193, align 4
  %194 = load i64, i64* %PC, align 8
  %195 = tail call %struct.Memory* @sub_400a43(%struct.State* nonnull %0, i64 %194, %struct.Memory* %2)
  ret %struct.Memory* %195

block_400b36:                                     ; preds = %block_400586
  %196 = add i64 %251, -12
  store i64 4197181, i64* %PC, align 8
  %197 = inttoptr i64 %196 to i32*
  store i32 30, i32* %197, align 4
  %198 = load i64, i64* %RBP, align 8
  %199 = add i64 %198, -12
  %200 = load i64, i64* %PC, align 8
  %201 = add i64 %200, 3
  store i64 %201, i64* %PC, align 8
  %202 = inttoptr i64 %199 to i32*
  %203 = load i32, i32* %202, align 4
  %204 = zext i32 %203 to i64
  store i64 %204, i64* %RDI, align 8, !tbaa !2428
  %205 = add i64 %200, -1581
  br label %block_400586.backedge

block_400586:                                     ; preds = %block_400586.backedge, %block_400b6f
  %.sink5 = phi i64 [ 1551, %block_400b6f ], [ %.sink5.be, %block_400586.backedge ]
  %206 = load i64, i64* %RBP, align 8
  %207 = add i64 %206, -8
  %208 = load i64, i64* %PC, align 8
  %209 = add i64 %208, 4
  store i64 %209, i64* %PC, align 8
  %210 = inttoptr i64 %207 to i64*
  %211 = load i64, i64* %210, align 8
  store i64 %211, i64* %RAX, align 8, !tbaa !2428
  %212 = add i64 %211, 4
  store i64 %212, i64* %RCX, align 8, !tbaa !2428
  %213 = icmp ugt i64 %211, -5
  %214 = zext i1 %213 to i8
  store i8 %214, i8* %4, align 1, !tbaa !2432
  %215 = trunc i64 %212 to i32
  %216 = and i32 %215, 255
  %217 = tail call i32 @llvm.ctpop.i32(i32 %216) #9
  %218 = trunc i32 %217 to i8
  %219 = and i8 %218, 1
  %220 = xor i8 %219, 1
  store i8 %220, i8* %5, align 1, !tbaa !2446
  %221 = xor i64 %212, %211
  %222 = lshr i64 %221, 4
  %223 = trunc i64 %222 to i8
  %224 = and i8 %223, 1
  store i8 %224, i8* %6, align 1, !tbaa !2447
  %225 = icmp eq i64 %212, 0
  %226 = zext i1 %225 to i8
  store i8 %226, i8* %7, align 1, !tbaa !2448
  %227 = lshr i64 %212, 63
  %228 = trunc i64 %227 to i8
  store i8 %228, i8* %8, align 1, !tbaa !2449
  %229 = lshr i64 %211, 63
  %230 = xor i64 %227, %229
  %231 = add nuw nsw i64 %230, %227
  %232 = icmp eq i64 %231, 2
  %233 = zext i1 %232 to i8
  store i8 %233, i8* %9, align 1, !tbaa !2450
  %234 = add i64 %208, 15
  store i64 %234, i64* %PC, align 8
  store i64 %212, i64* %210, align 8
  %235 = load i32*, i32** %10, align 8
  %236 = load i64, i64* %PC, align 8
  %237 = add i64 %236, 3
  store i64 %237, i64* %PC, align 8
  %238 = load i32, i32* %235, align 4
  %239 = sext i32 %238 to i64
  store i64 %239, i64* %RAX, align 8, !tbaa !2428
  %240 = shl nsw i64 %239, 3
  %241 = add i64 %240, add (i64 ptrtoint (%seg_602020__data_type* @seg_602020__data to i64), i64 16)
  %242 = add i64 %236, 11
  store i64 %242, i64* %PC, align 8
  %243 = inttoptr i64 %241 to i64*
  %244 = load i64, i64* %243, align 8
  store i64 %244, i64* %RAX, align 8, !tbaa !2428
  %245 = load i64, i64* %RBP, align 8
  %246 = add i64 %245, -40
  %247 = add i64 %236, 15
  store i64 %247, i64* %PC, align 8
  %248 = inttoptr i64 %246 to i64*
  store i64 %244, i64* %248, align 8
  %249 = load i64, i64* %PC, align 8
  %250 = sub i64 %249, %.sink5
  %251 = load i64, i64* %RBP, align 8
  %252 = add i64 %251, -40
  %253 = add i64 %250, 4
  store i64 %253, i64* %PC, align 8
  %254 = inttoptr i64 %252 to i64*
  %255 = load i64, i64* %254, align 8
  store i64 %255, i64* %RAX, align 8, !tbaa !2428
  store i64 %255, i64* %PC, align 8, !tbaa !2428
  switch i64 %255, label %284 [
    i64 4196224, label %block_400780
    i64 4197124, label %block_400b04
    i64 4196874, label %block_400a0a
    i64 4196624, label %block_400910
    i64 4196374, label %block_400816
    i64 4196124, label %block_40071c
    i64 4195874, label %block_400622
    i64 4197174, label %block_400b36
    i64 4196924, label %block_400a3c
    i64 4197024, label %block_400aa0
    i64 4196774, label %block_4009a6
    i64 4196524, label %block_4008ac
    i64 4197074, label %block_400ad2
    i64 4195924, label %block_400654
    i64 4195824, label %block_4005f0
    i64 4196324, label %block_4007e4
    i64 4196024, label %block_4006b8
    i64 4196574, label %block_4008de
    i64 4196274, label %block_4007b2
    i64 4195724, label %block_40058c
    i64 4196824, label %block_4009d8
    i64 4195974, label %block_400686
    i64 4196474, label %block_40087a
    i64 4196724, label %block_400974
    i64 4195774, label %block_4005be
    i64 4196974, label %block_400a6e
    i64 4195705, label %block_400579
    i64 4197224, label %block_400b68
    i64 4196074, label %block_4006ea
    i64 4196174, label %block_40074e
    i64 4196424, label %block_400848
    i64 4196674, label %block_400942
  ]

block_400622:                                     ; preds = %block_400586
  %256 = add i64 %251, -12
  store i64 4195881, i64* %PC, align 8
  %257 = inttoptr i64 %256 to i32*
  store i32 4, i32* %257, align 4
  %258 = load i64, i64* %PC, align 8
  %259 = tail call %struct.Memory* @sub_400629(%struct.State* nonnull %0, i64 %258, %struct.Memory* %2)
  ret %struct.Memory* %259

block_40071c:                                     ; preds = %block_400586
  %260 = add i64 %251, -12
  store i64 4196131, i64* %PC, align 8
  %261 = inttoptr i64 %260 to i32*
  store i32 9, i32* %261, align 4
  %262 = load i64, i64* %PC, align 8
  %263 = tail call %struct.Memory* @sub_400723(%struct.State* nonnull %0, i64 %262, %struct.Memory* %2)
  ret %struct.Memory* %263

block_400816:                                     ; preds = %block_400586
  %264 = add i64 %251, -12
  store i64 4196381, i64* %PC, align 8
  %265 = inttoptr i64 %264 to i32*
  store i32 14, i32* %265, align 4
  %266 = load i64, i64* %PC, align 8
  %267 = tail call %struct.Memory* @sub_40081d(%struct.State* nonnull %0, i64 %266, %struct.Memory* %2)
  ret %struct.Memory* %267

block_400910:                                     ; preds = %block_400586
  %268 = add i64 %251, -12
  store i64 4196631, i64* %PC, align 8
  %269 = inttoptr i64 %268 to i32*
  store i32 19, i32* %269, align 4
  %270 = load i64, i64* %PC, align 8
  %271 = tail call %struct.Memory* @sub_400917(%struct.State* nonnull %0, i64 %270, %struct.Memory* %2)
  ret %struct.Memory* %271

block_400a0a:                                     ; preds = %block_400586
  %272 = add i64 %251, -12
  store i64 4196881, i64* %PC, align 8
  %273 = inttoptr i64 %272 to i32*
  store i32 24, i32* %273, align 4
  %274 = load i64, i64* %PC, align 8
  %275 = tail call %struct.Memory* @sub_400a11(%struct.State* nonnull %0, i64 %274, %struct.Memory* %2)
  ret %struct.Memory* %275

block_400b04:                                     ; preds = %block_400586
  %276 = add i64 %251, -12
  store i64 4197131, i64* %PC, align 8
  %277 = inttoptr i64 %276 to i32*
  store i32 29, i32* %277, align 4
  %278 = load i64, i64* %PC, align 8
  %279 = tail call %struct.Memory* @sub_400b0b(%struct.State* nonnull %0, i64 %278, %struct.Memory* %2)
  ret %struct.Memory* %279

block_400780:                                     ; preds = %block_400586
  %280 = add i64 %251, -12
  store i64 4196231, i64* %PC, align 8
  %281 = inttoptr i64 %280 to i32*
  store i32 11, i32* %281, align 4
  %282 = load i64, i64* %PC, align 8
  %283 = tail call %struct.Memory* @sub_400787(%struct.State* nonnull %0, i64 %282, %struct.Memory* %2)
  ret %struct.Memory* %283

; <label>:284:                                    ; preds = %block_400586
  %285 = tail call %struct.Memory* @__remill_jump(%struct.State* nonnull %0, i64 %255, %struct.Memory* %2)
  ret %struct.Memory* %285
}

; Function Attrs: noinline nounwind
define %struct.Memory* @sub_400490_register_tm_clones(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) local_unnamed_addr #6 {
block_400490:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %RSP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  store i64 and (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 4294967295), i64* %RSI, align 8, !tbaa !2428
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %1, 6
  store i64 %4, i64* %PC, align 8
  %5 = load i64, i64* %RSP, align 8, !tbaa !2428
  %6 = add i64 %5, -8
  %7 = inttoptr i64 %6 to i64*
  store i64 %3, i64* %7, align 8
  store i64 %6, i64* %RSP, align 8, !tbaa !2428
  %8 = load i64, i64* %RSI, align 8
  %9 = load i64, i64* %PC, align 8
  %10 = sub i64 %8, ptrtoint (%__bss_start_type* @__bss_start to i64)
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i64 %6, i64* %RBP, align 8, !tbaa !2428
  %17 = ashr i64 %10, 3
  %18 = lshr i64 %17, 63
  store i64 %18, i64* %RAX, align 8, !tbaa !2428
  %19 = add nsw i64 %18, %17
  %20 = trunc i64 %19 to i8
  %21 = and i8 %20, 1
  %22 = ashr i64 %19, 1
  store i64 %22, i64* %RSI, align 8, !tbaa !2428
  store i8 %21, i8* %11, align 1, !tbaa !2451
  %23 = trunc i64 %22 to i32
  %24 = and i32 %23, 255
  %25 = tail call i32 @llvm.ctpop.i32(i32 %24) #9
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  store i8 %28, i8* %12, align 1, !tbaa !2451
  store i8 0, i8* %13, align 1, !tbaa !2451
  %29 = icmp eq i64 %22, 0
  %30 = zext i1 %29 to i8
  store i8 %30, i8* %14, align 1, !tbaa !2451
  %31 = lshr i64 %22, 63
  %32 = trunc i64 %31 to i8
  store i8 %32, i8* %15, align 1, !tbaa !2451
  store i8 0, i8* %16, align 1, !tbaa !2451
  %.v = select i1 %29, i64 50, i64 29
  %33 = add i64 %9, %.v
  store i64 %33, i64* %PC, align 8, !tbaa !2428
  br i1 %29, label %block_4004c8, label %block_4004b3

block_4004b3:                                     ; preds = %block_400490
  store i64 0, i64* %RAX, align 8, !tbaa !2428
  store i8 0, i8* %11, align 1, !tbaa !2432
  store i8 1, i8* %12, align 1, !tbaa !2446
  store i8 1, i8* %14, align 1, !tbaa !2448
  store i8 0, i8* %15, align 1, !tbaa !2449
  store i8 0, i8* %16, align 1, !tbaa !2450
  store i8 0, i8* %13, align 1, !tbaa !2447
  %34 = add i64 %33, 21
  store i64 %34, i64* %PC, align 8, !tbaa !2428
  br label %block_4004c8

block_4004c8:                                     ; preds = %block_4004b3, %block_400490
  %35 = phi i64 [ %34, %block_4004b3 ], [ %33, %block_400490 ]
  %36 = add i64 %35, 1
  store i64 %36, i64* %PC, align 8
  %37 = load i64, i64* %RSP, align 8, !tbaa !2428
  %38 = add i64 %37, 8
  %39 = inttoptr i64 %37 to i64*
  %40 = load i64, i64* %39, align 8
  store i64 %40, i64* %RBP, align 8, !tbaa !2428
  store i64 %38, i64* %RSP, align 8, !tbaa !2428
  %41 = add i64 %35, 2
  store i64 %41, i64* %PC, align 8
  %42 = inttoptr i64 %38 to i64*
  %43 = load i64, i64* %42, align 8
  store i64 %43, i64* %PC, align 8, !tbaa !2428
  %44 = add i64 %37, 16
  store i64 %44, i64* %RSP, align 8, !tbaa !2428
  ret %struct.Memory* %2
}

; Function Attrs: noinline nounwind
define %struct.Memory* @sub_4009ad(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) local_unnamed_addr #6 {
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %PC, align 8
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RSP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %10 = bitcast i64* %RAX to i32**
  br label %block_4009ad

block_4005f0:                                     ; preds = %block_400586
  %11 = add i64 %257, -12
  store i64 4195831, i64* %PC, align 8
  %12 = inttoptr i64 %11 to i32*
  store i32 3, i32* %12, align 4
  %13 = load i64, i64* %RBP, align 8
  %14 = add i64 %13, -12
  %15 = load i64, i64* %PC, align 8
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC, align 8
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RDI, align 8, !tbaa !2428
  %20 = add i64 %15, -231
  br label %block_400586.backedge

block_400586.backedge:                            ; preds = %block_4005f0, %block_4006b8, %block_4007b2, %block_4008ac, %block_400974, %block_400a6e, %block_400b68, %block_4006ea, %block_400b36
  %.sink258 = phi i64 [ %15, %block_4005f0 ], [ %46, %block_4006b8 ], [ %56, %block_4007b2 ], [ %79, %block_4008ac ], [ %103, %block_400974 ], [ %152, %block_400a6e ], [ %162, %block_400b68 ], [ %184, %block_4006ea ], [ %206, %block_400b36 ]
  %.sink253 = phi i64 [ %20, %block_4005f0 ], [ %51, %block_4006b8 ], [ %61, %block_4007b2 ], [ %84, %block_4008ac ], [ %108, %block_400974 ], [ %157, %block_400a6e ], [ %167, %block_400b68 ], [ %189, %block_4006ea ], [ %211, %block_400b36 ]
  %.sink5.be = phi i64 [ 151, %block_4005f0 ], [ 351, %block_4006b8 ], [ 601, %block_4007b2 ], [ 851, %block_4008ac ], [ 1051, %block_400974 ], [ 1301, %block_400a6e ], [ 1551, %block_400b68 ], [ 401, %block_4006ea ], [ 1501, %block_400b36 ]
  %21 = add i64 %.sink258, 8
  %22 = load i64, i64* %RSP, align 8, !tbaa !2428
  %23 = add i64 %22, -8
  %24 = inttoptr i64 %23 to i64*
  store i64 %21, i64* %24, align 8
  store i64 %23, i64* %RSP, align 8, !tbaa !2428
  store i64 %.sink253, i64* %PC, align 8, !tbaa !2428
  %25 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %.sink253, %struct.Memory* %2)
  br label %block_400586

block_4007e4:                                     ; preds = %block_400586
  %26 = add i64 %257, -12
  store i64 4196331, i64* %PC, align 8
  %27 = inttoptr i64 %26 to i32*
  store i32 13, i32* %27, align 4
  %28 = load i64, i64* %PC, align 8
  %29 = tail call %struct.Memory* @sub_4007eb(%struct.State* nonnull %0, i64 %28, %struct.Memory* %2)
  ret %struct.Memory* %29

block_4008de:                                     ; preds = %block_400586
  %30 = add i64 %257, -12
  store i64 4196581, i64* %PC, align 8
  %31 = inttoptr i64 %30 to i32*
  store i32 18, i32* %31, align 4
  %32 = load i64, i64* %PC, align 8
  %33 = tail call %struct.Memory* @sub_4008e5(%struct.State* nonnull %0, i64 %32, %struct.Memory* %2)
  ret %struct.Memory* %33

block_4009d8:                                     ; preds = %block_400586
  %34 = add i64 %257, -12
  store i64 4196831, i64* %PC, align 8
  %35 = inttoptr i64 %34 to i32*
  store i32 23, i32* %35, align 4
  %36 = load i64, i64* %PC, align 8
  %37 = tail call %struct.Memory* @sub_4009df(%struct.State* nonnull %0, i64 %36, %struct.Memory* %2)
  ret %struct.Memory* %37

block_400ad2:                                     ; preds = %block_400586
  %38 = add i64 %257, -12
  store i64 4197081, i64* %PC, align 8
  %39 = inttoptr i64 %38 to i32*
  store i32 28, i32* %39, align 4
  %40 = load i64, i64* %PC, align 8
  %41 = tail call %struct.Memory* @sub_400ad9(%struct.State* nonnull %0, i64 %40, %struct.Memory* %2)
  ret %struct.Memory* %41

block_4006b8:                                     ; preds = %block_400586
  %42 = add i64 %257, -12
  store i64 4196031, i64* %PC, align 8
  %43 = inttoptr i64 %42 to i32*
  store i32 7, i32* %43, align 4
  %44 = load i64, i64* %RBP, align 8
  %45 = add i64 %44, -12
  %46 = load i64, i64* %PC, align 8
  %47 = add i64 %46, 3
  store i64 %47, i64* %PC, align 8
  %48 = inttoptr i64 %45 to i32*
  %49 = load i32, i32* %48, align 4
  %50 = zext i32 %49 to i64
  store i64 %50, i64* %RDI, align 8, !tbaa !2428
  %51 = add i64 %46, -431
  br label %block_400586.backedge

block_4007b2:                                     ; preds = %block_400586
  %52 = add i64 %257, -12
  store i64 4196281, i64* %PC, align 8
  %53 = inttoptr i64 %52 to i32*
  store i32 12, i32* %53, align 4
  %54 = load i64, i64* %RBP, align 8
  %55 = add i64 %54, -12
  %56 = load i64, i64* %PC, align 8
  %57 = add i64 %56, 3
  store i64 %57, i64* %PC, align 8
  %58 = inttoptr i64 %55 to i32*
  %59 = load i32, i32* %58, align 4
  %60 = zext i32 %59 to i64
  store i64 %60, i64* %RDI, align 8, !tbaa !2428
  %61 = add i64 %56, -681
  br label %block_400586.backedge

block_4009ad:                                     ; preds = %block_4009a6, %3
  %62 = phi i64 [ %.pre, %block_4009a6 ], [ %1, %3 ]
  %63 = load i64, i64* %RBP, align 8
  %64 = add i64 %63, -12
  %65 = add i64 %62, 3
  store i64 %65, i64* %PC, align 8
  %66 = inttoptr i64 %64 to i32*
  %67 = load i32, i32* %66, align 4
  %68 = zext i32 %67 to i64
  store i64 %68, i64* %RDI, align 8, !tbaa !2428
  %69 = add i64 %62, -1181
  %70 = add i64 %62, 8
  %71 = load i64, i64* %RSP, align 8, !tbaa !2428
  %72 = add i64 %71, -8
  %73 = inttoptr i64 %72 to i64*
  store i64 %70, i64* %73, align 8
  store i64 %72, i64* %RSP, align 8, !tbaa !2428
  store i64 %69, i64* %PC, align 8, !tbaa !2428
  %74 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %69, %struct.Memory* %2)
  br label %block_400586

block_4008ac:                                     ; preds = %block_400586
  %75 = add i64 %257, -12
  store i64 4196531, i64* %PC, align 8
  %76 = inttoptr i64 %75 to i32*
  store i32 17, i32* %76, align 4
  %77 = load i64, i64* %RBP, align 8
  %78 = add i64 %77, -12
  %79 = load i64, i64* %PC, align 8
  %80 = add i64 %79, 3
  store i64 %80, i64* %PC, align 8
  %81 = inttoptr i64 %78 to i32*
  %82 = load i32, i32* %81, align 4
  %83 = zext i32 %82 to i64
  store i64 %83, i64* %RDI, align 8, !tbaa !2428
  %84 = add i64 %79, -931
  br label %block_400586.backedge

block_4009a6:                                     ; preds = %block_400586
  %85 = add i64 %257, -12
  store i64 4196781, i64* %PC, align 8
  %86 = inttoptr i64 %85 to i32*
  store i32 22, i32* %86, align 4
  %.pre = load i64, i64* %PC, align 8
  br label %block_4009ad

block_400aa0:                                     ; preds = %block_400586
  %87 = add i64 %257, -12
  store i64 4197031, i64* %PC, align 8
  %88 = inttoptr i64 %87 to i32*
  store i32 27, i32* %88, align 4
  %89 = load i64, i64* %PC, align 8
  %90 = tail call %struct.Memory* @sub_400aa7(%struct.State* nonnull %0, i64 %89, %struct.Memory* %2)
  ret %struct.Memory* %90

block_400686:                                     ; preds = %block_400586
  %91 = add i64 %257, -12
  store i64 4195981, i64* %PC, align 8
  %92 = inttoptr i64 %91 to i32*
  store i32 6, i32* %92, align 4
  %93 = load i64, i64* %PC, align 8
  %94 = tail call %struct.Memory* @sub_40068d(%struct.State* nonnull %0, i64 %93, %struct.Memory* %2)
  ret %struct.Memory* %94

block_40087a:                                     ; preds = %block_400586
  %95 = add i64 %257, -12
  store i64 4196481, i64* %PC, align 8
  %96 = inttoptr i64 %95 to i32*
  store i32 16, i32* %96, align 4
  %97 = load i64, i64* %PC, align 8
  %98 = tail call %struct.Memory* @sub_400881(%struct.State* nonnull %0, i64 %97, %struct.Memory* %2)
  ret %struct.Memory* %98

block_400974:                                     ; preds = %block_400586
  %99 = add i64 %257, -12
  store i64 4196731, i64* %PC, align 8
  %100 = inttoptr i64 %99 to i32*
  store i32 21, i32* %100, align 4
  %101 = load i64, i64* %RBP, align 8
  %102 = add i64 %101, -12
  %103 = load i64, i64* %PC, align 8
  %104 = add i64 %103, 3
  store i64 %104, i64* %PC, align 8
  %105 = inttoptr i64 %102 to i32*
  %106 = load i32, i32* %105, align 4
  %107 = zext i32 %106 to i64
  store i64 %107, i64* %RDI, align 8, !tbaa !2428
  %108 = add i64 %103, -1131
  br label %block_400586.backedge

block_4005be:                                     ; preds = %block_400586
  %109 = add i64 %257, -12
  store i64 4195781, i64* %PC, align 8
  %110 = inttoptr i64 %109 to i32*
  store i32 2, i32* %110, align 4
  %111 = load i64, i64* %PC, align 8
  %112 = tail call %struct.Memory* @sub_4005c5(%struct.State* nonnull %0, i64 %111, %struct.Memory* %2)
  ret %struct.Memory* %112

block_400579:                                     ; preds = %block_400586
  %113 = add i64 %257, -12
  store i64 4195712, i64* %PC, align 8
  %114 = inttoptr i64 %113 to i32*
  store i32 0, i32* %114, align 4
  %115 = load i64, i64* %RSP, align 8
  %116 = load i64, i64* %PC, align 8
  %117 = add i64 %115, 48
  store i64 %117, i64* %RSP, align 8, !tbaa !2428
  %118 = icmp ugt i64 %115, -49
  %119 = zext i1 %118 to i8
  store i8 %119, i8* %4, align 1, !tbaa !2432
  %120 = trunc i64 %117 to i32
  %121 = and i32 %120, 255
  %122 = tail call i32 @llvm.ctpop.i32(i32 %121) #9
  %123 = trunc i32 %122 to i8
  %124 = and i8 %123, 1
  %125 = xor i8 %124, 1
  store i8 %125, i8* %5, align 1, !tbaa !2446
  %126 = xor i64 %115, 16
  %127 = xor i64 %126, %117
  %128 = lshr i64 %127, 4
  %129 = trunc i64 %128 to i8
  %130 = and i8 %129, 1
  store i8 %130, i8* %6, align 1, !tbaa !2447
  %131 = icmp eq i64 %117, 0
  %132 = zext i1 %131 to i8
  store i8 %132, i8* %7, align 1, !tbaa !2448
  %133 = lshr i64 %117, 63
  %134 = trunc i64 %133 to i8
  store i8 %134, i8* %8, align 1, !tbaa !2449
  %135 = lshr i64 %115, 63
  %136 = xor i64 %133, %135
  %137 = add nuw nsw i64 %136, %133
  %138 = icmp eq i64 %137, 2
  %139 = zext i1 %138 to i8
  store i8 %139, i8* %9, align 1, !tbaa !2450
  %140 = add i64 %116, 5
  store i64 %140, i64* %PC, align 8
  %141 = add i64 %115, 56
  %142 = inttoptr i64 %117 to i64*
  %143 = load i64, i64* %142, align 8
  store i64 %143, i64* %RBP, align 8, !tbaa !2428
  store i64 %141, i64* %RSP, align 8, !tbaa !2428
  %144 = add i64 %116, 6
  store i64 %144, i64* %PC, align 8
  %145 = inttoptr i64 %141 to i64*
  %146 = load i64, i64* %145, align 8
  store i64 %146, i64* %PC, align 8, !tbaa !2428
  %147 = add i64 %115, 64
  store i64 %147, i64* %RSP, align 8, !tbaa !2428
  ret %struct.Memory* %2

block_400a6e:                                     ; preds = %block_400586
  %148 = add i64 %257, -12
  store i64 4196981, i64* %PC, align 8
  %149 = inttoptr i64 %148 to i32*
  store i32 26, i32* %149, align 4
  %150 = load i64, i64* %RBP, align 8
  %151 = add i64 %150, -12
  %152 = load i64, i64* %PC, align 8
  %153 = add i64 %152, 3
  store i64 %153, i64* %PC, align 8
  %154 = inttoptr i64 %151 to i32*
  %155 = load i32, i32* %154, align 4
  %156 = zext i32 %155 to i64
  store i64 %156, i64* %RDI, align 8, !tbaa !2428
  %157 = add i64 %152, -1381
  br label %block_400586.backedge

block_400b68:                                     ; preds = %block_400586
  %158 = add i64 %257, -12
  store i64 4197231, i64* %PC, align 8
  %159 = inttoptr i64 %158 to i32*
  store i32 31, i32* %159, align 4
  %160 = load i64, i64* %RBP, align 8
  %161 = add i64 %160, -12
  %162 = load i64, i64* %PC, align 8
  %163 = add i64 %162, 3
  store i64 %163, i64* %PC, align 8
  %164 = inttoptr i64 %161 to i32*
  %165 = load i32, i32* %164, align 4
  %166 = zext i32 %165 to i64
  store i64 %166, i64* %RDI, align 8, !tbaa !2428
  %167 = add i64 %162, -1631
  br label %block_400586.backedge

block_400654:                                     ; preds = %block_400586
  %168 = add i64 %257, -12
  store i64 4195931, i64* %PC, align 8
  %169 = inttoptr i64 %168 to i32*
  store i32 5, i32* %169, align 4
  %170 = load i64, i64* %PC, align 8
  %171 = tail call %struct.Memory* @sub_40065b(%struct.State* nonnull %0, i64 %170, %struct.Memory* %2)
  ret %struct.Memory* %171

block_40074e:                                     ; preds = %block_400586
  %172 = add i64 %257, -12
  store i64 4196181, i64* %PC, align 8
  %173 = inttoptr i64 %172 to i32*
  store i32 10, i32* %173, align 4
  %174 = load i64, i64* %PC, align 8
  %175 = tail call %struct.Memory* @sub_400755(%struct.State* nonnull %0, i64 %174, %struct.Memory* %2)
  ret %struct.Memory* %175

block_400848:                                     ; preds = %block_400586
  %176 = add i64 %257, -12
  store i64 4196431, i64* %PC, align 8
  %177 = inttoptr i64 %176 to i32*
  store i32 15, i32* %177, align 4
  %178 = load i64, i64* %PC, align 8
  %179 = tail call %struct.Memory* @sub_40084f(%struct.State* nonnull %0, i64 %178, %struct.Memory* %2)
  ret %struct.Memory* %179

block_4006ea:                                     ; preds = %block_400586
  %180 = add i64 %257, -12
  store i64 4196081, i64* %PC, align 8
  %181 = inttoptr i64 %180 to i32*
  store i32 8, i32* %181, align 4
  %182 = load i64, i64* %RBP, align 8
  %183 = add i64 %182, -12
  %184 = load i64, i64* %PC, align 8
  %185 = add i64 %184, 3
  store i64 %185, i64* %PC, align 8
  %186 = inttoptr i64 %183 to i32*
  %187 = load i32, i32* %186, align 4
  %188 = zext i32 %187 to i64
  store i64 %188, i64* %RDI, align 8, !tbaa !2428
  %189 = add i64 %184, -481
  br label %block_400586.backedge

block_400942:                                     ; preds = %block_400586
  %190 = add i64 %257, -12
  store i64 4196681, i64* %PC, align 8
  %191 = inttoptr i64 %190 to i32*
  store i32 20, i32* %191, align 4
  %192 = load i64, i64* %PC, align 8
  %193 = tail call %struct.Memory* @sub_400949(%struct.State* nonnull %0, i64 %192, %struct.Memory* %2)
  ret %struct.Memory* %193

block_40058c:                                     ; preds = %block_400586
  %194 = add i64 %257, -12
  store i64 4195731, i64* %PC, align 8
  %195 = inttoptr i64 %194 to i32*
  store i32 1, i32* %195, align 4
  %196 = load i64, i64* %PC, align 8
  %197 = tail call %struct.Memory* @sub_400593(%struct.State* nonnull %0, i64 %196, %struct.Memory* %2)
  ret %struct.Memory* %197

block_400a3c:                                     ; preds = %block_400586
  %198 = add i64 %257, -12
  store i64 4196931, i64* %PC, align 8
  %199 = inttoptr i64 %198 to i32*
  store i32 25, i32* %199, align 4
  %200 = load i64, i64* %PC, align 8
  %201 = tail call %struct.Memory* @sub_400a43(%struct.State* nonnull %0, i64 %200, %struct.Memory* %2)
  ret %struct.Memory* %201

block_400b36:                                     ; preds = %block_400586
  %202 = add i64 %257, -12
  store i64 4197181, i64* %PC, align 8
  %203 = inttoptr i64 %202 to i32*
  store i32 30, i32* %203, align 4
  %204 = load i64, i64* %RBP, align 8
  %205 = add i64 %204, -12
  %206 = load i64, i64* %PC, align 8
  %207 = add i64 %206, 3
  store i64 %207, i64* %PC, align 8
  %208 = inttoptr i64 %205 to i32*
  %209 = load i32, i32* %208, align 4
  %210 = zext i32 %209 to i64
  store i64 %210, i64* %RDI, align 8, !tbaa !2428
  %211 = add i64 %206, -1581
  br label %block_400586.backedge

block_400586:                                     ; preds = %block_400586.backedge, %block_4009ad
  %.sink5 = phi i64 [ 1101, %block_4009ad ], [ %.sink5.be, %block_400586.backedge ]
  %212 = load i64, i64* %RBP, align 8
  %213 = add i64 %212, -8
  %214 = load i64, i64* %PC, align 8
  %215 = add i64 %214, 4
  store i64 %215, i64* %PC, align 8
  %216 = inttoptr i64 %213 to i64*
  %217 = load i64, i64* %216, align 8
  store i64 %217, i64* %RAX, align 8, !tbaa !2428
  %218 = add i64 %217, 4
  store i64 %218, i64* %RCX, align 8, !tbaa !2428
  %219 = icmp ugt i64 %217, -5
  %220 = zext i1 %219 to i8
  store i8 %220, i8* %4, align 1, !tbaa !2432
  %221 = trunc i64 %218 to i32
  %222 = and i32 %221, 255
  %223 = tail call i32 @llvm.ctpop.i32(i32 %222) #9
  %224 = trunc i32 %223 to i8
  %225 = and i8 %224, 1
  %226 = xor i8 %225, 1
  store i8 %226, i8* %5, align 1, !tbaa !2446
  %227 = xor i64 %218, %217
  %228 = lshr i64 %227, 4
  %229 = trunc i64 %228 to i8
  %230 = and i8 %229, 1
  store i8 %230, i8* %6, align 1, !tbaa !2447
  %231 = icmp eq i64 %218, 0
  %232 = zext i1 %231 to i8
  store i8 %232, i8* %7, align 1, !tbaa !2448
  %233 = lshr i64 %218, 63
  %234 = trunc i64 %233 to i8
  store i8 %234, i8* %8, align 1, !tbaa !2449
  %235 = lshr i64 %217, 63
  %236 = xor i64 %233, %235
  %237 = add nuw nsw i64 %236, %233
  %238 = icmp eq i64 %237, 2
  %239 = zext i1 %238 to i8
  store i8 %239, i8* %9, align 1, !tbaa !2450
  %240 = add i64 %214, 15
  store i64 %240, i64* %PC, align 8
  store i64 %218, i64* %216, align 8
  %241 = load i32*, i32** %10, align 8
  %242 = load i64, i64* %PC, align 8
  %243 = add i64 %242, 3
  store i64 %243, i64* %PC, align 8
  %244 = load i32, i32* %241, align 4
  %245 = sext i32 %244 to i64
  store i64 %245, i64* %RAX, align 8, !tbaa !2428
  %246 = shl nsw i64 %245, 3
  %247 = add i64 %246, add (i64 ptrtoint (%seg_602020__data_type* @seg_602020__data to i64), i64 16)
  %248 = add i64 %242, 11
  store i64 %248, i64* %PC, align 8
  %249 = inttoptr i64 %247 to i64*
  %250 = load i64, i64* %249, align 8
  store i64 %250, i64* %RAX, align 8, !tbaa !2428
  %251 = load i64, i64* %RBP, align 8
  %252 = add i64 %251, -40
  %253 = add i64 %242, 15
  store i64 %253, i64* %PC, align 8
  %254 = inttoptr i64 %252 to i64*
  store i64 %250, i64* %254, align 8
  %255 = load i64, i64* %PC, align 8
  %256 = sub i64 %255, %.sink5
  %257 = load i64, i64* %RBP, align 8
  %258 = add i64 %257, -40
  %259 = add i64 %256, 4
  store i64 %259, i64* %PC, align 8
  %260 = inttoptr i64 %258 to i64*
  %261 = load i64, i64* %260, align 8
  store i64 %261, i64* %RAX, align 8, !tbaa !2428
  store i64 %261, i64* %PC, align 8, !tbaa !2428
  switch i64 %261, label %290 [
    i64 4196224, label %block_400780
    i64 4197124, label %block_400b04
    i64 4196874, label %block_400a0a
    i64 4196624, label %block_400910
    i64 4196374, label %block_400816
    i64 4196124, label %block_40071c
    i64 4195874, label %block_400622
    i64 4197174, label %block_400b36
    i64 4196924, label %block_400a3c
    i64 4197024, label %block_400aa0
    i64 4196774, label %block_4009a6
    i64 4196524, label %block_4008ac
    i64 4197074, label %block_400ad2
    i64 4195924, label %block_400654
    i64 4195824, label %block_4005f0
    i64 4196324, label %block_4007e4
    i64 4196024, label %block_4006b8
    i64 4196574, label %block_4008de
    i64 4196274, label %block_4007b2
    i64 4195724, label %block_40058c
    i64 4196824, label %block_4009d8
    i64 4195974, label %block_400686
    i64 4196474, label %block_40087a
    i64 4196724, label %block_400974
    i64 4195774, label %block_4005be
    i64 4196974, label %block_400a6e
    i64 4195705, label %block_400579
    i64 4197224, label %block_400b68
    i64 4196074, label %block_4006ea
    i64 4196174, label %block_40074e
    i64 4196424, label %block_400848
    i64 4196674, label %block_400942
  ]

block_400622:                                     ; preds = %block_400586
  %262 = add i64 %257, -12
  store i64 4195881, i64* %PC, align 8
  %263 = inttoptr i64 %262 to i32*
  store i32 4, i32* %263, align 4
  %264 = load i64, i64* %PC, align 8
  %265 = tail call %struct.Memory* @sub_400629(%struct.State* nonnull %0, i64 %264, %struct.Memory* %2)
  ret %struct.Memory* %265

block_40071c:                                     ; preds = %block_400586
  %266 = add i64 %257, -12
  store i64 4196131, i64* %PC, align 8
  %267 = inttoptr i64 %266 to i32*
  store i32 9, i32* %267, align 4
  %268 = load i64, i64* %PC, align 8
  %269 = tail call %struct.Memory* @sub_400723(%struct.State* nonnull %0, i64 %268, %struct.Memory* %2)
  ret %struct.Memory* %269

block_400816:                                     ; preds = %block_400586
  %270 = add i64 %257, -12
  store i64 4196381, i64* %PC, align 8
  %271 = inttoptr i64 %270 to i32*
  store i32 14, i32* %271, align 4
  %272 = load i64, i64* %PC, align 8
  %273 = tail call %struct.Memory* @sub_40081d(%struct.State* nonnull %0, i64 %272, %struct.Memory* %2)
  ret %struct.Memory* %273

block_400910:                                     ; preds = %block_400586
  %274 = add i64 %257, -12
  store i64 4196631, i64* %PC, align 8
  %275 = inttoptr i64 %274 to i32*
  store i32 19, i32* %275, align 4
  %276 = load i64, i64* %PC, align 8
  %277 = tail call %struct.Memory* @sub_400917(%struct.State* nonnull %0, i64 %276, %struct.Memory* %2)
  ret %struct.Memory* %277

block_400a0a:                                     ; preds = %block_400586
  %278 = add i64 %257, -12
  store i64 4196881, i64* %PC, align 8
  %279 = inttoptr i64 %278 to i32*
  store i32 24, i32* %279, align 4
  %280 = load i64, i64* %PC, align 8
  %281 = tail call %struct.Memory* @sub_400a11(%struct.State* nonnull %0, i64 %280, %struct.Memory* %2)
  ret %struct.Memory* %281

block_400b04:                                     ; preds = %block_400586
  %282 = add i64 %257, -12
  store i64 4197131, i64* %PC, align 8
  %283 = inttoptr i64 %282 to i32*
  store i32 29, i32* %283, align 4
  %284 = load i64, i64* %PC, align 8
  %285 = tail call %struct.Memory* @sub_400b0b(%struct.State* nonnull %0, i64 %284, %struct.Memory* %2)
  ret %struct.Memory* %285

block_400780:                                     ; preds = %block_400586
  %286 = add i64 %257, -12
  store i64 4196231, i64* %PC, align 8
  %287 = inttoptr i64 %286 to i32*
  store i32 11, i32* %287, align 4
  %288 = load i64, i64* %PC, align 8
  %289 = tail call %struct.Memory* @sub_400787(%struct.State* nonnull %0, i64 %288, %struct.Memory* %2)
  ret %struct.Memory* %289

; <label>:290:                                    ; preds = %block_400586
  %291 = tail call %struct.Memory* @__remill_jump(%struct.State* nonnull %0, i64 %261, %struct.Memory* %2)
  ret %struct.Memory* %291
}

; Function Attrs: noinline nounwind
define %struct.Memory* @sub_400629(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) local_unnamed_addr #6 {
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %PC, align 8
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RSP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %10 = bitcast i64* %RAX to i32**
  br label %block_400629

block_40087a:                                     ; preds = %block_400586
  %11 = add i64 %245, -12
  store i64 4196481, i64* %PC, align 8
  %12 = inttoptr i64 %11 to i32*
  store i32 16, i32* %12, align 4
  %13 = load i64, i64* %PC, align 8
  %14 = tail call %struct.Memory* @sub_400881(%struct.State* nonnull %0, i64 %13, %struct.Memory* %2)
  ret %struct.Memory* %14

block_400974:                                     ; preds = %block_400586
  %15 = add i64 %245, -12
  store i64 4196731, i64* %PC, align 8
  %16 = inttoptr i64 %15 to i32*
  store i32 21, i32* %16, align 4
  %17 = load i64, i64* %RBP, align 8
  %18 = add i64 %17, -12
  %19 = load i64, i64* %PC, align 8
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC, align 8
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RDI, align 8, !tbaa !2428
  %24 = add i64 %19, -1131
  br label %block_400586.backedge

block_400586.backedge:                            ; preds = %block_400974, %block_400a6e, %block_4006ea, %block_400b68, %block_4007e4, %block_4006b8, %block_400b36, %block_4008ac, %block_4009a6, %block_4005f0, %block_4007b2
  %.sink242 = phi i64 [ %19, %block_400974 ], [ %34, %block_400a6e ], [ %44, %block_4006ea ], [ %54, %block_400b68 ], [ %64, %block_4007e4 ], [ %137, %block_4006b8 ], [ %147, %block_400b36 ], [ %161, %block_4008ac ], [ %184, %block_4009a6 ], [ %194, %block_4005f0 ], [ %288, %block_4007b2 ]
  %.sink237 = phi i64 [ %24, %block_400974 ], [ %39, %block_400a6e ], [ %49, %block_4006ea ], [ %59, %block_400b68 ], [ %69, %block_4007e4 ], [ %142, %block_4006b8 ], [ %152, %block_400b36 ], [ %166, %block_4008ac ], [ %189, %block_4009a6 ], [ %199, %block_4005f0 ], [ %293, %block_4007b2 ]
  %.sink5.be = phi i64 [ 1051, %block_400974 ], [ 1301, %block_400a6e ], [ 401, %block_4006ea ], [ 1551, %block_400b68 ], [ 651, %block_4007e4 ], [ 351, %block_4006b8 ], [ 1501, %block_400b36 ], [ 851, %block_4008ac ], [ 1101, %block_4009a6 ], [ 151, %block_4005f0 ], [ 601, %block_4007b2 ]
  %25 = add i64 %.sink242, 8
  %26 = load i64, i64* %RSP, align 8, !tbaa !2428
  %27 = add i64 %26, -8
  %28 = inttoptr i64 %27 to i64*
  store i64 %25, i64* %28, align 8
  store i64 %27, i64* %RSP, align 8, !tbaa !2428
  store i64 %.sink237, i64* %PC, align 8, !tbaa !2428
  %29 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %.sink237, %struct.Memory* %2)
  br label %block_400586

block_400a6e:                                     ; preds = %block_400586
  %30 = add i64 %245, -12
  store i64 4196981, i64* %PC, align 8
  %31 = inttoptr i64 %30 to i32*
  store i32 26, i32* %31, align 4
  %32 = load i64, i64* %RBP, align 8
  %33 = add i64 %32, -12
  %34 = load i64, i64* %PC, align 8
  %35 = add i64 %34, 3
  store i64 %35, i64* %PC, align 8
  %36 = inttoptr i64 %33 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i64
  store i64 %38, i64* %RDI, align 8, !tbaa !2428
  %39 = add i64 %34, -1381
  br label %block_400586.backedge

block_4006ea:                                     ; preds = %block_400586
  %40 = add i64 %245, -12
  store i64 4196081, i64* %PC, align 8
  %41 = inttoptr i64 %40 to i32*
  store i32 8, i32* %41, align 4
  %42 = load i64, i64* %RBP, align 8
  %43 = add i64 %42, -12
  %44 = load i64, i64* %PC, align 8
  %45 = add i64 %44, 3
  store i64 %45, i64* %PC, align 8
  %46 = inttoptr i64 %43 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = zext i32 %47 to i64
  store i64 %48, i64* %RDI, align 8, !tbaa !2428
  %49 = add i64 %44, -481
  br label %block_400586.backedge

block_400b68:                                     ; preds = %block_400586
  %50 = add i64 %245, -12
  store i64 4197231, i64* %PC, align 8
  %51 = inttoptr i64 %50 to i32*
  store i32 31, i32* %51, align 4
  %52 = load i64, i64* %RBP, align 8
  %53 = add i64 %52, -12
  %54 = load i64, i64* %PC, align 8
  %55 = add i64 %54, 3
  store i64 %55, i64* %PC, align 8
  %56 = inttoptr i64 %53 to i32*
  %57 = load i32, i32* %56, align 4
  %58 = zext i32 %57 to i64
  store i64 %58, i64* %RDI, align 8, !tbaa !2428
  %59 = add i64 %54, -1631
  br label %block_400586.backedge

block_4007e4:                                     ; preds = %block_400586
  %60 = add i64 %245, -12
  store i64 4196331, i64* %PC, align 8
  %61 = inttoptr i64 %60 to i32*
  store i32 13, i32* %61, align 4
  %62 = load i64, i64* %RBP, align 8
  %63 = add i64 %62, -12
  %64 = load i64, i64* %PC, align 8
  %65 = add i64 %64, 3
  store i64 %65, i64* %PC, align 8
  %66 = inttoptr i64 %63 to i32*
  %67 = load i32, i32* %66, align 4
  %68 = zext i32 %67 to i64
  store i64 %68, i64* %RDI, align 8, !tbaa !2428
  %69 = add i64 %64, -731
  br label %block_400586.backedge

block_4008de:                                     ; preds = %block_400586
  %70 = add i64 %245, -12
  store i64 4196581, i64* %PC, align 8
  %71 = inttoptr i64 %70 to i32*
  store i32 18, i32* %71, align 4
  %72 = load i64, i64* %PC, align 8
  %73 = tail call %struct.Memory* @sub_4008e5(%struct.State* nonnull %0, i64 %72, %struct.Memory* %2)
  ret %struct.Memory* %73

block_4009d8:                                     ; preds = %block_400586
  %74 = add i64 %245, -12
  store i64 4196831, i64* %PC, align 8
  %75 = inttoptr i64 %74 to i32*
  store i32 23, i32* %75, align 4
  %76 = load i64, i64* %PC, align 8
  %77 = tail call %struct.Memory* @sub_4009df(%struct.State* nonnull %0, i64 %76, %struct.Memory* %2)
  ret %struct.Memory* %77

block_400ad2:                                     ; preds = %block_400586
  %78 = add i64 %245, -12
  store i64 4197081, i64* %PC, align 8
  %79 = inttoptr i64 %78 to i32*
  store i32 28, i32* %79, align 4
  %80 = load i64, i64* %PC, align 8
  %81 = tail call %struct.Memory* @sub_400ad9(%struct.State* nonnull %0, i64 %80, %struct.Memory* %2)
  ret %struct.Memory* %81

block_400848:                                     ; preds = %block_400586
  %82 = add i64 %245, -12
  store i64 4196431, i64* %PC, align 8
  %83 = inttoptr i64 %82 to i32*
  store i32 15, i32* %83, align 4
  %84 = load i64, i64* %PC, align 8
  %85 = tail call %struct.Memory* @sub_40084f(%struct.State* nonnull %0, i64 %84, %struct.Memory* %2)
  ret %struct.Memory* %85

block_400942:                                     ; preds = %block_400586
  %86 = add i64 %245, -12
  store i64 4196681, i64* %PC, align 8
  %87 = inttoptr i64 %86 to i32*
  store i32 20, i32* %87, align 4
  %88 = load i64, i64* %PC, align 8
  %89 = tail call %struct.Memory* @sub_400949(%struct.State* nonnull %0, i64 %88, %struct.Memory* %2)
  ret %struct.Memory* %89

block_40074e:                                     ; preds = %block_400586
  %90 = add i64 %245, -12
  store i64 4196181, i64* %PC, align 8
  %91 = inttoptr i64 %90 to i32*
  store i32 10, i32* %91, align 4
  %92 = load i64, i64* %PC, align 8
  %93 = tail call %struct.Memory* @sub_400755(%struct.State* nonnull %0, i64 %92, %struct.Memory* %2)
  ret %struct.Memory* %93

block_400579:                                     ; preds = %block_400586
  %94 = add i64 %245, -12
  store i64 4195712, i64* %PC, align 8
  %95 = inttoptr i64 %94 to i32*
  store i32 0, i32* %95, align 4
  %96 = load i64, i64* %RSP, align 8
  %97 = load i64, i64* %PC, align 8
  %98 = add i64 %96, 48
  store i64 %98, i64* %RSP, align 8, !tbaa !2428
  %99 = icmp ugt i64 %96, -49
  %100 = zext i1 %99 to i8
  store i8 %100, i8* %4, align 1, !tbaa !2432
  %101 = trunc i64 %98 to i32
  %102 = and i32 %101, 255
  %103 = tail call i32 @llvm.ctpop.i32(i32 %102) #9
  %104 = trunc i32 %103 to i8
  %105 = and i8 %104, 1
  %106 = xor i8 %105, 1
  store i8 %106, i8* %5, align 1, !tbaa !2446
  %107 = xor i64 %96, 16
  %108 = xor i64 %107, %98
  %109 = lshr i64 %108, 4
  %110 = trunc i64 %109 to i8
  %111 = and i8 %110, 1
  store i8 %111, i8* %6, align 1, !tbaa !2447
  %112 = icmp eq i64 %98, 0
  %113 = zext i1 %112 to i8
  store i8 %113, i8* %7, align 1, !tbaa !2448
  %114 = lshr i64 %98, 63
  %115 = trunc i64 %114 to i8
  store i8 %115, i8* %8, align 1, !tbaa !2449
  %116 = lshr i64 %96, 63
  %117 = xor i64 %114, %116
  %118 = add nuw nsw i64 %117, %114
  %119 = icmp eq i64 %118, 2
  %120 = zext i1 %119 to i8
  store i8 %120, i8* %9, align 1, !tbaa !2450
  %121 = add i64 %97, 5
  store i64 %121, i64* %PC, align 8
  %122 = add i64 %96, 56
  %123 = inttoptr i64 %98 to i64*
  %124 = load i64, i64* %123, align 8
  store i64 %124, i64* %RBP, align 8, !tbaa !2428
  store i64 %122, i64* %RSP, align 8, !tbaa !2428
  %125 = add i64 %97, 6
  store i64 %125, i64* %PC, align 8
  %126 = inttoptr i64 %122 to i64*
  %127 = load i64, i64* %126, align 8
  store i64 %127, i64* %PC, align 8, !tbaa !2428
  %128 = add i64 %96, 64
  store i64 %128, i64* %RSP, align 8, !tbaa !2428
  ret %struct.Memory* %2

block_400a3c:                                     ; preds = %block_400586
  %129 = add i64 %245, -12
  store i64 4196931, i64* %PC, align 8
  %130 = inttoptr i64 %129 to i32*
  store i32 25, i32* %130, align 4
  %131 = load i64, i64* %PC, align 8
  %132 = tail call %struct.Memory* @sub_400a43(%struct.State* nonnull %0, i64 %131, %struct.Memory* %2)
  ret %struct.Memory* %132

block_4006b8:                                     ; preds = %block_400586
  %133 = add i64 %245, -12
  store i64 4196031, i64* %PC, align 8
  %134 = inttoptr i64 %133 to i32*
  store i32 7, i32* %134, align 4
  %135 = load i64, i64* %RBP, align 8
  %136 = add i64 %135, -12
  %137 = load i64, i64* %PC, align 8
  %138 = add i64 %137, 3
  store i64 %138, i64* %PC, align 8
  %139 = inttoptr i64 %136 to i32*
  %140 = load i32, i32* %139, align 4
  %141 = zext i32 %140 to i64
  store i64 %141, i64* %RDI, align 8, !tbaa !2428
  %142 = add i64 %137, -431
  br label %block_400586.backedge

block_400b36:                                     ; preds = %block_400586
  %143 = add i64 %245, -12
  store i64 4197181, i64* %PC, align 8
  %144 = inttoptr i64 %143 to i32*
  store i32 30, i32* %144, align 4
  %145 = load i64, i64* %RBP, align 8
  %146 = add i64 %145, -12
  %147 = load i64, i64* %PC, align 8
  %148 = add i64 %147, 3
  store i64 %148, i64* %PC, align 8
  %149 = inttoptr i64 %146 to i32*
  %150 = load i32, i32* %149, align 4
  %151 = zext i32 %150 to i64
  store i64 %151, i64* %RDI, align 8, !tbaa !2428
  %152 = add i64 %147, -1581
  br label %block_400586.backedge

block_4005be:                                     ; preds = %block_400586
  %153 = add i64 %245, -12
  store i64 4195781, i64* %PC, align 8
  %154 = inttoptr i64 %153 to i32*
  store i32 2, i32* %154, align 4
  %155 = load i64, i64* %PC, align 8
  %156 = tail call %struct.Memory* @sub_4005c5(%struct.State* nonnull %0, i64 %155, %struct.Memory* %2)
  ret %struct.Memory* %156

block_4008ac:                                     ; preds = %block_400586
  %157 = add i64 %245, -12
  store i64 4196531, i64* %PC, align 8
  %158 = inttoptr i64 %157 to i32*
  store i32 17, i32* %158, align 4
  %159 = load i64, i64* %RBP, align 8
  %160 = add i64 %159, -12
  %161 = load i64, i64* %PC, align 8
  %162 = add i64 %161, 3
  store i64 %162, i64* %PC, align 8
  %163 = inttoptr i64 %160 to i32*
  %164 = load i32, i32* %163, align 4
  %165 = zext i32 %164 to i64
  store i64 %165, i64* %RDI, align 8, !tbaa !2428
  %166 = add i64 %161, -931
  br label %block_400586.backedge

block_400629:                                     ; preds = %block_400622, %3
  %167 = phi i64 [ %.pre, %block_400622 ], [ %1, %3 ]
  %168 = load i64, i64* %RBP, align 8
  %169 = add i64 %168, -12
  %170 = add i64 %167, 3
  store i64 %170, i64* %PC, align 8
  %171 = inttoptr i64 %169 to i32*
  %172 = load i32, i32* %171, align 4
  %173 = zext i32 %172 to i64
  store i64 %173, i64* %RDI, align 8, !tbaa !2428
  %174 = add i64 %167, -281
  %175 = add i64 %167, 8
  %176 = load i64, i64* %RSP, align 8, !tbaa !2428
  %177 = add i64 %176, -8
  %178 = inttoptr i64 %177 to i64*
  store i64 %175, i64* %178, align 8
  store i64 %177, i64* %RSP, align 8, !tbaa !2428
  store i64 %174, i64* %PC, align 8, !tbaa !2428
  %179 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %174, %struct.Memory* %2)
  br label %block_400586

block_4009a6:                                     ; preds = %block_400586
  %180 = add i64 %245, -12
  store i64 4196781, i64* %PC, align 8
  %181 = inttoptr i64 %180 to i32*
  store i32 22, i32* %181, align 4
  %182 = load i64, i64* %RBP, align 8
  %183 = add i64 %182, -12
  %184 = load i64, i64* %PC, align 8
  %185 = add i64 %184, 3
  store i64 %185, i64* %PC, align 8
  %186 = inttoptr i64 %183 to i32*
  %187 = load i32, i32* %186, align 4
  %188 = zext i32 %187 to i64
  store i64 %188, i64* %RDI, align 8, !tbaa !2428
  %189 = add i64 %184, -1181
  br label %block_400586.backedge

block_4005f0:                                     ; preds = %block_400586
  %190 = add i64 %245, -12
  store i64 4195831, i64* %PC, align 8
  %191 = inttoptr i64 %190 to i32*
  store i32 3, i32* %191, align 4
  %192 = load i64, i64* %RBP, align 8
  %193 = add i64 %192, -12
  %194 = load i64, i64* %PC, align 8
  %195 = add i64 %194, 3
  store i64 %195, i64* %PC, align 8
  %196 = inttoptr i64 %193 to i32*
  %197 = load i32, i32* %196, align 4
  %198 = zext i32 %197 to i64
  store i64 %198, i64* %RDI, align 8, !tbaa !2428
  %199 = add i64 %194, -231
  br label %block_400586.backedge

block_400586:                                     ; preds = %block_400586.backedge, %block_400629
  %.sink5 = phi i64 [ 201, %block_400629 ], [ %.sink5.be, %block_400586.backedge ]
  %200 = load i64, i64* %RBP, align 8
  %201 = add i64 %200, -8
  %202 = load i64, i64* %PC, align 8
  %203 = add i64 %202, 4
  store i64 %203, i64* %PC, align 8
  %204 = inttoptr i64 %201 to i64*
  %205 = load i64, i64* %204, align 8
  store i64 %205, i64* %RAX, align 8, !tbaa !2428
  %206 = add i64 %205, 4
  store i64 %206, i64* %RCX, align 8, !tbaa !2428
  %207 = icmp ugt i64 %205, -5
  %208 = zext i1 %207 to i8
  store i8 %208, i8* %4, align 1, !tbaa !2432
  %209 = trunc i64 %206 to i32
  %210 = and i32 %209, 255
  %211 = tail call i32 @llvm.ctpop.i32(i32 %210) #9
  %212 = trunc i32 %211 to i8
  %213 = and i8 %212, 1
  %214 = xor i8 %213, 1
  store i8 %214, i8* %5, align 1, !tbaa !2446
  %215 = xor i64 %206, %205
  %216 = lshr i64 %215, 4
  %217 = trunc i64 %216 to i8
  %218 = and i8 %217, 1
  store i8 %218, i8* %6, align 1, !tbaa !2447
  %219 = icmp eq i64 %206, 0
  %220 = zext i1 %219 to i8
  store i8 %220, i8* %7, align 1, !tbaa !2448
  %221 = lshr i64 %206, 63
  %222 = trunc i64 %221 to i8
  store i8 %222, i8* %8, align 1, !tbaa !2449
  %223 = lshr i64 %205, 63
  %224 = xor i64 %221, %223
  %225 = add nuw nsw i64 %224, %221
  %226 = icmp eq i64 %225, 2
  %227 = zext i1 %226 to i8
  store i8 %227, i8* %9, align 1, !tbaa !2450
  %228 = add i64 %202, 15
  store i64 %228, i64* %PC, align 8
  store i64 %206, i64* %204, align 8
  %229 = load i32*, i32** %10, align 8
  %230 = load i64, i64* %PC, align 8
  %231 = add i64 %230, 3
  store i64 %231, i64* %PC, align 8
  %232 = load i32, i32* %229, align 4
  %233 = sext i32 %232 to i64
  store i64 %233, i64* %RAX, align 8, !tbaa !2428
  %234 = shl nsw i64 %233, 3
  %235 = add i64 %234, add (i64 ptrtoint (%seg_602020__data_type* @seg_602020__data to i64), i64 16)
  %236 = add i64 %230, 11
  store i64 %236, i64* %PC, align 8
  %237 = inttoptr i64 %235 to i64*
  %238 = load i64, i64* %237, align 8
  store i64 %238, i64* %RAX, align 8, !tbaa !2428
  %239 = load i64, i64* %RBP, align 8
  %240 = add i64 %239, -40
  %241 = add i64 %230, 15
  store i64 %241, i64* %PC, align 8
  %242 = inttoptr i64 %240 to i64*
  store i64 %238, i64* %242, align 8
  %243 = load i64, i64* %PC, align 8
  %244 = sub i64 %243, %.sink5
  %245 = load i64, i64* %RBP, align 8
  %246 = add i64 %245, -40
  %247 = add i64 %244, 4
  store i64 %247, i64* %PC, align 8
  %248 = inttoptr i64 %246 to i64*
  %249 = load i64, i64* %248, align 8
  store i64 %249, i64* %RAX, align 8, !tbaa !2428
  store i64 %249, i64* %PC, align 8, !tbaa !2428
  switch i64 %249, label %302 [
    i64 4195924, label %block_400654
    i64 4196224, label %block_400780
    i64 4196274, label %block_4007b2
    i64 4197124, label %block_400b04
    i64 4195974, label %block_400686
    i64 4196874, label %block_400a0a
    i64 4196624, label %block_400910
    i64 4196374, label %block_400816
    i64 4196124, label %block_40071c
    i64 4197074, label %block_400ad2
    i64 4196574, label %block_4008de
    i64 4196324, label %block_4007e4
    i64 4197224, label %block_400b68
    i64 4196074, label %block_4006ea
    i64 4196474, label %block_40087a
    i64 4196824, label %block_4009d8
    i64 4195724, label %block_40058c
    i64 4196724, label %block_400974
    i64 4196424, label %block_400848
    i64 4195824, label %block_4005f0
    i64 4196674, label %block_400942
    i64 4196174, label %block_40074e
    i64 4196974, label %block_400a6e
    i64 4195705, label %block_400579
    i64 4196924, label %block_400a3c
    i64 4195774, label %block_4005be
    i64 4196024, label %block_4006b8
    i64 4197174, label %block_400b36
    i64 4196524, label %block_4008ac
    i64 4196774, label %block_4009a6
    i64 4195874, label %block_400622
    i64 4197024, label %block_400aa0
  ]

block_400622:                                     ; preds = %block_400586
  %250 = add i64 %245, -12
  store i64 4195881, i64* %PC, align 8
  %251 = inttoptr i64 %250 to i32*
  store i32 4, i32* %251, align 4
  %.pre = load i64, i64* %PC, align 8
  br label %block_400629

block_400aa0:                                     ; preds = %block_400586
  %252 = add i64 %245, -12
  store i64 4197031, i64* %PC, align 8
  %253 = inttoptr i64 %252 to i32*
  store i32 27, i32* %253, align 4
  %254 = load i64, i64* %PC, align 8
  %255 = tail call %struct.Memory* @sub_400aa7(%struct.State* nonnull %0, i64 %254, %struct.Memory* %2)
  ret %struct.Memory* %255

block_40071c:                                     ; preds = %block_400586
  %256 = add i64 %245, -12
  store i64 4196131, i64* %PC, align 8
  %257 = inttoptr i64 %256 to i32*
  store i32 9, i32* %257, align 4
  %258 = load i64, i64* %PC, align 8
  %259 = tail call %struct.Memory* @sub_400723(%struct.State* nonnull %0, i64 %258, %struct.Memory* %2)
  ret %struct.Memory* %259

block_400816:                                     ; preds = %block_400586
  %260 = add i64 %245, -12
  store i64 4196381, i64* %PC, align 8
  %261 = inttoptr i64 %260 to i32*
  store i32 14, i32* %261, align 4
  %262 = load i64, i64* %PC, align 8
  %263 = tail call %struct.Memory* @sub_40081d(%struct.State* nonnull %0, i64 %262, %struct.Memory* %2)
  ret %struct.Memory* %263

block_400910:                                     ; preds = %block_400586
  %264 = add i64 %245, -12
  store i64 4196631, i64* %PC, align 8
  %265 = inttoptr i64 %264 to i32*
  store i32 19, i32* %265, align 4
  %266 = load i64, i64* %PC, align 8
  %267 = tail call %struct.Memory* @sub_400917(%struct.State* nonnull %0, i64 %266, %struct.Memory* %2)
  ret %struct.Memory* %267

block_40058c:                                     ; preds = %block_400586
  %268 = add i64 %245, -12
  store i64 4195731, i64* %PC, align 8
  %269 = inttoptr i64 %268 to i32*
  store i32 1, i32* %269, align 4
  %270 = load i64, i64* %PC, align 8
  %271 = tail call %struct.Memory* @sub_400593(%struct.State* nonnull %0, i64 %270, %struct.Memory* %2)
  ret %struct.Memory* %271

block_400a0a:                                     ; preds = %block_400586
  %272 = add i64 %245, -12
  store i64 4196881, i64* %PC, align 8
  %273 = inttoptr i64 %272 to i32*
  store i32 24, i32* %273, align 4
  %274 = load i64, i64* %PC, align 8
  %275 = tail call %struct.Memory* @sub_400a11(%struct.State* nonnull %0, i64 %274, %struct.Memory* %2)
  ret %struct.Memory* %275

block_400686:                                     ; preds = %block_400586
  %276 = add i64 %245, -12
  store i64 4195981, i64* %PC, align 8
  %277 = inttoptr i64 %276 to i32*
  store i32 6, i32* %277, align 4
  %278 = load i64, i64* %PC, align 8
  %279 = tail call %struct.Memory* @sub_40068d(%struct.State* nonnull %0, i64 %278, %struct.Memory* %2)
  ret %struct.Memory* %279

block_400b04:                                     ; preds = %block_400586
  %280 = add i64 %245, -12
  store i64 4197131, i64* %PC, align 8
  %281 = inttoptr i64 %280 to i32*
  store i32 29, i32* %281, align 4
  %282 = load i64, i64* %PC, align 8
  %283 = tail call %struct.Memory* @sub_400b0b(%struct.State* nonnull %0, i64 %282, %struct.Memory* %2)
  ret %struct.Memory* %283

block_4007b2:                                     ; preds = %block_400586
  %284 = add i64 %245, -12
  store i64 4196281, i64* %PC, align 8
  %285 = inttoptr i64 %284 to i32*
  store i32 12, i32* %285, align 4
  %286 = load i64, i64* %RBP, align 8
  %287 = add i64 %286, -12
  %288 = load i64, i64* %PC, align 8
  %289 = add i64 %288, 3
  store i64 %289, i64* %PC, align 8
  %290 = inttoptr i64 %287 to i32*
  %291 = load i32, i32* %290, align 4
  %292 = zext i32 %291 to i64
  store i64 %292, i64* %RDI, align 8, !tbaa !2428
  %293 = add i64 %288, -681
  br label %block_400586.backedge

block_400780:                                     ; preds = %block_400586
  %294 = add i64 %245, -12
  store i64 4196231, i64* %PC, align 8
  %295 = inttoptr i64 %294 to i32*
  store i32 11, i32* %295, align 4
  %296 = load i64, i64* %PC, align 8
  %297 = tail call %struct.Memory* @sub_400787(%struct.State* nonnull %0, i64 %296, %struct.Memory* %2)
  ret %struct.Memory* %297

block_400654:                                     ; preds = %block_400586
  %298 = add i64 %245, -12
  store i64 4195931, i64* %PC, align 8
  %299 = inttoptr i64 %298 to i32*
  store i32 5, i32* %299, align 4
  %300 = load i64, i64* %PC, align 8
  %301 = tail call %struct.Memory* @sub_40065b(%struct.State* nonnull %0, i64 %300, %struct.Memory* %2)
  ret %struct.Memory* %301

; <label>:302:                                    ; preds = %block_400586
  %303 = tail call %struct.Memory* @__remill_jump(%struct.State* nonnull %0, i64 %249, %struct.Memory* %2)
  ret %struct.Memory* %303
}

; Function Attrs: noinline nounwind
define %struct.Memory* @sub_400723(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) local_unnamed_addr #6 {
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %PC, align 8
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RSP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %10 = bitcast i64* %RAX to i32**
  br label %block_400723

block_40087a:                                     ; preds = %block_400586
  %11 = add i64 %238, -12
  store i64 4196481, i64* %PC, align 8
  %12 = inttoptr i64 %11 to i32*
  store i32 16, i32* %12, align 4
  %13 = load i64, i64* %PC, align 8
  %14 = tail call %struct.Memory* @sub_400881(%struct.State* nonnull %0, i64 %13, %struct.Memory* %2)
  ret %struct.Memory* %14

block_400974:                                     ; preds = %block_400586
  %15 = add i64 %238, -12
  store i64 4196731, i64* %PC, align 8
  %16 = inttoptr i64 %15 to i32*
  store i32 21, i32* %16, align 4
  %17 = load i64, i64* %RBP, align 8
  %18 = add i64 %17, -12
  %19 = load i64, i64* %PC, align 8
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC, align 8
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RDI, align 8, !tbaa !2428
  %24 = add i64 %19, -1131
  br label %block_400586.backedge

block_400586.backedge:                            ; preds = %block_400974, %block_400a6e, %block_4006ea, %block_400b68, %block_4007e4, %block_4008de, %block_400b36, %block_4008ac, %block_4006b8, %block_4009a6, %block_4005f0, %block_400622, %block_400aa0, %block_4007b2
  %.sink218 = phi i64 [ %19, %block_400974 ], [ %34, %block_400a6e ], [ %44, %block_4006ea ], [ %54, %block_400b68 ], [ %64, %block_4007e4 ], [ %74, %block_4008de ], [ %143, %block_400b36 ], [ %157, %block_4008ac ], [ %167, %block_4006b8 ], [ %177, %block_4009a6 ], [ %187, %block_4005f0 ], [ %260, %block_400622 ], [ %270, %block_400aa0 ], [ %306, %block_4007b2 ]
  %.sink213 = phi i64 [ %24, %block_400974 ], [ %39, %block_400a6e ], [ %49, %block_4006ea ], [ %59, %block_400b68 ], [ %69, %block_4007e4 ], [ %79, %block_4008de ], [ %148, %block_400b36 ], [ %162, %block_4008ac ], [ %172, %block_4006b8 ], [ %182, %block_4009a6 ], [ %192, %block_4005f0 ], [ %265, %block_400622 ], [ %275, %block_400aa0 ], [ %311, %block_4007b2 ]
  %.sink5.be = phi i64 [ 1051, %block_400974 ], [ 1301, %block_400a6e ], [ 401, %block_4006ea ], [ 1551, %block_400b68 ], [ 651, %block_4007e4 ], [ 901, %block_4008de ], [ 1501, %block_400b36 ], [ 851, %block_4008ac ], [ 351, %block_4006b8 ], [ 1101, %block_4009a6 ], [ 151, %block_4005f0 ], [ 201, %block_400622 ], [ 1351, %block_400aa0 ], [ 601, %block_4007b2 ]
  %25 = add i64 %.sink218, 8
  %26 = load i64, i64* %RSP, align 8, !tbaa !2428
  %27 = add i64 %26, -8
  %28 = inttoptr i64 %27 to i64*
  store i64 %25, i64* %28, align 8
  store i64 %27, i64* %RSP, align 8, !tbaa !2428
  store i64 %.sink213, i64* %PC, align 8, !tbaa !2428
  %29 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %.sink213, %struct.Memory* %2)
  br label %block_400586

block_400a6e:                                     ; preds = %block_400586
  %30 = add i64 %238, -12
  store i64 4196981, i64* %PC, align 8
  %31 = inttoptr i64 %30 to i32*
  store i32 26, i32* %31, align 4
  %32 = load i64, i64* %RBP, align 8
  %33 = add i64 %32, -12
  %34 = load i64, i64* %PC, align 8
  %35 = add i64 %34, 3
  store i64 %35, i64* %PC, align 8
  %36 = inttoptr i64 %33 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i64
  store i64 %38, i64* %RDI, align 8, !tbaa !2428
  %39 = add i64 %34, -1381
  br label %block_400586.backedge

block_4006ea:                                     ; preds = %block_400586
  %40 = add i64 %238, -12
  store i64 4196081, i64* %PC, align 8
  %41 = inttoptr i64 %40 to i32*
  store i32 8, i32* %41, align 4
  %42 = load i64, i64* %RBP, align 8
  %43 = add i64 %42, -12
  %44 = load i64, i64* %PC, align 8
  %45 = add i64 %44, 3
  store i64 %45, i64* %PC, align 8
  %46 = inttoptr i64 %43 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = zext i32 %47 to i64
  store i64 %48, i64* %RDI, align 8, !tbaa !2428
  %49 = add i64 %44, -481
  br label %block_400586.backedge

block_400b68:                                     ; preds = %block_400586
  %50 = add i64 %238, -12
  store i64 4197231, i64* %PC, align 8
  %51 = inttoptr i64 %50 to i32*
  store i32 31, i32* %51, align 4
  %52 = load i64, i64* %RBP, align 8
  %53 = add i64 %52, -12
  %54 = load i64, i64* %PC, align 8
  %55 = add i64 %54, 3
  store i64 %55, i64* %PC, align 8
  %56 = inttoptr i64 %53 to i32*
  %57 = load i32, i32* %56, align 4
  %58 = zext i32 %57 to i64
  store i64 %58, i64* %RDI, align 8, !tbaa !2428
  %59 = add i64 %54, -1631
  br label %block_400586.backedge

block_4007e4:                                     ; preds = %block_400586
  %60 = add i64 %238, -12
  store i64 4196331, i64* %PC, align 8
  %61 = inttoptr i64 %60 to i32*
  store i32 13, i32* %61, align 4
  %62 = load i64, i64* %RBP, align 8
  %63 = add i64 %62, -12
  %64 = load i64, i64* %PC, align 8
  %65 = add i64 %64, 3
  store i64 %65, i64* %PC, align 8
  %66 = inttoptr i64 %63 to i32*
  %67 = load i32, i32* %66, align 4
  %68 = zext i32 %67 to i64
  store i64 %68, i64* %RDI, align 8, !tbaa !2428
  %69 = add i64 %64, -731
  br label %block_400586.backedge

block_4008de:                                     ; preds = %block_400586
  %70 = add i64 %238, -12
  store i64 4196581, i64* %PC, align 8
  %71 = inttoptr i64 %70 to i32*
  store i32 18, i32* %71, align 4
  %72 = load i64, i64* %RBP, align 8
  %73 = add i64 %72, -12
  %74 = load i64, i64* %PC, align 8
  %75 = add i64 %74, 3
  store i64 %75, i64* %PC, align 8
  %76 = inttoptr i64 %73 to i32*
  %77 = load i32, i32* %76, align 4
  %78 = zext i32 %77 to i64
  store i64 %78, i64* %RDI, align 8, !tbaa !2428
  %79 = add i64 %74, -981
  br label %block_400586.backedge

block_4009d8:                                     ; preds = %block_400586
  %80 = add i64 %238, -12
  store i64 4196831, i64* %PC, align 8
  %81 = inttoptr i64 %80 to i32*
  store i32 23, i32* %81, align 4
  %82 = load i64, i64* %PC, align 8
  %83 = tail call %struct.Memory* @sub_4009df(%struct.State* nonnull %0, i64 %82, %struct.Memory* %2)
  ret %struct.Memory* %83

block_400ad2:                                     ; preds = %block_400586
  %84 = add i64 %238, -12
  store i64 4197081, i64* %PC, align 8
  %85 = inttoptr i64 %84 to i32*
  store i32 28, i32* %85, align 4
  %86 = load i64, i64* %PC, align 8
  %87 = tail call %struct.Memory* @sub_400ad9(%struct.State* nonnull %0, i64 %86, %struct.Memory* %2)
  ret %struct.Memory* %87

block_400848:                                     ; preds = %block_400586
  %88 = add i64 %238, -12
  store i64 4196431, i64* %PC, align 8
  %89 = inttoptr i64 %88 to i32*
  store i32 15, i32* %89, align 4
  %90 = load i64, i64* %PC, align 8
  %91 = tail call %struct.Memory* @sub_40084f(%struct.State* nonnull %0, i64 %90, %struct.Memory* %2)
  ret %struct.Memory* %91

block_400942:                                     ; preds = %block_400586
  %92 = add i64 %238, -12
  store i64 4196681, i64* %PC, align 8
  %93 = inttoptr i64 %92 to i32*
  store i32 20, i32* %93, align 4
  %94 = load i64, i64* %PC, align 8
  %95 = tail call %struct.Memory* @sub_400949(%struct.State* nonnull %0, i64 %94, %struct.Memory* %2)
  ret %struct.Memory* %95

block_40074e:                                     ; preds = %block_400586
  %96 = add i64 %238, -12
  store i64 4196181, i64* %PC, align 8
  %97 = inttoptr i64 %96 to i32*
  store i32 10, i32* %97, align 4
  %98 = load i64, i64* %PC, align 8
  %99 = tail call %struct.Memory* @sub_400755(%struct.State* nonnull %0, i64 %98, %struct.Memory* %2)
  ret %struct.Memory* %99

block_400579:                                     ; preds = %block_400586
  %100 = add i64 %238, -12
  store i64 4195712, i64* %PC, align 8
  %101 = inttoptr i64 %100 to i32*
  store i32 0, i32* %101, align 4
  %102 = load i64, i64* %RSP, align 8
  %103 = load i64, i64* %PC, align 8
  %104 = add i64 %102, 48
  store i64 %104, i64* %RSP, align 8, !tbaa !2428
  %105 = icmp ugt i64 %102, -49
  %106 = zext i1 %105 to i8
  store i8 %106, i8* %4, align 1, !tbaa !2432
  %107 = trunc i64 %104 to i32
  %108 = and i32 %107, 255
  %109 = tail call i32 @llvm.ctpop.i32(i32 %108) #9
  %110 = trunc i32 %109 to i8
  %111 = and i8 %110, 1
  %112 = xor i8 %111, 1
  store i8 %112, i8* %5, align 1, !tbaa !2446
  %113 = xor i64 %102, 16
  %114 = xor i64 %113, %104
  %115 = lshr i64 %114, 4
  %116 = trunc i64 %115 to i8
  %117 = and i8 %116, 1
  store i8 %117, i8* %6, align 1, !tbaa !2447
  %118 = icmp eq i64 %104, 0
  %119 = zext i1 %118 to i8
  store i8 %119, i8* %7, align 1, !tbaa !2448
  %120 = lshr i64 %104, 63
  %121 = trunc i64 %120 to i8
  store i8 %121, i8* %8, align 1, !tbaa !2449
  %122 = lshr i64 %102, 63
  %123 = xor i64 %120, %122
  %124 = add nuw nsw i64 %123, %120
  %125 = icmp eq i64 %124, 2
  %126 = zext i1 %125 to i8
  store i8 %126, i8* %9, align 1, !tbaa !2450
  %127 = add i64 %103, 5
  store i64 %127, i64* %PC, align 8
  %128 = add i64 %102, 56
  %129 = inttoptr i64 %104 to i64*
  %130 = load i64, i64* %129, align 8
  store i64 %130, i64* %RBP, align 8, !tbaa !2428
  store i64 %128, i64* %RSP, align 8, !tbaa !2428
  %131 = add i64 %103, 6
  store i64 %131, i64* %PC, align 8
  %132 = inttoptr i64 %128 to i64*
  %133 = load i64, i64* %132, align 8
  store i64 %133, i64* %PC, align 8, !tbaa !2428
  %134 = add i64 %102, 64
  store i64 %134, i64* %RSP, align 8, !tbaa !2428
  ret %struct.Memory* %2

block_400a3c:                                     ; preds = %block_400586
  %135 = add i64 %238, -12
  store i64 4196931, i64* %PC, align 8
  %136 = inttoptr i64 %135 to i32*
  store i32 25, i32* %136, align 4
  %137 = load i64, i64* %PC, align 8
  %138 = tail call %struct.Memory* @sub_400a43(%struct.State* nonnull %0, i64 %137, %struct.Memory* %2)
  ret %struct.Memory* %138

block_400b36:                                     ; preds = %block_400586
  %139 = add i64 %238, -12
  store i64 4197181, i64* %PC, align 8
  %140 = inttoptr i64 %139 to i32*
  store i32 30, i32* %140, align 4
  %141 = load i64, i64* %RBP, align 8
  %142 = add i64 %141, -12
  %143 = load i64, i64* %PC, align 8
  %144 = add i64 %143, 3
  store i64 %144, i64* %PC, align 8
  %145 = inttoptr i64 %142 to i32*
  %146 = load i32, i32* %145, align 4
  %147 = zext i32 %146 to i64
  store i64 %147, i64* %RDI, align 8, !tbaa !2428
  %148 = add i64 %143, -1581
  br label %block_400586.backedge

block_4005be:                                     ; preds = %block_400586
  %149 = add i64 %238, -12
  store i64 4195781, i64* %PC, align 8
  %150 = inttoptr i64 %149 to i32*
  store i32 2, i32* %150, align 4
  %151 = load i64, i64* %PC, align 8
  %152 = tail call %struct.Memory* @sub_4005c5(%struct.State* nonnull %0, i64 %151, %struct.Memory* %2)
  ret %struct.Memory* %152

block_4008ac:                                     ; preds = %block_400586
  %153 = add i64 %238, -12
  store i64 4196531, i64* %PC, align 8
  %154 = inttoptr i64 %153 to i32*
  store i32 17, i32* %154, align 4
  %155 = load i64, i64* %RBP, align 8
  %156 = add i64 %155, -12
  %157 = load i64, i64* %PC, align 8
  %158 = add i64 %157, 3
  store i64 %158, i64* %PC, align 8
  %159 = inttoptr i64 %156 to i32*
  %160 = load i32, i32* %159, align 4
  %161 = zext i32 %160 to i64
  store i64 %161, i64* %RDI, align 8, !tbaa !2428
  %162 = add i64 %157, -931
  br label %block_400586.backedge

block_4006b8:                                     ; preds = %block_400586
  %163 = add i64 %238, -12
  store i64 4196031, i64* %PC, align 8
  %164 = inttoptr i64 %163 to i32*
  store i32 7, i32* %164, align 4
  %165 = load i64, i64* %RBP, align 8
  %166 = add i64 %165, -12
  %167 = load i64, i64* %PC, align 8
  %168 = add i64 %167, 3
  store i64 %168, i64* %PC, align 8
  %169 = inttoptr i64 %166 to i32*
  %170 = load i32, i32* %169, align 4
  %171 = zext i32 %170 to i64
  store i64 %171, i64* %RDI, align 8, !tbaa !2428
  %172 = add i64 %167, -431
  br label %block_400586.backedge

block_4009a6:                                     ; preds = %block_400586
  %173 = add i64 %238, -12
  store i64 4196781, i64* %PC, align 8
  %174 = inttoptr i64 %173 to i32*
  store i32 22, i32* %174, align 4
  %175 = load i64, i64* %RBP, align 8
  %176 = add i64 %175, -12
  %177 = load i64, i64* %PC, align 8
  %178 = add i64 %177, 3
  store i64 %178, i64* %PC, align 8
  %179 = inttoptr i64 %176 to i32*
  %180 = load i32, i32* %179, align 4
  %181 = zext i32 %180 to i64
  store i64 %181, i64* %RDI, align 8, !tbaa !2428
  %182 = add i64 %177, -1181
  br label %block_400586.backedge

block_4005f0:                                     ; preds = %block_400586
  %183 = add i64 %238, -12
  store i64 4195831, i64* %PC, align 8
  %184 = inttoptr i64 %183 to i32*
  store i32 3, i32* %184, align 4
  %185 = load i64, i64* %RBP, align 8
  %186 = add i64 %185, -12
  %187 = load i64, i64* %PC, align 8
  %188 = add i64 %187, 3
  store i64 %188, i64* %PC, align 8
  %189 = inttoptr i64 %186 to i32*
  %190 = load i32, i32* %189, align 4
  %191 = zext i32 %190 to i64
  store i64 %191, i64* %RDI, align 8, !tbaa !2428
  %192 = add i64 %187, -231
  br label %block_400586.backedge

block_400586:                                     ; preds = %block_400586.backedge, %block_400723
  %.sink5 = phi i64 [ 451, %block_400723 ], [ %.sink5.be, %block_400586.backedge ]
  %193 = load i64, i64* %RBP, align 8
  %194 = add i64 %193, -8
  %195 = load i64, i64* %PC, align 8
  %196 = add i64 %195, 4
  store i64 %196, i64* %PC, align 8
  %197 = inttoptr i64 %194 to i64*
  %198 = load i64, i64* %197, align 8
  store i64 %198, i64* %RAX, align 8, !tbaa !2428
  %199 = add i64 %198, 4
  store i64 %199, i64* %RCX, align 8, !tbaa !2428
  %200 = icmp ugt i64 %198, -5
  %201 = zext i1 %200 to i8
  store i8 %201, i8* %4, align 1, !tbaa !2432
  %202 = trunc i64 %199 to i32
  %203 = and i32 %202, 255
  %204 = tail call i32 @llvm.ctpop.i32(i32 %203) #9
  %205 = trunc i32 %204 to i8
  %206 = and i8 %205, 1
  %207 = xor i8 %206, 1
  store i8 %207, i8* %5, align 1, !tbaa !2446
  %208 = xor i64 %199, %198
  %209 = lshr i64 %208, 4
  %210 = trunc i64 %209 to i8
  %211 = and i8 %210, 1
  store i8 %211, i8* %6, align 1, !tbaa !2447
  %212 = icmp eq i64 %199, 0
  %213 = zext i1 %212 to i8
  store i8 %213, i8* %7, align 1, !tbaa !2448
  %214 = lshr i64 %199, 63
  %215 = trunc i64 %214 to i8
  store i8 %215, i8* %8, align 1, !tbaa !2449
  %216 = lshr i64 %198, 63
  %217 = xor i64 %214, %216
  %218 = add nuw nsw i64 %217, %214
  %219 = icmp eq i64 %218, 2
  %220 = zext i1 %219 to i8
  store i8 %220, i8* %9, align 1, !tbaa !2450
  %221 = add i64 %195, 15
  store i64 %221, i64* %PC, align 8
  store i64 %199, i64* %197, align 8
  %222 = load i32*, i32** %10, align 8
  %223 = load i64, i64* %PC, align 8
  %224 = add i64 %223, 3
  store i64 %224, i64* %PC, align 8
  %225 = load i32, i32* %222, align 4
  %226 = sext i32 %225 to i64
  store i64 %226, i64* %RAX, align 8, !tbaa !2428
  %227 = shl nsw i64 %226, 3
  %228 = add i64 %227, add (i64 ptrtoint (%seg_602020__data_type* @seg_602020__data to i64), i64 16)
  %229 = add i64 %223, 11
  store i64 %229, i64* %PC, align 8
  %230 = inttoptr i64 %228 to i64*
  %231 = load i64, i64* %230, align 8
  store i64 %231, i64* %RAX, align 8, !tbaa !2428
  %232 = load i64, i64* %RBP, align 8
  %233 = add i64 %232, -40
  %234 = add i64 %223, 15
  store i64 %234, i64* %PC, align 8
  %235 = inttoptr i64 %233 to i64*
  store i64 %231, i64* %235, align 8
  %236 = load i64, i64* %PC, align 8
  %237 = sub i64 %236, %.sink5
  %238 = load i64, i64* %RBP, align 8
  %239 = add i64 %238, -40
  %240 = add i64 %237, 4
  store i64 %240, i64* %PC, align 8
  %241 = inttoptr i64 %239 to i64*
  %242 = load i64, i64* %241, align 8
  store i64 %242, i64* %RAX, align 8, !tbaa !2428
  store i64 %242, i64* %PC, align 8, !tbaa !2428
  switch i64 %242, label %320 [
    i64 4195924, label %block_400654
    i64 4196224, label %block_400780
    i64 4196274, label %block_4007b2
    i64 4197124, label %block_400b04
    i64 4195974, label %block_400686
    i64 4196874, label %block_400a0a
    i64 4196624, label %block_400910
    i64 4196374, label %block_400816
    i64 4196124, label %block_40071c
    i64 4197074, label %block_400ad2
    i64 4196574, label %block_4008de
    i64 4196324, label %block_4007e4
    i64 4197224, label %block_400b68
    i64 4196074, label %block_4006ea
    i64 4196474, label %block_40087a
    i64 4196824, label %block_4009d8
    i64 4195724, label %block_40058c
    i64 4196724, label %block_400974
    i64 4196424, label %block_400848
    i64 4195824, label %block_4005f0
    i64 4196674, label %block_400942
    i64 4196174, label %block_40074e
    i64 4196974, label %block_400a6e
    i64 4195705, label %block_400579
    i64 4196924, label %block_400a3c
    i64 4195774, label %block_4005be
    i64 4197174, label %block_400b36
    i64 4196024, label %block_4006b8
    i64 4196524, label %block_4008ac
    i64 4196774, label %block_4009a6
    i64 4195874, label %block_400622
    i64 4197024, label %block_400aa0
  ]

block_400723:                                     ; preds = %block_40071c, %3
  %243 = phi i64 [ %.pre, %block_40071c ], [ %1, %3 ]
  %244 = load i64, i64* %RBP, align 8
  %245 = add i64 %244, -12
  %246 = add i64 %243, 3
  store i64 %246, i64* %PC, align 8
  %247 = inttoptr i64 %245 to i32*
  %248 = load i32, i32* %247, align 4
  %249 = zext i32 %248 to i64
  store i64 %249, i64* %RDI, align 8, !tbaa !2428
  %250 = add i64 %243, -531
  %251 = add i64 %243, 8
  %252 = load i64, i64* %RSP, align 8, !tbaa !2428
  %253 = add i64 %252, -8
  %254 = inttoptr i64 %253 to i64*
  store i64 %251, i64* %254, align 8
  store i64 %253, i64* %RSP, align 8, !tbaa !2428
  store i64 %250, i64* %PC, align 8, !tbaa !2428
  %255 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %250, %struct.Memory* %2)
  br label %block_400586

block_400622:                                     ; preds = %block_400586
  %256 = add i64 %238, -12
  store i64 4195881, i64* %PC, align 8
  %257 = inttoptr i64 %256 to i32*
  store i32 4, i32* %257, align 4
  %258 = load i64, i64* %RBP, align 8
  %259 = add i64 %258, -12
  %260 = load i64, i64* %PC, align 8
  %261 = add i64 %260, 3
  store i64 %261, i64* %PC, align 8
  %262 = inttoptr i64 %259 to i32*
  %263 = load i32, i32* %262, align 4
  %264 = zext i32 %263 to i64
  store i64 %264, i64* %RDI, align 8, !tbaa !2428
  %265 = add i64 %260, -281
  br label %block_400586.backedge

block_400aa0:                                     ; preds = %block_400586
  %266 = add i64 %238, -12
  store i64 4197031, i64* %PC, align 8
  %267 = inttoptr i64 %266 to i32*
  store i32 27, i32* %267, align 4
  %268 = load i64, i64* %RBP, align 8
  %269 = add i64 %268, -12
  %270 = load i64, i64* %PC, align 8
  %271 = add i64 %270, 3
  store i64 %271, i64* %PC, align 8
  %272 = inttoptr i64 %269 to i32*
  %273 = load i32, i32* %272, align 4
  %274 = zext i32 %273 to i64
  store i64 %274, i64* %RDI, align 8, !tbaa !2428
  %275 = add i64 %270, -1431
  br label %block_400586.backedge

block_40071c:                                     ; preds = %block_400586
  %276 = add i64 %238, -12
  store i64 4196131, i64* %PC, align 8
  %277 = inttoptr i64 %276 to i32*
  store i32 9, i32* %277, align 4
  %.pre = load i64, i64* %PC, align 8
  br label %block_400723

block_400816:                                     ; preds = %block_400586
  %278 = add i64 %238, -12
  store i64 4196381, i64* %PC, align 8
  %279 = inttoptr i64 %278 to i32*
  store i32 14, i32* %279, align 4
  %280 = load i64, i64* %PC, align 8
  %281 = tail call %struct.Memory* @sub_40081d(%struct.State* nonnull %0, i64 %280, %struct.Memory* %2)
  ret %struct.Memory* %281

block_400910:                                     ; preds = %block_400586
  %282 = add i64 %238, -12
  store i64 4196631, i64* %PC, align 8
  %283 = inttoptr i64 %282 to i32*
  store i32 19, i32* %283, align 4
  %284 = load i64, i64* %PC, align 8
  %285 = tail call %struct.Memory* @sub_400917(%struct.State* nonnull %0, i64 %284, %struct.Memory* %2)
  ret %struct.Memory* %285

block_40058c:                                     ; preds = %block_400586
  %286 = add i64 %238, -12
  store i64 4195731, i64* %PC, align 8
  %287 = inttoptr i64 %286 to i32*
  store i32 1, i32* %287, align 4
  %288 = load i64, i64* %PC, align 8
  %289 = tail call %struct.Memory* @sub_400593(%struct.State* nonnull %0, i64 %288, %struct.Memory* %2)
  ret %struct.Memory* %289

block_400a0a:                                     ; preds = %block_400586
  %290 = add i64 %238, -12
  store i64 4196881, i64* %PC, align 8
  %291 = inttoptr i64 %290 to i32*
  store i32 24, i32* %291, align 4
  %292 = load i64, i64* %PC, align 8
  %293 = tail call %struct.Memory* @sub_400a11(%struct.State* nonnull %0, i64 %292, %struct.Memory* %2)
  ret %struct.Memory* %293

block_400686:                                     ; preds = %block_400586
  %294 = add i64 %238, -12
  store i64 4195981, i64* %PC, align 8
  %295 = inttoptr i64 %294 to i32*
  store i32 6, i32* %295, align 4
  %296 = load i64, i64* %PC, align 8
  %297 = tail call %struct.Memory* @sub_40068d(%struct.State* nonnull %0, i64 %296, %struct.Memory* %2)
  ret %struct.Memory* %297

block_400b04:                                     ; preds = %block_400586
  %298 = add i64 %238, -12
  store i64 4197131, i64* %PC, align 8
  %299 = inttoptr i64 %298 to i32*
  store i32 29, i32* %299, align 4
  %300 = load i64, i64* %PC, align 8
  %301 = tail call %struct.Memory* @sub_400b0b(%struct.State* nonnull %0, i64 %300, %struct.Memory* %2)
  ret %struct.Memory* %301

block_4007b2:                                     ; preds = %block_400586
  %302 = add i64 %238, -12
  store i64 4196281, i64* %PC, align 8
  %303 = inttoptr i64 %302 to i32*
  store i32 12, i32* %303, align 4
  %304 = load i64, i64* %RBP, align 8
  %305 = add i64 %304, -12
  %306 = load i64, i64* %PC, align 8
  %307 = add i64 %306, 3
  store i64 %307, i64* %PC, align 8
  %308 = inttoptr i64 %305 to i32*
  %309 = load i32, i32* %308, align 4
  %310 = zext i32 %309 to i64
  store i64 %310, i64* %RDI, align 8, !tbaa !2428
  %311 = add i64 %306, -681
  br label %block_400586.backedge

block_400780:                                     ; preds = %block_400586
  %312 = add i64 %238, -12
  store i64 4196231, i64* %PC, align 8
  %313 = inttoptr i64 %312 to i32*
  store i32 11, i32* %313, align 4
  %314 = load i64, i64* %PC, align 8
  %315 = tail call %struct.Memory* @sub_400787(%struct.State* nonnull %0, i64 %314, %struct.Memory* %2)
  ret %struct.Memory* %315

block_400654:                                     ; preds = %block_400586
  %316 = add i64 %238, -12
  store i64 4195931, i64* %PC, align 8
  %317 = inttoptr i64 %316 to i32*
  store i32 5, i32* %317, align 4
  %318 = load i64, i64* %PC, align 8
  %319 = tail call %struct.Memory* @sub_40065b(%struct.State* nonnull %0, i64 %318, %struct.Memory* %2)
  ret %struct.Memory* %319

; <label>:320:                                    ; preds = %block_400586
  %321 = tail call %struct.Memory* @__remill_jump(%struct.State* nonnull %0, i64 %242, %struct.Memory* %2)
  ret %struct.Memory* %321
}

; Function Attrs: noinline nounwind
define %struct.Memory* @sub_4009df(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) local_unnamed_addr #6 {
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %PC, align 8
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RSP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %10 = bitcast i64* %RAX to i32**
  br label %block_4009df

block_40087a:                                     ; preds = %block_400586
  %11 = add i64 %249, -12
  store i64 4196481, i64* %PC, align 8
  %12 = inttoptr i64 %11 to i32*
  store i32 16, i32* %12, align 4
  %13 = load i64, i64* %PC, align 8
  %14 = tail call %struct.Memory* @sub_400881(%struct.State* nonnull %0, i64 %13, %struct.Memory* %2)
  ret %struct.Memory* %14

block_400974:                                     ; preds = %block_400586
  %15 = add i64 %249, -12
  store i64 4196731, i64* %PC, align 8
  %16 = inttoptr i64 %15 to i32*
  store i32 21, i32* %16, align 4
  %17 = load i64, i64* %RBP, align 8
  %18 = add i64 %17, -12
  %19 = load i64, i64* %PC, align 8
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC, align 8
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RDI, align 8, !tbaa !2428
  %24 = add i64 %19, -1131
  br label %block_400586.backedge

block_400586.backedge:                            ; preds = %block_400974, %block_400a6e, %block_4006ea, %block_400b68, %block_4007e4, %block_4008de, %block_400b36, %block_4008ac, %block_4006b8, %block_4009a6, %block_4005f0, %block_400622, %block_400aa0, %block_40071c, %block_4007b2
  %.sink210 = phi i64 [ %19, %block_400974 ], [ %34, %block_400a6e ], [ %44, %block_4006ea ], [ %54, %block_400b68 ], [ %64, %block_4007e4 ], [ %74, %block_4008de ], [ %141, %block_400b36 ], [ %155, %block_4008ac ], [ %165, %block_4006b8 ], [ %175, %block_4009a6 ], [ %185, %block_4005f0 ], [ %258, %block_400622 ], [ %268, %block_400aa0 ], [ %278, %block_40071c ], [ %312, %block_4007b2 ]
  %.sink205 = phi i64 [ %24, %block_400974 ], [ %39, %block_400a6e ], [ %49, %block_4006ea ], [ %59, %block_400b68 ], [ %69, %block_4007e4 ], [ %79, %block_4008de ], [ %146, %block_400b36 ], [ %160, %block_4008ac ], [ %170, %block_4006b8 ], [ %180, %block_4009a6 ], [ %190, %block_4005f0 ], [ %263, %block_400622 ], [ %273, %block_400aa0 ], [ %283, %block_40071c ], [ %317, %block_4007b2 ]
  %.sink5.be = phi i64 [ 1051, %block_400974 ], [ 1301, %block_400a6e ], [ 401, %block_4006ea ], [ 1551, %block_400b68 ], [ 651, %block_4007e4 ], [ 901, %block_4008de ], [ 1501, %block_400b36 ], [ 851, %block_4008ac ], [ 351, %block_4006b8 ], [ 1101, %block_4009a6 ], [ 151, %block_4005f0 ], [ 201, %block_400622 ], [ 1351, %block_400aa0 ], [ 451, %block_40071c ], [ 601, %block_4007b2 ]
  %25 = add i64 %.sink210, 8
  %26 = load i64, i64* %RSP, align 8, !tbaa !2428
  %27 = add i64 %26, -8
  %28 = inttoptr i64 %27 to i64*
  store i64 %25, i64* %28, align 8
  store i64 %27, i64* %RSP, align 8, !tbaa !2428
  store i64 %.sink205, i64* %PC, align 8, !tbaa !2428
  %29 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %.sink205, %struct.Memory* %2)
  br label %block_400586

block_400a6e:                                     ; preds = %block_400586
  %30 = add i64 %249, -12
  store i64 4196981, i64* %PC, align 8
  %31 = inttoptr i64 %30 to i32*
  store i32 26, i32* %31, align 4
  %32 = load i64, i64* %RBP, align 8
  %33 = add i64 %32, -12
  %34 = load i64, i64* %PC, align 8
  %35 = add i64 %34, 3
  store i64 %35, i64* %PC, align 8
  %36 = inttoptr i64 %33 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i64
  store i64 %38, i64* %RDI, align 8, !tbaa !2428
  %39 = add i64 %34, -1381
  br label %block_400586.backedge

block_4006ea:                                     ; preds = %block_400586
  %40 = add i64 %249, -12
  store i64 4196081, i64* %PC, align 8
  %41 = inttoptr i64 %40 to i32*
  store i32 8, i32* %41, align 4
  %42 = load i64, i64* %RBP, align 8
  %43 = add i64 %42, -12
  %44 = load i64, i64* %PC, align 8
  %45 = add i64 %44, 3
  store i64 %45, i64* %PC, align 8
  %46 = inttoptr i64 %43 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = zext i32 %47 to i64
  store i64 %48, i64* %RDI, align 8, !tbaa !2428
  %49 = add i64 %44, -481
  br label %block_400586.backedge

block_400b68:                                     ; preds = %block_400586
  %50 = add i64 %249, -12
  store i64 4197231, i64* %PC, align 8
  %51 = inttoptr i64 %50 to i32*
  store i32 31, i32* %51, align 4
  %52 = load i64, i64* %RBP, align 8
  %53 = add i64 %52, -12
  %54 = load i64, i64* %PC, align 8
  %55 = add i64 %54, 3
  store i64 %55, i64* %PC, align 8
  %56 = inttoptr i64 %53 to i32*
  %57 = load i32, i32* %56, align 4
  %58 = zext i32 %57 to i64
  store i64 %58, i64* %RDI, align 8, !tbaa !2428
  %59 = add i64 %54, -1631
  br label %block_400586.backedge

block_4007e4:                                     ; preds = %block_400586
  %60 = add i64 %249, -12
  store i64 4196331, i64* %PC, align 8
  %61 = inttoptr i64 %60 to i32*
  store i32 13, i32* %61, align 4
  %62 = load i64, i64* %RBP, align 8
  %63 = add i64 %62, -12
  %64 = load i64, i64* %PC, align 8
  %65 = add i64 %64, 3
  store i64 %65, i64* %PC, align 8
  %66 = inttoptr i64 %63 to i32*
  %67 = load i32, i32* %66, align 4
  %68 = zext i32 %67 to i64
  store i64 %68, i64* %RDI, align 8, !tbaa !2428
  %69 = add i64 %64, -731
  br label %block_400586.backedge

block_4008de:                                     ; preds = %block_400586
  %70 = add i64 %249, -12
  store i64 4196581, i64* %PC, align 8
  %71 = inttoptr i64 %70 to i32*
  store i32 18, i32* %71, align 4
  %72 = load i64, i64* %RBP, align 8
  %73 = add i64 %72, -12
  %74 = load i64, i64* %PC, align 8
  %75 = add i64 %74, 3
  store i64 %75, i64* %PC, align 8
  %76 = inttoptr i64 %73 to i32*
  %77 = load i32, i32* %76, align 4
  %78 = zext i32 %77 to i64
  store i64 %78, i64* %RDI, align 8, !tbaa !2428
  %79 = add i64 %74, -981
  br label %block_400586.backedge

block_4009d8:                                     ; preds = %block_400586
  %80 = add i64 %249, -12
  store i64 4196831, i64* %PC, align 8
  %81 = inttoptr i64 %80 to i32*
  store i32 23, i32* %81, align 4
  %.pre = load i64, i64* %PC, align 8
  br label %block_4009df

block_400ad2:                                     ; preds = %block_400586
  %82 = add i64 %249, -12
  store i64 4197081, i64* %PC, align 8
  %83 = inttoptr i64 %82 to i32*
  store i32 28, i32* %83, align 4
  %84 = load i64, i64* %PC, align 8
  %85 = tail call %struct.Memory* @sub_400ad9(%struct.State* nonnull %0, i64 %84, %struct.Memory* %2)
  ret %struct.Memory* %85

block_400848:                                     ; preds = %block_400586
  %86 = add i64 %249, -12
  store i64 4196431, i64* %PC, align 8
  %87 = inttoptr i64 %86 to i32*
  store i32 15, i32* %87, align 4
  %88 = load i64, i64* %PC, align 8
  %89 = tail call %struct.Memory* @sub_40084f(%struct.State* nonnull %0, i64 %88, %struct.Memory* %2)
  ret %struct.Memory* %89

block_400942:                                     ; preds = %block_400586
  %90 = add i64 %249, -12
  store i64 4196681, i64* %PC, align 8
  %91 = inttoptr i64 %90 to i32*
  store i32 20, i32* %91, align 4
  %92 = load i64, i64* %PC, align 8
  %93 = tail call %struct.Memory* @sub_400949(%struct.State* nonnull %0, i64 %92, %struct.Memory* %2)
  ret %struct.Memory* %93

block_40074e:                                     ; preds = %block_400586
  %94 = add i64 %249, -12
  store i64 4196181, i64* %PC, align 8
  %95 = inttoptr i64 %94 to i32*
  store i32 10, i32* %95, align 4
  %96 = load i64, i64* %PC, align 8
  %97 = tail call %struct.Memory* @sub_400755(%struct.State* nonnull %0, i64 %96, %struct.Memory* %2)
  ret %struct.Memory* %97

block_400579:                                     ; preds = %block_400586
  %98 = add i64 %249, -12
  store i64 4195712, i64* %PC, align 8
  %99 = inttoptr i64 %98 to i32*
  store i32 0, i32* %99, align 4
  %100 = load i64, i64* %RSP, align 8
  %101 = load i64, i64* %PC, align 8
  %102 = add i64 %100, 48
  store i64 %102, i64* %RSP, align 8, !tbaa !2428
  %103 = icmp ugt i64 %100, -49
  %104 = zext i1 %103 to i8
  store i8 %104, i8* %4, align 1, !tbaa !2432
  %105 = trunc i64 %102 to i32
  %106 = and i32 %105, 255
  %107 = tail call i32 @llvm.ctpop.i32(i32 %106) #9
  %108 = trunc i32 %107 to i8
  %109 = and i8 %108, 1
  %110 = xor i8 %109, 1
  store i8 %110, i8* %5, align 1, !tbaa !2446
  %111 = xor i64 %100, 16
  %112 = xor i64 %111, %102
  %113 = lshr i64 %112, 4
  %114 = trunc i64 %113 to i8
  %115 = and i8 %114, 1
  store i8 %115, i8* %6, align 1, !tbaa !2447
  %116 = icmp eq i64 %102, 0
  %117 = zext i1 %116 to i8
  store i8 %117, i8* %7, align 1, !tbaa !2448
  %118 = lshr i64 %102, 63
  %119 = trunc i64 %118 to i8
  store i8 %119, i8* %8, align 1, !tbaa !2449
  %120 = lshr i64 %100, 63
  %121 = xor i64 %118, %120
  %122 = add nuw nsw i64 %121, %118
  %123 = icmp eq i64 %122, 2
  %124 = zext i1 %123 to i8
  store i8 %124, i8* %9, align 1, !tbaa !2450
  %125 = add i64 %101, 5
  store i64 %125, i64* %PC, align 8
  %126 = add i64 %100, 56
  %127 = inttoptr i64 %102 to i64*
  %128 = load i64, i64* %127, align 8
  store i64 %128, i64* %RBP, align 8, !tbaa !2428
  store i64 %126, i64* %RSP, align 8, !tbaa !2428
  %129 = add i64 %101, 6
  store i64 %129, i64* %PC, align 8
  %130 = inttoptr i64 %126 to i64*
  %131 = load i64, i64* %130, align 8
  store i64 %131, i64* %PC, align 8, !tbaa !2428
  %132 = add i64 %100, 64
  store i64 %132, i64* %RSP, align 8, !tbaa !2428
  ret %struct.Memory* %2

block_400a3c:                                     ; preds = %block_400586
  %133 = add i64 %249, -12
  store i64 4196931, i64* %PC, align 8
  %134 = inttoptr i64 %133 to i32*
  store i32 25, i32* %134, align 4
  %135 = load i64, i64* %PC, align 8
  %136 = tail call %struct.Memory* @sub_400a43(%struct.State* nonnull %0, i64 %135, %struct.Memory* %2)
  ret %struct.Memory* %136

block_400b36:                                     ; preds = %block_400586
  %137 = add i64 %249, -12
  store i64 4197181, i64* %PC, align 8
  %138 = inttoptr i64 %137 to i32*
  store i32 30, i32* %138, align 4
  %139 = load i64, i64* %RBP, align 8
  %140 = add i64 %139, -12
  %141 = load i64, i64* %PC, align 8
  %142 = add i64 %141, 3
  store i64 %142, i64* %PC, align 8
  %143 = inttoptr i64 %140 to i32*
  %144 = load i32, i32* %143, align 4
  %145 = zext i32 %144 to i64
  store i64 %145, i64* %RDI, align 8, !tbaa !2428
  %146 = add i64 %141, -1581
  br label %block_400586.backedge

block_4005be:                                     ; preds = %block_400586
  %147 = add i64 %249, -12
  store i64 4195781, i64* %PC, align 8
  %148 = inttoptr i64 %147 to i32*
  store i32 2, i32* %148, align 4
  %149 = load i64, i64* %PC, align 8
  %150 = tail call %struct.Memory* @sub_4005c5(%struct.State* nonnull %0, i64 %149, %struct.Memory* %2)
  ret %struct.Memory* %150

block_4008ac:                                     ; preds = %block_400586
  %151 = add i64 %249, -12
  store i64 4196531, i64* %PC, align 8
  %152 = inttoptr i64 %151 to i32*
  store i32 17, i32* %152, align 4
  %153 = load i64, i64* %RBP, align 8
  %154 = add i64 %153, -12
  %155 = load i64, i64* %PC, align 8
  %156 = add i64 %155, 3
  store i64 %156, i64* %PC, align 8
  %157 = inttoptr i64 %154 to i32*
  %158 = load i32, i32* %157, align 4
  %159 = zext i32 %158 to i64
  store i64 %159, i64* %RDI, align 8, !tbaa !2428
  %160 = add i64 %155, -931
  br label %block_400586.backedge

block_4006b8:                                     ; preds = %block_400586
  %161 = add i64 %249, -12
  store i64 4196031, i64* %PC, align 8
  %162 = inttoptr i64 %161 to i32*
  store i32 7, i32* %162, align 4
  %163 = load i64, i64* %RBP, align 8
  %164 = add i64 %163, -12
  %165 = load i64, i64* %PC, align 8
  %166 = add i64 %165, 3
  store i64 %166, i64* %PC, align 8
  %167 = inttoptr i64 %164 to i32*
  %168 = load i32, i32* %167, align 4
  %169 = zext i32 %168 to i64
  store i64 %169, i64* %RDI, align 8, !tbaa !2428
  %170 = add i64 %165, -431
  br label %block_400586.backedge

block_4009a6:                                     ; preds = %block_400586
  %171 = add i64 %249, -12
  store i64 4196781, i64* %PC, align 8
  %172 = inttoptr i64 %171 to i32*
  store i32 22, i32* %172, align 4
  %173 = load i64, i64* %RBP, align 8
  %174 = add i64 %173, -12
  %175 = load i64, i64* %PC, align 8
  %176 = add i64 %175, 3
  store i64 %176, i64* %PC, align 8
  %177 = inttoptr i64 %174 to i32*
  %178 = load i32, i32* %177, align 4
  %179 = zext i32 %178 to i64
  store i64 %179, i64* %RDI, align 8, !tbaa !2428
  %180 = add i64 %175, -1181
  br label %block_400586.backedge

block_4005f0:                                     ; preds = %block_400586
  %181 = add i64 %249, -12
  store i64 4195831, i64* %PC, align 8
  %182 = inttoptr i64 %181 to i32*
  store i32 3, i32* %182, align 4
  %183 = load i64, i64* %RBP, align 8
  %184 = add i64 %183, -12
  %185 = load i64, i64* %PC, align 8
  %186 = add i64 %185, 3
  store i64 %186, i64* %PC, align 8
  %187 = inttoptr i64 %184 to i32*
  %188 = load i32, i32* %187, align 4
  %189 = zext i32 %188 to i64
  store i64 %189, i64* %RDI, align 8, !tbaa !2428
  %190 = add i64 %185, -231
  br label %block_400586.backedge

block_4009df:                                     ; preds = %block_4009d8, %3
  %191 = phi i64 [ %.pre, %block_4009d8 ], [ %1, %3 ]
  %192 = load i64, i64* %RBP, align 8
  %193 = add i64 %192, -12
  %194 = add i64 %191, 3
  store i64 %194, i64* %PC, align 8
  %195 = inttoptr i64 %193 to i32*
  %196 = load i32, i32* %195, align 4
  %197 = zext i32 %196 to i64
  store i64 %197, i64* %RDI, align 8, !tbaa !2428
  %198 = add i64 %191, -1231
  %199 = add i64 %191, 8
  %200 = load i64, i64* %RSP, align 8, !tbaa !2428
  %201 = add i64 %200, -8
  %202 = inttoptr i64 %201 to i64*
  store i64 %199, i64* %202, align 8
  store i64 %201, i64* %RSP, align 8, !tbaa !2428
  store i64 %198, i64* %PC, align 8, !tbaa !2428
  %203 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %198, %struct.Memory* %2)
  br label %block_400586

block_400586:                                     ; preds = %block_400586.backedge, %block_4009df
  %.sink5 = phi i64 [ 1151, %block_4009df ], [ %.sink5.be, %block_400586.backedge ]
  %204 = load i64, i64* %RBP, align 8
  %205 = add i64 %204, -8
  %206 = load i64, i64* %PC, align 8
  %207 = add i64 %206, 4
  store i64 %207, i64* %PC, align 8
  %208 = inttoptr i64 %205 to i64*
  %209 = load i64, i64* %208, align 8
  store i64 %209, i64* %RAX, align 8, !tbaa !2428
  %210 = add i64 %209, 4
  store i64 %210, i64* %RCX, align 8, !tbaa !2428
  %211 = icmp ugt i64 %209, -5
  %212 = zext i1 %211 to i8
  store i8 %212, i8* %4, align 1, !tbaa !2432
  %213 = trunc i64 %210 to i32
  %214 = and i32 %213, 255
  %215 = tail call i32 @llvm.ctpop.i32(i32 %214) #9
  %216 = trunc i32 %215 to i8
  %217 = and i8 %216, 1
  %218 = xor i8 %217, 1
  store i8 %218, i8* %5, align 1, !tbaa !2446
  %219 = xor i64 %210, %209
  %220 = lshr i64 %219, 4
  %221 = trunc i64 %220 to i8
  %222 = and i8 %221, 1
  store i8 %222, i8* %6, align 1, !tbaa !2447
  %223 = icmp eq i64 %210, 0
  %224 = zext i1 %223 to i8
  store i8 %224, i8* %7, align 1, !tbaa !2448
  %225 = lshr i64 %210, 63
  %226 = trunc i64 %225 to i8
  store i8 %226, i8* %8, align 1, !tbaa !2449
  %227 = lshr i64 %209, 63
  %228 = xor i64 %225, %227
  %229 = add nuw nsw i64 %228, %225
  %230 = icmp eq i64 %229, 2
  %231 = zext i1 %230 to i8
  store i8 %231, i8* %9, align 1, !tbaa !2450
  %232 = add i64 %206, 15
  store i64 %232, i64* %PC, align 8
  store i64 %210, i64* %208, align 8
  %233 = load i32*, i32** %10, align 8
  %234 = load i64, i64* %PC, align 8
  %235 = add i64 %234, 3
  store i64 %235, i64* %PC, align 8
  %236 = load i32, i32* %233, align 4
  %237 = sext i32 %236 to i64
  store i64 %237, i64* %RAX, align 8, !tbaa !2428
  %238 = shl nsw i64 %237, 3
  %239 = add i64 %238, add (i64 ptrtoint (%seg_602020__data_type* @seg_602020__data to i64), i64 16)
  %240 = add i64 %234, 11
  store i64 %240, i64* %PC, align 8
  %241 = inttoptr i64 %239 to i64*
  %242 = load i64, i64* %241, align 8
  store i64 %242, i64* %RAX, align 8, !tbaa !2428
  %243 = load i64, i64* %RBP, align 8
  %244 = add i64 %243, -40
  %245 = add i64 %234, 15
  store i64 %245, i64* %PC, align 8
  %246 = inttoptr i64 %244 to i64*
  store i64 %242, i64* %246, align 8
  %247 = load i64, i64* %PC, align 8
  %248 = sub i64 %247, %.sink5
  %249 = load i64, i64* %RBP, align 8
  %250 = add i64 %249, -40
  %251 = add i64 %248, 4
  store i64 %251, i64* %PC, align 8
  %252 = inttoptr i64 %250 to i64*
  %253 = load i64, i64* %252, align 8
  store i64 %253, i64* %RAX, align 8, !tbaa !2428
  store i64 %253, i64* %PC, align 8, !tbaa !2428
  switch i64 %253, label %326 [
    i64 4195924, label %block_400654
    i64 4196224, label %block_400780
    i64 4196274, label %block_4007b2
    i64 4197124, label %block_400b04
    i64 4195974, label %block_400686
    i64 4196874, label %block_400a0a
    i64 4196624, label %block_400910
    i64 4196374, label %block_400816
    i64 4196124, label %block_40071c
    i64 4197074, label %block_400ad2
    i64 4196574, label %block_4008de
    i64 4196324, label %block_4007e4
    i64 4197224, label %block_400b68
    i64 4196074, label %block_4006ea
    i64 4196474, label %block_40087a
    i64 4196824, label %block_4009d8
    i64 4195724, label %block_40058c
    i64 4196724, label %block_400974
    i64 4196424, label %block_400848
    i64 4195824, label %block_4005f0
    i64 4196674, label %block_400942
    i64 4196174, label %block_40074e
    i64 4196974, label %block_400a6e
    i64 4195705, label %block_400579
    i64 4196924, label %block_400a3c
    i64 4195774, label %block_4005be
    i64 4197174, label %block_400b36
    i64 4196024, label %block_4006b8
    i64 4196524, label %block_4008ac
    i64 4196774, label %block_4009a6
    i64 4195874, label %block_400622
    i64 4197024, label %block_400aa0
  ]

block_400622:                                     ; preds = %block_400586
  %254 = add i64 %249, -12
  store i64 4195881, i64* %PC, align 8
  %255 = inttoptr i64 %254 to i32*
  store i32 4, i32* %255, align 4
  %256 = load i64, i64* %RBP, align 8
  %257 = add i64 %256, -12
  %258 = load i64, i64* %PC, align 8
  %259 = add i64 %258, 3
  store i64 %259, i64* %PC, align 8
  %260 = inttoptr i64 %257 to i32*
  %261 = load i32, i32* %260, align 4
  %262 = zext i32 %261 to i64
  store i64 %262, i64* %RDI, align 8, !tbaa !2428
  %263 = add i64 %258, -281
  br label %block_400586.backedge

block_400aa0:                                     ; preds = %block_400586
  %264 = add i64 %249, -12
  store i64 4197031, i64* %PC, align 8
  %265 = inttoptr i64 %264 to i32*
  store i32 27, i32* %265, align 4
  %266 = load i64, i64* %RBP, align 8
  %267 = add i64 %266, -12
  %268 = load i64, i64* %PC, align 8
  %269 = add i64 %268, 3
  store i64 %269, i64* %PC, align 8
  %270 = inttoptr i64 %267 to i32*
  %271 = load i32, i32* %270, align 4
  %272 = zext i32 %271 to i64
  store i64 %272, i64* %RDI, align 8, !tbaa !2428
  %273 = add i64 %268, -1431
  br label %block_400586.backedge

block_40071c:                                     ; preds = %block_400586
  %274 = add i64 %249, -12
  store i64 4196131, i64* %PC, align 8
  %275 = inttoptr i64 %274 to i32*
  store i32 9, i32* %275, align 4
  %276 = load i64, i64* %RBP, align 8
  %277 = add i64 %276, -12
  %278 = load i64, i64* %PC, align 8
  %279 = add i64 %278, 3
  store i64 %279, i64* %PC, align 8
  %280 = inttoptr i64 %277 to i32*
  %281 = load i32, i32* %280, align 4
  %282 = zext i32 %281 to i64
  store i64 %282, i64* %RDI, align 8, !tbaa !2428
  %283 = add i64 %278, -531
  br label %block_400586.backedge

block_400816:                                     ; preds = %block_400586
  %284 = add i64 %249, -12
  store i64 4196381, i64* %PC, align 8
  %285 = inttoptr i64 %284 to i32*
  store i32 14, i32* %285, align 4
  %286 = load i64, i64* %PC, align 8
  %287 = tail call %struct.Memory* @sub_40081d(%struct.State* nonnull %0, i64 %286, %struct.Memory* %2)
  ret %struct.Memory* %287

block_400910:                                     ; preds = %block_400586
  %288 = add i64 %249, -12
  store i64 4196631, i64* %PC, align 8
  %289 = inttoptr i64 %288 to i32*
  store i32 19, i32* %289, align 4
  %290 = load i64, i64* %PC, align 8
  %291 = tail call %struct.Memory* @sub_400917(%struct.State* nonnull %0, i64 %290, %struct.Memory* %2)
  ret %struct.Memory* %291

block_40058c:                                     ; preds = %block_400586
  %292 = add i64 %249, -12
  store i64 4195731, i64* %PC, align 8
  %293 = inttoptr i64 %292 to i32*
  store i32 1, i32* %293, align 4
  %294 = load i64, i64* %PC, align 8
  %295 = tail call %struct.Memory* @sub_400593(%struct.State* nonnull %0, i64 %294, %struct.Memory* %2)
  ret %struct.Memory* %295

block_400a0a:                                     ; preds = %block_400586
  %296 = add i64 %249, -12
  store i64 4196881, i64* %PC, align 8
  %297 = inttoptr i64 %296 to i32*
  store i32 24, i32* %297, align 4
  %298 = load i64, i64* %PC, align 8
  %299 = tail call %struct.Memory* @sub_400a11(%struct.State* nonnull %0, i64 %298, %struct.Memory* %2)
  ret %struct.Memory* %299

block_400686:                                     ; preds = %block_400586
  %300 = add i64 %249, -12
  store i64 4195981, i64* %PC, align 8
  %301 = inttoptr i64 %300 to i32*
  store i32 6, i32* %301, align 4
  %302 = load i64, i64* %PC, align 8
  %303 = tail call %struct.Memory* @sub_40068d(%struct.State* nonnull %0, i64 %302, %struct.Memory* %2)
  ret %struct.Memory* %303

block_400b04:                                     ; preds = %block_400586
  %304 = add i64 %249, -12
  store i64 4197131, i64* %PC, align 8
  %305 = inttoptr i64 %304 to i32*
  store i32 29, i32* %305, align 4
  %306 = load i64, i64* %PC, align 8
  %307 = tail call %struct.Memory* @sub_400b0b(%struct.State* nonnull %0, i64 %306, %struct.Memory* %2)
  ret %struct.Memory* %307

block_4007b2:                                     ; preds = %block_400586
  %308 = add i64 %249, -12
  store i64 4196281, i64* %PC, align 8
  %309 = inttoptr i64 %308 to i32*
  store i32 12, i32* %309, align 4
  %310 = load i64, i64* %RBP, align 8
  %311 = add i64 %310, -12
  %312 = load i64, i64* %PC, align 8
  %313 = add i64 %312, 3
  store i64 %313, i64* %PC, align 8
  %314 = inttoptr i64 %311 to i32*
  %315 = load i32, i32* %314, align 4
  %316 = zext i32 %315 to i64
  store i64 %316, i64* %RDI, align 8, !tbaa !2428
  %317 = add i64 %312, -681
  br label %block_400586.backedge

block_400780:                                     ; preds = %block_400586
  %318 = add i64 %249, -12
  store i64 4196231, i64* %PC, align 8
  %319 = inttoptr i64 %318 to i32*
  store i32 11, i32* %319, align 4
  %320 = load i64, i64* %PC, align 8
  %321 = tail call %struct.Memory* @sub_400787(%struct.State* nonnull %0, i64 %320, %struct.Memory* %2)
  ret %struct.Memory* %321

block_400654:                                     ; preds = %block_400586
  %322 = add i64 %249, -12
  store i64 4195931, i64* %PC, align 8
  %323 = inttoptr i64 %322 to i32*
  store i32 5, i32* %323, align 4
  %324 = load i64, i64* %PC, align 8
  %325 = tail call %struct.Memory* @sub_40065b(%struct.State* nonnull %0, i64 %324, %struct.Memory* %2)
  ret %struct.Memory* %325

; <label>:326:                                    ; preds = %block_400586
  %327 = tail call %struct.Memory* @__remill_jump(%struct.State* nonnull %0, i64 %253, %struct.Memory* %2)
  ret %struct.Memory* %327
}

; Function Attrs: noinline nounwind
define %struct.Memory* @sub_40081d(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) local_unnamed_addr #6 {
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %PC, align 8
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RSP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %10 = bitcast i64* %RAX to i32**
  br label %block_40081d

block_40087a:                                     ; preds = %block_400586
  %11 = add i64 %248, -12
  store i64 4196481, i64* %PC, align 8
  %12 = inttoptr i64 %11 to i32*
  store i32 16, i32* %12, align 4
  %13 = load i64, i64* %PC, align 8
  %14 = tail call %struct.Memory* @sub_400881(%struct.State* nonnull %0, i64 %13, %struct.Memory* %2)
  ret %struct.Memory* %14

block_400974:                                     ; preds = %block_400586
  %15 = add i64 %248, -12
  store i64 4196731, i64* %PC, align 8
  %16 = inttoptr i64 %15 to i32*
  store i32 21, i32* %16, align 4
  %17 = load i64, i64* %RBP, align 8
  %18 = add i64 %17, -12
  %19 = load i64, i64* %PC, align 8
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC, align 8
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RDI, align 8, !tbaa !2428
  %24 = add i64 %19, -1131
  br label %block_400586.backedge

block_400586.backedge:                            ; preds = %block_400974, %block_400a6e, %block_4006ea, %block_400b68, %block_4007e4, %block_4008de, %block_4009d8, %block_4005f0, %block_4006b8, %block_400b36, %block_4007b2, %block_4008ac, %block_400622, %block_400aa0, %block_40071c, %block_4009a6
  %.sink202 = phi i64 [ %19, %block_400974 ], [ %34, %block_400a6e ], [ %44, %block_4006ea ], [ %54, %block_400b68 ], [ %64, %block_4007e4 ], [ %74, %block_4008de ], [ %84, %block_4009d8 ], [ %118, %block_4005f0 ], [ %132, %block_4006b8 ], [ %142, %block_400b36 ], [ %187, %block_4007b2 ], [ %197, %block_4008ac ], [ %257, %block_400622 ], [ %267, %block_400aa0 ], [ %290, %block_40071c ], [ %326, %block_4009a6 ]
  %.sink197 = phi i64 [ %24, %block_400974 ], [ %39, %block_400a6e ], [ %49, %block_4006ea ], [ %59, %block_400b68 ], [ %69, %block_4007e4 ], [ %79, %block_4008de ], [ %89, %block_4009d8 ], [ %123, %block_4005f0 ], [ %137, %block_4006b8 ], [ %147, %block_400b36 ], [ %192, %block_4007b2 ], [ %202, %block_4008ac ], [ %262, %block_400622 ], [ %272, %block_400aa0 ], [ %295, %block_40071c ], [ %331, %block_4009a6 ]
  %.sink5.be = phi i64 [ 1051, %block_400974 ], [ 1301, %block_400a6e ], [ 401, %block_4006ea ], [ 1551, %block_400b68 ], [ 651, %block_4007e4 ], [ 901, %block_4008de ], [ 1151, %block_4009d8 ], [ 151, %block_4005f0 ], [ 351, %block_4006b8 ], [ 1501, %block_400b36 ], [ 601, %block_4007b2 ], [ 851, %block_4008ac ], [ 201, %block_400622 ], [ 1351, %block_400aa0 ], [ 451, %block_40071c ], [ 1101, %block_4009a6 ]
  %25 = add i64 %.sink202, 8
  %26 = load i64, i64* %RSP, align 8, !tbaa !2428
  %27 = add i64 %26, -8
  %28 = inttoptr i64 %27 to i64*
  store i64 %25, i64* %28, align 8
  store i64 %27, i64* %RSP, align 8, !tbaa !2428
  store i64 %.sink197, i64* %PC, align 8, !tbaa !2428
  %29 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %.sink197, %struct.Memory* %2)
  br label %block_400586

block_400a6e:                                     ; preds = %block_400586
  %30 = add i64 %248, -12
  store i64 4196981, i64* %PC, align 8
  %31 = inttoptr i64 %30 to i32*
  store i32 26, i32* %31, align 4
  %32 = load i64, i64* %RBP, align 8
  %33 = add i64 %32, -12
  %34 = load i64, i64* %PC, align 8
  %35 = add i64 %34, 3
  store i64 %35, i64* %PC, align 8
  %36 = inttoptr i64 %33 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i64
  store i64 %38, i64* %RDI, align 8, !tbaa !2428
  %39 = add i64 %34, -1381
  br label %block_400586.backedge

block_4006ea:                                     ; preds = %block_400586
  %40 = add i64 %248, -12
  store i64 4196081, i64* %PC, align 8
  %41 = inttoptr i64 %40 to i32*
  store i32 8, i32* %41, align 4
  %42 = load i64, i64* %RBP, align 8
  %43 = add i64 %42, -12
  %44 = load i64, i64* %PC, align 8
  %45 = add i64 %44, 3
  store i64 %45, i64* %PC, align 8
  %46 = inttoptr i64 %43 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = zext i32 %47 to i64
  store i64 %48, i64* %RDI, align 8, !tbaa !2428
  %49 = add i64 %44, -481
  br label %block_400586.backedge

block_400b68:                                     ; preds = %block_400586
  %50 = add i64 %248, -12
  store i64 4197231, i64* %PC, align 8
  %51 = inttoptr i64 %50 to i32*
  store i32 31, i32* %51, align 4
  %52 = load i64, i64* %RBP, align 8
  %53 = add i64 %52, -12
  %54 = load i64, i64* %PC, align 8
  %55 = add i64 %54, 3
  store i64 %55, i64* %PC, align 8
  %56 = inttoptr i64 %53 to i32*
  %57 = load i32, i32* %56, align 4
  %58 = zext i32 %57 to i64
  store i64 %58, i64* %RDI, align 8, !tbaa !2428
  %59 = add i64 %54, -1631
  br label %block_400586.backedge

block_4007e4:                                     ; preds = %block_400586
  %60 = add i64 %248, -12
  store i64 4196331, i64* %PC, align 8
  %61 = inttoptr i64 %60 to i32*
  store i32 13, i32* %61, align 4
  %62 = load i64, i64* %RBP, align 8
  %63 = add i64 %62, -12
  %64 = load i64, i64* %PC, align 8
  %65 = add i64 %64, 3
  store i64 %65, i64* %PC, align 8
  %66 = inttoptr i64 %63 to i32*
  %67 = load i32, i32* %66, align 4
  %68 = zext i32 %67 to i64
  store i64 %68, i64* %RDI, align 8, !tbaa !2428
  %69 = add i64 %64, -731
  br label %block_400586.backedge

block_4008de:                                     ; preds = %block_400586
  %70 = add i64 %248, -12
  store i64 4196581, i64* %PC, align 8
  %71 = inttoptr i64 %70 to i32*
  store i32 18, i32* %71, align 4
  %72 = load i64, i64* %RBP, align 8
  %73 = add i64 %72, -12
  %74 = load i64, i64* %PC, align 8
  %75 = add i64 %74, 3
  store i64 %75, i64* %PC, align 8
  %76 = inttoptr i64 %73 to i32*
  %77 = load i32, i32* %76, align 4
  %78 = zext i32 %77 to i64
  store i64 %78, i64* %RDI, align 8, !tbaa !2428
  %79 = add i64 %74, -981
  br label %block_400586.backedge

block_4009d8:                                     ; preds = %block_400586
  %80 = add i64 %248, -12
  store i64 4196831, i64* %PC, align 8
  %81 = inttoptr i64 %80 to i32*
  store i32 23, i32* %81, align 4
  %82 = load i64, i64* %RBP, align 8
  %83 = add i64 %82, -12
  %84 = load i64, i64* %PC, align 8
  %85 = add i64 %84, 3
  store i64 %85, i64* %PC, align 8
  %86 = inttoptr i64 %83 to i32*
  %87 = load i32, i32* %86, align 4
  %88 = zext i32 %87 to i64
  store i64 %88, i64* %RDI, align 8, !tbaa !2428
  %89 = add i64 %84, -1231
  br label %block_400586.backedge

block_400654:                                     ; preds = %block_400586
  %90 = add i64 %248, -12
  store i64 4195931, i64* %PC, align 8
  %91 = inttoptr i64 %90 to i32*
  store i32 5, i32* %91, align 4
  %92 = load i64, i64* %PC, align 8
  %93 = tail call %struct.Memory* @sub_40065b(%struct.State* nonnull %0, i64 %92, %struct.Memory* %2)
  ret %struct.Memory* %93

block_400ad2:                                     ; preds = %block_400586
  %94 = add i64 %248, -12
  store i64 4197081, i64* %PC, align 8
  %95 = inttoptr i64 %94 to i32*
  store i32 28, i32* %95, align 4
  %96 = load i64, i64* %PC, align 8
  %97 = tail call %struct.Memory* @sub_400ad9(%struct.State* nonnull %0, i64 %96, %struct.Memory* %2)
  ret %struct.Memory* %97

block_40074e:                                     ; preds = %block_400586
  %98 = add i64 %248, -12
  store i64 4196181, i64* %PC, align 8
  %99 = inttoptr i64 %98 to i32*
  store i32 10, i32* %99, align 4
  %100 = load i64, i64* %PC, align 8
  %101 = tail call %struct.Memory* @sub_400755(%struct.State* nonnull %0, i64 %100, %struct.Memory* %2)
  ret %struct.Memory* %101

block_400848:                                     ; preds = %block_400586
  %102 = add i64 %248, -12
  store i64 4196431, i64* %PC, align 8
  %103 = inttoptr i64 %102 to i32*
  store i32 15, i32* %103, align 4
  %104 = load i64, i64* %PC, align 8
  %105 = tail call %struct.Memory* @sub_40084f(%struct.State* nonnull %0, i64 %104, %struct.Memory* %2)
  ret %struct.Memory* %105

block_400942:                                     ; preds = %block_400586
  %106 = add i64 %248, -12
  store i64 4196681, i64* %PC, align 8
  %107 = inttoptr i64 %106 to i32*
  store i32 20, i32* %107, align 4
  %108 = load i64, i64* %PC, align 8
  %109 = tail call %struct.Memory* @sub_400949(%struct.State* nonnull %0, i64 %108, %struct.Memory* %2)
  ret %struct.Memory* %109

block_4005be:                                     ; preds = %block_400586
  %110 = add i64 %248, -12
  store i64 4195781, i64* %PC, align 8
  %111 = inttoptr i64 %110 to i32*
  store i32 2, i32* %111, align 4
  %112 = load i64, i64* %PC, align 8
  %113 = tail call %struct.Memory* @sub_4005c5(%struct.State* nonnull %0, i64 %112, %struct.Memory* %2)
  ret %struct.Memory* %113

block_4005f0:                                     ; preds = %block_400586
  %114 = add i64 %248, -12
  store i64 4195831, i64* %PC, align 8
  %115 = inttoptr i64 %114 to i32*
  store i32 3, i32* %115, align 4
  %116 = load i64, i64* %RBP, align 8
  %117 = add i64 %116, -12
  %118 = load i64, i64* %PC, align 8
  %119 = add i64 %118, 3
  store i64 %119, i64* %PC, align 8
  %120 = inttoptr i64 %117 to i32*
  %121 = load i32, i32* %120, align 4
  %122 = zext i32 %121 to i64
  store i64 %122, i64* %RDI, align 8, !tbaa !2428
  %123 = add i64 %118, -231
  br label %block_400586.backedge

block_400a3c:                                     ; preds = %block_400586
  %124 = add i64 %248, -12
  store i64 4196931, i64* %PC, align 8
  %125 = inttoptr i64 %124 to i32*
  store i32 25, i32* %125, align 4
  %126 = load i64, i64* %PC, align 8
  %127 = tail call %struct.Memory* @sub_400a43(%struct.State* nonnull %0, i64 %126, %struct.Memory* %2)
  ret %struct.Memory* %127

block_4006b8:                                     ; preds = %block_400586
  %128 = add i64 %248, -12
  store i64 4196031, i64* %PC, align 8
  %129 = inttoptr i64 %128 to i32*
  store i32 7, i32* %129, align 4
  %130 = load i64, i64* %RBP, align 8
  %131 = add i64 %130, -12
  %132 = load i64, i64* %PC, align 8
  %133 = add i64 %132, 3
  store i64 %133, i64* %PC, align 8
  %134 = inttoptr i64 %131 to i32*
  %135 = load i32, i32* %134, align 4
  %136 = zext i32 %135 to i64
  store i64 %136, i64* %RDI, align 8, !tbaa !2428
  %137 = add i64 %132, -431
  br label %block_400586.backedge

block_400b36:                                     ; preds = %block_400586
  %138 = add i64 %248, -12
  store i64 4197181, i64* %PC, align 8
  %139 = inttoptr i64 %138 to i32*
  store i32 30, i32* %139, align 4
  %140 = load i64, i64* %RBP, align 8
  %141 = add i64 %140, -12
  %142 = load i64, i64* %PC, align 8
  %143 = add i64 %142, 3
  store i64 %143, i64* %PC, align 8
  %144 = inttoptr i64 %141 to i32*
  %145 = load i32, i32* %144, align 4
  %146 = zext i32 %145 to i64
  store i64 %146, i64* %RDI, align 8, !tbaa !2428
  %147 = add i64 %142, -1581
  br label %block_400586.backedge

block_400579:                                     ; preds = %block_400586
  %148 = add i64 %248, -12
  store i64 4195712, i64* %PC, align 8
  %149 = inttoptr i64 %148 to i32*
  store i32 0, i32* %149, align 4
  %150 = load i64, i64* %RSP, align 8
  %151 = load i64, i64* %PC, align 8
  %152 = add i64 %150, 48
  store i64 %152, i64* %RSP, align 8, !tbaa !2428
  %153 = icmp ugt i64 %150, -49
  %154 = zext i1 %153 to i8
  store i8 %154, i8* %4, align 1, !tbaa !2432
  %155 = trunc i64 %152 to i32
  %156 = and i32 %155, 255
  %157 = tail call i32 @llvm.ctpop.i32(i32 %156) #9
  %158 = trunc i32 %157 to i8
  %159 = and i8 %158, 1
  %160 = xor i8 %159, 1
  store i8 %160, i8* %5, align 1, !tbaa !2446
  %161 = xor i64 %150, 16
  %162 = xor i64 %161, %152
  %163 = lshr i64 %162, 4
  %164 = trunc i64 %163 to i8
  %165 = and i8 %164, 1
  store i8 %165, i8* %6, align 1, !tbaa !2447
  %166 = icmp eq i64 %152, 0
  %167 = zext i1 %166 to i8
  store i8 %167, i8* %7, align 1, !tbaa !2448
  %168 = lshr i64 %152, 63
  %169 = trunc i64 %168 to i8
  store i8 %169, i8* %8, align 1, !tbaa !2449
  %170 = lshr i64 %150, 63
  %171 = xor i64 %168, %170
  %172 = add nuw nsw i64 %171, %168
  %173 = icmp eq i64 %172, 2
  %174 = zext i1 %173 to i8
  store i8 %174, i8* %9, align 1, !tbaa !2450
  %175 = add i64 %151, 5
  store i64 %175, i64* %PC, align 8
  %176 = add i64 %150, 56
  %177 = inttoptr i64 %152 to i64*
  %178 = load i64, i64* %177, align 8
  store i64 %178, i64* %RBP, align 8, !tbaa !2428
  store i64 %176, i64* %RSP, align 8, !tbaa !2428
  %179 = add i64 %151, 6
  store i64 %179, i64* %PC, align 8
  %180 = inttoptr i64 %176 to i64*
  %181 = load i64, i64* %180, align 8
  store i64 %181, i64* %PC, align 8, !tbaa !2428
  %182 = add i64 %150, 64
  store i64 %182, i64* %RSP, align 8, !tbaa !2428
  ret %struct.Memory* %2

block_4007b2:                                     ; preds = %block_400586
  %183 = add i64 %248, -12
  store i64 4196281, i64* %PC, align 8
  %184 = inttoptr i64 %183 to i32*
  store i32 12, i32* %184, align 4
  %185 = load i64, i64* %RBP, align 8
  %186 = add i64 %185, -12
  %187 = load i64, i64* %PC, align 8
  %188 = add i64 %187, 3
  store i64 %188, i64* %PC, align 8
  %189 = inttoptr i64 %186 to i32*
  %190 = load i32, i32* %189, align 4
  %191 = zext i32 %190 to i64
  store i64 %191, i64* %RDI, align 8, !tbaa !2428
  %192 = add i64 %187, -681
  br label %block_400586.backedge

block_4008ac:                                     ; preds = %block_400586
  %193 = add i64 %248, -12
  store i64 4196531, i64* %PC, align 8
  %194 = inttoptr i64 %193 to i32*
  store i32 17, i32* %194, align 4
  %195 = load i64, i64* %RBP, align 8
  %196 = add i64 %195, -12
  %197 = load i64, i64* %PC, align 8
  %198 = add i64 %197, 3
  store i64 %198, i64* %PC, align 8
  %199 = inttoptr i64 %196 to i32*
  %200 = load i32, i32* %199, align 4
  %201 = zext i32 %200 to i64
  store i64 %201, i64* %RDI, align 8, !tbaa !2428
  %202 = add i64 %197, -931
  br label %block_400586.backedge

block_400586:                                     ; preds = %block_400586.backedge, %block_40081d
  %.sink5 = phi i64 [ 701, %block_40081d ], [ %.sink5.be, %block_400586.backedge ]
  %203 = load i64, i64* %RBP, align 8
  %204 = add i64 %203, -8
  %205 = load i64, i64* %PC, align 8
  %206 = add i64 %205, 4
  store i64 %206, i64* %PC, align 8
  %207 = inttoptr i64 %204 to i64*
  %208 = load i64, i64* %207, align 8
  store i64 %208, i64* %RAX, align 8, !tbaa !2428
  %209 = add i64 %208, 4
  store i64 %209, i64* %RCX, align 8, !tbaa !2428
  %210 = icmp ugt i64 %208, -5
  %211 = zext i1 %210 to i8
  store i8 %211, i8* %4, align 1, !tbaa !2432
  %212 = trunc i64 %209 to i32
  %213 = and i32 %212, 255
  %214 = tail call i32 @llvm.ctpop.i32(i32 %213) #9
  %215 = trunc i32 %214 to i8
  %216 = and i8 %215, 1
  %217 = xor i8 %216, 1
  store i8 %217, i8* %5, align 1, !tbaa !2446
  %218 = xor i64 %209, %208
  %219 = lshr i64 %218, 4
  %220 = trunc i64 %219 to i8
  %221 = and i8 %220, 1
  store i8 %221, i8* %6, align 1, !tbaa !2447
  %222 = icmp eq i64 %209, 0
  %223 = zext i1 %222 to i8
  store i8 %223, i8* %7, align 1, !tbaa !2448
  %224 = lshr i64 %209, 63
  %225 = trunc i64 %224 to i8
  store i8 %225, i8* %8, align 1, !tbaa !2449
  %226 = lshr i64 %208, 63
  %227 = xor i64 %224, %226
  %228 = add nuw nsw i64 %227, %224
  %229 = icmp eq i64 %228, 2
  %230 = zext i1 %229 to i8
  store i8 %230, i8* %9, align 1, !tbaa !2450
  %231 = add i64 %205, 15
  store i64 %231, i64* %PC, align 8
  store i64 %209, i64* %207, align 8
  %232 = load i32*, i32** %10, align 8
  %233 = load i64, i64* %PC, align 8
  %234 = add i64 %233, 3
  store i64 %234, i64* %PC, align 8
  %235 = load i32, i32* %232, align 4
  %236 = sext i32 %235 to i64
  store i64 %236, i64* %RAX, align 8, !tbaa !2428
  %237 = shl nsw i64 %236, 3
  %238 = add i64 %237, add (i64 ptrtoint (%seg_602020__data_type* @seg_602020__data to i64), i64 16)
  %239 = add i64 %233, 11
  store i64 %239, i64* %PC, align 8
  %240 = inttoptr i64 %238 to i64*
  %241 = load i64, i64* %240, align 8
  store i64 %241, i64* %RAX, align 8, !tbaa !2428
  %242 = load i64, i64* %RBP, align 8
  %243 = add i64 %242, -40
  %244 = add i64 %233, 15
  store i64 %244, i64* %PC, align 8
  %245 = inttoptr i64 %243 to i64*
  store i64 %241, i64* %245, align 8
  %246 = load i64, i64* %PC, align 8
  %247 = sub i64 %246, %.sink5
  %248 = load i64, i64* %RBP, align 8
  %249 = add i64 %248, -40
  %250 = add i64 %247, 4
  store i64 %250, i64* %PC, align 8
  %251 = inttoptr i64 %249 to i64*
  %252 = load i64, i64* %251, align 8
  store i64 %252, i64* %RAX, align 8, !tbaa !2428
  store i64 %252, i64* %PC, align 8, !tbaa !2428
  switch i64 %252, label %332 [
    i64 4196774, label %block_4009a6
    i64 4196224, label %block_400780
    i64 4197124, label %block_400b04
    i64 4195974, label %block_400686
    i64 4196874, label %block_400a0a
    i64 4196624, label %block_400910
    i64 4196374, label %block_400816
    i64 4196124, label %block_40071c
    i64 4197024, label %block_400aa0
    i64 4197074, label %block_400ad2
    i64 4195924, label %block_400654
    i64 4196574, label %block_4008de
    i64 4196324, label %block_4007e4
    i64 4197224, label %block_400b68
    i64 4196074, label %block_4006ea
    i64 4196474, label %block_40087a
    i64 4196824, label %block_4009d8
    i64 4195724, label %block_40058c
    i64 4196724, label %block_400974
    i64 4195824, label %block_4005f0
    i64 4196174, label %block_40074e
    i64 4196424, label %block_400848
    i64 4196674, label %block_400942
    i64 4195774, label %block_4005be
    i64 4196924, label %block_400a3c
    i64 4196974, label %block_400a6e
    i64 4195705, label %block_400579
    i64 4196024, label %block_4006b8
    i64 4197174, label %block_400b36
    i64 4196274, label %block_4007b2
    i64 4196524, label %block_4008ac
    i64 4195874, label %block_400622
  ]

block_400622:                                     ; preds = %block_400586
  %253 = add i64 %248, -12
  store i64 4195881, i64* %PC, align 8
  %254 = inttoptr i64 %253 to i32*
  store i32 4, i32* %254, align 4
  %255 = load i64, i64* %RBP, align 8
  %256 = add i64 %255, -12
  %257 = load i64, i64* %PC, align 8
  %258 = add i64 %257, 3
  store i64 %258, i64* %PC, align 8
  %259 = inttoptr i64 %256 to i32*
  %260 = load i32, i32* %259, align 4
  %261 = zext i32 %260 to i64
  store i64 %261, i64* %RDI, align 8, !tbaa !2428
  %262 = add i64 %257, -281
  br label %block_400586.backedge

block_400aa0:                                     ; preds = %block_400586
  %263 = add i64 %248, -12
  store i64 4197031, i64* %PC, align 8
  %264 = inttoptr i64 %263 to i32*
  store i32 27, i32* %264, align 4
  %265 = load i64, i64* %RBP, align 8
  %266 = add i64 %265, -12
  %267 = load i64, i64* %PC, align 8
  %268 = add i64 %267, 3
  store i64 %268, i64* %PC, align 8
  %269 = inttoptr i64 %266 to i32*
  %270 = load i32, i32* %269, align 4
  %271 = zext i32 %270 to i64
  store i64 %271, i64* %RDI, align 8, !tbaa !2428
  %272 = add i64 %267, -1431
  br label %block_400586.backedge

block_40081d:                                     ; preds = %block_400816, %3
  %273 = phi i64 [ %.pre, %block_400816 ], [ %1, %3 ]
  %274 = load i64, i64* %RBP, align 8
  %275 = add i64 %274, -12
  %276 = add i64 %273, 3
  store i64 %276, i64* %PC, align 8
  %277 = inttoptr i64 %275 to i32*
  %278 = load i32, i32* %277, align 4
  %279 = zext i32 %278 to i64
  store i64 %279, i64* %RDI, align 8, !tbaa !2428
  %280 = add i64 %273, -781
  %281 = add i64 %273, 8
  %282 = load i64, i64* %RSP, align 8, !tbaa !2428
  %283 = add i64 %282, -8
  %284 = inttoptr i64 %283 to i64*
  store i64 %281, i64* %284, align 8
  store i64 %283, i64* %RSP, align 8, !tbaa !2428
  store i64 %280, i64* %PC, align 8, !tbaa !2428
  %285 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %280, %struct.Memory* %2)
  br label %block_400586

block_40071c:                                     ; preds = %block_400586
  %286 = add i64 %248, -12
  store i64 4196131, i64* %PC, align 8
  %287 = inttoptr i64 %286 to i32*
  store i32 9, i32* %287, align 4
  %288 = load i64, i64* %RBP, align 8
  %289 = add i64 %288, -12
  %290 = load i64, i64* %PC, align 8
  %291 = add i64 %290, 3
  store i64 %291, i64* %PC, align 8
  %292 = inttoptr i64 %289 to i32*
  %293 = load i32, i32* %292, align 4
  %294 = zext i32 %293 to i64
  store i64 %294, i64* %RDI, align 8, !tbaa !2428
  %295 = add i64 %290, -531
  br label %block_400586.backedge

block_400816:                                     ; preds = %block_400586
  %296 = add i64 %248, -12
  store i64 4196381, i64* %PC, align 8
  %297 = inttoptr i64 %296 to i32*
  store i32 14, i32* %297, align 4
  %.pre = load i64, i64* %PC, align 8
  br label %block_40081d

block_400910:                                     ; preds = %block_400586
  %298 = add i64 %248, -12
  store i64 4196631, i64* %PC, align 8
  %299 = inttoptr i64 %298 to i32*
  store i32 19, i32* %299, align 4
  %300 = load i64, i64* %PC, align 8
  %301 = tail call %struct.Memory* @sub_400917(%struct.State* nonnull %0, i64 %300, %struct.Memory* %2)
  ret %struct.Memory* %301

block_40058c:                                     ; preds = %block_400586
  %302 = add i64 %248, -12
  store i64 4195731, i64* %PC, align 8
  %303 = inttoptr i64 %302 to i32*
  store i32 1, i32* %303, align 4
  %304 = load i64, i64* %PC, align 8
  %305 = tail call %struct.Memory* @sub_400593(%struct.State* nonnull %0, i64 %304, %struct.Memory* %2)
  ret %struct.Memory* %305

block_400a0a:                                     ; preds = %block_400586
  %306 = add i64 %248, -12
  store i64 4196881, i64* %PC, align 8
  %307 = inttoptr i64 %306 to i32*
  store i32 24, i32* %307, align 4
  %308 = load i64, i64* %PC, align 8
  %309 = tail call %struct.Memory* @sub_400a11(%struct.State* nonnull %0, i64 %308, %struct.Memory* %2)
  ret %struct.Memory* %309

block_400686:                                     ; preds = %block_400586
  %310 = add i64 %248, -12
  store i64 4195981, i64* %PC, align 8
  %311 = inttoptr i64 %310 to i32*
  store i32 6, i32* %311, align 4
  %312 = load i64, i64* %PC, align 8
  %313 = tail call %struct.Memory* @sub_40068d(%struct.State* nonnull %0, i64 %312, %struct.Memory* %2)
  ret %struct.Memory* %313

block_400b04:                                     ; preds = %block_400586
  %314 = add i64 %248, -12
  store i64 4197131, i64* %PC, align 8
  %315 = inttoptr i64 %314 to i32*
  store i32 29, i32* %315, align 4
  %316 = load i64, i64* %PC, align 8
  %317 = tail call %struct.Memory* @sub_400b0b(%struct.State* nonnull %0, i64 %316, %struct.Memory* %2)
  ret %struct.Memory* %317

block_400780:                                     ; preds = %block_400586
  %318 = add i64 %248, -12
  store i64 4196231, i64* %PC, align 8
  %319 = inttoptr i64 %318 to i32*
  store i32 11, i32* %319, align 4
  %320 = load i64, i64* %PC, align 8
  %321 = tail call %struct.Memory* @sub_400787(%struct.State* nonnull %0, i64 %320, %struct.Memory* %2)
  ret %struct.Memory* %321

block_4009a6:                                     ; preds = %block_400586
  %322 = add i64 %248, -12
  store i64 4196781, i64* %PC, align 8
  %323 = inttoptr i64 %322 to i32*
  store i32 22, i32* %323, align 4
  %324 = load i64, i64* %RBP, align 8
  %325 = add i64 %324, -12
  %326 = load i64, i64* %PC, align 8
  %327 = add i64 %326, 3
  store i64 %327, i64* %PC, align 8
  %328 = inttoptr i64 %325 to i32*
  %329 = load i32, i32* %328, align 4
  %330 = zext i32 %329 to i64
  store i64 %330, i64* %RDI, align 8, !tbaa !2428
  %331 = add i64 %326, -1181
  br label %block_400586.backedge

; <label>:332:                                    ; preds = %block_400586
  %333 = tail call %struct.Memory* @__remill_jump(%struct.State* nonnull %0, i64 %252, %struct.Memory* %2)
  ret %struct.Memory* %333
}

; Function Attrs: noinline nounwind
define %struct.Memory* @sub_40065b(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) local_unnamed_addr #6 {
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %PC, align 8
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RSP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %10 = bitcast i64* %RAX to i32**
  br label %block_40065b

block_40087a:                                     ; preds = %block_400586
  %11 = add i64 %259, -12
  store i64 4196481, i64* %PC, align 8
  %12 = inttoptr i64 %11 to i32*
  store i32 16, i32* %12, align 4
  %13 = load i64, i64* %PC, align 8
  %14 = tail call %struct.Memory* @sub_400881(%struct.State* nonnull %0, i64 %13, %struct.Memory* %2)
  ret %struct.Memory* %14

block_400974:                                     ; preds = %block_400586
  %15 = add i64 %259, -12
  store i64 4196731, i64* %PC, align 8
  %16 = inttoptr i64 %15 to i32*
  store i32 21, i32* %16, align 4
  %17 = load i64, i64* %RBP, align 8
  %18 = add i64 %17, -12
  %19 = load i64, i64* %PC, align 8
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC, align 8
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RDI, align 8, !tbaa !2428
  %24 = add i64 %19, -1131
  br label %block_400586.backedge

block_400586.backedge:                            ; preds = %block_400974, %block_400a6e, %block_4006ea, %block_400b68, %block_4007e4, %block_4008de, %block_4009d8, %block_4005f0, %block_4006b8, %block_400b36, %block_4007b2, %block_4008ac, %block_400622, %block_400aa0, %block_40071c, %block_400816, %block_4009a6
  %.sink194 = phi i64 [ %19, %block_400974 ], [ %34, %block_400a6e ], [ %44, %block_4006ea ], [ %54, %block_400b68 ], [ %64, %block_4007e4 ], [ %74, %block_4008de ], [ %97, %block_4009d8 ], [ %129, %block_4005f0 ], [ %143, %block_4006b8 ], [ %153, %block_400b36 ], [ %198, %block_4007b2 ], [ %208, %block_4008ac ], [ %268, %block_400622 ], [ %278, %block_400aa0 ], [ %288, %block_40071c ], [ %298, %block_400816 ], [ %332, %block_4009a6 ]
  %.sink189 = phi i64 [ %24, %block_400974 ], [ %39, %block_400a6e ], [ %49, %block_4006ea ], [ %59, %block_400b68 ], [ %69, %block_4007e4 ], [ %79, %block_4008de ], [ %102, %block_4009d8 ], [ %134, %block_4005f0 ], [ %148, %block_4006b8 ], [ %158, %block_400b36 ], [ %203, %block_4007b2 ], [ %213, %block_4008ac ], [ %273, %block_400622 ], [ %283, %block_400aa0 ], [ %293, %block_40071c ], [ %303, %block_400816 ], [ %337, %block_4009a6 ]
  %.sink5.be = phi i64 [ 1051, %block_400974 ], [ 1301, %block_400a6e ], [ 401, %block_4006ea ], [ 1551, %block_400b68 ], [ 651, %block_4007e4 ], [ 901, %block_4008de ], [ 1151, %block_4009d8 ], [ 151, %block_4005f0 ], [ 351, %block_4006b8 ], [ 1501, %block_400b36 ], [ 601, %block_4007b2 ], [ 851, %block_4008ac ], [ 201, %block_400622 ], [ 1351, %block_400aa0 ], [ 451, %block_40071c ], [ 701, %block_400816 ], [ 1101, %block_4009a6 ]
  %25 = add i64 %.sink194, 8
  %26 = load i64, i64* %RSP, align 8, !tbaa !2428
  %27 = add i64 %26, -8
  %28 = inttoptr i64 %27 to i64*
  store i64 %25, i64* %28, align 8
  store i64 %27, i64* %RSP, align 8, !tbaa !2428
  store i64 %.sink189, i64* %PC, align 8, !tbaa !2428
  %29 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %.sink189, %struct.Memory* %2)
  br label %block_400586

block_400a6e:                                     ; preds = %block_400586
  %30 = add i64 %259, -12
  store i64 4196981, i64* %PC, align 8
  %31 = inttoptr i64 %30 to i32*
  store i32 26, i32* %31, align 4
  %32 = load i64, i64* %RBP, align 8
  %33 = add i64 %32, -12
  %34 = load i64, i64* %PC, align 8
  %35 = add i64 %34, 3
  store i64 %35, i64* %PC, align 8
  %36 = inttoptr i64 %33 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i64
  store i64 %38, i64* %RDI, align 8, !tbaa !2428
  %39 = add i64 %34, -1381
  br label %block_400586.backedge

block_4006ea:                                     ; preds = %block_400586
  %40 = add i64 %259, -12
  store i64 4196081, i64* %PC, align 8
  %41 = inttoptr i64 %40 to i32*
  store i32 8, i32* %41, align 4
  %42 = load i64, i64* %RBP, align 8
  %43 = add i64 %42, -12
  %44 = load i64, i64* %PC, align 8
  %45 = add i64 %44, 3
  store i64 %45, i64* %PC, align 8
  %46 = inttoptr i64 %43 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = zext i32 %47 to i64
  store i64 %48, i64* %RDI, align 8, !tbaa !2428
  %49 = add i64 %44, -481
  br label %block_400586.backedge

block_400b68:                                     ; preds = %block_400586
  %50 = add i64 %259, -12
  store i64 4197231, i64* %PC, align 8
  %51 = inttoptr i64 %50 to i32*
  store i32 31, i32* %51, align 4
  %52 = load i64, i64* %RBP, align 8
  %53 = add i64 %52, -12
  %54 = load i64, i64* %PC, align 8
  %55 = add i64 %54, 3
  store i64 %55, i64* %PC, align 8
  %56 = inttoptr i64 %53 to i32*
  %57 = load i32, i32* %56, align 4
  %58 = zext i32 %57 to i64
  store i64 %58, i64* %RDI, align 8, !tbaa !2428
  %59 = add i64 %54, -1631
  br label %block_400586.backedge

block_4007e4:                                     ; preds = %block_400586
  %60 = add i64 %259, -12
  store i64 4196331, i64* %PC, align 8
  %61 = inttoptr i64 %60 to i32*
  store i32 13, i32* %61, align 4
  %62 = load i64, i64* %RBP, align 8
  %63 = add i64 %62, -12
  %64 = load i64, i64* %PC, align 8
  %65 = add i64 %64, 3
  store i64 %65, i64* %PC, align 8
  %66 = inttoptr i64 %63 to i32*
  %67 = load i32, i32* %66, align 4
  %68 = zext i32 %67 to i64
  store i64 %68, i64* %RDI, align 8, !tbaa !2428
  %69 = add i64 %64, -731
  br label %block_400586.backedge

block_4008de:                                     ; preds = %block_400586
  %70 = add i64 %259, -12
  store i64 4196581, i64* %PC, align 8
  %71 = inttoptr i64 %70 to i32*
  store i32 18, i32* %71, align 4
  %72 = load i64, i64* %RBP, align 8
  %73 = add i64 %72, -12
  %74 = load i64, i64* %PC, align 8
  %75 = add i64 %74, 3
  store i64 %75, i64* %PC, align 8
  %76 = inttoptr i64 %73 to i32*
  %77 = load i32, i32* %76, align 4
  %78 = zext i32 %77 to i64
  store i64 %78, i64* %RDI, align 8, !tbaa !2428
  %79 = add i64 %74, -981
  br label %block_400586.backedge

block_40065b:                                     ; preds = %block_400654, %3
  %80 = phi i64 [ %.pre, %block_400654 ], [ %1, %3 ]
  %81 = load i64, i64* %RBP, align 8
  %82 = add i64 %81, -12
  %83 = add i64 %80, 3
  store i64 %83, i64* %PC, align 8
  %84 = inttoptr i64 %82 to i32*
  %85 = load i32, i32* %84, align 4
  %86 = zext i32 %85 to i64
  store i64 %86, i64* %RDI, align 8, !tbaa !2428
  %87 = add i64 %80, -331
  %88 = add i64 %80, 8
  %89 = load i64, i64* %RSP, align 8, !tbaa !2428
  %90 = add i64 %89, -8
  %91 = inttoptr i64 %90 to i64*
  store i64 %88, i64* %91, align 8
  store i64 %90, i64* %RSP, align 8, !tbaa !2428
  store i64 %87, i64* %PC, align 8, !tbaa !2428
  %92 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %87, %struct.Memory* %2)
  br label %block_400586

block_4009d8:                                     ; preds = %block_400586
  %93 = add i64 %259, -12
  store i64 4196831, i64* %PC, align 8
  %94 = inttoptr i64 %93 to i32*
  store i32 23, i32* %94, align 4
  %95 = load i64, i64* %RBP, align 8
  %96 = add i64 %95, -12
  %97 = load i64, i64* %PC, align 8
  %98 = add i64 %97, 3
  store i64 %98, i64* %PC, align 8
  %99 = inttoptr i64 %96 to i32*
  %100 = load i32, i32* %99, align 4
  %101 = zext i32 %100 to i64
  store i64 %101, i64* %RDI, align 8, !tbaa !2428
  %102 = add i64 %97, -1231
  br label %block_400586.backedge

block_400654:                                     ; preds = %block_400586
  %103 = add i64 %259, -12
  store i64 4195931, i64* %PC, align 8
  %104 = inttoptr i64 %103 to i32*
  store i32 5, i32* %104, align 4
  %.pre = load i64, i64* %PC, align 8
  br label %block_40065b

block_400ad2:                                     ; preds = %block_400586
  %105 = add i64 %259, -12
  store i64 4197081, i64* %PC, align 8
  %106 = inttoptr i64 %105 to i32*
  store i32 28, i32* %106, align 4
  %107 = load i64, i64* %PC, align 8
  %108 = tail call %struct.Memory* @sub_400ad9(%struct.State* nonnull %0, i64 %107, %struct.Memory* %2)
  ret %struct.Memory* %108

block_40074e:                                     ; preds = %block_400586
  %109 = add i64 %259, -12
  store i64 4196181, i64* %PC, align 8
  %110 = inttoptr i64 %109 to i32*
  store i32 10, i32* %110, align 4
  %111 = load i64, i64* %PC, align 8
  %112 = tail call %struct.Memory* @sub_400755(%struct.State* nonnull %0, i64 %111, %struct.Memory* %2)
  ret %struct.Memory* %112

block_400848:                                     ; preds = %block_400586
  %113 = add i64 %259, -12
  store i64 4196431, i64* %PC, align 8
  %114 = inttoptr i64 %113 to i32*
  store i32 15, i32* %114, align 4
  %115 = load i64, i64* %PC, align 8
  %116 = tail call %struct.Memory* @sub_40084f(%struct.State* nonnull %0, i64 %115, %struct.Memory* %2)
  ret %struct.Memory* %116

block_400942:                                     ; preds = %block_400586
  %117 = add i64 %259, -12
  store i64 4196681, i64* %PC, align 8
  %118 = inttoptr i64 %117 to i32*
  store i32 20, i32* %118, align 4
  %119 = load i64, i64* %PC, align 8
  %120 = tail call %struct.Memory* @sub_400949(%struct.State* nonnull %0, i64 %119, %struct.Memory* %2)
  ret %struct.Memory* %120

block_4005be:                                     ; preds = %block_400586
  %121 = add i64 %259, -12
  store i64 4195781, i64* %PC, align 8
  %122 = inttoptr i64 %121 to i32*
  store i32 2, i32* %122, align 4
  %123 = load i64, i64* %PC, align 8
  %124 = tail call %struct.Memory* @sub_4005c5(%struct.State* nonnull %0, i64 %123, %struct.Memory* %2)
  ret %struct.Memory* %124

block_4005f0:                                     ; preds = %block_400586
  %125 = add i64 %259, -12
  store i64 4195831, i64* %PC, align 8
  %126 = inttoptr i64 %125 to i32*
  store i32 3, i32* %126, align 4
  %127 = load i64, i64* %RBP, align 8
  %128 = add i64 %127, -12
  %129 = load i64, i64* %PC, align 8
  %130 = add i64 %129, 3
  store i64 %130, i64* %PC, align 8
  %131 = inttoptr i64 %128 to i32*
  %132 = load i32, i32* %131, align 4
  %133 = zext i32 %132 to i64
  store i64 %133, i64* %RDI, align 8, !tbaa !2428
  %134 = add i64 %129, -231
  br label %block_400586.backedge

block_400a3c:                                     ; preds = %block_400586
  %135 = add i64 %259, -12
  store i64 4196931, i64* %PC, align 8
  %136 = inttoptr i64 %135 to i32*
  store i32 25, i32* %136, align 4
  %137 = load i64, i64* %PC, align 8
  %138 = tail call %struct.Memory* @sub_400a43(%struct.State* nonnull %0, i64 %137, %struct.Memory* %2)
  ret %struct.Memory* %138

block_4006b8:                                     ; preds = %block_400586
  %139 = add i64 %259, -12
  store i64 4196031, i64* %PC, align 8
  %140 = inttoptr i64 %139 to i32*
  store i32 7, i32* %140, align 4
  %141 = load i64, i64* %RBP, align 8
  %142 = add i64 %141, -12
  %143 = load i64, i64* %PC, align 8
  %144 = add i64 %143, 3
  store i64 %144, i64* %PC, align 8
  %145 = inttoptr i64 %142 to i32*
  %146 = load i32, i32* %145, align 4
  %147 = zext i32 %146 to i64
  store i64 %147, i64* %RDI, align 8, !tbaa !2428
  %148 = add i64 %143, -431
  br label %block_400586.backedge

block_400b36:                                     ; preds = %block_400586
  %149 = add i64 %259, -12
  store i64 4197181, i64* %PC, align 8
  %150 = inttoptr i64 %149 to i32*
  store i32 30, i32* %150, align 4
  %151 = load i64, i64* %RBP, align 8
  %152 = add i64 %151, -12
  %153 = load i64, i64* %PC, align 8
  %154 = add i64 %153, 3
  store i64 %154, i64* %PC, align 8
  %155 = inttoptr i64 %152 to i32*
  %156 = load i32, i32* %155, align 4
  %157 = zext i32 %156 to i64
  store i64 %157, i64* %RDI, align 8, !tbaa !2428
  %158 = add i64 %153, -1581
  br label %block_400586.backedge

block_400579:                                     ; preds = %block_400586
  %159 = add i64 %259, -12
  store i64 4195712, i64* %PC, align 8
  %160 = inttoptr i64 %159 to i32*
  store i32 0, i32* %160, align 4
  %161 = load i64, i64* %RSP, align 8
  %162 = load i64, i64* %PC, align 8
  %163 = add i64 %161, 48
  store i64 %163, i64* %RSP, align 8, !tbaa !2428
  %164 = icmp ugt i64 %161, -49
  %165 = zext i1 %164 to i8
  store i8 %165, i8* %4, align 1, !tbaa !2432
  %166 = trunc i64 %163 to i32
  %167 = and i32 %166, 255
  %168 = tail call i32 @llvm.ctpop.i32(i32 %167) #9
  %169 = trunc i32 %168 to i8
  %170 = and i8 %169, 1
  %171 = xor i8 %170, 1
  store i8 %171, i8* %5, align 1, !tbaa !2446
  %172 = xor i64 %161, 16
  %173 = xor i64 %172, %163
  %174 = lshr i64 %173, 4
  %175 = trunc i64 %174 to i8
  %176 = and i8 %175, 1
  store i8 %176, i8* %6, align 1, !tbaa !2447
  %177 = icmp eq i64 %163, 0
  %178 = zext i1 %177 to i8
  store i8 %178, i8* %7, align 1, !tbaa !2448
  %179 = lshr i64 %163, 63
  %180 = trunc i64 %179 to i8
  store i8 %180, i8* %8, align 1, !tbaa !2449
  %181 = lshr i64 %161, 63
  %182 = xor i64 %179, %181
  %183 = add nuw nsw i64 %182, %179
  %184 = icmp eq i64 %183, 2
  %185 = zext i1 %184 to i8
  store i8 %185, i8* %9, align 1, !tbaa !2450
  %186 = add i64 %162, 5
  store i64 %186, i64* %PC, align 8
  %187 = add i64 %161, 56
  %188 = inttoptr i64 %163 to i64*
  %189 = load i64, i64* %188, align 8
  store i64 %189, i64* %RBP, align 8, !tbaa !2428
  store i64 %187, i64* %RSP, align 8, !tbaa !2428
  %190 = add i64 %162, 6
  store i64 %190, i64* %PC, align 8
  %191 = inttoptr i64 %187 to i64*
  %192 = load i64, i64* %191, align 8
  store i64 %192, i64* %PC, align 8, !tbaa !2428
  %193 = add i64 %161, 64
  store i64 %193, i64* %RSP, align 8, !tbaa !2428
  ret %struct.Memory* %2

block_4007b2:                                     ; preds = %block_400586
  %194 = add i64 %259, -12
  store i64 4196281, i64* %PC, align 8
  %195 = inttoptr i64 %194 to i32*
  store i32 12, i32* %195, align 4
  %196 = load i64, i64* %RBP, align 8
  %197 = add i64 %196, -12
  %198 = load i64, i64* %PC, align 8
  %199 = add i64 %198, 3
  store i64 %199, i64* %PC, align 8
  %200 = inttoptr i64 %197 to i32*
  %201 = load i32, i32* %200, align 4
  %202 = zext i32 %201 to i64
  store i64 %202, i64* %RDI, align 8, !tbaa !2428
  %203 = add i64 %198, -681
  br label %block_400586.backedge

block_4008ac:                                     ; preds = %block_400586
  %204 = add i64 %259, -12
  store i64 4196531, i64* %PC, align 8
  %205 = inttoptr i64 %204 to i32*
  store i32 17, i32* %205, align 4
  %206 = load i64, i64* %RBP, align 8
  %207 = add i64 %206, -12
  %208 = load i64, i64* %PC, align 8
  %209 = add i64 %208, 3
  store i64 %209, i64* %PC, align 8
  %210 = inttoptr i64 %207 to i32*
  %211 = load i32, i32* %210, align 4
  %212 = zext i32 %211 to i64
  store i64 %212, i64* %RDI, align 8, !tbaa !2428
  %213 = add i64 %208, -931
  br label %block_400586.backedge

block_400586:                                     ; preds = %block_400586.backedge, %block_40065b
  %.sink5 = phi i64 [ 251, %block_40065b ], [ %.sink5.be, %block_400586.backedge ]
  %214 = load i64, i64* %RBP, align 8
  %215 = add i64 %214, -8
  %216 = load i64, i64* %PC, align 8
  %217 = add i64 %216, 4
  store i64 %217, i64* %PC, align 8
  %218 = inttoptr i64 %215 to i64*
  %219 = load i64, i64* %218, align 8
  store i64 %219, i64* %RAX, align 8, !tbaa !2428
  %220 = add i64 %219, 4
  store i64 %220, i64* %RCX, align 8, !tbaa !2428
  %221 = icmp ugt i64 %219, -5
  %222 = zext i1 %221 to i8
  store i8 %222, i8* %4, align 1, !tbaa !2432
  %223 = trunc i64 %220 to i32
  %224 = and i32 %223, 255
  %225 = tail call i32 @llvm.ctpop.i32(i32 %224) #9
  %226 = trunc i32 %225 to i8
  %227 = and i8 %226, 1
  %228 = xor i8 %227, 1
  store i8 %228, i8* %5, align 1, !tbaa !2446
  %229 = xor i64 %220, %219
  %230 = lshr i64 %229, 4
  %231 = trunc i64 %230 to i8
  %232 = and i8 %231, 1
  store i8 %232, i8* %6, align 1, !tbaa !2447
  %233 = icmp eq i64 %220, 0
  %234 = zext i1 %233 to i8
  store i8 %234, i8* %7, align 1, !tbaa !2448
  %235 = lshr i64 %220, 63
  %236 = trunc i64 %235 to i8
  store i8 %236, i8* %8, align 1, !tbaa !2449
  %237 = lshr i64 %219, 63
  %238 = xor i64 %235, %237
  %239 = add nuw nsw i64 %238, %235
  %240 = icmp eq i64 %239, 2
  %241 = zext i1 %240 to i8
  store i8 %241, i8* %9, align 1, !tbaa !2450
  %242 = add i64 %216, 15
  store i64 %242, i64* %PC, align 8
  store i64 %220, i64* %218, align 8
  %243 = load i32*, i32** %10, align 8
  %244 = load i64, i64* %PC, align 8
  %245 = add i64 %244, 3
  store i64 %245, i64* %PC, align 8
  %246 = load i32, i32* %243, align 4
  %247 = sext i32 %246 to i64
  store i64 %247, i64* %RAX, align 8, !tbaa !2428
  %248 = shl nsw i64 %247, 3
  %249 = add i64 %248, add (i64 ptrtoint (%seg_602020__data_type* @seg_602020__data to i64), i64 16)
  %250 = add i64 %244, 11
  store i64 %250, i64* %PC, align 8
  %251 = inttoptr i64 %249 to i64*
  %252 = load i64, i64* %251, align 8
  store i64 %252, i64* %RAX, align 8, !tbaa !2428
  %253 = load i64, i64* %RBP, align 8
  %254 = add i64 %253, -40
  %255 = add i64 %244, 15
  store i64 %255, i64* %PC, align 8
  %256 = inttoptr i64 %254 to i64*
  store i64 %252, i64* %256, align 8
  %257 = load i64, i64* %PC, align 8
  %258 = sub i64 %257, %.sink5
  %259 = load i64, i64* %RBP, align 8
  %260 = add i64 %259, -40
  %261 = add i64 %258, 4
  store i64 %261, i64* %PC, align 8
  %262 = inttoptr i64 %260 to i64*
  %263 = load i64, i64* %262, align 8
  store i64 %263, i64* %RAX, align 8, !tbaa !2428
  store i64 %263, i64* %PC, align 8, !tbaa !2428
  switch i64 %263, label %338 [
    i64 4196774, label %block_4009a6
    i64 4196224, label %block_400780
    i64 4197124, label %block_400b04
    i64 4195974, label %block_400686
    i64 4196874, label %block_400a0a
    i64 4196624, label %block_400910
    i64 4196374, label %block_400816
    i64 4196124, label %block_40071c
    i64 4197024, label %block_400aa0
    i64 4197074, label %block_400ad2
    i64 4195924, label %block_400654
    i64 4196574, label %block_4008de
    i64 4196324, label %block_4007e4
    i64 4197224, label %block_400b68
    i64 4196074, label %block_4006ea
    i64 4196474, label %block_40087a
    i64 4196824, label %block_4009d8
    i64 4195724, label %block_40058c
    i64 4196724, label %block_400974
    i64 4195824, label %block_4005f0
    i64 4196174, label %block_40074e
    i64 4196424, label %block_400848
    i64 4196674, label %block_400942
    i64 4195774, label %block_4005be
    i64 4196924, label %block_400a3c
    i64 4196974, label %block_400a6e
    i64 4195705, label %block_400579
    i64 4196024, label %block_4006b8
    i64 4197174, label %block_400b36
    i64 4196274, label %block_4007b2
    i64 4196524, label %block_4008ac
    i64 4195874, label %block_400622
  ]

block_400622:                                     ; preds = %block_400586
  %264 = add i64 %259, -12
  store i64 4195881, i64* %PC, align 8
  %265 = inttoptr i64 %264 to i32*
  store i32 4, i32* %265, align 4
  %266 = load i64, i64* %RBP, align 8
  %267 = add i64 %266, -12
  %268 = load i64, i64* %PC, align 8
  %269 = add i64 %268, 3
  store i64 %269, i64* %PC, align 8
  %270 = inttoptr i64 %267 to i32*
  %271 = load i32, i32* %270, align 4
  %272 = zext i32 %271 to i64
  store i64 %272, i64* %RDI, align 8, !tbaa !2428
  %273 = add i64 %268, -281
  br label %block_400586.backedge

block_400aa0:                                     ; preds = %block_400586
  %274 = add i64 %259, -12
  store i64 4197031, i64* %PC, align 8
  %275 = inttoptr i64 %274 to i32*
  store i32 27, i32* %275, align 4
  %276 = load i64, i64* %RBP, align 8
  %277 = add i64 %276, -12
  %278 = load i64, i64* %PC, align 8
  %279 = add i64 %278, 3
  store i64 %279, i64* %PC, align 8
  %280 = inttoptr i64 %277 to i32*
  %281 = load i32, i32* %280, align 4
  %282 = zext i32 %281 to i64
  store i64 %282, i64* %RDI, align 8, !tbaa !2428
  %283 = add i64 %278, -1431
  br label %block_400586.backedge

block_40071c:                                     ; preds = %block_400586
  %284 = add i64 %259, -12
  store i64 4196131, i64* %PC, align 8
  %285 = inttoptr i64 %284 to i32*
  store i32 9, i32* %285, align 4
  %286 = load i64, i64* %RBP, align 8
  %287 = add i64 %286, -12
  %288 = load i64, i64* %PC, align 8
  %289 = add i64 %288, 3
  store i64 %289, i64* %PC, align 8
  %290 = inttoptr i64 %287 to i32*
  %291 = load i32, i32* %290, align 4
  %292 = zext i32 %291 to i64
  store i64 %292, i64* %RDI, align 8, !tbaa !2428
  %293 = add i64 %288, -531
  br label %block_400586.backedge

block_400816:                                     ; preds = %block_400586
  %294 = add i64 %259, -12
  store i64 4196381, i64* %PC, align 8
  %295 = inttoptr i64 %294 to i32*
  store i32 14, i32* %295, align 4
  %296 = load i64, i64* %RBP, align 8
  %297 = add i64 %296, -12
  %298 = load i64, i64* %PC, align 8
  %299 = add i64 %298, 3
  store i64 %299, i64* %PC, align 8
  %300 = inttoptr i64 %297 to i32*
  %301 = load i32, i32* %300, align 4
  %302 = zext i32 %301 to i64
  store i64 %302, i64* %RDI, align 8, !tbaa !2428
  %303 = add i64 %298, -781
  br label %block_400586.backedge

block_400910:                                     ; preds = %block_400586
  %304 = add i64 %259, -12
  store i64 4196631, i64* %PC, align 8
  %305 = inttoptr i64 %304 to i32*
  store i32 19, i32* %305, align 4
  %306 = load i64, i64* %PC, align 8
  %307 = tail call %struct.Memory* @sub_400917(%struct.State* nonnull %0, i64 %306, %struct.Memory* %2)
  ret %struct.Memory* %307

block_40058c:                                     ; preds = %block_400586
  %308 = add i64 %259, -12
  store i64 4195731, i64* %PC, align 8
  %309 = inttoptr i64 %308 to i32*
  store i32 1, i32* %309, align 4
  %310 = load i64, i64* %PC, align 8
  %311 = tail call %struct.Memory* @sub_400593(%struct.State* nonnull %0, i64 %310, %struct.Memory* %2)
  ret %struct.Memory* %311

block_400a0a:                                     ; preds = %block_400586
  %312 = add i64 %259, -12
  store i64 4196881, i64* %PC, align 8
  %313 = inttoptr i64 %312 to i32*
  store i32 24, i32* %313, align 4
  %314 = load i64, i64* %PC, align 8
  %315 = tail call %struct.Memory* @sub_400a11(%struct.State* nonnull %0, i64 %314, %struct.Memory* %2)
  ret %struct.Memory* %315

block_400686:                                     ; preds = %block_400586
  %316 = add i64 %259, -12
  store i64 4195981, i64* %PC, align 8
  %317 = inttoptr i64 %316 to i32*
  store i32 6, i32* %317, align 4
  %318 = load i64, i64* %PC, align 8
  %319 = tail call %struct.Memory* @sub_40068d(%struct.State* nonnull %0, i64 %318, %struct.Memory* %2)
  ret %struct.Memory* %319

block_400b04:                                     ; preds = %block_400586
  %320 = add i64 %259, -12
  store i64 4197131, i64* %PC, align 8
  %321 = inttoptr i64 %320 to i32*
  store i32 29, i32* %321, align 4
  %322 = load i64, i64* %PC, align 8
  %323 = tail call %struct.Memory* @sub_400b0b(%struct.State* nonnull %0, i64 %322, %struct.Memory* %2)
  ret %struct.Memory* %323

block_400780:                                     ; preds = %block_400586
  %324 = add i64 %259, -12
  store i64 4196231, i64* %PC, align 8
  %325 = inttoptr i64 %324 to i32*
  store i32 11, i32* %325, align 4
  %326 = load i64, i64* %PC, align 8
  %327 = tail call %struct.Memory* @sub_400787(%struct.State* nonnull %0, i64 %326, %struct.Memory* %2)
  ret %struct.Memory* %327

block_4009a6:                                     ; preds = %block_400586
  %328 = add i64 %259, -12
  store i64 4196781, i64* %PC, align 8
  %329 = inttoptr i64 %328 to i32*
  store i32 22, i32* %329, align 4
  %330 = load i64, i64* %RBP, align 8
  %331 = add i64 %330, -12
  %332 = load i64, i64* %PC, align 8
  %333 = add i64 %332, 3
  store i64 %333, i64* %PC, align 8
  %334 = inttoptr i64 %331 to i32*
  %335 = load i32, i32* %334, align 4
  %336 = zext i32 %335 to i64
  store i64 %336, i64* %RDI, align 8, !tbaa !2428
  %337 = add i64 %332, -1181
  br label %block_400586.backedge

; <label>:338:                                    ; preds = %block_400586
  %339 = tail call %struct.Memory* @__remill_jump(%struct.State* nonnull %0, i64 %263, %struct.Memory* %2)
  ret %struct.Memory* %339
}

; Function Attrs: noinline nounwind
define %struct.Memory* @sub_400917(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) local_unnamed_addr #6 {
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %PC, align 8
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RSP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %10 = bitcast i64* %RAX to i32**
  br label %block_400917

block_40087a:                                     ; preds = %block_400586
  %11 = add i64 %260, -12
  store i64 4196481, i64* %PC, align 8
  %12 = inttoptr i64 %11 to i32*
  store i32 16, i32* %12, align 4
  %13 = load i64, i64* %PC, align 8
  %14 = tail call %struct.Memory* @sub_400881(%struct.State* nonnull %0, i64 %13, %struct.Memory* %2)
  ret %struct.Memory* %14

block_400974:                                     ; preds = %block_400586
  %15 = add i64 %260, -12
  store i64 4196731, i64* %PC, align 8
  %16 = inttoptr i64 %15 to i32*
  store i32 21, i32* %16, align 4
  %17 = load i64, i64* %RBP, align 8
  %18 = add i64 %17, -12
  %19 = load i64, i64* %PC, align 8
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC, align 8
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RDI, align 8, !tbaa !2428
  %24 = add i64 %19, -1131
  br label %block_400586.backedge

block_400586.backedge:                            ; preds = %block_400974, %block_400a6e, %block_4006ea, %block_400b68, %block_4007e4, %block_4008de, %block_4009d8, %block_400654, %block_400ad2, %block_4005f0, %block_4006b8, %block_400b36, %block_4007b2, %block_4008ac, %block_400622, %block_400aa0, %block_40071c, %block_400816, %block_4009a6
  %.sink178 = phi i64 [ %19, %block_400974 ], [ %34, %block_400a6e ], [ %44, %block_4006ea ], [ %54, %block_400b68 ], [ %64, %block_4007e4 ], [ %74, %block_4008de ], [ %84, %block_4009d8 ], [ %94, %block_400654 ], [ %104, %block_400ad2 ], [ %130, %block_4005f0 ], [ %144, %block_4006b8 ], [ %154, %block_400b36 ], [ %199, %block_4007b2 ], [ %209, %block_4008ac ], [ %269, %block_400622 ], [ %279, %block_400aa0 ], [ %289, %block_40071c ], [ %312, %block_400816 ], [ %344, %block_4009a6 ]
  %.sink173 = phi i64 [ %24, %block_400974 ], [ %39, %block_400a6e ], [ %49, %block_4006ea ], [ %59, %block_400b68 ], [ %69, %block_4007e4 ], [ %79, %block_4008de ], [ %89, %block_4009d8 ], [ %99, %block_400654 ], [ %109, %block_400ad2 ], [ %135, %block_4005f0 ], [ %149, %block_4006b8 ], [ %159, %block_400b36 ], [ %204, %block_4007b2 ], [ %214, %block_4008ac ], [ %274, %block_400622 ], [ %284, %block_400aa0 ], [ %294, %block_40071c ], [ %317, %block_400816 ], [ %349, %block_4009a6 ]
  %.sink5.be = phi i64 [ 1051, %block_400974 ], [ 1301, %block_400a6e ], [ 401, %block_4006ea ], [ 1551, %block_400b68 ], [ 651, %block_4007e4 ], [ 901, %block_4008de ], [ 1151, %block_4009d8 ], [ 251, %block_400654 ], [ 1401, %block_400ad2 ], [ 151, %block_4005f0 ], [ 351, %block_4006b8 ], [ 1501, %block_400b36 ], [ 601, %block_4007b2 ], [ 851, %block_4008ac ], [ 201, %block_400622 ], [ 1351, %block_400aa0 ], [ 451, %block_40071c ], [ 701, %block_400816 ], [ 1101, %block_4009a6 ]
  %25 = add i64 %.sink178, 8
  %26 = load i64, i64* %RSP, align 8, !tbaa !2428
  %27 = add i64 %26, -8
  %28 = inttoptr i64 %27 to i64*
  store i64 %25, i64* %28, align 8
  store i64 %27, i64* %RSP, align 8, !tbaa !2428
  store i64 %.sink173, i64* %PC, align 8, !tbaa !2428
  %29 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %.sink173, %struct.Memory* %2)
  br label %block_400586

block_400a6e:                                     ; preds = %block_400586
  %30 = add i64 %260, -12
  store i64 4196981, i64* %PC, align 8
  %31 = inttoptr i64 %30 to i32*
  store i32 26, i32* %31, align 4
  %32 = load i64, i64* %RBP, align 8
  %33 = add i64 %32, -12
  %34 = load i64, i64* %PC, align 8
  %35 = add i64 %34, 3
  store i64 %35, i64* %PC, align 8
  %36 = inttoptr i64 %33 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i64
  store i64 %38, i64* %RDI, align 8, !tbaa !2428
  %39 = add i64 %34, -1381
  br label %block_400586.backedge

block_4006ea:                                     ; preds = %block_400586
  %40 = add i64 %260, -12
  store i64 4196081, i64* %PC, align 8
  %41 = inttoptr i64 %40 to i32*
  store i32 8, i32* %41, align 4
  %42 = load i64, i64* %RBP, align 8
  %43 = add i64 %42, -12
  %44 = load i64, i64* %PC, align 8
  %45 = add i64 %44, 3
  store i64 %45, i64* %PC, align 8
  %46 = inttoptr i64 %43 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = zext i32 %47 to i64
  store i64 %48, i64* %RDI, align 8, !tbaa !2428
  %49 = add i64 %44, -481
  br label %block_400586.backedge

block_400b68:                                     ; preds = %block_400586
  %50 = add i64 %260, -12
  store i64 4197231, i64* %PC, align 8
  %51 = inttoptr i64 %50 to i32*
  store i32 31, i32* %51, align 4
  %52 = load i64, i64* %RBP, align 8
  %53 = add i64 %52, -12
  %54 = load i64, i64* %PC, align 8
  %55 = add i64 %54, 3
  store i64 %55, i64* %PC, align 8
  %56 = inttoptr i64 %53 to i32*
  %57 = load i32, i32* %56, align 4
  %58 = zext i32 %57 to i64
  store i64 %58, i64* %RDI, align 8, !tbaa !2428
  %59 = add i64 %54, -1631
  br label %block_400586.backedge

block_4007e4:                                     ; preds = %block_400586
  %60 = add i64 %260, -12
  store i64 4196331, i64* %PC, align 8
  %61 = inttoptr i64 %60 to i32*
  store i32 13, i32* %61, align 4
  %62 = load i64, i64* %RBP, align 8
  %63 = add i64 %62, -12
  %64 = load i64, i64* %PC, align 8
  %65 = add i64 %64, 3
  store i64 %65, i64* %PC, align 8
  %66 = inttoptr i64 %63 to i32*
  %67 = load i32, i32* %66, align 4
  %68 = zext i32 %67 to i64
  store i64 %68, i64* %RDI, align 8, !tbaa !2428
  %69 = add i64 %64, -731
  br label %block_400586.backedge

block_4008de:                                     ; preds = %block_400586
  %70 = add i64 %260, -12
  store i64 4196581, i64* %PC, align 8
  %71 = inttoptr i64 %70 to i32*
  store i32 18, i32* %71, align 4
  %72 = load i64, i64* %RBP, align 8
  %73 = add i64 %72, -12
  %74 = load i64, i64* %PC, align 8
  %75 = add i64 %74, 3
  store i64 %75, i64* %PC, align 8
  %76 = inttoptr i64 %73 to i32*
  %77 = load i32, i32* %76, align 4
  %78 = zext i32 %77 to i64
  store i64 %78, i64* %RDI, align 8, !tbaa !2428
  %79 = add i64 %74, -981
  br label %block_400586.backedge

block_4009d8:                                     ; preds = %block_400586
  %80 = add i64 %260, -12
  store i64 4196831, i64* %PC, align 8
  %81 = inttoptr i64 %80 to i32*
  store i32 23, i32* %81, align 4
  %82 = load i64, i64* %RBP, align 8
  %83 = add i64 %82, -12
  %84 = load i64, i64* %PC, align 8
  %85 = add i64 %84, 3
  store i64 %85, i64* %PC, align 8
  %86 = inttoptr i64 %83 to i32*
  %87 = load i32, i32* %86, align 4
  %88 = zext i32 %87 to i64
  store i64 %88, i64* %RDI, align 8, !tbaa !2428
  %89 = add i64 %84, -1231
  br label %block_400586.backedge

block_400654:                                     ; preds = %block_400586
  %90 = add i64 %260, -12
  store i64 4195931, i64* %PC, align 8
  %91 = inttoptr i64 %90 to i32*
  store i32 5, i32* %91, align 4
  %92 = load i64, i64* %RBP, align 8
  %93 = add i64 %92, -12
  %94 = load i64, i64* %PC, align 8
  %95 = add i64 %94, 3
  store i64 %95, i64* %PC, align 8
  %96 = inttoptr i64 %93 to i32*
  %97 = load i32, i32* %96, align 4
  %98 = zext i32 %97 to i64
  store i64 %98, i64* %RDI, align 8, !tbaa !2428
  %99 = add i64 %94, -331
  br label %block_400586.backedge

block_400ad2:                                     ; preds = %block_400586
  %100 = add i64 %260, -12
  store i64 4197081, i64* %PC, align 8
  %101 = inttoptr i64 %100 to i32*
  store i32 28, i32* %101, align 4
  %102 = load i64, i64* %RBP, align 8
  %103 = add i64 %102, -12
  %104 = load i64, i64* %PC, align 8
  %105 = add i64 %104, 3
  store i64 %105, i64* %PC, align 8
  %106 = inttoptr i64 %103 to i32*
  %107 = load i32, i32* %106, align 4
  %108 = zext i32 %107 to i64
  store i64 %108, i64* %RDI, align 8, !tbaa !2428
  %109 = add i64 %104, -1481
  br label %block_400586.backedge

block_40074e:                                     ; preds = %block_400586
  %110 = add i64 %260, -12
  store i64 4196181, i64* %PC, align 8
  %111 = inttoptr i64 %110 to i32*
  store i32 10, i32* %111, align 4
  %112 = load i64, i64* %PC, align 8
  %113 = tail call %struct.Memory* @sub_400755(%struct.State* nonnull %0, i64 %112, %struct.Memory* %2)
  ret %struct.Memory* %113

block_400848:                                     ; preds = %block_400586
  %114 = add i64 %260, -12
  store i64 4196431, i64* %PC, align 8
  %115 = inttoptr i64 %114 to i32*
  store i32 15, i32* %115, align 4
  %116 = load i64, i64* %PC, align 8
  %117 = tail call %struct.Memory* @sub_40084f(%struct.State* nonnull %0, i64 %116, %struct.Memory* %2)
  ret %struct.Memory* %117

block_400942:                                     ; preds = %block_400586
  %118 = add i64 %260, -12
  store i64 4196681, i64* %PC, align 8
  %119 = inttoptr i64 %118 to i32*
  store i32 20, i32* %119, align 4
  %120 = load i64, i64* %PC, align 8
  %121 = tail call %struct.Memory* @sub_400949(%struct.State* nonnull %0, i64 %120, %struct.Memory* %2)
  ret %struct.Memory* %121

block_4005be:                                     ; preds = %block_400586
  %122 = add i64 %260, -12
  store i64 4195781, i64* %PC, align 8
  %123 = inttoptr i64 %122 to i32*
  store i32 2, i32* %123, align 4
  %124 = load i64, i64* %PC, align 8
  %125 = tail call %struct.Memory* @sub_4005c5(%struct.State* nonnull %0, i64 %124, %struct.Memory* %2)
  ret %struct.Memory* %125

block_4005f0:                                     ; preds = %block_400586
  %126 = add i64 %260, -12
  store i64 4195831, i64* %PC, align 8
  %127 = inttoptr i64 %126 to i32*
  store i32 3, i32* %127, align 4
  %128 = load i64, i64* %RBP, align 8
  %129 = add i64 %128, -12
  %130 = load i64, i64* %PC, align 8
  %131 = add i64 %130, 3
  store i64 %131, i64* %PC, align 8
  %132 = inttoptr i64 %129 to i32*
  %133 = load i32, i32* %132, align 4
  %134 = zext i32 %133 to i64
  store i64 %134, i64* %RDI, align 8, !tbaa !2428
  %135 = add i64 %130, -231
  br label %block_400586.backedge

block_400a3c:                                     ; preds = %block_400586
  %136 = add i64 %260, -12
  store i64 4196931, i64* %PC, align 8
  %137 = inttoptr i64 %136 to i32*
  store i32 25, i32* %137, align 4
  %138 = load i64, i64* %PC, align 8
  %139 = tail call %struct.Memory* @sub_400a43(%struct.State* nonnull %0, i64 %138, %struct.Memory* %2)
  ret %struct.Memory* %139

block_4006b8:                                     ; preds = %block_400586
  %140 = add i64 %260, -12
  store i64 4196031, i64* %PC, align 8
  %141 = inttoptr i64 %140 to i32*
  store i32 7, i32* %141, align 4
  %142 = load i64, i64* %RBP, align 8
  %143 = add i64 %142, -12
  %144 = load i64, i64* %PC, align 8
  %145 = add i64 %144, 3
  store i64 %145, i64* %PC, align 8
  %146 = inttoptr i64 %143 to i32*
  %147 = load i32, i32* %146, align 4
  %148 = zext i32 %147 to i64
  store i64 %148, i64* %RDI, align 8, !tbaa !2428
  %149 = add i64 %144, -431
  br label %block_400586.backedge

block_400b36:                                     ; preds = %block_400586
  %150 = add i64 %260, -12
  store i64 4197181, i64* %PC, align 8
  %151 = inttoptr i64 %150 to i32*
  store i32 30, i32* %151, align 4
  %152 = load i64, i64* %RBP, align 8
  %153 = add i64 %152, -12
  %154 = load i64, i64* %PC, align 8
  %155 = add i64 %154, 3
  store i64 %155, i64* %PC, align 8
  %156 = inttoptr i64 %153 to i32*
  %157 = load i32, i32* %156, align 4
  %158 = zext i32 %157 to i64
  store i64 %158, i64* %RDI, align 8, !tbaa !2428
  %159 = add i64 %154, -1581
  br label %block_400586.backedge

block_400579:                                     ; preds = %block_400586
  %160 = add i64 %260, -12
  store i64 4195712, i64* %PC, align 8
  %161 = inttoptr i64 %160 to i32*
  store i32 0, i32* %161, align 4
  %162 = load i64, i64* %RSP, align 8
  %163 = load i64, i64* %PC, align 8
  %164 = add i64 %162, 48
  store i64 %164, i64* %RSP, align 8, !tbaa !2428
  %165 = icmp ugt i64 %162, -49
  %166 = zext i1 %165 to i8
  store i8 %166, i8* %4, align 1, !tbaa !2432
  %167 = trunc i64 %164 to i32
  %168 = and i32 %167, 255
  %169 = tail call i32 @llvm.ctpop.i32(i32 %168) #9
  %170 = trunc i32 %169 to i8
  %171 = and i8 %170, 1
  %172 = xor i8 %171, 1
  store i8 %172, i8* %5, align 1, !tbaa !2446
  %173 = xor i64 %162, 16
  %174 = xor i64 %173, %164
  %175 = lshr i64 %174, 4
  %176 = trunc i64 %175 to i8
  %177 = and i8 %176, 1
  store i8 %177, i8* %6, align 1, !tbaa !2447
  %178 = icmp eq i64 %164, 0
  %179 = zext i1 %178 to i8
  store i8 %179, i8* %7, align 1, !tbaa !2448
  %180 = lshr i64 %164, 63
  %181 = trunc i64 %180 to i8
  store i8 %181, i8* %8, align 1, !tbaa !2449
  %182 = lshr i64 %162, 63
  %183 = xor i64 %180, %182
  %184 = add nuw nsw i64 %183, %180
  %185 = icmp eq i64 %184, 2
  %186 = zext i1 %185 to i8
  store i8 %186, i8* %9, align 1, !tbaa !2450
  %187 = add i64 %163, 5
  store i64 %187, i64* %PC, align 8
  %188 = add i64 %162, 56
  %189 = inttoptr i64 %164 to i64*
  %190 = load i64, i64* %189, align 8
  store i64 %190, i64* %RBP, align 8, !tbaa !2428
  store i64 %188, i64* %RSP, align 8, !tbaa !2428
  %191 = add i64 %163, 6
  store i64 %191, i64* %PC, align 8
  %192 = inttoptr i64 %188 to i64*
  %193 = load i64, i64* %192, align 8
  store i64 %193, i64* %PC, align 8, !tbaa !2428
  %194 = add i64 %162, 64
  store i64 %194, i64* %RSP, align 8, !tbaa !2428
  ret %struct.Memory* %2

block_4007b2:                                     ; preds = %block_400586
  %195 = add i64 %260, -12
  store i64 4196281, i64* %PC, align 8
  %196 = inttoptr i64 %195 to i32*
  store i32 12, i32* %196, align 4
  %197 = load i64, i64* %RBP, align 8
  %198 = add i64 %197, -12
  %199 = load i64, i64* %PC, align 8
  %200 = add i64 %199, 3
  store i64 %200, i64* %PC, align 8
  %201 = inttoptr i64 %198 to i32*
  %202 = load i32, i32* %201, align 4
  %203 = zext i32 %202 to i64
  store i64 %203, i64* %RDI, align 8, !tbaa !2428
  %204 = add i64 %199, -681
  br label %block_400586.backedge

block_4008ac:                                     ; preds = %block_400586
  %205 = add i64 %260, -12
  store i64 4196531, i64* %PC, align 8
  %206 = inttoptr i64 %205 to i32*
  store i32 17, i32* %206, align 4
  %207 = load i64, i64* %RBP, align 8
  %208 = add i64 %207, -12
  %209 = load i64, i64* %PC, align 8
  %210 = add i64 %209, 3
  store i64 %210, i64* %PC, align 8
  %211 = inttoptr i64 %208 to i32*
  %212 = load i32, i32* %211, align 4
  %213 = zext i32 %212 to i64
  store i64 %213, i64* %RDI, align 8, !tbaa !2428
  %214 = add i64 %209, -931
  br label %block_400586.backedge

block_400586:                                     ; preds = %block_400586.backedge, %block_400917
  %.sink5 = phi i64 [ 951, %block_400917 ], [ %.sink5.be, %block_400586.backedge ]
  %215 = load i64, i64* %RBP, align 8
  %216 = add i64 %215, -8
  %217 = load i64, i64* %PC, align 8
  %218 = add i64 %217, 4
  store i64 %218, i64* %PC, align 8
  %219 = inttoptr i64 %216 to i64*
  %220 = load i64, i64* %219, align 8
  store i64 %220, i64* %RAX, align 8, !tbaa !2428
  %221 = add i64 %220, 4
  store i64 %221, i64* %RCX, align 8, !tbaa !2428
  %222 = icmp ugt i64 %220, -5
  %223 = zext i1 %222 to i8
  store i8 %223, i8* %4, align 1, !tbaa !2432
  %224 = trunc i64 %221 to i32
  %225 = and i32 %224, 255
  %226 = tail call i32 @llvm.ctpop.i32(i32 %225) #9
  %227 = trunc i32 %226 to i8
  %228 = and i8 %227, 1
  %229 = xor i8 %228, 1
  store i8 %229, i8* %5, align 1, !tbaa !2446
  %230 = xor i64 %221, %220
  %231 = lshr i64 %230, 4
  %232 = trunc i64 %231 to i8
  %233 = and i8 %232, 1
  store i8 %233, i8* %6, align 1, !tbaa !2447
  %234 = icmp eq i64 %221, 0
  %235 = zext i1 %234 to i8
  store i8 %235, i8* %7, align 1, !tbaa !2448
  %236 = lshr i64 %221, 63
  %237 = trunc i64 %236 to i8
  store i8 %237, i8* %8, align 1, !tbaa !2449
  %238 = lshr i64 %220, 63
  %239 = xor i64 %236, %238
  %240 = add nuw nsw i64 %239, %236
  %241 = icmp eq i64 %240, 2
  %242 = zext i1 %241 to i8
  store i8 %242, i8* %9, align 1, !tbaa !2450
  %243 = add i64 %217, 15
  store i64 %243, i64* %PC, align 8
  store i64 %221, i64* %219, align 8
  %244 = load i32*, i32** %10, align 8
  %245 = load i64, i64* %PC, align 8
  %246 = add i64 %245, 3
  store i64 %246, i64* %PC, align 8
  %247 = load i32, i32* %244, align 4
  %248 = sext i32 %247 to i64
  store i64 %248, i64* %RAX, align 8, !tbaa !2428
  %249 = shl nsw i64 %248, 3
  %250 = add i64 %249, add (i64 ptrtoint (%seg_602020__data_type* @seg_602020__data to i64), i64 16)
  %251 = add i64 %245, 11
  store i64 %251, i64* %PC, align 8
  %252 = inttoptr i64 %250 to i64*
  %253 = load i64, i64* %252, align 8
  store i64 %253, i64* %RAX, align 8, !tbaa !2428
  %254 = load i64, i64* %RBP, align 8
  %255 = add i64 %254, -40
  %256 = add i64 %245, 15
  store i64 %256, i64* %PC, align 8
  %257 = inttoptr i64 %255 to i64*
  store i64 %253, i64* %257, align 8
  %258 = load i64, i64* %PC, align 8
  %259 = sub i64 %258, %.sink5
  %260 = load i64, i64* %RBP, align 8
  %261 = add i64 %260, -40
  %262 = add i64 %259, 4
  store i64 %262, i64* %PC, align 8
  %263 = inttoptr i64 %261 to i64*
  %264 = load i64, i64* %263, align 8
  store i64 %264, i64* %RAX, align 8, !tbaa !2428
  store i64 %264, i64* %PC, align 8, !tbaa !2428
  switch i64 %264, label %350 [
    i64 4196774, label %block_4009a6
    i64 4196224, label %block_400780
    i64 4197124, label %block_400b04
    i64 4195974, label %block_400686
    i64 4196874, label %block_400a0a
    i64 4196624, label %block_400910
    i64 4196374, label %block_400816
    i64 4196124, label %block_40071c
    i64 4197024, label %block_400aa0
    i64 4197074, label %block_400ad2
    i64 4195924, label %block_400654
    i64 4196574, label %block_4008de
    i64 4196324, label %block_4007e4
    i64 4197224, label %block_400b68
    i64 4196074, label %block_4006ea
    i64 4196474, label %block_40087a
    i64 4196824, label %block_4009d8
    i64 4195724, label %block_40058c
    i64 4196724, label %block_400974
    i64 4195824, label %block_4005f0
    i64 4196174, label %block_40074e
    i64 4196424, label %block_400848
    i64 4196674, label %block_400942
    i64 4195774, label %block_4005be
    i64 4196924, label %block_400a3c
    i64 4196974, label %block_400a6e
    i64 4195705, label %block_400579
    i64 4196024, label %block_4006b8
    i64 4197174, label %block_400b36
    i64 4196274, label %block_4007b2
    i64 4196524, label %block_4008ac
    i64 4195874, label %block_400622
  ]

block_400622:                                     ; preds = %block_400586
  %265 = add i64 %260, -12
  store i64 4195881, i64* %PC, align 8
  %266 = inttoptr i64 %265 to i32*
  store i32 4, i32* %266, align 4
  %267 = load i64, i64* %RBP, align 8
  %268 = add i64 %267, -12
  %269 = load i64, i64* %PC, align 8
  %270 = add i64 %269, 3
  store i64 %270, i64* %PC, align 8
  %271 = inttoptr i64 %268 to i32*
  %272 = load i32, i32* %271, align 4
  %273 = zext i32 %272 to i64
  store i64 %273, i64* %RDI, align 8, !tbaa !2428
  %274 = add i64 %269, -281
  br label %block_400586.backedge

block_400aa0:                                     ; preds = %block_400586
  %275 = add i64 %260, -12
  store i64 4197031, i64* %PC, align 8
  %276 = inttoptr i64 %275 to i32*
  store i32 27, i32* %276, align 4
  %277 = load i64, i64* %RBP, align 8
  %278 = add i64 %277, -12
  %279 = load i64, i64* %PC, align 8
  %280 = add i64 %279, 3
  store i64 %280, i64* %PC, align 8
  %281 = inttoptr i64 %278 to i32*
  %282 = load i32, i32* %281, align 4
  %283 = zext i32 %282 to i64
  store i64 %283, i64* %RDI, align 8, !tbaa !2428
  %284 = add i64 %279, -1431
  br label %block_400586.backedge

block_40071c:                                     ; preds = %block_400586
  %285 = add i64 %260, -12
  store i64 4196131, i64* %PC, align 8
  %286 = inttoptr i64 %285 to i32*
  store i32 9, i32* %286, align 4
  %287 = load i64, i64* %RBP, align 8
  %288 = add i64 %287, -12
  %289 = load i64, i64* %PC, align 8
  %290 = add i64 %289, 3
  store i64 %290, i64* %PC, align 8
  %291 = inttoptr i64 %288 to i32*
  %292 = load i32, i32* %291, align 4
  %293 = zext i32 %292 to i64
  store i64 %293, i64* %RDI, align 8, !tbaa !2428
  %294 = add i64 %289, -531
  br label %block_400586.backedge

block_400917:                                     ; preds = %block_400910, %3
  %295 = phi i64 [ %.pre, %block_400910 ], [ %1, %3 ]
  %296 = load i64, i64* %RBP, align 8
  %297 = add i64 %296, -12
  %298 = add i64 %295, 3
  store i64 %298, i64* %PC, align 8
  %299 = inttoptr i64 %297 to i32*
  %300 = load i32, i32* %299, align 4
  %301 = zext i32 %300 to i64
  store i64 %301, i64* %RDI, align 8, !tbaa !2428
  %302 = add i64 %295, -1031
  %303 = add i64 %295, 8
  %304 = load i64, i64* %RSP, align 8, !tbaa !2428
  %305 = add i64 %304, -8
  %306 = inttoptr i64 %305 to i64*
  store i64 %303, i64* %306, align 8
  store i64 %305, i64* %RSP, align 8, !tbaa !2428
  store i64 %302, i64* %PC, align 8, !tbaa !2428
  %307 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %302, %struct.Memory* %2)
  br label %block_400586

block_400816:                                     ; preds = %block_400586
  %308 = add i64 %260, -12
  store i64 4196381, i64* %PC, align 8
  %309 = inttoptr i64 %308 to i32*
  store i32 14, i32* %309, align 4
  %310 = load i64, i64* %RBP, align 8
  %311 = add i64 %310, -12
  %312 = load i64, i64* %PC, align 8
  %313 = add i64 %312, 3
  store i64 %313, i64* %PC, align 8
  %314 = inttoptr i64 %311 to i32*
  %315 = load i32, i32* %314, align 4
  %316 = zext i32 %315 to i64
  store i64 %316, i64* %RDI, align 8, !tbaa !2428
  %317 = add i64 %312, -781
  br label %block_400586.backedge

block_400910:                                     ; preds = %block_400586
  %318 = add i64 %260, -12
  store i64 4196631, i64* %PC, align 8
  %319 = inttoptr i64 %318 to i32*
  store i32 19, i32* %319, align 4
  %.pre = load i64, i64* %PC, align 8
  br label %block_400917

block_40058c:                                     ; preds = %block_400586
  %320 = add i64 %260, -12
  store i64 4195731, i64* %PC, align 8
  %321 = inttoptr i64 %320 to i32*
  store i32 1, i32* %321, align 4
  %322 = load i64, i64* %PC, align 8
  %323 = tail call %struct.Memory* @sub_400593(%struct.State* nonnull %0, i64 %322, %struct.Memory* %2)
  ret %struct.Memory* %323

block_400a0a:                                     ; preds = %block_400586
  %324 = add i64 %260, -12
  store i64 4196881, i64* %PC, align 8
  %325 = inttoptr i64 %324 to i32*
  store i32 24, i32* %325, align 4
  %326 = load i64, i64* %PC, align 8
  %327 = tail call %struct.Memory* @sub_400a11(%struct.State* nonnull %0, i64 %326, %struct.Memory* %2)
  ret %struct.Memory* %327

block_400686:                                     ; preds = %block_400586
  %328 = add i64 %260, -12
  store i64 4195981, i64* %PC, align 8
  %329 = inttoptr i64 %328 to i32*
  store i32 6, i32* %329, align 4
  %330 = load i64, i64* %PC, align 8
  %331 = tail call %struct.Memory* @sub_40068d(%struct.State* nonnull %0, i64 %330, %struct.Memory* %2)
  ret %struct.Memory* %331

block_400b04:                                     ; preds = %block_400586
  %332 = add i64 %260, -12
  store i64 4197131, i64* %PC, align 8
  %333 = inttoptr i64 %332 to i32*
  store i32 29, i32* %333, align 4
  %334 = load i64, i64* %PC, align 8
  %335 = tail call %struct.Memory* @sub_400b0b(%struct.State* nonnull %0, i64 %334, %struct.Memory* %2)
  ret %struct.Memory* %335

block_400780:                                     ; preds = %block_400586
  %336 = add i64 %260, -12
  store i64 4196231, i64* %PC, align 8
  %337 = inttoptr i64 %336 to i32*
  store i32 11, i32* %337, align 4
  %338 = load i64, i64* %PC, align 8
  %339 = tail call %struct.Memory* @sub_400787(%struct.State* nonnull %0, i64 %338, %struct.Memory* %2)
  ret %struct.Memory* %339

block_4009a6:                                     ; preds = %block_400586
  %340 = add i64 %260, -12
  store i64 4196781, i64* %PC, align 8
  %341 = inttoptr i64 %340 to i32*
  store i32 22, i32* %341, align 4
  %342 = load i64, i64* %RBP, align 8
  %343 = add i64 %342, -12
  %344 = load i64, i64* %PC, align 8
  %345 = add i64 %344, 3
  store i64 %345, i64* %PC, align 8
  %346 = inttoptr i64 %343 to i32*
  %347 = load i32, i32* %346, align 4
  %348 = zext i32 %347 to i64
  store i64 %348, i64* %RDI, align 8, !tbaa !2428
  %349 = add i64 %344, -1181
  br label %block_400586.backedge

; <label>:350:                                    ; preds = %block_400586
  %351 = tail call %struct.Memory* @__remill_jump(%struct.State* nonnull %0, i64 %264, %struct.Memory* %2)
  ret %struct.Memory* %351
}

; Function Attrs: noinline nounwind
define %struct.Memory* @sub_400c80___libc_csu_init(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) local_unnamed_addr #6 {
block_400c80:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0
  %EDI = bitcast %union.anon* %3 to i32*
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 27, i32 0
  %R13D = bitcast %union.anon* %4 to i32*
  %RBX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 3, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %RDI = getelementptr inbounds %union.anon, %union.anon* %3, i64 0, i32 0
  %RSP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %R12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 25, i32 0, i32 0
  %R13 = getelementptr inbounds %union.anon, %union.anon* %4, i64 0, i32 0
  %R14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 29, i32 0, i32 0
  %R15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 31, i32 0, i32 0
  %5 = load i64, i64* %R15, align 8
  %6 = add i64 %1, 2
  store i64 %6, i64* %PC, align 8
  %7 = load i64, i64* %RSP, align 8, !tbaa !2428
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  %10 = load i64, i64* %R14, align 8
  %11 = load i64, i64* %PC, align 8
  %12 = add i64 %11, 2
  store i64 %12, i64* %PC, align 8
  %13 = add i64 %7, -16
  %14 = inttoptr i64 %13 to i64*
  store i64 %10, i64* %14, align 8
  %15 = load i64, i64* %RDX, align 8
  %16 = load i64, i64* %PC, align 8
  store i64 %15, i64* %R15, align 8, !tbaa !2428
  %17 = load i64, i64* %R13, align 8
  %18 = add i64 %16, 5
  store i64 %18, i64* %PC, align 8
  %19 = add i64 %7, -24
  %20 = inttoptr i64 %19 to i64*
  store i64 %17, i64* %20, align 8
  %21 = load i64, i64* %R12, align 8
  %22 = load i64, i64* %PC, align 8
  %23 = add i64 %22, 2
  store i64 %23, i64* %PC, align 8
  %24 = add i64 %7, -32
  %25 = inttoptr i64 %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = load i64, i64* %PC, align 8
  store i64 ptrtoint (%seg_601df0__init_array_type* @seg_601df0__init_array to i64), i64* %R12, align 8, !tbaa !2428
  %27 = load i64, i64* %RBP, align 8
  %28 = add i64 %26, 8
  store i64 %28, i64* %PC, align 8
  %29 = add i64 %7, -40
  %30 = inttoptr i64 %29 to i64*
  store i64 %27, i64* %30, align 8
  %31 = load i64, i64* %PC, align 8
  store i64 add (i64 ptrtoint (%seg_601df0__init_array_type* @seg_601df0__init_array to i64), i64 8), i64* %RBP, align 8, !tbaa !2428
  %32 = load i64, i64* %RBX, align 8
  %33 = add i64 %31, 8
  store i64 %33, i64* %PC, align 8
  %34 = add i64 %7, -48
  %35 = inttoptr i64 %34 to i64*
  store i64 %32, i64* %35, align 8
  %36 = load i32, i32* %EDI, align 4
  %37 = zext i32 %36 to i64
  %38 = load i64, i64* %PC, align 8
  store i64 %37, i64* %R13, align 8, !tbaa !2428
  %39 = load i64, i64* %RSI, align 8
  store i64 %39, i64* %R14, align 8, !tbaa !2428
  %40 = load i64, i64* %RBP, align 8
  %41 = load i64, i64* %R12, align 8
  %42 = sub i64 %40, %41
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %49 = lshr i64 %42, 2
  %50 = trunc i64 %49 to i8
  %51 = and i8 %50, 1
  %52 = ashr i64 %42, 3
  store i64 %52, i64* %RBP, align 8, !tbaa !2428
  store i8 %51, i8* %43, align 1, !tbaa !2451
  %53 = trunc i64 %52 to i32
  %54 = and i32 %53, 255
  %55 = tail call i32 @llvm.ctpop.i32(i32 %54) #9
  %56 = trunc i32 %55 to i8
  %57 = and i8 %56, 1
  %58 = xor i8 %57, 1
  store i8 %58, i8* %44, align 1, !tbaa !2451
  store i8 0, i8* %45, align 1, !tbaa !2451
  %59 = icmp eq i64 %52, 0
  %60 = zext i1 %59 to i8
  store i8 %60, i8* %46, align 1, !tbaa !2451
  %61 = lshr i64 %52, 63
  %62 = trunc i64 %61 to i8
  store i8 %62, i8* %47, align 1, !tbaa !2451
  store i8 0, i8* %48, align 1, !tbaa !2451
  %63 = add i64 %38, -2235
  %64 = add i64 %38, 22
  %65 = add i64 %7, -64
  %66 = inttoptr i64 %65 to i64*
  store i64 %64, i64* %66, align 8
  store i64 %65, i64* %RSP, align 8, !tbaa !2428
  store i64 %63, i64* %PC, align 8, !tbaa !2428
  %67 = tail call %struct.Memory* @sub_4003e0__init_proc(%struct.State* nonnull %0, i64 %63, %struct.Memory* %2)
  %68 = load i64, i64* %RBP, align 8
  %69 = load i64, i64* %PC, align 8
  store i8 0, i8* %43, align 1, !tbaa !2432
  %70 = trunc i64 %68 to i32
  %71 = and i32 %70, 255
  %72 = tail call i32 @llvm.ctpop.i32(i32 %71) #9
  %73 = trunc i32 %72 to i8
  %74 = and i8 %73, 1
  %75 = xor i8 %74, 1
  store i8 %75, i8* %44, align 1, !tbaa !2446
  %76 = icmp eq i64 %68, 0
  %77 = zext i1 %76 to i8
  store i8 %77, i8* %46, align 1, !tbaa !2448
  %78 = lshr i64 %68, 63
  %79 = trunc i64 %78 to i8
  store i8 %79, i8* %47, align 1, !tbaa !2449
  store i8 0, i8* %48, align 1, !tbaa !2450
  store i8 0, i8* %45, align 1, !tbaa !2447
  %.v = select i1 %76, i64 37, i64 5
  %80 = add i64 %69, %.v
  store i64 %80, i64* %PC, align 8, !tbaa !2428
  br i1 %76, label %block_400cd6, label %block_400cb6

block_400cd6.loopexit:                            ; preds = %block_400cc0
  br label %block_400cd6

block_400cd6:                                     ; preds = %block_400cd6.loopexit, %block_400c80
  %81 = phi i64 [ %80, %block_400c80 ], [ %179, %block_400cd6.loopexit ]
  %MEMORY.0 = phi %struct.Memory* [ %67, %block_400c80 ], [ %149, %block_400cd6.loopexit ]
  %82 = load i64, i64* %RSP, align 8
  %83 = add i64 %82, 8
  store i64 %83, i64* %RSP, align 8, !tbaa !2428
  %84 = icmp ugt i64 %82, -9
  %85 = zext i1 %84 to i8
  store i8 %85, i8* %43, align 1, !tbaa !2432
  %86 = trunc i64 %83 to i32
  %87 = and i32 %86, 255
  %88 = tail call i32 @llvm.ctpop.i32(i32 %87) #9
  %89 = trunc i32 %88 to i8
  %90 = and i8 %89, 1
  %91 = xor i8 %90, 1
  store i8 %91, i8* %44, align 1, !tbaa !2446
  %92 = xor i64 %83, %82
  %93 = lshr i64 %92, 4
  %94 = trunc i64 %93 to i8
  %95 = and i8 %94, 1
  store i8 %95, i8* %45, align 1, !tbaa !2447
  %96 = icmp eq i64 %83, 0
  %97 = zext i1 %96 to i8
  store i8 %97, i8* %46, align 1, !tbaa !2448
  %98 = lshr i64 %83, 63
  %99 = trunc i64 %98 to i8
  store i8 %99, i8* %47, align 1, !tbaa !2449
  %100 = lshr i64 %82, 63
  %101 = xor i64 %98, %100
  %102 = add nuw nsw i64 %101, %98
  %103 = icmp eq i64 %102, 2
  %104 = zext i1 %103 to i8
  store i8 %104, i8* %48, align 1, !tbaa !2450
  %105 = add i64 %81, 5
  store i64 %105, i64* %PC, align 8
  %106 = add i64 %82, 16
  %107 = inttoptr i64 %83 to i64*
  %108 = load i64, i64* %107, align 8
  store i64 %108, i64* %RBX, align 8, !tbaa !2428
  store i64 %106, i64* %RSP, align 8, !tbaa !2428
  %109 = add i64 %81, 6
  store i64 %109, i64* %PC, align 8
  %110 = add i64 %82, 24
  %111 = inttoptr i64 %106 to i64*
  %112 = load i64, i64* %111, align 8
  store i64 %112, i64* %RBP, align 8, !tbaa !2428
  store i64 %110, i64* %RSP, align 8, !tbaa !2428
  %113 = add i64 %81, 8
  store i64 %113, i64* %PC, align 8
  %114 = add i64 %82, 32
  %115 = inttoptr i64 %110 to i64*
  %116 = load i64, i64* %115, align 8
  store i64 %116, i64* %R12, align 8, !tbaa !2428
  store i64 %114, i64* %RSP, align 8, !tbaa !2428
  %117 = add i64 %81, 10
  store i64 %117, i64* %PC, align 8
  %118 = add i64 %82, 40
  %119 = inttoptr i64 %114 to i64*
  %120 = load i64, i64* %119, align 8
  store i64 %120, i64* %R13, align 8, !tbaa !2428
  store i64 %118, i64* %RSP, align 8, !tbaa !2428
  %121 = add i64 %81, 12
  store i64 %121, i64* %PC, align 8
  %122 = add i64 %82, 48
  %123 = inttoptr i64 %118 to i64*
  %124 = load i64, i64* %123, align 8
  store i64 %124, i64* %R14, align 8, !tbaa !2428
  store i64 %122, i64* %RSP, align 8, !tbaa !2428
  %125 = add i64 %81, 14
  store i64 %125, i64* %PC, align 8
  %126 = add i64 %82, 56
  %127 = inttoptr i64 %122 to i64*
  %128 = load i64, i64* %127, align 8
  store i64 %128, i64* %R15, align 8, !tbaa !2428
  store i64 %126, i64* %RSP, align 8, !tbaa !2428
  %129 = add i64 %81, 15
  store i64 %129, i64* %PC, align 8
  %130 = inttoptr i64 %126 to i64*
  %131 = load i64, i64* %130, align 8
  store i64 %131, i64* %PC, align 8, !tbaa !2428
  %132 = add i64 %82, 64
  store i64 %132, i64* %RSP, align 8, !tbaa !2428
  ret %struct.Memory* %MEMORY.0

block_400cb6:                                     ; preds = %block_400c80
  store i64 0, i64* %RBX, align 8, !tbaa !2428
  store i8 0, i8* %43, align 1, !tbaa !2432
  store i8 1, i8* %44, align 1, !tbaa !2446
  store i8 1, i8* %46, align 1, !tbaa !2448
  store i8 0, i8* %47, align 1, !tbaa !2449
  store i8 0, i8* %48, align 1, !tbaa !2450
  store i8 0, i8* %45, align 1, !tbaa !2447
  %133 = add i64 %80, 10
  store i64 %133, i64* %PC, align 8
  br label %block_400cc0

block_400cc0:                                     ; preds = %block_400cc0, %block_400cb6
  %134 = phi i64 [ 0, %block_400cb6 ], [ %152, %block_400cc0 ]
  %135 = phi i64 [ %133, %block_400cb6 ], [ %179, %block_400cc0 ]
  %MEMORY.1 = phi %struct.Memory* [ %67, %block_400cb6 ], [ %149, %block_400cc0 ]
  %136 = load i64, i64* %R15, align 8
  store i64 %136, i64* %RDX, align 8, !tbaa !2428
  %137 = load i64, i64* %R14, align 8
  store i64 %137, i64* %RSI, align 8, !tbaa !2428
  %138 = load i32, i32* %R13D, align 4
  %139 = zext i32 %138 to i64
  store i64 %139, i64* %RDI, align 8, !tbaa !2428
  %140 = load i64, i64* %R12, align 8
  %141 = shl i64 %134, 3
  %142 = add i64 %141, %140
  %143 = add i64 %135, 13
  store i64 %143, i64* %PC, align 8
  %144 = load i64, i64* %RSP, align 8, !tbaa !2428
  %145 = add i64 %144, -8
  %146 = inttoptr i64 %145 to i64*
  store i64 %143, i64* %146, align 8
  store i64 %145, i64* %RSP, align 8, !tbaa !2428
  %147 = inttoptr i64 %142 to i64*
  %148 = load i64, i64* %147, align 8
  store i64 %148, i64* %PC, align 8, !tbaa !2428
  %149 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 %148, %struct.Memory* %MEMORY.1)
  %150 = load i64, i64* %RBX, align 8
  %151 = load i64, i64* %PC, align 8
  %152 = add i64 %150, 1
  store i64 %152, i64* %RBX, align 8, !tbaa !2428
  %153 = lshr i64 %152, 63
  %154 = load i64, i64* %RBP, align 8
  %155 = sub i64 %154, %152
  %156 = icmp ult i64 %154, %152
  %157 = zext i1 %156 to i8
  store i8 %157, i8* %43, align 1, !tbaa !2432
  %158 = trunc i64 %155 to i32
  %159 = and i32 %158, 255
  %160 = tail call i32 @llvm.ctpop.i32(i32 %159) #9
  %161 = trunc i32 %160 to i8
  %162 = and i8 %161, 1
  %163 = xor i8 %162, 1
  store i8 %163, i8* %44, align 1, !tbaa !2446
  %164 = xor i64 %152, %154
  %165 = xor i64 %164, %155
  %166 = lshr i64 %165, 4
  %167 = trunc i64 %166 to i8
  %168 = and i8 %167, 1
  store i8 %168, i8* %45, align 1, !tbaa !2447
  %169 = icmp eq i64 %155, 0
  %170 = zext i1 %169 to i8
  store i8 %170, i8* %46, align 1, !tbaa !2448
  %171 = lshr i64 %155, 63
  %172 = trunc i64 %171 to i8
  store i8 %172, i8* %47, align 1, !tbaa !2449
  %173 = lshr i64 %154, 63
  %174 = xor i64 %153, %173
  %175 = xor i64 %171, %173
  %176 = add nuw nsw i64 %175, %174
  %177 = icmp eq i64 %176, 2
  %178 = zext i1 %177 to i8
  store i8 %178, i8* %48, align 1, !tbaa !2450
  %.v2 = select i1 %169, i64 9, i64 -13
  %179 = add i64 %151, %.v2
  store i64 %179, i64* %PC, align 8, !tbaa !2428
  br i1 %169, label %block_400cd6.loopexit, label %block_400cc0
}

; Function Attrs: noinline nounwind
define %struct.Memory* @sub_400755(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) local_unnamed_addr #6 {
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %PC, align 8
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RSP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %10 = bitcast i64* %RAX to i32**
  br label %block_400755

block_40087a:                                     ; preds = %block_400586
  %11 = add i64 %271, -12
  store i64 4196481, i64* %PC, align 8
  %12 = inttoptr i64 %11 to i32*
  store i32 16, i32* %12, align 4
  %13 = load i64, i64* %PC, align 8
  %14 = tail call %struct.Memory* @sub_400881(%struct.State* nonnull %0, i64 %13, %struct.Memory* %2)
  ret %struct.Memory* %14

block_400974:                                     ; preds = %block_400586
  %15 = add i64 %271, -12
  store i64 4196731, i64* %PC, align 8
  %16 = inttoptr i64 %15 to i32*
  store i32 21, i32* %16, align 4
  %17 = load i64, i64* %RBP, align 8
  %18 = add i64 %17, -12
  %19 = load i64, i64* %PC, align 8
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC, align 8
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RDI, align 8, !tbaa !2428
  %24 = add i64 %19, -1131
  br label %block_400586.backedge

block_400586.backedge:                            ; preds = %block_400974, %block_400a6e, %block_4006ea, %block_400b68, %block_4007e4, %block_4008de, %block_4009d8, %block_400654, %block_400ad2, %block_4005f0, %block_4006b8, %block_400b36, %block_4007b2, %block_4008ac, %block_400622, %block_400aa0, %block_40071c, %block_400816, %block_400910, %block_4009a6
  %.sink170 = phi i64 [ %19, %block_400974 ], [ %34, %block_400a6e ], [ %44, %block_4006ea ], [ %54, %block_400b68 ], [ %64, %block_4007e4 ], [ %74, %block_4008de ], [ %84, %block_4009d8 ], [ %107, %block_400654 ], [ %117, %block_400ad2 ], [ %141, %block_4005f0 ], [ %155, %block_4006b8 ], [ %165, %block_400b36 ], [ %210, %block_4007b2 ], [ %220, %block_4008ac ], [ %280, %block_400622 ], [ %290, %block_400aa0 ], [ %300, %block_40071c ], [ %310, %block_400816 ], [ %320, %block_400910 ], [ %350, %block_4009a6 ]
  %.sink165 = phi i64 [ %24, %block_400974 ], [ %39, %block_400a6e ], [ %49, %block_4006ea ], [ %59, %block_400b68 ], [ %69, %block_4007e4 ], [ %79, %block_4008de ], [ %89, %block_4009d8 ], [ %112, %block_400654 ], [ %122, %block_400ad2 ], [ %146, %block_4005f0 ], [ %160, %block_4006b8 ], [ %170, %block_400b36 ], [ %215, %block_4007b2 ], [ %225, %block_4008ac ], [ %285, %block_400622 ], [ %295, %block_400aa0 ], [ %305, %block_40071c ], [ %315, %block_400816 ], [ %325, %block_400910 ], [ %355, %block_4009a6 ]
  %.sink5.be = phi i64 [ 1051, %block_400974 ], [ 1301, %block_400a6e ], [ 401, %block_4006ea ], [ 1551, %block_400b68 ], [ 651, %block_4007e4 ], [ 901, %block_4008de ], [ 1151, %block_4009d8 ], [ 251, %block_400654 ], [ 1401, %block_400ad2 ], [ 151, %block_4005f0 ], [ 351, %block_4006b8 ], [ 1501, %block_400b36 ], [ 601, %block_4007b2 ], [ 851, %block_4008ac ], [ 201, %block_400622 ], [ 1351, %block_400aa0 ], [ 451, %block_40071c ], [ 701, %block_400816 ], [ 951, %block_400910 ], [ 1101, %block_4009a6 ]
  %25 = add i64 %.sink170, 8
  %26 = load i64, i64* %RSP, align 8, !tbaa !2428
  %27 = add i64 %26, -8
  %28 = inttoptr i64 %27 to i64*
  store i64 %25, i64* %28, align 8
  store i64 %27, i64* %RSP, align 8, !tbaa !2428
  store i64 %.sink165, i64* %PC, align 8, !tbaa !2428
  %29 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %.sink165, %struct.Memory* %2)
  br label %block_400586

block_400a6e:                                     ; preds = %block_400586
  %30 = add i64 %271, -12
  store i64 4196981, i64* %PC, align 8
  %31 = inttoptr i64 %30 to i32*
  store i32 26, i32* %31, align 4
  %32 = load i64, i64* %RBP, align 8
  %33 = add i64 %32, -12
  %34 = load i64, i64* %PC, align 8
  %35 = add i64 %34, 3
  store i64 %35, i64* %PC, align 8
  %36 = inttoptr i64 %33 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i64
  store i64 %38, i64* %RDI, align 8, !tbaa !2428
  %39 = add i64 %34, -1381
  br label %block_400586.backedge

block_4006ea:                                     ; preds = %block_400586
  %40 = add i64 %271, -12
  store i64 4196081, i64* %PC, align 8
  %41 = inttoptr i64 %40 to i32*
  store i32 8, i32* %41, align 4
  %42 = load i64, i64* %RBP, align 8
  %43 = add i64 %42, -12
  %44 = load i64, i64* %PC, align 8
  %45 = add i64 %44, 3
  store i64 %45, i64* %PC, align 8
  %46 = inttoptr i64 %43 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = zext i32 %47 to i64
  store i64 %48, i64* %RDI, align 8, !tbaa !2428
  %49 = add i64 %44, -481
  br label %block_400586.backedge

block_400b68:                                     ; preds = %block_400586
  %50 = add i64 %271, -12
  store i64 4197231, i64* %PC, align 8
  %51 = inttoptr i64 %50 to i32*
  store i32 31, i32* %51, align 4
  %52 = load i64, i64* %RBP, align 8
  %53 = add i64 %52, -12
  %54 = load i64, i64* %PC, align 8
  %55 = add i64 %54, 3
  store i64 %55, i64* %PC, align 8
  %56 = inttoptr i64 %53 to i32*
  %57 = load i32, i32* %56, align 4
  %58 = zext i32 %57 to i64
  store i64 %58, i64* %RDI, align 8, !tbaa !2428
  %59 = add i64 %54, -1631
  br label %block_400586.backedge

block_4007e4:                                     ; preds = %block_400586
  %60 = add i64 %271, -12
  store i64 4196331, i64* %PC, align 8
  %61 = inttoptr i64 %60 to i32*
  store i32 13, i32* %61, align 4
  %62 = load i64, i64* %RBP, align 8
  %63 = add i64 %62, -12
  %64 = load i64, i64* %PC, align 8
  %65 = add i64 %64, 3
  store i64 %65, i64* %PC, align 8
  %66 = inttoptr i64 %63 to i32*
  %67 = load i32, i32* %66, align 4
  %68 = zext i32 %67 to i64
  store i64 %68, i64* %RDI, align 8, !tbaa !2428
  %69 = add i64 %64, -731
  br label %block_400586.backedge

block_4008de:                                     ; preds = %block_400586
  %70 = add i64 %271, -12
  store i64 4196581, i64* %PC, align 8
  %71 = inttoptr i64 %70 to i32*
  store i32 18, i32* %71, align 4
  %72 = load i64, i64* %RBP, align 8
  %73 = add i64 %72, -12
  %74 = load i64, i64* %PC, align 8
  %75 = add i64 %74, 3
  store i64 %75, i64* %PC, align 8
  %76 = inttoptr i64 %73 to i32*
  %77 = load i32, i32* %76, align 4
  %78 = zext i32 %77 to i64
  store i64 %78, i64* %RDI, align 8, !tbaa !2428
  %79 = add i64 %74, -981
  br label %block_400586.backedge

block_4009d8:                                     ; preds = %block_400586
  %80 = add i64 %271, -12
  store i64 4196831, i64* %PC, align 8
  %81 = inttoptr i64 %80 to i32*
  store i32 23, i32* %81, align 4
  %82 = load i64, i64* %RBP, align 8
  %83 = add i64 %82, -12
  %84 = load i64, i64* %PC, align 8
  %85 = add i64 %84, 3
  store i64 %85, i64* %PC, align 8
  %86 = inttoptr i64 %83 to i32*
  %87 = load i32, i32* %86, align 4
  %88 = zext i32 %87 to i64
  store i64 %88, i64* %RDI, align 8, !tbaa !2428
  %89 = add i64 %84, -1231
  br label %block_400586.backedge

block_400755:                                     ; preds = %block_40074e, %3
  %90 = phi i64 [ %.pre, %block_40074e ], [ %1, %3 ]
  %91 = load i64, i64* %RBP, align 8
  %92 = add i64 %91, -12
  %93 = add i64 %90, 3
  store i64 %93, i64* %PC, align 8
  %94 = inttoptr i64 %92 to i32*
  %95 = load i32, i32* %94, align 4
  %96 = zext i32 %95 to i64
  store i64 %96, i64* %RDI, align 8, !tbaa !2428
  %97 = add i64 %90, -581
  %98 = add i64 %90, 8
  %99 = load i64, i64* %RSP, align 8, !tbaa !2428
  %100 = add i64 %99, -8
  %101 = inttoptr i64 %100 to i64*
  store i64 %98, i64* %101, align 8
  store i64 %100, i64* %RSP, align 8, !tbaa !2428
  store i64 %97, i64* %PC, align 8, !tbaa !2428
  %102 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %97, %struct.Memory* %2)
  br label %block_400586

block_400654:                                     ; preds = %block_400586
  %103 = add i64 %271, -12
  store i64 4195931, i64* %PC, align 8
  %104 = inttoptr i64 %103 to i32*
  store i32 5, i32* %104, align 4
  %105 = load i64, i64* %RBP, align 8
  %106 = add i64 %105, -12
  %107 = load i64, i64* %PC, align 8
  %108 = add i64 %107, 3
  store i64 %108, i64* %PC, align 8
  %109 = inttoptr i64 %106 to i32*
  %110 = load i32, i32* %109, align 4
  %111 = zext i32 %110 to i64
  store i64 %111, i64* %RDI, align 8, !tbaa !2428
  %112 = add i64 %107, -331
  br label %block_400586.backedge

block_400ad2:                                     ; preds = %block_400586
  %113 = add i64 %271, -12
  store i64 4197081, i64* %PC, align 8
  %114 = inttoptr i64 %113 to i32*
  store i32 28, i32* %114, align 4
  %115 = load i64, i64* %RBP, align 8
  %116 = add i64 %115, -12
  %117 = load i64, i64* %PC, align 8
  %118 = add i64 %117, 3
  store i64 %118, i64* %PC, align 8
  %119 = inttoptr i64 %116 to i32*
  %120 = load i32, i32* %119, align 4
  %121 = zext i32 %120 to i64
  store i64 %121, i64* %RDI, align 8, !tbaa !2428
  %122 = add i64 %117, -1481
  br label %block_400586.backedge

block_40074e:                                     ; preds = %block_400586
  %123 = add i64 %271, -12
  store i64 4196181, i64* %PC, align 8
  %124 = inttoptr i64 %123 to i32*
  store i32 10, i32* %124, align 4
  %.pre = load i64, i64* %PC, align 8
  br label %block_400755

block_400848:                                     ; preds = %block_400586
  %125 = add i64 %271, -12
  store i64 4196431, i64* %PC, align 8
  %126 = inttoptr i64 %125 to i32*
  store i32 15, i32* %126, align 4
  %127 = load i64, i64* %PC, align 8
  %128 = tail call %struct.Memory* @sub_40084f(%struct.State* nonnull %0, i64 %127, %struct.Memory* %2)
  ret %struct.Memory* %128

block_400942:                                     ; preds = %block_400586
  %129 = add i64 %271, -12
  store i64 4196681, i64* %PC, align 8
  %130 = inttoptr i64 %129 to i32*
  store i32 20, i32* %130, align 4
  %131 = load i64, i64* %PC, align 8
  %132 = tail call %struct.Memory* @sub_400949(%struct.State* nonnull %0, i64 %131, %struct.Memory* %2)
  ret %struct.Memory* %132

block_4005be:                                     ; preds = %block_400586
  %133 = add i64 %271, -12
  store i64 4195781, i64* %PC, align 8
  %134 = inttoptr i64 %133 to i32*
  store i32 2, i32* %134, align 4
  %135 = load i64, i64* %PC, align 8
  %136 = tail call %struct.Memory* @sub_4005c5(%struct.State* nonnull %0, i64 %135, %struct.Memory* %2)
  ret %struct.Memory* %136

block_4005f0:                                     ; preds = %block_400586
  %137 = add i64 %271, -12
  store i64 4195831, i64* %PC, align 8
  %138 = inttoptr i64 %137 to i32*
  store i32 3, i32* %138, align 4
  %139 = load i64, i64* %RBP, align 8
  %140 = add i64 %139, -12
  %141 = load i64, i64* %PC, align 8
  %142 = add i64 %141, 3
  store i64 %142, i64* %PC, align 8
  %143 = inttoptr i64 %140 to i32*
  %144 = load i32, i32* %143, align 4
  %145 = zext i32 %144 to i64
  store i64 %145, i64* %RDI, align 8, !tbaa !2428
  %146 = add i64 %141, -231
  br label %block_400586.backedge

block_400a3c:                                     ; preds = %block_400586
  %147 = add i64 %271, -12
  store i64 4196931, i64* %PC, align 8
  %148 = inttoptr i64 %147 to i32*
  store i32 25, i32* %148, align 4
  %149 = load i64, i64* %PC, align 8
  %150 = tail call %struct.Memory* @sub_400a43(%struct.State* nonnull %0, i64 %149, %struct.Memory* %2)
  ret %struct.Memory* %150

block_4006b8:                                     ; preds = %block_400586
  %151 = add i64 %271, -12
  store i64 4196031, i64* %PC, align 8
  %152 = inttoptr i64 %151 to i32*
  store i32 7, i32* %152, align 4
  %153 = load i64, i64* %RBP, align 8
  %154 = add i64 %153, -12
  %155 = load i64, i64* %PC, align 8
  %156 = add i64 %155, 3
  store i64 %156, i64* %PC, align 8
  %157 = inttoptr i64 %154 to i32*
  %158 = load i32, i32* %157, align 4
  %159 = zext i32 %158 to i64
  store i64 %159, i64* %RDI, align 8, !tbaa !2428
  %160 = add i64 %155, -431
  br label %block_400586.backedge

block_400b36:                                     ; preds = %block_400586
  %161 = add i64 %271, -12
  store i64 4197181, i64* %PC, align 8
  %162 = inttoptr i64 %161 to i32*
  store i32 30, i32* %162, align 4
  %163 = load i64, i64* %RBP, align 8
  %164 = add i64 %163, -12
  %165 = load i64, i64* %PC, align 8
  %166 = add i64 %165, 3
  store i64 %166, i64* %PC, align 8
  %167 = inttoptr i64 %164 to i32*
  %168 = load i32, i32* %167, align 4
  %169 = zext i32 %168 to i64
  store i64 %169, i64* %RDI, align 8, !tbaa !2428
  %170 = add i64 %165, -1581
  br label %block_400586.backedge

block_400579:                                     ; preds = %block_400586
  %171 = add i64 %271, -12
  store i64 4195712, i64* %PC, align 8
  %172 = inttoptr i64 %171 to i32*
  store i32 0, i32* %172, align 4
  %173 = load i64, i64* %RSP, align 8
  %174 = load i64, i64* %PC, align 8
  %175 = add i64 %173, 48
  store i64 %175, i64* %RSP, align 8, !tbaa !2428
  %176 = icmp ugt i64 %173, -49
  %177 = zext i1 %176 to i8
  store i8 %177, i8* %4, align 1, !tbaa !2432
  %178 = trunc i64 %175 to i32
  %179 = and i32 %178, 255
  %180 = tail call i32 @llvm.ctpop.i32(i32 %179) #9
  %181 = trunc i32 %180 to i8
  %182 = and i8 %181, 1
  %183 = xor i8 %182, 1
  store i8 %183, i8* %5, align 1, !tbaa !2446
  %184 = xor i64 %173, 16
  %185 = xor i64 %184, %175
  %186 = lshr i64 %185, 4
  %187 = trunc i64 %186 to i8
  %188 = and i8 %187, 1
  store i8 %188, i8* %6, align 1, !tbaa !2447
  %189 = icmp eq i64 %175, 0
  %190 = zext i1 %189 to i8
  store i8 %190, i8* %7, align 1, !tbaa !2448
  %191 = lshr i64 %175, 63
  %192 = trunc i64 %191 to i8
  store i8 %192, i8* %8, align 1, !tbaa !2449
  %193 = lshr i64 %173, 63
  %194 = xor i64 %191, %193
  %195 = add nuw nsw i64 %194, %191
  %196 = icmp eq i64 %195, 2
  %197 = zext i1 %196 to i8
  store i8 %197, i8* %9, align 1, !tbaa !2450
  %198 = add i64 %174, 5
  store i64 %198, i64* %PC, align 8
  %199 = add i64 %173, 56
  %200 = inttoptr i64 %175 to i64*
  %201 = load i64, i64* %200, align 8
  store i64 %201, i64* %RBP, align 8, !tbaa !2428
  store i64 %199, i64* %RSP, align 8, !tbaa !2428
  %202 = add i64 %174, 6
  store i64 %202, i64* %PC, align 8
  %203 = inttoptr i64 %199 to i64*
  %204 = load i64, i64* %203, align 8
  store i64 %204, i64* %PC, align 8, !tbaa !2428
  %205 = add i64 %173, 64
  store i64 %205, i64* %RSP, align 8, !tbaa !2428
  ret %struct.Memory* %2

block_4007b2:                                     ; preds = %block_400586
  %206 = add i64 %271, -12
  store i64 4196281, i64* %PC, align 8
  %207 = inttoptr i64 %206 to i32*
  store i32 12, i32* %207, align 4
  %208 = load i64, i64* %RBP, align 8
  %209 = add i64 %208, -12
  %210 = load i64, i64* %PC, align 8
  %211 = add i64 %210, 3
  store i64 %211, i64* %PC, align 8
  %212 = inttoptr i64 %209 to i32*
  %213 = load i32, i32* %212, align 4
  %214 = zext i32 %213 to i64
  store i64 %214, i64* %RDI, align 8, !tbaa !2428
  %215 = add i64 %210, -681
  br label %block_400586.backedge

block_4008ac:                                     ; preds = %block_400586
  %216 = add i64 %271, -12
  store i64 4196531, i64* %PC, align 8
  %217 = inttoptr i64 %216 to i32*
  store i32 17, i32* %217, align 4
  %218 = load i64, i64* %RBP, align 8
  %219 = add i64 %218, -12
  %220 = load i64, i64* %PC, align 8
  %221 = add i64 %220, 3
  store i64 %221, i64* %PC, align 8
  %222 = inttoptr i64 %219 to i32*
  %223 = load i32, i32* %222, align 4
  %224 = zext i32 %223 to i64
  store i64 %224, i64* %RDI, align 8, !tbaa !2428
  %225 = add i64 %220, -931
  br label %block_400586.backedge

block_400586:                                     ; preds = %block_400586.backedge, %block_400755
  %.sink5 = phi i64 [ 501, %block_400755 ], [ %.sink5.be, %block_400586.backedge ]
  %226 = load i64, i64* %RBP, align 8
  %227 = add i64 %226, -8
  %228 = load i64, i64* %PC, align 8
  %229 = add i64 %228, 4
  store i64 %229, i64* %PC, align 8
  %230 = inttoptr i64 %227 to i64*
  %231 = load i64, i64* %230, align 8
  store i64 %231, i64* %RAX, align 8, !tbaa !2428
  %232 = add i64 %231, 4
  store i64 %232, i64* %RCX, align 8, !tbaa !2428
  %233 = icmp ugt i64 %231, -5
  %234 = zext i1 %233 to i8
  store i8 %234, i8* %4, align 1, !tbaa !2432
  %235 = trunc i64 %232 to i32
  %236 = and i32 %235, 255
  %237 = tail call i32 @llvm.ctpop.i32(i32 %236) #9
  %238 = trunc i32 %237 to i8
  %239 = and i8 %238, 1
  %240 = xor i8 %239, 1
  store i8 %240, i8* %5, align 1, !tbaa !2446
  %241 = xor i64 %232, %231
  %242 = lshr i64 %241, 4
  %243 = trunc i64 %242 to i8
  %244 = and i8 %243, 1
  store i8 %244, i8* %6, align 1, !tbaa !2447
  %245 = icmp eq i64 %232, 0
  %246 = zext i1 %245 to i8
  store i8 %246, i8* %7, align 1, !tbaa !2448
  %247 = lshr i64 %232, 63
  %248 = trunc i64 %247 to i8
  store i8 %248, i8* %8, align 1, !tbaa !2449
  %249 = lshr i64 %231, 63
  %250 = xor i64 %247, %249
  %251 = add nuw nsw i64 %250, %247
  %252 = icmp eq i64 %251, 2
  %253 = zext i1 %252 to i8
  store i8 %253, i8* %9, align 1, !tbaa !2450
  %254 = add i64 %228, 15
  store i64 %254, i64* %PC, align 8
  store i64 %232, i64* %230, align 8
  %255 = load i32*, i32** %10, align 8
  %256 = load i64, i64* %PC, align 8
  %257 = add i64 %256, 3
  store i64 %257, i64* %PC, align 8
  %258 = load i32, i32* %255, align 4
  %259 = sext i32 %258 to i64
  store i64 %259, i64* %RAX, align 8, !tbaa !2428
  %260 = shl nsw i64 %259, 3
  %261 = add i64 %260, add (i64 ptrtoint (%seg_602020__data_type* @seg_602020__data to i64), i64 16)
  %262 = add i64 %256, 11
  store i64 %262, i64* %PC, align 8
  %263 = inttoptr i64 %261 to i64*
  %264 = load i64, i64* %263, align 8
  store i64 %264, i64* %RAX, align 8, !tbaa !2428
  %265 = load i64, i64* %RBP, align 8
  %266 = add i64 %265, -40
  %267 = add i64 %256, 15
  store i64 %267, i64* %PC, align 8
  %268 = inttoptr i64 %266 to i64*
  store i64 %264, i64* %268, align 8
  %269 = load i64, i64* %PC, align 8
  %270 = sub i64 %269, %.sink5
  %271 = load i64, i64* %RBP, align 8
  %272 = add i64 %271, -40
  %273 = add i64 %270, 4
  store i64 %273, i64* %PC, align 8
  %274 = inttoptr i64 %272 to i64*
  %275 = load i64, i64* %274, align 8
  store i64 %275, i64* %RAX, align 8, !tbaa !2428
  store i64 %275, i64* %PC, align 8, !tbaa !2428
  switch i64 %275, label %356 [
    i64 4196774, label %block_4009a6
    i64 4196224, label %block_400780
    i64 4197124, label %block_400b04
    i64 4195974, label %block_400686
    i64 4196874, label %block_400a0a
    i64 4196624, label %block_400910
    i64 4196374, label %block_400816
    i64 4196124, label %block_40071c
    i64 4197024, label %block_400aa0
    i64 4197074, label %block_400ad2
    i64 4195924, label %block_400654
    i64 4196574, label %block_4008de
    i64 4196324, label %block_4007e4
    i64 4197224, label %block_400b68
    i64 4196074, label %block_4006ea
    i64 4196474, label %block_40087a
    i64 4196824, label %block_4009d8
    i64 4195724, label %block_40058c
    i64 4196724, label %block_400974
    i64 4195824, label %block_4005f0
    i64 4196174, label %block_40074e
    i64 4196424, label %block_400848
    i64 4196674, label %block_400942
    i64 4195774, label %block_4005be
    i64 4196924, label %block_400a3c
    i64 4196974, label %block_400a6e
    i64 4195705, label %block_400579
    i64 4196024, label %block_4006b8
    i64 4197174, label %block_400b36
    i64 4196274, label %block_4007b2
    i64 4196524, label %block_4008ac
    i64 4195874, label %block_400622
  ]

block_400622:                                     ; preds = %block_400586
  %276 = add i64 %271, -12
  store i64 4195881, i64* %PC, align 8
  %277 = inttoptr i64 %276 to i32*
  store i32 4, i32* %277, align 4
  %278 = load i64, i64* %RBP, align 8
  %279 = add i64 %278, -12
  %280 = load i64, i64* %PC, align 8
  %281 = add i64 %280, 3
  store i64 %281, i64* %PC, align 8
  %282 = inttoptr i64 %279 to i32*
  %283 = load i32, i32* %282, align 4
  %284 = zext i32 %283 to i64
  store i64 %284, i64* %RDI, align 8, !tbaa !2428
  %285 = add i64 %280, -281
  br label %block_400586.backedge

block_400aa0:                                     ; preds = %block_400586
  %286 = add i64 %271, -12
  store i64 4197031, i64* %PC, align 8
  %287 = inttoptr i64 %286 to i32*
  store i32 27, i32* %287, align 4
  %288 = load i64, i64* %RBP, align 8
  %289 = add i64 %288, -12
  %290 = load i64, i64* %PC, align 8
  %291 = add i64 %290, 3
  store i64 %291, i64* %PC, align 8
  %292 = inttoptr i64 %289 to i32*
  %293 = load i32, i32* %292, align 4
  %294 = zext i32 %293 to i64
  store i64 %294, i64* %RDI, align 8, !tbaa !2428
  %295 = add i64 %290, -1431
  br label %block_400586.backedge

block_40071c:                                     ; preds = %block_400586
  %296 = add i64 %271, -12
  store i64 4196131, i64* %PC, align 8
  %297 = inttoptr i64 %296 to i32*
  store i32 9, i32* %297, align 4
  %298 = load i64, i64* %RBP, align 8
  %299 = add i64 %298, -12
  %300 = load i64, i64* %PC, align 8
  %301 = add i64 %300, 3
  store i64 %301, i64* %PC, align 8
  %302 = inttoptr i64 %299 to i32*
  %303 = load i32, i32* %302, align 4
  %304 = zext i32 %303 to i64
  store i64 %304, i64* %RDI, align 8, !tbaa !2428
  %305 = add i64 %300, -531
  br label %block_400586.backedge

block_400816:                                     ; preds = %block_400586
  %306 = add i64 %271, -12
  store i64 4196381, i64* %PC, align 8
  %307 = inttoptr i64 %306 to i32*
  store i32 14, i32* %307, align 4
  %308 = load i64, i64* %RBP, align 8
  %309 = add i64 %308, -12
  %310 = load i64, i64* %PC, align 8
  %311 = add i64 %310, 3
  store i64 %311, i64* %PC, align 8
  %312 = inttoptr i64 %309 to i32*
  %313 = load i32, i32* %312, align 4
  %314 = zext i32 %313 to i64
  store i64 %314, i64* %RDI, align 8, !tbaa !2428
  %315 = add i64 %310, -781
  br label %block_400586.backedge

block_400910:                                     ; preds = %block_400586
  %316 = add i64 %271, -12
  store i64 4196631, i64* %PC, align 8
  %317 = inttoptr i64 %316 to i32*
  store i32 19, i32* %317, align 4
  %318 = load i64, i64* %RBP, align 8
  %319 = add i64 %318, -12
  %320 = load i64, i64* %PC, align 8
  %321 = add i64 %320, 3
  store i64 %321, i64* %PC, align 8
  %322 = inttoptr i64 %319 to i32*
  %323 = load i32, i32* %322, align 4
  %324 = zext i32 %323 to i64
  store i64 %324, i64* %RDI, align 8, !tbaa !2428
  %325 = add i64 %320, -1031
  br label %block_400586.backedge

block_40058c:                                     ; preds = %block_400586
  %326 = add i64 %271, -12
  store i64 4195731, i64* %PC, align 8
  %327 = inttoptr i64 %326 to i32*
  store i32 1, i32* %327, align 4
  %328 = load i64, i64* %PC, align 8
  %329 = tail call %struct.Memory* @sub_400593(%struct.State* nonnull %0, i64 %328, %struct.Memory* %2)
  ret %struct.Memory* %329

block_400a0a:                                     ; preds = %block_400586
  %330 = add i64 %271, -12
  store i64 4196881, i64* %PC, align 8
  %331 = inttoptr i64 %330 to i32*
  store i32 24, i32* %331, align 4
  %332 = load i64, i64* %PC, align 8
  %333 = tail call %struct.Memory* @sub_400a11(%struct.State* nonnull %0, i64 %332, %struct.Memory* %2)
  ret %struct.Memory* %333

block_400686:                                     ; preds = %block_400586
  %334 = add i64 %271, -12
  store i64 4195981, i64* %PC, align 8
  %335 = inttoptr i64 %334 to i32*
  store i32 6, i32* %335, align 4
  %336 = load i64, i64* %PC, align 8
  %337 = tail call %struct.Memory* @sub_40068d(%struct.State* nonnull %0, i64 %336, %struct.Memory* %2)
  ret %struct.Memory* %337

block_400b04:                                     ; preds = %block_400586
  %338 = add i64 %271, -12
  store i64 4197131, i64* %PC, align 8
  %339 = inttoptr i64 %338 to i32*
  store i32 29, i32* %339, align 4
  %340 = load i64, i64* %PC, align 8
  %341 = tail call %struct.Memory* @sub_400b0b(%struct.State* nonnull %0, i64 %340, %struct.Memory* %2)
  ret %struct.Memory* %341

block_400780:                                     ; preds = %block_400586
  %342 = add i64 %271, -12
  store i64 4196231, i64* %PC, align 8
  %343 = inttoptr i64 %342 to i32*
  store i32 11, i32* %343, align 4
  %344 = load i64, i64* %PC, align 8
  %345 = tail call %struct.Memory* @sub_400787(%struct.State* nonnull %0, i64 %344, %struct.Memory* %2)
  ret %struct.Memory* %345

block_4009a6:                                     ; preds = %block_400586
  %346 = add i64 %271, -12
  store i64 4196781, i64* %PC, align 8
  %347 = inttoptr i64 %346 to i32*
  store i32 22, i32* %347, align 4
  %348 = load i64, i64* %RBP, align 8
  %349 = add i64 %348, -12
  %350 = load i64, i64* %PC, align 8
  %351 = add i64 %350, 3
  store i64 %351, i64* %PC, align 8
  %352 = inttoptr i64 %349 to i32*
  %353 = load i32, i32* %352, align 4
  %354 = zext i32 %353 to i64
  store i64 %354, i64* %RDI, align 8, !tbaa !2428
  %355 = add i64 %350, -1181
  br label %block_400586.backedge

; <label>:356:                                    ; preds = %block_400586
  %357 = tail call %struct.Memory* @__remill_jump(%struct.State* nonnull %0, i64 %275, %struct.Memory* %2)
  ret %struct.Memory* %357
}

; Function Attrs: noinline nounwind
define %struct.Memory* @sub_400a75(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) local_unnamed_addr #6 {
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %PC, align 8
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %11 = bitcast i64* %RAX to i32**
  br label %block_400a75

block_4005f0:                                     ; preds = %block_400586
  %12 = add i64 %203, -12
  store i64 4195831, i64* %PC, align 8
  %13 = inttoptr i64 %12 to i32*
  store i32 3, i32* %13, align 4
  %14 = load i64, i64* %RBP, align 8
  %15 = add i64 %14, -12
  %16 = load i64, i64* %PC, align 8
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC, align 8
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i64
  store i64 %20, i64* %RDI, align 8, !tbaa !2428
  %21 = add i64 %16, -231
  br label %block_400586.backedge

block_400586.backedge:                            ; preds = %block_4005f0, %block_4006b8, %block_4007b2, %block_400974, %block_400b36
  %.sink122 = phi i64 [ %16, %block_4005f0 ], [ %55, %block_4006b8 ], [ %65, %block_4007b2 ], [ %99, %block_400974 ], [ %152, %block_400b36 ]
  %.sink117 = phi i64 [ %21, %block_4005f0 ], [ %60, %block_4006b8 ], [ %70, %block_4007b2 ], [ %104, %block_400974 ], [ %157, %block_400b36 ]
  %.sink5.be = phi i64 [ 151, %block_4005f0 ], [ 351, %block_4006b8 ], [ 601, %block_4007b2 ], [ 1051, %block_400974 ], [ 1501, %block_400b36 ]
  %22 = add i64 %.sink122, 8
  %23 = load i64, i64* %4, align 8, !tbaa !2428
  %24 = add i64 %23, -8
  %25 = inttoptr i64 %24 to i64*
  store i64 %22, i64* %25, align 8
  store i64 %24, i64* %4, align 8, !tbaa !2428
  store i64 %.sink117, i64* %PC, align 8, !tbaa !2428
  %26 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %.sink117, %struct.Memory* %2)
  br label %block_400586

block_4008de:                                     ; preds = %block_400586
  %27 = add i64 %203, -12
  store i64 4196581, i64* %PC, align 8
  %28 = inttoptr i64 %27 to i32*
  store i32 18, i32* %28, align 4
  %29 = load i64, i64* %PC, align 8
  %30 = tail call %struct.Memory* @sub_4008e5(%struct.State* nonnull %0, i64 %29, %struct.Memory* %2)
  ret %struct.Memory* %30

block_4009d8:                                     ; preds = %block_400586
  %31 = add i64 %203, -12
  store i64 4196831, i64* %PC, align 8
  %32 = inttoptr i64 %31 to i32*
  store i32 23, i32* %32, align 4
  %33 = load i64, i64* %PC, align 8
  %34 = tail call %struct.Memory* @sub_4009df(%struct.State* nonnull %0, i64 %33, %struct.Memory* %2)
  ret %struct.Memory* %34

block_400ad2:                                     ; preds = %block_400586
  %35 = add i64 %203, -12
  store i64 4197081, i64* %PC, align 8
  %36 = inttoptr i64 %35 to i32*
  store i32 28, i32* %36, align 4
  %37 = load i64, i64* %PC, align 8
  %38 = tail call %struct.Memory* @sub_400ad9(%struct.State* nonnull %0, i64 %37, %struct.Memory* %2)
  ret %struct.Memory* %38

block_4006ea:                                     ; preds = %block_400586
  %39 = add i64 %203, -12
  store i64 4196081, i64* %PC, align 8
  %40 = inttoptr i64 %39 to i32*
  store i32 8, i32* %40, align 4
  %41 = load i64, i64* %PC, align 8
  %42 = tail call %struct.Memory* @sub_4006f1(%struct.State* nonnull %0, i64 %41, %struct.Memory* %2)
  ret %struct.Memory* %42

block_4005be:                                     ; preds = %block_400586
  %43 = add i64 %203, -12
  store i64 4195781, i64* %PC, align 8
  %44 = inttoptr i64 %43 to i32*
  store i32 2, i32* %44, align 4
  %45 = load i64, i64* %PC, align 8
  %46 = tail call %struct.Memory* @sub_4005c5(%struct.State* nonnull %0, i64 %45, %struct.Memory* %2)
  ret %struct.Memory* %46

block_4007e4:                                     ; preds = %block_400586
  %47 = add i64 %203, -12
  store i64 4196331, i64* %PC, align 8
  %48 = inttoptr i64 %47 to i32*
  store i32 13, i32* %48, align 4
  %49 = load i64, i64* %PC, align 8
  %50 = tail call %struct.Memory* @sub_4007eb(%struct.State* nonnull %0, i64 %49, %struct.Memory* %2)
  ret %struct.Memory* %50

block_4006b8:                                     ; preds = %block_400586
  %51 = add i64 %203, -12
  store i64 4196031, i64* %PC, align 8
  %52 = inttoptr i64 %51 to i32*
  store i32 7, i32* %52, align 4
  %53 = load i64, i64* %RBP, align 8
  %54 = add i64 %53, -12
  %55 = load i64, i64* %PC, align 8
  %56 = add i64 %55, 3
  store i64 %56, i64* %PC, align 8
  %57 = inttoptr i64 %54 to i32*
  %58 = load i32, i32* %57, align 4
  %59 = zext i32 %58 to i64
  store i64 %59, i64* %RDI, align 8, !tbaa !2428
  %60 = add i64 %55, -431
  br label %block_400586.backedge

block_4007b2:                                     ; preds = %block_400586
  %61 = add i64 %203, -12
  store i64 4196281, i64* %PC, align 8
  %62 = inttoptr i64 %61 to i32*
  store i32 12, i32* %62, align 4
  %63 = load i64, i64* %RBP, align 8
  %64 = add i64 %63, -12
  %65 = load i64, i64* %PC, align 8
  %66 = add i64 %65, 3
  store i64 %66, i64* %PC, align 8
  %67 = inttoptr i64 %64 to i32*
  %68 = load i32, i32* %67, align 4
  %69 = zext i32 %68 to i64
  store i64 %69, i64* %RDI, align 8, !tbaa !2428
  %70 = add i64 %65, -681
  br label %block_400586.backedge

block_4008ac:                                     ; preds = %block_400586
  %71 = add i64 %203, -12
  store i64 4196531, i64* %PC, align 8
  %72 = inttoptr i64 %71 to i32*
  store i32 17, i32* %72, align 4
  %73 = load i64, i64* %PC, align 8
  %74 = tail call %struct.Memory* @sub_4008b3(%struct.State* nonnull %0, i64 %73, %struct.Memory* %2)
  ret %struct.Memory* %74

block_40058c:                                     ; preds = %block_400586
  %75 = add i64 %203, -12
  store i64 4195731, i64* %PC, align 8
  %76 = inttoptr i64 %75 to i32*
  store i32 1, i32* %76, align 4
  %77 = load i64, i64* %PC, align 8
  %78 = tail call %struct.Memory* @sub_400593(%struct.State* nonnull %0, i64 %77, %struct.Memory* %2)
  ret %struct.Memory* %78

block_400686:                                     ; preds = %block_400586
  %79 = add i64 %203, -12
  store i64 4195981, i64* %PC, align 8
  %80 = inttoptr i64 %79 to i32*
  store i32 6, i32* %80, align 4
  %81 = load i64, i64* %PC, align 8
  %82 = tail call %struct.Memory* @sub_40068d(%struct.State* nonnull %0, i64 %81, %struct.Memory* %2)
  ret %struct.Memory* %82

block_400780:                                     ; preds = %block_400586
  %83 = add i64 %203, -12
  store i64 4196231, i64* %PC, align 8
  %84 = inttoptr i64 %83 to i32*
  store i32 11, i32* %84, align 4
  %85 = load i64, i64* %PC, align 8
  %86 = tail call %struct.Memory* @sub_400787(%struct.State* nonnull %0, i64 %85, %struct.Memory* %2)
  ret %struct.Memory* %86

block_4009a6:                                     ; preds = %block_400586
  %87 = add i64 %203, -12
  store i64 4196781, i64* %PC, align 8
  %88 = inttoptr i64 %87 to i32*
  store i32 22, i32* %88, align 4
  %89 = load i64, i64* %PC, align 8
  %90 = tail call %struct.Memory* @sub_4009ad(%struct.State* nonnull %0, i64 %89, %struct.Memory* %2)
  ret %struct.Memory* %90

block_40087a:                                     ; preds = %block_400586
  %91 = add i64 %203, -12
  store i64 4196481, i64* %PC, align 8
  %92 = inttoptr i64 %91 to i32*
  store i32 16, i32* %92, align 4
  %93 = load i64, i64* %PC, align 8
  %94 = tail call %struct.Memory* @sub_400881(%struct.State* nonnull %0, i64 %93, %struct.Memory* %2)
  ret %struct.Memory* %94

block_400974:                                     ; preds = %block_400586
  %95 = add i64 %203, -12
  store i64 4196731, i64* %PC, align 8
  %96 = inttoptr i64 %95 to i32*
  store i32 21, i32* %96, align 4
  %97 = load i64, i64* %RBP, align 8
  %98 = add i64 %97, -12
  %99 = load i64, i64* %PC, align 8
  %100 = add i64 %99, 3
  store i64 %100, i64* %PC, align 8
  %101 = inttoptr i64 %98 to i32*
  %102 = load i32, i32* %101, align 4
  %103 = zext i32 %102 to i64
  store i64 %103, i64* %RDI, align 8, !tbaa !2428
  %104 = add i64 %99, -1131
  br label %block_400586.backedge

block_400a6e:                                     ; preds = %block_400586
  %105 = add i64 %203, -12
  store i64 4196981, i64* %PC, align 8
  %106 = inttoptr i64 %105 to i32*
  store i32 26, i32* %106, align 4
  %.pre = load i64, i64* %PC, align 8
  br label %block_400a75

block_400aa0:                                     ; preds = %block_400586
  %107 = add i64 %203, -12
  store i64 4197031, i64* %PC, align 8
  %108 = inttoptr i64 %107 to i32*
  store i32 27, i32* %108, align 4
  %109 = load i64, i64* %PC, align 8
  %110 = tail call %struct.Memory* @sub_400aa7(%struct.State* nonnull %0, i64 %109, %struct.Memory* %2)
  ret %struct.Memory* %110

block_400a75:                                     ; preds = %block_400a6e, %3
  %111 = phi i64 [ %.pre, %block_400a6e ], [ %1, %3 ]
  %112 = load i64, i64* %RBP, align 8
  %113 = add i64 %112, -12
  %114 = add i64 %111, 3
  store i64 %114, i64* %PC, align 8
  %115 = inttoptr i64 %113 to i32*
  %116 = load i32, i32* %115, align 4
  %117 = zext i32 %116 to i64
  store i64 %117, i64* %RDI, align 8, !tbaa !2428
  %118 = add i64 %111, -1381
  %119 = add i64 %111, 8
  %120 = load i64, i64* %4, align 8, !tbaa !2428
  %121 = add i64 %120, -8
  %122 = inttoptr i64 %121 to i64*
  store i64 %119, i64* %122, align 8
  store i64 %121, i64* %4, align 8, !tbaa !2428
  store i64 %118, i64* %PC, align 8, !tbaa !2428
  %123 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %118, %struct.Memory* %2)
  br label %block_400586

block_400654:                                     ; preds = %block_400586
  %124 = add i64 %203, -12
  store i64 4195931, i64* %PC, align 8
  %125 = inttoptr i64 %124 to i32*
  store i32 5, i32* %125, align 4
  %126 = load i64, i64* %PC, align 8
  %127 = tail call %struct.Memory* @sub_40065b(%struct.State* nonnull %0, i64 %126, %struct.Memory* %2)
  ret %struct.Memory* %127

block_40074e:                                     ; preds = %block_400586
  %128 = add i64 %203, -12
  store i64 4196181, i64* %PC, align 8
  %129 = inttoptr i64 %128 to i32*
  store i32 10, i32* %129, align 4
  %130 = load i64, i64* %PC, align 8
  %131 = tail call %struct.Memory* @sub_400755(%struct.State* nonnull %0, i64 %130, %struct.Memory* %2)
  ret %struct.Memory* %131

block_400848:                                     ; preds = %block_400586
  %132 = add i64 %203, -12
  store i64 4196431, i64* %PC, align 8
  %133 = inttoptr i64 %132 to i32*
  store i32 15, i32* %133, align 4
  %134 = load i64, i64* %PC, align 8
  %135 = tail call %struct.Memory* @sub_40084f(%struct.State* nonnull %0, i64 %134, %struct.Memory* %2)
  ret %struct.Memory* %135

block_400942:                                     ; preds = %block_400586
  %136 = add i64 %203, -12
  store i64 4196681, i64* %PC, align 8
  %137 = inttoptr i64 %136 to i32*
  store i32 20, i32* %137, align 4
  %138 = load i64, i64* %PC, align 8
  %139 = tail call %struct.Memory* @sub_400949(%struct.State* nonnull %0, i64 %138, %struct.Memory* %2)
  ret %struct.Memory* %139

block_400b68:                                     ; preds = %block_400586
  %140 = add i64 %203, -12
  store i64 4197231, i64* %PC, align 8
  %141 = inttoptr i64 %140 to i32*
  store i32 31, i32* %141, align 4
  %142 = load i64, i64* %PC, align 8
  %143 = tail call %struct.Memory* @sub_400b6f(%struct.State* nonnull %0, i64 %142, %struct.Memory* %2)
  ret %struct.Memory* %143

block_400a3c:                                     ; preds = %block_400586
  %144 = add i64 %203, -12
  store i64 4196931, i64* %PC, align 8
  %145 = inttoptr i64 %144 to i32*
  store i32 25, i32* %145, align 4
  %146 = load i64, i64* %PC, align 8
  %147 = tail call %struct.Memory* @sub_400a43(%struct.State* nonnull %0, i64 %146, %struct.Memory* %2)
  ret %struct.Memory* %147

block_400b36:                                     ; preds = %block_400586
  %148 = add i64 %203, -12
  store i64 4197181, i64* %PC, align 8
  %149 = inttoptr i64 %148 to i32*
  store i32 30, i32* %149, align 4
  %150 = load i64, i64* %RBP, align 8
  %151 = add i64 %150, -12
  %152 = load i64, i64* %PC, align 8
  %153 = add i64 %152, 3
  store i64 %153, i64* %PC, align 8
  %154 = inttoptr i64 %151 to i32*
  %155 = load i32, i32* %154, align 4
  %156 = zext i32 %155 to i64
  store i64 %156, i64* %RDI, align 8, !tbaa !2428
  %157 = add i64 %152, -1581
  br label %block_400586.backedge

block_400586:                                     ; preds = %block_400586.backedge, %block_400a75
  %.sink5 = phi i64 [ 1301, %block_400a75 ], [ %.sink5.be, %block_400586.backedge ]
  %158 = load i64, i64* %RBP, align 8
  %159 = add i64 %158, -8
  %160 = load i64, i64* %PC, align 8
  %161 = add i64 %160, 4
  store i64 %161, i64* %PC, align 8
  %162 = inttoptr i64 %159 to i64*
  %163 = load i64, i64* %162, align 8
  store i64 %163, i64* %RAX, align 8, !tbaa !2428
  %164 = add i64 %163, 4
  store i64 %164, i64* %RCX, align 8, !tbaa !2428
  %165 = icmp ugt i64 %163, -5
  %166 = zext i1 %165 to i8
  store i8 %166, i8* %5, align 1, !tbaa !2432
  %167 = trunc i64 %164 to i32
  %168 = and i32 %167, 255
  %169 = tail call i32 @llvm.ctpop.i32(i32 %168) #9
  %170 = trunc i32 %169 to i8
  %171 = and i8 %170, 1
  %172 = xor i8 %171, 1
  store i8 %172, i8* %6, align 1, !tbaa !2446
  %173 = xor i64 %164, %163
  %174 = lshr i64 %173, 4
  %175 = trunc i64 %174 to i8
  %176 = and i8 %175, 1
  store i8 %176, i8* %7, align 1, !tbaa !2447
  %177 = icmp eq i64 %164, 0
  %178 = zext i1 %177 to i8
  store i8 %178, i8* %8, align 1, !tbaa !2448
  %179 = lshr i64 %164, 63
  %180 = trunc i64 %179 to i8
  store i8 %180, i8* %9, align 1, !tbaa !2449
  %181 = lshr i64 %163, 63
  %182 = xor i64 %179, %181
  %183 = add nuw nsw i64 %182, %179
  %184 = icmp eq i64 %183, 2
  %185 = zext i1 %184 to i8
  store i8 %185, i8* %10, align 1, !tbaa !2450
  %186 = add i64 %160, 15
  store i64 %186, i64* %PC, align 8
  store i64 %164, i64* %162, align 8
  %187 = load i32*, i32** %11, align 8
  %188 = load i64, i64* %PC, align 8
  %189 = add i64 %188, 3
  store i64 %189, i64* %PC, align 8
  %190 = load i32, i32* %187, align 4
  %191 = sext i32 %190 to i64
  store i64 %191, i64* %RAX, align 8, !tbaa !2428
  %192 = shl nsw i64 %191, 3
  %193 = add i64 %192, add (i64 ptrtoint (%seg_602020__data_type* @seg_602020__data to i64), i64 16)
  %194 = add i64 %188, 11
  store i64 %194, i64* %PC, align 8
  %195 = inttoptr i64 %193 to i64*
  %196 = load i64, i64* %195, align 8
  store i64 %196, i64* %RAX, align 8, !tbaa !2428
  %197 = load i64, i64* %RBP, align 8
  %198 = add i64 %197, -40
  %199 = add i64 %188, 15
  store i64 %199, i64* %PC, align 8
  %200 = inttoptr i64 %198 to i64*
  store i64 %196, i64* %200, align 8
  %201 = load i64, i64* %PC, align 8
  %202 = sub i64 %201, %.sink5
  %203 = load i64, i64* %RBP, align 8
  %204 = add i64 %203, -40
  %205 = add i64 %202, 4
  store i64 %205, i64* %PC, align 8
  %206 = inttoptr i64 %204 to i64*
  %207 = load i64, i64* %206, align 8
  store i64 %207, i64* %RAX, align 8, !tbaa !2428
  store i64 %207, i64* %PC, align 8, !tbaa !2428
  switch i64 %207, label %236 [
    i64 4197124, label %block_400b04
    i64 4196874, label %block_400a0a
    i64 4196624, label %block_400910
    i64 4196374, label %block_400816
    i64 4196124, label %block_40071c
    i64 4195874, label %block_400622
    i64 4197174, label %block_400b36
    i64 4196924, label %block_400a3c
    i64 4196324, label %block_4007e4
    i64 4195774, label %block_4005be
    i64 4196074, label %block_4006ea
    i64 4197224, label %block_400b68
    i64 4195824, label %block_4005f0
    i64 4195705, label %block_400579
    i64 4196974, label %block_400a6e
    i64 4196024, label %block_4006b8
    i64 4196574, label %block_4008de
    i64 4196274, label %block_4007b2
    i64 4195724, label %block_40058c
    i64 4196824, label %block_4009d8
    i64 4196524, label %block_4008ac
    i64 4197074, label %block_400ad2
    i64 4195924, label %block_400654
    i64 4195974, label %block_400686
    i64 4196224, label %block_400780
    i64 4196774, label %block_4009a6
    i64 4196474, label %block_40087a
    i64 4196724, label %block_400974
    i64 4197024, label %block_400aa0
    i64 4196174, label %block_40074e
    i64 4196424, label %block_400848
    i64 4196674, label %block_400942
  ]

block_400622:                                     ; preds = %block_400586
  %208 = add i64 %203, -12
  store i64 4195881, i64* %PC, align 8
  %209 = inttoptr i64 %208 to i32*
  store i32 4, i32* %209, align 4
  %210 = load i64, i64* %PC, align 8
  %211 = tail call %struct.Memory* @sub_400629(%struct.State* nonnull %0, i64 %210, %struct.Memory* %2)
  ret %struct.Memory* %211

block_40071c:                                     ; preds = %block_400586
  %212 = add i64 %203, -12
  store i64 4196131, i64* %PC, align 8
  %213 = inttoptr i64 %212 to i32*
  store i32 9, i32* %213, align 4
  %214 = load i64, i64* %PC, align 8
  %215 = tail call %struct.Memory* @sub_400723(%struct.State* nonnull %0, i64 %214, %struct.Memory* %2)
  ret %struct.Memory* %215

block_400816:                                     ; preds = %block_400586
  %216 = add i64 %203, -12
  store i64 4196381, i64* %PC, align 8
  %217 = inttoptr i64 %216 to i32*
  store i32 14, i32* %217, align 4
  %218 = load i64, i64* %PC, align 8
  %219 = tail call %struct.Memory* @sub_40081d(%struct.State* nonnull %0, i64 %218, %struct.Memory* %2)
  ret %struct.Memory* %219

block_400910:                                     ; preds = %block_400586
  %220 = add i64 %203, -12
  store i64 4196631, i64* %PC, align 8
  %221 = inttoptr i64 %220 to i32*
  store i32 19, i32* %221, align 4
  %222 = load i64, i64* %PC, align 8
  %223 = tail call %struct.Memory* @sub_400917(%struct.State* nonnull %0, i64 %222, %struct.Memory* %2)
  ret %struct.Memory* %223

block_400a0a:                                     ; preds = %block_400586
  %224 = add i64 %203, -12
  store i64 4196881, i64* %PC, align 8
  %225 = inttoptr i64 %224 to i32*
  store i32 24, i32* %225, align 4
  %226 = load i64, i64* %PC, align 8
  %227 = tail call %struct.Memory* @sub_400a11(%struct.State* nonnull %0, i64 %226, %struct.Memory* %2)
  ret %struct.Memory* %227

block_400579:                                     ; preds = %block_400586
  %228 = add i64 %203, -12
  store i64 4195712, i64* %PC, align 8
  %229 = inttoptr i64 %228 to i32*
  store i32 0, i32* %229, align 4
  %230 = load i64, i64* %PC, align 8
  %231 = tail call %struct.Memory* @sub_400580(%struct.State* nonnull %0, i64 %230, %struct.Memory* %2)
  ret %struct.Memory* %231

block_400b04:                                     ; preds = %block_400586
  %232 = add i64 %203, -12
  store i64 4197131, i64* %PC, align 8
  %233 = inttoptr i64 %232 to i32*
  store i32 29, i32* %233, align 4
  %234 = load i64, i64* %PC, align 8
  %235 = tail call %struct.Memory* @sub_400b0b(%struct.State* nonnull %0, i64 %234, %struct.Memory* %2)
  ret %struct.Memory* %235

; <label>:236:                                    ; preds = %block_400586
  %237 = tail call %struct.Memory* @__remill_jump(%struct.State* nonnull %0, i64 %207, %struct.Memory* %2)
  ret %struct.Memory* %237
}

; Function Attrs: noinline nounwind
define %struct.Memory* @sub_40068d(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) local_unnamed_addr #6 {
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %PC, align 8
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RSP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %10 = bitcast i64* %RAX to i32**
  br label %block_40068d

block_40087a:                                     ; preds = %block_400586
  %11 = add i64 %282, -12
  store i64 4196481, i64* %PC, align 8
  %12 = inttoptr i64 %11 to i32*
  store i32 16, i32* %12, align 4
  %13 = load i64, i64* %PC, align 8
  %14 = tail call %struct.Memory* @sub_400881(%struct.State* nonnull %0, i64 %13, %struct.Memory* %2)
  ret %struct.Memory* %14

block_400974:                                     ; preds = %block_400586
  %15 = add i64 %282, -12
  store i64 4196731, i64* %PC, align 8
  %16 = inttoptr i64 %15 to i32*
  store i32 21, i32* %16, align 4
  %17 = load i64, i64* %RBP, align 8
  %18 = add i64 %17, -12
  %19 = load i64, i64* %PC, align 8
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC, align 8
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RDI, align 8, !tbaa !2428
  %24 = add i64 %19, -1131
  br label %block_400586.backedge

block_400586.backedge:                            ; preds = %block_400974, %block_4005f0, %block_400a6e, %block_4006ea, %block_400b68, %block_4007e4, %block_4008de, %block_4009d8, %block_400654, %block_400ad2, %block_40074e, %block_400848, %block_4006b8, %block_400b36, %block_4007b2, %block_4008ac, %block_4009a6, %block_400622, %block_400aa0, %block_40071c, %block_400816, %block_400910, %block_40058c, %block_400a0a
  %.sink138 = phi i64 [ %19, %block_400974 ], [ %34, %block_4005f0 ], [ %44, %block_400a6e ], [ %54, %block_4006ea ], [ %64, %block_400b68 ], [ %74, %block_4007e4 ], [ %84, %block_4008de ], [ %94, %block_4009d8 ], [ %104, %block_400654 ], [ %114, %block_400ad2 ], [ %159, %block_40074e ], [ %169, %block_400848 ], [ %187, %block_4006b8 ], [ %197, %block_400b36 ], [ %207, %block_4007b2 ], [ %217, %block_4008ac ], [ %227, %block_4009a6 ], [ %291, %block_400622 ], [ %301, %block_400aa0 ], [ %311, %block_40071c ], [ %321, %block_400816 ], [ %331, %block_400910 ], [ %354, %block_40058c ], [ %364, %block_400a0a ]
  %.sink133 = phi i64 [ %24, %block_400974 ], [ %39, %block_4005f0 ], [ %49, %block_400a6e ], [ %59, %block_4006ea ], [ %69, %block_400b68 ], [ %79, %block_4007e4 ], [ %89, %block_4008de ], [ %99, %block_4009d8 ], [ %109, %block_400654 ], [ %119, %block_400ad2 ], [ %164, %block_40074e ], [ %174, %block_400848 ], [ %192, %block_4006b8 ], [ %202, %block_400b36 ], [ %212, %block_4007b2 ], [ %222, %block_4008ac ], [ %232, %block_4009a6 ], [ %296, %block_400622 ], [ %306, %block_400aa0 ], [ %316, %block_40071c ], [ %326, %block_400816 ], [ %336, %block_400910 ], [ %359, %block_40058c ], [ %369, %block_400a0a ]
  %.sink5.be = phi i64 [ 1051, %block_400974 ], [ 151, %block_4005f0 ], [ 1301, %block_400a6e ], [ 401, %block_4006ea ], [ 1551, %block_400b68 ], [ 651, %block_4007e4 ], [ 901, %block_4008de ], [ 1151, %block_4009d8 ], [ 251, %block_400654 ], [ 1401, %block_400ad2 ], [ 501, %block_40074e ], [ 751, %block_400848 ], [ 351, %block_4006b8 ], [ 1501, %block_400b36 ], [ 601, %block_4007b2 ], [ 851, %block_4008ac ], [ 1101, %block_4009a6 ], [ 201, %block_400622 ], [ 1351, %block_400aa0 ], [ 451, %block_40071c ], [ 701, %block_400816 ], [ 951, %block_400910 ], [ 51, %block_40058c ], [ 1201, %block_400a0a ]
  %25 = add i64 %.sink138, 8
  %26 = load i64, i64* %RSP, align 8, !tbaa !2428
  %27 = add i64 %26, -8
  %28 = inttoptr i64 %27 to i64*
  store i64 %25, i64* %28, align 8
  store i64 %27, i64* %RSP, align 8, !tbaa !2428
  store i64 %.sink133, i64* %PC, align 8, !tbaa !2428
  %29 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %.sink133, %struct.Memory* %2)
  br label %block_400586

block_4005f0:                                     ; preds = %block_400586
  %30 = add i64 %282, -12
  store i64 4195831, i64* %PC, align 8
  %31 = inttoptr i64 %30 to i32*
  store i32 3, i32* %31, align 4
  %32 = load i64, i64* %RBP, align 8
  %33 = add i64 %32, -12
  %34 = load i64, i64* %PC, align 8
  %35 = add i64 %34, 3
  store i64 %35, i64* %PC, align 8
  %36 = inttoptr i64 %33 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i64
  store i64 %38, i64* %RDI, align 8, !tbaa !2428
  %39 = add i64 %34, -231
  br label %block_400586.backedge

block_400a6e:                                     ; preds = %block_400586
  %40 = add i64 %282, -12
  store i64 4196981, i64* %PC, align 8
  %41 = inttoptr i64 %40 to i32*
  store i32 26, i32* %41, align 4
  %42 = load i64, i64* %RBP, align 8
  %43 = add i64 %42, -12
  %44 = load i64, i64* %PC, align 8
  %45 = add i64 %44, 3
  store i64 %45, i64* %PC, align 8
  %46 = inttoptr i64 %43 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = zext i32 %47 to i64
  store i64 %48, i64* %RDI, align 8, !tbaa !2428
  %49 = add i64 %44, -1381
  br label %block_400586.backedge

block_4006ea:                                     ; preds = %block_400586
  %50 = add i64 %282, -12
  store i64 4196081, i64* %PC, align 8
  %51 = inttoptr i64 %50 to i32*
  store i32 8, i32* %51, align 4
  %52 = load i64, i64* %RBP, align 8
  %53 = add i64 %52, -12
  %54 = load i64, i64* %PC, align 8
  %55 = add i64 %54, 3
  store i64 %55, i64* %PC, align 8
  %56 = inttoptr i64 %53 to i32*
  %57 = load i32, i32* %56, align 4
  %58 = zext i32 %57 to i64
  store i64 %58, i64* %RDI, align 8, !tbaa !2428
  %59 = add i64 %54, -481
  br label %block_400586.backedge

block_400b68:                                     ; preds = %block_400586
  %60 = add i64 %282, -12
  store i64 4197231, i64* %PC, align 8
  %61 = inttoptr i64 %60 to i32*
  store i32 31, i32* %61, align 4
  %62 = load i64, i64* %RBP, align 8
  %63 = add i64 %62, -12
  %64 = load i64, i64* %PC, align 8
  %65 = add i64 %64, 3
  store i64 %65, i64* %PC, align 8
  %66 = inttoptr i64 %63 to i32*
  %67 = load i32, i32* %66, align 4
  %68 = zext i32 %67 to i64
  store i64 %68, i64* %RDI, align 8, !tbaa !2428
  %69 = add i64 %64, -1631
  br label %block_400586.backedge

block_4007e4:                                     ; preds = %block_400586
  %70 = add i64 %282, -12
  store i64 4196331, i64* %PC, align 8
  %71 = inttoptr i64 %70 to i32*
  store i32 13, i32* %71, align 4
  %72 = load i64, i64* %RBP, align 8
  %73 = add i64 %72, -12
  %74 = load i64, i64* %PC, align 8
  %75 = add i64 %74, 3
  store i64 %75, i64* %PC, align 8
  %76 = inttoptr i64 %73 to i32*
  %77 = load i32, i32* %76, align 4
  %78 = zext i32 %77 to i64
  store i64 %78, i64* %RDI, align 8, !tbaa !2428
  %79 = add i64 %74, -731
  br label %block_400586.backedge

block_4008de:                                     ; preds = %block_400586
  %80 = add i64 %282, -12
  store i64 4196581, i64* %PC, align 8
  %81 = inttoptr i64 %80 to i32*
  store i32 18, i32* %81, align 4
  %82 = load i64, i64* %RBP, align 8
  %83 = add i64 %82, -12
  %84 = load i64, i64* %PC, align 8
  %85 = add i64 %84, 3
  store i64 %85, i64* %PC, align 8
  %86 = inttoptr i64 %83 to i32*
  %87 = load i32, i32* %86, align 4
  %88 = zext i32 %87 to i64
  store i64 %88, i64* %RDI, align 8, !tbaa !2428
  %89 = add i64 %84, -981
  br label %block_400586.backedge

block_4009d8:                                     ; preds = %block_400586
  %90 = add i64 %282, -12
  store i64 4196831, i64* %PC, align 8
  %91 = inttoptr i64 %90 to i32*
  store i32 23, i32* %91, align 4
  %92 = load i64, i64* %RBP, align 8
  %93 = add i64 %92, -12
  %94 = load i64, i64* %PC, align 8
  %95 = add i64 %94, 3
  store i64 %95, i64* %PC, align 8
  %96 = inttoptr i64 %93 to i32*
  %97 = load i32, i32* %96, align 4
  %98 = zext i32 %97 to i64
  store i64 %98, i64* %RDI, align 8, !tbaa !2428
  %99 = add i64 %94, -1231
  br label %block_400586.backedge

block_400654:                                     ; preds = %block_400586
  %100 = add i64 %282, -12
  store i64 4195931, i64* %PC, align 8
  %101 = inttoptr i64 %100 to i32*
  store i32 5, i32* %101, align 4
  %102 = load i64, i64* %RBP, align 8
  %103 = add i64 %102, -12
  %104 = load i64, i64* %PC, align 8
  %105 = add i64 %104, 3
  store i64 %105, i64* %PC, align 8
  %106 = inttoptr i64 %103 to i32*
  %107 = load i32, i32* %106, align 4
  %108 = zext i32 %107 to i64
  store i64 %108, i64* %RDI, align 8, !tbaa !2428
  %109 = add i64 %104, -331
  br label %block_400586.backedge

block_400ad2:                                     ; preds = %block_400586
  %110 = add i64 %282, -12
  store i64 4197081, i64* %PC, align 8
  %111 = inttoptr i64 %110 to i32*
  store i32 28, i32* %111, align 4
  %112 = load i64, i64* %RBP, align 8
  %113 = add i64 %112, -12
  %114 = load i64, i64* %PC, align 8
  %115 = add i64 %114, 3
  store i64 %115, i64* %PC, align 8
  %116 = inttoptr i64 %113 to i32*
  %117 = load i32, i32* %116, align 4
  %118 = zext i32 %117 to i64
  store i64 %118, i64* %RDI, align 8, !tbaa !2428
  %119 = add i64 %114, -1481
  br label %block_400586.backedge

block_400579:                                     ; preds = %block_400586
  %120 = add i64 %282, -12
  store i64 4195712, i64* %PC, align 8
  %121 = inttoptr i64 %120 to i32*
  store i32 0, i32* %121, align 4
  %122 = load i64, i64* %RSP, align 8
  %123 = load i64, i64* %PC, align 8
  %124 = add i64 %122, 48
  store i64 %124, i64* %RSP, align 8, !tbaa !2428
  %125 = icmp ugt i64 %122, -49
  %126 = zext i1 %125 to i8
  store i8 %126, i8* %4, align 1, !tbaa !2432
  %127 = trunc i64 %124 to i32
  %128 = and i32 %127, 255
  %129 = tail call i32 @llvm.ctpop.i32(i32 %128) #9
  %130 = trunc i32 %129 to i8
  %131 = and i8 %130, 1
  %132 = xor i8 %131, 1
  store i8 %132, i8* %5, align 1, !tbaa !2446
  %133 = xor i64 %122, 16
  %134 = xor i64 %133, %124
  %135 = lshr i64 %134, 4
  %136 = trunc i64 %135 to i8
  %137 = and i8 %136, 1
  store i8 %137, i8* %6, align 1, !tbaa !2447
  %138 = icmp eq i64 %124, 0
  %139 = zext i1 %138 to i8
  store i8 %139, i8* %7, align 1, !tbaa !2448
  %140 = lshr i64 %124, 63
  %141 = trunc i64 %140 to i8
  store i8 %141, i8* %8, align 1, !tbaa !2449
  %142 = lshr i64 %122, 63
  %143 = xor i64 %140, %142
  %144 = add nuw nsw i64 %143, %140
  %145 = icmp eq i64 %144, 2
  %146 = zext i1 %145 to i8
  store i8 %146, i8* %9, align 1, !tbaa !2450
  %147 = add i64 %123, 5
  store i64 %147, i64* %PC, align 8
  %148 = add i64 %122, 56
  %149 = inttoptr i64 %124 to i64*
  %150 = load i64, i64* %149, align 8
  store i64 %150, i64* %RBP, align 8, !tbaa !2428
  store i64 %148, i64* %RSP, align 8, !tbaa !2428
  %151 = add i64 %123, 6
  store i64 %151, i64* %PC, align 8
  %152 = inttoptr i64 %148 to i64*
  %153 = load i64, i64* %152, align 8
  store i64 %153, i64* %PC, align 8, !tbaa !2428
  %154 = add i64 %122, 64
  store i64 %154, i64* %RSP, align 8, !tbaa !2428
  ret %struct.Memory* %2

block_40074e:                                     ; preds = %block_400586
  %155 = add i64 %282, -12
  store i64 4196181, i64* %PC, align 8
  %156 = inttoptr i64 %155 to i32*
  store i32 10, i32* %156, align 4
  %157 = load i64, i64* %RBP, align 8
  %158 = add i64 %157, -12
  %159 = load i64, i64* %PC, align 8
  %160 = add i64 %159, 3
  store i64 %160, i64* %PC, align 8
  %161 = inttoptr i64 %158 to i32*
  %162 = load i32, i32* %161, align 4
  %163 = zext i32 %162 to i64
  store i64 %163, i64* %RDI, align 8, !tbaa !2428
  %164 = add i64 %159, -581
  br label %block_400586.backedge

block_400848:                                     ; preds = %block_400586
  %165 = add i64 %282, -12
  store i64 4196431, i64* %PC, align 8
  %166 = inttoptr i64 %165 to i32*
  store i32 15, i32* %166, align 4
  %167 = load i64, i64* %RBP, align 8
  %168 = add i64 %167, -12
  %169 = load i64, i64* %PC, align 8
  %170 = add i64 %169, 3
  store i64 %170, i64* %PC, align 8
  %171 = inttoptr i64 %168 to i32*
  %172 = load i32, i32* %171, align 4
  %173 = zext i32 %172 to i64
  store i64 %173, i64* %RDI, align 8, !tbaa !2428
  %174 = add i64 %169, -831
  br label %block_400586.backedge

block_400942:                                     ; preds = %block_400586
  %175 = add i64 %282, -12
  store i64 4196681, i64* %PC, align 8
  %176 = inttoptr i64 %175 to i32*
  store i32 20, i32* %176, align 4
  %177 = load i64, i64* %PC, align 8
  %178 = tail call %struct.Memory* @sub_400949(%struct.State* nonnull %0, i64 %177, %struct.Memory* %2)
  ret %struct.Memory* %178

block_4005be:                                     ; preds = %block_400586
  %179 = add i64 %282, -12
  store i64 4195781, i64* %PC, align 8
  %180 = inttoptr i64 %179 to i32*
  store i32 2, i32* %180, align 4
  %181 = load i64, i64* %PC, align 8
  %182 = tail call %struct.Memory* @sub_4005c5(%struct.State* nonnull %0, i64 %181, %struct.Memory* %2)
  ret %struct.Memory* %182

block_4006b8:                                     ; preds = %block_400586
  %183 = add i64 %282, -12
  store i64 4196031, i64* %PC, align 8
  %184 = inttoptr i64 %183 to i32*
  store i32 7, i32* %184, align 4
  %185 = load i64, i64* %RBP, align 8
  %186 = add i64 %185, -12
  %187 = load i64, i64* %PC, align 8
  %188 = add i64 %187, 3
  store i64 %188, i64* %PC, align 8
  %189 = inttoptr i64 %186 to i32*
  %190 = load i32, i32* %189, align 4
  %191 = zext i32 %190 to i64
  store i64 %191, i64* %RDI, align 8, !tbaa !2428
  %192 = add i64 %187, -431
  br label %block_400586.backedge

block_400b36:                                     ; preds = %block_400586
  %193 = add i64 %282, -12
  store i64 4197181, i64* %PC, align 8
  %194 = inttoptr i64 %193 to i32*
  store i32 30, i32* %194, align 4
  %195 = load i64, i64* %RBP, align 8
  %196 = add i64 %195, -12
  %197 = load i64, i64* %PC, align 8
  %198 = add i64 %197, 3
  store i64 %198, i64* %PC, align 8
  %199 = inttoptr i64 %196 to i32*
  %200 = load i32, i32* %199, align 4
  %201 = zext i32 %200 to i64
  store i64 %201, i64* %RDI, align 8, !tbaa !2428
  %202 = add i64 %197, -1581
  br label %block_400586.backedge

block_4007b2:                                     ; preds = %block_400586
  %203 = add i64 %282, -12
  store i64 4196281, i64* %PC, align 8
  %204 = inttoptr i64 %203 to i32*
  store i32 12, i32* %204, align 4
  %205 = load i64, i64* %RBP, align 8
  %206 = add i64 %205, -12
  %207 = load i64, i64* %PC, align 8
  %208 = add i64 %207, 3
  store i64 %208, i64* %PC, align 8
  %209 = inttoptr i64 %206 to i32*
  %210 = load i32, i32* %209, align 4
  %211 = zext i32 %210 to i64
  store i64 %211, i64* %RDI, align 8, !tbaa !2428
  %212 = add i64 %207, -681
  br label %block_400586.backedge

block_4008ac:                                     ; preds = %block_400586
  %213 = add i64 %282, -12
  store i64 4196531, i64* %PC, align 8
  %214 = inttoptr i64 %213 to i32*
  store i32 17, i32* %214, align 4
  %215 = load i64, i64* %RBP, align 8
  %216 = add i64 %215, -12
  %217 = load i64, i64* %PC, align 8
  %218 = add i64 %217, 3
  store i64 %218, i64* %PC, align 8
  %219 = inttoptr i64 %216 to i32*
  %220 = load i32, i32* %219, align 4
  %221 = zext i32 %220 to i64
  store i64 %221, i64* %RDI, align 8, !tbaa !2428
  %222 = add i64 %217, -931
  br label %block_400586.backedge

block_4009a6:                                     ; preds = %block_400586
  %223 = add i64 %282, -12
  store i64 4196781, i64* %PC, align 8
  %224 = inttoptr i64 %223 to i32*
  store i32 22, i32* %224, align 4
  %225 = load i64, i64* %RBP, align 8
  %226 = add i64 %225, -12
  %227 = load i64, i64* %PC, align 8
  %228 = add i64 %227, 3
  store i64 %228, i64* %PC, align 8
  %229 = inttoptr i64 %226 to i32*
  %230 = load i32, i32* %229, align 4
  %231 = zext i32 %230 to i64
  store i64 %231, i64* %RDI, align 8, !tbaa !2428
  %232 = add i64 %227, -1181
  br label %block_400586.backedge

block_400a3c:                                     ; preds = %block_400586
  %233 = add i64 %282, -12
  store i64 4196931, i64* %PC, align 8
  %234 = inttoptr i64 %233 to i32*
  store i32 25, i32* %234, align 4
  %235 = load i64, i64* %PC, align 8
  %236 = tail call %struct.Memory* @sub_400a43(%struct.State* nonnull %0, i64 %235, %struct.Memory* %2)
  ret %struct.Memory* %236

block_400586:                                     ; preds = %block_400586.backedge, %block_40068d
  %.sink5 = phi i64 [ 301, %block_40068d ], [ %.sink5.be, %block_400586.backedge ]
  %237 = load i64, i64* %RBP, align 8
  %238 = add i64 %237, -8
  %239 = load i64, i64* %PC, align 8
  %240 = add i64 %239, 4
  store i64 %240, i64* %PC, align 8
  %241 = inttoptr i64 %238 to i64*
  %242 = load i64, i64* %241, align 8
  store i64 %242, i64* %RAX, align 8, !tbaa !2428
  %243 = add i64 %242, 4
  store i64 %243, i64* %RCX, align 8, !tbaa !2428
  %244 = icmp ugt i64 %242, -5
  %245 = zext i1 %244 to i8
  store i8 %245, i8* %4, align 1, !tbaa !2432
  %246 = trunc i64 %243 to i32
  %247 = and i32 %246, 255
  %248 = tail call i32 @llvm.ctpop.i32(i32 %247) #9
  %249 = trunc i32 %248 to i8
  %250 = and i8 %249, 1
  %251 = xor i8 %250, 1
  store i8 %251, i8* %5, align 1, !tbaa !2446
  %252 = xor i64 %243, %242
  %253 = lshr i64 %252, 4
  %254 = trunc i64 %253 to i8
  %255 = and i8 %254, 1
  store i8 %255, i8* %6, align 1, !tbaa !2447
  %256 = icmp eq i64 %243, 0
  %257 = zext i1 %256 to i8
  store i8 %257, i8* %7, align 1, !tbaa !2448
  %258 = lshr i64 %243, 63
  %259 = trunc i64 %258 to i8
  store i8 %259, i8* %8, align 1, !tbaa !2449
  %260 = lshr i64 %242, 63
  %261 = xor i64 %258, %260
  %262 = add nuw nsw i64 %261, %258
  %263 = icmp eq i64 %262, 2
  %264 = zext i1 %263 to i8
  store i8 %264, i8* %9, align 1, !tbaa !2450
  %265 = add i64 %239, 15
  store i64 %265, i64* %PC, align 8
  store i64 %243, i64* %241, align 8
  %266 = load i32*, i32** %10, align 8
  %267 = load i64, i64* %PC, align 8
  %268 = add i64 %267, 3
  store i64 %268, i64* %PC, align 8
  %269 = load i32, i32* %266, align 4
  %270 = sext i32 %269 to i64
  store i64 %270, i64* %RAX, align 8, !tbaa !2428
  %271 = shl nsw i64 %270, 3
  %272 = add i64 %271, add (i64 ptrtoint (%seg_602020__data_type* @seg_602020__data to i64), i64 16)
  %273 = add i64 %267, 11
  store i64 %273, i64* %PC, align 8
  %274 = inttoptr i64 %272 to i64*
  %275 = load i64, i64* %274, align 8
  store i64 %275, i64* %RAX, align 8, !tbaa !2428
  %276 = load i64, i64* %RBP, align 8
  %277 = add i64 %276, -40
  %278 = add i64 %267, 15
  store i64 %278, i64* %PC, align 8
  %279 = inttoptr i64 %277 to i64*
  store i64 %275, i64* %279, align 8
  %280 = load i64, i64* %PC, align 8
  %281 = sub i64 %280, %.sink5
  %282 = load i64, i64* %RBP, align 8
  %283 = add i64 %282, -40
  %284 = add i64 %281, 4
  store i64 %284, i64* %PC, align 8
  %285 = inttoptr i64 %283 to i64*
  %286 = load i64, i64* %285, align 8
  store i64 %286, i64* %RAX, align 8, !tbaa !2428
  store i64 %286, i64* %PC, align 8, !tbaa !2428
  switch i64 %286, label %380 [
    i64 4196224, label %block_400780
    i64 4197124, label %block_400b04
    i64 4195974, label %block_400686
    i64 4196874, label %block_400a0a
    i64 4196624, label %block_400910
    i64 4196374, label %block_400816
    i64 4196124, label %block_40071c
    i64 4197024, label %block_400aa0
    i64 4195874, label %block_400622
    i64 4196574, label %block_4008de
    i64 4196324, label %block_4007e4
    i64 4197224, label %block_400b68
    i64 4196074, label %block_4006ea
    i64 4195924, label %block_400654
    i64 4197074, label %block_400ad2
    i64 4196474, label %block_40087a
    i64 4196824, label %block_4009d8
    i64 4195724, label %block_40058c
    i64 4196724, label %block_400974
    i64 4195824, label %block_4005f0
    i64 4196974, label %block_400a6e
    i64 4195705, label %block_400579
    i64 4195774, label %block_4005be
    i64 4196924, label %block_400a3c
    i64 4196174, label %block_40074e
    i64 4196424, label %block_400848
    i64 4196674, label %block_400942
    i64 4196024, label %block_4006b8
    i64 4197174, label %block_400b36
    i64 4196274, label %block_4007b2
    i64 4196524, label %block_4008ac
    i64 4196774, label %block_4009a6
  ]

block_400622:                                     ; preds = %block_400586
  %287 = add i64 %282, -12
  store i64 4195881, i64* %PC, align 8
  %288 = inttoptr i64 %287 to i32*
  store i32 4, i32* %288, align 4
  %289 = load i64, i64* %RBP, align 8
  %290 = add i64 %289, -12
  %291 = load i64, i64* %PC, align 8
  %292 = add i64 %291, 3
  store i64 %292, i64* %PC, align 8
  %293 = inttoptr i64 %290 to i32*
  %294 = load i32, i32* %293, align 4
  %295 = zext i32 %294 to i64
  store i64 %295, i64* %RDI, align 8, !tbaa !2428
  %296 = add i64 %291, -281
  br label %block_400586.backedge

block_400aa0:                                     ; preds = %block_400586
  %297 = add i64 %282, -12
  store i64 4197031, i64* %PC, align 8
  %298 = inttoptr i64 %297 to i32*
  store i32 27, i32* %298, align 4
  %299 = load i64, i64* %RBP, align 8
  %300 = add i64 %299, -12
  %301 = load i64, i64* %PC, align 8
  %302 = add i64 %301, 3
  store i64 %302, i64* %PC, align 8
  %303 = inttoptr i64 %300 to i32*
  %304 = load i32, i32* %303, align 4
  %305 = zext i32 %304 to i64
  store i64 %305, i64* %RDI, align 8, !tbaa !2428
  %306 = add i64 %301, -1431
  br label %block_400586.backedge

block_40071c:                                     ; preds = %block_400586
  %307 = add i64 %282, -12
  store i64 4196131, i64* %PC, align 8
  %308 = inttoptr i64 %307 to i32*
  store i32 9, i32* %308, align 4
  %309 = load i64, i64* %RBP, align 8
  %310 = add i64 %309, -12
  %311 = load i64, i64* %PC, align 8
  %312 = add i64 %311, 3
  store i64 %312, i64* %PC, align 8
  %313 = inttoptr i64 %310 to i32*
  %314 = load i32, i32* %313, align 4
  %315 = zext i32 %314 to i64
  store i64 %315, i64* %RDI, align 8, !tbaa !2428
  %316 = add i64 %311, -531
  br label %block_400586.backedge

block_400816:                                     ; preds = %block_400586
  %317 = add i64 %282, -12
  store i64 4196381, i64* %PC, align 8
  %318 = inttoptr i64 %317 to i32*
  store i32 14, i32* %318, align 4
  %319 = load i64, i64* %RBP, align 8
  %320 = add i64 %319, -12
  %321 = load i64, i64* %PC, align 8
  %322 = add i64 %321, 3
  store i64 %322, i64* %PC, align 8
  %323 = inttoptr i64 %320 to i32*
  %324 = load i32, i32* %323, align 4
  %325 = zext i32 %324 to i64
  store i64 %325, i64* %RDI, align 8, !tbaa !2428
  %326 = add i64 %321, -781
  br label %block_400586.backedge

block_400910:                                     ; preds = %block_400586
  %327 = add i64 %282, -12
  store i64 4196631, i64* %PC, align 8
  %328 = inttoptr i64 %327 to i32*
  store i32 19, i32* %328, align 4
  %329 = load i64, i64* %RBP, align 8
  %330 = add i64 %329, -12
  %331 = load i64, i64* %PC, align 8
  %332 = add i64 %331, 3
  store i64 %332, i64* %PC, align 8
  %333 = inttoptr i64 %330 to i32*
  %334 = load i32, i32* %333, align 4
  %335 = zext i32 %334 to i64
  store i64 %335, i64* %RDI, align 8, !tbaa !2428
  %336 = add i64 %331, -1031
  br label %block_400586.backedge

block_40068d:                                     ; preds = %block_400686, %3
  %337 = phi i64 [ %.pre, %block_400686 ], [ %1, %3 ]
  %338 = load i64, i64* %RBP, align 8
  %339 = add i64 %338, -12
  %340 = add i64 %337, 3
  store i64 %340, i64* %PC, align 8
  %341 = inttoptr i64 %339 to i32*
  %342 = load i32, i32* %341, align 4
  %343 = zext i32 %342 to i64
  store i64 %343, i64* %RDI, align 8, !tbaa !2428
  %344 = add i64 %337, -381
  %345 = add i64 %337, 8
  %346 = load i64, i64* %RSP, align 8, !tbaa !2428
  %347 = add i64 %346, -8
  %348 = inttoptr i64 %347 to i64*
  store i64 %345, i64* %348, align 8
  store i64 %347, i64* %RSP, align 8, !tbaa !2428
  store i64 %344, i64* %PC, align 8, !tbaa !2428
  %349 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %344, %struct.Memory* %2)
  br label %block_400586

block_40058c:                                     ; preds = %block_400586
  %350 = add i64 %282, -12
  store i64 4195731, i64* %PC, align 8
  %351 = inttoptr i64 %350 to i32*
  store i32 1, i32* %351, align 4
  %352 = load i64, i64* %RBP, align 8
  %353 = add i64 %352, -12
  %354 = load i64, i64* %PC, align 8
  %355 = add i64 %354, 3
  store i64 %355, i64* %PC, align 8
  %356 = inttoptr i64 %353 to i32*
  %357 = load i32, i32* %356, align 4
  %358 = zext i32 %357 to i64
  store i64 %358, i64* %RDI, align 8, !tbaa !2428
  %359 = add i64 %354, -131
  br label %block_400586.backedge

block_400a0a:                                     ; preds = %block_400586
  %360 = add i64 %282, -12
  store i64 4196881, i64* %PC, align 8
  %361 = inttoptr i64 %360 to i32*
  store i32 24, i32* %361, align 4
  %362 = load i64, i64* %RBP, align 8
  %363 = add i64 %362, -12
  %364 = load i64, i64* %PC, align 8
  %365 = add i64 %364, 3
  store i64 %365, i64* %PC, align 8
  %366 = inttoptr i64 %363 to i32*
  %367 = load i32, i32* %366, align 4
  %368 = zext i32 %367 to i64
  store i64 %368, i64* %RDI, align 8, !tbaa !2428
  %369 = add i64 %364, -1281
  br label %block_400586.backedge

block_400686:                                     ; preds = %block_400586
  %370 = add i64 %282, -12
  store i64 4195981, i64* %PC, align 8
  %371 = inttoptr i64 %370 to i32*
  store i32 6, i32* %371, align 4
  %.pre = load i64, i64* %PC, align 8
  br label %block_40068d

block_400b04:                                     ; preds = %block_400586
  %372 = add i64 %282, -12
  store i64 4197131, i64* %PC, align 8
  %373 = inttoptr i64 %372 to i32*
  store i32 29, i32* %373, align 4
  %374 = load i64, i64* %PC, align 8
  %375 = tail call %struct.Memory* @sub_400b0b(%struct.State* nonnull %0, i64 %374, %struct.Memory* %2)
  ret %struct.Memory* %375

block_400780:                                     ; preds = %block_400586
  %376 = add i64 %282, -12
  store i64 4196231, i64* %PC, align 8
  %377 = inttoptr i64 %376 to i32*
  store i32 11, i32* %377, align 4
  %378 = load i64, i64* %PC, align 8
  %379 = tail call %struct.Memory* @sub_400787(%struct.State* nonnull %0, i64 %378, %struct.Memory* %2)
  ret %struct.Memory* %379

; <label>:380:                                    ; preds = %block_400586
  %381 = tail call %struct.Memory* @__remill_jump(%struct.State* nonnull %0, i64 %286, %struct.Memory* %2)
  ret %struct.Memory* %381
}

; Function Attrs: noinline nounwind
define %struct.Memory* @sub_400b0b(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) local_unnamed_addr #6 {
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %PC, align 8
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RSP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %10 = bitcast i64* %RAX to i32**
  br label %block_400b0b

block_40087a:                                     ; preds = %block_400586
  %11 = add i64 %282, -12
  store i64 4196481, i64* %PC, align 8
  %12 = inttoptr i64 %11 to i32*
  store i32 16, i32* %12, align 4
  %13 = load i64, i64* %PC, align 8
  %14 = tail call %struct.Memory* @sub_400881(%struct.State* nonnull %0, i64 %13, %struct.Memory* %2)
  ret %struct.Memory* %14

block_400974:                                     ; preds = %block_400586
  %15 = add i64 %282, -12
  store i64 4196731, i64* %PC, align 8
  %16 = inttoptr i64 %15 to i32*
  store i32 21, i32* %16, align 4
  %17 = load i64, i64* %RBP, align 8
  %18 = add i64 %17, -12
  %19 = load i64, i64* %PC, align 8
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC, align 8
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RDI, align 8, !tbaa !2428
  %24 = add i64 %19, -1131
  br label %block_400586.backedge

block_400586.backedge:                            ; preds = %block_400974, %block_4005f0, %block_400a6e, %block_4006ea, %block_400b68, %block_4007e4, %block_4008de, %block_4009d8, %block_400654, %block_400ad2, %block_40074e, %block_400848, %block_4006b8, %block_400b36, %block_4007b2, %block_4008ac, %block_4009a6, %block_400622, %block_400aa0, %block_40071c, %block_400816, %block_400910, %block_40058c, %block_400a0a, %block_400686
  %.sink130 = phi i64 [ %19, %block_400974 ], [ %34, %block_4005f0 ], [ %44, %block_400a6e ], [ %54, %block_4006ea ], [ %64, %block_400b68 ], [ %74, %block_4007e4 ], [ %84, %block_4008de ], [ %94, %block_4009d8 ], [ %104, %block_400654 ], [ %114, %block_400ad2 ], [ %159, %block_40074e ], [ %169, %block_400848 ], [ %187, %block_4006b8 ], [ %197, %block_400b36 ], [ %207, %block_4007b2 ], [ %217, %block_4008ac ], [ %227, %block_4009a6 ], [ %291, %block_400622 ], [ %301, %block_400aa0 ], [ %311, %block_40071c ], [ %321, %block_400816 ], [ %331, %block_400910 ], [ %341, %block_40058c ], [ %364, %block_400a0a ], [ %374, %block_400686 ]
  %.sink125 = phi i64 [ %24, %block_400974 ], [ %39, %block_4005f0 ], [ %49, %block_400a6e ], [ %59, %block_4006ea ], [ %69, %block_400b68 ], [ %79, %block_4007e4 ], [ %89, %block_4008de ], [ %99, %block_4009d8 ], [ %109, %block_400654 ], [ %119, %block_400ad2 ], [ %164, %block_40074e ], [ %174, %block_400848 ], [ %192, %block_4006b8 ], [ %202, %block_400b36 ], [ %212, %block_4007b2 ], [ %222, %block_4008ac ], [ %232, %block_4009a6 ], [ %296, %block_400622 ], [ %306, %block_400aa0 ], [ %316, %block_40071c ], [ %326, %block_400816 ], [ %336, %block_400910 ], [ %346, %block_40058c ], [ %369, %block_400a0a ], [ %379, %block_400686 ]
  %.sink5.be = phi i64 [ 1051, %block_400974 ], [ 151, %block_4005f0 ], [ 1301, %block_400a6e ], [ 401, %block_4006ea ], [ 1551, %block_400b68 ], [ 651, %block_4007e4 ], [ 901, %block_4008de ], [ 1151, %block_4009d8 ], [ 251, %block_400654 ], [ 1401, %block_400ad2 ], [ 501, %block_40074e ], [ 751, %block_400848 ], [ 351, %block_4006b8 ], [ 1501, %block_400b36 ], [ 601, %block_4007b2 ], [ 851, %block_4008ac ], [ 1101, %block_4009a6 ], [ 201, %block_400622 ], [ 1351, %block_400aa0 ], [ 451, %block_40071c ], [ 701, %block_400816 ], [ 951, %block_400910 ], [ 51, %block_40058c ], [ 1201, %block_400a0a ], [ 301, %block_400686 ]
  %25 = add i64 %.sink130, 8
  %26 = load i64, i64* %RSP, align 8, !tbaa !2428
  %27 = add i64 %26, -8
  %28 = inttoptr i64 %27 to i64*
  store i64 %25, i64* %28, align 8
  store i64 %27, i64* %RSP, align 8, !tbaa !2428
  store i64 %.sink125, i64* %PC, align 8, !tbaa !2428
  %29 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %.sink125, %struct.Memory* %2)
  br label %block_400586

block_4005f0:                                     ; preds = %block_400586
  %30 = add i64 %282, -12
  store i64 4195831, i64* %PC, align 8
  %31 = inttoptr i64 %30 to i32*
  store i32 3, i32* %31, align 4
  %32 = load i64, i64* %RBP, align 8
  %33 = add i64 %32, -12
  %34 = load i64, i64* %PC, align 8
  %35 = add i64 %34, 3
  store i64 %35, i64* %PC, align 8
  %36 = inttoptr i64 %33 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i64
  store i64 %38, i64* %RDI, align 8, !tbaa !2428
  %39 = add i64 %34, -231
  br label %block_400586.backedge

block_400a6e:                                     ; preds = %block_400586
  %40 = add i64 %282, -12
  store i64 4196981, i64* %PC, align 8
  %41 = inttoptr i64 %40 to i32*
  store i32 26, i32* %41, align 4
  %42 = load i64, i64* %RBP, align 8
  %43 = add i64 %42, -12
  %44 = load i64, i64* %PC, align 8
  %45 = add i64 %44, 3
  store i64 %45, i64* %PC, align 8
  %46 = inttoptr i64 %43 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = zext i32 %47 to i64
  store i64 %48, i64* %RDI, align 8, !tbaa !2428
  %49 = add i64 %44, -1381
  br label %block_400586.backedge

block_4006ea:                                     ; preds = %block_400586
  %50 = add i64 %282, -12
  store i64 4196081, i64* %PC, align 8
  %51 = inttoptr i64 %50 to i32*
  store i32 8, i32* %51, align 4
  %52 = load i64, i64* %RBP, align 8
  %53 = add i64 %52, -12
  %54 = load i64, i64* %PC, align 8
  %55 = add i64 %54, 3
  store i64 %55, i64* %PC, align 8
  %56 = inttoptr i64 %53 to i32*
  %57 = load i32, i32* %56, align 4
  %58 = zext i32 %57 to i64
  store i64 %58, i64* %RDI, align 8, !tbaa !2428
  %59 = add i64 %54, -481
  br label %block_400586.backedge

block_400b68:                                     ; preds = %block_400586
  %60 = add i64 %282, -12
  store i64 4197231, i64* %PC, align 8
  %61 = inttoptr i64 %60 to i32*
  store i32 31, i32* %61, align 4
  %62 = load i64, i64* %RBP, align 8
  %63 = add i64 %62, -12
  %64 = load i64, i64* %PC, align 8
  %65 = add i64 %64, 3
  store i64 %65, i64* %PC, align 8
  %66 = inttoptr i64 %63 to i32*
  %67 = load i32, i32* %66, align 4
  %68 = zext i32 %67 to i64
  store i64 %68, i64* %RDI, align 8, !tbaa !2428
  %69 = add i64 %64, -1631
  br label %block_400586.backedge

block_4007e4:                                     ; preds = %block_400586
  %70 = add i64 %282, -12
  store i64 4196331, i64* %PC, align 8
  %71 = inttoptr i64 %70 to i32*
  store i32 13, i32* %71, align 4
  %72 = load i64, i64* %RBP, align 8
  %73 = add i64 %72, -12
  %74 = load i64, i64* %PC, align 8
  %75 = add i64 %74, 3
  store i64 %75, i64* %PC, align 8
  %76 = inttoptr i64 %73 to i32*
  %77 = load i32, i32* %76, align 4
  %78 = zext i32 %77 to i64
  store i64 %78, i64* %RDI, align 8, !tbaa !2428
  %79 = add i64 %74, -731
  br label %block_400586.backedge

block_4008de:                                     ; preds = %block_400586
  %80 = add i64 %282, -12
  store i64 4196581, i64* %PC, align 8
  %81 = inttoptr i64 %80 to i32*
  store i32 18, i32* %81, align 4
  %82 = load i64, i64* %RBP, align 8
  %83 = add i64 %82, -12
  %84 = load i64, i64* %PC, align 8
  %85 = add i64 %84, 3
  store i64 %85, i64* %PC, align 8
  %86 = inttoptr i64 %83 to i32*
  %87 = load i32, i32* %86, align 4
  %88 = zext i32 %87 to i64
  store i64 %88, i64* %RDI, align 8, !tbaa !2428
  %89 = add i64 %84, -981
  br label %block_400586.backedge

block_4009d8:                                     ; preds = %block_400586
  %90 = add i64 %282, -12
  store i64 4196831, i64* %PC, align 8
  %91 = inttoptr i64 %90 to i32*
  store i32 23, i32* %91, align 4
  %92 = load i64, i64* %RBP, align 8
  %93 = add i64 %92, -12
  %94 = load i64, i64* %PC, align 8
  %95 = add i64 %94, 3
  store i64 %95, i64* %PC, align 8
  %96 = inttoptr i64 %93 to i32*
  %97 = load i32, i32* %96, align 4
  %98 = zext i32 %97 to i64
  store i64 %98, i64* %RDI, align 8, !tbaa !2428
  %99 = add i64 %94, -1231
  br label %block_400586.backedge

block_400654:                                     ; preds = %block_400586
  %100 = add i64 %282, -12
  store i64 4195931, i64* %PC, align 8
  %101 = inttoptr i64 %100 to i32*
  store i32 5, i32* %101, align 4
  %102 = load i64, i64* %RBP, align 8
  %103 = add i64 %102, -12
  %104 = load i64, i64* %PC, align 8
  %105 = add i64 %104, 3
  store i64 %105, i64* %PC, align 8
  %106 = inttoptr i64 %103 to i32*
  %107 = load i32, i32* %106, align 4
  %108 = zext i32 %107 to i64
  store i64 %108, i64* %RDI, align 8, !tbaa !2428
  %109 = add i64 %104, -331
  br label %block_400586.backedge

block_400ad2:                                     ; preds = %block_400586
  %110 = add i64 %282, -12
  store i64 4197081, i64* %PC, align 8
  %111 = inttoptr i64 %110 to i32*
  store i32 28, i32* %111, align 4
  %112 = load i64, i64* %RBP, align 8
  %113 = add i64 %112, -12
  %114 = load i64, i64* %PC, align 8
  %115 = add i64 %114, 3
  store i64 %115, i64* %PC, align 8
  %116 = inttoptr i64 %113 to i32*
  %117 = load i32, i32* %116, align 4
  %118 = zext i32 %117 to i64
  store i64 %118, i64* %RDI, align 8, !tbaa !2428
  %119 = add i64 %114, -1481
  br label %block_400586.backedge

block_400579:                                     ; preds = %block_400586
  %120 = add i64 %282, -12
  store i64 4195712, i64* %PC, align 8
  %121 = inttoptr i64 %120 to i32*
  store i32 0, i32* %121, align 4
  %122 = load i64, i64* %RSP, align 8
  %123 = load i64, i64* %PC, align 8
  %124 = add i64 %122, 48
  store i64 %124, i64* %RSP, align 8, !tbaa !2428
  %125 = icmp ugt i64 %122, -49
  %126 = zext i1 %125 to i8
  store i8 %126, i8* %4, align 1, !tbaa !2432
  %127 = trunc i64 %124 to i32
  %128 = and i32 %127, 255
  %129 = tail call i32 @llvm.ctpop.i32(i32 %128) #9
  %130 = trunc i32 %129 to i8
  %131 = and i8 %130, 1
  %132 = xor i8 %131, 1
  store i8 %132, i8* %5, align 1, !tbaa !2446
  %133 = xor i64 %122, 16
  %134 = xor i64 %133, %124
  %135 = lshr i64 %134, 4
  %136 = trunc i64 %135 to i8
  %137 = and i8 %136, 1
  store i8 %137, i8* %6, align 1, !tbaa !2447
  %138 = icmp eq i64 %124, 0
  %139 = zext i1 %138 to i8
  store i8 %139, i8* %7, align 1, !tbaa !2448
  %140 = lshr i64 %124, 63
  %141 = trunc i64 %140 to i8
  store i8 %141, i8* %8, align 1, !tbaa !2449
  %142 = lshr i64 %122, 63
  %143 = xor i64 %140, %142
  %144 = add nuw nsw i64 %143, %140
  %145 = icmp eq i64 %144, 2
  %146 = zext i1 %145 to i8
  store i8 %146, i8* %9, align 1, !tbaa !2450
  %147 = add i64 %123, 5
  store i64 %147, i64* %PC, align 8
  %148 = add i64 %122, 56
  %149 = inttoptr i64 %124 to i64*
  %150 = load i64, i64* %149, align 8
  store i64 %150, i64* %RBP, align 8, !tbaa !2428
  store i64 %148, i64* %RSP, align 8, !tbaa !2428
  %151 = add i64 %123, 6
  store i64 %151, i64* %PC, align 8
  %152 = inttoptr i64 %148 to i64*
  %153 = load i64, i64* %152, align 8
  store i64 %153, i64* %PC, align 8, !tbaa !2428
  %154 = add i64 %122, 64
  store i64 %154, i64* %RSP, align 8, !tbaa !2428
  ret %struct.Memory* %2

block_40074e:                                     ; preds = %block_400586
  %155 = add i64 %282, -12
  store i64 4196181, i64* %PC, align 8
  %156 = inttoptr i64 %155 to i32*
  store i32 10, i32* %156, align 4
  %157 = load i64, i64* %RBP, align 8
  %158 = add i64 %157, -12
  %159 = load i64, i64* %PC, align 8
  %160 = add i64 %159, 3
  store i64 %160, i64* %PC, align 8
  %161 = inttoptr i64 %158 to i32*
  %162 = load i32, i32* %161, align 4
  %163 = zext i32 %162 to i64
  store i64 %163, i64* %RDI, align 8, !tbaa !2428
  %164 = add i64 %159, -581
  br label %block_400586.backedge

block_400848:                                     ; preds = %block_400586
  %165 = add i64 %282, -12
  store i64 4196431, i64* %PC, align 8
  %166 = inttoptr i64 %165 to i32*
  store i32 15, i32* %166, align 4
  %167 = load i64, i64* %RBP, align 8
  %168 = add i64 %167, -12
  %169 = load i64, i64* %PC, align 8
  %170 = add i64 %169, 3
  store i64 %170, i64* %PC, align 8
  %171 = inttoptr i64 %168 to i32*
  %172 = load i32, i32* %171, align 4
  %173 = zext i32 %172 to i64
  store i64 %173, i64* %RDI, align 8, !tbaa !2428
  %174 = add i64 %169, -831
  br label %block_400586.backedge

block_400942:                                     ; preds = %block_400586
  %175 = add i64 %282, -12
  store i64 4196681, i64* %PC, align 8
  %176 = inttoptr i64 %175 to i32*
  store i32 20, i32* %176, align 4
  %177 = load i64, i64* %PC, align 8
  %178 = tail call %struct.Memory* @sub_400949(%struct.State* nonnull %0, i64 %177, %struct.Memory* %2)
  ret %struct.Memory* %178

block_4005be:                                     ; preds = %block_400586
  %179 = add i64 %282, -12
  store i64 4195781, i64* %PC, align 8
  %180 = inttoptr i64 %179 to i32*
  store i32 2, i32* %180, align 4
  %181 = load i64, i64* %PC, align 8
  %182 = tail call %struct.Memory* @sub_4005c5(%struct.State* nonnull %0, i64 %181, %struct.Memory* %2)
  ret %struct.Memory* %182

block_4006b8:                                     ; preds = %block_400586
  %183 = add i64 %282, -12
  store i64 4196031, i64* %PC, align 8
  %184 = inttoptr i64 %183 to i32*
  store i32 7, i32* %184, align 4
  %185 = load i64, i64* %RBP, align 8
  %186 = add i64 %185, -12
  %187 = load i64, i64* %PC, align 8
  %188 = add i64 %187, 3
  store i64 %188, i64* %PC, align 8
  %189 = inttoptr i64 %186 to i32*
  %190 = load i32, i32* %189, align 4
  %191 = zext i32 %190 to i64
  store i64 %191, i64* %RDI, align 8, !tbaa !2428
  %192 = add i64 %187, -431
  br label %block_400586.backedge

block_400b36:                                     ; preds = %block_400586
  %193 = add i64 %282, -12
  store i64 4197181, i64* %PC, align 8
  %194 = inttoptr i64 %193 to i32*
  store i32 30, i32* %194, align 4
  %195 = load i64, i64* %RBP, align 8
  %196 = add i64 %195, -12
  %197 = load i64, i64* %PC, align 8
  %198 = add i64 %197, 3
  store i64 %198, i64* %PC, align 8
  %199 = inttoptr i64 %196 to i32*
  %200 = load i32, i32* %199, align 4
  %201 = zext i32 %200 to i64
  store i64 %201, i64* %RDI, align 8, !tbaa !2428
  %202 = add i64 %197, -1581
  br label %block_400586.backedge

block_4007b2:                                     ; preds = %block_400586
  %203 = add i64 %282, -12
  store i64 4196281, i64* %PC, align 8
  %204 = inttoptr i64 %203 to i32*
  store i32 12, i32* %204, align 4
  %205 = load i64, i64* %RBP, align 8
  %206 = add i64 %205, -12
  %207 = load i64, i64* %PC, align 8
  %208 = add i64 %207, 3
  store i64 %208, i64* %PC, align 8
  %209 = inttoptr i64 %206 to i32*
  %210 = load i32, i32* %209, align 4
  %211 = zext i32 %210 to i64
  store i64 %211, i64* %RDI, align 8, !tbaa !2428
  %212 = add i64 %207, -681
  br label %block_400586.backedge

block_4008ac:                                     ; preds = %block_400586
  %213 = add i64 %282, -12
  store i64 4196531, i64* %PC, align 8
  %214 = inttoptr i64 %213 to i32*
  store i32 17, i32* %214, align 4
  %215 = load i64, i64* %RBP, align 8
  %216 = add i64 %215, -12
  %217 = load i64, i64* %PC, align 8
  %218 = add i64 %217, 3
  store i64 %218, i64* %PC, align 8
  %219 = inttoptr i64 %216 to i32*
  %220 = load i32, i32* %219, align 4
  %221 = zext i32 %220 to i64
  store i64 %221, i64* %RDI, align 8, !tbaa !2428
  %222 = add i64 %217, -931
  br label %block_400586.backedge

block_4009a6:                                     ; preds = %block_400586
  %223 = add i64 %282, -12
  store i64 4196781, i64* %PC, align 8
  %224 = inttoptr i64 %223 to i32*
  store i32 22, i32* %224, align 4
  %225 = load i64, i64* %RBP, align 8
  %226 = add i64 %225, -12
  %227 = load i64, i64* %PC, align 8
  %228 = add i64 %227, 3
  store i64 %228, i64* %PC, align 8
  %229 = inttoptr i64 %226 to i32*
  %230 = load i32, i32* %229, align 4
  %231 = zext i32 %230 to i64
  store i64 %231, i64* %RDI, align 8, !tbaa !2428
  %232 = add i64 %227, -1181
  br label %block_400586.backedge

block_400a3c:                                     ; preds = %block_400586
  %233 = add i64 %282, -12
  store i64 4196931, i64* %PC, align 8
  %234 = inttoptr i64 %233 to i32*
  store i32 25, i32* %234, align 4
  %235 = load i64, i64* %PC, align 8
  %236 = tail call %struct.Memory* @sub_400a43(%struct.State* nonnull %0, i64 %235, %struct.Memory* %2)
  ret %struct.Memory* %236

block_400586:                                     ; preds = %block_400586.backedge, %block_400b0b
  %.sink5 = phi i64 [ 1451, %block_400b0b ], [ %.sink5.be, %block_400586.backedge ]
  %237 = load i64, i64* %RBP, align 8
  %238 = add i64 %237, -8
  %239 = load i64, i64* %PC, align 8
  %240 = add i64 %239, 4
  store i64 %240, i64* %PC, align 8
  %241 = inttoptr i64 %238 to i64*
  %242 = load i64, i64* %241, align 8
  store i64 %242, i64* %RAX, align 8, !tbaa !2428
  %243 = add i64 %242, 4
  store i64 %243, i64* %RCX, align 8, !tbaa !2428
  %244 = icmp ugt i64 %242, -5
  %245 = zext i1 %244 to i8
  store i8 %245, i8* %4, align 1, !tbaa !2432
  %246 = trunc i64 %243 to i32
  %247 = and i32 %246, 255
  %248 = tail call i32 @llvm.ctpop.i32(i32 %247) #9
  %249 = trunc i32 %248 to i8
  %250 = and i8 %249, 1
  %251 = xor i8 %250, 1
  store i8 %251, i8* %5, align 1, !tbaa !2446
  %252 = xor i64 %243, %242
  %253 = lshr i64 %252, 4
  %254 = trunc i64 %253 to i8
  %255 = and i8 %254, 1
  store i8 %255, i8* %6, align 1, !tbaa !2447
  %256 = icmp eq i64 %243, 0
  %257 = zext i1 %256 to i8
  store i8 %257, i8* %7, align 1, !tbaa !2448
  %258 = lshr i64 %243, 63
  %259 = trunc i64 %258 to i8
  store i8 %259, i8* %8, align 1, !tbaa !2449
  %260 = lshr i64 %242, 63
  %261 = xor i64 %258, %260
  %262 = add nuw nsw i64 %261, %258
  %263 = icmp eq i64 %262, 2
  %264 = zext i1 %263 to i8
  store i8 %264, i8* %9, align 1, !tbaa !2450
  %265 = add i64 %239, 15
  store i64 %265, i64* %PC, align 8
  store i64 %243, i64* %241, align 8
  %266 = load i32*, i32** %10, align 8
  %267 = load i64, i64* %PC, align 8
  %268 = add i64 %267, 3
  store i64 %268, i64* %PC, align 8
  %269 = load i32, i32* %266, align 4
  %270 = sext i32 %269 to i64
  store i64 %270, i64* %RAX, align 8, !tbaa !2428
  %271 = shl nsw i64 %270, 3
  %272 = add i64 %271, add (i64 ptrtoint (%seg_602020__data_type* @seg_602020__data to i64), i64 16)
  %273 = add i64 %267, 11
  store i64 %273, i64* %PC, align 8
  %274 = inttoptr i64 %272 to i64*
  %275 = load i64, i64* %274, align 8
  store i64 %275, i64* %RAX, align 8, !tbaa !2428
  %276 = load i64, i64* %RBP, align 8
  %277 = add i64 %276, -40
  %278 = add i64 %267, 15
  store i64 %278, i64* %PC, align 8
  %279 = inttoptr i64 %277 to i64*
  store i64 %275, i64* %279, align 8
  %280 = load i64, i64* %PC, align 8
  %281 = sub i64 %280, %.sink5
  %282 = load i64, i64* %RBP, align 8
  %283 = add i64 %282, -40
  %284 = add i64 %281, 4
  store i64 %284, i64* %PC, align 8
  %285 = inttoptr i64 %283 to i64*
  %286 = load i64, i64* %285, align 8
  store i64 %286, i64* %RAX, align 8, !tbaa !2428
  store i64 %286, i64* %PC, align 8, !tbaa !2428
  switch i64 %286, label %386 [
    i64 4196224, label %block_400780
    i64 4197124, label %block_400b04
    i64 4195974, label %block_400686
    i64 4196874, label %block_400a0a
    i64 4196624, label %block_400910
    i64 4196374, label %block_400816
    i64 4196124, label %block_40071c
    i64 4197024, label %block_400aa0
    i64 4195874, label %block_400622
    i64 4196574, label %block_4008de
    i64 4196324, label %block_4007e4
    i64 4197224, label %block_400b68
    i64 4196074, label %block_4006ea
    i64 4195924, label %block_400654
    i64 4197074, label %block_400ad2
    i64 4196474, label %block_40087a
    i64 4196824, label %block_4009d8
    i64 4195724, label %block_40058c
    i64 4196724, label %block_400974
    i64 4195824, label %block_4005f0
    i64 4196974, label %block_400a6e
    i64 4195705, label %block_400579
    i64 4195774, label %block_4005be
    i64 4196924, label %block_400a3c
    i64 4196174, label %block_40074e
    i64 4196424, label %block_400848
    i64 4196674, label %block_400942
    i64 4196024, label %block_4006b8
    i64 4197174, label %block_400b36
    i64 4196274, label %block_4007b2
    i64 4196524, label %block_4008ac
    i64 4196774, label %block_4009a6
  ]

block_400622:                                     ; preds = %block_400586
  %287 = add i64 %282, -12
  store i64 4195881, i64* %PC, align 8
  %288 = inttoptr i64 %287 to i32*
  store i32 4, i32* %288, align 4
  %289 = load i64, i64* %RBP, align 8
  %290 = add i64 %289, -12
  %291 = load i64, i64* %PC, align 8
  %292 = add i64 %291, 3
  store i64 %292, i64* %PC, align 8
  %293 = inttoptr i64 %290 to i32*
  %294 = load i32, i32* %293, align 4
  %295 = zext i32 %294 to i64
  store i64 %295, i64* %RDI, align 8, !tbaa !2428
  %296 = add i64 %291, -281
  br label %block_400586.backedge

block_400aa0:                                     ; preds = %block_400586
  %297 = add i64 %282, -12
  store i64 4197031, i64* %PC, align 8
  %298 = inttoptr i64 %297 to i32*
  store i32 27, i32* %298, align 4
  %299 = load i64, i64* %RBP, align 8
  %300 = add i64 %299, -12
  %301 = load i64, i64* %PC, align 8
  %302 = add i64 %301, 3
  store i64 %302, i64* %PC, align 8
  %303 = inttoptr i64 %300 to i32*
  %304 = load i32, i32* %303, align 4
  %305 = zext i32 %304 to i64
  store i64 %305, i64* %RDI, align 8, !tbaa !2428
  %306 = add i64 %301, -1431
  br label %block_400586.backedge

block_40071c:                                     ; preds = %block_400586
  %307 = add i64 %282, -12
  store i64 4196131, i64* %PC, align 8
  %308 = inttoptr i64 %307 to i32*
  store i32 9, i32* %308, align 4
  %309 = load i64, i64* %RBP, align 8
  %310 = add i64 %309, -12
  %311 = load i64, i64* %PC, align 8
  %312 = add i64 %311, 3
  store i64 %312, i64* %PC, align 8
  %313 = inttoptr i64 %310 to i32*
  %314 = load i32, i32* %313, align 4
  %315 = zext i32 %314 to i64
  store i64 %315, i64* %RDI, align 8, !tbaa !2428
  %316 = add i64 %311, -531
  br label %block_400586.backedge

block_400816:                                     ; preds = %block_400586
  %317 = add i64 %282, -12
  store i64 4196381, i64* %PC, align 8
  %318 = inttoptr i64 %317 to i32*
  store i32 14, i32* %318, align 4
  %319 = load i64, i64* %RBP, align 8
  %320 = add i64 %319, -12
  %321 = load i64, i64* %PC, align 8
  %322 = add i64 %321, 3
  store i64 %322, i64* %PC, align 8
  %323 = inttoptr i64 %320 to i32*
  %324 = load i32, i32* %323, align 4
  %325 = zext i32 %324 to i64
  store i64 %325, i64* %RDI, align 8, !tbaa !2428
  %326 = add i64 %321, -781
  br label %block_400586.backedge

block_400910:                                     ; preds = %block_400586
  %327 = add i64 %282, -12
  store i64 4196631, i64* %PC, align 8
  %328 = inttoptr i64 %327 to i32*
  store i32 19, i32* %328, align 4
  %329 = load i64, i64* %RBP, align 8
  %330 = add i64 %329, -12
  %331 = load i64, i64* %PC, align 8
  %332 = add i64 %331, 3
  store i64 %332, i64* %PC, align 8
  %333 = inttoptr i64 %330 to i32*
  %334 = load i32, i32* %333, align 4
  %335 = zext i32 %334 to i64
  store i64 %335, i64* %RDI, align 8, !tbaa !2428
  %336 = add i64 %331, -1031
  br label %block_400586.backedge

block_40058c:                                     ; preds = %block_400586
  %337 = add i64 %282, -12
  store i64 4195731, i64* %PC, align 8
  %338 = inttoptr i64 %337 to i32*
  store i32 1, i32* %338, align 4
  %339 = load i64, i64* %RBP, align 8
  %340 = add i64 %339, -12
  %341 = load i64, i64* %PC, align 8
  %342 = add i64 %341, 3
  store i64 %342, i64* %PC, align 8
  %343 = inttoptr i64 %340 to i32*
  %344 = load i32, i32* %343, align 4
  %345 = zext i32 %344 to i64
  store i64 %345, i64* %RDI, align 8, !tbaa !2428
  %346 = add i64 %341, -131
  br label %block_400586.backedge

block_400b0b:                                     ; preds = %block_400b04, %3
  %347 = phi i64 [ %.pre, %block_400b04 ], [ %1, %3 ]
  %348 = load i64, i64* %RBP, align 8
  %349 = add i64 %348, -12
  %350 = add i64 %347, 3
  store i64 %350, i64* %PC, align 8
  %351 = inttoptr i64 %349 to i32*
  %352 = load i32, i32* %351, align 4
  %353 = zext i32 %352 to i64
  store i64 %353, i64* %RDI, align 8, !tbaa !2428
  %354 = add i64 %347, -1531
  %355 = add i64 %347, 8
  %356 = load i64, i64* %RSP, align 8, !tbaa !2428
  %357 = add i64 %356, -8
  %358 = inttoptr i64 %357 to i64*
  store i64 %355, i64* %358, align 8
  store i64 %357, i64* %RSP, align 8, !tbaa !2428
  store i64 %354, i64* %PC, align 8, !tbaa !2428
  %359 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %354, %struct.Memory* %2)
  br label %block_400586

block_400a0a:                                     ; preds = %block_400586
  %360 = add i64 %282, -12
  store i64 4196881, i64* %PC, align 8
  %361 = inttoptr i64 %360 to i32*
  store i32 24, i32* %361, align 4
  %362 = load i64, i64* %RBP, align 8
  %363 = add i64 %362, -12
  %364 = load i64, i64* %PC, align 8
  %365 = add i64 %364, 3
  store i64 %365, i64* %PC, align 8
  %366 = inttoptr i64 %363 to i32*
  %367 = load i32, i32* %366, align 4
  %368 = zext i32 %367 to i64
  store i64 %368, i64* %RDI, align 8, !tbaa !2428
  %369 = add i64 %364, -1281
  br label %block_400586.backedge

block_400686:                                     ; preds = %block_400586
  %370 = add i64 %282, -12
  store i64 4195981, i64* %PC, align 8
  %371 = inttoptr i64 %370 to i32*
  store i32 6, i32* %371, align 4
  %372 = load i64, i64* %RBP, align 8
  %373 = add i64 %372, -12
  %374 = load i64, i64* %PC, align 8
  %375 = add i64 %374, 3
  store i64 %375, i64* %PC, align 8
  %376 = inttoptr i64 %373 to i32*
  %377 = load i32, i32* %376, align 4
  %378 = zext i32 %377 to i64
  store i64 %378, i64* %RDI, align 8, !tbaa !2428
  %379 = add i64 %374, -381
  br label %block_400586.backedge

block_400b04:                                     ; preds = %block_400586
  %380 = add i64 %282, -12
  store i64 4197131, i64* %PC, align 8
  %381 = inttoptr i64 %380 to i32*
  store i32 29, i32* %381, align 4
  %.pre = load i64, i64* %PC, align 8
  br label %block_400b0b

block_400780:                                     ; preds = %block_400586
  %382 = add i64 %282, -12
  store i64 4196231, i64* %PC, align 8
  %383 = inttoptr i64 %382 to i32*
  store i32 11, i32* %383, align 4
  %384 = load i64, i64* %PC, align 8
  %385 = tail call %struct.Memory* @sub_400787(%struct.State* nonnull %0, i64 %384, %struct.Memory* %2)
  ret %struct.Memory* %385

; <label>:386:                                    ; preds = %block_400586
  %387 = tail call %struct.Memory* @__remill_jump(%struct.State* nonnull %0, i64 %286, %struct.Memory* %2)
  ret %struct.Memory* %387
}

; Function Attrs: noinline norecurse nounwind
define %struct.Memory* @sub_400cf0___libc_csu_fini(%struct.State* noalias nocapture dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr #7 {
block_400cf0:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = add i64 %1, 2
  store i64 %3, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %5 = load i64, i64* %4, align 8, !tbaa !2428
  %6 = inttoptr i64 %5 to i64*
  %7 = load i64, i64* %6, align 8
  store i64 %7, i64* %PC, align 8, !tbaa !2428
  %8 = add i64 %5, 8
  store i64 %8, i64* %4, align 8, !tbaa !2428
  ret %struct.Memory* %2
}

; Function Attrs: noinline nounwind
define %struct.Memory* @sub_4005c5(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) local_unnamed_addr #6 {
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %PC, align 8
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RSP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %10 = bitcast i64* %RAX to i32**
  br label %block_4005c5

block_40087a:                                     ; preds = %block_400586
  %11 = add i64 %299, -12
  store i64 4196481, i64* %PC, align 8
  %12 = inttoptr i64 %11 to i32*
  store i32 16, i32* %12, align 4
  %13 = load i64, i64* %PC, align 8
  %14 = tail call %struct.Memory* @sub_400881(%struct.State* nonnull %0, i64 %13, %struct.Memory* %2)
  ret %struct.Memory* %14

block_400974:                                     ; preds = %block_400586
  %15 = add i64 %299, -12
  store i64 4196731, i64* %PC, align 8
  %16 = inttoptr i64 %15 to i32*
  store i32 21, i32* %16, align 4
  %17 = load i64, i64* %RBP, align 8
  %18 = add i64 %17, -12
  %19 = load i64, i64* %PC, align 8
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC, align 8
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RDI, align 8, !tbaa !2428
  %24 = add i64 %19, -1131
  br label %block_400586.backedge

block_400586.backedge:                            ; preds = %block_400974, %block_4005f0, %block_400a6e, %block_4006ea, %block_400b68, %block_4007e4, %block_4008de, %block_4009d8, %block_400654, %block_400ad2, %block_40074e, %block_400848, %block_400942, %block_4006b8, %block_400b36, %block_4007b2, %block_4008ac, %block_4009a6, %block_400622, %block_400aa0, %block_40071c, %block_400816, %block_400910, %block_40058c, %block_400a0a, %block_400686, %block_400b04, %block_400780
  %.sink106 = phi i64 [ %19, %block_400974 ], [ %34, %block_4005f0 ], [ %44, %block_400a6e ], [ %54, %block_4006ea ], [ %64, %block_400b68 ], [ %74, %block_4007e4 ], [ %84, %block_4008de ], [ %94, %block_4009d8 ], [ %104, %block_400654 ], [ %114, %block_400ad2 ], [ %159, %block_40074e ], [ %169, %block_400848 ], [ %192, %block_400942 ], [ %204, %block_4006b8 ], [ %214, %block_400b36 ], [ %224, %block_4007b2 ], [ %234, %block_4008ac ], [ %244, %block_4009a6 ], [ %308, %block_400622 ], [ %318, %block_400aa0 ], [ %328, %block_40071c ], [ %338, %block_400816 ], [ %348, %block_400910 ], [ %358, %block_40058c ], [ %368, %block_400a0a ], [ %378, %block_400686 ], [ %388, %block_400b04 ], [ %398, %block_400780 ]
  %.sink101 = phi i64 [ %24, %block_400974 ], [ %39, %block_4005f0 ], [ %49, %block_400a6e ], [ %59, %block_4006ea ], [ %69, %block_400b68 ], [ %79, %block_4007e4 ], [ %89, %block_4008de ], [ %99, %block_4009d8 ], [ %109, %block_400654 ], [ %119, %block_400ad2 ], [ %164, %block_40074e ], [ %174, %block_400848 ], [ %197, %block_400942 ], [ %209, %block_4006b8 ], [ %219, %block_400b36 ], [ %229, %block_4007b2 ], [ %239, %block_4008ac ], [ %249, %block_4009a6 ], [ %313, %block_400622 ], [ %323, %block_400aa0 ], [ %333, %block_40071c ], [ %343, %block_400816 ], [ %353, %block_400910 ], [ %363, %block_40058c ], [ %373, %block_400a0a ], [ %383, %block_400686 ], [ %393, %block_400b04 ], [ %403, %block_400780 ]
  %.sink5.be = phi i64 [ 1051, %block_400974 ], [ 151, %block_4005f0 ], [ 1301, %block_400a6e ], [ 401, %block_4006ea ], [ 1551, %block_400b68 ], [ 651, %block_4007e4 ], [ 901, %block_4008de ], [ 1151, %block_4009d8 ], [ 251, %block_400654 ], [ 1401, %block_400ad2 ], [ 501, %block_40074e ], [ 751, %block_400848 ], [ 1001, %block_400942 ], [ 351, %block_4006b8 ], [ 1501, %block_400b36 ], [ 601, %block_4007b2 ], [ 851, %block_4008ac ], [ 1101, %block_4009a6 ], [ 201, %block_400622 ], [ 1351, %block_400aa0 ], [ 451, %block_40071c ], [ 701, %block_400816 ], [ 951, %block_400910 ], [ 51, %block_40058c ], [ 1201, %block_400a0a ], [ 301, %block_400686 ], [ 1451, %block_400b04 ], [ 551, %block_400780 ]
  %25 = add i64 %.sink106, 8
  %26 = load i64, i64* %RSP, align 8, !tbaa !2428
  %27 = add i64 %26, -8
  %28 = inttoptr i64 %27 to i64*
  store i64 %25, i64* %28, align 8
  store i64 %27, i64* %RSP, align 8, !tbaa !2428
  store i64 %.sink101, i64* %PC, align 8, !tbaa !2428
  %29 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %.sink101, %struct.Memory* %2)
  br label %block_400586

block_4005f0:                                     ; preds = %block_400586
  %30 = add i64 %299, -12
  store i64 4195831, i64* %PC, align 8
  %31 = inttoptr i64 %30 to i32*
  store i32 3, i32* %31, align 4
  %32 = load i64, i64* %RBP, align 8
  %33 = add i64 %32, -12
  %34 = load i64, i64* %PC, align 8
  %35 = add i64 %34, 3
  store i64 %35, i64* %PC, align 8
  %36 = inttoptr i64 %33 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i64
  store i64 %38, i64* %RDI, align 8, !tbaa !2428
  %39 = add i64 %34, -231
  br label %block_400586.backedge

block_400a6e:                                     ; preds = %block_400586
  %40 = add i64 %299, -12
  store i64 4196981, i64* %PC, align 8
  %41 = inttoptr i64 %40 to i32*
  store i32 26, i32* %41, align 4
  %42 = load i64, i64* %RBP, align 8
  %43 = add i64 %42, -12
  %44 = load i64, i64* %PC, align 8
  %45 = add i64 %44, 3
  store i64 %45, i64* %PC, align 8
  %46 = inttoptr i64 %43 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = zext i32 %47 to i64
  store i64 %48, i64* %RDI, align 8, !tbaa !2428
  %49 = add i64 %44, -1381
  br label %block_400586.backedge

block_4006ea:                                     ; preds = %block_400586
  %50 = add i64 %299, -12
  store i64 4196081, i64* %PC, align 8
  %51 = inttoptr i64 %50 to i32*
  store i32 8, i32* %51, align 4
  %52 = load i64, i64* %RBP, align 8
  %53 = add i64 %52, -12
  %54 = load i64, i64* %PC, align 8
  %55 = add i64 %54, 3
  store i64 %55, i64* %PC, align 8
  %56 = inttoptr i64 %53 to i32*
  %57 = load i32, i32* %56, align 4
  %58 = zext i32 %57 to i64
  store i64 %58, i64* %RDI, align 8, !tbaa !2428
  %59 = add i64 %54, -481
  br label %block_400586.backedge

block_400b68:                                     ; preds = %block_400586
  %60 = add i64 %299, -12
  store i64 4197231, i64* %PC, align 8
  %61 = inttoptr i64 %60 to i32*
  store i32 31, i32* %61, align 4
  %62 = load i64, i64* %RBP, align 8
  %63 = add i64 %62, -12
  %64 = load i64, i64* %PC, align 8
  %65 = add i64 %64, 3
  store i64 %65, i64* %PC, align 8
  %66 = inttoptr i64 %63 to i32*
  %67 = load i32, i32* %66, align 4
  %68 = zext i32 %67 to i64
  store i64 %68, i64* %RDI, align 8, !tbaa !2428
  %69 = add i64 %64, -1631
  br label %block_400586.backedge

block_4007e4:                                     ; preds = %block_400586
  %70 = add i64 %299, -12
  store i64 4196331, i64* %PC, align 8
  %71 = inttoptr i64 %70 to i32*
  store i32 13, i32* %71, align 4
  %72 = load i64, i64* %RBP, align 8
  %73 = add i64 %72, -12
  %74 = load i64, i64* %PC, align 8
  %75 = add i64 %74, 3
  store i64 %75, i64* %PC, align 8
  %76 = inttoptr i64 %73 to i32*
  %77 = load i32, i32* %76, align 4
  %78 = zext i32 %77 to i64
  store i64 %78, i64* %RDI, align 8, !tbaa !2428
  %79 = add i64 %74, -731
  br label %block_400586.backedge

block_4008de:                                     ; preds = %block_400586
  %80 = add i64 %299, -12
  store i64 4196581, i64* %PC, align 8
  %81 = inttoptr i64 %80 to i32*
  store i32 18, i32* %81, align 4
  %82 = load i64, i64* %RBP, align 8
  %83 = add i64 %82, -12
  %84 = load i64, i64* %PC, align 8
  %85 = add i64 %84, 3
  store i64 %85, i64* %PC, align 8
  %86 = inttoptr i64 %83 to i32*
  %87 = load i32, i32* %86, align 4
  %88 = zext i32 %87 to i64
  store i64 %88, i64* %RDI, align 8, !tbaa !2428
  %89 = add i64 %84, -981
  br label %block_400586.backedge

block_4009d8:                                     ; preds = %block_400586
  %90 = add i64 %299, -12
  store i64 4196831, i64* %PC, align 8
  %91 = inttoptr i64 %90 to i32*
  store i32 23, i32* %91, align 4
  %92 = load i64, i64* %RBP, align 8
  %93 = add i64 %92, -12
  %94 = load i64, i64* %PC, align 8
  %95 = add i64 %94, 3
  store i64 %95, i64* %PC, align 8
  %96 = inttoptr i64 %93 to i32*
  %97 = load i32, i32* %96, align 4
  %98 = zext i32 %97 to i64
  store i64 %98, i64* %RDI, align 8, !tbaa !2428
  %99 = add i64 %94, -1231
  br label %block_400586.backedge

block_400654:                                     ; preds = %block_400586
  %100 = add i64 %299, -12
  store i64 4195931, i64* %PC, align 8
  %101 = inttoptr i64 %100 to i32*
  store i32 5, i32* %101, align 4
  %102 = load i64, i64* %RBP, align 8
  %103 = add i64 %102, -12
  %104 = load i64, i64* %PC, align 8
  %105 = add i64 %104, 3
  store i64 %105, i64* %PC, align 8
  %106 = inttoptr i64 %103 to i32*
  %107 = load i32, i32* %106, align 4
  %108 = zext i32 %107 to i64
  store i64 %108, i64* %RDI, align 8, !tbaa !2428
  %109 = add i64 %104, -331
  br label %block_400586.backedge

block_400ad2:                                     ; preds = %block_400586
  %110 = add i64 %299, -12
  store i64 4197081, i64* %PC, align 8
  %111 = inttoptr i64 %110 to i32*
  store i32 28, i32* %111, align 4
  %112 = load i64, i64* %RBP, align 8
  %113 = add i64 %112, -12
  %114 = load i64, i64* %PC, align 8
  %115 = add i64 %114, 3
  store i64 %115, i64* %PC, align 8
  %116 = inttoptr i64 %113 to i32*
  %117 = load i32, i32* %116, align 4
  %118 = zext i32 %117 to i64
  store i64 %118, i64* %RDI, align 8, !tbaa !2428
  %119 = add i64 %114, -1481
  br label %block_400586.backedge

block_400579:                                     ; preds = %block_400586
  %120 = add i64 %299, -12
  store i64 4195712, i64* %PC, align 8
  %121 = inttoptr i64 %120 to i32*
  store i32 0, i32* %121, align 4
  %122 = load i64, i64* %RSP, align 8
  %123 = load i64, i64* %PC, align 8
  %124 = add i64 %122, 48
  store i64 %124, i64* %RSP, align 8, !tbaa !2428
  %125 = icmp ugt i64 %122, -49
  %126 = zext i1 %125 to i8
  store i8 %126, i8* %4, align 1, !tbaa !2432
  %127 = trunc i64 %124 to i32
  %128 = and i32 %127, 255
  %129 = tail call i32 @llvm.ctpop.i32(i32 %128) #9
  %130 = trunc i32 %129 to i8
  %131 = and i8 %130, 1
  %132 = xor i8 %131, 1
  store i8 %132, i8* %5, align 1, !tbaa !2446
  %133 = xor i64 %122, 16
  %134 = xor i64 %133, %124
  %135 = lshr i64 %134, 4
  %136 = trunc i64 %135 to i8
  %137 = and i8 %136, 1
  store i8 %137, i8* %6, align 1, !tbaa !2447
  %138 = icmp eq i64 %124, 0
  %139 = zext i1 %138 to i8
  store i8 %139, i8* %7, align 1, !tbaa !2448
  %140 = lshr i64 %124, 63
  %141 = trunc i64 %140 to i8
  store i8 %141, i8* %8, align 1, !tbaa !2449
  %142 = lshr i64 %122, 63
  %143 = xor i64 %140, %142
  %144 = add nuw nsw i64 %143, %140
  %145 = icmp eq i64 %144, 2
  %146 = zext i1 %145 to i8
  store i8 %146, i8* %9, align 1, !tbaa !2450
  %147 = add i64 %123, 5
  store i64 %147, i64* %PC, align 8
  %148 = add i64 %122, 56
  %149 = inttoptr i64 %124 to i64*
  %150 = load i64, i64* %149, align 8
  store i64 %150, i64* %RBP, align 8, !tbaa !2428
  store i64 %148, i64* %RSP, align 8, !tbaa !2428
  %151 = add i64 %123, 6
  store i64 %151, i64* %PC, align 8
  %152 = inttoptr i64 %148 to i64*
  %153 = load i64, i64* %152, align 8
  store i64 %153, i64* %PC, align 8, !tbaa !2428
  %154 = add i64 %122, 64
  store i64 %154, i64* %RSP, align 8, !tbaa !2428
  ret %struct.Memory* %2

block_40074e:                                     ; preds = %block_400586
  %155 = add i64 %299, -12
  store i64 4196181, i64* %PC, align 8
  %156 = inttoptr i64 %155 to i32*
  store i32 10, i32* %156, align 4
  %157 = load i64, i64* %RBP, align 8
  %158 = add i64 %157, -12
  %159 = load i64, i64* %PC, align 8
  %160 = add i64 %159, 3
  store i64 %160, i64* %PC, align 8
  %161 = inttoptr i64 %158 to i32*
  %162 = load i32, i32* %161, align 4
  %163 = zext i32 %162 to i64
  store i64 %163, i64* %RDI, align 8, !tbaa !2428
  %164 = add i64 %159, -581
  br label %block_400586.backedge

block_400848:                                     ; preds = %block_400586
  %165 = add i64 %299, -12
  store i64 4196431, i64* %PC, align 8
  %166 = inttoptr i64 %165 to i32*
  store i32 15, i32* %166, align 4
  %167 = load i64, i64* %RBP, align 8
  %168 = add i64 %167, -12
  %169 = load i64, i64* %PC, align 8
  %170 = add i64 %169, 3
  store i64 %170, i64* %PC, align 8
  %171 = inttoptr i64 %168 to i32*
  %172 = load i32, i32* %171, align 4
  %173 = zext i32 %172 to i64
  store i64 %173, i64* %RDI, align 8, !tbaa !2428
  %174 = add i64 %169, -831
  br label %block_400586.backedge

block_4005c5:                                     ; preds = %block_4005be, %3
  %175 = phi i64 [ %.pre, %block_4005be ], [ %1, %3 ]
  %176 = load i64, i64* %RBP, align 8
  %177 = add i64 %176, -12
  %178 = add i64 %175, 3
  store i64 %178, i64* %PC, align 8
  %179 = inttoptr i64 %177 to i32*
  %180 = load i32, i32* %179, align 4
  %181 = zext i32 %180 to i64
  store i64 %181, i64* %RDI, align 8, !tbaa !2428
  %182 = add i64 %175, -181
  %183 = add i64 %175, 8
  %184 = load i64, i64* %RSP, align 8, !tbaa !2428
  %185 = add i64 %184, -8
  %186 = inttoptr i64 %185 to i64*
  store i64 %183, i64* %186, align 8
  store i64 %185, i64* %RSP, align 8, !tbaa !2428
  store i64 %182, i64* %PC, align 8, !tbaa !2428
  %187 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %182, %struct.Memory* %2)
  br label %block_400586

block_400942:                                     ; preds = %block_400586
  %188 = add i64 %299, -12
  store i64 4196681, i64* %PC, align 8
  %189 = inttoptr i64 %188 to i32*
  store i32 20, i32* %189, align 4
  %190 = load i64, i64* %RBP, align 8
  %191 = add i64 %190, -12
  %192 = load i64, i64* %PC, align 8
  %193 = add i64 %192, 3
  store i64 %193, i64* %PC, align 8
  %194 = inttoptr i64 %191 to i32*
  %195 = load i32, i32* %194, align 4
  %196 = zext i32 %195 to i64
  store i64 %196, i64* %RDI, align 8, !tbaa !2428
  %197 = add i64 %192, -1081
  br label %block_400586.backedge

block_4005be:                                     ; preds = %block_400586
  %198 = add i64 %299, -12
  store i64 4195781, i64* %PC, align 8
  %199 = inttoptr i64 %198 to i32*
  store i32 2, i32* %199, align 4
  %.pre = load i64, i64* %PC, align 8
  br label %block_4005c5

block_4006b8:                                     ; preds = %block_400586
  %200 = add i64 %299, -12
  store i64 4196031, i64* %PC, align 8
  %201 = inttoptr i64 %200 to i32*
  store i32 7, i32* %201, align 4
  %202 = load i64, i64* %RBP, align 8
  %203 = add i64 %202, -12
  %204 = load i64, i64* %PC, align 8
  %205 = add i64 %204, 3
  store i64 %205, i64* %PC, align 8
  %206 = inttoptr i64 %203 to i32*
  %207 = load i32, i32* %206, align 4
  %208 = zext i32 %207 to i64
  store i64 %208, i64* %RDI, align 8, !tbaa !2428
  %209 = add i64 %204, -431
  br label %block_400586.backedge

block_400b36:                                     ; preds = %block_400586
  %210 = add i64 %299, -12
  store i64 4197181, i64* %PC, align 8
  %211 = inttoptr i64 %210 to i32*
  store i32 30, i32* %211, align 4
  %212 = load i64, i64* %RBP, align 8
  %213 = add i64 %212, -12
  %214 = load i64, i64* %PC, align 8
  %215 = add i64 %214, 3
  store i64 %215, i64* %PC, align 8
  %216 = inttoptr i64 %213 to i32*
  %217 = load i32, i32* %216, align 4
  %218 = zext i32 %217 to i64
  store i64 %218, i64* %RDI, align 8, !tbaa !2428
  %219 = add i64 %214, -1581
  br label %block_400586.backedge

block_4007b2:                                     ; preds = %block_400586
  %220 = add i64 %299, -12
  store i64 4196281, i64* %PC, align 8
  %221 = inttoptr i64 %220 to i32*
  store i32 12, i32* %221, align 4
  %222 = load i64, i64* %RBP, align 8
  %223 = add i64 %222, -12
  %224 = load i64, i64* %PC, align 8
  %225 = add i64 %224, 3
  store i64 %225, i64* %PC, align 8
  %226 = inttoptr i64 %223 to i32*
  %227 = load i32, i32* %226, align 4
  %228 = zext i32 %227 to i64
  store i64 %228, i64* %RDI, align 8, !tbaa !2428
  %229 = add i64 %224, -681
  br label %block_400586.backedge

block_4008ac:                                     ; preds = %block_400586
  %230 = add i64 %299, -12
  store i64 4196531, i64* %PC, align 8
  %231 = inttoptr i64 %230 to i32*
  store i32 17, i32* %231, align 4
  %232 = load i64, i64* %RBP, align 8
  %233 = add i64 %232, -12
  %234 = load i64, i64* %PC, align 8
  %235 = add i64 %234, 3
  store i64 %235, i64* %PC, align 8
  %236 = inttoptr i64 %233 to i32*
  %237 = load i32, i32* %236, align 4
  %238 = zext i32 %237 to i64
  store i64 %238, i64* %RDI, align 8, !tbaa !2428
  %239 = add i64 %234, -931
  br label %block_400586.backedge

block_4009a6:                                     ; preds = %block_400586
  %240 = add i64 %299, -12
  store i64 4196781, i64* %PC, align 8
  %241 = inttoptr i64 %240 to i32*
  store i32 22, i32* %241, align 4
  %242 = load i64, i64* %RBP, align 8
  %243 = add i64 %242, -12
  %244 = load i64, i64* %PC, align 8
  %245 = add i64 %244, 3
  store i64 %245, i64* %PC, align 8
  %246 = inttoptr i64 %243 to i32*
  %247 = load i32, i32* %246, align 4
  %248 = zext i32 %247 to i64
  store i64 %248, i64* %RDI, align 8, !tbaa !2428
  %249 = add i64 %244, -1181
  br label %block_400586.backedge

block_400a3c:                                     ; preds = %block_400586
  %250 = add i64 %299, -12
  store i64 4196931, i64* %PC, align 8
  %251 = inttoptr i64 %250 to i32*
  store i32 25, i32* %251, align 4
  %252 = load i64, i64* %PC, align 8
  %253 = tail call %struct.Memory* @sub_400a43(%struct.State* nonnull %0, i64 %252, %struct.Memory* %2)
  ret %struct.Memory* %253

block_400586:                                     ; preds = %block_400586.backedge, %block_4005c5
  %.sink5 = phi i64 [ 101, %block_4005c5 ], [ %.sink5.be, %block_400586.backedge ]
  %254 = load i64, i64* %RBP, align 8
  %255 = add i64 %254, -8
  %256 = load i64, i64* %PC, align 8
  %257 = add i64 %256, 4
  store i64 %257, i64* %PC, align 8
  %258 = inttoptr i64 %255 to i64*
  %259 = load i64, i64* %258, align 8
  store i64 %259, i64* %RAX, align 8, !tbaa !2428
  %260 = add i64 %259, 4
  store i64 %260, i64* %RCX, align 8, !tbaa !2428
  %261 = icmp ugt i64 %259, -5
  %262 = zext i1 %261 to i8
  store i8 %262, i8* %4, align 1, !tbaa !2432
  %263 = trunc i64 %260 to i32
  %264 = and i32 %263, 255
  %265 = tail call i32 @llvm.ctpop.i32(i32 %264) #9
  %266 = trunc i32 %265 to i8
  %267 = and i8 %266, 1
  %268 = xor i8 %267, 1
  store i8 %268, i8* %5, align 1, !tbaa !2446
  %269 = xor i64 %260, %259
  %270 = lshr i64 %269, 4
  %271 = trunc i64 %270 to i8
  %272 = and i8 %271, 1
  store i8 %272, i8* %6, align 1, !tbaa !2447
  %273 = icmp eq i64 %260, 0
  %274 = zext i1 %273 to i8
  store i8 %274, i8* %7, align 1, !tbaa !2448
  %275 = lshr i64 %260, 63
  %276 = trunc i64 %275 to i8
  store i8 %276, i8* %8, align 1, !tbaa !2449
  %277 = lshr i64 %259, 63
  %278 = xor i64 %275, %277
  %279 = add nuw nsw i64 %278, %275
  %280 = icmp eq i64 %279, 2
  %281 = zext i1 %280 to i8
  store i8 %281, i8* %9, align 1, !tbaa !2450
  %282 = add i64 %256, 15
  store i64 %282, i64* %PC, align 8
  store i64 %260, i64* %258, align 8
  %283 = load i32*, i32** %10, align 8
  %284 = load i64, i64* %PC, align 8
  %285 = add i64 %284, 3
  store i64 %285, i64* %PC, align 8
  %286 = load i32, i32* %283, align 4
  %287 = sext i32 %286 to i64
  store i64 %287, i64* %RAX, align 8, !tbaa !2428
  %288 = shl nsw i64 %287, 3
  %289 = add i64 %288, add (i64 ptrtoint (%seg_602020__data_type* @seg_602020__data to i64), i64 16)
  %290 = add i64 %284, 11
  store i64 %290, i64* %PC, align 8
  %291 = inttoptr i64 %289 to i64*
  %292 = load i64, i64* %291, align 8
  store i64 %292, i64* %RAX, align 8, !tbaa !2428
  %293 = load i64, i64* %RBP, align 8
  %294 = add i64 %293, -40
  %295 = add i64 %284, 15
  store i64 %295, i64* %PC, align 8
  %296 = inttoptr i64 %294 to i64*
  store i64 %292, i64* %296, align 8
  %297 = load i64, i64* %PC, align 8
  %298 = sub i64 %297, %.sink5
  %299 = load i64, i64* %RBP, align 8
  %300 = add i64 %299, -40
  %301 = add i64 %298, 4
  store i64 %301, i64* %PC, align 8
  %302 = inttoptr i64 %300 to i64*
  %303 = load i64, i64* %302, align 8
  store i64 %303, i64* %RAX, align 8, !tbaa !2428
  store i64 %303, i64* %PC, align 8, !tbaa !2428
  switch i64 %303, label %404 [
    i64 4196224, label %block_400780
    i64 4197124, label %block_400b04
    i64 4195974, label %block_400686
    i64 4196874, label %block_400a0a
    i64 4196624, label %block_400910
    i64 4196374, label %block_400816
    i64 4196124, label %block_40071c
    i64 4197024, label %block_400aa0
    i64 4195874, label %block_400622
    i64 4196574, label %block_4008de
    i64 4196324, label %block_4007e4
    i64 4197224, label %block_400b68
    i64 4196074, label %block_4006ea
    i64 4195924, label %block_400654
    i64 4197074, label %block_400ad2
    i64 4196474, label %block_40087a
    i64 4196824, label %block_4009d8
    i64 4195724, label %block_40058c
    i64 4196724, label %block_400974
    i64 4195824, label %block_4005f0
    i64 4196974, label %block_400a6e
    i64 4195705, label %block_400579
    i64 4195774, label %block_4005be
    i64 4196924, label %block_400a3c
    i64 4196174, label %block_40074e
    i64 4196424, label %block_400848
    i64 4196674, label %block_400942
    i64 4196024, label %block_4006b8
    i64 4197174, label %block_400b36
    i64 4196274, label %block_4007b2
    i64 4196524, label %block_4008ac
    i64 4196774, label %block_4009a6
  ]

block_400622:                                     ; preds = %block_400586
  %304 = add i64 %299, -12
  store i64 4195881, i64* %PC, align 8
  %305 = inttoptr i64 %304 to i32*
  store i32 4, i32* %305, align 4
  %306 = load i64, i64* %RBP, align 8
  %307 = add i64 %306, -12
  %308 = load i64, i64* %PC, align 8
  %309 = add i64 %308, 3
  store i64 %309, i64* %PC, align 8
  %310 = inttoptr i64 %307 to i32*
  %311 = load i32, i32* %310, align 4
  %312 = zext i32 %311 to i64
  store i64 %312, i64* %RDI, align 8, !tbaa !2428
  %313 = add i64 %308, -281
  br label %block_400586.backedge

block_400aa0:                                     ; preds = %block_400586
  %314 = add i64 %299, -12
  store i64 4197031, i64* %PC, align 8
  %315 = inttoptr i64 %314 to i32*
  store i32 27, i32* %315, align 4
  %316 = load i64, i64* %RBP, align 8
  %317 = add i64 %316, -12
  %318 = load i64, i64* %PC, align 8
  %319 = add i64 %318, 3
  store i64 %319, i64* %PC, align 8
  %320 = inttoptr i64 %317 to i32*
  %321 = load i32, i32* %320, align 4
  %322 = zext i32 %321 to i64
  store i64 %322, i64* %RDI, align 8, !tbaa !2428
  %323 = add i64 %318, -1431
  br label %block_400586.backedge

block_40071c:                                     ; preds = %block_400586
  %324 = add i64 %299, -12
  store i64 4196131, i64* %PC, align 8
  %325 = inttoptr i64 %324 to i32*
  store i32 9, i32* %325, align 4
  %326 = load i64, i64* %RBP, align 8
  %327 = add i64 %326, -12
  %328 = load i64, i64* %PC, align 8
  %329 = add i64 %328, 3
  store i64 %329, i64* %PC, align 8
  %330 = inttoptr i64 %327 to i32*
  %331 = load i32, i32* %330, align 4
  %332 = zext i32 %331 to i64
  store i64 %332, i64* %RDI, align 8, !tbaa !2428
  %333 = add i64 %328, -531
  br label %block_400586.backedge

block_400816:                                     ; preds = %block_400586
  %334 = add i64 %299, -12
  store i64 4196381, i64* %PC, align 8
  %335 = inttoptr i64 %334 to i32*
  store i32 14, i32* %335, align 4
  %336 = load i64, i64* %RBP, align 8
  %337 = add i64 %336, -12
  %338 = load i64, i64* %PC, align 8
  %339 = add i64 %338, 3
  store i64 %339, i64* %PC, align 8
  %340 = inttoptr i64 %337 to i32*
  %341 = load i32, i32* %340, align 4
  %342 = zext i32 %341 to i64
  store i64 %342, i64* %RDI, align 8, !tbaa !2428
  %343 = add i64 %338, -781
  br label %block_400586.backedge

block_400910:                                     ; preds = %block_400586
  %344 = add i64 %299, -12
  store i64 4196631, i64* %PC, align 8
  %345 = inttoptr i64 %344 to i32*
  store i32 19, i32* %345, align 4
  %346 = load i64, i64* %RBP, align 8
  %347 = add i64 %346, -12
  %348 = load i64, i64* %PC, align 8
  %349 = add i64 %348, 3
  store i64 %349, i64* %PC, align 8
  %350 = inttoptr i64 %347 to i32*
  %351 = load i32, i32* %350, align 4
  %352 = zext i32 %351 to i64
  store i64 %352, i64* %RDI, align 8, !tbaa !2428
  %353 = add i64 %348, -1031
  br label %block_400586.backedge

block_40058c:                                     ; preds = %block_400586
  %354 = add i64 %299, -12
  store i64 4195731, i64* %PC, align 8
  %355 = inttoptr i64 %354 to i32*
  store i32 1, i32* %355, align 4
  %356 = load i64, i64* %RBP, align 8
  %357 = add i64 %356, -12
  %358 = load i64, i64* %PC, align 8
  %359 = add i64 %358, 3
  store i64 %359, i64* %PC, align 8
  %360 = inttoptr i64 %357 to i32*
  %361 = load i32, i32* %360, align 4
  %362 = zext i32 %361 to i64
  store i64 %362, i64* %RDI, align 8, !tbaa !2428
  %363 = add i64 %358, -131
  br label %block_400586.backedge

block_400a0a:                                     ; preds = %block_400586
  %364 = add i64 %299, -12
  store i64 4196881, i64* %PC, align 8
  %365 = inttoptr i64 %364 to i32*
  store i32 24, i32* %365, align 4
  %366 = load i64, i64* %RBP, align 8
  %367 = add i64 %366, -12
  %368 = load i64, i64* %PC, align 8
  %369 = add i64 %368, 3
  store i64 %369, i64* %PC, align 8
  %370 = inttoptr i64 %367 to i32*
  %371 = load i32, i32* %370, align 4
  %372 = zext i32 %371 to i64
  store i64 %372, i64* %RDI, align 8, !tbaa !2428
  %373 = add i64 %368, -1281
  br label %block_400586.backedge

block_400686:                                     ; preds = %block_400586
  %374 = add i64 %299, -12
  store i64 4195981, i64* %PC, align 8
  %375 = inttoptr i64 %374 to i32*
  store i32 6, i32* %375, align 4
  %376 = load i64, i64* %RBP, align 8
  %377 = add i64 %376, -12
  %378 = load i64, i64* %PC, align 8
  %379 = add i64 %378, 3
  store i64 %379, i64* %PC, align 8
  %380 = inttoptr i64 %377 to i32*
  %381 = load i32, i32* %380, align 4
  %382 = zext i32 %381 to i64
  store i64 %382, i64* %RDI, align 8, !tbaa !2428
  %383 = add i64 %378, -381
  br label %block_400586.backedge

block_400b04:                                     ; preds = %block_400586
  %384 = add i64 %299, -12
  store i64 4197131, i64* %PC, align 8
  %385 = inttoptr i64 %384 to i32*
  store i32 29, i32* %385, align 4
  %386 = load i64, i64* %RBP, align 8
  %387 = add i64 %386, -12
  %388 = load i64, i64* %PC, align 8
  %389 = add i64 %388, 3
  store i64 %389, i64* %PC, align 8
  %390 = inttoptr i64 %387 to i32*
  %391 = load i32, i32* %390, align 4
  %392 = zext i32 %391 to i64
  store i64 %392, i64* %RDI, align 8, !tbaa !2428
  %393 = add i64 %388, -1531
  br label %block_400586.backedge

block_400780:                                     ; preds = %block_400586
  %394 = add i64 %299, -12
  store i64 4196231, i64* %PC, align 8
  %395 = inttoptr i64 %394 to i32*
  store i32 11, i32* %395, align 4
  %396 = load i64, i64* %RBP, align 8
  %397 = add i64 %396, -12
  %398 = load i64, i64* %PC, align 8
  %399 = add i64 %398, 3
  store i64 %399, i64* %PC, align 8
  %400 = inttoptr i64 %397 to i32*
  %401 = load i32, i32* %400, align 4
  %402 = zext i32 %401 to i64
  store i64 %402, i64* %RDI, align 8, !tbaa !2428
  %403 = add i64 %398, -631
  br label %block_400586.backedge

; <label>:404:                                    ; preds = %block_400586
  %405 = tail call %struct.Memory* @__remill_jump(%struct.State* nonnull %0, i64 %303, %struct.Memory* %2)
  ret %struct.Memory* %405
}

; Function Attrs: noinline nounwind
define %struct.Memory* @sub_4003e0__init_proc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) local_unnamed_addr #6 {
block_4003e0:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RSP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3 = load i64, i64* %RSP, align 8
  %4 = add i64 %3, -8
  store i64 %4, i64* %RSP, align 8, !tbaa !2428
  %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %11 = load i64, i64* inttoptr (i64 add (i64 ptrtoint (%seg_601ff0__got_type* @seg_601ff0__got to i64), i64 8) to i64*), align 8
  store i64 %11, i64* %RAX, align 8, !tbaa !2428
  store i8 0, i8* %5, align 1, !tbaa !2432
  %12 = trunc i64 %11 to i32
  %13 = and i32 %12, 255
  %14 = tail call i32 @llvm.ctpop.i32(i32 %13) #9
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  store i8 %17, i8* %6, align 1, !tbaa !2446
  %18 = icmp eq i64 %11, 0
  %19 = zext i1 %18 to i8
  store i8 %19, i8* %8, align 1, !tbaa !2448
  %20 = lshr i64 %11, 63
  %21 = trunc i64 %20 to i8
  store i8 %21, i8* %9, align 1, !tbaa !2449
  store i8 0, i8* %10, align 1, !tbaa !2450
  store i8 0, i8* %7, align 1, !tbaa !2447
  %.v = select i1 %18, i64 18, i64 16
  %22 = add i64 %.v, %1
  store i64 %22, i64* %PC, align 8, !tbaa !2428
  br i1 %18, label %block_4003f2, label %block_4003f0

block_4003f0:                                     ; preds = %block_4003e0
  %23 = add i64 %22, 2
  %24 = add i64 %3, -16
  %25 = inttoptr i64 %24 to i64*
  store i64 %23, i64* %25, align 8
  store i64 %24, i64* %RSP, align 8, !tbaa !2428
  store i64 %11, i64* %PC, align 8, !tbaa !2428
  %26 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 %11, %struct.Memory* %2)
  %.pre = load i64, i64* %RSP, align 8
  %.pre1 = load i64, i64* %PC, align 8
  br label %block_4003f2

block_4003f2:                                     ; preds = %block_4003f0, %block_4003e0
  %27 = phi i64 [ %22, %block_4003e0 ], [ %.pre1, %block_4003f0 ]
  %28 = phi i64 [ %4, %block_4003e0 ], [ %.pre, %block_4003f0 ]
  %MEMORY.0 = phi %struct.Memory* [ %2, %block_4003e0 ], [ %26, %block_4003f0 ]
  %29 = add i64 %28, 8
  store i64 %29, i64* %RSP, align 8, !tbaa !2428
  %30 = icmp ugt i64 %28, -9
  %31 = zext i1 %30 to i8
  store i8 %31, i8* %5, align 1, !tbaa !2432
  %32 = trunc i64 %29 to i32
  %33 = and i32 %32, 255
  %34 = tail call i32 @llvm.ctpop.i32(i32 %33) #9
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = xor i8 %36, 1
  store i8 %37, i8* %6, align 1, !tbaa !2446
  %38 = xor i64 %29, %28
  %39 = lshr i64 %38, 4
  %40 = trunc i64 %39 to i8
  %41 = and i8 %40, 1
  store i8 %41, i8* %7, align 1, !tbaa !2447
  %42 = icmp eq i64 %29, 0
  %43 = zext i1 %42 to i8
  store i8 %43, i8* %8, align 1, !tbaa !2448
  %44 = lshr i64 %29, 63
  %45 = trunc i64 %44 to i8
  store i8 %45, i8* %9, align 1, !tbaa !2449
  %46 = lshr i64 %28, 63
  %47 = xor i64 %44, %46
  %48 = add nuw nsw i64 %47, %44
  %49 = icmp eq i64 %48, 2
  %50 = zext i1 %49 to i8
  store i8 %50, i8* %10, align 1, !tbaa !2450
  %51 = add i64 %27, 5
  store i64 %51, i64* %PC, align 8
  %52 = inttoptr i64 %29 to i64*
  %53 = load i64, i64* %52, align 8
  store i64 %53, i64* %PC, align 8, !tbaa !2428
  %54 = add i64 %28, 16
  store i64 %54, i64* %RSP, align 8, !tbaa !2428
  ret %struct.Memory* %MEMORY.0
}

; Function Attrs: noinline nounwind
define %struct.Memory* @sub_400580(%struct.State* noalias nocapture dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr #6 {
block_400580:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RSP, align 8
  %4 = add i64 %3, 48
  store i64 %4, i64* %RSP, align 8, !tbaa !2428
  %5 = icmp ugt i64 %3, -49
  %6 = zext i1 %5 to i8
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6, i8* %7, align 1, !tbaa !2432
  %8 = trunc i64 %4 to i32
  %9 = and i32 %8, 255
  %10 = tail call i32 @llvm.ctpop.i32(i32 %9) #9
  %11 = trunc i32 %10 to i8
  %12 = and i8 %11, 1
  %13 = xor i8 %12, 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13, i8* %14, align 1, !tbaa !2446
  %15 = xor i64 %3, 16
  %16 = xor i64 %15, %4
  %17 = lshr i64 %16, 4
  %18 = trunc i64 %17 to i8
  %19 = and i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19, i8* %20, align 1, !tbaa !2447
  %21 = icmp eq i64 %4, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1, !tbaa !2448
  %24 = lshr i64 %4, 63
  %25 = trunc i64 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1, !tbaa !2449
  %27 = lshr i64 %3, 63
  %28 = xor i64 %24, %27
  %29 = add nuw nsw i64 %28, %24
  %30 = icmp eq i64 %29, 2
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31, i8* %32, align 1, !tbaa !2450
  %33 = add i64 %1, 5
  store i64 %33, i64* %PC, align 8
  %34 = add i64 %3, 56
  %35 = inttoptr i64 %4 to i64*
  %36 = load i64, i64* %35, align 8
  store i64 %36, i64* %RBP, align 8, !tbaa !2428
  store i64 %34, i64* %RSP, align 8, !tbaa !2428
  %37 = add i64 %1, 6
  store i64 %37, i64* %PC, align 8
  %38 = inttoptr i64 %34 to i64*
  %39 = load i64, i64* %38, align 8
  store i64 %39, i64* %PC, align 8, !tbaa !2428
  %40 = add i64 %3, 64
  store i64 %40, i64* %RSP, align 8, !tbaa !2428
  ret %struct.Memory* %2
}

; Function Attrs: noinline nounwind
define %struct.Memory* @sub_400cf4__term_proc(%struct.State* noalias nocapture dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr #6 {
block_400cf4:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3 = load i64, i64* %RSP, align 8
  %4 = add i64 %3, -8
  %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %7 = xor i64 %4, %3
  %8 = lshr i64 %7, 4
  %9 = trunc i64 %8 to i8
  %10 = and i8 %9, 1
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = lshr i64 %4, 63
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %15 = lshr i64 %3, 63
  %16 = xor i64 %13, %15
  %17 = add nuw nsw i64 %16, %15
  %18 = icmp eq i64 %17, 2
  %19 = zext i1 %18 to i8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i64 %3, i64* %RSP, align 8, !tbaa !2428
  %21 = icmp ult i64 %3, 8
  %22 = zext i1 %21 to i8
  store i8 %22, i8* %5, align 1, !tbaa !2432
  %23 = trunc i64 %3 to i32
  %24 = and i32 %23, 255
  %25 = tail call i32 @llvm.ctpop.i32(i32 %24) #9
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  store i8 %28, i8* %6, align 1, !tbaa !2446
  store i8 %10, i8* %11, align 1, !tbaa !2447
  %29 = icmp eq i64 %3, 0
  %30 = zext i1 %29 to i8
  store i8 %30, i8* %12, align 1, !tbaa !2448
  %31 = trunc i64 %15 to i8
  store i8 %31, i8* %14, align 1, !tbaa !2449
  store i8 %19, i8* %20, align 1, !tbaa !2450
  %32 = add i64 %1, 9
  store i64 %32, i64* %PC, align 8
  %33 = inttoptr i64 %3 to i64*
  %34 = load i64, i64* %33, align 8
  store i64 %34, i64* %PC, align 8, !tbaa !2428
  %35 = add i64 %3, 8
  store i64 %35, i64* %RSP, align 8, !tbaa !2428
  ret %struct.Memory* %2
}

; Function Attrs: noinline nounwind
define %struct.Memory* @sub_400a43(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) local_unnamed_addr #6 {
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %PC, align 8
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RSP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %10 = bitcast i64* %RAX to i32**
  br label %block_400a43

block_40087a:                                     ; preds = %block_400586
  %11 = add i64 %345, -12
  store i64 4196481, i64* %PC, align 8
  %12 = inttoptr i64 %11 to i32*
  store i32 16, i32* %12, align 4
  %13 = load i64, i64* %PC, align 8
  %14 = tail call %struct.Memory* @sub_400881(%struct.State* nonnull %0, i64 %13, %struct.Memory* %2)
  ret %struct.Memory* %14

block_400974:                                     ; preds = %block_400586
  %15 = add i64 %345, -12
  store i64 4196731, i64* %PC, align 8
  %16 = inttoptr i64 %15 to i32*
  store i32 21, i32* %16, align 4
  %17 = load i64, i64* %RBP, align 8
  %18 = add i64 %17, -12
  %19 = load i64, i64* %PC, align 8
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC, align 8
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RDI, align 8, !tbaa !2428
  %24 = add i64 %19, -1131
  br label %block_400586.backedge

block_400586.backedge:                            ; preds = %block_400974, %block_4005f0, %block_400a6e, %block_4006ea, %block_400b68, %block_4007e4, %block_4008de, %block_4009d8, %block_400654, %block_400ad2, %block_40074e, %block_400848, %block_400942, %block_4005be, %block_4006b8, %block_400b36, %block_4007b2, %block_4008ac, %block_4009a6, %block_400622, %block_400aa0, %block_40071c, %block_400816, %block_400910, %block_40058c, %block_400a0a, %block_400686, %block_400b04, %block_400780
  %.sink98 = phi i64 [ %19, %block_400974 ], [ %34, %block_4005f0 ], [ %44, %block_400a6e ], [ %54, %block_4006ea ], [ %64, %block_400b68 ], [ %74, %block_4007e4 ], [ %84, %block_4008de ], [ %94, %block_4009d8 ], [ %104, %block_400654 ], [ %114, %block_400ad2 ], [ %159, %block_40074e ], [ %169, %block_400848 ], [ %192, %block_400942 ], [ %202, %block_4005be ], [ %212, %block_4006b8 ], [ %222, %block_400b36 ], [ %232, %block_4007b2 ], [ %242, %block_4008ac ], [ %252, %block_4009a6 ], [ %262, %block_400622 ], [ %272, %block_400aa0 ], [ %282, %block_40071c ], [ %292, %block_400816 ], [ %354, %block_400910 ], [ %364, %block_40058c ], [ %374, %block_400a0a ], [ %384, %block_400686 ], [ %394, %block_400b04 ], [ %404, %block_400780 ]
  %.sink93 = phi i64 [ %24, %block_400974 ], [ %39, %block_4005f0 ], [ %49, %block_400a6e ], [ %59, %block_4006ea ], [ %69, %block_400b68 ], [ %79, %block_4007e4 ], [ %89, %block_4008de ], [ %99, %block_4009d8 ], [ %109, %block_400654 ], [ %119, %block_400ad2 ], [ %164, %block_40074e ], [ %174, %block_400848 ], [ %197, %block_400942 ], [ %207, %block_4005be ], [ %217, %block_4006b8 ], [ %227, %block_400b36 ], [ %237, %block_4007b2 ], [ %247, %block_4008ac ], [ %257, %block_4009a6 ], [ %267, %block_400622 ], [ %277, %block_400aa0 ], [ %287, %block_40071c ], [ %297, %block_400816 ], [ %359, %block_400910 ], [ %369, %block_40058c ], [ %379, %block_400a0a ], [ %389, %block_400686 ], [ %399, %block_400b04 ], [ %409, %block_400780 ]
  %.sink5.be = phi i64 [ 1051, %block_400974 ], [ 151, %block_4005f0 ], [ 1301, %block_400a6e ], [ 401, %block_4006ea ], [ 1551, %block_400b68 ], [ 651, %block_4007e4 ], [ 901, %block_4008de ], [ 1151, %block_4009d8 ], [ 251, %block_400654 ], [ 1401, %block_400ad2 ], [ 501, %block_40074e ], [ 751, %block_400848 ], [ 1001, %block_400942 ], [ 101, %block_4005be ], [ 351, %block_4006b8 ], [ 1501, %block_400b36 ], [ 601, %block_4007b2 ], [ 851, %block_4008ac ], [ 1101, %block_4009a6 ], [ 201, %block_400622 ], [ 1351, %block_400aa0 ], [ 451, %block_40071c ], [ 701, %block_400816 ], [ 951, %block_400910 ], [ 51, %block_40058c ], [ 1201, %block_400a0a ], [ 301, %block_400686 ], [ 1451, %block_400b04 ], [ 551, %block_400780 ]
  %25 = add i64 %.sink98, 8
  %26 = load i64, i64* %RSP, align 8, !tbaa !2428
  %27 = add i64 %26, -8
  %28 = inttoptr i64 %27 to i64*
  store i64 %25, i64* %28, align 8
  store i64 %27, i64* %RSP, align 8, !tbaa !2428
  store i64 %.sink93, i64* %PC, align 8, !tbaa !2428
  %29 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %.sink93, %struct.Memory* %2)
  br label %block_400586

block_4005f0:                                     ; preds = %block_400586
  %30 = add i64 %345, -12
  store i64 4195831, i64* %PC, align 8
  %31 = inttoptr i64 %30 to i32*
  store i32 3, i32* %31, align 4
  %32 = load i64, i64* %RBP, align 8
  %33 = add i64 %32, -12
  %34 = load i64, i64* %PC, align 8
  %35 = add i64 %34, 3
  store i64 %35, i64* %PC, align 8
  %36 = inttoptr i64 %33 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i64
  store i64 %38, i64* %RDI, align 8, !tbaa !2428
  %39 = add i64 %34, -231
  br label %block_400586.backedge

block_400a6e:                                     ; preds = %block_400586
  %40 = add i64 %345, -12
  store i64 4196981, i64* %PC, align 8
  %41 = inttoptr i64 %40 to i32*
  store i32 26, i32* %41, align 4
  %42 = load i64, i64* %RBP, align 8
  %43 = add i64 %42, -12
  %44 = load i64, i64* %PC, align 8
  %45 = add i64 %44, 3
  store i64 %45, i64* %PC, align 8
  %46 = inttoptr i64 %43 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = zext i32 %47 to i64
  store i64 %48, i64* %RDI, align 8, !tbaa !2428
  %49 = add i64 %44, -1381
  br label %block_400586.backedge

block_4006ea:                                     ; preds = %block_400586
  %50 = add i64 %345, -12
  store i64 4196081, i64* %PC, align 8
  %51 = inttoptr i64 %50 to i32*
  store i32 8, i32* %51, align 4
  %52 = load i64, i64* %RBP, align 8
  %53 = add i64 %52, -12
  %54 = load i64, i64* %PC, align 8
  %55 = add i64 %54, 3
  store i64 %55, i64* %PC, align 8
  %56 = inttoptr i64 %53 to i32*
  %57 = load i32, i32* %56, align 4
  %58 = zext i32 %57 to i64
  store i64 %58, i64* %RDI, align 8, !tbaa !2428
  %59 = add i64 %54, -481
  br label %block_400586.backedge

block_400b68:                                     ; preds = %block_400586
  %60 = add i64 %345, -12
  store i64 4197231, i64* %PC, align 8
  %61 = inttoptr i64 %60 to i32*
  store i32 31, i32* %61, align 4
  %62 = load i64, i64* %RBP, align 8
  %63 = add i64 %62, -12
  %64 = load i64, i64* %PC, align 8
  %65 = add i64 %64, 3
  store i64 %65, i64* %PC, align 8
  %66 = inttoptr i64 %63 to i32*
  %67 = load i32, i32* %66, align 4
  %68 = zext i32 %67 to i64
  store i64 %68, i64* %RDI, align 8, !tbaa !2428
  %69 = add i64 %64, -1631
  br label %block_400586.backedge

block_4007e4:                                     ; preds = %block_400586
  %70 = add i64 %345, -12
  store i64 4196331, i64* %PC, align 8
  %71 = inttoptr i64 %70 to i32*
  store i32 13, i32* %71, align 4
  %72 = load i64, i64* %RBP, align 8
  %73 = add i64 %72, -12
  %74 = load i64, i64* %PC, align 8
  %75 = add i64 %74, 3
  store i64 %75, i64* %PC, align 8
  %76 = inttoptr i64 %73 to i32*
  %77 = load i32, i32* %76, align 4
  %78 = zext i32 %77 to i64
  store i64 %78, i64* %RDI, align 8, !tbaa !2428
  %79 = add i64 %74, -731
  br label %block_400586.backedge

block_4008de:                                     ; preds = %block_400586
  %80 = add i64 %345, -12
  store i64 4196581, i64* %PC, align 8
  %81 = inttoptr i64 %80 to i32*
  store i32 18, i32* %81, align 4
  %82 = load i64, i64* %RBP, align 8
  %83 = add i64 %82, -12
  %84 = load i64, i64* %PC, align 8
  %85 = add i64 %84, 3
  store i64 %85, i64* %PC, align 8
  %86 = inttoptr i64 %83 to i32*
  %87 = load i32, i32* %86, align 4
  %88 = zext i32 %87 to i64
  store i64 %88, i64* %RDI, align 8, !tbaa !2428
  %89 = add i64 %84, -981
  br label %block_400586.backedge

block_4009d8:                                     ; preds = %block_400586
  %90 = add i64 %345, -12
  store i64 4196831, i64* %PC, align 8
  %91 = inttoptr i64 %90 to i32*
  store i32 23, i32* %91, align 4
  %92 = load i64, i64* %RBP, align 8
  %93 = add i64 %92, -12
  %94 = load i64, i64* %PC, align 8
  %95 = add i64 %94, 3
  store i64 %95, i64* %PC, align 8
  %96 = inttoptr i64 %93 to i32*
  %97 = load i32, i32* %96, align 4
  %98 = zext i32 %97 to i64
  store i64 %98, i64* %RDI, align 8, !tbaa !2428
  %99 = add i64 %94, -1231
  br label %block_400586.backedge

block_400654:                                     ; preds = %block_400586
  %100 = add i64 %345, -12
  store i64 4195931, i64* %PC, align 8
  %101 = inttoptr i64 %100 to i32*
  store i32 5, i32* %101, align 4
  %102 = load i64, i64* %RBP, align 8
  %103 = add i64 %102, -12
  %104 = load i64, i64* %PC, align 8
  %105 = add i64 %104, 3
  store i64 %105, i64* %PC, align 8
  %106 = inttoptr i64 %103 to i32*
  %107 = load i32, i32* %106, align 4
  %108 = zext i32 %107 to i64
  store i64 %108, i64* %RDI, align 8, !tbaa !2428
  %109 = add i64 %104, -331
  br label %block_400586.backedge

block_400ad2:                                     ; preds = %block_400586
  %110 = add i64 %345, -12
  store i64 4197081, i64* %PC, align 8
  %111 = inttoptr i64 %110 to i32*
  store i32 28, i32* %111, align 4
  %112 = load i64, i64* %RBP, align 8
  %113 = add i64 %112, -12
  %114 = load i64, i64* %PC, align 8
  %115 = add i64 %114, 3
  store i64 %115, i64* %PC, align 8
  %116 = inttoptr i64 %113 to i32*
  %117 = load i32, i32* %116, align 4
  %118 = zext i32 %117 to i64
  store i64 %118, i64* %RDI, align 8, !tbaa !2428
  %119 = add i64 %114, -1481
  br label %block_400586.backedge

block_400579:                                     ; preds = %block_400586
  %120 = add i64 %345, -12
  store i64 4195712, i64* %PC, align 8
  %121 = inttoptr i64 %120 to i32*
  store i32 0, i32* %121, align 4
  %122 = load i64, i64* %RSP, align 8
  %123 = load i64, i64* %PC, align 8
  %124 = add i64 %122, 48
  store i64 %124, i64* %RSP, align 8, !tbaa !2428
  %125 = icmp ugt i64 %122, -49
  %126 = zext i1 %125 to i8
  store i8 %126, i8* %4, align 1, !tbaa !2432
  %127 = trunc i64 %124 to i32
  %128 = and i32 %127, 255
  %129 = tail call i32 @llvm.ctpop.i32(i32 %128) #9
  %130 = trunc i32 %129 to i8
  %131 = and i8 %130, 1
  %132 = xor i8 %131, 1
  store i8 %132, i8* %5, align 1, !tbaa !2446
  %133 = xor i64 %122, 16
  %134 = xor i64 %133, %124
  %135 = lshr i64 %134, 4
  %136 = trunc i64 %135 to i8
  %137 = and i8 %136, 1
  store i8 %137, i8* %6, align 1, !tbaa !2447
  %138 = icmp eq i64 %124, 0
  %139 = zext i1 %138 to i8
  store i8 %139, i8* %7, align 1, !tbaa !2448
  %140 = lshr i64 %124, 63
  %141 = trunc i64 %140 to i8
  store i8 %141, i8* %8, align 1, !tbaa !2449
  %142 = lshr i64 %122, 63
  %143 = xor i64 %140, %142
  %144 = add nuw nsw i64 %143, %140
  %145 = icmp eq i64 %144, 2
  %146 = zext i1 %145 to i8
  store i8 %146, i8* %9, align 1, !tbaa !2450
  %147 = add i64 %123, 5
  store i64 %147, i64* %PC, align 8
  %148 = add i64 %122, 56
  %149 = inttoptr i64 %124 to i64*
  %150 = load i64, i64* %149, align 8
  store i64 %150, i64* %RBP, align 8, !tbaa !2428
  store i64 %148, i64* %RSP, align 8, !tbaa !2428
  %151 = add i64 %123, 6
  store i64 %151, i64* %PC, align 8
  %152 = inttoptr i64 %148 to i64*
  %153 = load i64, i64* %152, align 8
  store i64 %153, i64* %PC, align 8, !tbaa !2428
  %154 = add i64 %122, 64
  store i64 %154, i64* %RSP, align 8, !tbaa !2428
  ret %struct.Memory* %2

block_40074e:                                     ; preds = %block_400586
  %155 = add i64 %345, -12
  store i64 4196181, i64* %PC, align 8
  %156 = inttoptr i64 %155 to i32*
  store i32 10, i32* %156, align 4
  %157 = load i64, i64* %RBP, align 8
  %158 = add i64 %157, -12
  %159 = load i64, i64* %PC, align 8
  %160 = add i64 %159, 3
  store i64 %160, i64* %PC, align 8
  %161 = inttoptr i64 %158 to i32*
  %162 = load i32, i32* %161, align 4
  %163 = zext i32 %162 to i64
  store i64 %163, i64* %RDI, align 8, !tbaa !2428
  %164 = add i64 %159, -581
  br label %block_400586.backedge

block_400848:                                     ; preds = %block_400586
  %165 = add i64 %345, -12
  store i64 4196431, i64* %PC, align 8
  %166 = inttoptr i64 %165 to i32*
  store i32 15, i32* %166, align 4
  %167 = load i64, i64* %RBP, align 8
  %168 = add i64 %167, -12
  %169 = load i64, i64* %PC, align 8
  %170 = add i64 %169, 3
  store i64 %170, i64* %PC, align 8
  %171 = inttoptr i64 %168 to i32*
  %172 = load i32, i32* %171, align 4
  %173 = zext i32 %172 to i64
  store i64 %173, i64* %RDI, align 8, !tbaa !2428
  %174 = add i64 %169, -831
  br label %block_400586.backedge

block_400a43:                                     ; preds = %block_400a3c, %3
  %175 = phi i64 [ %.pre, %block_400a3c ], [ %1, %3 ]
  %176 = load i64, i64* %RBP, align 8
  %177 = add i64 %176, -12
  %178 = add i64 %175, 3
  store i64 %178, i64* %PC, align 8
  %179 = inttoptr i64 %177 to i32*
  %180 = load i32, i32* %179, align 4
  %181 = zext i32 %180 to i64
  store i64 %181, i64* %RDI, align 8, !tbaa !2428
  %182 = add i64 %175, -1331
  %183 = add i64 %175, 8
  %184 = load i64, i64* %RSP, align 8, !tbaa !2428
  %185 = add i64 %184, -8
  %186 = inttoptr i64 %185 to i64*
  store i64 %183, i64* %186, align 8
  store i64 %185, i64* %RSP, align 8, !tbaa !2428
  store i64 %182, i64* %PC, align 8, !tbaa !2428
  %187 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %182, %struct.Memory* %2)
  br label %block_400586

block_400942:                                     ; preds = %block_400586
  %188 = add i64 %345, -12
  store i64 4196681, i64* %PC, align 8
  %189 = inttoptr i64 %188 to i32*
  store i32 20, i32* %189, align 4
  %190 = load i64, i64* %RBP, align 8
  %191 = add i64 %190, -12
  %192 = load i64, i64* %PC, align 8
  %193 = add i64 %192, 3
  store i64 %193, i64* %PC, align 8
  %194 = inttoptr i64 %191 to i32*
  %195 = load i32, i32* %194, align 4
  %196 = zext i32 %195 to i64
  store i64 %196, i64* %RDI, align 8, !tbaa !2428
  %197 = add i64 %192, -1081
  br label %block_400586.backedge

block_4005be:                                     ; preds = %block_400586
  %198 = add i64 %345, -12
  store i64 4195781, i64* %PC, align 8
  %199 = inttoptr i64 %198 to i32*
  store i32 2, i32* %199, align 4
  %200 = load i64, i64* %RBP, align 8
  %201 = add i64 %200, -12
  %202 = load i64, i64* %PC, align 8
  %203 = add i64 %202, 3
  store i64 %203, i64* %PC, align 8
  %204 = inttoptr i64 %201 to i32*
  %205 = load i32, i32* %204, align 4
  %206 = zext i32 %205 to i64
  store i64 %206, i64* %RDI, align 8, !tbaa !2428
  %207 = add i64 %202, -181
  br label %block_400586.backedge

block_4006b8:                                     ; preds = %block_400586
  %208 = add i64 %345, -12
  store i64 4196031, i64* %PC, align 8
  %209 = inttoptr i64 %208 to i32*
  store i32 7, i32* %209, align 4
  %210 = load i64, i64* %RBP, align 8
  %211 = add i64 %210, -12
  %212 = load i64, i64* %PC, align 8
  %213 = add i64 %212, 3
  store i64 %213, i64* %PC, align 8
  %214 = inttoptr i64 %211 to i32*
  %215 = load i32, i32* %214, align 4
  %216 = zext i32 %215 to i64
  store i64 %216, i64* %RDI, align 8, !tbaa !2428
  %217 = add i64 %212, -431
  br label %block_400586.backedge

block_400b36:                                     ; preds = %block_400586
  %218 = add i64 %345, -12
  store i64 4197181, i64* %PC, align 8
  %219 = inttoptr i64 %218 to i32*
  store i32 30, i32* %219, align 4
  %220 = load i64, i64* %RBP, align 8
  %221 = add i64 %220, -12
  %222 = load i64, i64* %PC, align 8
  %223 = add i64 %222, 3
  store i64 %223, i64* %PC, align 8
  %224 = inttoptr i64 %221 to i32*
  %225 = load i32, i32* %224, align 4
  %226 = zext i32 %225 to i64
  store i64 %226, i64* %RDI, align 8, !tbaa !2428
  %227 = add i64 %222, -1581
  br label %block_400586.backedge

block_4007b2:                                     ; preds = %block_400586
  %228 = add i64 %345, -12
  store i64 4196281, i64* %PC, align 8
  %229 = inttoptr i64 %228 to i32*
  store i32 12, i32* %229, align 4
  %230 = load i64, i64* %RBP, align 8
  %231 = add i64 %230, -12
  %232 = load i64, i64* %PC, align 8
  %233 = add i64 %232, 3
  store i64 %233, i64* %PC, align 8
  %234 = inttoptr i64 %231 to i32*
  %235 = load i32, i32* %234, align 4
  %236 = zext i32 %235 to i64
  store i64 %236, i64* %RDI, align 8, !tbaa !2428
  %237 = add i64 %232, -681
  br label %block_400586.backedge

block_4008ac:                                     ; preds = %block_400586
  %238 = add i64 %345, -12
  store i64 4196531, i64* %PC, align 8
  %239 = inttoptr i64 %238 to i32*
  store i32 17, i32* %239, align 4
  %240 = load i64, i64* %RBP, align 8
  %241 = add i64 %240, -12
  %242 = load i64, i64* %PC, align 8
  %243 = add i64 %242, 3
  store i64 %243, i64* %PC, align 8
  %244 = inttoptr i64 %241 to i32*
  %245 = load i32, i32* %244, align 4
  %246 = zext i32 %245 to i64
  store i64 %246, i64* %RDI, align 8, !tbaa !2428
  %247 = add i64 %242, -931
  br label %block_400586.backedge

block_4009a6:                                     ; preds = %block_400586
  %248 = add i64 %345, -12
  store i64 4196781, i64* %PC, align 8
  %249 = inttoptr i64 %248 to i32*
  store i32 22, i32* %249, align 4
  %250 = load i64, i64* %RBP, align 8
  %251 = add i64 %250, -12
  %252 = load i64, i64* %PC, align 8
  %253 = add i64 %252, 3
  store i64 %253, i64* %PC, align 8
  %254 = inttoptr i64 %251 to i32*
  %255 = load i32, i32* %254, align 4
  %256 = zext i32 %255 to i64
  store i64 %256, i64* %RDI, align 8, !tbaa !2428
  %257 = add i64 %252, -1181
  br label %block_400586.backedge

block_400622:                                     ; preds = %block_400586
  %258 = add i64 %345, -12
  store i64 4195881, i64* %PC, align 8
  %259 = inttoptr i64 %258 to i32*
  store i32 4, i32* %259, align 4
  %260 = load i64, i64* %RBP, align 8
  %261 = add i64 %260, -12
  %262 = load i64, i64* %PC, align 8
  %263 = add i64 %262, 3
  store i64 %263, i64* %PC, align 8
  %264 = inttoptr i64 %261 to i32*
  %265 = load i32, i32* %264, align 4
  %266 = zext i32 %265 to i64
  store i64 %266, i64* %RDI, align 8, !tbaa !2428
  %267 = add i64 %262, -281
  br label %block_400586.backedge

block_400aa0:                                     ; preds = %block_400586
  %268 = add i64 %345, -12
  store i64 4197031, i64* %PC, align 8
  %269 = inttoptr i64 %268 to i32*
  store i32 27, i32* %269, align 4
  %270 = load i64, i64* %RBP, align 8
  %271 = add i64 %270, -12
  %272 = load i64, i64* %PC, align 8
  %273 = add i64 %272, 3
  store i64 %273, i64* %PC, align 8
  %274 = inttoptr i64 %271 to i32*
  %275 = load i32, i32* %274, align 4
  %276 = zext i32 %275 to i64
  store i64 %276, i64* %RDI, align 8, !tbaa !2428
  %277 = add i64 %272, -1431
  br label %block_400586.backedge

block_40071c:                                     ; preds = %block_400586
  %278 = add i64 %345, -12
  store i64 4196131, i64* %PC, align 8
  %279 = inttoptr i64 %278 to i32*
  store i32 9, i32* %279, align 4
  %280 = load i64, i64* %RBP, align 8
  %281 = add i64 %280, -12
  %282 = load i64, i64* %PC, align 8
  %283 = add i64 %282, 3
  store i64 %283, i64* %PC, align 8
  %284 = inttoptr i64 %281 to i32*
  %285 = load i32, i32* %284, align 4
  %286 = zext i32 %285 to i64
  store i64 %286, i64* %RDI, align 8, !tbaa !2428
  %287 = add i64 %282, -531
  br label %block_400586.backedge

block_400816:                                     ; preds = %block_400586
  %288 = add i64 %345, -12
  store i64 4196381, i64* %PC, align 8
  %289 = inttoptr i64 %288 to i32*
  store i32 14, i32* %289, align 4
  %290 = load i64, i64* %RBP, align 8
  %291 = add i64 %290, -12
  %292 = load i64, i64* %PC, align 8
  %293 = add i64 %292, 3
  store i64 %293, i64* %PC, align 8
  %294 = inttoptr i64 %291 to i32*
  %295 = load i32, i32* %294, align 4
  %296 = zext i32 %295 to i64
  store i64 %296, i64* %RDI, align 8, !tbaa !2428
  %297 = add i64 %292, -781
  br label %block_400586.backedge

block_400a3c:                                     ; preds = %block_400586
  %298 = add i64 %345, -12
  store i64 4196931, i64* %PC, align 8
  %299 = inttoptr i64 %298 to i32*
  store i32 25, i32* %299, align 4
  %.pre = load i64, i64* %PC, align 8
  br label %block_400a43

block_400586:                                     ; preds = %block_400586.backedge, %block_400a43
  %.sink5 = phi i64 [ 1251, %block_400a43 ], [ %.sink5.be, %block_400586.backedge ]
  %300 = load i64, i64* %RBP, align 8
  %301 = add i64 %300, -8
  %302 = load i64, i64* %PC, align 8
  %303 = add i64 %302, 4
  store i64 %303, i64* %PC, align 8
  %304 = inttoptr i64 %301 to i64*
  %305 = load i64, i64* %304, align 8
  store i64 %305, i64* %RAX, align 8, !tbaa !2428
  %306 = add i64 %305, 4
  store i64 %306, i64* %RCX, align 8, !tbaa !2428
  %307 = icmp ugt i64 %305, -5
  %308 = zext i1 %307 to i8
  store i8 %308, i8* %4, align 1, !tbaa !2432
  %309 = trunc i64 %306 to i32
  %310 = and i32 %309, 255
  %311 = tail call i32 @llvm.ctpop.i32(i32 %310) #9
  %312 = trunc i32 %311 to i8
  %313 = and i8 %312, 1
  %314 = xor i8 %313, 1
  store i8 %314, i8* %5, align 1, !tbaa !2446
  %315 = xor i64 %306, %305
  %316 = lshr i64 %315, 4
  %317 = trunc i64 %316 to i8
  %318 = and i8 %317, 1
  store i8 %318, i8* %6, align 1, !tbaa !2447
  %319 = icmp eq i64 %306, 0
  %320 = zext i1 %319 to i8
  store i8 %320, i8* %7, align 1, !tbaa !2448
  %321 = lshr i64 %306, 63
  %322 = trunc i64 %321 to i8
  store i8 %322, i8* %8, align 1, !tbaa !2449
  %323 = lshr i64 %305, 63
  %324 = xor i64 %321, %323
  %325 = add nuw nsw i64 %324, %321
  %326 = icmp eq i64 %325, 2
  %327 = zext i1 %326 to i8
  store i8 %327, i8* %9, align 1, !tbaa !2450
  %328 = add i64 %302, 15
  store i64 %328, i64* %PC, align 8
  store i64 %306, i64* %304, align 8
  %329 = load i32*, i32** %10, align 8
  %330 = load i64, i64* %PC, align 8
  %331 = add i64 %330, 3
  store i64 %331, i64* %PC, align 8
  %332 = load i32, i32* %329, align 4
  %333 = sext i32 %332 to i64
  store i64 %333, i64* %RAX, align 8, !tbaa !2428
  %334 = shl nsw i64 %333, 3
  %335 = add i64 %334, add (i64 ptrtoint (%seg_602020__data_type* @seg_602020__data to i64), i64 16)
  %336 = add i64 %330, 11
  store i64 %336, i64* %PC, align 8
  %337 = inttoptr i64 %335 to i64*
  %338 = load i64, i64* %337, align 8
  store i64 %338, i64* %RAX, align 8, !tbaa !2428
  %339 = load i64, i64* %RBP, align 8
  %340 = add i64 %339, -40
  %341 = add i64 %330, 15
  store i64 %341, i64* %PC, align 8
  %342 = inttoptr i64 %340 to i64*
  store i64 %338, i64* %342, align 8
  %343 = load i64, i64* %PC, align 8
  %344 = sub i64 %343, %.sink5
  %345 = load i64, i64* %RBP, align 8
  %346 = add i64 %345, -40
  %347 = add i64 %344, 4
  store i64 %347, i64* %PC, align 8
  %348 = inttoptr i64 %346 to i64*
  %349 = load i64, i64* %348, align 8
  store i64 %349, i64* %RAX, align 8, !tbaa !2428
  store i64 %349, i64* %PC, align 8, !tbaa !2428
  switch i64 %349, label %410 [
    i64 4196224, label %block_400780
    i64 4197124, label %block_400b04
    i64 4195974, label %block_400686
    i64 4196874, label %block_400a0a
    i64 4196624, label %block_400910
    i64 4196924, label %block_400a3c
    i64 4196374, label %block_400816
    i64 4196124, label %block_40071c
    i64 4197024, label %block_400aa0
    i64 4196574, label %block_4008de
    i64 4196324, label %block_4007e4
    i64 4197224, label %block_400b68
    i64 4196074, label %block_4006ea
    i64 4195924, label %block_400654
    i64 4197074, label %block_400ad2
    i64 4196474, label %block_40087a
    i64 4196824, label %block_4009d8
    i64 4195724, label %block_40058c
    i64 4196724, label %block_400974
    i64 4195824, label %block_4005f0
    i64 4196974, label %block_400a6e
    i64 4195705, label %block_400579
    i64 4195774, label %block_4005be
    i64 4196174, label %block_40074e
    i64 4196424, label %block_400848
    i64 4196674, label %block_400942
    i64 4196024, label %block_4006b8
    i64 4197174, label %block_400b36
    i64 4196274, label %block_4007b2
    i64 4196524, label %block_4008ac
    i64 4196774, label %block_4009a6
    i64 4195874, label %block_400622
  ]

block_400910:                                     ; preds = %block_400586
  %350 = add i64 %345, -12
  store i64 4196631, i64* %PC, align 8
  %351 = inttoptr i64 %350 to i32*
  store i32 19, i32* %351, align 4
  %352 = load i64, i64* %RBP, align 8
  %353 = add i64 %352, -12
  %354 = load i64, i64* %PC, align 8
  %355 = add i64 %354, 3
  store i64 %355, i64* %PC, align 8
  %356 = inttoptr i64 %353 to i32*
  %357 = load i32, i32* %356, align 4
  %358 = zext i32 %357 to i64
  store i64 %358, i64* %RDI, align 8, !tbaa !2428
  %359 = add i64 %354, -1031
  br label %block_400586.backedge

block_40058c:                                     ; preds = %block_400586
  %360 = add i64 %345, -12
  store i64 4195731, i64* %PC, align 8
  %361 = inttoptr i64 %360 to i32*
  store i32 1, i32* %361, align 4
  %362 = load i64, i64* %RBP, align 8
  %363 = add i64 %362, -12
  %364 = load i64, i64* %PC, align 8
  %365 = add i64 %364, 3
  store i64 %365, i64* %PC, align 8
  %366 = inttoptr i64 %363 to i32*
  %367 = load i32, i32* %366, align 4
  %368 = zext i32 %367 to i64
  store i64 %368, i64* %RDI, align 8, !tbaa !2428
  %369 = add i64 %364, -131
  br label %block_400586.backedge

block_400a0a:                                     ; preds = %block_400586
  %370 = add i64 %345, -12
  store i64 4196881, i64* %PC, align 8
  %371 = inttoptr i64 %370 to i32*
  store i32 24, i32* %371, align 4
  %372 = load i64, i64* %RBP, align 8
  %373 = add i64 %372, -12
  %374 = load i64, i64* %PC, align 8
  %375 = add i64 %374, 3
  store i64 %375, i64* %PC, align 8
  %376 = inttoptr i64 %373 to i32*
  %377 = load i32, i32* %376, align 4
  %378 = zext i32 %377 to i64
  store i64 %378, i64* %RDI, align 8, !tbaa !2428
  %379 = add i64 %374, -1281
  br label %block_400586.backedge

block_400686:                                     ; preds = %block_400586
  %380 = add i64 %345, -12
  store i64 4195981, i64* %PC, align 8
  %381 = inttoptr i64 %380 to i32*
  store i32 6, i32* %381, align 4
  %382 = load i64, i64* %RBP, align 8
  %383 = add i64 %382, -12
  %384 = load i64, i64* %PC, align 8
  %385 = add i64 %384, 3
  store i64 %385, i64* %PC, align 8
  %386 = inttoptr i64 %383 to i32*
  %387 = load i32, i32* %386, align 4
  %388 = zext i32 %387 to i64
  store i64 %388, i64* %RDI, align 8, !tbaa !2428
  %389 = add i64 %384, -381
  br label %block_400586.backedge

block_400b04:                                     ; preds = %block_400586
  %390 = add i64 %345, -12
  store i64 4197131, i64* %PC, align 8
  %391 = inttoptr i64 %390 to i32*
  store i32 29, i32* %391, align 4
  %392 = load i64, i64* %RBP, align 8
  %393 = add i64 %392, -12
  %394 = load i64, i64* %PC, align 8
  %395 = add i64 %394, 3
  store i64 %395, i64* %PC, align 8
  %396 = inttoptr i64 %393 to i32*
  %397 = load i32, i32* %396, align 4
  %398 = zext i32 %397 to i64
  store i64 %398, i64* %RDI, align 8, !tbaa !2428
  %399 = add i64 %394, -1531
  br label %block_400586.backedge

block_400780:                                     ; preds = %block_400586
  %400 = add i64 %345, -12
  store i64 4196231, i64* %PC, align 8
  %401 = inttoptr i64 %400 to i32*
  store i32 11, i32* %401, align 4
  %402 = load i64, i64* %RBP, align 8
  %403 = add i64 %402, -12
  %404 = load i64, i64* %PC, align 8
  %405 = add i64 %404, 3
  store i64 %405, i64* %PC, align 8
  %406 = inttoptr i64 %403 to i32*
  %407 = load i32, i32* %406, align 4
  %408 = zext i32 %407 to i64
  store i64 %408, i64* %RDI, align 8, !tbaa !2428
  %409 = add i64 %404, -631
  br label %block_400586.backedge

; <label>:410:                                    ; preds = %block_400586
  %411 = tail call %struct.Memory* @__remill_jump(%struct.State* nonnull %0, i64 %349, %struct.Memory* %2)
  ret %struct.Memory* %411
}

; Function Attrs: noinline nounwind
define %struct.Memory* @sub_400ad9(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) local_unnamed_addr #6 {
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %PC, align 8
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RSP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %10 = bitcast i64* %RAX to i32**
  br label %block_400ad9

block_40087a:                                     ; preds = %block_400586
  %11 = add i64 %252, -12
  store i64 4196481, i64* %PC, align 8
  %12 = inttoptr i64 %11 to i32*
  store i32 16, i32* %12, align 4
  %13 = load i64, i64* %PC, align 8
  %14 = tail call %struct.Memory* @sub_400881(%struct.State* nonnull %0, i64 %13, %struct.Memory* %2)
  ret %struct.Memory* %14

block_400974:                                     ; preds = %block_400586
  %15 = add i64 %252, -12
  store i64 4196731, i64* %PC, align 8
  %16 = inttoptr i64 %15 to i32*
  store i32 21, i32* %16, align 4
  %17 = load i64, i64* %RBP, align 8
  %18 = add i64 %17, -12
  %19 = load i64, i64* %PC, align 8
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC, align 8
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RDI, align 8, !tbaa !2428
  %24 = add i64 %19, -1131
  br label %block_400586.backedge

block_400586.backedge:                            ; preds = %block_400974, %block_400a6e, %block_4006ea, %block_400b68, %block_4007e4, %block_4008de, %block_4009d8, %block_400654, %block_4005f0, %block_4006b8, %block_400b36, %block_4007b2, %block_4008ac, %block_400622, %block_400aa0, %block_40071c, %block_400816, %block_4009a6
  %.sink186 = phi i64 [ %19, %block_400974 ], [ %34, %block_400a6e ], [ %44, %block_4006ea ], [ %54, %block_400b68 ], [ %64, %block_4007e4 ], [ %74, %block_4008de ], [ %84, %block_4009d8 ], [ %94, %block_400654 ], [ %122, %block_4005f0 ], [ %136, %block_4006b8 ], [ %146, %block_400b36 ], [ %191, %block_4007b2 ], [ %201, %block_4008ac ], [ %261, %block_400622 ], [ %271, %block_400aa0 ], [ %281, %block_40071c ], [ %291, %block_400816 ], [ %338, %block_4009a6 ]
  %.sink181 = phi i64 [ %24, %block_400974 ], [ %39, %block_400a6e ], [ %49, %block_4006ea ], [ %59, %block_400b68 ], [ %69, %block_4007e4 ], [ %79, %block_4008de ], [ %89, %block_4009d8 ], [ %99, %block_400654 ], [ %127, %block_4005f0 ], [ %141, %block_4006b8 ], [ %151, %block_400b36 ], [ %196, %block_4007b2 ], [ %206, %block_4008ac ], [ %266, %block_400622 ], [ %276, %block_400aa0 ], [ %286, %block_40071c ], [ %296, %block_400816 ], [ %343, %block_4009a6 ]
  %.sink5.be = phi i64 [ 1051, %block_400974 ], [ 1301, %block_400a6e ], [ 401, %block_4006ea ], [ 1551, %block_400b68 ], [ 651, %block_4007e4 ], [ 901, %block_4008de ], [ 1151, %block_4009d8 ], [ 251, %block_400654 ], [ 151, %block_4005f0 ], [ 351, %block_4006b8 ], [ 1501, %block_400b36 ], [ 601, %block_4007b2 ], [ 851, %block_4008ac ], [ 201, %block_400622 ], [ 1351, %block_400aa0 ], [ 451, %block_40071c ], [ 701, %block_400816 ], [ 1101, %block_4009a6 ]
  %25 = add i64 %.sink186, 8
  %26 = load i64, i64* %RSP, align 8, !tbaa !2428
  %27 = add i64 %26, -8
  %28 = inttoptr i64 %27 to i64*
  store i64 %25, i64* %28, align 8
  store i64 %27, i64* %RSP, align 8, !tbaa !2428
  store i64 %.sink181, i64* %PC, align 8, !tbaa !2428
  %29 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %.sink181, %struct.Memory* %2)
  br label %block_400586

block_400a6e:                                     ; preds = %block_400586
  %30 = add i64 %252, -12
  store i64 4196981, i64* %PC, align 8
  %31 = inttoptr i64 %30 to i32*
  store i32 26, i32* %31, align 4
  %32 = load i64, i64* %RBP, align 8
  %33 = add i64 %32, -12
  %34 = load i64, i64* %PC, align 8
  %35 = add i64 %34, 3
  store i64 %35, i64* %PC, align 8
  %36 = inttoptr i64 %33 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i64
  store i64 %38, i64* %RDI, align 8, !tbaa !2428
  %39 = add i64 %34, -1381
  br label %block_400586.backedge

block_4006ea:                                     ; preds = %block_400586
  %40 = add i64 %252, -12
  store i64 4196081, i64* %PC, align 8
  %41 = inttoptr i64 %40 to i32*
  store i32 8, i32* %41, align 4
  %42 = load i64, i64* %RBP, align 8
  %43 = add i64 %42, -12
  %44 = load i64, i64* %PC, align 8
  %45 = add i64 %44, 3
  store i64 %45, i64* %PC, align 8
  %46 = inttoptr i64 %43 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = zext i32 %47 to i64
  store i64 %48, i64* %RDI, align 8, !tbaa !2428
  %49 = add i64 %44, -481
  br label %block_400586.backedge

block_400b68:                                     ; preds = %block_400586
  %50 = add i64 %252, -12
  store i64 4197231, i64* %PC, align 8
  %51 = inttoptr i64 %50 to i32*
  store i32 31, i32* %51, align 4
  %52 = load i64, i64* %RBP, align 8
  %53 = add i64 %52, -12
  %54 = load i64, i64* %PC, align 8
  %55 = add i64 %54, 3
  store i64 %55, i64* %PC, align 8
  %56 = inttoptr i64 %53 to i32*
  %57 = load i32, i32* %56, align 4
  %58 = zext i32 %57 to i64
  store i64 %58, i64* %RDI, align 8, !tbaa !2428
  %59 = add i64 %54, -1631
  br label %block_400586.backedge

block_4007e4:                                     ; preds = %block_400586
  %60 = add i64 %252, -12
  store i64 4196331, i64* %PC, align 8
  %61 = inttoptr i64 %60 to i32*
  store i32 13, i32* %61, align 4
  %62 = load i64, i64* %RBP, align 8
  %63 = add i64 %62, -12
  %64 = load i64, i64* %PC, align 8
  %65 = add i64 %64, 3
  store i64 %65, i64* %PC, align 8
  %66 = inttoptr i64 %63 to i32*
  %67 = load i32, i32* %66, align 4
  %68 = zext i32 %67 to i64
  store i64 %68, i64* %RDI, align 8, !tbaa !2428
  %69 = add i64 %64, -731
  br label %block_400586.backedge

block_4008de:                                     ; preds = %block_400586
  %70 = add i64 %252, -12
  store i64 4196581, i64* %PC, align 8
  %71 = inttoptr i64 %70 to i32*
  store i32 18, i32* %71, align 4
  %72 = load i64, i64* %RBP, align 8
  %73 = add i64 %72, -12
  %74 = load i64, i64* %PC, align 8
  %75 = add i64 %74, 3
  store i64 %75, i64* %PC, align 8
  %76 = inttoptr i64 %73 to i32*
  %77 = load i32, i32* %76, align 4
  %78 = zext i32 %77 to i64
  store i64 %78, i64* %RDI, align 8, !tbaa !2428
  %79 = add i64 %74, -981
  br label %block_400586.backedge

block_4009d8:                                     ; preds = %block_400586
  %80 = add i64 %252, -12
  store i64 4196831, i64* %PC, align 8
  %81 = inttoptr i64 %80 to i32*
  store i32 23, i32* %81, align 4
  %82 = load i64, i64* %RBP, align 8
  %83 = add i64 %82, -12
  %84 = load i64, i64* %PC, align 8
  %85 = add i64 %84, 3
  store i64 %85, i64* %PC, align 8
  %86 = inttoptr i64 %83 to i32*
  %87 = load i32, i32* %86, align 4
  %88 = zext i32 %87 to i64
  store i64 %88, i64* %RDI, align 8, !tbaa !2428
  %89 = add i64 %84, -1231
  br label %block_400586.backedge

block_400654:                                     ; preds = %block_400586
  %90 = add i64 %252, -12
  store i64 4195931, i64* %PC, align 8
  %91 = inttoptr i64 %90 to i32*
  store i32 5, i32* %91, align 4
  %92 = load i64, i64* %RBP, align 8
  %93 = add i64 %92, -12
  %94 = load i64, i64* %PC, align 8
  %95 = add i64 %94, 3
  store i64 %95, i64* %PC, align 8
  %96 = inttoptr i64 %93 to i32*
  %97 = load i32, i32* %96, align 4
  %98 = zext i32 %97 to i64
  store i64 %98, i64* %RDI, align 8, !tbaa !2428
  %99 = add i64 %94, -331
  br label %block_400586.backedge

block_400ad2:                                     ; preds = %block_400586
  %100 = add i64 %252, -12
  store i64 4197081, i64* %PC, align 8
  %101 = inttoptr i64 %100 to i32*
  store i32 28, i32* %101, align 4
  %.pre = load i64, i64* %PC, align 8
  br label %block_400ad9

block_40074e:                                     ; preds = %block_400586
  %102 = add i64 %252, -12
  store i64 4196181, i64* %PC, align 8
  %103 = inttoptr i64 %102 to i32*
  store i32 10, i32* %103, align 4
  %104 = load i64, i64* %PC, align 8
  %105 = tail call %struct.Memory* @sub_400755(%struct.State* nonnull %0, i64 %104, %struct.Memory* %2)
  ret %struct.Memory* %105

block_400848:                                     ; preds = %block_400586
  %106 = add i64 %252, -12
  store i64 4196431, i64* %PC, align 8
  %107 = inttoptr i64 %106 to i32*
  store i32 15, i32* %107, align 4
  %108 = load i64, i64* %PC, align 8
  %109 = tail call %struct.Memory* @sub_40084f(%struct.State* nonnull %0, i64 %108, %struct.Memory* %2)
  ret %struct.Memory* %109

block_400942:                                     ; preds = %block_400586
  %110 = add i64 %252, -12
  store i64 4196681, i64* %PC, align 8
  %111 = inttoptr i64 %110 to i32*
  store i32 20, i32* %111, align 4
  %112 = load i64, i64* %PC, align 8
  %113 = tail call %struct.Memory* @sub_400949(%struct.State* nonnull %0, i64 %112, %struct.Memory* %2)
  ret %struct.Memory* %113

block_4005be:                                     ; preds = %block_400586
  %114 = add i64 %252, -12
  store i64 4195781, i64* %PC, align 8
  %115 = inttoptr i64 %114 to i32*
  store i32 2, i32* %115, align 4
  %116 = load i64, i64* %PC, align 8
  %117 = tail call %struct.Memory* @sub_4005c5(%struct.State* nonnull %0, i64 %116, %struct.Memory* %2)
  ret %struct.Memory* %117

block_4005f0:                                     ; preds = %block_400586
  %118 = add i64 %252, -12
  store i64 4195831, i64* %PC, align 8
  %119 = inttoptr i64 %118 to i32*
  store i32 3, i32* %119, align 4
  %120 = load i64, i64* %RBP, align 8
  %121 = add i64 %120, -12
  %122 = load i64, i64* %PC, align 8
  %123 = add i64 %122, 3
  store i64 %123, i64* %PC, align 8
  %124 = inttoptr i64 %121 to i32*
  %125 = load i32, i32* %124, align 4
  %126 = zext i32 %125 to i64
  store i64 %126, i64* %RDI, align 8, !tbaa !2428
  %127 = add i64 %122, -231
  br label %block_400586.backedge

block_400a3c:                                     ; preds = %block_400586
  %128 = add i64 %252, -12
  store i64 4196931, i64* %PC, align 8
  %129 = inttoptr i64 %128 to i32*
  store i32 25, i32* %129, align 4
  %130 = load i64, i64* %PC, align 8
  %131 = tail call %struct.Memory* @sub_400a43(%struct.State* nonnull %0, i64 %130, %struct.Memory* %2)
  ret %struct.Memory* %131

block_4006b8:                                     ; preds = %block_400586
  %132 = add i64 %252, -12
  store i64 4196031, i64* %PC, align 8
  %133 = inttoptr i64 %132 to i32*
  store i32 7, i32* %133, align 4
  %134 = load i64, i64* %RBP, align 8
  %135 = add i64 %134, -12
  %136 = load i64, i64* %PC, align 8
  %137 = add i64 %136, 3
  store i64 %137, i64* %PC, align 8
  %138 = inttoptr i64 %135 to i32*
  %139 = load i32, i32* %138, align 4
  %140 = zext i32 %139 to i64
  store i64 %140, i64* %RDI, align 8, !tbaa !2428
  %141 = add i64 %136, -431
  br label %block_400586.backedge

block_400b36:                                     ; preds = %block_400586
  %142 = add i64 %252, -12
  store i64 4197181, i64* %PC, align 8
  %143 = inttoptr i64 %142 to i32*
  store i32 30, i32* %143, align 4
  %144 = load i64, i64* %RBP, align 8
  %145 = add i64 %144, -12
  %146 = load i64, i64* %PC, align 8
  %147 = add i64 %146, 3
  store i64 %147, i64* %PC, align 8
  %148 = inttoptr i64 %145 to i32*
  %149 = load i32, i32* %148, align 4
  %150 = zext i32 %149 to i64
  store i64 %150, i64* %RDI, align 8, !tbaa !2428
  %151 = add i64 %146, -1581
  br label %block_400586.backedge

block_400579:                                     ; preds = %block_400586
  %152 = add i64 %252, -12
  store i64 4195712, i64* %PC, align 8
  %153 = inttoptr i64 %152 to i32*
  store i32 0, i32* %153, align 4
  %154 = load i64, i64* %RSP, align 8
  %155 = load i64, i64* %PC, align 8
  %156 = add i64 %154, 48
  store i64 %156, i64* %RSP, align 8, !tbaa !2428
  %157 = icmp ugt i64 %154, -49
  %158 = zext i1 %157 to i8
  store i8 %158, i8* %4, align 1, !tbaa !2432
  %159 = trunc i64 %156 to i32
  %160 = and i32 %159, 255
  %161 = tail call i32 @llvm.ctpop.i32(i32 %160) #9
  %162 = trunc i32 %161 to i8
  %163 = and i8 %162, 1
  %164 = xor i8 %163, 1
  store i8 %164, i8* %5, align 1, !tbaa !2446
  %165 = xor i64 %154, 16
  %166 = xor i64 %165, %156
  %167 = lshr i64 %166, 4
  %168 = trunc i64 %167 to i8
  %169 = and i8 %168, 1
  store i8 %169, i8* %6, align 1, !tbaa !2447
  %170 = icmp eq i64 %156, 0
  %171 = zext i1 %170 to i8
  store i8 %171, i8* %7, align 1, !tbaa !2448
  %172 = lshr i64 %156, 63
  %173 = trunc i64 %172 to i8
  store i8 %173, i8* %8, align 1, !tbaa !2449
  %174 = lshr i64 %154, 63
  %175 = xor i64 %172, %174
  %176 = add nuw nsw i64 %175, %172
  %177 = icmp eq i64 %176, 2
  %178 = zext i1 %177 to i8
  store i8 %178, i8* %9, align 1, !tbaa !2450
  %179 = add i64 %155, 5
  store i64 %179, i64* %PC, align 8
  %180 = add i64 %154, 56
  %181 = inttoptr i64 %156 to i64*
  %182 = load i64, i64* %181, align 8
  store i64 %182, i64* %RBP, align 8, !tbaa !2428
  store i64 %180, i64* %RSP, align 8, !tbaa !2428
  %183 = add i64 %155, 6
  store i64 %183, i64* %PC, align 8
  %184 = inttoptr i64 %180 to i64*
  %185 = load i64, i64* %184, align 8
  store i64 %185, i64* %PC, align 8, !tbaa !2428
  %186 = add i64 %154, 64
  store i64 %186, i64* %RSP, align 8, !tbaa !2428
  ret %struct.Memory* %2

block_4007b2:                                     ; preds = %block_400586
  %187 = add i64 %252, -12
  store i64 4196281, i64* %PC, align 8
  %188 = inttoptr i64 %187 to i32*
  store i32 12, i32* %188, align 4
  %189 = load i64, i64* %RBP, align 8
  %190 = add i64 %189, -12
  %191 = load i64, i64* %PC, align 8
  %192 = add i64 %191, 3
  store i64 %192, i64* %PC, align 8
  %193 = inttoptr i64 %190 to i32*
  %194 = load i32, i32* %193, align 4
  %195 = zext i32 %194 to i64
  store i64 %195, i64* %RDI, align 8, !tbaa !2428
  %196 = add i64 %191, -681
  br label %block_400586.backedge

block_4008ac:                                     ; preds = %block_400586
  %197 = add i64 %252, -12
  store i64 4196531, i64* %PC, align 8
  %198 = inttoptr i64 %197 to i32*
  store i32 17, i32* %198, align 4
  %199 = load i64, i64* %RBP, align 8
  %200 = add i64 %199, -12
  %201 = load i64, i64* %PC, align 8
  %202 = add i64 %201, 3
  store i64 %202, i64* %PC, align 8
  %203 = inttoptr i64 %200 to i32*
  %204 = load i32, i32* %203, align 4
  %205 = zext i32 %204 to i64
  store i64 %205, i64* %RDI, align 8, !tbaa !2428
  %206 = add i64 %201, -931
  br label %block_400586.backedge

block_400586:                                     ; preds = %block_400586.backedge, %block_400ad9
  %.sink5 = phi i64 [ 1401, %block_400ad9 ], [ %.sink5.be, %block_400586.backedge ]
  %207 = load i64, i64* %RBP, align 8
  %208 = add i64 %207, -8
  %209 = load i64, i64* %PC, align 8
  %210 = add i64 %209, 4
  store i64 %210, i64* %PC, align 8
  %211 = inttoptr i64 %208 to i64*
  %212 = load i64, i64* %211, align 8
  store i64 %212, i64* %RAX, align 8, !tbaa !2428
  %213 = add i64 %212, 4
  store i64 %213, i64* %RCX, align 8, !tbaa !2428
  %214 = icmp ugt i64 %212, -5
  %215 = zext i1 %214 to i8
  store i8 %215, i8* %4, align 1, !tbaa !2432
  %216 = trunc i64 %213 to i32
  %217 = and i32 %216, 255
  %218 = tail call i32 @llvm.ctpop.i32(i32 %217) #9
  %219 = trunc i32 %218 to i8
  %220 = and i8 %219, 1
  %221 = xor i8 %220, 1
  store i8 %221, i8* %5, align 1, !tbaa !2446
  %222 = xor i64 %213, %212
  %223 = lshr i64 %222, 4
  %224 = trunc i64 %223 to i8
  %225 = and i8 %224, 1
  store i8 %225, i8* %6, align 1, !tbaa !2447
  %226 = icmp eq i64 %213, 0
  %227 = zext i1 %226 to i8
  store i8 %227, i8* %7, align 1, !tbaa !2448
  %228 = lshr i64 %213, 63
  %229 = trunc i64 %228 to i8
  store i8 %229, i8* %8, align 1, !tbaa !2449
  %230 = lshr i64 %212, 63
  %231 = xor i64 %228, %230
  %232 = add nuw nsw i64 %231, %228
  %233 = icmp eq i64 %232, 2
  %234 = zext i1 %233 to i8
  store i8 %234, i8* %9, align 1, !tbaa !2450
  %235 = add i64 %209, 15
  store i64 %235, i64* %PC, align 8
  store i64 %213, i64* %211, align 8
  %236 = load i32*, i32** %10, align 8
  %237 = load i64, i64* %PC, align 8
  %238 = add i64 %237, 3
  store i64 %238, i64* %PC, align 8
  %239 = load i32, i32* %236, align 4
  %240 = sext i32 %239 to i64
  store i64 %240, i64* %RAX, align 8, !tbaa !2428
  %241 = shl nsw i64 %240, 3
  %242 = add i64 %241, add (i64 ptrtoint (%seg_602020__data_type* @seg_602020__data to i64), i64 16)
  %243 = add i64 %237, 11
  store i64 %243, i64* %PC, align 8
  %244 = inttoptr i64 %242 to i64*
  %245 = load i64, i64* %244, align 8
  store i64 %245, i64* %RAX, align 8, !tbaa !2428
  %246 = load i64, i64* %RBP, align 8
  %247 = add i64 %246, -40
  %248 = add i64 %237, 15
  store i64 %248, i64* %PC, align 8
  %249 = inttoptr i64 %247 to i64*
  store i64 %245, i64* %249, align 8
  %250 = load i64, i64* %PC, align 8
  %251 = sub i64 %250, %.sink5
  %252 = load i64, i64* %RBP, align 8
  %253 = add i64 %252, -40
  %254 = add i64 %251, 4
  store i64 %254, i64* %PC, align 8
  %255 = inttoptr i64 %253 to i64*
  %256 = load i64, i64* %255, align 8
  store i64 %256, i64* %RAX, align 8, !tbaa !2428
  store i64 %256, i64* %PC, align 8, !tbaa !2428
  switch i64 %256, label %344 [
    i64 4196774, label %block_4009a6
    i64 4196224, label %block_400780
    i64 4197124, label %block_400b04
    i64 4195974, label %block_400686
    i64 4196874, label %block_400a0a
    i64 4196624, label %block_400910
    i64 4196374, label %block_400816
    i64 4196124, label %block_40071c
    i64 4197024, label %block_400aa0
    i64 4197074, label %block_400ad2
    i64 4195924, label %block_400654
    i64 4196574, label %block_4008de
    i64 4196324, label %block_4007e4
    i64 4197224, label %block_400b68
    i64 4196074, label %block_4006ea
    i64 4196474, label %block_40087a
    i64 4196824, label %block_4009d8
    i64 4195724, label %block_40058c
    i64 4196724, label %block_400974
    i64 4195824, label %block_4005f0
    i64 4196174, label %block_40074e
    i64 4196424, label %block_400848
    i64 4196674, label %block_400942
    i64 4195774, label %block_4005be
    i64 4196924, label %block_400a3c
    i64 4196974, label %block_400a6e
    i64 4195705, label %block_400579
    i64 4196024, label %block_4006b8
    i64 4197174, label %block_400b36
    i64 4196274, label %block_4007b2
    i64 4196524, label %block_4008ac
    i64 4195874, label %block_400622
  ]

block_400622:                                     ; preds = %block_400586
  %257 = add i64 %252, -12
  store i64 4195881, i64* %PC, align 8
  %258 = inttoptr i64 %257 to i32*
  store i32 4, i32* %258, align 4
  %259 = load i64, i64* %RBP, align 8
  %260 = add i64 %259, -12
  %261 = load i64, i64* %PC, align 8
  %262 = add i64 %261, 3
  store i64 %262, i64* %PC, align 8
  %263 = inttoptr i64 %260 to i32*
  %264 = load i32, i32* %263, align 4
  %265 = zext i32 %264 to i64
  store i64 %265, i64* %RDI, align 8, !tbaa !2428
  %266 = add i64 %261, -281
  br label %block_400586.backedge

block_400aa0:                                     ; preds = %block_400586
  %267 = add i64 %252, -12
  store i64 4197031, i64* %PC, align 8
  %268 = inttoptr i64 %267 to i32*
  store i32 27, i32* %268, align 4
  %269 = load i64, i64* %RBP, align 8
  %270 = add i64 %269, -12
  %271 = load i64, i64* %PC, align 8
  %272 = add i64 %271, 3
  store i64 %272, i64* %PC, align 8
  %273 = inttoptr i64 %270 to i32*
  %274 = load i32, i32* %273, align 4
  %275 = zext i32 %274 to i64
  store i64 %275, i64* %RDI, align 8, !tbaa !2428
  %276 = add i64 %271, -1431
  br label %block_400586.backedge

block_40071c:                                     ; preds = %block_400586
  %277 = add i64 %252, -12
  store i64 4196131, i64* %PC, align 8
  %278 = inttoptr i64 %277 to i32*
  store i32 9, i32* %278, align 4
  %279 = load i64, i64* %RBP, align 8
  %280 = add i64 %279, -12
  %281 = load i64, i64* %PC, align 8
  %282 = add i64 %281, 3
  store i64 %282, i64* %PC, align 8
  %283 = inttoptr i64 %280 to i32*
  %284 = load i32, i32* %283, align 4
  %285 = zext i32 %284 to i64
  store i64 %285, i64* %RDI, align 8, !tbaa !2428
  %286 = add i64 %281, -531
  br label %block_400586.backedge

block_400816:                                     ; preds = %block_400586
  %287 = add i64 %252, -12
  store i64 4196381, i64* %PC, align 8
  %288 = inttoptr i64 %287 to i32*
  store i32 14, i32* %288, align 4
  %289 = load i64, i64* %RBP, align 8
  %290 = add i64 %289, -12
  %291 = load i64, i64* %PC, align 8
  %292 = add i64 %291, 3
  store i64 %292, i64* %PC, align 8
  %293 = inttoptr i64 %290 to i32*
  %294 = load i32, i32* %293, align 4
  %295 = zext i32 %294 to i64
  store i64 %295, i64* %RDI, align 8, !tbaa !2428
  %296 = add i64 %291, -781
  br label %block_400586.backedge

block_400910:                                     ; preds = %block_400586
  %297 = add i64 %252, -12
  store i64 4196631, i64* %PC, align 8
  %298 = inttoptr i64 %297 to i32*
  store i32 19, i32* %298, align 4
  %299 = load i64, i64* %PC, align 8
  %300 = tail call %struct.Memory* @sub_400917(%struct.State* nonnull %0, i64 %299, %struct.Memory* %2)
  ret %struct.Memory* %300

block_400ad9:                                     ; preds = %block_400ad2, %3
  %301 = phi i64 [ %.pre, %block_400ad2 ], [ %1, %3 ]
  %302 = load i64, i64* %RBP, align 8
  %303 = add i64 %302, -12
  %304 = add i64 %301, 3
  store i64 %304, i64* %PC, align 8
  %305 = inttoptr i64 %303 to i32*
  %306 = load i32, i32* %305, align 4
  %307 = zext i32 %306 to i64
  store i64 %307, i64* %RDI, align 8, !tbaa !2428
  %308 = add i64 %301, -1481
  %309 = add i64 %301, 8
  %310 = load i64, i64* %RSP, align 8, !tbaa !2428
  %311 = add i64 %310, -8
  %312 = inttoptr i64 %311 to i64*
  store i64 %309, i64* %312, align 8
  store i64 %311, i64* %RSP, align 8, !tbaa !2428
  store i64 %308, i64* %PC, align 8, !tbaa !2428
  %313 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %308, %struct.Memory* %2)
  br label %block_400586

block_40058c:                                     ; preds = %block_400586
  %314 = add i64 %252, -12
  store i64 4195731, i64* %PC, align 8
  %315 = inttoptr i64 %314 to i32*
  store i32 1, i32* %315, align 4
  %316 = load i64, i64* %PC, align 8
  %317 = tail call %struct.Memory* @sub_400593(%struct.State* nonnull %0, i64 %316, %struct.Memory* %2)
  ret %struct.Memory* %317

block_400a0a:                                     ; preds = %block_400586
  %318 = add i64 %252, -12
  store i64 4196881, i64* %PC, align 8
  %319 = inttoptr i64 %318 to i32*
  store i32 24, i32* %319, align 4
  %320 = load i64, i64* %PC, align 8
  %321 = tail call %struct.Memory* @sub_400a11(%struct.State* nonnull %0, i64 %320, %struct.Memory* %2)
  ret %struct.Memory* %321

block_400686:                                     ; preds = %block_400586
  %322 = add i64 %252, -12
  store i64 4195981, i64* %PC, align 8
  %323 = inttoptr i64 %322 to i32*
  store i32 6, i32* %323, align 4
  %324 = load i64, i64* %PC, align 8
  %325 = tail call %struct.Memory* @sub_40068d(%struct.State* nonnull %0, i64 %324, %struct.Memory* %2)
  ret %struct.Memory* %325

block_400b04:                                     ; preds = %block_400586
  %326 = add i64 %252, -12
  store i64 4197131, i64* %PC, align 8
  %327 = inttoptr i64 %326 to i32*
  store i32 29, i32* %327, align 4
  %328 = load i64, i64* %PC, align 8
  %329 = tail call %struct.Memory* @sub_400b0b(%struct.State* nonnull %0, i64 %328, %struct.Memory* %2)
  ret %struct.Memory* %329

block_400780:                                     ; preds = %block_400586
  %330 = add i64 %252, -12
  store i64 4196231, i64* %PC, align 8
  %331 = inttoptr i64 %330 to i32*
  store i32 11, i32* %331, align 4
  %332 = load i64, i64* %PC, align 8
  %333 = tail call %struct.Memory* @sub_400787(%struct.State* nonnull %0, i64 %332, %struct.Memory* %2)
  ret %struct.Memory* %333

block_4009a6:                                     ; preds = %block_400586
  %334 = add i64 %252, -12
  store i64 4196781, i64* %PC, align 8
  %335 = inttoptr i64 %334 to i32*
  store i32 22, i32* %335, align 4
  %336 = load i64, i64* %RBP, align 8
  %337 = add i64 %336, -12
  %338 = load i64, i64* %PC, align 8
  %339 = add i64 %338, 3
  store i64 %339, i64* %PC, align 8
  %340 = inttoptr i64 %337 to i32*
  %341 = load i32, i32* %340, align 4
  %342 = zext i32 %341 to i64
  store i64 %342, i64* %RDI, align 8, !tbaa !2428
  %343 = add i64 %338, -1181
  br label %block_400586.backedge

; <label>:344:                                    ; preds = %block_400586
  %345 = tail call %struct.Memory* @__remill_jump(%struct.State* nonnull %0, i64 %256, %struct.Memory* %2)
  ret %struct.Memory* %345
}

; Function Attrs: noinline nounwind
define %struct.Memory* @sub_400530_eval(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) local_unnamed_addr #6 {
block_400530:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RSP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %1, 1
  store i64 %4, i64* %PC, align 8
  %5 = load i64, i64* %RSP, align 8, !tbaa !2428
  %6 = add i64 %5, -8
  %7 = inttoptr i64 %6 to i64*
  store i64 %3, i64* %7, align 8
  %8 = load i64, i64* %PC, align 8
  store i64 %6, i64* %RBP, align 8, !tbaa !2428
  %9 = add i64 %5, -56
  store i64 %9, i64* %RSP, align 8, !tbaa !2428
  %10 = icmp ult i64 %6, 48
  %11 = zext i1 %10 to i8
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11, i8* %12, align 1, !tbaa !2432
  %13 = trunc i64 %9 to i32
  %14 = and i32 %13, 255
  %15 = tail call i32 @llvm.ctpop.i32(i32 %14) #9
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1, !tbaa !2446
  %20 = xor i64 %6, 16
  %21 = xor i64 %20, %9
  %22 = lshr i64 %21, 4
  %23 = trunc i64 %22 to i8
  %24 = and i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %24, i8* %25, align 1, !tbaa !2447
  %26 = icmp eq i64 %9, 0
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %27, i8* %28, align 1, !tbaa !2448
  %29 = lshr i64 %9, 63
  %30 = trunc i64 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %30, i8* %31, align 1, !tbaa !2449
  %32 = lshr i64 %6, 63
  %33 = xor i64 %29, %32
  %34 = add nuw nsw i64 %33, %32
  %35 = icmp eq i64 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1, !tbaa !2450
  %38 = add i64 %5, -16
  %39 = load i64, i64* %RDI, align 8
  %40 = add i64 %8, 11
  store i64 %40, i64* %PC, align 8
  %41 = inttoptr i64 %38 to i64*
  store i64 %39, i64* %41, align 8
  %42 = load i64, i64* %RBP, align 8
  %43 = add i64 %42, -12
  %44 = load i64, i64* %PC, align 8
  %45 = add i64 %44, 7
  store i64 %45, i64* %PC, align 8
  %46 = inttoptr i64 %43 to i32*
  store i32 0, i32* %46, align 4
  %47 = bitcast i64* %RAX to i32**
  %.pre = load i64, i64* %PC, align 8
  br label %block_400543

block_40097b:                                     ; preds = %block_40056b, %block_400974
  %48 = phi i64 [ %.pre94, %block_400974 ], [ 4196731, %block_40056b ]
  %49 = phi i64 [ %.pre93, %block_400974 ], [ %632, %block_40056b ]
  %MEMORY.0 = phi %struct.Memory* [ %MEMORY.32, %block_400974 ], [ %2, %block_40056b ]
  %50 = add i64 %49, -12
  %51 = add i64 %48, 3
  store i64 %51, i64* %PC, align 8
  %52 = inttoptr i64 %50 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = zext i32 %53 to i64
  store i64 %54, i64* %RDI, align 8, !tbaa !2428
  %55 = add i64 %48, -1131
  %56 = add i64 %48, 8
  %57 = load i64, i64* %RSP, align 8, !tbaa !2428
  %58 = add i64 %57, -8
  %59 = inttoptr i64 %58 to i64*
  store i64 %56, i64* %59, align 8
  store i64 %58, i64* %RSP, align 8, !tbaa !2428
  store i64 %55, i64* %PC, align 8, !tbaa !2428
  %60 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %55, %struct.Memory* %MEMORY.0)
  br label %block_400586

block_40087a:                                     ; preds = %block_400586
  %61 = add i64 %625, -12
  store i64 4196481, i64* %PC, align 8
  %62 = inttoptr i64 %61 to i32*
  store i32 16, i32* %62, align 4
  %.pre101 = load i64, i64* %RBP, align 8
  %.pre102 = load i64, i64* %PC, align 8
  br label %block_400881

block_4005f7:                                     ; preds = %block_40056b, %block_4005f0
  %63 = phi i64 [ %.pre90, %block_4005f0 ], [ 4195831, %block_40056b ]
  %64 = phi i64 [ %.pre89, %block_4005f0 ], [ %632, %block_40056b ]
  %MEMORY.1 = phi %struct.Memory* [ %MEMORY.32, %block_4005f0 ], [ %2, %block_40056b ]
  %65 = add i64 %64, -12
  %66 = add i64 %63, 3
  store i64 %66, i64* %PC, align 8
  %67 = inttoptr i64 %65 to i32*
  %68 = load i32, i32* %67, align 4
  %69 = zext i32 %68 to i64
  store i64 %69, i64* %RDI, align 8, !tbaa !2428
  %70 = add i64 %63, -231
  %71 = add i64 %63, 8
  %72 = load i64, i64* %RSP, align 8, !tbaa !2428
  %73 = add i64 %72, -8
  %74 = inttoptr i64 %73 to i64*
  store i64 %71, i64* %74, align 8
  store i64 %73, i64* %RSP, align 8, !tbaa !2428
  store i64 %70, i64* %PC, align 8, !tbaa !2428
  %75 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %70, %struct.Memory* %MEMORY.1)
  br label %block_400586

block_400974:                                     ; preds = %block_400586
  %76 = add i64 %625, -12
  store i64 4196731, i64* %PC, align 8
  %77 = inttoptr i64 %76 to i32*
  store i32 21, i32* %77, align 4
  %.pre93 = load i64, i64* %RBP, align 8
  %.pre94 = load i64, i64* %PC, align 8
  br label %block_40097b

block_4006f1:                                     ; preds = %block_40056b, %block_4006ea
  %78 = phi i64 [ %.pre104, %block_4006ea ], [ 4196081, %block_40056b ]
  %79 = phi i64 [ %.pre103, %block_4006ea ], [ %632, %block_40056b ]
  %MEMORY.2 = phi %struct.Memory* [ %MEMORY.32, %block_4006ea ], [ %2, %block_40056b ]
  %80 = add i64 %79, -12
  %81 = add i64 %78, 3
  store i64 %81, i64* %PC, align 8
  %82 = inttoptr i64 %80 to i32*
  %83 = load i32, i32* %82, align 4
  %84 = zext i32 %83 to i64
  store i64 %84, i64* %RDI, align 8, !tbaa !2428
  %85 = add i64 %78, -481
  %86 = add i64 %78, 8
  %87 = load i64, i64* %RSP, align 8, !tbaa !2428
  %88 = add i64 %87, -8
  %89 = inttoptr i64 %88 to i64*
  store i64 %86, i64* %89, align 8
  store i64 %88, i64* %RSP, align 8, !tbaa !2428
  store i64 %85, i64* %PC, align 8, !tbaa !2428
  %90 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %85, %struct.Memory* %MEMORY.2)
  br label %block_400586

block_400a6e:                                     ; preds = %block_400586
  %91 = add i64 %625, -12
  store i64 4196981, i64* %PC, align 8
  %92 = inttoptr i64 %91 to i32*
  store i32 26, i32* %92, align 4
  %.pre75 = load i64, i64* %RBP, align 8
  %.pre76 = load i64, i64* %PC, align 8
  br label %block_400a75

block_4007eb:                                     ; preds = %block_40056b, %block_4007e4
  %93 = phi i64 [ %.pre108, %block_4007e4 ], [ 4196331, %block_40056b ]
  %94 = phi i64 [ %.pre107, %block_4007e4 ], [ %632, %block_40056b ]
  %MEMORY.3 = phi %struct.Memory* [ %MEMORY.32, %block_4007e4 ], [ %2, %block_40056b ]
  %95 = add i64 %94, -12
  %96 = add i64 %93, 3
  store i64 %96, i64* %PC, align 8
  %97 = inttoptr i64 %95 to i32*
  %98 = load i32, i32* %97, align 4
  %99 = zext i32 %98 to i64
  store i64 %99, i64* %RDI, align 8, !tbaa !2428
  %100 = add i64 %93, -731
  %101 = add i64 %93, 8
  %102 = load i64, i64* %RSP, align 8, !tbaa !2428
  %103 = add i64 %102, -8
  %104 = inttoptr i64 %103 to i64*
  store i64 %101, i64* %104, align 8
  store i64 %103, i64* %RSP, align 8, !tbaa !2428
  store i64 %100, i64* %PC, align 8, !tbaa !2428
  %105 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %100, %struct.Memory* %MEMORY.3)
  br label %block_400586

block_4006ea:                                     ; preds = %block_400586
  %106 = add i64 %625, -12
  store i64 4196081, i64* %PC, align 8
  %107 = inttoptr i64 %106 to i32*
  store i32 8, i32* %107, align 4
  %.pre103 = load i64, i64* %RBP, align 8
  %.pre104 = load i64, i64* %PC, align 8
  br label %block_4006f1

block_400b68:                                     ; preds = %block_400586
  %108 = add i64 %625, -12
  store i64 4197231, i64* %PC, align 8
  %109 = inttoptr i64 %108 to i32*
  store i32 31, i32* %109, align 4
  %.pre105 = load i64, i64* %RBP, align 8
  %.pre106 = load i64, i64* %PC, align 8
  br label %block_400b6f

block_4008e5:                                     ; preds = %block_40056b, %block_4008de
  %110 = phi i64 [ %.pre88, %block_4008de ], [ 4196581, %block_40056b ]
  %111 = phi i64 [ %.pre87, %block_4008de ], [ %632, %block_40056b ]
  %MEMORY.4 = phi %struct.Memory* [ %MEMORY.32, %block_4008de ], [ %2, %block_40056b ]
  %112 = add i64 %111, -12
  %113 = add i64 %110, 3
  store i64 %113, i64* %PC, align 8
  %114 = inttoptr i64 %112 to i32*
  %115 = load i32, i32* %114, align 4
  %116 = zext i32 %115 to i64
  store i64 %116, i64* %RDI, align 8, !tbaa !2428
  %117 = add i64 %110, -981
  %118 = add i64 %110, 8
  %119 = load i64, i64* %RSP, align 8, !tbaa !2428
  %120 = add i64 %119, -8
  %121 = inttoptr i64 %120 to i64*
  store i64 %118, i64* %121, align 8
  store i64 %120, i64* %RSP, align 8, !tbaa !2428
  store i64 %117, i64* %PC, align 8, !tbaa !2428
  %122 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %117, %struct.Memory* %MEMORY.4)
  br label %block_400586

block_4007e4:                                     ; preds = %block_400586
  %123 = add i64 %625, -12
  store i64 4196331, i64* %PC, align 8
  %124 = inttoptr i64 %123 to i32*
  store i32 13, i32* %124, align 4
  %.pre107 = load i64, i64* %RBP, align 8
  %.pre108 = load i64, i64* %PC, align 8
  br label %block_4007eb

block_4009df:                                     ; preds = %block_40056b, %block_4009d8
  %125 = phi i64 [ %.pre100, %block_4009d8 ], [ 4196831, %block_40056b ]
  %126 = phi i64 [ %.pre99, %block_4009d8 ], [ %632, %block_40056b ]
  %MEMORY.5 = phi %struct.Memory* [ %MEMORY.32, %block_4009d8 ], [ %2, %block_40056b ]
  %127 = add i64 %126, -12
  %128 = add i64 %125, 3
  store i64 %128, i64* %PC, align 8
  %129 = inttoptr i64 %127 to i32*
  %130 = load i32, i32* %129, align 4
  %131 = zext i32 %130 to i64
  store i64 %131, i64* %RDI, align 8, !tbaa !2428
  %132 = add i64 %125, -1231
  %133 = add i64 %125, 8
  %134 = load i64, i64* %RSP, align 8, !tbaa !2428
  %135 = add i64 %134, -8
  %136 = inttoptr i64 %135 to i64*
  store i64 %133, i64* %136, align 8
  store i64 %135, i64* %RSP, align 8, !tbaa !2428
  store i64 %132, i64* %PC, align 8, !tbaa !2428
  %137 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %132, %struct.Memory* %MEMORY.5)
  br label %block_400586

block_4009d8:                                     ; preds = %block_400586
  %138 = add i64 %625, -12
  store i64 4196831, i64* %PC, align 8
  %139 = inttoptr i64 %138 to i32*
  store i32 23, i32* %139, align 4
  %.pre99 = load i64, i64* %RBP, align 8
  %.pre100 = load i64, i64* %PC, align 8
  br label %block_4009df

block_400755:                                     ; preds = %block_40056b, %block_40074e
  %140 = phi i64 [ %.pre96, %block_40074e ], [ 4196181, %block_40056b ]
  %141 = phi i64 [ %.pre95, %block_40074e ], [ %632, %block_40056b ]
  %MEMORY.6 = phi %struct.Memory* [ %MEMORY.32, %block_40074e ], [ %2, %block_40056b ]
  %142 = add i64 %141, -12
  %143 = add i64 %140, 3
  store i64 %143, i64* %PC, align 8
  %144 = inttoptr i64 %142 to i32*
  %145 = load i32, i32* %144, align 4
  %146 = zext i32 %145 to i64
  store i64 %146, i64* %RDI, align 8, !tbaa !2428
  %147 = add i64 %140, -581
  %148 = add i64 %140, 8
  %149 = load i64, i64* %RSP, align 8, !tbaa !2428
  %150 = add i64 %149, -8
  %151 = inttoptr i64 %150 to i64*
  store i64 %148, i64* %151, align 8
  store i64 %150, i64* %RSP, align 8, !tbaa !2428
  store i64 %147, i64* %PC, align 8, !tbaa !2428
  %152 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %147, %struct.Memory* %MEMORY.6)
  br label %block_400586

block_400ad2:                                     ; preds = %block_400586
  %153 = add i64 %625, -12
  store i64 4197081, i64* %PC, align 8
  %154 = inttoptr i64 %153 to i32*
  store i32 28, i32* %154, align 4
  %.pre64 = load i64, i64* %RBP, align 8
  %.pre65 = load i64, i64* %PC, align 8
  br label %block_400ad9

block_40084f:                                     ; preds = %block_40056b, %block_400848
  %155 = phi i64 [ %.pre92, %block_400848 ], [ 4196431, %block_40056b ]
  %156 = phi i64 [ %.pre91, %block_400848 ], [ %632, %block_40056b ]
  %MEMORY.7 = phi %struct.Memory* [ %MEMORY.32, %block_400848 ], [ %2, %block_40056b ]
  %157 = add i64 %156, -12
  %158 = add i64 %155, 3
  store i64 %158, i64* %PC, align 8
  %159 = inttoptr i64 %157 to i32*
  %160 = load i32, i32* %159, align 4
  %161 = zext i32 %160 to i64
  store i64 %161, i64* %RDI, align 8, !tbaa !2428
  %162 = add i64 %155, -831
  %163 = add i64 %155, 8
  %164 = load i64, i64* %RSP, align 8, !tbaa !2428
  %165 = add i64 %164, -8
  %166 = inttoptr i64 %165 to i64*
  store i64 %163, i64* %166, align 8
  store i64 %165, i64* %RSP, align 8, !tbaa !2428
  store i64 %162, i64* %PC, align 8, !tbaa !2428
  %167 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %162, %struct.Memory* %MEMORY.7)
  br label %block_400586

block_40074e:                                     ; preds = %block_400586
  %168 = add i64 %625, -12
  store i64 4196181, i64* %PC, align 8
  %169 = inttoptr i64 %168 to i32*
  store i32 10, i32* %169, align 4
  %.pre95 = load i64, i64* %RBP, align 8
  %.pre96 = load i64, i64* %PC, align 8
  br label %block_400755

block_400949:                                     ; preds = %block_40056b, %block_400942
  %170 = phi i64 [ %.pre86, %block_400942 ], [ 4196681, %block_40056b ]
  %171 = phi i64 [ %.pre85, %block_400942 ], [ %632, %block_40056b ]
  %MEMORY.8 = phi %struct.Memory* [ %MEMORY.32, %block_400942 ], [ %2, %block_40056b ]
  %172 = add i64 %171, -12
  %173 = add i64 %170, 3
  store i64 %173, i64* %PC, align 8
  %174 = inttoptr i64 %172 to i32*
  %175 = load i32, i32* %174, align 4
  %176 = zext i32 %175 to i64
  store i64 %176, i64* %RDI, align 8, !tbaa !2428
  %177 = add i64 %170, -1081
  %178 = add i64 %170, 8
  %179 = load i64, i64* %RSP, align 8, !tbaa !2428
  %180 = add i64 %179, -8
  %181 = inttoptr i64 %180 to i64*
  store i64 %178, i64* %181, align 8
  store i64 %180, i64* %RSP, align 8, !tbaa !2428
  store i64 %177, i64* %PC, align 8, !tbaa !2428
  %182 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %177, %struct.Memory* %MEMORY.8)
  br label %block_400586

block_400848:                                     ; preds = %block_400586
  %183 = add i64 %625, -12
  store i64 4196431, i64* %PC, align 8
  %184 = inttoptr i64 %183 to i32*
  store i32 15, i32* %184, align 4
  %.pre91 = load i64, i64* %RBP, align 8
  %.pre92 = load i64, i64* %PC, align 8
  br label %block_40084f

block_4005c5:                                     ; preds = %block_40056b, %block_4005be
  %185 = phi i64 [ 4195781, %block_40056b ], [ %.pre78, %block_4005be ]
  %186 = phi i64 [ %632, %block_40056b ], [ %.pre77, %block_4005be ]
  %MEMORY.9 = phi %struct.Memory* [ %2, %block_40056b ], [ %MEMORY.32, %block_4005be ]
  %187 = add i64 %186, -12
  %188 = add i64 %185, 3
  store i64 %188, i64* %PC, align 8
  %189 = inttoptr i64 %187 to i32*
  %190 = load i32, i32* %189, align 4
  %191 = zext i32 %190 to i64
  store i64 %191, i64* %RDI, align 8, !tbaa !2428
  %192 = add i64 %185, -181
  %193 = add i64 %185, 8
  %194 = load i64, i64* %RSP, align 8, !tbaa !2428
  %195 = add i64 %194, -8
  %196 = inttoptr i64 %195 to i64*
  store i64 %193, i64* %196, align 8
  store i64 %195, i64* %RSP, align 8, !tbaa !2428
  store i64 %192, i64* %PC, align 8, !tbaa !2428
  %197 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %192, %struct.Memory* %MEMORY.9)
  br label %block_400586

block_4008de:                                     ; preds = %block_400586
  %198 = add i64 %625, -12
  store i64 4196581, i64* %PC, align 8
  %199 = inttoptr i64 %198 to i32*
  store i32 18, i32* %199, align 4
  %.pre87 = load i64, i64* %RBP, align 8
  %.pre88 = load i64, i64* %PC, align 8
  br label %block_4008e5

block_400543:                                     ; preds = %block_400b9a, %block_400530
  %200 = phi i64 [ %644, %block_400b9a ], [ %.pre, %block_400530 ]
  %201 = load i64, i64* %RBP, align 8
  %202 = add i64 %201, -8
  %203 = add i64 %200, 4
  store i64 %203, i64* %PC, align 8
  %204 = inttoptr i64 %202 to i64*
  %205 = load i64, i64* %204, align 8
  store i64 %205, i64* %RAX, align 8, !tbaa !2428
  %206 = add i64 %205, 4
  store i64 %206, i64* %RCX, align 8, !tbaa !2428
  %207 = icmp ugt i64 %205, -5
  %208 = zext i1 %207 to i8
  store i8 %208, i8* %12, align 1, !tbaa !2432
  %209 = trunc i64 %206 to i32
  %210 = and i32 %209, 255
  %211 = tail call i32 @llvm.ctpop.i32(i32 %210) #9
  %212 = trunc i32 %211 to i8
  %213 = and i8 %212, 1
  %214 = xor i8 %213, 1
  store i8 %214, i8* %19, align 1, !tbaa !2446
  %215 = xor i64 %206, %205
  %216 = lshr i64 %215, 4
  %217 = trunc i64 %216 to i8
  %218 = and i8 %217, 1
  store i8 %218, i8* %25, align 1, !tbaa !2447
  %219 = icmp eq i64 %206, 0
  %220 = zext i1 %219 to i8
  store i8 %220, i8* %28, align 1, !tbaa !2448
  %221 = lshr i64 %206, 63
  %222 = trunc i64 %221 to i8
  store i8 %222, i8* %31, align 1, !tbaa !2449
  %223 = lshr i64 %205, 63
  %224 = xor i64 %221, %223
  %225 = add nuw nsw i64 %224, %221
  %226 = icmp eq i64 %225, 2
  %227 = zext i1 %226 to i8
  store i8 %227, i8* %37, align 1, !tbaa !2450
  %228 = add i64 %200, 15
  store i64 %228, i64* %PC, align 8
  store i64 %206, i64* %204, align 8
  %229 = load i32*, i32** %47, align 8
  %230 = load i64, i64* %PC, align 8
  %231 = add i64 %230, 2
  store i64 %231, i64* %PC, align 8
  %232 = load i32, i32* %229, align 4
  %233 = zext i32 %232 to i64
  store i64 %233, i64* %RDX, align 8, !tbaa !2428
  store i64 %233, i64* %RAX, align 8, !tbaa !2428
  %234 = add nsw i64 %233, -31
  store i64 %234, i64* %RCX, align 8, !tbaa !2428
  %235 = icmp ult i32 %232, 31
  %236 = zext i1 %235 to i8
  store i8 %236, i8* %12, align 1, !tbaa !2432
  %237 = trunc i64 %234 to i32
  %238 = and i32 %237, 255
  %239 = tail call i32 @llvm.ctpop.i32(i32 %238) #9
  %240 = trunc i32 %239 to i8
  %241 = and i8 %240, 1
  %242 = xor i8 %241, 1
  store i8 %242, i8* %19, align 1, !tbaa !2446
  %243 = xor i64 %233, 16
  %244 = xor i64 %243, %234
  %245 = lshr i64 %244, 4
  %246 = trunc i64 %245 to i8
  %247 = and i8 %246, 1
  store i8 %247, i8* %25, align 1, !tbaa !2447
  %248 = icmp eq i64 %234, 0
  %249 = zext i1 %248 to i8
  store i8 %249, i8* %28, align 1, !tbaa !2448
  %250 = lshr i64 %234, 63
  %251 = trunc i64 %250 to i8
  store i8 %251, i8* %31, align 1, !tbaa !2449
  store i8 0, i8* %37, align 1, !tbaa !2450
  %252 = load i64, i64* %RBP, align 8
  %253 = add i64 %252, -24
  %254 = add i64 %230, 15
  store i64 %254, i64* %PC, align 8
  %255 = inttoptr i64 %253 to i64*
  store i64 %233, i64* %255, align 8
  %256 = load i64, i64* %RBP, align 8
  %257 = add i64 %256, -32
  %258 = load i64, i64* %RCX, align 8
  %259 = load i64, i64* %PC, align 8
  %260 = add i64 %259, 4
  store i64 %260, i64* %PC, align 8
  %261 = inttoptr i64 %257 to i64*
  store i64 %258, i64* %261, align 8
  %262 = load i64, i64* %PC, align 8
  %263 = load i8, i8* %12, align 1, !tbaa !2432
  %264 = load i8, i8* %28, align 1, !tbaa !2448
  %265 = or i8 %264, %263
  %266 = icmp eq i8 %265, 0
  %.v = select i1 %266, i64 1589, i64 6
  %267 = add i64 %262, %.v
  store i64 %267, i64* %PC, align 8, !tbaa !2428
  br i1 %266, label %block_400b9a, label %block_40056b

block_400942:                                     ; preds = %block_400586
  %268 = add i64 %625, -12
  store i64 4196681, i64* %PC, align 8
  %269 = inttoptr i64 %268 to i32*
  store i32 20, i32* %269, align 4
  %.pre85 = load i64, i64* %RBP, align 8
  %.pre86 = load i64, i64* %PC, align 8
  br label %block_400949

block_4006bf:                                     ; preds = %block_40056b, %block_4006b8
  %270 = phi i64 [ %.pre84, %block_4006b8 ], [ 4196031, %block_40056b ]
  %271 = phi i64 [ %.pre83, %block_4006b8 ], [ %632, %block_40056b ]
  %MEMORY.11 = phi %struct.Memory* [ %MEMORY.32, %block_4006b8 ], [ %2, %block_40056b ]
  %272 = add i64 %271, -12
  %273 = add i64 %270, 3
  store i64 %273, i64* %PC, align 8
  %274 = inttoptr i64 %272 to i32*
  %275 = load i32, i32* %274, align 4
  %276 = zext i32 %275 to i64
  store i64 %276, i64* %RDI, align 8, !tbaa !2428
  %277 = add i64 %270, -431
  %278 = add i64 %270, 8
  %279 = load i64, i64* %RSP, align 8, !tbaa !2428
  %280 = add i64 %279, -8
  %281 = inttoptr i64 %280 to i64*
  store i64 %278, i64* %281, align 8
  store i64 %280, i64* %RSP, align 8, !tbaa !2428
  store i64 %277, i64* %PC, align 8, !tbaa !2428
  %282 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %277, %struct.Memory* %MEMORY.11)
  br label %block_400586

block_4007b9:                                     ; preds = %block_40056b, %block_4007b2
  %283 = phi i64 [ %.pre80, %block_4007b2 ], [ 4196281, %block_40056b ]
  %284 = phi i64 [ %.pre79, %block_4007b2 ], [ %632, %block_40056b ]
  %MEMORY.12 = phi %struct.Memory* [ %MEMORY.32, %block_4007b2 ], [ %2, %block_40056b ]
  %285 = add i64 %284, -12
  %286 = add i64 %283, 3
  store i64 %286, i64* %PC, align 8
  %287 = inttoptr i64 %285 to i32*
  %288 = load i32, i32* %287, align 4
  %289 = zext i32 %288 to i64
  store i64 %289, i64* %RDI, align 8, !tbaa !2428
  %290 = add i64 %283, -681
  %291 = add i64 %283, 8
  %292 = load i64, i64* %RSP, align 8, !tbaa !2428
  %293 = add i64 %292, -8
  %294 = inttoptr i64 %293 to i64*
  store i64 %291, i64* %294, align 8
  store i64 %293, i64* %RSP, align 8, !tbaa !2428
  store i64 %290, i64* %PC, align 8, !tbaa !2428
  %295 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %290, %struct.Memory* %MEMORY.12)
  br label %block_400586

block_400b6f:                                     ; preds = %block_40056b, %block_400b68
  %296 = phi i64 [ %.pre106, %block_400b68 ], [ 4197231, %block_40056b ]
  %297 = phi i64 [ %.pre105, %block_400b68 ], [ %632, %block_40056b ]
  %MEMORY.13 = phi %struct.Memory* [ %MEMORY.32, %block_400b68 ], [ %2, %block_40056b ]
  %298 = add i64 %297, -12
  %299 = add i64 %296, 3
  store i64 %299, i64* %PC, align 8
  %300 = inttoptr i64 %298 to i32*
  %301 = load i32, i32* %300, align 4
  %302 = zext i32 %301 to i64
  store i64 %302, i64* %RDI, align 8, !tbaa !2428
  %303 = add i64 %296, -1631
  %304 = add i64 %296, 8
  %305 = load i64, i64* %RSP, align 8, !tbaa !2428
  %306 = add i64 %305, -8
  %307 = inttoptr i64 %306 to i64*
  store i64 %304, i64* %307, align 8
  store i64 %306, i64* %RSP, align 8, !tbaa !2428
  store i64 %303, i64* %PC, align 8, !tbaa !2428
  %308 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %303, %struct.Memory* %MEMORY.13)
  br label %block_400586

block_4006b8:                                     ; preds = %block_400586
  %309 = add i64 %625, -12
  store i64 4196031, i64* %PC, align 8
  %310 = inttoptr i64 %309 to i32*
  store i32 7, i32* %310, align 4
  %.pre83 = load i64, i64* %RBP, align 8
  %.pre84 = load i64, i64* %PC, align 8
  br label %block_4006bf

block_400b36:                                     ; preds = %block_400586
  %311 = add i64 %625, -12
  store i64 4197181, i64* %PC, align 8
  %312 = inttoptr i64 %311 to i32*
  store i32 30, i32* %312, align 4
  %.pre81 = load i64, i64* %RBP, align 8
  %.pre82 = load i64, i64* %PC, align 8
  br label %block_400b3d

block_4008b3:                                     ; preds = %block_40056b, %block_4008ac
  %313 = phi i64 [ %.pre73, %block_4008ac ], [ 4196531, %block_40056b ]
  %314 = phi i64 [ %.pre72, %block_4008ac ], [ %632, %block_40056b ]
  %MEMORY.14 = phi %struct.Memory* [ %MEMORY.32, %block_4008ac ], [ %2, %block_40056b ]
  %315 = add i64 %314, -12
  %316 = add i64 %313, 3
  store i64 %316, i64* %PC, align 8
  %317 = inttoptr i64 %315 to i32*
  %318 = load i32, i32* %317, align 4
  %319 = zext i32 %318 to i64
  store i64 %319, i64* %RDI, align 8, !tbaa !2428
  %320 = add i64 %313, -931
  %321 = add i64 %313, 8
  %322 = load i64, i64* %RSP, align 8, !tbaa !2428
  %323 = add i64 %322, -8
  %324 = inttoptr i64 %323 to i64*
  store i64 %321, i64* %324, align 8
  store i64 %323, i64* %RSP, align 8, !tbaa !2428
  store i64 %320, i64* %PC, align 8, !tbaa !2428
  %325 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %320, %struct.Memory* %MEMORY.14)
  br label %block_400586

block_4007b2:                                     ; preds = %block_400586
  %326 = add i64 %625, -12
  store i64 4196281, i64* %PC, align 8
  %327 = inttoptr i64 %326 to i32*
  store i32 12, i32* %327, align 4
  %.pre79 = load i64, i64* %RBP, align 8
  %.pre80 = load i64, i64* %PC, align 8
  br label %block_4007b9

block_400a75:                                     ; preds = %block_40056b, %block_400a6e
  %328 = phi i64 [ %.pre76, %block_400a6e ], [ 4196981, %block_40056b ]
  %329 = phi i64 [ %.pre75, %block_400a6e ], [ %632, %block_40056b ]
  %MEMORY.15 = phi %struct.Memory* [ %MEMORY.32, %block_400a6e ], [ %2, %block_40056b ]
  %330 = add i64 %329, -12
  %331 = add i64 %328, 3
  store i64 %331, i64* %PC, align 8
  %332 = inttoptr i64 %330 to i32*
  %333 = load i32, i32* %332, align 4
  %334 = zext i32 %333 to i64
  store i64 %334, i64* %RDI, align 8, !tbaa !2428
  %335 = add i64 %328, -1381
  %336 = add i64 %328, 8
  %337 = load i64, i64* %RSP, align 8, !tbaa !2428
  %338 = add i64 %337, -8
  %339 = inttoptr i64 %338 to i64*
  store i64 %336, i64* %339, align 8
  store i64 %338, i64* %RSP, align 8, !tbaa !2428
  store i64 %335, i64* %PC, align 8, !tbaa !2428
  %340 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %335, %struct.Memory* %MEMORY.15)
  br label %block_400586

block_4005be:                                     ; preds = %block_400586
  %341 = add i64 %625, -12
  store i64 4195781, i64* %PC, align 8
  %342 = inttoptr i64 %341 to i32*
  store i32 2, i32* %342, align 4
  %.pre77 = load i64, i64* %RBP, align 8
  %.pre78 = load i64, i64* %PC, align 8
  br label %block_4005c5

block_4009ad:                                     ; preds = %block_40056b, %block_4009a6
  %343 = phi i64 [ %.pre71, %block_4009a6 ], [ 4196781, %block_40056b ]
  %344 = phi i64 [ %.pre70, %block_4009a6 ], [ %632, %block_40056b ]
  %MEMORY.16 = phi %struct.Memory* [ %MEMORY.32, %block_4009a6 ], [ %2, %block_40056b ]
  %345 = add i64 %344, -12
  %346 = add i64 %343, 3
  store i64 %346, i64* %PC, align 8
  %347 = inttoptr i64 %345 to i32*
  %348 = load i32, i32* %347, align 4
  %349 = zext i32 %348 to i64
  store i64 %349, i64* %RDI, align 8, !tbaa !2428
  %350 = add i64 %343, -1181
  %351 = add i64 %343, 8
  %352 = load i64, i64* %RSP, align 8, !tbaa !2428
  %353 = add i64 %352, -8
  %354 = inttoptr i64 %353 to i64*
  store i64 %351, i64* %354, align 8
  store i64 %353, i64* %RSP, align 8, !tbaa !2428
  store i64 %350, i64* %PC, align 8, !tbaa !2428
  %355 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %350, %struct.Memory* %MEMORY.16)
  br label %block_400586

block_4008ac:                                     ; preds = %block_400586
  %356 = add i64 %625, -12
  store i64 4196531, i64* %PC, align 8
  %357 = inttoptr i64 %356 to i32*
  store i32 17, i32* %357, align 4
  %.pre72 = load i64, i64* %RBP, align 8
  %.pre73 = load i64, i64* %PC, align 8
  br label %block_4008b3

block_400629:                                     ; preds = %block_40056b, %block_400622
  %358 = phi i64 [ %.pre67, %block_400622 ], [ 4195881, %block_40056b ]
  %359 = phi i64 [ %.pre66, %block_400622 ], [ %632, %block_40056b ]
  %MEMORY.17 = phi %struct.Memory* [ %MEMORY.32, %block_400622 ], [ %2, %block_40056b ]
  %360 = add i64 %359, -12
  %361 = add i64 %358, 3
  store i64 %361, i64* %PC, align 8
  %362 = inttoptr i64 %360 to i32*
  %363 = load i32, i32* %362, align 4
  %364 = zext i32 %363 to i64
  store i64 %364, i64* %RDI, align 8, !tbaa !2428
  %365 = add i64 %358, -281
  %366 = add i64 %358, 8
  %367 = load i64, i64* %RSP, align 8, !tbaa !2428
  %368 = add i64 %367, -8
  %369 = inttoptr i64 %368 to i64*
  store i64 %366, i64* %369, align 8
  store i64 %368, i64* %RSP, align 8, !tbaa !2428
  store i64 %365, i64* %PC, align 8, !tbaa !2428
  %370 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %365, %struct.Memory* %MEMORY.17)
  br label %block_400586

block_4005f0:                                     ; preds = %block_400586
  %371 = add i64 %625, -12
  store i64 4195831, i64* %PC, align 8
  %372 = inttoptr i64 %371 to i32*
  store i32 3, i32* %372, align 4
  %.pre89 = load i64, i64* %RBP, align 8
  %.pre90 = load i64, i64* %PC, align 8
  br label %block_4005f7

block_400aa7:                                     ; preds = %block_40056b, %block_400aa0
  %373 = phi i64 [ %.pre110, %block_400aa0 ], [ 4197031, %block_40056b ]
  %374 = phi i64 [ %.pre109, %block_400aa0 ], [ %632, %block_40056b ]
  %MEMORY.18 = phi %struct.Memory* [ %MEMORY.32, %block_400aa0 ], [ %2, %block_40056b ]
  %375 = add i64 %374, -12
  %376 = add i64 %373, 3
  store i64 %376, i64* %PC, align 8
  %377 = inttoptr i64 %375 to i32*
  %378 = load i32, i32* %377, align 4
  %379 = zext i32 %378 to i64
  store i64 %379, i64* %RDI, align 8, !tbaa !2428
  %380 = add i64 %373, -1431
  %381 = add i64 %373, 8
  %382 = load i64, i64* %RSP, align 8, !tbaa !2428
  %383 = add i64 %382, -8
  %384 = inttoptr i64 %383 to i64*
  store i64 %381, i64* %384, align 8
  store i64 %383, i64* %RSP, align 8, !tbaa !2428
  store i64 %380, i64* %PC, align 8, !tbaa !2428
  %385 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %380, %struct.Memory* %MEMORY.18)
  br label %block_400586

block_4009a6:                                     ; preds = %block_400586
  %386 = add i64 %625, -12
  store i64 4196781, i64* %PC, align 8
  %387 = inttoptr i64 %386 to i32*
  store i32 22, i32* %387, align 4
  %.pre70 = load i64, i64* %RBP, align 8
  %.pre71 = load i64, i64* %PC, align 8
  br label %block_4009ad

block_400b3d:                                     ; preds = %block_40056b, %block_400b36
  %388 = phi i64 [ %.pre82, %block_400b36 ], [ 4197181, %block_40056b ]
  %389 = phi i64 [ %.pre81, %block_400b36 ], [ %632, %block_40056b ]
  %MEMORY.19 = phi %struct.Memory* [ %MEMORY.32, %block_400b36 ], [ %2, %block_40056b ]
  %390 = add i64 %389, -12
  %391 = add i64 %388, 3
  store i64 %391, i64* %PC, align 8
  %392 = inttoptr i64 %390 to i32*
  %393 = load i32, i32* %392, align 4
  %394 = zext i32 %393 to i64
  store i64 %394, i64* %RDI, align 8, !tbaa !2428
  %395 = add i64 %388, -1581
  %396 = add i64 %388, 8
  %397 = load i64, i64* %RSP, align 8, !tbaa !2428
  %398 = add i64 %397, -8
  %399 = inttoptr i64 %398 to i64*
  store i64 %396, i64* %399, align 8
  store i64 %398, i64* %RSP, align 8, !tbaa !2428
  store i64 %395, i64* %PC, align 8, !tbaa !2428
  %400 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %395, %struct.Memory* %MEMORY.19)
  br label %block_400586

block_400686:                                     ; preds = %block_400586
  %401 = add i64 %625, -12
  store i64 4195981, i64* %PC, align 8
  %402 = inttoptr i64 %401 to i32*
  store i32 6, i32* %402, align 4
  %.pre68 = load i64, i64* %RBP, align 8
  %.pre69 = load i64, i64* %PC, align 8
  br label %block_40068d

block_400579:                                     ; preds = %block_400586
  %403 = add i64 %625, -12
  store i64 4195712, i64* %PC, align 8
  %404 = inttoptr i64 %403 to i32*
  store i32 0, i32* %404, align 4
  %.pre74 = load i64, i64* %PC, align 8
  %phitmp = add i64 %.pre74, 4
  br label %block_400580

block_400723:                                     ; preds = %block_40056b, %block_40071c
  %405 = phi i64 [ %.pre114, %block_40071c ], [ 4196131, %block_40056b ]
  %406 = phi i64 [ %.pre113, %block_40071c ], [ %632, %block_40056b ]
  %MEMORY.20 = phi %struct.Memory* [ %MEMORY.32, %block_40071c ], [ %2, %block_40056b ]
  %407 = add i64 %406, -12
  %408 = add i64 %405, 3
  store i64 %408, i64* %PC, align 8
  %409 = inttoptr i64 %407 to i32*
  %410 = load i32, i32* %409, align 4
  %411 = zext i32 %410 to i64
  store i64 %411, i64* %RDI, align 8, !tbaa !2428
  %412 = add i64 %405, -531
  %413 = add i64 %405, 8
  %414 = load i64, i64* %RSP, align 8, !tbaa !2428
  %415 = add i64 %414, -8
  %416 = inttoptr i64 %415 to i64*
  store i64 %413, i64* %416, align 8
  store i64 %415, i64* %RSP, align 8, !tbaa !2428
  store i64 %412, i64* %PC, align 8, !tbaa !2428
  %417 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %412, %struct.Memory* %MEMORY.20)
  br label %block_400586

block_400ad9:                                     ; preds = %block_40056b, %block_400ad2
  %418 = phi i64 [ %.pre65, %block_400ad2 ], [ 4197081, %block_40056b ]
  %419 = phi i64 [ %.pre64, %block_400ad2 ], [ %632, %block_40056b ]
  %MEMORY.21 = phi %struct.Memory* [ %MEMORY.32, %block_400ad2 ], [ %2, %block_40056b ]
  %420 = add i64 %419, -12
  %421 = add i64 %418, 3
  store i64 %421, i64* %PC, align 8
  %422 = inttoptr i64 %420 to i32*
  %423 = load i32, i32* %422, align 4
  %424 = zext i32 %423 to i64
  store i64 %424, i64* %RDI, align 8, !tbaa !2428
  %425 = add i64 %418, -1481
  %426 = add i64 %418, 8
  %427 = load i64, i64* %RSP, align 8, !tbaa !2428
  %428 = add i64 %427, -8
  %429 = inttoptr i64 %428 to i64*
  store i64 %426, i64* %429, align 8
  store i64 %428, i64* %RSP, align 8, !tbaa !2428
  store i64 %425, i64* %PC, align 8, !tbaa !2428
  %430 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %425, %struct.Memory* %MEMORY.21)
  br label %block_400586

block_400622:                                     ; preds = %block_400586
  %431 = add i64 %625, -12
  store i64 4195881, i64* %PC, align 8
  %432 = inttoptr i64 %431 to i32*
  store i32 4, i32* %432, align 4
  %.pre66 = load i64, i64* %RBP, align 8
  %.pre67 = load i64, i64* %PC, align 8
  br label %block_400629

block_400aa0:                                     ; preds = %block_400586
  %433 = add i64 %625, -12
  store i64 4197031, i64* %PC, align 8
  %434 = inttoptr i64 %433 to i32*
  store i32 27, i32* %434, align 4
  %.pre109 = load i64, i64* %RBP, align 8
  %.pre110 = load i64, i64* %PC, align 8
  br label %block_400aa7

block_400a3c:                                     ; preds = %block_400586
  %435 = add i64 %625, -12
  store i64 4196931, i64* %PC, align 8
  %436 = inttoptr i64 %435 to i32*
  store i32 25, i32* %436, align 4
  %.pre111 = load i64, i64* %RBP, align 8
  %.pre112 = load i64, i64* %PC, align 8
  br label %block_400a43

block_400b9f:                                     ; preds = %block_400586
  store i64 4197280, i64* %PC, align 8
  %437 = tail call %struct.Memory* @sub_400ba0_main(%struct.State* nonnull %0, i64 4197280, %struct.Memory* %MEMORY.32)
  ret %struct.Memory* %437

block_40081d:                                     ; preds = %block_40056b, %block_400816
  %438 = phi i64 [ %.pre116, %block_400816 ], [ 4196381, %block_40056b ]
  %439 = phi i64 [ %.pre115, %block_400816 ], [ %632, %block_40056b ]
  %MEMORY.22 = phi %struct.Memory* [ %MEMORY.32, %block_400816 ], [ %2, %block_40056b ]
  %440 = add i64 %439, -12
  %441 = add i64 %438, 3
  store i64 %441, i64* %PC, align 8
  %442 = inttoptr i64 %440 to i32*
  %443 = load i32, i32* %442, align 4
  %444 = zext i32 %443 to i64
  store i64 %444, i64* %RDI, align 8, !tbaa !2428
  %445 = add i64 %438, -781
  %446 = add i64 %438, 8
  %447 = load i64, i64* %RSP, align 8, !tbaa !2428
  %448 = add i64 %447, -8
  %449 = inttoptr i64 %448 to i64*
  store i64 %446, i64* %449, align 8
  store i64 %448, i64* %RSP, align 8, !tbaa !2428
  store i64 %445, i64* %PC, align 8, !tbaa !2428
  %450 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %445, %struct.Memory* %MEMORY.22)
  br label %block_400586

block_40071c:                                     ; preds = %block_400586
  %451 = add i64 %625, -12
  store i64 4196131, i64* %PC, align 8
  %452 = inttoptr i64 %451 to i32*
  store i32 9, i32* %452, align 4
  %.pre113 = load i64, i64* %RBP, align 8
  %.pre114 = load i64, i64* %PC, align 8
  br label %block_400723

block_400917:                                     ; preds = %block_40056b, %block_400910
  %453 = phi i64 [ %.pre118, %block_400910 ], [ 4196631, %block_40056b ]
  %454 = phi i64 [ %.pre117, %block_400910 ], [ %632, %block_40056b ]
  %MEMORY.23 = phi %struct.Memory* [ %MEMORY.32, %block_400910 ], [ %2, %block_40056b ]
  %455 = add i64 %454, -12
  %456 = add i64 %453, 3
  store i64 %456, i64* %PC, align 8
  %457 = inttoptr i64 %455 to i32*
  %458 = load i32, i32* %457, align 4
  %459 = zext i32 %458 to i64
  store i64 %459, i64* %RDI, align 8, !tbaa !2428
  %460 = add i64 %453, -1031
  %461 = add i64 %453, 8
  %462 = load i64, i64* %RSP, align 8, !tbaa !2428
  %463 = add i64 %462, -8
  %464 = inttoptr i64 %463 to i64*
  store i64 %461, i64* %464, align 8
  store i64 %463, i64* %RSP, align 8, !tbaa !2428
  store i64 %460, i64* %PC, align 8, !tbaa !2428
  %465 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %460, %struct.Memory* %MEMORY.23)
  br label %block_400586

block_400816:                                     ; preds = %block_400586
  %466 = add i64 %625, -12
  store i64 4196381, i64* %PC, align 8
  %467 = inttoptr i64 %466 to i32*
  store i32 14, i32* %467, align 4
  %.pre115 = load i64, i64* %RBP, align 8
  %.pre116 = load i64, i64* %PC, align 8
  br label %block_40081d

block_400593:                                     ; preds = %block_40056b, %block_40058c
  %468 = phi i64 [ %.pre98, %block_40058c ], [ 4195731, %block_40056b ]
  %469 = phi i64 [ %.pre97, %block_40058c ], [ %632, %block_40056b ]
  %MEMORY.24 = phi %struct.Memory* [ %MEMORY.32, %block_40058c ], [ %2, %block_40056b ]
  %470 = add i64 %469, -12
  %471 = add i64 %468, 3
  store i64 %471, i64* %PC, align 8
  %472 = inttoptr i64 %470 to i32*
  %473 = load i32, i32* %472, align 4
  %474 = zext i32 %473 to i64
  store i64 %474, i64* %RDI, align 8, !tbaa !2428
  %475 = add i64 %468, -131
  %476 = add i64 %468, 8
  %477 = load i64, i64* %RSP, align 8, !tbaa !2428
  %478 = add i64 %477, -8
  %479 = inttoptr i64 %478 to i64*
  store i64 %476, i64* %479, align 8
  store i64 %478, i64* %RSP, align 8, !tbaa !2428
  store i64 %475, i64* %PC, align 8, !tbaa !2428
  %480 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %475, %struct.Memory* %MEMORY.24)
  br label %block_400586

block_400881:                                     ; preds = %block_40056b, %block_40087a
  %481 = phi i64 [ %.pre102, %block_40087a ], [ 4196481, %block_40056b ]
  %482 = phi i64 [ %.pre101, %block_40087a ], [ %632, %block_40056b ]
  %MEMORY.25 = phi %struct.Memory* [ %MEMORY.32, %block_40087a ], [ %2, %block_40056b ]
  %483 = add i64 %482, -12
  %484 = add i64 %481, 3
  store i64 %484, i64* %PC, align 8
  %485 = inttoptr i64 %483 to i32*
  %486 = load i32, i32* %485, align 4
  %487 = zext i32 %486 to i64
  store i64 %487, i64* %RDI, align 8, !tbaa !2428
  %488 = add i64 %481, -881
  %489 = add i64 %481, 8
  %490 = load i64, i64* %RSP, align 8, !tbaa !2428
  %491 = add i64 %490, -8
  %492 = inttoptr i64 %491 to i64*
  store i64 %489, i64* %492, align 8
  store i64 %491, i64* %RSP, align 8, !tbaa !2428
  store i64 %488, i64* %PC, align 8, !tbaa !2428
  %493 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %488, %struct.Memory* %MEMORY.25)
  br label %block_400586

block_400a11:                                     ; preds = %block_40056b, %block_400a0a
  %494 = phi i64 [ %.pre122, %block_400a0a ], [ 4196881, %block_40056b ]
  %495 = phi i64 [ %.pre121, %block_400a0a ], [ %632, %block_40056b ]
  %MEMORY.26 = phi %struct.Memory* [ %MEMORY.32, %block_400a0a ], [ %2, %block_40056b ]
  %496 = add i64 %495, -12
  %497 = add i64 %494, 3
  store i64 %497, i64* %PC, align 8
  %498 = inttoptr i64 %496 to i32*
  %499 = load i32, i32* %498, align 4
  %500 = zext i32 %499 to i64
  store i64 %500, i64* %RDI, align 8, !tbaa !2428
  %501 = add i64 %494, -1281
  %502 = add i64 %494, 8
  %503 = load i64, i64* %RSP, align 8, !tbaa !2428
  %504 = add i64 %503, -8
  %505 = inttoptr i64 %504 to i64*
  store i64 %502, i64* %505, align 8
  store i64 %504, i64* %RSP, align 8, !tbaa !2428
  store i64 %501, i64* %PC, align 8, !tbaa !2428
  %506 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %501, %struct.Memory* %MEMORY.26)
  br label %block_400586

block_400910:                                     ; preds = %block_400586
  %507 = add i64 %625, -12
  store i64 4196631, i64* %PC, align 8
  %508 = inttoptr i64 %507 to i32*
  store i32 19, i32* %508, align 4
  %.pre117 = load i64, i64* %RBP, align 8
  %.pre118 = load i64, i64* %PC, align 8
  br label %block_400917

block_40068d:                                     ; preds = %block_40056b, %block_400686
  %509 = phi i64 [ %.pre69, %block_400686 ], [ 4195981, %block_40056b ]
  %510 = phi i64 [ %.pre68, %block_400686 ], [ %632, %block_40056b ]
  %MEMORY.27 = phi %struct.Memory* [ %MEMORY.32, %block_400686 ], [ %2, %block_40056b ]
  %511 = add i64 %510, -12
  %512 = add i64 %509, 3
  store i64 %512, i64* %PC, align 8
  %513 = inttoptr i64 %511 to i32*
  %514 = load i32, i32* %513, align 4
  %515 = zext i32 %514 to i64
  store i64 %515, i64* %RDI, align 8, !tbaa !2428
  %516 = add i64 %509, -381
  %517 = add i64 %509, 8
  %518 = load i64, i64* %RSP, align 8, !tbaa !2428
  %519 = add i64 %518, -8
  %520 = inttoptr i64 %519 to i64*
  store i64 %517, i64* %520, align 8
  store i64 %519, i64* %RSP, align 8, !tbaa !2428
  store i64 %516, i64* %PC, align 8, !tbaa !2428
  %521 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %516, %struct.Memory* %MEMORY.27)
  br label %block_400586

block_400a43:                                     ; preds = %block_40056b, %block_400a3c
  %522 = phi i64 [ %.pre112, %block_400a3c ], [ 4196931, %block_40056b ]
  %523 = phi i64 [ %.pre111, %block_400a3c ], [ %632, %block_40056b ]
  %MEMORY.28 = phi %struct.Memory* [ %MEMORY.32, %block_400a3c ], [ %2, %block_40056b ]
  %524 = add i64 %523, -12
  %525 = add i64 %522, 3
  store i64 %525, i64* %PC, align 8
  %526 = inttoptr i64 %524 to i32*
  %527 = load i32, i32* %526, align 4
  %528 = zext i32 %527 to i64
  store i64 %528, i64* %RDI, align 8, !tbaa !2428
  %529 = add i64 %522, -1331
  %530 = add i64 %522, 8
  %531 = load i64, i64* %RSP, align 8, !tbaa !2428
  %532 = add i64 %531, -8
  %533 = inttoptr i64 %532 to i64*
  store i64 %530, i64* %533, align 8
  store i64 %532, i64* %RSP, align 8, !tbaa !2428
  store i64 %529, i64* %PC, align 8, !tbaa !2428
  %534 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %529, %struct.Memory* %MEMORY.28)
  br label %block_400586

block_40058c:                                     ; preds = %block_400586
  %535 = add i64 %625, -12
  store i64 4195731, i64* %PC, align 8
  %536 = inttoptr i64 %535 to i32*
  store i32 1, i32* %536, align 4
  %.pre97 = load i64, i64* %RBP, align 8
  %.pre98 = load i64, i64* %PC, align 8
  br label %block_400593

block_400654:                                     ; preds = %block_400586
  %537 = add i64 %625, -12
  store i64 4195931, i64* %PC, align 8
  %538 = inttoptr i64 %537 to i32*
  store i32 5, i32* %538, align 4
  %.pre119 = load i64, i64* %RBP, align 8
  %.pre120 = load i64, i64* %PC, align 8
  br label %block_40065b

block_400b0b:                                     ; preds = %block_40056b, %block_400b04
  %539 = phi i64 [ %.pre124, %block_400b04 ], [ 4197131, %block_40056b ]
  %540 = phi i64 [ %.pre123, %block_400b04 ], [ %632, %block_40056b ]
  %MEMORY.29 = phi %struct.Memory* [ %MEMORY.32, %block_400b04 ], [ %2, %block_40056b ]
  %541 = add i64 %540, -12
  %542 = add i64 %539, 3
  store i64 %542, i64* %PC, align 8
  %543 = inttoptr i64 %541 to i32*
  %544 = load i32, i32* %543, align 4
  %545 = zext i32 %544 to i64
  store i64 %545, i64* %RDI, align 8, !tbaa !2428
  %546 = add i64 %539, -1531
  %547 = add i64 %539, 8
  %548 = load i64, i64* %RSP, align 8, !tbaa !2428
  %549 = add i64 %548, -8
  %550 = inttoptr i64 %549 to i64*
  store i64 %547, i64* %550, align 8
  store i64 %549, i64* %RSP, align 8, !tbaa !2428
  store i64 %546, i64* %PC, align 8, !tbaa !2428
  %551 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %546, %struct.Memory* %MEMORY.29)
  br label %block_400586

block_400a0a:                                     ; preds = %block_400586
  %552 = add i64 %625, -12
  store i64 4196881, i64* %PC, align 8
  %553 = inttoptr i64 %552 to i32*
  store i32 24, i32* %553, align 4
  %.pre121 = load i64, i64* %RBP, align 8
  %.pre122 = load i64, i64* %PC, align 8
  br label %block_400a11

block_400787:                                     ; preds = %block_400780, %block_40056b
  %554 = phi i64 [ %.pre126, %block_400780 ], [ 4196231, %block_40056b ]
  %555 = phi i64 [ %.pre125, %block_400780 ], [ %632, %block_40056b ]
  %MEMORY.30 = phi %struct.Memory* [ %MEMORY.32, %block_400780 ], [ %2, %block_40056b ]
  %556 = add i64 %555, -12
  %557 = add i64 %554, 3
  store i64 %557, i64* %PC, align 8
  %558 = inttoptr i64 %556 to i32*
  %559 = load i32, i32* %558, align 4
  %560 = zext i32 %559 to i64
  store i64 %560, i64* %RDI, align 8, !tbaa !2428
  %561 = add i64 %554, -631
  %562 = add i64 %554, 8
  %563 = load i64, i64* %RSP, align 8, !tbaa !2428
  %564 = add i64 %563, -8
  %565 = inttoptr i64 %564 to i64*
  store i64 %562, i64* %565, align 8
  store i64 %564, i64* %RSP, align 8, !tbaa !2428
  store i64 %561, i64* %PC, align 8, !tbaa !2428
  %566 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %561, %struct.Memory* %MEMORY.30)
  br label %block_400586

block_40065b:                                     ; preds = %block_40056b, %block_400654
  %567 = phi i64 [ %.pre120, %block_400654 ], [ 4195931, %block_40056b ]
  %568 = phi i64 [ %.pre119, %block_400654 ], [ %632, %block_40056b ]
  %MEMORY.31 = phi %struct.Memory* [ %MEMORY.32, %block_400654 ], [ %2, %block_40056b ]
  %569 = add i64 %568, -12
  %570 = add i64 %567, 3
  store i64 %570, i64* %PC, align 8
  %571 = inttoptr i64 %569 to i32*
  %572 = load i32, i32* %571, align 4
  %573 = zext i32 %572 to i64
  store i64 %573, i64* %RDI, align 8, !tbaa !2428
  %574 = add i64 %567, -331
  %575 = add i64 %567, 8
  %576 = load i64, i64* %RSP, align 8, !tbaa !2428
  %577 = add i64 %576, -8
  %578 = inttoptr i64 %577 to i64*
  store i64 %575, i64* %578, align 8
  store i64 %577, i64* %RSP, align 8, !tbaa !2428
  store i64 %574, i64* %PC, align 8, !tbaa !2428
  %579 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %574, %struct.Memory* %MEMORY.31)
  br label %block_400586

block_400586:                                     ; preds = %block_40065b, %block_400787, %block_400b0b, %block_400a43, %block_40068d, %block_400a11, %block_400881, %block_400593, %block_400917, %block_40081d, %block_400ad9, %block_400723, %block_400b3d, %block_400aa7, %block_400629, %block_4009ad, %block_400a75, %block_4008b3, %block_400b6f, %block_4007b9, %block_4006bf, %block_4005c5, %block_400949, %block_40084f, %block_400755, %block_4009df, %block_4008e5, %block_4007eb, %block_4006f1, %block_4005f7, %block_40097b
  %.sink5 = phi i64 [ 251, %block_40065b ], [ 551, %block_400787 ], [ 1451, %block_400b0b ], [ 1251, %block_400a43 ], [ 301, %block_40068d ], [ 1201, %block_400a11 ], [ 801, %block_400881 ], [ 51, %block_400593 ], [ 951, %block_400917 ], [ 701, %block_40081d ], [ 1401, %block_400ad9 ], [ 451, %block_400723 ], [ 1501, %block_400b3d ], [ 1351, %block_400aa7 ], [ 201, %block_400629 ], [ 1101, %block_4009ad ], [ 1301, %block_400a75 ], [ 851, %block_4008b3 ], [ 1551, %block_400b6f ], [ 601, %block_4007b9 ], [ 351, %block_4006bf ], [ 101, %block_4005c5 ], [ 1001, %block_400949 ], [ 751, %block_40084f ], [ 501, %block_400755 ], [ 1151, %block_4009df ], [ 901, %block_4008e5 ], [ 651, %block_4007eb ], [ 401, %block_4006f1 ], [ 151, %block_4005f7 ], [ 1051, %block_40097b ]
  %MEMORY.32 = phi %struct.Memory* [ %579, %block_40065b ], [ %566, %block_400787 ], [ %551, %block_400b0b ], [ %534, %block_400a43 ], [ %521, %block_40068d ], [ %506, %block_400a11 ], [ %493, %block_400881 ], [ %480, %block_400593 ], [ %465, %block_400917 ], [ %450, %block_40081d ], [ %430, %block_400ad9 ], [ %417, %block_400723 ], [ %400, %block_400b3d ], [ %385, %block_400aa7 ], [ %370, %block_400629 ], [ %355, %block_4009ad ], [ %340, %block_400a75 ], [ %325, %block_4008b3 ], [ %308, %block_400b6f ], [ %295, %block_4007b9 ], [ %282, %block_4006bf ], [ %197, %block_4005c5 ], [ %182, %block_400949 ], [ %167, %block_40084f ], [ %152, %block_400755 ], [ %137, %block_4009df ], [ %122, %block_4008e5 ], [ %105, %block_4007eb ], [ %90, %block_4006f1 ], [ %75, %block_4005f7 ], [ %60, %block_40097b ]
  %580 = load i64, i64* %RBP, align 8
  %581 = add i64 %580, -8
  %582 = load i64, i64* %PC, align 8
  %583 = add i64 %582, 4
  store i64 %583, i64* %PC, align 8
  %584 = inttoptr i64 %581 to i64*
  %585 = load i64, i64* %584, align 8
  store i64 %585, i64* %RAX, align 8, !tbaa !2428
  %586 = add i64 %585, 4
  store i64 %586, i64* %RCX, align 8, !tbaa !2428
  %587 = icmp ugt i64 %585, -5
  %588 = zext i1 %587 to i8
  store i8 %588, i8* %12, align 1, !tbaa !2432
  %589 = trunc i64 %586 to i32
  %590 = and i32 %589, 255
  %591 = tail call i32 @llvm.ctpop.i32(i32 %590) #9
  %592 = trunc i32 %591 to i8
  %593 = and i8 %592, 1
  %594 = xor i8 %593, 1
  store i8 %594, i8* %19, align 1, !tbaa !2446
  %595 = xor i64 %586, %585
  %596 = lshr i64 %595, 4
  %597 = trunc i64 %596 to i8
  %598 = and i8 %597, 1
  store i8 %598, i8* %25, align 1, !tbaa !2447
  %599 = icmp eq i64 %586, 0
  %600 = zext i1 %599 to i8
  store i8 %600, i8* %28, align 1, !tbaa !2448
  %601 = lshr i64 %586, 63
  %602 = trunc i64 %601 to i8
  store i8 %602, i8* %31, align 1, !tbaa !2449
  %603 = lshr i64 %585, 63
  %604 = xor i64 %601, %603
  %605 = add nuw nsw i64 %604, %601
  %606 = icmp eq i64 %605, 2
  %607 = zext i1 %606 to i8
  store i8 %607, i8* %37, align 1, !tbaa !2450
  %608 = add i64 %582, 15
  store i64 %608, i64* %PC, align 8
  store i64 %586, i64* %584, align 8
  %609 = load i32*, i32** %47, align 8
  %610 = load i64, i64* %PC, align 8
  %611 = add i64 %610, 3
  store i64 %611, i64* %PC, align 8
  %612 = load i32, i32* %609, align 4
  %613 = sext i32 %612 to i64
  store i64 %613, i64* %RAX, align 8, !tbaa !2428
  %614 = shl nsw i64 %613, 3
  %615 = add i64 %614, add (i64 ptrtoint (%seg_602020__data_type* @seg_602020__data to i64), i64 16)
  %616 = add i64 %610, 11
  store i64 %616, i64* %PC, align 8
  %617 = inttoptr i64 %615 to i64*
  %618 = load i64, i64* %617, align 8
  store i64 %618, i64* %RAX, align 8, !tbaa !2428
  %619 = load i64, i64* %RBP, align 8
  %620 = add i64 %619, -40
  %621 = add i64 %610, 15
  store i64 %621, i64* %PC, align 8
  %622 = inttoptr i64 %620 to i64*
  store i64 %618, i64* %622, align 8
  %623 = load i64, i64* %PC, align 8
  %624 = sub i64 %623, %.sink5
  %625 = load i64, i64* %RBP, align 8
  %626 = add i64 %625, -40
  %627 = add i64 %624, 4
  store i64 %627, i64* %PC, align 8
  %628 = inttoptr i64 %626 to i64*
  %629 = load i64, i64* %628, align 8
  store i64 %629, i64* %RAX, align 8, !tbaa !2428
  store i64 %629, i64* %PC, align 8, !tbaa !2428
  switch i64 %629, label %678 [
    i64 4196224, label %block_400780
    i64 4197124, label %block_400b04
    i64 4196874, label %block_400a0a
    i64 4195924, label %block_400654
    i64 4196624, label %block_400910
    i64 4196374, label %block_400816
    i64 4196124, label %block_40071c
    i64 4196924, label %block_400a3c
    i64 4197024, label %block_400aa0
    i64 4197074, label %block_400ad2
    i64 4196324, label %block_4007e4
    i64 4197224, label %block_400b68
    i64 4196074, label %block_4006ea
    i64 4196474, label %block_40087a
    i64 4196824, label %block_4009d8
    i64 4195724, label %block_40058c
    i64 4196174, label %block_40074e
    i64 4196724, label %block_400974
    i64 4196424, label %block_400848
    i64 4195824, label %block_4005f0
    i64 4197279, label %block_400b9f
    i64 4196574, label %block_4008de
    i64 4196674, label %block_400942
    i64 4196024, label %block_4006b8
    i64 4197174, label %block_400b36
    i64 4196274, label %block_4007b2
    i64 4195774, label %block_4005be
    i64 4196974, label %block_400a6e
    i64 4195705, label %block_400579
    i64 4196524, label %block_4008ac
    i64 4196774, label %block_4009a6
    i64 4195974, label %block_400686
    i64 4195874, label %block_400622
  ]

block_400b04:                                     ; preds = %block_400586
  %630 = add i64 %625, -12
  store i64 4197131, i64* %PC, align 8
  %631 = inttoptr i64 %630 to i32*
  store i32 29, i32* %631, align 4
  %.pre123 = load i64, i64* %RBP, align 8
  %.pre124 = load i64, i64* %PC, align 8
  br label %block_400b0b

block_40056b:                                     ; preds = %block_400543
  %632 = load i64, i64* %RBP, align 8
  %633 = add i64 %632, -24
  %634 = add i64 %267, 4
  store i64 %634, i64* %PC, align 8
  %635 = inttoptr i64 %633 to i64*
  %636 = load i64, i64* %635, align 8
  store i64 %636, i64* %RAX, align 8, !tbaa !2428
  %637 = shl i64 %636, 3
  %638 = add i64 %637, add (i64 ptrtoint (%seg_400d00__rodata_type* @seg_400d00__rodata to i64), i64 8)
  %639 = add i64 %267, 12
  store i64 %639, i64* %PC, align 8
  %640 = inttoptr i64 %638 to i64*
  %641 = load i64, i64* %640, align 8
  store i64 %641, i64* %RCX, align 8, !tbaa !2428
  store i64 %641, i64* %PC, align 8, !tbaa !2428
  switch i64 %641, label %680 [
    i64 4197081, label %block_400ad9
    i64 4196181, label %block_400755
    i64 4196431, label %block_40084f
    i64 4196681, label %block_400949
    i64 4196031, label %block_4006bf
    i64 4197181, label %block_400b3d
    i64 4196281, label %block_4007b9
    i64 4196531, label %block_4008b3
    i64 4196781, label %block_4009ad
    i64 4195931, label %block_40065b
    i64 4196831, label %block_4009df
    i64 4196581, label %block_4008e5
    i64 4196381, label %block_40081d
    i64 4195831, label %block_4005f7
    i64 4196731, label %block_40097b
    i64 4196631, label %block_400917
    i64 4196081, label %block_4006f1
    i64 4197231, label %block_400b6f
    i64 4196131, label %block_400723
    i64 4196331, label %block_4007eb
    i64 4195731, label %block_400593
    i64 4196881, label %block_400a11
    i64 4197031, label %block_400aa7
    i64 4195881, label %block_400629
    i64 4196481, label %block_400881
    i64 4196231, label %block_400787
    i64 4195981, label %block_40068d
    i64 4197131, label %block_400b0b
    i64 4196981, label %block_400a75
    i64 4195712, label %block_400580
    i64 4196931, label %block_400a43
    i64 4195781, label %block_4005c5
  ]

block_400780:                                     ; preds = %block_400586
  %642 = add i64 %625, -12
  store i64 4196231, i64* %PC, align 8
  %643 = inttoptr i64 %642 to i32*
  store i32 11, i32* %643, align 4
  %.pre125 = load i64, i64* %RBP, align 8
  %.pre126 = load i64, i64* %PC, align 8
  br label %block_400787

block_400b9a:                                     ; preds = %block_400543
  %644 = add i64 %267, -1623
  store i64 %644, i64* %PC, align 8, !tbaa !2428
  br label %block_400543

block_400580:                                     ; preds = %block_40056b, %block_400579
  %645 = phi i64 [ %phitmp, %block_400579 ], [ 4195716, %block_40056b ]
  %MEMORY.33 = phi %struct.Memory* [ %MEMORY.32, %block_400579 ], [ %2, %block_40056b ]
  %646 = load i64, i64* %RSP, align 8
  %647 = add i64 %646, 48
  store i64 %647, i64* %RSP, align 8, !tbaa !2428
  %648 = icmp ugt i64 %646, -49
  %649 = zext i1 %648 to i8
  store i8 %649, i8* %12, align 1, !tbaa !2432
  %650 = trunc i64 %647 to i32
  %651 = and i32 %650, 255
  %652 = tail call i32 @llvm.ctpop.i32(i32 %651) #9
  %653 = trunc i32 %652 to i8
  %654 = and i8 %653, 1
  %655 = xor i8 %654, 1
  store i8 %655, i8* %19, align 1, !tbaa !2446
  %656 = xor i64 %646, 16
  %657 = xor i64 %656, %647
  %658 = lshr i64 %657, 4
  %659 = trunc i64 %658 to i8
  %660 = and i8 %659, 1
  store i8 %660, i8* %25, align 1, !tbaa !2447
  %661 = icmp eq i64 %647, 0
  %662 = zext i1 %661 to i8
  store i8 %662, i8* %28, align 1, !tbaa !2448
  %663 = lshr i64 %647, 63
  %664 = trunc i64 %663 to i8
  store i8 %664, i8* %31, align 1, !tbaa !2449
  %665 = lshr i64 %646, 63
  %666 = xor i64 %663, %665
  %667 = add nuw nsw i64 %666, %663
  %668 = icmp eq i64 %667, 2
  %669 = zext i1 %668 to i8
  store i8 %669, i8* %37, align 1, !tbaa !2450
  %670 = add i64 %645, 1
  store i64 %670, i64* %PC, align 8
  %671 = add i64 %646, 56
  %672 = inttoptr i64 %647 to i64*
  %673 = load i64, i64* %672, align 8
  store i64 %673, i64* %RBP, align 8, !tbaa !2428
  store i64 %671, i64* %RSP, align 8, !tbaa !2428
  %674 = add i64 %645, 2
  store i64 %674, i64* %PC, align 8
  %675 = inttoptr i64 %671 to i64*
  %676 = load i64, i64* %675, align 8
  store i64 %676, i64* %PC, align 8, !tbaa !2428
  %677 = add i64 %646, 64
  store i64 %677, i64* %RSP, align 8, !tbaa !2428
  ret %struct.Memory* %MEMORY.33

; <label>:678:                                    ; preds = %block_400586
  %679 = tail call %struct.Memory* @__remill_jump(%struct.State* nonnull %0, i64 %629, %struct.Memory* %MEMORY.32)
  ret %struct.Memory* %679

; <label>:680:                                    ; preds = %block_40056b
  %681 = tail call %struct.Memory* @__remill_missing_block(%struct.State* nonnull %0, i64 %641, %struct.Memory* %2)
  ret %struct.Memory* %681
}

; Function Attrs: noinline nounwind
define %struct.Memory* @sub_400b3d(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) local_unnamed_addr #6 {
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %PC, align 8
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %11 = bitcast i64* %RAX to i32**
  br label %block_400b3d

block_4005f0:                                     ; preds = %block_400586
  %12 = add i64 %191, -12
  store i64 4195831, i64* %PC, align 8
  %13 = inttoptr i64 %12 to i32*
  store i32 3, i32* %13, align 4
  %14 = load i64, i64* %PC, align 8
  %15 = tail call %struct.Memory* @sub_4005f7(%struct.State* nonnull %0, i64 %14, %struct.Memory* %2)
  ret %struct.Memory* %15

block_4007e4:                                     ; preds = %block_400586
  %16 = add i64 %191, -12
  store i64 4196331, i64* %PC, align 8
  %17 = inttoptr i64 %16 to i32*
  store i32 13, i32* %17, align 4
  %18 = load i64, i64* %PC, align 8
  %19 = tail call %struct.Memory* @sub_4007eb(%struct.State* nonnull %0, i64 %18, %struct.Memory* %2)
  ret %struct.Memory* %19

block_4008de:                                     ; preds = %block_400586
  %20 = add i64 %191, -12
  store i64 4196581, i64* %PC, align 8
  %21 = inttoptr i64 %20 to i32*
  store i32 18, i32* %21, align 4
  %22 = load i64, i64* %PC, align 8
  %23 = tail call %struct.Memory* @sub_4008e5(%struct.State* nonnull %0, i64 %22, %struct.Memory* %2)
  ret %struct.Memory* %23

block_4009d8:                                     ; preds = %block_400586
  %24 = add i64 %191, -12
  store i64 4196831, i64* %PC, align 8
  %25 = inttoptr i64 %24 to i32*
  store i32 23, i32* %25, align 4
  %26 = load i64, i64* %PC, align 8
  %27 = tail call %struct.Memory* @sub_4009df(%struct.State* nonnull %0, i64 %26, %struct.Memory* %2)
  ret %struct.Memory* %27

block_400ad2:                                     ; preds = %block_400586
  %28 = add i64 %191, -12
  store i64 4197081, i64* %PC, align 8
  %29 = inttoptr i64 %28 to i32*
  store i32 28, i32* %29, align 4
  %30 = load i64, i64* %PC, align 8
  %31 = tail call %struct.Memory* @sub_400ad9(%struct.State* nonnull %0, i64 %30, %struct.Memory* %2)
  ret %struct.Memory* %31

block_4006b8:                                     ; preds = %block_400586
  %32 = add i64 %191, -12
  store i64 4196031, i64* %PC, align 8
  %33 = inttoptr i64 %32 to i32*
  store i32 7, i32* %33, align 4
  %34 = load i64, i64* %RBP, align 8
  %35 = add i64 %34, -12
  %36 = load i64, i64* %PC, align 8
  %37 = add i64 %36, 3
  store i64 %37, i64* %PC, align 8
  %38 = inttoptr i64 %35 to i32*
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i64
  store i64 %40, i64* %RDI, align 8, !tbaa !2428
  %41 = add i64 %36, -431
  %42 = add i64 %36, 8
  %43 = load i64, i64* %4, align 8, !tbaa !2428
  %44 = add i64 %43, -8
  %45 = inttoptr i64 %44 to i64*
  store i64 %42, i64* %45, align 8
  store i64 %44, i64* %4, align 8, !tbaa !2428
  store i64 %41, i64* %PC, align 8, !tbaa !2428
  %46 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %41, %struct.Memory* %2)
  br label %block_400586

block_4007b2:                                     ; preds = %block_400586
  %47 = add i64 %191, -12
  store i64 4196281, i64* %PC, align 8
  %48 = inttoptr i64 %47 to i32*
  store i32 12, i32* %48, align 4
  %49 = load i64, i64* %PC, align 8
  %50 = tail call %struct.Memory* @sub_4007b9(%struct.State* nonnull %0, i64 %49, %struct.Memory* %2)
  ret %struct.Memory* %50

block_4008ac:                                     ; preds = %block_400586
  %51 = add i64 %191, -12
  store i64 4196531, i64* %PC, align 8
  %52 = inttoptr i64 %51 to i32*
  store i32 17, i32* %52, align 4
  %53 = load i64, i64* %PC, align 8
  %54 = tail call %struct.Memory* @sub_4008b3(%struct.State* nonnull %0, i64 %53, %struct.Memory* %2)
  ret %struct.Memory* %54

block_4009a6:                                     ; preds = %block_400586
  %55 = add i64 %191, -12
  store i64 4196781, i64* %PC, align 8
  %56 = inttoptr i64 %55 to i32*
  store i32 22, i32* %56, align 4
  %57 = load i64, i64* %PC, align 8
  %58 = tail call %struct.Memory* @sub_4009ad(%struct.State* nonnull %0, i64 %57, %struct.Memory* %2)
  ret %struct.Memory* %58

block_400aa0:                                     ; preds = %block_400586
  %59 = add i64 %191, -12
  store i64 4197031, i64* %PC, align 8
  %60 = inttoptr i64 %59 to i32*
  store i32 27, i32* %60, align 4
  %61 = load i64, i64* %PC, align 8
  %62 = tail call %struct.Memory* @sub_400aa7(%struct.State* nonnull %0, i64 %61, %struct.Memory* %2)
  ret %struct.Memory* %62

block_40058c:                                     ; preds = %block_400586
  %63 = add i64 %191, -12
  store i64 4195731, i64* %PC, align 8
  %64 = inttoptr i64 %63 to i32*
  store i32 1, i32* %64, align 4
  %65 = load i64, i64* %PC, align 8
  %66 = tail call %struct.Memory* @sub_400593(%struct.State* nonnull %0, i64 %65, %struct.Memory* %2)
  ret %struct.Memory* %66

block_400686:                                     ; preds = %block_400586
  %67 = add i64 %191, -12
  store i64 4195981, i64* %PC, align 8
  %68 = inttoptr i64 %67 to i32*
  store i32 6, i32* %68, align 4
  %69 = load i64, i64* %PC, align 8
  %70 = tail call %struct.Memory* @sub_40068d(%struct.State* nonnull %0, i64 %69, %struct.Memory* %2)
  ret %struct.Memory* %70

block_40087a:                                     ; preds = %block_400586
  %71 = add i64 %191, -12
  store i64 4196481, i64* %PC, align 8
  %72 = inttoptr i64 %71 to i32*
  store i32 16, i32* %72, align 4
  %73 = load i64, i64* %PC, align 8
  %74 = tail call %struct.Memory* @sub_400881(%struct.State* nonnull %0, i64 %73, %struct.Memory* %2)
  ret %struct.Memory* %74

block_400974:                                     ; preds = %block_400586
  %75 = add i64 %191, -12
  store i64 4196731, i64* %PC, align 8
  %76 = inttoptr i64 %75 to i32*
  store i32 21, i32* %76, align 4
  %77 = load i64, i64* %PC, align 8
  %78 = tail call %struct.Memory* @sub_40097b(%struct.State* nonnull %0, i64 %77, %struct.Memory* %2)
  ret %struct.Memory* %78

block_400a6e:                                     ; preds = %block_400586
  %79 = add i64 %191, -12
  store i64 4196981, i64* %PC, align 8
  %80 = inttoptr i64 %79 to i32*
  store i32 26, i32* %80, align 4
  %81 = load i64, i64* %PC, align 8
  %82 = tail call %struct.Memory* @sub_400a75(%struct.State* nonnull %0, i64 %81, %struct.Memory* %2)
  ret %struct.Memory* %82

block_400780:                                     ; preds = %block_400586
  %83 = add i64 %191, -12
  store i64 4196231, i64* %PC, align 8
  %84 = inttoptr i64 %83 to i32*
  store i32 11, i32* %84, align 4
  %85 = load i64, i64* %PC, align 8
  %86 = tail call %struct.Memory* @sub_400787(%struct.State* nonnull %0, i64 %85, %struct.Memory* %2)
  ret %struct.Memory* %86

block_400b68:                                     ; preds = %block_400586
  %87 = add i64 %191, -12
  store i64 4197231, i64* %PC, align 8
  %88 = inttoptr i64 %87 to i32*
  store i32 31, i32* %88, align 4
  %89 = load i64, i64* %PC, align 8
  %90 = tail call %struct.Memory* @sub_400b6f(%struct.State* nonnull %0, i64 %89, %struct.Memory* %2)
  ret %struct.Memory* %90

block_400654:                                     ; preds = %block_400586
  %91 = add i64 %191, -12
  store i64 4195931, i64* %PC, align 8
  %92 = inttoptr i64 %91 to i32*
  store i32 5, i32* %92, align 4
  %93 = load i64, i64* %PC, align 8
  %94 = tail call %struct.Memory* @sub_40065b(%struct.State* nonnull %0, i64 %93, %struct.Memory* %2)
  ret %struct.Memory* %94

block_40074e:                                     ; preds = %block_400586
  %95 = add i64 %191, -12
  store i64 4196181, i64* %PC, align 8
  %96 = inttoptr i64 %95 to i32*
  store i32 10, i32* %96, align 4
  %97 = load i64, i64* %PC, align 8
  %98 = tail call %struct.Memory* @sub_400755(%struct.State* nonnull %0, i64 %97, %struct.Memory* %2)
  ret %struct.Memory* %98

block_400848:                                     ; preds = %block_400586
  %99 = add i64 %191, -12
  store i64 4196431, i64* %PC, align 8
  %100 = inttoptr i64 %99 to i32*
  store i32 15, i32* %100, align 4
  %101 = load i64, i64* %PC, align 8
  %102 = tail call %struct.Memory* @sub_40084f(%struct.State* nonnull %0, i64 %101, %struct.Memory* %2)
  ret %struct.Memory* %102

block_4005be:                                     ; preds = %block_400586
  %103 = add i64 %191, -12
  store i64 4195781, i64* %PC, align 8
  %104 = inttoptr i64 %103 to i32*
  store i32 2, i32* %104, align 4
  %105 = load i64, i64* %PC, align 8
  %106 = tail call %struct.Memory* @sub_4005c5(%struct.State* nonnull %0, i64 %105, %struct.Memory* %2)
  ret %struct.Memory* %106

block_400942:                                     ; preds = %block_400586
  %107 = add i64 %191, -12
  store i64 4196681, i64* %PC, align 8
  %108 = inttoptr i64 %107 to i32*
  store i32 20, i32* %108, align 4
  %109 = load i64, i64* %PC, align 8
  %110 = tail call %struct.Memory* @sub_400949(%struct.State* nonnull %0, i64 %109, %struct.Memory* %2)
  ret %struct.Memory* %110

block_4006ea:                                     ; preds = %block_400586
  %111 = add i64 %191, -12
  store i64 4196081, i64* %PC, align 8
  %112 = inttoptr i64 %111 to i32*
  store i32 8, i32* %112, align 4
  %113 = load i64, i64* %PC, align 8
  %114 = tail call %struct.Memory* @sub_4006f1(%struct.State* nonnull %0, i64 %113, %struct.Memory* %2)
  ret %struct.Memory* %114

block_400579:                                     ; preds = %block_400586
  %115 = add i64 %191, -12
  store i64 4195712, i64* %PC, align 8
  %116 = inttoptr i64 %115 to i32*
  store i32 0, i32* %116, align 4
  %117 = load i64, i64* %PC, align 8
  %118 = tail call %struct.Memory* @sub_400580(%struct.State* nonnull %0, i64 %117, %struct.Memory* %2)
  ret %struct.Memory* %118

block_400b3d:                                     ; preds = %block_400b36, %3
  %119 = phi i64 [ %.pre, %block_400b36 ], [ %1, %3 ]
  %120 = load i64, i64* %RBP, align 8
  %121 = add i64 %120, -12
  %122 = add i64 %119, 3
  store i64 %122, i64* %PC, align 8
  %123 = inttoptr i64 %121 to i32*
  %124 = load i32, i32* %123, align 4
  %125 = zext i32 %124 to i64
  store i64 %125, i64* %RDI, align 8, !tbaa !2428
  %126 = add i64 %119, -1581
  %127 = add i64 %119, 8
  %128 = load i64, i64* %4, align 8, !tbaa !2428
  %129 = add i64 %128, -8
  %130 = inttoptr i64 %129 to i64*
  store i64 %127, i64* %130, align 8
  store i64 %129, i64* %4, align 8, !tbaa !2428
  store i64 %126, i64* %PC, align 8, !tbaa !2428
  %131 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %126, %struct.Memory* %2)
  br label %block_400586

block_400a3c:                                     ; preds = %block_400586
  %132 = add i64 %191, -12
  store i64 4196931, i64* %PC, align 8
  %133 = inttoptr i64 %132 to i32*
  store i32 25, i32* %133, align 4
  %134 = load i64, i64* %PC, align 8
  %135 = tail call %struct.Memory* @sub_400a43(%struct.State* nonnull %0, i64 %134, %struct.Memory* %2)
  ret %struct.Memory* %135

block_400b36:                                     ; preds = %block_400586
  %136 = add i64 %191, -12
  store i64 4197181, i64* %PC, align 8
  %137 = inttoptr i64 %136 to i32*
  store i32 30, i32* %137, align 4
  %.pre = load i64, i64* %PC, align 8
  br label %block_400b3d

block_400622:                                     ; preds = %block_400586
  %138 = add i64 %191, -12
  store i64 4195881, i64* %PC, align 8
  %139 = inttoptr i64 %138 to i32*
  store i32 4, i32* %139, align 4
  %140 = load i64, i64* %PC, align 8
  %141 = tail call %struct.Memory* @sub_400629(%struct.State* nonnull %0, i64 %140, %struct.Memory* %2)
  ret %struct.Memory* %141

block_40071c:                                     ; preds = %block_400586
  %142 = add i64 %191, -12
  store i64 4196131, i64* %PC, align 8
  %143 = inttoptr i64 %142 to i32*
  store i32 9, i32* %143, align 4
  %144 = load i64, i64* %PC, align 8
  %145 = tail call %struct.Memory* @sub_400723(%struct.State* nonnull %0, i64 %144, %struct.Memory* %2)
  ret %struct.Memory* %145

block_400586:                                     ; preds = %block_400b3d, %block_4006b8
  %.sink5 = phi i64 [ 1501, %block_400b3d ], [ 351, %block_4006b8 ]
  %146 = load i64, i64* %RBP, align 8
  %147 = add i64 %146, -8
  %148 = load i64, i64* %PC, align 8
  %149 = add i64 %148, 4
  store i64 %149, i64* %PC, align 8
  %150 = inttoptr i64 %147 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %RAX, align 8, !tbaa !2428
  %152 = add i64 %151, 4
  store i64 %152, i64* %RCX, align 8, !tbaa !2428
  %153 = icmp ugt i64 %151, -5
  %154 = zext i1 %153 to i8
  store i8 %154, i8* %5, align 1, !tbaa !2432
  %155 = trunc i64 %152 to i32
  %156 = and i32 %155, 255
  %157 = tail call i32 @llvm.ctpop.i32(i32 %156) #9
  %158 = trunc i32 %157 to i8
  %159 = and i8 %158, 1
  %160 = xor i8 %159, 1
  store i8 %160, i8* %6, align 1, !tbaa !2446
  %161 = xor i64 %152, %151
  %162 = lshr i64 %161, 4
  %163 = trunc i64 %162 to i8
  %164 = and i8 %163, 1
  store i8 %164, i8* %7, align 1, !tbaa !2447
  %165 = icmp eq i64 %152, 0
  %166 = zext i1 %165 to i8
  store i8 %166, i8* %8, align 1, !tbaa !2448
  %167 = lshr i64 %152, 63
  %168 = trunc i64 %167 to i8
  store i8 %168, i8* %9, align 1, !tbaa !2449
  %169 = lshr i64 %151, 63
  %170 = xor i64 %167, %169
  %171 = add nuw nsw i64 %170, %167
  %172 = icmp eq i64 %171, 2
  %173 = zext i1 %172 to i8
  store i8 %173, i8* %10, align 1, !tbaa !2450
  %174 = add i64 %148, 15
  store i64 %174, i64* %PC, align 8
  store i64 %152, i64* %150, align 8
  %175 = load i32*, i32** %11, align 8
  %176 = load i64, i64* %PC, align 8
  %177 = add i64 %176, 3
  store i64 %177, i64* %PC, align 8
  %178 = load i32, i32* %175, align 4
  %179 = sext i32 %178 to i64
  store i64 %179, i64* %RAX, align 8, !tbaa !2428
  %180 = shl nsw i64 %179, 3
  %181 = add i64 %180, add (i64 ptrtoint (%seg_602020__data_type* @seg_602020__data to i64), i64 16)
  %182 = add i64 %176, 11
  store i64 %182, i64* %PC, align 8
  %183 = inttoptr i64 %181 to i64*
  %184 = load i64, i64* %183, align 8
  store i64 %184, i64* %RAX, align 8, !tbaa !2428
  %185 = load i64, i64* %RBP, align 8
  %186 = add i64 %185, -40
  %187 = add i64 %176, 15
  store i64 %187, i64* %PC, align 8
  %188 = inttoptr i64 %186 to i64*
  store i64 %184, i64* %188, align 8
  %189 = load i64, i64* %PC, align 8
  %190 = sub i64 %189, %.sink5
  %191 = load i64, i64* %RBP, align 8
  %192 = add i64 %191, -40
  %193 = add i64 %190, 4
  store i64 %193, i64* %PC, align 8
  %194 = inttoptr i64 %192 to i64*
  %195 = load i64, i64* %194, align 8
  store i64 %195, i64* %RAX, align 8, !tbaa !2428
  store i64 %195, i64* %PC, align 8, !tbaa !2428
  switch i64 %195, label %212 [
    i64 4197124, label %block_400b04
    i64 4196874, label %block_400a0a
    i64 4196624, label %block_400910
    i64 4196374, label %block_400816
    i64 4196124, label %block_40071c
    i64 4195874, label %block_400622
    i64 4197174, label %block_400b36
    i64 4196924, label %block_400a3c
    i64 4197024, label %block_400aa0
    i64 4196774, label %block_4009a6
    i64 4196524, label %block_4008ac
    i64 4197074, label %block_400ad2
    i64 4195924, label %block_400654
    i64 4195824, label %block_4005f0
    i64 4195705, label %block_400579
    i64 4196974, label %block_400a6e
    i64 4196324, label %block_4007e4
    i64 4196024, label %block_4006b8
    i64 4196574, label %block_4008de
    i64 4196274, label %block_4007b2
    i64 4195724, label %block_40058c
    i64 4196824, label %block_4009d8
    i64 4195974, label %block_400686
    i64 4196474, label %block_40087a
    i64 4196724, label %block_400974
    i64 4196224, label %block_400780
    i64 4197224, label %block_400b68
    i64 4196074, label %block_4006ea
    i64 4196174, label %block_40074e
    i64 4196424, label %block_400848
    i64 4195774, label %block_4005be
    i64 4196674, label %block_400942
  ]

block_400816:                                     ; preds = %block_400586
  %196 = add i64 %191, -12
  store i64 4196381, i64* %PC, align 8
  %197 = inttoptr i64 %196 to i32*
  store i32 14, i32* %197, align 4
  %198 = load i64, i64* %PC, align 8
  %199 = tail call %struct.Memory* @sub_40081d(%struct.State* nonnull %0, i64 %198, %struct.Memory* %2)
  ret %struct.Memory* %199

block_400910:                                     ; preds = %block_400586
  %200 = add i64 %191, -12
  store i64 4196631, i64* %PC, align 8
  %201 = inttoptr i64 %200 to i32*
  store i32 19, i32* %201, align 4
  %202 = load i64, i64* %PC, align 8
  %203 = tail call %struct.Memory* @sub_400917(%struct.State* nonnull %0, i64 %202, %struct.Memory* %2)
  ret %struct.Memory* %203

block_400a0a:                                     ; preds = %block_400586
  %204 = add i64 %191, -12
  store i64 4196881, i64* %PC, align 8
  %205 = inttoptr i64 %204 to i32*
  store i32 24, i32* %205, align 4
  %206 = load i64, i64* %PC, align 8
  %207 = tail call %struct.Memory* @sub_400a11(%struct.State* nonnull %0, i64 %206, %struct.Memory* %2)
  ret %struct.Memory* %207

block_400b04:                                     ; preds = %block_400586
  %208 = add i64 %191, -12
  store i64 4197131, i64* %PC, align 8
  %209 = inttoptr i64 %208 to i32*
  store i32 29, i32* %209, align 4
  %210 = load i64, i64* %PC, align 8
  %211 = tail call %struct.Memory* @sub_400b0b(%struct.State* nonnull %0, i64 %210, %struct.Memory* %2)
  ret %struct.Memory* %211

; <label>:212:                                    ; preds = %block_400586
  %213 = tail call %struct.Memory* @__remill_jump(%struct.State* nonnull %0, i64 %195, %struct.Memory* %2)
  ret %struct.Memory* %213
}

; Function Attrs: noinline nounwind
define %struct.Memory* @sub_4007eb(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) local_unnamed_addr #6 {
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %PC, align 8
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RSP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %10 = bitcast i64* %RAX to i32**
  br label %block_4007eb

block_40087a:                                     ; preds = %block_400586
  %11 = add i64 %237, -12
  store i64 4196481, i64* %PC, align 8
  %12 = inttoptr i64 %11 to i32*
  store i32 16, i32* %12, align 4
  %13 = load i64, i64* %PC, align 8
  %14 = tail call %struct.Memory* @sub_400881(%struct.State* nonnull %0, i64 %13, %struct.Memory* %2)
  ret %struct.Memory* %14

block_400974:                                     ; preds = %block_400586
  %15 = add i64 %237, -12
  store i64 4196731, i64* %PC, align 8
  %16 = inttoptr i64 %15 to i32*
  store i32 21, i32* %16, align 4
  %17 = load i64, i64* %RBP, align 8
  %18 = add i64 %17, -12
  %19 = load i64, i64* %PC, align 8
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC, align 8
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RDI, align 8, !tbaa !2428
  %24 = add i64 %19, -1131
  br label %block_400586.backedge

block_400586.backedge:                            ; preds = %block_400974, %block_400a6e, %block_4006ea, %block_400b68, %block_4006b8, %block_400b36, %block_4008ac, %block_4009a6, %block_4005f0, %block_4007b2
  %.sink250 = phi i64 [ %19, %block_400974 ], [ %34, %block_400a6e ], [ %57, %block_4006ea ], [ %67, %block_400b68 ], [ %142, %block_4006b8 ], [ %152, %block_400b36 ], [ %166, %block_4008ac ], [ %176, %block_4009a6 ], [ %186, %block_4005f0 ], [ %282, %block_4007b2 ]
  %.sink245 = phi i64 [ %24, %block_400974 ], [ %39, %block_400a6e ], [ %62, %block_4006ea ], [ %72, %block_400b68 ], [ %147, %block_4006b8 ], [ %157, %block_400b36 ], [ %171, %block_4008ac ], [ %181, %block_4009a6 ], [ %191, %block_4005f0 ], [ %287, %block_4007b2 ]
  %.sink5.be = phi i64 [ 1051, %block_400974 ], [ 1301, %block_400a6e ], [ 401, %block_4006ea ], [ 1551, %block_400b68 ], [ 351, %block_4006b8 ], [ 1501, %block_400b36 ], [ 851, %block_4008ac ], [ 1101, %block_4009a6 ], [ 151, %block_4005f0 ], [ 601, %block_4007b2 ]
  %25 = add i64 %.sink250, 8
  %26 = load i64, i64* %RSP, align 8, !tbaa !2428
  %27 = add i64 %26, -8
  %28 = inttoptr i64 %27 to i64*
  store i64 %25, i64* %28, align 8
  store i64 %27, i64* %RSP, align 8, !tbaa !2428
  store i64 %.sink245, i64* %PC, align 8, !tbaa !2428
  %29 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %.sink245, %struct.Memory* %2)
  br label %block_400586

block_400a6e:                                     ; preds = %block_400586
  %30 = add i64 %237, -12
  store i64 4196981, i64* %PC, align 8
  %31 = inttoptr i64 %30 to i32*
  store i32 26, i32* %31, align 4
  %32 = load i64, i64* %RBP, align 8
  %33 = add i64 %32, -12
  %34 = load i64, i64* %PC, align 8
  %35 = add i64 %34, 3
  store i64 %35, i64* %PC, align 8
  %36 = inttoptr i64 %33 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i64
  store i64 %38, i64* %RDI, align 8, !tbaa !2428
  %39 = add i64 %34, -1381
  br label %block_400586.backedge

block_4007eb:                                     ; preds = %block_4007e4, %3
  %40 = phi i64 [ %.pre, %block_4007e4 ], [ %1, %3 ]
  %41 = load i64, i64* %RBP, align 8
  %42 = add i64 %41, -12
  %43 = add i64 %40, 3
  store i64 %43, i64* %PC, align 8
  %44 = inttoptr i64 %42 to i32*
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i64
  store i64 %46, i64* %RDI, align 8, !tbaa !2428
  %47 = add i64 %40, -731
  %48 = add i64 %40, 8
  %49 = load i64, i64* %RSP, align 8, !tbaa !2428
  %50 = add i64 %49, -8
  %51 = inttoptr i64 %50 to i64*
  store i64 %48, i64* %51, align 8
  store i64 %50, i64* %RSP, align 8, !tbaa !2428
  store i64 %47, i64* %PC, align 8, !tbaa !2428
  %52 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %47, %struct.Memory* %2)
  br label %block_400586

block_4006ea:                                     ; preds = %block_400586
  %53 = add i64 %237, -12
  store i64 4196081, i64* %PC, align 8
  %54 = inttoptr i64 %53 to i32*
  store i32 8, i32* %54, align 4
  %55 = load i64, i64* %RBP, align 8
  %56 = add i64 %55, -12
  %57 = load i64, i64* %PC, align 8
  %58 = add i64 %57, 3
  store i64 %58, i64* %PC, align 8
  %59 = inttoptr i64 %56 to i32*
  %60 = load i32, i32* %59, align 4
  %61 = zext i32 %60 to i64
  store i64 %61, i64* %RDI, align 8, !tbaa !2428
  %62 = add i64 %57, -481
  br label %block_400586.backedge

block_400b68:                                     ; preds = %block_400586
  %63 = add i64 %237, -12
  store i64 4197231, i64* %PC, align 8
  %64 = inttoptr i64 %63 to i32*
  store i32 31, i32* %64, align 4
  %65 = load i64, i64* %RBP, align 8
  %66 = add i64 %65, -12
  %67 = load i64, i64* %PC, align 8
  %68 = add i64 %67, 3
  store i64 %68, i64* %PC, align 8
  %69 = inttoptr i64 %66 to i32*
  %70 = load i32, i32* %69, align 4
  %71 = zext i32 %70 to i64
  store i64 %71, i64* %RDI, align 8, !tbaa !2428
  %72 = add i64 %67, -1631
  br label %block_400586.backedge

block_4007e4:                                     ; preds = %block_400586
  %73 = add i64 %237, -12
  store i64 4196331, i64* %PC, align 8
  %74 = inttoptr i64 %73 to i32*
  store i32 13, i32* %74, align 4
  %.pre = load i64, i64* %PC, align 8
  br label %block_4007eb

block_4008de:                                     ; preds = %block_400586
  %75 = add i64 %237, -12
  store i64 4196581, i64* %PC, align 8
  %76 = inttoptr i64 %75 to i32*
  store i32 18, i32* %76, align 4
  %77 = load i64, i64* %PC, align 8
  %78 = tail call %struct.Memory* @sub_4008e5(%struct.State* nonnull %0, i64 %77, %struct.Memory* %2)
  ret %struct.Memory* %78

block_4009d8:                                     ; preds = %block_400586
  %79 = add i64 %237, -12
  store i64 4196831, i64* %PC, align 8
  %80 = inttoptr i64 %79 to i32*
  store i32 23, i32* %80, align 4
  %81 = load i64, i64* %PC, align 8
  %82 = tail call %struct.Memory* @sub_4009df(%struct.State* nonnull %0, i64 %81, %struct.Memory* %2)
  ret %struct.Memory* %82

block_400ad2:                                     ; preds = %block_400586
  %83 = add i64 %237, -12
  store i64 4197081, i64* %PC, align 8
  %84 = inttoptr i64 %83 to i32*
  store i32 28, i32* %84, align 4
  %85 = load i64, i64* %PC, align 8
  %86 = tail call %struct.Memory* @sub_400ad9(%struct.State* nonnull %0, i64 %85, %struct.Memory* %2)
  ret %struct.Memory* %86

block_400848:                                     ; preds = %block_400586
  %87 = add i64 %237, -12
  store i64 4196431, i64* %PC, align 8
  %88 = inttoptr i64 %87 to i32*
  store i32 15, i32* %88, align 4
  %89 = load i64, i64* %PC, align 8
  %90 = tail call %struct.Memory* @sub_40084f(%struct.State* nonnull %0, i64 %89, %struct.Memory* %2)
  ret %struct.Memory* %90

block_400942:                                     ; preds = %block_400586
  %91 = add i64 %237, -12
  store i64 4196681, i64* %PC, align 8
  %92 = inttoptr i64 %91 to i32*
  store i32 20, i32* %92, align 4
  %93 = load i64, i64* %PC, align 8
  %94 = tail call %struct.Memory* @sub_400949(%struct.State* nonnull %0, i64 %93, %struct.Memory* %2)
  ret %struct.Memory* %94

block_40074e:                                     ; preds = %block_400586
  %95 = add i64 %237, -12
  store i64 4196181, i64* %PC, align 8
  %96 = inttoptr i64 %95 to i32*
  store i32 10, i32* %96, align 4
  %97 = load i64, i64* %PC, align 8
  %98 = tail call %struct.Memory* @sub_400755(%struct.State* nonnull %0, i64 %97, %struct.Memory* %2)
  ret %struct.Memory* %98

block_400579:                                     ; preds = %block_400586
  %99 = add i64 %237, -12
  store i64 4195712, i64* %PC, align 8
  %100 = inttoptr i64 %99 to i32*
  store i32 0, i32* %100, align 4
  %101 = load i64, i64* %RSP, align 8
  %102 = load i64, i64* %PC, align 8
  %103 = add i64 %101, 48
  store i64 %103, i64* %RSP, align 8, !tbaa !2428
  %104 = icmp ugt i64 %101, -49
  %105 = zext i1 %104 to i8
  store i8 %105, i8* %4, align 1, !tbaa !2432
  %106 = trunc i64 %103 to i32
  %107 = and i32 %106, 255
  %108 = tail call i32 @llvm.ctpop.i32(i32 %107) #9
  %109 = trunc i32 %108 to i8
  %110 = and i8 %109, 1
  %111 = xor i8 %110, 1
  store i8 %111, i8* %5, align 1, !tbaa !2446
  %112 = xor i64 %101, 16
  %113 = xor i64 %112, %103
  %114 = lshr i64 %113, 4
  %115 = trunc i64 %114 to i8
  %116 = and i8 %115, 1
  store i8 %116, i8* %6, align 1, !tbaa !2447
  %117 = icmp eq i64 %103, 0
  %118 = zext i1 %117 to i8
  store i8 %118, i8* %7, align 1, !tbaa !2448
  %119 = lshr i64 %103, 63
  %120 = trunc i64 %119 to i8
  store i8 %120, i8* %8, align 1, !tbaa !2449
  %121 = lshr i64 %101, 63
  %122 = xor i64 %119, %121
  %123 = add nuw nsw i64 %122, %119
  %124 = icmp eq i64 %123, 2
  %125 = zext i1 %124 to i8
  store i8 %125, i8* %9, align 1, !tbaa !2450
  %126 = add i64 %102, 5
  store i64 %126, i64* %PC, align 8
  %127 = add i64 %101, 56
  %128 = inttoptr i64 %103 to i64*
  %129 = load i64, i64* %128, align 8
  store i64 %129, i64* %RBP, align 8, !tbaa !2428
  store i64 %127, i64* %RSP, align 8, !tbaa !2428
  %130 = add i64 %102, 6
  store i64 %130, i64* %PC, align 8
  %131 = inttoptr i64 %127 to i64*
  %132 = load i64, i64* %131, align 8
  store i64 %132, i64* %PC, align 8, !tbaa !2428
  %133 = add i64 %101, 64
  store i64 %133, i64* %RSP, align 8, !tbaa !2428
  ret %struct.Memory* %2

block_400a3c:                                     ; preds = %block_400586
  %134 = add i64 %237, -12
  store i64 4196931, i64* %PC, align 8
  %135 = inttoptr i64 %134 to i32*
  store i32 25, i32* %135, align 4
  %136 = load i64, i64* %PC, align 8
  %137 = tail call %struct.Memory* @sub_400a43(%struct.State* nonnull %0, i64 %136, %struct.Memory* %2)
  ret %struct.Memory* %137

block_4006b8:                                     ; preds = %block_400586
  %138 = add i64 %237, -12
  store i64 4196031, i64* %PC, align 8
  %139 = inttoptr i64 %138 to i32*
  store i32 7, i32* %139, align 4
  %140 = load i64, i64* %RBP, align 8
  %141 = add i64 %140, -12
  %142 = load i64, i64* %PC, align 8
  %143 = add i64 %142, 3
  store i64 %143, i64* %PC, align 8
  %144 = inttoptr i64 %141 to i32*
  %145 = load i32, i32* %144, align 4
  %146 = zext i32 %145 to i64
  store i64 %146, i64* %RDI, align 8, !tbaa !2428
  %147 = add i64 %142, -431
  br label %block_400586.backedge

block_400b36:                                     ; preds = %block_400586
  %148 = add i64 %237, -12
  store i64 4197181, i64* %PC, align 8
  %149 = inttoptr i64 %148 to i32*
  store i32 30, i32* %149, align 4
  %150 = load i64, i64* %RBP, align 8
  %151 = add i64 %150, -12
  %152 = load i64, i64* %PC, align 8
  %153 = add i64 %152, 3
  store i64 %153, i64* %PC, align 8
  %154 = inttoptr i64 %151 to i32*
  %155 = load i32, i32* %154, align 4
  %156 = zext i32 %155 to i64
  store i64 %156, i64* %RDI, align 8, !tbaa !2428
  %157 = add i64 %152, -1581
  br label %block_400586.backedge

block_4005be:                                     ; preds = %block_400586
  %158 = add i64 %237, -12
  store i64 4195781, i64* %PC, align 8
  %159 = inttoptr i64 %158 to i32*
  store i32 2, i32* %159, align 4
  %160 = load i64, i64* %PC, align 8
  %161 = tail call %struct.Memory* @sub_4005c5(%struct.State* nonnull %0, i64 %160, %struct.Memory* %2)
  ret %struct.Memory* %161

block_4008ac:                                     ; preds = %block_400586
  %162 = add i64 %237, -12
  store i64 4196531, i64* %PC, align 8
  %163 = inttoptr i64 %162 to i32*
  store i32 17, i32* %163, align 4
  %164 = load i64, i64* %RBP, align 8
  %165 = add i64 %164, -12
  %166 = load i64, i64* %PC, align 8
  %167 = add i64 %166, 3
  store i64 %167, i64* %PC, align 8
  %168 = inttoptr i64 %165 to i32*
  %169 = load i32, i32* %168, align 4
  %170 = zext i32 %169 to i64
  store i64 %170, i64* %RDI, align 8, !tbaa !2428
  %171 = add i64 %166, -931
  br label %block_400586.backedge

block_4009a6:                                     ; preds = %block_400586
  %172 = add i64 %237, -12
  store i64 4196781, i64* %PC, align 8
  %173 = inttoptr i64 %172 to i32*
  store i32 22, i32* %173, align 4
  %174 = load i64, i64* %RBP, align 8
  %175 = add i64 %174, -12
  %176 = load i64, i64* %PC, align 8
  %177 = add i64 %176, 3
  store i64 %177, i64* %PC, align 8
  %178 = inttoptr i64 %175 to i32*
  %179 = load i32, i32* %178, align 4
  %180 = zext i32 %179 to i64
  store i64 %180, i64* %RDI, align 8, !tbaa !2428
  %181 = add i64 %176, -1181
  br label %block_400586.backedge

block_4005f0:                                     ; preds = %block_400586
  %182 = add i64 %237, -12
  store i64 4195831, i64* %PC, align 8
  %183 = inttoptr i64 %182 to i32*
  store i32 3, i32* %183, align 4
  %184 = load i64, i64* %RBP, align 8
  %185 = add i64 %184, -12
  %186 = load i64, i64* %PC, align 8
  %187 = add i64 %186, 3
  store i64 %187, i64* %PC, align 8
  %188 = inttoptr i64 %185 to i32*
  %189 = load i32, i32* %188, align 4
  %190 = zext i32 %189 to i64
  store i64 %190, i64* %RDI, align 8, !tbaa !2428
  %191 = add i64 %186, -231
  br label %block_400586.backedge

block_400586:                                     ; preds = %block_400586.backedge, %block_4007eb
  %.sink5 = phi i64 [ 651, %block_4007eb ], [ %.sink5.be, %block_400586.backedge ]
  %192 = load i64, i64* %RBP, align 8
  %193 = add i64 %192, -8
  %194 = load i64, i64* %PC, align 8
  %195 = add i64 %194, 4
  store i64 %195, i64* %PC, align 8
  %196 = inttoptr i64 %193 to i64*
  %197 = load i64, i64* %196, align 8
  store i64 %197, i64* %RAX, align 8, !tbaa !2428
  %198 = add i64 %197, 4
  store i64 %198, i64* %RCX, align 8, !tbaa !2428
  %199 = icmp ugt i64 %197, -5
  %200 = zext i1 %199 to i8
  store i8 %200, i8* %4, align 1, !tbaa !2432
  %201 = trunc i64 %198 to i32
  %202 = and i32 %201, 255
  %203 = tail call i32 @llvm.ctpop.i32(i32 %202) #9
  %204 = trunc i32 %203 to i8
  %205 = and i8 %204, 1
  %206 = xor i8 %205, 1
  store i8 %206, i8* %5, align 1, !tbaa !2446
  %207 = xor i64 %198, %197
  %208 = lshr i64 %207, 4
  %209 = trunc i64 %208 to i8
  %210 = and i8 %209, 1
  store i8 %210, i8* %6, align 1, !tbaa !2447
  %211 = icmp eq i64 %198, 0
  %212 = zext i1 %211 to i8
  store i8 %212, i8* %7, align 1, !tbaa !2448
  %213 = lshr i64 %198, 63
  %214 = trunc i64 %213 to i8
  store i8 %214, i8* %8, align 1, !tbaa !2449
  %215 = lshr i64 %197, 63
  %216 = xor i64 %213, %215
  %217 = add nuw nsw i64 %216, %213
  %218 = icmp eq i64 %217, 2
  %219 = zext i1 %218 to i8
  store i8 %219, i8* %9, align 1, !tbaa !2450
  %220 = add i64 %194, 15
  store i64 %220, i64* %PC, align 8
  store i64 %198, i64* %196, align 8
  %221 = load i32*, i32** %10, align 8
  %222 = load i64, i64* %PC, align 8
  %223 = add i64 %222, 3
  store i64 %223, i64* %PC, align 8
  %224 = load i32, i32* %221, align 4
  %225 = sext i32 %224 to i64
  store i64 %225, i64* %RAX, align 8, !tbaa !2428
  %226 = shl nsw i64 %225, 3
  %227 = add i64 %226, add (i64 ptrtoint (%seg_602020__data_type* @seg_602020__data to i64), i64 16)
  %228 = add i64 %222, 11
  store i64 %228, i64* %PC, align 8
  %229 = inttoptr i64 %227 to i64*
  %230 = load i64, i64* %229, align 8
  store i64 %230, i64* %RAX, align 8, !tbaa !2428
  %231 = load i64, i64* %RBP, align 8
  %232 = add i64 %231, -40
  %233 = add i64 %222, 15
  store i64 %233, i64* %PC, align 8
  %234 = inttoptr i64 %232 to i64*
  store i64 %230, i64* %234, align 8
  %235 = load i64, i64* %PC, align 8
  %236 = sub i64 %235, %.sink5
  %237 = load i64, i64* %RBP, align 8
  %238 = add i64 %237, -40
  %239 = add i64 %236, 4
  store i64 %239, i64* %PC, align 8
  %240 = inttoptr i64 %238 to i64*
  %241 = load i64, i64* %240, align 8
  store i64 %241, i64* %RAX, align 8, !tbaa !2428
  store i64 %241, i64* %PC, align 8, !tbaa !2428
  switch i64 %241, label %296 [
    i64 4195924, label %block_400654
    i64 4196224, label %block_400780
    i64 4196274, label %block_4007b2
    i64 4197124, label %block_400b04
    i64 4195974, label %block_400686
    i64 4196874, label %block_400a0a
    i64 4196624, label %block_400910
    i64 4196374, label %block_400816
    i64 4196124, label %block_40071c
    i64 4197074, label %block_400ad2
    i64 4196574, label %block_4008de
    i64 4196324, label %block_4007e4
    i64 4197224, label %block_400b68
    i64 4196074, label %block_4006ea
    i64 4196474, label %block_40087a
    i64 4196824, label %block_4009d8
    i64 4195724, label %block_40058c
    i64 4196724, label %block_400974
    i64 4196424, label %block_400848
    i64 4195824, label %block_4005f0
    i64 4196674, label %block_400942
    i64 4196174, label %block_40074e
    i64 4196974, label %block_400a6e
    i64 4195705, label %block_400579
    i64 4196924, label %block_400a3c
    i64 4195774, label %block_4005be
    i64 4196024, label %block_4006b8
    i64 4197174, label %block_400b36
    i64 4196524, label %block_4008ac
    i64 4196774, label %block_4009a6
    i64 4195874, label %block_400622
    i64 4197024, label %block_400aa0
  ]

block_400622:                                     ; preds = %block_400586
  %242 = add i64 %237, -12
  store i64 4195881, i64* %PC, align 8
  %243 = inttoptr i64 %242 to i32*
  store i32 4, i32* %243, align 4
  %244 = load i64, i64* %PC, align 8
  %245 = tail call %struct.Memory* @sub_400629(%struct.State* nonnull %0, i64 %244, %struct.Memory* %2)
  ret %struct.Memory* %245

block_400aa0:                                     ; preds = %block_400586
  %246 = add i64 %237, -12
  store i64 4197031, i64* %PC, align 8
  %247 = inttoptr i64 %246 to i32*
  store i32 27, i32* %247, align 4
  %248 = load i64, i64* %PC, align 8
  %249 = tail call %struct.Memory* @sub_400aa7(%struct.State* nonnull %0, i64 %248, %struct.Memory* %2)
  ret %struct.Memory* %249

block_40071c:                                     ; preds = %block_400586
  %250 = add i64 %237, -12
  store i64 4196131, i64* %PC, align 8
  %251 = inttoptr i64 %250 to i32*
  store i32 9, i32* %251, align 4
  %252 = load i64, i64* %PC, align 8
  %253 = tail call %struct.Memory* @sub_400723(%struct.State* nonnull %0, i64 %252, %struct.Memory* %2)
  ret %struct.Memory* %253

block_400816:                                     ; preds = %block_400586
  %254 = add i64 %237, -12
  store i64 4196381, i64* %PC, align 8
  %255 = inttoptr i64 %254 to i32*
  store i32 14, i32* %255, align 4
  %256 = load i64, i64* %PC, align 8
  %257 = tail call %struct.Memory* @sub_40081d(%struct.State* nonnull %0, i64 %256, %struct.Memory* %2)
  ret %struct.Memory* %257

block_400910:                                     ; preds = %block_400586
  %258 = add i64 %237, -12
  store i64 4196631, i64* %PC, align 8
  %259 = inttoptr i64 %258 to i32*
  store i32 19, i32* %259, align 4
  %260 = load i64, i64* %PC, align 8
  %261 = tail call %struct.Memory* @sub_400917(%struct.State* nonnull %0, i64 %260, %struct.Memory* %2)
  ret %struct.Memory* %261

block_40058c:                                     ; preds = %block_400586
  %262 = add i64 %237, -12
  store i64 4195731, i64* %PC, align 8
  %263 = inttoptr i64 %262 to i32*
  store i32 1, i32* %263, align 4
  %264 = load i64, i64* %PC, align 8
  %265 = tail call %struct.Memory* @sub_400593(%struct.State* nonnull %0, i64 %264, %struct.Memory* %2)
  ret %struct.Memory* %265

block_400a0a:                                     ; preds = %block_400586
  %266 = add i64 %237, -12
  store i64 4196881, i64* %PC, align 8
  %267 = inttoptr i64 %266 to i32*
  store i32 24, i32* %267, align 4
  %268 = load i64, i64* %PC, align 8
  %269 = tail call %struct.Memory* @sub_400a11(%struct.State* nonnull %0, i64 %268, %struct.Memory* %2)
  ret %struct.Memory* %269

block_400686:                                     ; preds = %block_400586
  %270 = add i64 %237, -12
  store i64 4195981, i64* %PC, align 8
  %271 = inttoptr i64 %270 to i32*
  store i32 6, i32* %271, align 4
  %272 = load i64, i64* %PC, align 8
  %273 = tail call %struct.Memory* @sub_40068d(%struct.State* nonnull %0, i64 %272, %struct.Memory* %2)
  ret %struct.Memory* %273

block_400b04:                                     ; preds = %block_400586
  %274 = add i64 %237, -12
  store i64 4197131, i64* %PC, align 8
  %275 = inttoptr i64 %274 to i32*
  store i32 29, i32* %275, align 4
  %276 = load i64, i64* %PC, align 8
  %277 = tail call %struct.Memory* @sub_400b0b(%struct.State* nonnull %0, i64 %276, %struct.Memory* %2)
  ret %struct.Memory* %277

block_4007b2:                                     ; preds = %block_400586
  %278 = add i64 %237, -12
  store i64 4196281, i64* %PC, align 8
  %279 = inttoptr i64 %278 to i32*
  store i32 12, i32* %279, align 4
  %280 = load i64, i64* %RBP, align 8
  %281 = add i64 %280, -12
  %282 = load i64, i64* %PC, align 8
  %283 = add i64 %282, 3
  store i64 %283, i64* %PC, align 8
  %284 = inttoptr i64 %281 to i32*
  %285 = load i32, i32* %284, align 4
  %286 = zext i32 %285 to i64
  store i64 %286, i64* %RDI, align 8, !tbaa !2428
  %287 = add i64 %282, -681
  br label %block_400586.backedge

block_400780:                                     ; preds = %block_400586
  %288 = add i64 %237, -12
  store i64 4196231, i64* %PC, align 8
  %289 = inttoptr i64 %288 to i32*
  store i32 11, i32* %289, align 4
  %290 = load i64, i64* %PC, align 8
  %291 = tail call %struct.Memory* @sub_400787(%struct.State* nonnull %0, i64 %290, %struct.Memory* %2)
  ret %struct.Memory* %291

block_400654:                                     ; preds = %block_400586
  %292 = add i64 %237, -12
  store i64 4195931, i64* %PC, align 8
  %293 = inttoptr i64 %292 to i32*
  store i32 5, i32* %293, align 4
  %294 = load i64, i64* %PC, align 8
  %295 = tail call %struct.Memory* @sub_40065b(%struct.State* nonnull %0, i64 %294, %struct.Memory* %2)
  ret %struct.Memory* %295

; <label>:296:                                    ; preds = %block_400586
  %297 = tail call %struct.Memory* @__remill_jump(%struct.State* nonnull %0, i64 %241, %struct.Memory* %2)
  ret %struct.Memory* %297
}

; Function Attrs: noinline nounwind
define %struct.Memory* @sub_4004d0___do_global_dtors_aux(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) local_unnamed_addr #6 {
block_4004d0:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i8, i8* getelementptr inbounds (%__bss_start_type, %__bss_start_type* @__bss_start, i64 0, i32 0, i64 0), align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4, align 1, !tbaa !2432
  %5 = zext i8 %3 to i32
  %6 = tail call i32 @llvm.ctpop.i32(i32 %5) #9
  %7 = trunc i32 %6 to i8
  %8 = and i8 %7, 1
  %9 = xor i8 %8, 1
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9, i8* %10, align 1, !tbaa !2446
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11, align 1, !tbaa !2447
  %12 = icmp eq i8 %3, 0
  %13 = zext i1 %12 to i8
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13, i8* %14, align 1, !tbaa !2448
  %15 = lshr i8 %3, 7
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15, i8* %16, align 1, !tbaa !2449
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %17, align 1, !tbaa !2450
  %.v = select i1 %12, i64 9, i64 32
  %18 = add i64 %.v, %1
  store i64 %18, i64* %PC, align 8, !tbaa !2428
  br i1 %12, label %block_4004d9, label %block_4004f0

block_4004f0:                                     ; preds = %block_4004d0
  %19 = add i64 %18, 2
  store i64 %19, i64* %PC, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %21 = load i64, i64* %20, align 8, !tbaa !2428
  %22 = inttoptr i64 %21 to i64*
  %23 = load i64, i64* %22, align 8
  store i64 %23, i64* %PC, align 8, !tbaa !2428
  %24 = add i64 %21, 8
  store i64 %24, i64* %20, align 8, !tbaa !2428
  ret %struct.Memory* %2

block_4004d9:                                     ; preds = %block_4004d0
  %25 = load i64, i64* %RBP, align 8
  %26 = add i64 %18, 1
  store i64 %26, i64* %PC, align 8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %28 = load i64, i64* %27, align 8, !tbaa !2428
  %29 = add i64 %28, -8
  %30 = inttoptr i64 %29 to i64*
  store i64 %25, i64* %30, align 8
  %31 = load i64, i64* %PC, align 8
  store i64 %29, i64* %RBP, align 8, !tbaa !2428
  %32 = add i64 %31, -122
  %33 = add i64 %31, 8
  %34 = add i64 %28, -16
  %35 = inttoptr i64 %34 to i64*
  store i64 %33, i64* %35, align 8
  store i64 %34, i64* %27, align 8, !tbaa !2428
  store i64 %32, i64* %PC, align 8, !tbaa !2428
  %36 = tail call %struct.Memory* @sub_400460_deregister_tm_clones(%struct.State* nonnull %0, i64 %32, %struct.Memory* %2)
  %37 = load i64, i64* %PC, align 8
  store i8 1, i8* getelementptr inbounds (%__bss_start_type, %__bss_start_type* @__bss_start, i64 0, i32 0, i64 0), align 8
  %38 = add i64 %37, 8
  store i64 %38, i64* %PC, align 8
  %39 = load i64, i64* %27, align 8, !tbaa !2428
  %40 = add i64 %39, 8
  %41 = inttoptr i64 %39 to i64*
  %42 = load i64, i64* %41, align 8
  store i64 %42, i64* %RBP, align 8, !tbaa !2428
  store i64 %40, i64* %27, align 8, !tbaa !2428
  %43 = add i64 %37, 9
  store i64 %43, i64* %PC, align 8
  %44 = inttoptr i64 %40 to i64*
  %45 = load i64, i64* %44, align 8
  store i64 %45, i64* %PC, align 8, !tbaa !2428
  %46 = add i64 %39, 16
  store i64 %46, i64* %27, align 8, !tbaa !2428
  ret %struct.Memory* %36
}

; Function Attrs: noinline nounwind
define %struct.Memory* @sub_40084f(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) local_unnamed_addr #6 {
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %PC, align 8
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RSP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %10 = bitcast i64* %RAX to i32**
  br label %block_40084f

block_40087a:                                     ; preds = %block_400586
  %11 = add i64 %263, -12
  store i64 4196481, i64* %PC, align 8
  %12 = inttoptr i64 %11 to i32*
  store i32 16, i32* %12, align 4
  %13 = load i64, i64* %PC, align 8
  %14 = tail call %struct.Memory* @sub_400881(%struct.State* nonnull %0, i64 %13, %struct.Memory* %2)
  ret %struct.Memory* %14

block_400579:                                     ; preds = %block_400586
  %15 = add i64 %263, -12
  store i64 4195712, i64* %PC, align 8
  %16 = inttoptr i64 %15 to i32*
  store i32 0, i32* %16, align 4
  %17 = load i64, i64* %RSP, align 8
  %18 = load i64, i64* %PC, align 8
  %19 = add i64 %17, 48
  store i64 %19, i64* %RSP, align 8, !tbaa !2428
  %20 = icmp ugt i64 %17, -49
  %21 = zext i1 %20 to i8
  store i8 %21, i8* %4, align 1, !tbaa !2432
  %22 = trunc i64 %19 to i32
  %23 = and i32 %22, 255
  %24 = tail call i32 @llvm.ctpop.i32(i32 %23) #9
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  store i8 %27, i8* %5, align 1, !tbaa !2446
  %28 = xor i64 %17, 16
  %29 = xor i64 %28, %19
  %30 = lshr i64 %29, 4
  %31 = trunc i64 %30 to i8
  %32 = and i8 %31, 1
  store i8 %32, i8* %6, align 1, !tbaa !2447
  %33 = icmp eq i64 %19, 0
  %34 = zext i1 %33 to i8
  store i8 %34, i8* %7, align 1, !tbaa !2448
  %35 = lshr i64 %19, 63
  %36 = trunc i64 %35 to i8
  store i8 %36, i8* %8, align 1, !tbaa !2449
  %37 = lshr i64 %17, 63
  %38 = xor i64 %35, %37
  %39 = add nuw nsw i64 %38, %35
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  store i8 %41, i8* %9, align 1, !tbaa !2450
  %42 = add i64 %18, 5
  store i64 %42, i64* %PC, align 8
  %43 = add i64 %17, 56
  %44 = inttoptr i64 %19 to i64*
  %45 = load i64, i64* %44, align 8
  store i64 %45, i64* %RBP, align 8, !tbaa !2428
  store i64 %43, i64* %RSP, align 8, !tbaa !2428
  %46 = add i64 %18, 6
  store i64 %46, i64* %PC, align 8
  %47 = inttoptr i64 %43 to i64*
  %48 = load i64, i64* %47, align 8
  store i64 %48, i64* %PC, align 8, !tbaa !2428
  %49 = add i64 %17, 64
  store i64 %49, i64* %RSP, align 8, !tbaa !2428
  ret %struct.Memory* %2

block_4005f0:                                     ; preds = %block_400586
  %50 = add i64 %263, -12
  store i64 4195831, i64* %PC, align 8
  %51 = inttoptr i64 %50 to i32*
  store i32 3, i32* %51, align 4
  %52 = load i64, i64* %RBP, align 8
  %53 = add i64 %52, -12
  %54 = load i64, i64* %PC, align 8
  %55 = add i64 %54, 3
  store i64 %55, i64* %PC, align 8
  %56 = inttoptr i64 %53 to i32*
  %57 = load i32, i32* %56, align 4
  %58 = zext i32 %57 to i64
  store i64 %58, i64* %RDI, align 8, !tbaa !2428
  %59 = add i64 %54, -231
  br label %block_400586.backedge

block_400586.backedge:                            ; preds = %block_4005f0, %block_4006ea, %block_4007e4, %block_4008de, %block_400974, %block_400a6e, %block_400654, %block_400b68, %block_40074e, %block_4009d8, %block_400ad2, %block_4006b8, %block_4007b2, %block_4009a6, %block_400aa0, %block_400b36, %block_40071c, %block_400816, %block_4008ac, %block_400910, %block_40058c, %block_400a0a, %block_400622
  %.sink146 = phi i64 [ %54, %block_4005f0 ], [ %69, %block_4006ea ], [ %79, %block_4007e4 ], [ %89, %block_4008de ], [ %99, %block_400974 ], [ %109, %block_400a6e ], [ %119, %block_400654 ], [ %129, %block_400b68 ], [ %152, %block_40074e ], [ %164, %block_4009d8 ], [ %178, %block_400ad2 ], [ %188, %block_4006b8 ], [ %198, %block_4007b2 ], [ %212, %block_4009a6 ], [ %276, %block_400aa0 ], [ %286, %block_400b36 ], [ %296, %block_40071c ], [ %306, %block_400816 ], [ %316, %block_4008ac ], [ %326, %block_400910 ], [ %336, %block_40058c ], [ %346, %block_400a0a ], [ %364, %block_400622 ]
  %.sink141 = phi i64 [ %59, %block_4005f0 ], [ %74, %block_4006ea ], [ %84, %block_4007e4 ], [ %94, %block_4008de ], [ %104, %block_400974 ], [ %114, %block_400a6e ], [ %124, %block_400654 ], [ %134, %block_400b68 ], [ %157, %block_40074e ], [ %169, %block_4009d8 ], [ %183, %block_400ad2 ], [ %193, %block_4006b8 ], [ %203, %block_4007b2 ], [ %217, %block_4009a6 ], [ %281, %block_400aa0 ], [ %291, %block_400b36 ], [ %301, %block_40071c ], [ %311, %block_400816 ], [ %321, %block_4008ac ], [ %331, %block_400910 ], [ %341, %block_40058c ], [ %351, %block_400a0a ], [ %369, %block_400622 ]
  %.sink5.be = phi i64 [ 151, %block_4005f0 ], [ 401, %block_4006ea ], [ 651, %block_4007e4 ], [ 901, %block_4008de ], [ 1051, %block_400974 ], [ 1301, %block_400a6e ], [ 251, %block_400654 ], [ 1551, %block_400b68 ], [ 501, %block_40074e ], [ 1151, %block_4009d8 ], [ 1401, %block_400ad2 ], [ 351, %block_4006b8 ], [ 601, %block_4007b2 ], [ 1101, %block_4009a6 ], [ 1351, %block_400aa0 ], [ 1501, %block_400b36 ], [ 451, %block_40071c ], [ 701, %block_400816 ], [ 851, %block_4008ac ], [ 951, %block_400910 ], [ 51, %block_40058c ], [ 1201, %block_400a0a ], [ 201, %block_400622 ]
  %60 = add i64 %.sink146, 8
  %61 = load i64, i64* %RSP, align 8, !tbaa !2428
  %62 = add i64 %61, -8
  %63 = inttoptr i64 %62 to i64*
  store i64 %60, i64* %63, align 8
  store i64 %62, i64* %RSP, align 8, !tbaa !2428
  store i64 %.sink141, i64* %PC, align 8, !tbaa !2428
  %64 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %.sink141, %struct.Memory* %2)
  br label %block_400586

block_4006ea:                                     ; preds = %block_400586
  %65 = add i64 %263, -12
  store i64 4196081, i64* %PC, align 8
  %66 = inttoptr i64 %65 to i32*
  store i32 8, i32* %66, align 4
  %67 = load i64, i64* %RBP, align 8
  %68 = add i64 %67, -12
  %69 = load i64, i64* %PC, align 8
  %70 = add i64 %69, 3
  store i64 %70, i64* %PC, align 8
  %71 = inttoptr i64 %68 to i32*
  %72 = load i32, i32* %71, align 4
  %73 = zext i32 %72 to i64
  store i64 %73, i64* %RDI, align 8, !tbaa !2428
  %74 = add i64 %69, -481
  br label %block_400586.backedge

block_4007e4:                                     ; preds = %block_400586
  %75 = add i64 %263, -12
  store i64 4196331, i64* %PC, align 8
  %76 = inttoptr i64 %75 to i32*
  store i32 13, i32* %76, align 4
  %77 = load i64, i64* %RBP, align 8
  %78 = add i64 %77, -12
  %79 = load i64, i64* %PC, align 8
  %80 = add i64 %79, 3
  store i64 %80, i64* %PC, align 8
  %81 = inttoptr i64 %78 to i32*
  %82 = load i32, i32* %81, align 4
  %83 = zext i32 %82 to i64
  store i64 %83, i64* %RDI, align 8, !tbaa !2428
  %84 = add i64 %79, -731
  br label %block_400586.backedge

block_4008de:                                     ; preds = %block_400586
  %85 = add i64 %263, -12
  store i64 4196581, i64* %PC, align 8
  %86 = inttoptr i64 %85 to i32*
  store i32 18, i32* %86, align 4
  %87 = load i64, i64* %RBP, align 8
  %88 = add i64 %87, -12
  %89 = load i64, i64* %PC, align 8
  %90 = add i64 %89, 3
  store i64 %90, i64* %PC, align 8
  %91 = inttoptr i64 %88 to i32*
  %92 = load i32, i32* %91, align 4
  %93 = zext i32 %92 to i64
  store i64 %93, i64* %RDI, align 8, !tbaa !2428
  %94 = add i64 %89, -981
  br label %block_400586.backedge

block_400974:                                     ; preds = %block_400586
  %95 = add i64 %263, -12
  store i64 4196731, i64* %PC, align 8
  %96 = inttoptr i64 %95 to i32*
  store i32 21, i32* %96, align 4
  %97 = load i64, i64* %RBP, align 8
  %98 = add i64 %97, -12
  %99 = load i64, i64* %PC, align 8
  %100 = add i64 %99, 3
  store i64 %100, i64* %PC, align 8
  %101 = inttoptr i64 %98 to i32*
  %102 = load i32, i32* %101, align 4
  %103 = zext i32 %102 to i64
  store i64 %103, i64* %RDI, align 8, !tbaa !2428
  %104 = add i64 %99, -1131
  br label %block_400586.backedge

block_400a6e:                                     ; preds = %block_400586
  %105 = add i64 %263, -12
  store i64 4196981, i64* %PC, align 8
  %106 = inttoptr i64 %105 to i32*
  store i32 26, i32* %106, align 4
  %107 = load i64, i64* %RBP, align 8
  %108 = add i64 %107, -12
  %109 = load i64, i64* %PC, align 8
  %110 = add i64 %109, 3
  store i64 %110, i64* %PC, align 8
  %111 = inttoptr i64 %108 to i32*
  %112 = load i32, i32* %111, align 4
  %113 = zext i32 %112 to i64
  store i64 %113, i64* %RDI, align 8, !tbaa !2428
  %114 = add i64 %109, -1381
  br label %block_400586.backedge

block_400654:                                     ; preds = %block_400586
  %115 = add i64 %263, -12
  store i64 4195931, i64* %PC, align 8
  %116 = inttoptr i64 %115 to i32*
  store i32 5, i32* %116, align 4
  %117 = load i64, i64* %RBP, align 8
  %118 = add i64 %117, -12
  %119 = load i64, i64* %PC, align 8
  %120 = add i64 %119, 3
  store i64 %120, i64* %PC, align 8
  %121 = inttoptr i64 %118 to i32*
  %122 = load i32, i32* %121, align 4
  %123 = zext i32 %122 to i64
  store i64 %123, i64* %RDI, align 8, !tbaa !2428
  %124 = add i64 %119, -331
  br label %block_400586.backedge

block_400b68:                                     ; preds = %block_400586
  %125 = add i64 %263, -12
  store i64 4197231, i64* %PC, align 8
  %126 = inttoptr i64 %125 to i32*
  store i32 31, i32* %126, align 4
  %127 = load i64, i64* %RBP, align 8
  %128 = add i64 %127, -12
  %129 = load i64, i64* %PC, align 8
  %130 = add i64 %129, 3
  store i64 %130, i64* %PC, align 8
  %131 = inttoptr i64 %128 to i32*
  %132 = load i32, i32* %131, align 4
  %133 = zext i32 %132 to i64
  store i64 %133, i64* %RDI, align 8, !tbaa !2428
  %134 = add i64 %129, -1631
  br label %block_400586.backedge

block_40084f:                                     ; preds = %block_400848, %3
  %135 = phi i64 [ %.pre, %block_400848 ], [ %1, %3 ]
  %136 = load i64, i64* %RBP, align 8
  %137 = add i64 %136, -12
  %138 = add i64 %135, 3
  store i64 %138, i64* %PC, align 8
  %139 = inttoptr i64 %137 to i32*
  %140 = load i32, i32* %139, align 4
  %141 = zext i32 %140 to i64
  store i64 %141, i64* %RDI, align 8, !tbaa !2428
  %142 = add i64 %135, -831
  %143 = add i64 %135, 8
  %144 = load i64, i64* %RSP, align 8, !tbaa !2428
  %145 = add i64 %144, -8
  %146 = inttoptr i64 %145 to i64*
  store i64 %143, i64* %146, align 8
  store i64 %145, i64* %RSP, align 8, !tbaa !2428
  store i64 %142, i64* %PC, align 8, !tbaa !2428
  %147 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %142, %struct.Memory* %2)
  br label %block_400586

block_40074e:                                     ; preds = %block_400586
  %148 = add i64 %263, -12
  store i64 4196181, i64* %PC, align 8
  %149 = inttoptr i64 %148 to i32*
  store i32 10, i32* %149, align 4
  %150 = load i64, i64* %RBP, align 8
  %151 = add i64 %150, -12
  %152 = load i64, i64* %PC, align 8
  %153 = add i64 %152, 3
  store i64 %153, i64* %PC, align 8
  %154 = inttoptr i64 %151 to i32*
  %155 = load i32, i32* %154, align 4
  %156 = zext i32 %155 to i64
  store i64 %156, i64* %RDI, align 8, !tbaa !2428
  %157 = add i64 %152, -581
  br label %block_400586.backedge

block_400848:                                     ; preds = %block_400586
  %158 = add i64 %263, -12
  store i64 4196431, i64* %PC, align 8
  %159 = inttoptr i64 %158 to i32*
  store i32 15, i32* %159, align 4
  %.pre = load i64, i64* %PC, align 8
  br label %block_40084f

block_4009d8:                                     ; preds = %block_400586
  %160 = add i64 %263, -12
  store i64 4196831, i64* %PC, align 8
  %161 = inttoptr i64 %160 to i32*
  store i32 23, i32* %161, align 4
  %162 = load i64, i64* %RBP, align 8
  %163 = add i64 %162, -12
  %164 = load i64, i64* %PC, align 8
  %165 = add i64 %164, 3
  store i64 %165, i64* %PC, align 8
  %166 = inttoptr i64 %163 to i32*
  %167 = load i32, i32* %166, align 4
  %168 = zext i32 %167 to i64
  store i64 %168, i64* %RDI, align 8, !tbaa !2428
  %169 = add i64 %164, -1231
  br label %block_400586.backedge

block_4005be:                                     ; preds = %block_400586
  %170 = add i64 %263, -12
  store i64 4195781, i64* %PC, align 8
  %171 = inttoptr i64 %170 to i32*
  store i32 2, i32* %171, align 4
  %172 = load i64, i64* %PC, align 8
  %173 = tail call %struct.Memory* @sub_4005c5(%struct.State* nonnull %0, i64 %172, %struct.Memory* %2)
  ret %struct.Memory* %173

block_400ad2:                                     ; preds = %block_400586
  %174 = add i64 %263, -12
  store i64 4197081, i64* %PC, align 8
  %175 = inttoptr i64 %174 to i32*
  store i32 28, i32* %175, align 4
  %176 = load i64, i64* %RBP, align 8
  %177 = add i64 %176, -12
  %178 = load i64, i64* %PC, align 8
  %179 = add i64 %178, 3
  store i64 %179, i64* %PC, align 8
  %180 = inttoptr i64 %177 to i32*
  %181 = load i32, i32* %180, align 4
  %182 = zext i32 %181 to i64
  store i64 %182, i64* %RDI, align 8, !tbaa !2428
  %183 = add i64 %178, -1481
  br label %block_400586.backedge

block_4006b8:                                     ; preds = %block_400586
  %184 = add i64 %263, -12
  store i64 4196031, i64* %PC, align 8
  %185 = inttoptr i64 %184 to i32*
  store i32 7, i32* %185, align 4
  %186 = load i64, i64* %RBP, align 8
  %187 = add i64 %186, -12
  %188 = load i64, i64* %PC, align 8
  %189 = add i64 %188, 3
  store i64 %189, i64* %PC, align 8
  %190 = inttoptr i64 %187 to i32*
  %191 = load i32, i32* %190, align 4
  %192 = zext i32 %191 to i64
  store i64 %192, i64* %RDI, align 8, !tbaa !2428
  %193 = add i64 %188, -431
  br label %block_400586.backedge

block_4007b2:                                     ; preds = %block_400586
  %194 = add i64 %263, -12
  store i64 4196281, i64* %PC, align 8
  %195 = inttoptr i64 %194 to i32*
  store i32 12, i32* %195, align 4
  %196 = load i64, i64* %RBP, align 8
  %197 = add i64 %196, -12
  %198 = load i64, i64* %PC, align 8
  %199 = add i64 %198, 3
  store i64 %199, i64* %PC, align 8
  %200 = inttoptr i64 %197 to i32*
  %201 = load i32, i32* %200, align 4
  %202 = zext i32 %201 to i64
  store i64 %202, i64* %RDI, align 8, !tbaa !2428
  %203 = add i64 %198, -681
  br label %block_400586.backedge

block_400942:                                     ; preds = %block_400586
  %204 = add i64 %263, -12
  store i64 4196681, i64* %PC, align 8
  %205 = inttoptr i64 %204 to i32*
  store i32 20, i32* %205, align 4
  %206 = load i64, i64* %PC, align 8
  %207 = tail call %struct.Memory* @sub_400949(%struct.State* nonnull %0, i64 %206, %struct.Memory* %2)
  ret %struct.Memory* %207

block_4009a6:                                     ; preds = %block_400586
  %208 = add i64 %263, -12
  store i64 4196781, i64* %PC, align 8
  %209 = inttoptr i64 %208 to i32*
  store i32 22, i32* %209, align 4
  %210 = load i64, i64* %RBP, align 8
  %211 = add i64 %210, -12
  %212 = load i64, i64* %PC, align 8
  %213 = add i64 %212, 3
  store i64 %213, i64* %PC, align 8
  %214 = inttoptr i64 %211 to i32*
  %215 = load i32, i32* %214, align 4
  %216 = zext i32 %215 to i64
  store i64 %216, i64* %RDI, align 8, !tbaa !2428
  %217 = add i64 %212, -1181
  br label %block_400586.backedge

block_400586:                                     ; preds = %block_400586.backedge, %block_40084f
  %.sink5 = phi i64 [ 751, %block_40084f ], [ %.sink5.be, %block_400586.backedge ]
  %218 = load i64, i64* %RBP, align 8
  %219 = add i64 %218, -8
  %220 = load i64, i64* %PC, align 8
  %221 = add i64 %220, 4
  store i64 %221, i64* %PC, align 8
  %222 = inttoptr i64 %219 to i64*
  %223 = load i64, i64* %222, align 8
  store i64 %223, i64* %RAX, align 8, !tbaa !2428
  %224 = add i64 %223, 4
  store i64 %224, i64* %RCX, align 8, !tbaa !2428
  %225 = icmp ugt i64 %223, -5
  %226 = zext i1 %225 to i8
  store i8 %226, i8* %4, align 1, !tbaa !2432
  %227 = trunc i64 %224 to i32
  %228 = and i32 %227, 255
  %229 = tail call i32 @llvm.ctpop.i32(i32 %228) #9
  %230 = trunc i32 %229 to i8
  %231 = and i8 %230, 1
  %232 = xor i8 %231, 1
  store i8 %232, i8* %5, align 1, !tbaa !2446
  %233 = xor i64 %224, %223
  %234 = lshr i64 %233, 4
  %235 = trunc i64 %234 to i8
  %236 = and i8 %235, 1
  store i8 %236, i8* %6, align 1, !tbaa !2447
  %237 = icmp eq i64 %224, 0
  %238 = zext i1 %237 to i8
  store i8 %238, i8* %7, align 1, !tbaa !2448
  %239 = lshr i64 %224, 63
  %240 = trunc i64 %239 to i8
  store i8 %240, i8* %8, align 1, !tbaa !2449
  %241 = lshr i64 %223, 63
  %242 = xor i64 %239, %241
  %243 = add nuw nsw i64 %242, %239
  %244 = icmp eq i64 %243, 2
  %245 = zext i1 %244 to i8
  store i8 %245, i8* %9, align 1, !tbaa !2450
  %246 = add i64 %220, 15
  store i64 %246, i64* %PC, align 8
  store i64 %224, i64* %222, align 8
  %247 = load i32*, i32** %10, align 8
  %248 = load i64, i64* %PC, align 8
  %249 = add i64 %248, 3
  store i64 %249, i64* %PC, align 8
  %250 = load i32, i32* %247, align 4
  %251 = sext i32 %250 to i64
  store i64 %251, i64* %RAX, align 8, !tbaa !2428
  %252 = shl nsw i64 %251, 3
  %253 = add i64 %252, add (i64 ptrtoint (%seg_602020__data_type* @seg_602020__data to i64), i64 16)
  %254 = add i64 %248, 11
  store i64 %254, i64* %PC, align 8
  %255 = inttoptr i64 %253 to i64*
  %256 = load i64, i64* %255, align 8
  store i64 %256, i64* %RAX, align 8, !tbaa !2428
  %257 = load i64, i64* %RBP, align 8
  %258 = add i64 %257, -40
  %259 = add i64 %248, 15
  store i64 %259, i64* %PC, align 8
  %260 = inttoptr i64 %258 to i64*
  store i64 %256, i64* %260, align 8
  %261 = load i64, i64* %PC, align 8
  %262 = sub i64 %261, %.sink5
  %263 = load i64, i64* %RBP, align 8
  %264 = add i64 %263, -40
  %265 = add i64 %262, 4
  store i64 %265, i64* %PC, align 8
  %266 = inttoptr i64 %264 to i64*
  %267 = load i64, i64* %266, align 8
  store i64 %267, i64* %RAX, align 8, !tbaa !2428
  store i64 %267, i64* %PC, align 8, !tbaa !2428
  switch i64 %267, label %374 [
    i64 4196224, label %block_400780
    i64 4195874, label %block_400622
    i64 4197124, label %block_400b04
    i64 4195974, label %block_400686
    i64 4196874, label %block_400a0a
    i64 4196624, label %block_400910
    i64 4196524, label %block_4008ac
    i64 4196374, label %block_400816
    i64 4196124, label %block_40071c
    i64 4197224, label %block_400b68
    i64 4196074, label %block_4006ea
    i64 4195824, label %block_4005f0
    i64 4196724, label %block_400974
    i64 4196324, label %block_4007e4
    i64 4195924, label %block_400654
    i64 4197074, label %block_400ad2
    i64 4196474, label %block_40087a
    i64 4195724, label %block_40058c
    i64 4196574, label %block_4008de
    i64 4196974, label %block_400a6e
    i64 4195705, label %block_400579
    i64 4195774, label %block_4005be
    i64 4196924, label %block_400a3c
    i64 4196174, label %block_40074e
    i64 4196424, label %block_400848
    i64 4196824, label %block_4009d8
    i64 4196024, label %block_4006b8
    i64 4197174, label %block_400b36
    i64 4196274, label %block_4007b2
    i64 4196674, label %block_400942
    i64 4196774, label %block_4009a6
    i64 4197024, label %block_400aa0
  ]

block_400a3c:                                     ; preds = %block_400586
  %268 = add i64 %263, -12
  store i64 4196931, i64* %PC, align 8
  %269 = inttoptr i64 %268 to i32*
  store i32 25, i32* %269, align 4
  %270 = load i64, i64* %PC, align 8
  %271 = tail call %struct.Memory* @sub_400a43(%struct.State* nonnull %0, i64 %270, %struct.Memory* %2)
  ret %struct.Memory* %271

block_400aa0:                                     ; preds = %block_400586
  %272 = add i64 %263, -12
  store i64 4197031, i64* %PC, align 8
  %273 = inttoptr i64 %272 to i32*
  store i32 27, i32* %273, align 4
  %274 = load i64, i64* %RBP, align 8
  %275 = add i64 %274, -12
  %276 = load i64, i64* %PC, align 8
  %277 = add i64 %276, 3
  store i64 %277, i64* %PC, align 8
  %278 = inttoptr i64 %275 to i32*
  %279 = load i32, i32* %278, align 4
  %280 = zext i32 %279 to i64
  store i64 %280, i64* %RDI, align 8, !tbaa !2428
  %281 = add i64 %276, -1431
  br label %block_400586.backedge

block_400b36:                                     ; preds = %block_400586
  %282 = add i64 %263, -12
  store i64 4197181, i64* %PC, align 8
  %283 = inttoptr i64 %282 to i32*
  store i32 30, i32* %283, align 4
  %284 = load i64, i64* %RBP, align 8
  %285 = add i64 %284, -12
  %286 = load i64, i64* %PC, align 8
  %287 = add i64 %286, 3
  store i64 %287, i64* %PC, align 8
  %288 = inttoptr i64 %285 to i32*
  %289 = load i32, i32* %288, align 4
  %290 = zext i32 %289 to i64
  store i64 %290, i64* %RDI, align 8, !tbaa !2428
  %291 = add i64 %286, -1581
  br label %block_400586.backedge

block_40071c:                                     ; preds = %block_400586
  %292 = add i64 %263, -12
  store i64 4196131, i64* %PC, align 8
  %293 = inttoptr i64 %292 to i32*
  store i32 9, i32* %293, align 4
  %294 = load i64, i64* %RBP, align 8
  %295 = add i64 %294, -12
  %296 = load i64, i64* %PC, align 8
  %297 = add i64 %296, 3
  store i64 %297, i64* %PC, align 8
  %298 = inttoptr i64 %295 to i32*
  %299 = load i32, i32* %298, align 4
  %300 = zext i32 %299 to i64
  store i64 %300, i64* %RDI, align 8, !tbaa !2428
  %301 = add i64 %296, -531
  br label %block_400586.backedge

block_400816:                                     ; preds = %block_400586
  %302 = add i64 %263, -12
  store i64 4196381, i64* %PC, align 8
  %303 = inttoptr i64 %302 to i32*
  store i32 14, i32* %303, align 4
  %304 = load i64, i64* %RBP, align 8
  %305 = add i64 %304, -12
  %306 = load i64, i64* %PC, align 8
  %307 = add i64 %306, 3
  store i64 %307, i64* %PC, align 8
  %308 = inttoptr i64 %305 to i32*
  %309 = load i32, i32* %308, align 4
  %310 = zext i32 %309 to i64
  store i64 %310, i64* %RDI, align 8, !tbaa !2428
  %311 = add i64 %306, -781
  br label %block_400586.backedge

block_4008ac:                                     ; preds = %block_400586
  %312 = add i64 %263, -12
  store i64 4196531, i64* %PC, align 8
  %313 = inttoptr i64 %312 to i32*
  store i32 17, i32* %313, align 4
  %314 = load i64, i64* %RBP, align 8
  %315 = add i64 %314, -12
  %316 = load i64, i64* %PC, align 8
  %317 = add i64 %316, 3
  store i64 %317, i64* %PC, align 8
  %318 = inttoptr i64 %315 to i32*
  %319 = load i32, i32* %318, align 4
  %320 = zext i32 %319 to i64
  store i64 %320, i64* %RDI, align 8, !tbaa !2428
  %321 = add i64 %316, -931
  br label %block_400586.backedge

block_400910:                                     ; preds = %block_400586
  %322 = add i64 %263, -12
  store i64 4196631, i64* %PC, align 8
  %323 = inttoptr i64 %322 to i32*
  store i32 19, i32* %323, align 4
  %324 = load i64, i64* %RBP, align 8
  %325 = add i64 %324, -12
  %326 = load i64, i64* %PC, align 8
  %327 = add i64 %326, 3
  store i64 %327, i64* %PC, align 8
  %328 = inttoptr i64 %325 to i32*
  %329 = load i32, i32* %328, align 4
  %330 = zext i32 %329 to i64
  store i64 %330, i64* %RDI, align 8, !tbaa !2428
  %331 = add i64 %326, -1031
  br label %block_400586.backedge

block_40058c:                                     ; preds = %block_400586
  %332 = add i64 %263, -12
  store i64 4195731, i64* %PC, align 8
  %333 = inttoptr i64 %332 to i32*
  store i32 1, i32* %333, align 4
  %334 = load i64, i64* %RBP, align 8
  %335 = add i64 %334, -12
  %336 = load i64, i64* %PC, align 8
  %337 = add i64 %336, 3
  store i64 %337, i64* %PC, align 8
  %338 = inttoptr i64 %335 to i32*
  %339 = load i32, i32* %338, align 4
  %340 = zext i32 %339 to i64
  store i64 %340, i64* %RDI, align 8, !tbaa !2428
  %341 = add i64 %336, -131
  br label %block_400586.backedge

block_400a0a:                                     ; preds = %block_400586
  %342 = add i64 %263, -12
  store i64 4196881, i64* %PC, align 8
  %343 = inttoptr i64 %342 to i32*
  store i32 24, i32* %343, align 4
  %344 = load i64, i64* %RBP, align 8
  %345 = add i64 %344, -12
  %346 = load i64, i64* %PC, align 8
  %347 = add i64 %346, 3
  store i64 %347, i64* %PC, align 8
  %348 = inttoptr i64 %345 to i32*
  %349 = load i32, i32* %348, align 4
  %350 = zext i32 %349 to i64
  store i64 %350, i64* %RDI, align 8, !tbaa !2428
  %351 = add i64 %346, -1281
  br label %block_400586.backedge

block_400686:                                     ; preds = %block_400586
  %352 = add i64 %263, -12
  store i64 4195981, i64* %PC, align 8
  %353 = inttoptr i64 %352 to i32*
  store i32 6, i32* %353, align 4
  %354 = load i64, i64* %PC, align 8
  %355 = tail call %struct.Memory* @sub_40068d(%struct.State* nonnull %0, i64 %354, %struct.Memory* %2)
  ret %struct.Memory* %355

block_400b04:                                     ; preds = %block_400586
  %356 = add i64 %263, -12
  store i64 4197131, i64* %PC, align 8
  %357 = inttoptr i64 %356 to i32*
  store i32 29, i32* %357, align 4
  %358 = load i64, i64* %PC, align 8
  %359 = tail call %struct.Memory* @sub_400b0b(%struct.State* nonnull %0, i64 %358, %struct.Memory* %2)
  ret %struct.Memory* %359

block_400622:                                     ; preds = %block_400586
  %360 = add i64 %263, -12
  store i64 4195881, i64* %PC, align 8
  %361 = inttoptr i64 %360 to i32*
  store i32 4, i32* %361, align 4
  %362 = load i64, i64* %RBP, align 8
  %363 = add i64 %362, -12
  %364 = load i64, i64* %PC, align 8
  %365 = add i64 %364, 3
  store i64 %365, i64* %PC, align 8
  %366 = inttoptr i64 %363 to i32*
  %367 = load i32, i32* %366, align 4
  %368 = zext i32 %367 to i64
  store i64 %368, i64* %RDI, align 8, !tbaa !2428
  %369 = add i64 %364, -281
  br label %block_400586.backedge

block_400780:                                     ; preds = %block_400586
  %370 = add i64 %263, -12
  store i64 4196231, i64* %PC, align 8
  %371 = inttoptr i64 %370 to i32*
  store i32 11, i32* %371, align 4
  %372 = load i64, i64* %PC, align 8
  %373 = tail call %struct.Memory* @sub_400787(%struct.State* nonnull %0, i64 %372, %struct.Memory* %2)
  ret %struct.Memory* %373

; <label>:374:                                    ; preds = %block_400586
  %375 = tail call %struct.Memory* @__remill_jump(%struct.State* nonnull %0, i64 %267, %struct.Memory* %2)
  ret %struct.Memory* %375
}

; Function Attrs: noinline nounwind
define %struct.Memory* @sub_400460_deregister_tm_clones(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) local_unnamed_addr #6 {
block_400460:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RSP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %1, 1
  store i64 %4, i64* %PC, align 8
  %5 = load i64, i64* %RSP, align 8, !tbaa !2428
  %6 = add i64 %5, -8
  %7 = inttoptr i64 %6 to i64*
  store i64 %3, i64* %7, align 8
  store i64 %6, i64* %RSP, align 8, !tbaa !2428
  %8 = load i64, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 4294967295), i64* %RAX, align 8, !tbaa !2428
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 zext (i1 icmp ult (i64 and (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 4294967295), i64 ptrtoint (%__bss_start_type* @__bss_start to i64)) to i8), i8* %9, align 1, !tbaa !2432
  %10 = tail call i32 @llvm.ctpop.i32(i32 and (i32 trunc (i64 sub (i64 and (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 4294967295), i64 ptrtoint (%__bss_start_type* @__bss_start to i64)) to i32), i32 255)) #9
  %11 = trunc i32 %10 to i8
  %12 = and i8 %11, 1
  %13 = xor i8 %12, 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13, i8* %14, align 1, !tbaa !2446
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 and (i8 trunc (i64 lshr (i64 xor (i64 xor (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 and (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 4294967295)), i64 sub (i64 and (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 4294967295), i64 ptrtoint (%__bss_start_type* @__bss_start to i64))), i64 4) to i8), i8 1), i8* %15, align 1, !tbaa !2447
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 zext (i1 icmp eq (i64 sub (i64 and (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 4294967295), i64 ptrtoint (%__bss_start_type* @__bss_start to i64)), i64 0) to i8), i8* %16, align 1, !tbaa !2448
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 trunc (i64 lshr (i64 sub (i64 and (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 4294967295), i64 ptrtoint (%__bss_start_type* @__bss_start to i64)), i64 63) to i8), i8* %17, align 1, !tbaa !2449
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 zext (i1 icmp eq (i64 add (i64 xor (i64 lshr (i64 sub (i64 and (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 4294967295), i64 ptrtoint (%__bss_start_type* @__bss_start to i64)), i64 63), i64 lshr (i64 and (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 4294967295), i64 63)), i64 xor (i64 lshr (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 63), i64 lshr (i64 and (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 4294967295), i64 63))), i64 2) to i8), i8* %18, align 1, !tbaa !2450
  store i64 %6, i64* %RBP, align 8, !tbaa !2428
  %19 = add i64 %8, select (i1 icmp eq (i64 sub (i64 and (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 4294967295), i64 ptrtoint (%__bss_start_type* @__bss_start to i64)), i64 0), i64 39, i64 16)
  store i64 %19, i64* %PC, align 8, !tbaa !2428
  br i1 icmp eq (i64 sub (i64 and (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 4294967295), i64 ptrtoint (%__bss_start_type* @__bss_start to i64)), i64 0), label %block_400488, label %block_400471

block_400471:                                     ; preds = %block_400460
  store i64 0, i64* %RAX, align 8, !tbaa !2428
  store i8 0, i8* %9, align 1, !tbaa !2432
  store i8 1, i8* %14, align 1, !tbaa !2446
  store i8 1, i8* %16, align 1, !tbaa !2448
  store i8 0, i8* %17, align 1, !tbaa !2449
  store i8 0, i8* %18, align 1, !tbaa !2450
  store i8 0, i8* %15, align 1, !tbaa !2447
  %20 = add i64 %8, add (i64 select (i1 icmp eq (i64 sub (i64 and (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 4294967295), i64 ptrtoint (%__bss_start_type* @__bss_start to i64)), i64 0), i64 39, i64 16), i64 23)
  store i64 %20, i64* %PC, align 8, !tbaa !2428
  br label %block_400488

block_400488:                                     ; preds = %block_400471, %block_400460
  %21 = phi i64 [ %20, %block_400471 ], [ %19, %block_400460 ]
  %22 = add i64 %21, 1
  store i64 %22, i64* %PC, align 8
  %23 = load i64, i64* %7, align 8
  store i64 %23, i64* %RBP, align 8, !tbaa !2428
  store i64 %5, i64* %RSP, align 8, !tbaa !2428
  %24 = add i64 %21, 2
  store i64 %24, i64* %PC, align 8
  %25 = inttoptr i64 %5 to i64*
  %26 = load i64, i64* %25, align 8
  store i64 %26, i64* %PC, align 8, !tbaa !2428
  %27 = add i64 %5, 8
  store i64 %27, i64* %RSP, align 8, !tbaa !2428
  ret %struct.Memory* %2
}

; Function Attrs: noinline nounwind
define %struct.Memory* @sub_400949(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) local_unnamed_addr #6 {
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %PC, align 8
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RSP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %10 = bitcast i64* %RAX to i32**
  br label %block_400949

block_40087a:                                     ; preds = %block_400586
  %11 = add i64 %293, -12
  store i64 4196481, i64* %PC, align 8
  %12 = inttoptr i64 %11 to i32*
  store i32 16, i32* %12, align 4
  %13 = load i64, i64* %PC, align 8
  %14 = tail call %struct.Memory* @sub_400881(%struct.State* nonnull %0, i64 %13, %struct.Memory* %2)
  ret %struct.Memory* %14

block_400974:                                     ; preds = %block_400586
  %15 = add i64 %293, -12
  store i64 4196731, i64* %PC, align 8
  %16 = inttoptr i64 %15 to i32*
  store i32 21, i32* %16, align 4
  %17 = load i64, i64* %RBP, align 8
  %18 = add i64 %17, -12
  %19 = load i64, i64* %PC, align 8
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC, align 8
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RDI, align 8, !tbaa !2428
  %24 = add i64 %19, -1131
  br label %block_400586.backedge

block_400586.backedge:                            ; preds = %block_400974, %block_4005f0, %block_400a6e, %block_4006ea, %block_400b68, %block_4007e4, %block_4008de, %block_4009d8, %block_400654, %block_400ad2, %block_40074e, %block_400848, %block_4006b8, %block_400b36, %block_4007b2, %block_4008ac, %block_4009a6, %block_400622, %block_400aa0, %block_40071c, %block_400816, %block_400910, %block_40058c, %block_400a0a, %block_400686, %block_400b04
  %.sink122 = phi i64 [ %19, %block_400974 ], [ %34, %block_4005f0 ], [ %44, %block_400a6e ], [ %54, %block_4006ea ], [ %64, %block_400b68 ], [ %74, %block_4007e4 ], [ %84, %block_4008de ], [ %94, %block_4009d8 ], [ %104, %block_400654 ], [ %114, %block_400ad2 ], [ %159, %block_40074e ], [ %182, %block_400848 ], [ %198, %block_4006b8 ], [ %208, %block_400b36 ], [ %218, %block_4007b2 ], [ %228, %block_4008ac ], [ %238, %block_4009a6 ], [ %302, %block_400622 ], [ %312, %block_400aa0 ], [ %322, %block_40071c ], [ %332, %block_400816 ], [ %342, %block_400910 ], [ %352, %block_40058c ], [ %362, %block_400a0a ], [ %372, %block_400686 ], [ %382, %block_400b04 ]
  %.sink117 = phi i64 [ %24, %block_400974 ], [ %39, %block_4005f0 ], [ %49, %block_400a6e ], [ %59, %block_4006ea ], [ %69, %block_400b68 ], [ %79, %block_4007e4 ], [ %89, %block_4008de ], [ %99, %block_4009d8 ], [ %109, %block_400654 ], [ %119, %block_400ad2 ], [ %164, %block_40074e ], [ %187, %block_400848 ], [ %203, %block_4006b8 ], [ %213, %block_400b36 ], [ %223, %block_4007b2 ], [ %233, %block_4008ac ], [ %243, %block_4009a6 ], [ %307, %block_400622 ], [ %317, %block_400aa0 ], [ %327, %block_40071c ], [ %337, %block_400816 ], [ %347, %block_400910 ], [ %357, %block_40058c ], [ %367, %block_400a0a ], [ %377, %block_400686 ], [ %387, %block_400b04 ]
  %.sink5.be = phi i64 [ 1051, %block_400974 ], [ 151, %block_4005f0 ], [ 1301, %block_400a6e ], [ 401, %block_4006ea ], [ 1551, %block_400b68 ], [ 651, %block_4007e4 ], [ 901, %block_4008de ], [ 1151, %block_4009d8 ], [ 251, %block_400654 ], [ 1401, %block_400ad2 ], [ 501, %block_40074e ], [ 751, %block_400848 ], [ 351, %block_4006b8 ], [ 1501, %block_400b36 ], [ 601, %block_4007b2 ], [ 851, %block_4008ac ], [ 1101, %block_4009a6 ], [ 201, %block_400622 ], [ 1351, %block_400aa0 ], [ 451, %block_40071c ], [ 701, %block_400816 ], [ 951, %block_400910 ], [ 51, %block_40058c ], [ 1201, %block_400a0a ], [ 301, %block_400686 ], [ 1451, %block_400b04 ]
  %25 = add i64 %.sink122, 8
  %26 = load i64, i64* %RSP, align 8, !tbaa !2428
  %27 = add i64 %26, -8
  %28 = inttoptr i64 %27 to i64*
  store i64 %25, i64* %28, align 8
  store i64 %27, i64* %RSP, align 8, !tbaa !2428
  store i64 %.sink117, i64* %PC, align 8, !tbaa !2428
  %29 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %.sink117, %struct.Memory* %2)
  br label %block_400586

block_4005f0:                                     ; preds = %block_400586
  %30 = add i64 %293, -12
  store i64 4195831, i64* %PC, align 8
  %31 = inttoptr i64 %30 to i32*
  store i32 3, i32* %31, align 4
  %32 = load i64, i64* %RBP, align 8
  %33 = add i64 %32, -12
  %34 = load i64, i64* %PC, align 8
  %35 = add i64 %34, 3
  store i64 %35, i64* %PC, align 8
  %36 = inttoptr i64 %33 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i64
  store i64 %38, i64* %RDI, align 8, !tbaa !2428
  %39 = add i64 %34, -231
  br label %block_400586.backedge

block_400a6e:                                     ; preds = %block_400586
  %40 = add i64 %293, -12
  store i64 4196981, i64* %PC, align 8
  %41 = inttoptr i64 %40 to i32*
  store i32 26, i32* %41, align 4
  %42 = load i64, i64* %RBP, align 8
  %43 = add i64 %42, -12
  %44 = load i64, i64* %PC, align 8
  %45 = add i64 %44, 3
  store i64 %45, i64* %PC, align 8
  %46 = inttoptr i64 %43 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = zext i32 %47 to i64
  store i64 %48, i64* %RDI, align 8, !tbaa !2428
  %49 = add i64 %44, -1381
  br label %block_400586.backedge

block_4006ea:                                     ; preds = %block_400586
  %50 = add i64 %293, -12
  store i64 4196081, i64* %PC, align 8
  %51 = inttoptr i64 %50 to i32*
  store i32 8, i32* %51, align 4
  %52 = load i64, i64* %RBP, align 8
  %53 = add i64 %52, -12
  %54 = load i64, i64* %PC, align 8
  %55 = add i64 %54, 3
  store i64 %55, i64* %PC, align 8
  %56 = inttoptr i64 %53 to i32*
  %57 = load i32, i32* %56, align 4
  %58 = zext i32 %57 to i64
  store i64 %58, i64* %RDI, align 8, !tbaa !2428
  %59 = add i64 %54, -481
  br label %block_400586.backedge

block_400b68:                                     ; preds = %block_400586
  %60 = add i64 %293, -12
  store i64 4197231, i64* %PC, align 8
  %61 = inttoptr i64 %60 to i32*
  store i32 31, i32* %61, align 4
  %62 = load i64, i64* %RBP, align 8
  %63 = add i64 %62, -12
  %64 = load i64, i64* %PC, align 8
  %65 = add i64 %64, 3
  store i64 %65, i64* %PC, align 8
  %66 = inttoptr i64 %63 to i32*
  %67 = load i32, i32* %66, align 4
  %68 = zext i32 %67 to i64
  store i64 %68, i64* %RDI, align 8, !tbaa !2428
  %69 = add i64 %64, -1631
  br label %block_400586.backedge

block_4007e4:                                     ; preds = %block_400586
  %70 = add i64 %293, -12
  store i64 4196331, i64* %PC, align 8
  %71 = inttoptr i64 %70 to i32*
  store i32 13, i32* %71, align 4
  %72 = load i64, i64* %RBP, align 8
  %73 = add i64 %72, -12
  %74 = load i64, i64* %PC, align 8
  %75 = add i64 %74, 3
  store i64 %75, i64* %PC, align 8
  %76 = inttoptr i64 %73 to i32*
  %77 = load i32, i32* %76, align 4
  %78 = zext i32 %77 to i64
  store i64 %78, i64* %RDI, align 8, !tbaa !2428
  %79 = add i64 %74, -731
  br label %block_400586.backedge

block_4008de:                                     ; preds = %block_400586
  %80 = add i64 %293, -12
  store i64 4196581, i64* %PC, align 8
  %81 = inttoptr i64 %80 to i32*
  store i32 18, i32* %81, align 4
  %82 = load i64, i64* %RBP, align 8
  %83 = add i64 %82, -12
  %84 = load i64, i64* %PC, align 8
  %85 = add i64 %84, 3
  store i64 %85, i64* %PC, align 8
  %86 = inttoptr i64 %83 to i32*
  %87 = load i32, i32* %86, align 4
  %88 = zext i32 %87 to i64
  store i64 %88, i64* %RDI, align 8, !tbaa !2428
  %89 = add i64 %84, -981
  br label %block_400586.backedge

block_4009d8:                                     ; preds = %block_400586
  %90 = add i64 %293, -12
  store i64 4196831, i64* %PC, align 8
  %91 = inttoptr i64 %90 to i32*
  store i32 23, i32* %91, align 4
  %92 = load i64, i64* %RBP, align 8
  %93 = add i64 %92, -12
  %94 = load i64, i64* %PC, align 8
  %95 = add i64 %94, 3
  store i64 %95, i64* %PC, align 8
  %96 = inttoptr i64 %93 to i32*
  %97 = load i32, i32* %96, align 4
  %98 = zext i32 %97 to i64
  store i64 %98, i64* %RDI, align 8, !tbaa !2428
  %99 = add i64 %94, -1231
  br label %block_400586.backedge

block_400654:                                     ; preds = %block_400586
  %100 = add i64 %293, -12
  store i64 4195931, i64* %PC, align 8
  %101 = inttoptr i64 %100 to i32*
  store i32 5, i32* %101, align 4
  %102 = load i64, i64* %RBP, align 8
  %103 = add i64 %102, -12
  %104 = load i64, i64* %PC, align 8
  %105 = add i64 %104, 3
  store i64 %105, i64* %PC, align 8
  %106 = inttoptr i64 %103 to i32*
  %107 = load i32, i32* %106, align 4
  %108 = zext i32 %107 to i64
  store i64 %108, i64* %RDI, align 8, !tbaa !2428
  %109 = add i64 %104, -331
  br label %block_400586.backedge

block_400ad2:                                     ; preds = %block_400586
  %110 = add i64 %293, -12
  store i64 4197081, i64* %PC, align 8
  %111 = inttoptr i64 %110 to i32*
  store i32 28, i32* %111, align 4
  %112 = load i64, i64* %RBP, align 8
  %113 = add i64 %112, -12
  %114 = load i64, i64* %PC, align 8
  %115 = add i64 %114, 3
  store i64 %115, i64* %PC, align 8
  %116 = inttoptr i64 %113 to i32*
  %117 = load i32, i32* %116, align 4
  %118 = zext i32 %117 to i64
  store i64 %118, i64* %RDI, align 8, !tbaa !2428
  %119 = add i64 %114, -1481
  br label %block_400586.backedge

block_400579:                                     ; preds = %block_400586
  %120 = add i64 %293, -12
  store i64 4195712, i64* %PC, align 8
  %121 = inttoptr i64 %120 to i32*
  store i32 0, i32* %121, align 4
  %122 = load i64, i64* %RSP, align 8
  %123 = load i64, i64* %PC, align 8
  %124 = add i64 %122, 48
  store i64 %124, i64* %RSP, align 8, !tbaa !2428
  %125 = icmp ugt i64 %122, -49
  %126 = zext i1 %125 to i8
  store i8 %126, i8* %4, align 1, !tbaa !2432
  %127 = trunc i64 %124 to i32
  %128 = and i32 %127, 255
  %129 = tail call i32 @llvm.ctpop.i32(i32 %128) #9
  %130 = trunc i32 %129 to i8
  %131 = and i8 %130, 1
  %132 = xor i8 %131, 1
  store i8 %132, i8* %5, align 1, !tbaa !2446
  %133 = xor i64 %122, 16
  %134 = xor i64 %133, %124
  %135 = lshr i64 %134, 4
  %136 = trunc i64 %135 to i8
  %137 = and i8 %136, 1
  store i8 %137, i8* %6, align 1, !tbaa !2447
  %138 = icmp eq i64 %124, 0
  %139 = zext i1 %138 to i8
  store i8 %139, i8* %7, align 1, !tbaa !2448
  %140 = lshr i64 %124, 63
  %141 = trunc i64 %140 to i8
  store i8 %141, i8* %8, align 1, !tbaa !2449
  %142 = lshr i64 %122, 63
  %143 = xor i64 %140, %142
  %144 = add nuw nsw i64 %143, %140
  %145 = icmp eq i64 %144, 2
  %146 = zext i1 %145 to i8
  store i8 %146, i8* %9, align 1, !tbaa !2450
  %147 = add i64 %123, 5
  store i64 %147, i64* %PC, align 8
  %148 = add i64 %122, 56
  %149 = inttoptr i64 %124 to i64*
  %150 = load i64, i64* %149, align 8
  store i64 %150, i64* %RBP, align 8, !tbaa !2428
  store i64 %148, i64* %RSP, align 8, !tbaa !2428
  %151 = add i64 %123, 6
  store i64 %151, i64* %PC, align 8
  %152 = inttoptr i64 %148 to i64*
  %153 = load i64, i64* %152, align 8
  store i64 %153, i64* %PC, align 8, !tbaa !2428
  %154 = add i64 %122, 64
  store i64 %154, i64* %RSP, align 8, !tbaa !2428
  ret %struct.Memory* %2

block_40074e:                                     ; preds = %block_400586
  %155 = add i64 %293, -12
  store i64 4196181, i64* %PC, align 8
  %156 = inttoptr i64 %155 to i32*
  store i32 10, i32* %156, align 4
  %157 = load i64, i64* %RBP, align 8
  %158 = add i64 %157, -12
  %159 = load i64, i64* %PC, align 8
  %160 = add i64 %159, 3
  store i64 %160, i64* %PC, align 8
  %161 = inttoptr i64 %158 to i32*
  %162 = load i32, i32* %161, align 4
  %163 = zext i32 %162 to i64
  store i64 %163, i64* %RDI, align 8, !tbaa !2428
  %164 = add i64 %159, -581
  br label %block_400586.backedge

block_400949:                                     ; preds = %block_400942, %3
  %165 = phi i64 [ %.pre, %block_400942 ], [ %1, %3 ]
  %166 = load i64, i64* %RBP, align 8
  %167 = add i64 %166, -12
  %168 = add i64 %165, 3
  store i64 %168, i64* %PC, align 8
  %169 = inttoptr i64 %167 to i32*
  %170 = load i32, i32* %169, align 4
  %171 = zext i32 %170 to i64
  store i64 %171, i64* %RDI, align 8, !tbaa !2428
  %172 = add i64 %165, -1081
  %173 = add i64 %165, 8
  %174 = load i64, i64* %RSP, align 8, !tbaa !2428
  %175 = add i64 %174, -8
  %176 = inttoptr i64 %175 to i64*
  store i64 %173, i64* %176, align 8
  store i64 %175, i64* %RSP, align 8, !tbaa !2428
  store i64 %172, i64* %PC, align 8, !tbaa !2428
  %177 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %172, %struct.Memory* %2)
  br label %block_400586

block_400848:                                     ; preds = %block_400586
  %178 = add i64 %293, -12
  store i64 4196431, i64* %PC, align 8
  %179 = inttoptr i64 %178 to i32*
  store i32 15, i32* %179, align 4
  %180 = load i64, i64* %RBP, align 8
  %181 = add i64 %180, -12
  %182 = load i64, i64* %PC, align 8
  %183 = add i64 %182, 3
  store i64 %183, i64* %PC, align 8
  %184 = inttoptr i64 %181 to i32*
  %185 = load i32, i32* %184, align 4
  %186 = zext i32 %185 to i64
  store i64 %186, i64* %RDI, align 8, !tbaa !2428
  %187 = add i64 %182, -831
  br label %block_400586.backedge

block_400942:                                     ; preds = %block_400586
  %188 = add i64 %293, -12
  store i64 4196681, i64* %PC, align 8
  %189 = inttoptr i64 %188 to i32*
  store i32 20, i32* %189, align 4
  %.pre = load i64, i64* %PC, align 8
  br label %block_400949

block_4005be:                                     ; preds = %block_400586
  %190 = add i64 %293, -12
  store i64 4195781, i64* %PC, align 8
  %191 = inttoptr i64 %190 to i32*
  store i32 2, i32* %191, align 4
  %192 = load i64, i64* %PC, align 8
  %193 = tail call %struct.Memory* @sub_4005c5(%struct.State* nonnull %0, i64 %192, %struct.Memory* %2)
  ret %struct.Memory* %193

block_4006b8:                                     ; preds = %block_400586
  %194 = add i64 %293, -12
  store i64 4196031, i64* %PC, align 8
  %195 = inttoptr i64 %194 to i32*
  store i32 7, i32* %195, align 4
  %196 = load i64, i64* %RBP, align 8
  %197 = add i64 %196, -12
  %198 = load i64, i64* %PC, align 8
  %199 = add i64 %198, 3
  store i64 %199, i64* %PC, align 8
  %200 = inttoptr i64 %197 to i32*
  %201 = load i32, i32* %200, align 4
  %202 = zext i32 %201 to i64
  store i64 %202, i64* %RDI, align 8, !tbaa !2428
  %203 = add i64 %198, -431
  br label %block_400586.backedge

block_400b36:                                     ; preds = %block_400586
  %204 = add i64 %293, -12
  store i64 4197181, i64* %PC, align 8
  %205 = inttoptr i64 %204 to i32*
  store i32 30, i32* %205, align 4
  %206 = load i64, i64* %RBP, align 8
  %207 = add i64 %206, -12
  %208 = load i64, i64* %PC, align 8
  %209 = add i64 %208, 3
  store i64 %209, i64* %PC, align 8
  %210 = inttoptr i64 %207 to i32*
  %211 = load i32, i32* %210, align 4
  %212 = zext i32 %211 to i64
  store i64 %212, i64* %RDI, align 8, !tbaa !2428
  %213 = add i64 %208, -1581
  br label %block_400586.backedge

block_4007b2:                                     ; preds = %block_400586
  %214 = add i64 %293, -12
  store i64 4196281, i64* %PC, align 8
  %215 = inttoptr i64 %214 to i32*
  store i32 12, i32* %215, align 4
  %216 = load i64, i64* %RBP, align 8
  %217 = add i64 %216, -12
  %218 = load i64, i64* %PC, align 8
  %219 = add i64 %218, 3
  store i64 %219, i64* %PC, align 8
  %220 = inttoptr i64 %217 to i32*
  %221 = load i32, i32* %220, align 4
  %222 = zext i32 %221 to i64
  store i64 %222, i64* %RDI, align 8, !tbaa !2428
  %223 = add i64 %218, -681
  br label %block_400586.backedge

block_4008ac:                                     ; preds = %block_400586
  %224 = add i64 %293, -12
  store i64 4196531, i64* %PC, align 8
  %225 = inttoptr i64 %224 to i32*
  store i32 17, i32* %225, align 4
  %226 = load i64, i64* %RBP, align 8
  %227 = add i64 %226, -12
  %228 = load i64, i64* %PC, align 8
  %229 = add i64 %228, 3
  store i64 %229, i64* %PC, align 8
  %230 = inttoptr i64 %227 to i32*
  %231 = load i32, i32* %230, align 4
  %232 = zext i32 %231 to i64
  store i64 %232, i64* %RDI, align 8, !tbaa !2428
  %233 = add i64 %228, -931
  br label %block_400586.backedge

block_4009a6:                                     ; preds = %block_400586
  %234 = add i64 %293, -12
  store i64 4196781, i64* %PC, align 8
  %235 = inttoptr i64 %234 to i32*
  store i32 22, i32* %235, align 4
  %236 = load i64, i64* %RBP, align 8
  %237 = add i64 %236, -12
  %238 = load i64, i64* %PC, align 8
  %239 = add i64 %238, 3
  store i64 %239, i64* %PC, align 8
  %240 = inttoptr i64 %237 to i32*
  %241 = load i32, i32* %240, align 4
  %242 = zext i32 %241 to i64
  store i64 %242, i64* %RDI, align 8, !tbaa !2428
  %243 = add i64 %238, -1181
  br label %block_400586.backedge

block_400a3c:                                     ; preds = %block_400586
  %244 = add i64 %293, -12
  store i64 4196931, i64* %PC, align 8
  %245 = inttoptr i64 %244 to i32*
  store i32 25, i32* %245, align 4
  %246 = load i64, i64* %PC, align 8
  %247 = tail call %struct.Memory* @sub_400a43(%struct.State* nonnull %0, i64 %246, %struct.Memory* %2)
  ret %struct.Memory* %247

block_400586:                                     ; preds = %block_400586.backedge, %block_400949
  %.sink5 = phi i64 [ 1001, %block_400949 ], [ %.sink5.be, %block_400586.backedge ]
  %248 = load i64, i64* %RBP, align 8
  %249 = add i64 %248, -8
  %250 = load i64, i64* %PC, align 8
  %251 = add i64 %250, 4
  store i64 %251, i64* %PC, align 8
  %252 = inttoptr i64 %249 to i64*
  %253 = load i64, i64* %252, align 8
  store i64 %253, i64* %RAX, align 8, !tbaa !2428
  %254 = add i64 %253, 4
  store i64 %254, i64* %RCX, align 8, !tbaa !2428
  %255 = icmp ugt i64 %253, -5
  %256 = zext i1 %255 to i8
  store i8 %256, i8* %4, align 1, !tbaa !2432
  %257 = trunc i64 %254 to i32
  %258 = and i32 %257, 255
  %259 = tail call i32 @llvm.ctpop.i32(i32 %258) #9
  %260 = trunc i32 %259 to i8
  %261 = and i8 %260, 1
  %262 = xor i8 %261, 1
  store i8 %262, i8* %5, align 1, !tbaa !2446
  %263 = xor i64 %254, %253
  %264 = lshr i64 %263, 4
  %265 = trunc i64 %264 to i8
  %266 = and i8 %265, 1
  store i8 %266, i8* %6, align 1, !tbaa !2447
  %267 = icmp eq i64 %254, 0
  %268 = zext i1 %267 to i8
  store i8 %268, i8* %7, align 1, !tbaa !2448
  %269 = lshr i64 %254, 63
  %270 = trunc i64 %269 to i8
  store i8 %270, i8* %8, align 1, !tbaa !2449
  %271 = lshr i64 %253, 63
  %272 = xor i64 %269, %271
  %273 = add nuw nsw i64 %272, %269
  %274 = icmp eq i64 %273, 2
  %275 = zext i1 %274 to i8
  store i8 %275, i8* %9, align 1, !tbaa !2450
  %276 = add i64 %250, 15
  store i64 %276, i64* %PC, align 8
  store i64 %254, i64* %252, align 8
  %277 = load i32*, i32** %10, align 8
  %278 = load i64, i64* %PC, align 8
  %279 = add i64 %278, 3
  store i64 %279, i64* %PC, align 8
  %280 = load i32, i32* %277, align 4
  %281 = sext i32 %280 to i64
  store i64 %281, i64* %RAX, align 8, !tbaa !2428
  %282 = shl nsw i64 %281, 3
  %283 = add i64 %282, add (i64 ptrtoint (%seg_602020__data_type* @seg_602020__data to i64), i64 16)
  %284 = add i64 %278, 11
  store i64 %284, i64* %PC, align 8
  %285 = inttoptr i64 %283 to i64*
  %286 = load i64, i64* %285, align 8
  store i64 %286, i64* %RAX, align 8, !tbaa !2428
  %287 = load i64, i64* %RBP, align 8
  %288 = add i64 %287, -40
  %289 = add i64 %278, 15
  store i64 %289, i64* %PC, align 8
  %290 = inttoptr i64 %288 to i64*
  store i64 %286, i64* %290, align 8
  %291 = load i64, i64* %PC, align 8
  %292 = sub i64 %291, %.sink5
  %293 = load i64, i64* %RBP, align 8
  %294 = add i64 %293, -40
  %295 = add i64 %292, 4
  store i64 %295, i64* %PC, align 8
  %296 = inttoptr i64 %294 to i64*
  %297 = load i64, i64* %296, align 8
  store i64 %297, i64* %RAX, align 8, !tbaa !2428
  store i64 %297, i64* %PC, align 8, !tbaa !2428
  switch i64 %297, label %392 [
    i64 4196224, label %block_400780
    i64 4197124, label %block_400b04
    i64 4195974, label %block_400686
    i64 4196874, label %block_400a0a
    i64 4196624, label %block_400910
    i64 4196374, label %block_400816
    i64 4196124, label %block_40071c
    i64 4197024, label %block_400aa0
    i64 4195874, label %block_400622
    i64 4196574, label %block_4008de
    i64 4196324, label %block_4007e4
    i64 4197224, label %block_400b68
    i64 4196074, label %block_4006ea
    i64 4195924, label %block_400654
    i64 4197074, label %block_400ad2
    i64 4196474, label %block_40087a
    i64 4196824, label %block_4009d8
    i64 4195724, label %block_40058c
    i64 4196724, label %block_400974
    i64 4195824, label %block_4005f0
    i64 4196974, label %block_400a6e
    i64 4195705, label %block_400579
    i64 4195774, label %block_4005be
    i64 4196924, label %block_400a3c
    i64 4196174, label %block_40074e
    i64 4196424, label %block_400848
    i64 4196674, label %block_400942
    i64 4196024, label %block_4006b8
    i64 4197174, label %block_400b36
    i64 4196274, label %block_4007b2
    i64 4196524, label %block_4008ac
    i64 4196774, label %block_4009a6
  ]

block_400622:                                     ; preds = %block_400586
  %298 = add i64 %293, -12
  store i64 4195881, i64* %PC, align 8
  %299 = inttoptr i64 %298 to i32*
  store i32 4, i32* %299, align 4
  %300 = load i64, i64* %RBP, align 8
  %301 = add i64 %300, -12
  %302 = load i64, i64* %PC, align 8
  %303 = add i64 %302, 3
  store i64 %303, i64* %PC, align 8
  %304 = inttoptr i64 %301 to i32*
  %305 = load i32, i32* %304, align 4
  %306 = zext i32 %305 to i64
  store i64 %306, i64* %RDI, align 8, !tbaa !2428
  %307 = add i64 %302, -281
  br label %block_400586.backedge

block_400aa0:                                     ; preds = %block_400586
  %308 = add i64 %293, -12
  store i64 4197031, i64* %PC, align 8
  %309 = inttoptr i64 %308 to i32*
  store i32 27, i32* %309, align 4
  %310 = load i64, i64* %RBP, align 8
  %311 = add i64 %310, -12
  %312 = load i64, i64* %PC, align 8
  %313 = add i64 %312, 3
  store i64 %313, i64* %PC, align 8
  %314 = inttoptr i64 %311 to i32*
  %315 = load i32, i32* %314, align 4
  %316 = zext i32 %315 to i64
  store i64 %316, i64* %RDI, align 8, !tbaa !2428
  %317 = add i64 %312, -1431
  br label %block_400586.backedge

block_40071c:                                     ; preds = %block_400586
  %318 = add i64 %293, -12
  store i64 4196131, i64* %PC, align 8
  %319 = inttoptr i64 %318 to i32*
  store i32 9, i32* %319, align 4
  %320 = load i64, i64* %RBP, align 8
  %321 = add i64 %320, -12
  %322 = load i64, i64* %PC, align 8
  %323 = add i64 %322, 3
  store i64 %323, i64* %PC, align 8
  %324 = inttoptr i64 %321 to i32*
  %325 = load i32, i32* %324, align 4
  %326 = zext i32 %325 to i64
  store i64 %326, i64* %RDI, align 8, !tbaa !2428
  %327 = add i64 %322, -531
  br label %block_400586.backedge

block_400816:                                     ; preds = %block_400586
  %328 = add i64 %293, -12
  store i64 4196381, i64* %PC, align 8
  %329 = inttoptr i64 %328 to i32*
  store i32 14, i32* %329, align 4
  %330 = load i64, i64* %RBP, align 8
  %331 = add i64 %330, -12
  %332 = load i64, i64* %PC, align 8
  %333 = add i64 %332, 3
  store i64 %333, i64* %PC, align 8
  %334 = inttoptr i64 %331 to i32*
  %335 = load i32, i32* %334, align 4
  %336 = zext i32 %335 to i64
  store i64 %336, i64* %RDI, align 8, !tbaa !2428
  %337 = add i64 %332, -781
  br label %block_400586.backedge

block_400910:                                     ; preds = %block_400586
  %338 = add i64 %293, -12
  store i64 4196631, i64* %PC, align 8
  %339 = inttoptr i64 %338 to i32*
  store i32 19, i32* %339, align 4
  %340 = load i64, i64* %RBP, align 8
  %341 = add i64 %340, -12
  %342 = load i64, i64* %PC, align 8
  %343 = add i64 %342, 3
  store i64 %343, i64* %PC, align 8
  %344 = inttoptr i64 %341 to i32*
  %345 = load i32, i32* %344, align 4
  %346 = zext i32 %345 to i64
  store i64 %346, i64* %RDI, align 8, !tbaa !2428
  %347 = add i64 %342, -1031
  br label %block_400586.backedge

block_40058c:                                     ; preds = %block_400586
  %348 = add i64 %293, -12
  store i64 4195731, i64* %PC, align 8
  %349 = inttoptr i64 %348 to i32*
  store i32 1, i32* %349, align 4
  %350 = load i64, i64* %RBP, align 8
  %351 = add i64 %350, -12
  %352 = load i64, i64* %PC, align 8
  %353 = add i64 %352, 3
  store i64 %353, i64* %PC, align 8
  %354 = inttoptr i64 %351 to i32*
  %355 = load i32, i32* %354, align 4
  %356 = zext i32 %355 to i64
  store i64 %356, i64* %RDI, align 8, !tbaa !2428
  %357 = add i64 %352, -131
  br label %block_400586.backedge

block_400a0a:                                     ; preds = %block_400586
  %358 = add i64 %293, -12
  store i64 4196881, i64* %PC, align 8
  %359 = inttoptr i64 %358 to i32*
  store i32 24, i32* %359, align 4
  %360 = load i64, i64* %RBP, align 8
  %361 = add i64 %360, -12
  %362 = load i64, i64* %PC, align 8
  %363 = add i64 %362, 3
  store i64 %363, i64* %PC, align 8
  %364 = inttoptr i64 %361 to i32*
  %365 = load i32, i32* %364, align 4
  %366 = zext i32 %365 to i64
  store i64 %366, i64* %RDI, align 8, !tbaa !2428
  %367 = add i64 %362, -1281
  br label %block_400586.backedge

block_400686:                                     ; preds = %block_400586
  %368 = add i64 %293, -12
  store i64 4195981, i64* %PC, align 8
  %369 = inttoptr i64 %368 to i32*
  store i32 6, i32* %369, align 4
  %370 = load i64, i64* %RBP, align 8
  %371 = add i64 %370, -12
  %372 = load i64, i64* %PC, align 8
  %373 = add i64 %372, 3
  store i64 %373, i64* %PC, align 8
  %374 = inttoptr i64 %371 to i32*
  %375 = load i32, i32* %374, align 4
  %376 = zext i32 %375 to i64
  store i64 %376, i64* %RDI, align 8, !tbaa !2428
  %377 = add i64 %372, -381
  br label %block_400586.backedge

block_400b04:                                     ; preds = %block_400586
  %378 = add i64 %293, -12
  store i64 4197131, i64* %PC, align 8
  %379 = inttoptr i64 %378 to i32*
  store i32 29, i32* %379, align 4
  %380 = load i64, i64* %RBP, align 8
  %381 = add i64 %380, -12
  %382 = load i64, i64* %PC, align 8
  %383 = add i64 %382, 3
  store i64 %383, i64* %PC, align 8
  %384 = inttoptr i64 %381 to i32*
  %385 = load i32, i32* %384, align 4
  %386 = zext i32 %385 to i64
  store i64 %386, i64* %RDI, align 8, !tbaa !2428
  %387 = add i64 %382, -1531
  br label %block_400586.backedge

block_400780:                                     ; preds = %block_400586
  %388 = add i64 %293, -12
  store i64 4196231, i64* %PC, align 8
  %389 = inttoptr i64 %388 to i32*
  store i32 11, i32* %389, align 4
  %390 = load i64, i64* %PC, align 8
  %391 = tail call %struct.Memory* @sub_400787(%struct.State* nonnull %0, i64 %390, %struct.Memory* %2)
  ret %struct.Memory* %391

; <label>:392:                                    ; preds = %block_400586
  %393 = tail call %struct.Memory* @__remill_jump(%struct.State* nonnull %0, i64 %297, %struct.Memory* %2)
  ret %struct.Memory* %393
}

; Function Attrs: noinline nounwind
define %struct.Memory* @sub_400aa7(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) local_unnamed_addr #6 {
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %PC, align 8
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RSP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %10 = bitcast i64* %RAX to i32**
  br label %block_400aa7

block_40087a:                                     ; preds = %block_400586
  %11 = add i64 %245, -12
  store i64 4196481, i64* %PC, align 8
  %12 = inttoptr i64 %11 to i32*
  store i32 16, i32* %12, align 4
  %13 = load i64, i64* %PC, align 8
  %14 = tail call %struct.Memory* @sub_400881(%struct.State* nonnull %0, i64 %13, %struct.Memory* %2)
  ret %struct.Memory* %14

block_400974:                                     ; preds = %block_400586
  %15 = add i64 %245, -12
  store i64 4196731, i64* %PC, align 8
  %16 = inttoptr i64 %15 to i32*
  store i32 21, i32* %16, align 4
  %17 = load i64, i64* %RBP, align 8
  %18 = add i64 %17, -12
  %19 = load i64, i64* %PC, align 8
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC, align 8
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RDI, align 8, !tbaa !2428
  %24 = add i64 %19, -1131
  br label %block_400586.backedge

block_400586.backedge:                            ; preds = %block_400974, %block_400a6e, %block_4006ea, %block_400b68, %block_4007e4, %block_400b36, %block_4008ac, %block_4006b8, %block_4009a6, %block_4005f0, %block_400622, %block_4007b2
  %.sink234 = phi i64 [ %19, %block_400974 ], [ %34, %block_400a6e ], [ %44, %block_4006ea ], [ %54, %block_400b68 ], [ %64, %block_4007e4 ], [ %137, %block_400b36 ], [ %151, %block_4008ac ], [ %161, %block_4006b8 ], [ %184, %block_4009a6 ], [ %194, %block_4005f0 ], [ %254, %block_400622 ], [ %294, %block_4007b2 ]
  %.sink229 = phi i64 [ %24, %block_400974 ], [ %39, %block_400a6e ], [ %49, %block_4006ea ], [ %59, %block_400b68 ], [ %69, %block_4007e4 ], [ %142, %block_400b36 ], [ %156, %block_4008ac ], [ %166, %block_4006b8 ], [ %189, %block_4009a6 ], [ %199, %block_4005f0 ], [ %259, %block_400622 ], [ %299, %block_4007b2 ]
  %.sink5.be = phi i64 [ 1051, %block_400974 ], [ 1301, %block_400a6e ], [ 401, %block_4006ea ], [ 1551, %block_400b68 ], [ 651, %block_4007e4 ], [ 1501, %block_400b36 ], [ 851, %block_4008ac ], [ 351, %block_4006b8 ], [ 1101, %block_4009a6 ], [ 151, %block_4005f0 ], [ 201, %block_400622 ], [ 601, %block_4007b2 ]
  %25 = add i64 %.sink234, 8
  %26 = load i64, i64* %RSP, align 8, !tbaa !2428
  %27 = add i64 %26, -8
  %28 = inttoptr i64 %27 to i64*
  store i64 %25, i64* %28, align 8
  store i64 %27, i64* %RSP, align 8, !tbaa !2428
  store i64 %.sink229, i64* %PC, align 8, !tbaa !2428
  %29 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %.sink229, %struct.Memory* %2)
  br label %block_400586

block_400a6e:                                     ; preds = %block_400586
  %30 = add i64 %245, -12
  store i64 4196981, i64* %PC, align 8
  %31 = inttoptr i64 %30 to i32*
  store i32 26, i32* %31, align 4
  %32 = load i64, i64* %RBP, align 8
  %33 = add i64 %32, -12
  %34 = load i64, i64* %PC, align 8
  %35 = add i64 %34, 3
  store i64 %35, i64* %PC, align 8
  %36 = inttoptr i64 %33 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i64
  store i64 %38, i64* %RDI, align 8, !tbaa !2428
  %39 = add i64 %34, -1381
  br label %block_400586.backedge

block_4006ea:                                     ; preds = %block_400586
  %40 = add i64 %245, -12
  store i64 4196081, i64* %PC, align 8
  %41 = inttoptr i64 %40 to i32*
  store i32 8, i32* %41, align 4
  %42 = load i64, i64* %RBP, align 8
  %43 = add i64 %42, -12
  %44 = load i64, i64* %PC, align 8
  %45 = add i64 %44, 3
  store i64 %45, i64* %PC, align 8
  %46 = inttoptr i64 %43 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = zext i32 %47 to i64
  store i64 %48, i64* %RDI, align 8, !tbaa !2428
  %49 = add i64 %44, -481
  br label %block_400586.backedge

block_400b68:                                     ; preds = %block_400586
  %50 = add i64 %245, -12
  store i64 4197231, i64* %PC, align 8
  %51 = inttoptr i64 %50 to i32*
  store i32 31, i32* %51, align 4
  %52 = load i64, i64* %RBP, align 8
  %53 = add i64 %52, -12
  %54 = load i64, i64* %PC, align 8
  %55 = add i64 %54, 3
  store i64 %55, i64* %PC, align 8
  %56 = inttoptr i64 %53 to i32*
  %57 = load i32, i32* %56, align 4
  %58 = zext i32 %57 to i64
  store i64 %58, i64* %RDI, align 8, !tbaa !2428
  %59 = add i64 %54, -1631
  br label %block_400586.backedge

block_4007e4:                                     ; preds = %block_400586
  %60 = add i64 %245, -12
  store i64 4196331, i64* %PC, align 8
  %61 = inttoptr i64 %60 to i32*
  store i32 13, i32* %61, align 4
  %62 = load i64, i64* %RBP, align 8
  %63 = add i64 %62, -12
  %64 = load i64, i64* %PC, align 8
  %65 = add i64 %64, 3
  store i64 %65, i64* %PC, align 8
  %66 = inttoptr i64 %63 to i32*
  %67 = load i32, i32* %66, align 4
  %68 = zext i32 %67 to i64
  store i64 %68, i64* %RDI, align 8, !tbaa !2428
  %69 = add i64 %64, -731
  br label %block_400586.backedge

block_4008de:                                     ; preds = %block_400586
  %70 = add i64 %245, -12
  store i64 4196581, i64* %PC, align 8
  %71 = inttoptr i64 %70 to i32*
  store i32 18, i32* %71, align 4
  %72 = load i64, i64* %PC, align 8
  %73 = tail call %struct.Memory* @sub_4008e5(%struct.State* nonnull %0, i64 %72, %struct.Memory* %2)
  ret %struct.Memory* %73

block_4009d8:                                     ; preds = %block_400586
  %74 = add i64 %245, -12
  store i64 4196831, i64* %PC, align 8
  %75 = inttoptr i64 %74 to i32*
  store i32 23, i32* %75, align 4
  %76 = load i64, i64* %PC, align 8
  %77 = tail call %struct.Memory* @sub_4009df(%struct.State* nonnull %0, i64 %76, %struct.Memory* %2)
  ret %struct.Memory* %77

block_400ad2:                                     ; preds = %block_400586
  %78 = add i64 %245, -12
  store i64 4197081, i64* %PC, align 8
  %79 = inttoptr i64 %78 to i32*
  store i32 28, i32* %79, align 4
  %80 = load i64, i64* %PC, align 8
  %81 = tail call %struct.Memory* @sub_400ad9(%struct.State* nonnull %0, i64 %80, %struct.Memory* %2)
  ret %struct.Memory* %81

block_400848:                                     ; preds = %block_400586
  %82 = add i64 %245, -12
  store i64 4196431, i64* %PC, align 8
  %83 = inttoptr i64 %82 to i32*
  store i32 15, i32* %83, align 4
  %84 = load i64, i64* %PC, align 8
  %85 = tail call %struct.Memory* @sub_40084f(%struct.State* nonnull %0, i64 %84, %struct.Memory* %2)
  ret %struct.Memory* %85

block_400942:                                     ; preds = %block_400586
  %86 = add i64 %245, -12
  store i64 4196681, i64* %PC, align 8
  %87 = inttoptr i64 %86 to i32*
  store i32 20, i32* %87, align 4
  %88 = load i64, i64* %PC, align 8
  %89 = tail call %struct.Memory* @sub_400949(%struct.State* nonnull %0, i64 %88, %struct.Memory* %2)
  ret %struct.Memory* %89

block_40074e:                                     ; preds = %block_400586
  %90 = add i64 %245, -12
  store i64 4196181, i64* %PC, align 8
  %91 = inttoptr i64 %90 to i32*
  store i32 10, i32* %91, align 4
  %92 = load i64, i64* %PC, align 8
  %93 = tail call %struct.Memory* @sub_400755(%struct.State* nonnull %0, i64 %92, %struct.Memory* %2)
  ret %struct.Memory* %93

block_400579:                                     ; preds = %block_400586
  %94 = add i64 %245, -12
  store i64 4195712, i64* %PC, align 8
  %95 = inttoptr i64 %94 to i32*
  store i32 0, i32* %95, align 4
  %96 = load i64, i64* %RSP, align 8
  %97 = load i64, i64* %PC, align 8
  %98 = add i64 %96, 48
  store i64 %98, i64* %RSP, align 8, !tbaa !2428
  %99 = icmp ugt i64 %96, -49
  %100 = zext i1 %99 to i8
  store i8 %100, i8* %4, align 1, !tbaa !2432
  %101 = trunc i64 %98 to i32
  %102 = and i32 %101, 255
  %103 = tail call i32 @llvm.ctpop.i32(i32 %102) #9
  %104 = trunc i32 %103 to i8
  %105 = and i8 %104, 1
  %106 = xor i8 %105, 1
  store i8 %106, i8* %5, align 1, !tbaa !2446
  %107 = xor i64 %96, 16
  %108 = xor i64 %107, %98
  %109 = lshr i64 %108, 4
  %110 = trunc i64 %109 to i8
  %111 = and i8 %110, 1
  store i8 %111, i8* %6, align 1, !tbaa !2447
  %112 = icmp eq i64 %98, 0
  %113 = zext i1 %112 to i8
  store i8 %113, i8* %7, align 1, !tbaa !2448
  %114 = lshr i64 %98, 63
  %115 = trunc i64 %114 to i8
  store i8 %115, i8* %8, align 1, !tbaa !2449
  %116 = lshr i64 %96, 63
  %117 = xor i64 %114, %116
  %118 = add nuw nsw i64 %117, %114
  %119 = icmp eq i64 %118, 2
  %120 = zext i1 %119 to i8
  store i8 %120, i8* %9, align 1, !tbaa !2450
  %121 = add i64 %97, 5
  store i64 %121, i64* %PC, align 8
  %122 = add i64 %96, 56
  %123 = inttoptr i64 %98 to i64*
  %124 = load i64, i64* %123, align 8
  store i64 %124, i64* %RBP, align 8, !tbaa !2428
  store i64 %122, i64* %RSP, align 8, !tbaa !2428
  %125 = add i64 %97, 6
  store i64 %125, i64* %PC, align 8
  %126 = inttoptr i64 %122 to i64*
  %127 = load i64, i64* %126, align 8
  store i64 %127, i64* %PC, align 8, !tbaa !2428
  %128 = add i64 %96, 64
  store i64 %128, i64* %RSP, align 8, !tbaa !2428
  ret %struct.Memory* %2

block_400a3c:                                     ; preds = %block_400586
  %129 = add i64 %245, -12
  store i64 4196931, i64* %PC, align 8
  %130 = inttoptr i64 %129 to i32*
  store i32 25, i32* %130, align 4
  %131 = load i64, i64* %PC, align 8
  %132 = tail call %struct.Memory* @sub_400a43(%struct.State* nonnull %0, i64 %131, %struct.Memory* %2)
  ret %struct.Memory* %132

block_400b36:                                     ; preds = %block_400586
  %133 = add i64 %245, -12
  store i64 4197181, i64* %PC, align 8
  %134 = inttoptr i64 %133 to i32*
  store i32 30, i32* %134, align 4
  %135 = load i64, i64* %RBP, align 8
  %136 = add i64 %135, -12
  %137 = load i64, i64* %PC, align 8
  %138 = add i64 %137, 3
  store i64 %138, i64* %PC, align 8
  %139 = inttoptr i64 %136 to i32*
  %140 = load i32, i32* %139, align 4
  %141 = zext i32 %140 to i64
  store i64 %141, i64* %RDI, align 8, !tbaa !2428
  %142 = add i64 %137, -1581
  br label %block_400586.backedge

block_4005be:                                     ; preds = %block_400586
  %143 = add i64 %245, -12
  store i64 4195781, i64* %PC, align 8
  %144 = inttoptr i64 %143 to i32*
  store i32 2, i32* %144, align 4
  %145 = load i64, i64* %PC, align 8
  %146 = tail call %struct.Memory* @sub_4005c5(%struct.State* nonnull %0, i64 %145, %struct.Memory* %2)
  ret %struct.Memory* %146

block_4008ac:                                     ; preds = %block_400586
  %147 = add i64 %245, -12
  store i64 4196531, i64* %PC, align 8
  %148 = inttoptr i64 %147 to i32*
  store i32 17, i32* %148, align 4
  %149 = load i64, i64* %RBP, align 8
  %150 = add i64 %149, -12
  %151 = load i64, i64* %PC, align 8
  %152 = add i64 %151, 3
  store i64 %152, i64* %PC, align 8
  %153 = inttoptr i64 %150 to i32*
  %154 = load i32, i32* %153, align 4
  %155 = zext i32 %154 to i64
  store i64 %155, i64* %RDI, align 8, !tbaa !2428
  %156 = add i64 %151, -931
  br label %block_400586.backedge

block_4006b8:                                     ; preds = %block_400586
  %157 = add i64 %245, -12
  store i64 4196031, i64* %PC, align 8
  %158 = inttoptr i64 %157 to i32*
  store i32 7, i32* %158, align 4
  %159 = load i64, i64* %RBP, align 8
  %160 = add i64 %159, -12
  %161 = load i64, i64* %PC, align 8
  %162 = add i64 %161, 3
  store i64 %162, i64* %PC, align 8
  %163 = inttoptr i64 %160 to i32*
  %164 = load i32, i32* %163, align 4
  %165 = zext i32 %164 to i64
  store i64 %165, i64* %RDI, align 8, !tbaa !2428
  %166 = add i64 %161, -431
  br label %block_400586.backedge

block_400aa7:                                     ; preds = %block_400aa0, %3
  %167 = phi i64 [ %.pre, %block_400aa0 ], [ %1, %3 ]
  %168 = load i64, i64* %RBP, align 8
  %169 = add i64 %168, -12
  %170 = add i64 %167, 3
  store i64 %170, i64* %PC, align 8
  %171 = inttoptr i64 %169 to i32*
  %172 = load i32, i32* %171, align 4
  %173 = zext i32 %172 to i64
  store i64 %173, i64* %RDI, align 8, !tbaa !2428
  %174 = add i64 %167, -1431
  %175 = add i64 %167, 8
  %176 = load i64, i64* %RSP, align 8, !tbaa !2428
  %177 = add i64 %176, -8
  %178 = inttoptr i64 %177 to i64*
  store i64 %175, i64* %178, align 8
  store i64 %177, i64* %RSP, align 8, !tbaa !2428
  store i64 %174, i64* %PC, align 8, !tbaa !2428
  %179 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %174, %struct.Memory* %2)
  br label %block_400586

block_4009a6:                                     ; preds = %block_400586
  %180 = add i64 %245, -12
  store i64 4196781, i64* %PC, align 8
  %181 = inttoptr i64 %180 to i32*
  store i32 22, i32* %181, align 4
  %182 = load i64, i64* %RBP, align 8
  %183 = add i64 %182, -12
  %184 = load i64, i64* %PC, align 8
  %185 = add i64 %184, 3
  store i64 %185, i64* %PC, align 8
  %186 = inttoptr i64 %183 to i32*
  %187 = load i32, i32* %186, align 4
  %188 = zext i32 %187 to i64
  store i64 %188, i64* %RDI, align 8, !tbaa !2428
  %189 = add i64 %184, -1181
  br label %block_400586.backedge

block_4005f0:                                     ; preds = %block_400586
  %190 = add i64 %245, -12
  store i64 4195831, i64* %PC, align 8
  %191 = inttoptr i64 %190 to i32*
  store i32 3, i32* %191, align 4
  %192 = load i64, i64* %RBP, align 8
  %193 = add i64 %192, -12
  %194 = load i64, i64* %PC, align 8
  %195 = add i64 %194, 3
  store i64 %195, i64* %PC, align 8
  %196 = inttoptr i64 %193 to i32*
  %197 = load i32, i32* %196, align 4
  %198 = zext i32 %197 to i64
  store i64 %198, i64* %RDI, align 8, !tbaa !2428
  %199 = add i64 %194, -231
  br label %block_400586.backedge

block_400586:                                     ; preds = %block_400586.backedge, %block_400aa7
  %.sink5 = phi i64 [ 1351, %block_400aa7 ], [ %.sink5.be, %block_400586.backedge ]
  %200 = load i64, i64* %RBP, align 8
  %201 = add i64 %200, -8
  %202 = load i64, i64* %PC, align 8
  %203 = add i64 %202, 4
  store i64 %203, i64* %PC, align 8
  %204 = inttoptr i64 %201 to i64*
  %205 = load i64, i64* %204, align 8
  store i64 %205, i64* %RAX, align 8, !tbaa !2428
  %206 = add i64 %205, 4
  store i64 %206, i64* %RCX, align 8, !tbaa !2428
  %207 = icmp ugt i64 %205, -5
  %208 = zext i1 %207 to i8
  store i8 %208, i8* %4, align 1, !tbaa !2432
  %209 = trunc i64 %206 to i32
  %210 = and i32 %209, 255
  %211 = tail call i32 @llvm.ctpop.i32(i32 %210) #9
  %212 = trunc i32 %211 to i8
  %213 = and i8 %212, 1
  %214 = xor i8 %213, 1
  store i8 %214, i8* %5, align 1, !tbaa !2446
  %215 = xor i64 %206, %205
  %216 = lshr i64 %215, 4
  %217 = trunc i64 %216 to i8
  %218 = and i8 %217, 1
  store i8 %218, i8* %6, align 1, !tbaa !2447
  %219 = icmp eq i64 %206, 0
  %220 = zext i1 %219 to i8
  store i8 %220, i8* %7, align 1, !tbaa !2448
  %221 = lshr i64 %206, 63
  %222 = trunc i64 %221 to i8
  store i8 %222, i8* %8, align 1, !tbaa !2449
  %223 = lshr i64 %205, 63
  %224 = xor i64 %221, %223
  %225 = add nuw nsw i64 %224, %221
  %226 = icmp eq i64 %225, 2
  %227 = zext i1 %226 to i8
  store i8 %227, i8* %9, align 1, !tbaa !2450
  %228 = add i64 %202, 15
  store i64 %228, i64* %PC, align 8
  store i64 %206, i64* %204, align 8
  %229 = load i32*, i32** %10, align 8
  %230 = load i64, i64* %PC, align 8
  %231 = add i64 %230, 3
  store i64 %231, i64* %PC, align 8
  %232 = load i32, i32* %229, align 4
  %233 = sext i32 %232 to i64
  store i64 %233, i64* %RAX, align 8, !tbaa !2428
  %234 = shl nsw i64 %233, 3
  %235 = add i64 %234, add (i64 ptrtoint (%seg_602020__data_type* @seg_602020__data to i64), i64 16)
  %236 = add i64 %230, 11
  store i64 %236, i64* %PC, align 8
  %237 = inttoptr i64 %235 to i64*
  %238 = load i64, i64* %237, align 8
  store i64 %238, i64* %RAX, align 8, !tbaa !2428
  %239 = load i64, i64* %RBP, align 8
  %240 = add i64 %239, -40
  %241 = add i64 %230, 15
  store i64 %241, i64* %PC, align 8
  %242 = inttoptr i64 %240 to i64*
  store i64 %238, i64* %242, align 8
  %243 = load i64, i64* %PC, align 8
  %244 = sub i64 %243, %.sink5
  %245 = load i64, i64* %RBP, align 8
  %246 = add i64 %245, -40
  %247 = add i64 %244, 4
  store i64 %247, i64* %PC, align 8
  %248 = inttoptr i64 %246 to i64*
  %249 = load i64, i64* %248, align 8
  store i64 %249, i64* %RAX, align 8, !tbaa !2428
  store i64 %249, i64* %PC, align 8, !tbaa !2428
  switch i64 %249, label %308 [
    i64 4195924, label %block_400654
    i64 4196224, label %block_400780
    i64 4196274, label %block_4007b2
    i64 4197124, label %block_400b04
    i64 4195974, label %block_400686
    i64 4196874, label %block_400a0a
    i64 4196624, label %block_400910
    i64 4196374, label %block_400816
    i64 4196124, label %block_40071c
    i64 4197074, label %block_400ad2
    i64 4196574, label %block_4008de
    i64 4196324, label %block_4007e4
    i64 4197224, label %block_400b68
    i64 4196074, label %block_4006ea
    i64 4196474, label %block_40087a
    i64 4196824, label %block_4009d8
    i64 4195724, label %block_40058c
    i64 4196724, label %block_400974
    i64 4196424, label %block_400848
    i64 4195824, label %block_4005f0
    i64 4196674, label %block_400942
    i64 4196174, label %block_40074e
    i64 4196974, label %block_400a6e
    i64 4195705, label %block_400579
    i64 4196924, label %block_400a3c
    i64 4195774, label %block_4005be
    i64 4197174, label %block_400b36
    i64 4196024, label %block_4006b8
    i64 4196524, label %block_4008ac
    i64 4196774, label %block_4009a6
    i64 4195874, label %block_400622
    i64 4197024, label %block_400aa0
  ]

block_400622:                                     ; preds = %block_400586
  %250 = add i64 %245, -12
  store i64 4195881, i64* %PC, align 8
  %251 = inttoptr i64 %250 to i32*
  store i32 4, i32* %251, align 4
  %252 = load i64, i64* %RBP, align 8
  %253 = add i64 %252, -12
  %254 = load i64, i64* %PC, align 8
  %255 = add i64 %254, 3
  store i64 %255, i64* %PC, align 8
  %256 = inttoptr i64 %253 to i32*
  %257 = load i32, i32* %256, align 4
  %258 = zext i32 %257 to i64
  store i64 %258, i64* %RDI, align 8, !tbaa !2428
  %259 = add i64 %254, -281
  br label %block_400586.backedge

block_400aa0:                                     ; preds = %block_400586
  %260 = add i64 %245, -12
  store i64 4197031, i64* %PC, align 8
  %261 = inttoptr i64 %260 to i32*
  store i32 27, i32* %261, align 4
  %.pre = load i64, i64* %PC, align 8
  br label %block_400aa7

block_40071c:                                     ; preds = %block_400586
  %262 = add i64 %245, -12
  store i64 4196131, i64* %PC, align 8
  %263 = inttoptr i64 %262 to i32*
  store i32 9, i32* %263, align 4
  %264 = load i64, i64* %PC, align 8
  %265 = tail call %struct.Memory* @sub_400723(%struct.State* nonnull %0, i64 %264, %struct.Memory* %2)
  ret %struct.Memory* %265

block_400816:                                     ; preds = %block_400586
  %266 = add i64 %245, -12
  store i64 4196381, i64* %PC, align 8
  %267 = inttoptr i64 %266 to i32*
  store i32 14, i32* %267, align 4
  %268 = load i64, i64* %PC, align 8
  %269 = tail call %struct.Memory* @sub_40081d(%struct.State* nonnull %0, i64 %268, %struct.Memory* %2)
  ret %struct.Memory* %269

block_400910:                                     ; preds = %block_400586
  %270 = add i64 %245, -12
  store i64 4196631, i64* %PC, align 8
  %271 = inttoptr i64 %270 to i32*
  store i32 19, i32* %271, align 4
  %272 = load i64, i64* %PC, align 8
  %273 = tail call %struct.Memory* @sub_400917(%struct.State* nonnull %0, i64 %272, %struct.Memory* %2)
  ret %struct.Memory* %273

block_40058c:                                     ; preds = %block_400586
  %274 = add i64 %245, -12
  store i64 4195731, i64* %PC, align 8
  %275 = inttoptr i64 %274 to i32*
  store i32 1, i32* %275, align 4
  %276 = load i64, i64* %PC, align 8
  %277 = tail call %struct.Memory* @sub_400593(%struct.State* nonnull %0, i64 %276, %struct.Memory* %2)
  ret %struct.Memory* %277

block_400a0a:                                     ; preds = %block_400586
  %278 = add i64 %245, -12
  store i64 4196881, i64* %PC, align 8
  %279 = inttoptr i64 %278 to i32*
  store i32 24, i32* %279, align 4
  %280 = load i64, i64* %PC, align 8
  %281 = tail call %struct.Memory* @sub_400a11(%struct.State* nonnull %0, i64 %280, %struct.Memory* %2)
  ret %struct.Memory* %281

block_400686:                                     ; preds = %block_400586
  %282 = add i64 %245, -12
  store i64 4195981, i64* %PC, align 8
  %283 = inttoptr i64 %282 to i32*
  store i32 6, i32* %283, align 4
  %284 = load i64, i64* %PC, align 8
  %285 = tail call %struct.Memory* @sub_40068d(%struct.State* nonnull %0, i64 %284, %struct.Memory* %2)
  ret %struct.Memory* %285

block_400b04:                                     ; preds = %block_400586
  %286 = add i64 %245, -12
  store i64 4197131, i64* %PC, align 8
  %287 = inttoptr i64 %286 to i32*
  store i32 29, i32* %287, align 4
  %288 = load i64, i64* %PC, align 8
  %289 = tail call %struct.Memory* @sub_400b0b(%struct.State* nonnull %0, i64 %288, %struct.Memory* %2)
  ret %struct.Memory* %289

block_4007b2:                                     ; preds = %block_400586
  %290 = add i64 %245, -12
  store i64 4196281, i64* %PC, align 8
  %291 = inttoptr i64 %290 to i32*
  store i32 12, i32* %291, align 4
  %292 = load i64, i64* %RBP, align 8
  %293 = add i64 %292, -12
  %294 = load i64, i64* %PC, align 8
  %295 = add i64 %294, 3
  store i64 %295, i64* %PC, align 8
  %296 = inttoptr i64 %293 to i32*
  %297 = load i32, i32* %296, align 4
  %298 = zext i32 %297 to i64
  store i64 %298, i64* %RDI, align 8, !tbaa !2428
  %299 = add i64 %294, -681
  br label %block_400586.backedge

block_400780:                                     ; preds = %block_400586
  %300 = add i64 %245, -12
  store i64 4196231, i64* %PC, align 8
  %301 = inttoptr i64 %300 to i32*
  store i32 11, i32* %301, align 4
  %302 = load i64, i64* %PC, align 8
  %303 = tail call %struct.Memory* @sub_400787(%struct.State* nonnull %0, i64 %302, %struct.Memory* %2)
  ret %struct.Memory* %303

block_400654:                                     ; preds = %block_400586
  %304 = add i64 %245, -12
  store i64 4195931, i64* %PC, align 8
  %305 = inttoptr i64 %304 to i32*
  store i32 5, i32* %305, align 4
  %306 = load i64, i64* %PC, align 8
  %307 = tail call %struct.Memory* @sub_40065b(%struct.State* nonnull %0, i64 %306, %struct.Memory* %2)
  ret %struct.Memory* %307

; <label>:308:                                    ; preds = %block_400586
  %309 = tail call %struct.Memory* @__remill_jump(%struct.State* nonnull %0, i64 %249, %struct.Memory* %2)
  ret %struct.Memory* %309
}

; Function Attrs: noinline nounwind
define %struct.Memory* @sub_400510_execute(%struct.State* noalias nocapture dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr #6 {
block_400510:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0
  %EDI = bitcast %union.anon* %3 to i32*
  %RDI = getelementptr inbounds %union.anon, %union.anon* %3, i64 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %1, 1
  store i64 %5, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8, !tbaa !2428
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %4, i64* %9, align 8
  store i64 %8, i64* %6, align 8, !tbaa !2428
  %10 = load i64, i64* %PC, align 8
  store i64 %8, i64* %RBP, align 8, !tbaa !2428
  %11 = add i64 %7, -12
  %12 = load i32, i32* %EDI, align 4
  %13 = add i64 %10, 6
  store i64 %13, i64* %PC, align 8
  %14 = inttoptr i64 %11 to i32*
  store i32 %12, i32* %14, align 4
  %15 = load i64, i64* %RBP, align 8
  %16 = add i64 %15, -4
  %17 = load i64, i64* %PC, align 8
  %18 = add i64 %17, 3
  store i64 %18, i64* %PC, align 8
  %19 = inttoptr i64 %16 to i32*
  %20 = load i32, i32* %19, align 4
  %21 = load i32, i32* bitcast (%sum_type* @sum to i32*), align 8
  %22 = add i32 %21, %20
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RDI, align 8, !tbaa !2428
  %24 = icmp ult i32 %22, %20
  %25 = icmp ult i32 %22, %21
  %26 = or i1 %24, %25
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %27, i8* %28, align 1, !tbaa !2432
  %29 = and i32 %22, 255
  %30 = tail call i32 @llvm.ctpop.i32(i32 %29) #9
  %31 = trunc i32 %30 to i8
  %32 = and i8 %31, 1
  %33 = xor i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %33, i8* %34, align 1, !tbaa !2446
  %35 = xor i32 %21, %20
  %36 = xor i32 %35, %22
  %37 = lshr i32 %36, 4
  %38 = trunc i32 %37 to i8
  %39 = and i8 %38, 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %39, i8* %40, align 1, !tbaa !2447
  %41 = icmp eq i32 %22, 0
  %42 = zext i1 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %42, i8* %43, align 1, !tbaa !2448
  %44 = lshr i32 %22, 31
  %45 = trunc i32 %44 to i8
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %45, i8* %46, align 1, !tbaa !2449
  %47 = lshr i32 %20, 31
  %48 = lshr i32 %21, 31
  %49 = xor i32 %44, %47
  %50 = xor i32 %44, %48
  %51 = add nuw nsw i32 %49, %50
  %52 = icmp eq i32 %51, 2
  %53 = zext i1 %52 to i8
  %54 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %53, i8* %54, align 1, !tbaa !2450
  store i32 %22, i32* bitcast (%sum_type* @sum to i32*), align 8
  %55 = add i64 %17, 18
  store i64 %55, i64* %PC, align 8
  %56 = load i64, i64* %6, align 8, !tbaa !2428
  %57 = add i64 %56, 8
  %58 = inttoptr i64 %56 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %RBP, align 8, !tbaa !2428
  store i64 %57, i64* %6, align 8, !tbaa !2428
  %60 = add i64 %17, 19
  store i64 %60, i64* %PC, align 8
  %61 = inttoptr i64 %57 to i64*
  %62 = load i64, i64* %61, align 8
  store i64 %62, i64* %PC, align 8, !tbaa !2428
  %63 = add i64 %56, 16
  store i64 %63, i64* %6, align 8, !tbaa !2428
  ret %struct.Memory* %2
}

; Function Attrs: noinline nounwind
define %struct.Memory* @sub_400593(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) local_unnamed_addr #6 {
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %PC, align 8
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RSP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %10 = bitcast i64* %RAX to i32**
  br label %block_400593

block_40087a:                                     ; preds = %block_400586
  %11 = add i64 %266, -12
  store i64 4196481, i64* %PC, align 8
  %12 = inttoptr i64 %11 to i32*
  store i32 16, i32* %12, align 4
  %13 = load i64, i64* %PC, align 8
  %14 = tail call %struct.Memory* @sub_400881(%struct.State* nonnull %0, i64 %13, %struct.Memory* %2)
  ret %struct.Memory* %14

block_400974:                                     ; preds = %block_400586
  %15 = add i64 %266, -12
  store i64 4196731, i64* %PC, align 8
  %16 = inttoptr i64 %15 to i32*
  store i32 21, i32* %16, align 4
  %17 = load i64, i64* %RBP, align 8
  %18 = add i64 %17, -12
  %19 = load i64, i64* %PC, align 8
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC, align 8
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RDI, align 8, !tbaa !2428
  %24 = add i64 %19, -1131
  br label %block_400586.backedge

block_400586.backedge:                            ; preds = %block_400974, %block_400a6e, %block_4006ea, %block_400b68, %block_4007e4, %block_4008de, %block_4009d8, %block_400654, %block_400ad2, %block_40074e, %block_4005f0, %block_4006b8, %block_400b36, %block_4007b2, %block_4008ac, %block_400622, %block_400aa0, %block_40071c, %block_400816, %block_400910, %block_4009a6
  %.sink162 = phi i64 [ %19, %block_400974 ], [ %34, %block_400a6e ], [ %44, %block_4006ea ], [ %54, %block_400b68 ], [ %64, %block_4007e4 ], [ %74, %block_4008de ], [ %84, %block_4009d8 ], [ %94, %block_400654 ], [ %104, %block_400ad2 ], [ %114, %block_40074e ], [ %136, %block_4005f0 ], [ %150, %block_4006b8 ], [ %160, %block_400b36 ], [ %205, %block_4007b2 ], [ %215, %block_4008ac ], [ %275, %block_400622 ], [ %285, %block_400aa0 ], [ %295, %block_40071c ], [ %305, %block_400816 ], [ %328, %block_400910 ], [ %356, %block_4009a6 ]
  %.sink157 = phi i64 [ %24, %block_400974 ], [ %39, %block_400a6e ], [ %49, %block_4006ea ], [ %59, %block_400b68 ], [ %69, %block_4007e4 ], [ %79, %block_4008de ], [ %89, %block_4009d8 ], [ %99, %block_400654 ], [ %109, %block_400ad2 ], [ %119, %block_40074e ], [ %141, %block_4005f0 ], [ %155, %block_4006b8 ], [ %165, %block_400b36 ], [ %210, %block_4007b2 ], [ %220, %block_4008ac ], [ %280, %block_400622 ], [ %290, %block_400aa0 ], [ %300, %block_40071c ], [ %310, %block_400816 ], [ %333, %block_400910 ], [ %361, %block_4009a6 ]
  %.sink5.be = phi i64 [ 1051, %block_400974 ], [ 1301, %block_400a6e ], [ 401, %block_4006ea ], [ 1551, %block_400b68 ], [ 651, %block_4007e4 ], [ 901, %block_4008de ], [ 1151, %block_4009d8 ], [ 251, %block_400654 ], [ 1401, %block_400ad2 ], [ 501, %block_40074e ], [ 151, %block_4005f0 ], [ 351, %block_4006b8 ], [ 1501, %block_400b36 ], [ 601, %block_4007b2 ], [ 851, %block_4008ac ], [ 201, %block_400622 ], [ 1351, %block_400aa0 ], [ 451, %block_40071c ], [ 701, %block_400816 ], [ 951, %block_400910 ], [ 1101, %block_4009a6 ]
  %25 = add i64 %.sink162, 8
  %26 = load i64, i64* %RSP, align 8, !tbaa !2428
  %27 = add i64 %26, -8
  %28 = inttoptr i64 %27 to i64*
  store i64 %25, i64* %28, align 8
  store i64 %27, i64* %RSP, align 8, !tbaa !2428
  store i64 %.sink157, i64* %PC, align 8, !tbaa !2428
  %29 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %.sink157, %struct.Memory* %2)
  br label %block_400586

block_400a6e:                                     ; preds = %block_400586
  %30 = add i64 %266, -12
  store i64 4196981, i64* %PC, align 8
  %31 = inttoptr i64 %30 to i32*
  store i32 26, i32* %31, align 4
  %32 = load i64, i64* %RBP, align 8
  %33 = add i64 %32, -12
  %34 = load i64, i64* %PC, align 8
  %35 = add i64 %34, 3
  store i64 %35, i64* %PC, align 8
  %36 = inttoptr i64 %33 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i64
  store i64 %38, i64* %RDI, align 8, !tbaa !2428
  %39 = add i64 %34, -1381
  br label %block_400586.backedge

block_4006ea:                                     ; preds = %block_400586
  %40 = add i64 %266, -12
  store i64 4196081, i64* %PC, align 8
  %41 = inttoptr i64 %40 to i32*
  store i32 8, i32* %41, align 4
  %42 = load i64, i64* %RBP, align 8
  %43 = add i64 %42, -12
  %44 = load i64, i64* %PC, align 8
  %45 = add i64 %44, 3
  store i64 %45, i64* %PC, align 8
  %46 = inttoptr i64 %43 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = zext i32 %47 to i64
  store i64 %48, i64* %RDI, align 8, !tbaa !2428
  %49 = add i64 %44, -481
  br label %block_400586.backedge

block_400b68:                                     ; preds = %block_400586
  %50 = add i64 %266, -12
  store i64 4197231, i64* %PC, align 8
  %51 = inttoptr i64 %50 to i32*
  store i32 31, i32* %51, align 4
  %52 = load i64, i64* %RBP, align 8
  %53 = add i64 %52, -12
  %54 = load i64, i64* %PC, align 8
  %55 = add i64 %54, 3
  store i64 %55, i64* %PC, align 8
  %56 = inttoptr i64 %53 to i32*
  %57 = load i32, i32* %56, align 4
  %58 = zext i32 %57 to i64
  store i64 %58, i64* %RDI, align 8, !tbaa !2428
  %59 = add i64 %54, -1631
  br label %block_400586.backedge

block_4007e4:                                     ; preds = %block_400586
  %60 = add i64 %266, -12
  store i64 4196331, i64* %PC, align 8
  %61 = inttoptr i64 %60 to i32*
  store i32 13, i32* %61, align 4
  %62 = load i64, i64* %RBP, align 8
  %63 = add i64 %62, -12
  %64 = load i64, i64* %PC, align 8
  %65 = add i64 %64, 3
  store i64 %65, i64* %PC, align 8
  %66 = inttoptr i64 %63 to i32*
  %67 = load i32, i32* %66, align 4
  %68 = zext i32 %67 to i64
  store i64 %68, i64* %RDI, align 8, !tbaa !2428
  %69 = add i64 %64, -731
  br label %block_400586.backedge

block_4008de:                                     ; preds = %block_400586
  %70 = add i64 %266, -12
  store i64 4196581, i64* %PC, align 8
  %71 = inttoptr i64 %70 to i32*
  store i32 18, i32* %71, align 4
  %72 = load i64, i64* %RBP, align 8
  %73 = add i64 %72, -12
  %74 = load i64, i64* %PC, align 8
  %75 = add i64 %74, 3
  store i64 %75, i64* %PC, align 8
  %76 = inttoptr i64 %73 to i32*
  %77 = load i32, i32* %76, align 4
  %78 = zext i32 %77 to i64
  store i64 %78, i64* %RDI, align 8, !tbaa !2428
  %79 = add i64 %74, -981
  br label %block_400586.backedge

block_4009d8:                                     ; preds = %block_400586
  %80 = add i64 %266, -12
  store i64 4196831, i64* %PC, align 8
  %81 = inttoptr i64 %80 to i32*
  store i32 23, i32* %81, align 4
  %82 = load i64, i64* %RBP, align 8
  %83 = add i64 %82, -12
  %84 = load i64, i64* %PC, align 8
  %85 = add i64 %84, 3
  store i64 %85, i64* %PC, align 8
  %86 = inttoptr i64 %83 to i32*
  %87 = load i32, i32* %86, align 4
  %88 = zext i32 %87 to i64
  store i64 %88, i64* %RDI, align 8, !tbaa !2428
  %89 = add i64 %84, -1231
  br label %block_400586.backedge

block_400654:                                     ; preds = %block_400586
  %90 = add i64 %266, -12
  store i64 4195931, i64* %PC, align 8
  %91 = inttoptr i64 %90 to i32*
  store i32 5, i32* %91, align 4
  %92 = load i64, i64* %RBP, align 8
  %93 = add i64 %92, -12
  %94 = load i64, i64* %PC, align 8
  %95 = add i64 %94, 3
  store i64 %95, i64* %PC, align 8
  %96 = inttoptr i64 %93 to i32*
  %97 = load i32, i32* %96, align 4
  %98 = zext i32 %97 to i64
  store i64 %98, i64* %RDI, align 8, !tbaa !2428
  %99 = add i64 %94, -331
  br label %block_400586.backedge

block_400ad2:                                     ; preds = %block_400586
  %100 = add i64 %266, -12
  store i64 4197081, i64* %PC, align 8
  %101 = inttoptr i64 %100 to i32*
  store i32 28, i32* %101, align 4
  %102 = load i64, i64* %RBP, align 8
  %103 = add i64 %102, -12
  %104 = load i64, i64* %PC, align 8
  %105 = add i64 %104, 3
  store i64 %105, i64* %PC, align 8
  %106 = inttoptr i64 %103 to i32*
  %107 = load i32, i32* %106, align 4
  %108 = zext i32 %107 to i64
  store i64 %108, i64* %RDI, align 8, !tbaa !2428
  %109 = add i64 %104, -1481
  br label %block_400586.backedge

block_40074e:                                     ; preds = %block_400586
  %110 = add i64 %266, -12
  store i64 4196181, i64* %PC, align 8
  %111 = inttoptr i64 %110 to i32*
  store i32 10, i32* %111, align 4
  %112 = load i64, i64* %RBP, align 8
  %113 = add i64 %112, -12
  %114 = load i64, i64* %PC, align 8
  %115 = add i64 %114, 3
  store i64 %115, i64* %PC, align 8
  %116 = inttoptr i64 %113 to i32*
  %117 = load i32, i32* %116, align 4
  %118 = zext i32 %117 to i64
  store i64 %118, i64* %RDI, align 8, !tbaa !2428
  %119 = add i64 %114, -581
  br label %block_400586.backedge

block_400848:                                     ; preds = %block_400586
  %120 = add i64 %266, -12
  store i64 4196431, i64* %PC, align 8
  %121 = inttoptr i64 %120 to i32*
  store i32 15, i32* %121, align 4
  %122 = load i64, i64* %PC, align 8
  %123 = tail call %struct.Memory* @sub_40084f(%struct.State* nonnull %0, i64 %122, %struct.Memory* %2)
  ret %struct.Memory* %123

block_400942:                                     ; preds = %block_400586
  %124 = add i64 %266, -12
  store i64 4196681, i64* %PC, align 8
  %125 = inttoptr i64 %124 to i32*
  store i32 20, i32* %125, align 4
  %126 = load i64, i64* %PC, align 8
  %127 = tail call %struct.Memory* @sub_400949(%struct.State* nonnull %0, i64 %126, %struct.Memory* %2)
  ret %struct.Memory* %127

block_4005be:                                     ; preds = %block_400586
  %128 = add i64 %266, -12
  store i64 4195781, i64* %PC, align 8
  %129 = inttoptr i64 %128 to i32*
  store i32 2, i32* %129, align 4
  %130 = load i64, i64* %PC, align 8
  %131 = tail call %struct.Memory* @sub_4005c5(%struct.State* nonnull %0, i64 %130, %struct.Memory* %2)
  ret %struct.Memory* %131

block_4005f0:                                     ; preds = %block_400586
  %132 = add i64 %266, -12
  store i64 4195831, i64* %PC, align 8
  %133 = inttoptr i64 %132 to i32*
  store i32 3, i32* %133, align 4
  %134 = load i64, i64* %RBP, align 8
  %135 = add i64 %134, -12
  %136 = load i64, i64* %PC, align 8
  %137 = add i64 %136, 3
  store i64 %137, i64* %PC, align 8
  %138 = inttoptr i64 %135 to i32*
  %139 = load i32, i32* %138, align 4
  %140 = zext i32 %139 to i64
  store i64 %140, i64* %RDI, align 8, !tbaa !2428
  %141 = add i64 %136, -231
  br label %block_400586.backedge

block_400a3c:                                     ; preds = %block_400586
  %142 = add i64 %266, -12
  store i64 4196931, i64* %PC, align 8
  %143 = inttoptr i64 %142 to i32*
  store i32 25, i32* %143, align 4
  %144 = load i64, i64* %PC, align 8
  %145 = tail call %struct.Memory* @sub_400a43(%struct.State* nonnull %0, i64 %144, %struct.Memory* %2)
  ret %struct.Memory* %145

block_4006b8:                                     ; preds = %block_400586
  %146 = add i64 %266, -12
  store i64 4196031, i64* %PC, align 8
  %147 = inttoptr i64 %146 to i32*
  store i32 7, i32* %147, align 4
  %148 = load i64, i64* %RBP, align 8
  %149 = add i64 %148, -12
  %150 = load i64, i64* %PC, align 8
  %151 = add i64 %150, 3
  store i64 %151, i64* %PC, align 8
  %152 = inttoptr i64 %149 to i32*
  %153 = load i32, i32* %152, align 4
  %154 = zext i32 %153 to i64
  store i64 %154, i64* %RDI, align 8, !tbaa !2428
  %155 = add i64 %150, -431
  br label %block_400586.backedge

block_400b36:                                     ; preds = %block_400586
  %156 = add i64 %266, -12
  store i64 4197181, i64* %PC, align 8
  %157 = inttoptr i64 %156 to i32*
  store i32 30, i32* %157, align 4
  %158 = load i64, i64* %RBP, align 8
  %159 = add i64 %158, -12
  %160 = load i64, i64* %PC, align 8
  %161 = add i64 %160, 3
  store i64 %161, i64* %PC, align 8
  %162 = inttoptr i64 %159 to i32*
  %163 = load i32, i32* %162, align 4
  %164 = zext i32 %163 to i64
  store i64 %164, i64* %RDI, align 8, !tbaa !2428
  %165 = add i64 %160, -1581
  br label %block_400586.backedge

block_400579:                                     ; preds = %block_400586
  %166 = add i64 %266, -12
  store i64 4195712, i64* %PC, align 8
  %167 = inttoptr i64 %166 to i32*
  store i32 0, i32* %167, align 4
  %168 = load i64, i64* %RSP, align 8
  %169 = load i64, i64* %PC, align 8
  %170 = add i64 %168, 48
  store i64 %170, i64* %RSP, align 8, !tbaa !2428
  %171 = icmp ugt i64 %168, -49
  %172 = zext i1 %171 to i8
  store i8 %172, i8* %4, align 1, !tbaa !2432
  %173 = trunc i64 %170 to i32
  %174 = and i32 %173, 255
  %175 = tail call i32 @llvm.ctpop.i32(i32 %174) #9
  %176 = trunc i32 %175 to i8
  %177 = and i8 %176, 1
  %178 = xor i8 %177, 1
  store i8 %178, i8* %5, align 1, !tbaa !2446
  %179 = xor i64 %168, 16
  %180 = xor i64 %179, %170
  %181 = lshr i64 %180, 4
  %182 = trunc i64 %181 to i8
  %183 = and i8 %182, 1
  store i8 %183, i8* %6, align 1, !tbaa !2447
  %184 = icmp eq i64 %170, 0
  %185 = zext i1 %184 to i8
  store i8 %185, i8* %7, align 1, !tbaa !2448
  %186 = lshr i64 %170, 63
  %187 = trunc i64 %186 to i8
  store i8 %187, i8* %8, align 1, !tbaa !2449
  %188 = lshr i64 %168, 63
  %189 = xor i64 %186, %188
  %190 = add nuw nsw i64 %189, %186
  %191 = icmp eq i64 %190, 2
  %192 = zext i1 %191 to i8
  store i8 %192, i8* %9, align 1, !tbaa !2450
  %193 = add i64 %169, 5
  store i64 %193, i64* %PC, align 8
  %194 = add i64 %168, 56
  %195 = inttoptr i64 %170 to i64*
  %196 = load i64, i64* %195, align 8
  store i64 %196, i64* %RBP, align 8, !tbaa !2428
  store i64 %194, i64* %RSP, align 8, !tbaa !2428
  %197 = add i64 %169, 6
  store i64 %197, i64* %PC, align 8
  %198 = inttoptr i64 %194 to i64*
  %199 = load i64, i64* %198, align 8
  store i64 %199, i64* %PC, align 8, !tbaa !2428
  %200 = add i64 %168, 64
  store i64 %200, i64* %RSP, align 8, !tbaa !2428
  ret %struct.Memory* %2

block_4007b2:                                     ; preds = %block_400586
  %201 = add i64 %266, -12
  store i64 4196281, i64* %PC, align 8
  %202 = inttoptr i64 %201 to i32*
  store i32 12, i32* %202, align 4
  %203 = load i64, i64* %RBP, align 8
  %204 = add i64 %203, -12
  %205 = load i64, i64* %PC, align 8
  %206 = add i64 %205, 3
  store i64 %206, i64* %PC, align 8
  %207 = inttoptr i64 %204 to i32*
  %208 = load i32, i32* %207, align 4
  %209 = zext i32 %208 to i64
  store i64 %209, i64* %RDI, align 8, !tbaa !2428
  %210 = add i64 %205, -681
  br label %block_400586.backedge

block_4008ac:                                     ; preds = %block_400586
  %211 = add i64 %266, -12
  store i64 4196531, i64* %PC, align 8
  %212 = inttoptr i64 %211 to i32*
  store i32 17, i32* %212, align 4
  %213 = load i64, i64* %RBP, align 8
  %214 = add i64 %213, -12
  %215 = load i64, i64* %PC, align 8
  %216 = add i64 %215, 3
  store i64 %216, i64* %PC, align 8
  %217 = inttoptr i64 %214 to i32*
  %218 = load i32, i32* %217, align 4
  %219 = zext i32 %218 to i64
  store i64 %219, i64* %RDI, align 8, !tbaa !2428
  %220 = add i64 %215, -931
  br label %block_400586.backedge

block_400586:                                     ; preds = %block_400586.backedge, %block_400593
  %.sink5 = phi i64 [ 51, %block_400593 ], [ %.sink5.be, %block_400586.backedge ]
  %221 = load i64, i64* %RBP, align 8
  %222 = add i64 %221, -8
  %223 = load i64, i64* %PC, align 8
  %224 = add i64 %223, 4
  store i64 %224, i64* %PC, align 8
  %225 = inttoptr i64 %222 to i64*
  %226 = load i64, i64* %225, align 8
  store i64 %226, i64* %RAX, align 8, !tbaa !2428
  %227 = add i64 %226, 4
  store i64 %227, i64* %RCX, align 8, !tbaa !2428
  %228 = icmp ugt i64 %226, -5
  %229 = zext i1 %228 to i8
  store i8 %229, i8* %4, align 1, !tbaa !2432
  %230 = trunc i64 %227 to i32
  %231 = and i32 %230, 255
  %232 = tail call i32 @llvm.ctpop.i32(i32 %231) #9
  %233 = trunc i32 %232 to i8
  %234 = and i8 %233, 1
  %235 = xor i8 %234, 1
  store i8 %235, i8* %5, align 1, !tbaa !2446
  %236 = xor i64 %227, %226
  %237 = lshr i64 %236, 4
  %238 = trunc i64 %237 to i8
  %239 = and i8 %238, 1
  store i8 %239, i8* %6, align 1, !tbaa !2447
  %240 = icmp eq i64 %227, 0
  %241 = zext i1 %240 to i8
  store i8 %241, i8* %7, align 1, !tbaa !2448
  %242 = lshr i64 %227, 63
  %243 = trunc i64 %242 to i8
  store i8 %243, i8* %8, align 1, !tbaa !2449
  %244 = lshr i64 %226, 63
  %245 = xor i64 %242, %244
  %246 = add nuw nsw i64 %245, %242
  %247 = icmp eq i64 %246, 2
  %248 = zext i1 %247 to i8
  store i8 %248, i8* %9, align 1, !tbaa !2450
  %249 = add i64 %223, 15
  store i64 %249, i64* %PC, align 8
  store i64 %227, i64* %225, align 8
  %250 = load i32*, i32** %10, align 8
  %251 = load i64, i64* %PC, align 8
  %252 = add i64 %251, 3
  store i64 %252, i64* %PC, align 8
  %253 = load i32, i32* %250, align 4
  %254 = sext i32 %253 to i64
  store i64 %254, i64* %RAX, align 8, !tbaa !2428
  %255 = shl nsw i64 %254, 3
  %256 = add i64 %255, add (i64 ptrtoint (%seg_602020__data_type* @seg_602020__data to i64), i64 16)
  %257 = add i64 %251, 11
  store i64 %257, i64* %PC, align 8
  %258 = inttoptr i64 %256 to i64*
  %259 = load i64, i64* %258, align 8
  store i64 %259, i64* %RAX, align 8, !tbaa !2428
  %260 = load i64, i64* %RBP, align 8
  %261 = add i64 %260, -40
  %262 = add i64 %251, 15
  store i64 %262, i64* %PC, align 8
  %263 = inttoptr i64 %261 to i64*
  store i64 %259, i64* %263, align 8
  %264 = load i64, i64* %PC, align 8
  %265 = sub i64 %264, %.sink5
  %266 = load i64, i64* %RBP, align 8
  %267 = add i64 %266, -40
  %268 = add i64 %265, 4
  store i64 %268, i64* %PC, align 8
  %269 = inttoptr i64 %267 to i64*
  %270 = load i64, i64* %269, align 8
  store i64 %270, i64* %RAX, align 8, !tbaa !2428
  store i64 %270, i64* %PC, align 8, !tbaa !2428
  switch i64 %270, label %362 [
    i64 4196774, label %block_4009a6
    i64 4196224, label %block_400780
    i64 4197124, label %block_400b04
    i64 4195974, label %block_400686
    i64 4196874, label %block_400a0a
    i64 4196624, label %block_400910
    i64 4196374, label %block_400816
    i64 4196124, label %block_40071c
    i64 4197024, label %block_400aa0
    i64 4197074, label %block_400ad2
    i64 4195924, label %block_400654
    i64 4196574, label %block_4008de
    i64 4196324, label %block_4007e4
    i64 4197224, label %block_400b68
    i64 4196074, label %block_4006ea
    i64 4196474, label %block_40087a
    i64 4196824, label %block_4009d8
    i64 4195724, label %block_40058c
    i64 4196724, label %block_400974
    i64 4195824, label %block_4005f0
    i64 4196174, label %block_40074e
    i64 4196424, label %block_400848
    i64 4196674, label %block_400942
    i64 4195774, label %block_4005be
    i64 4196924, label %block_400a3c
    i64 4196974, label %block_400a6e
    i64 4195705, label %block_400579
    i64 4196024, label %block_4006b8
    i64 4197174, label %block_400b36
    i64 4196274, label %block_4007b2
    i64 4196524, label %block_4008ac
    i64 4195874, label %block_400622
  ]

block_400622:                                     ; preds = %block_400586
  %271 = add i64 %266, -12
  store i64 4195881, i64* %PC, align 8
  %272 = inttoptr i64 %271 to i32*
  store i32 4, i32* %272, align 4
  %273 = load i64, i64* %RBP, align 8
  %274 = add i64 %273, -12
  %275 = load i64, i64* %PC, align 8
  %276 = add i64 %275, 3
  store i64 %276, i64* %PC, align 8
  %277 = inttoptr i64 %274 to i32*
  %278 = load i32, i32* %277, align 4
  %279 = zext i32 %278 to i64
  store i64 %279, i64* %RDI, align 8, !tbaa !2428
  %280 = add i64 %275, -281
  br label %block_400586.backedge

block_400aa0:                                     ; preds = %block_400586
  %281 = add i64 %266, -12
  store i64 4197031, i64* %PC, align 8
  %282 = inttoptr i64 %281 to i32*
  store i32 27, i32* %282, align 4
  %283 = load i64, i64* %RBP, align 8
  %284 = add i64 %283, -12
  %285 = load i64, i64* %PC, align 8
  %286 = add i64 %285, 3
  store i64 %286, i64* %PC, align 8
  %287 = inttoptr i64 %284 to i32*
  %288 = load i32, i32* %287, align 4
  %289 = zext i32 %288 to i64
  store i64 %289, i64* %RDI, align 8, !tbaa !2428
  %290 = add i64 %285, -1431
  br label %block_400586.backedge

block_40071c:                                     ; preds = %block_400586
  %291 = add i64 %266, -12
  store i64 4196131, i64* %PC, align 8
  %292 = inttoptr i64 %291 to i32*
  store i32 9, i32* %292, align 4
  %293 = load i64, i64* %RBP, align 8
  %294 = add i64 %293, -12
  %295 = load i64, i64* %PC, align 8
  %296 = add i64 %295, 3
  store i64 %296, i64* %PC, align 8
  %297 = inttoptr i64 %294 to i32*
  %298 = load i32, i32* %297, align 4
  %299 = zext i32 %298 to i64
  store i64 %299, i64* %RDI, align 8, !tbaa !2428
  %300 = add i64 %295, -531
  br label %block_400586.backedge

block_400816:                                     ; preds = %block_400586
  %301 = add i64 %266, -12
  store i64 4196381, i64* %PC, align 8
  %302 = inttoptr i64 %301 to i32*
  store i32 14, i32* %302, align 4
  %303 = load i64, i64* %RBP, align 8
  %304 = add i64 %303, -12
  %305 = load i64, i64* %PC, align 8
  %306 = add i64 %305, 3
  store i64 %306, i64* %PC, align 8
  %307 = inttoptr i64 %304 to i32*
  %308 = load i32, i32* %307, align 4
  %309 = zext i32 %308 to i64
  store i64 %309, i64* %RDI, align 8, !tbaa !2428
  %310 = add i64 %305, -781
  br label %block_400586.backedge

block_400593:                                     ; preds = %block_40058c, %3
  %311 = phi i64 [ %.pre, %block_40058c ], [ %1, %3 ]
  %312 = load i64, i64* %RBP, align 8
  %313 = add i64 %312, -12
  %314 = add i64 %311, 3
  store i64 %314, i64* %PC, align 8
  %315 = inttoptr i64 %313 to i32*
  %316 = load i32, i32* %315, align 4
  %317 = zext i32 %316 to i64
  store i64 %317, i64* %RDI, align 8, !tbaa !2428
  %318 = add i64 %311, -131
  %319 = add i64 %311, 8
  %320 = load i64, i64* %RSP, align 8, !tbaa !2428
  %321 = add i64 %320, -8
  %322 = inttoptr i64 %321 to i64*
  store i64 %319, i64* %322, align 8
  store i64 %321, i64* %RSP, align 8, !tbaa !2428
  store i64 %318, i64* %PC, align 8, !tbaa !2428
  %323 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %318, %struct.Memory* %2)
  br label %block_400586

block_400910:                                     ; preds = %block_400586
  %324 = add i64 %266, -12
  store i64 4196631, i64* %PC, align 8
  %325 = inttoptr i64 %324 to i32*
  store i32 19, i32* %325, align 4
  %326 = load i64, i64* %RBP, align 8
  %327 = add i64 %326, -12
  %328 = load i64, i64* %PC, align 8
  %329 = add i64 %328, 3
  store i64 %329, i64* %PC, align 8
  %330 = inttoptr i64 %327 to i32*
  %331 = load i32, i32* %330, align 4
  %332 = zext i32 %331 to i64
  store i64 %332, i64* %RDI, align 8, !tbaa !2428
  %333 = add i64 %328, -1031
  br label %block_400586.backedge

block_40058c:                                     ; preds = %block_400586
  %334 = add i64 %266, -12
  store i64 4195731, i64* %PC, align 8
  %335 = inttoptr i64 %334 to i32*
  store i32 1, i32* %335, align 4
  %.pre = load i64, i64* %PC, align 8
  br label %block_400593

block_400a0a:                                     ; preds = %block_400586
  %336 = add i64 %266, -12
  store i64 4196881, i64* %PC, align 8
  %337 = inttoptr i64 %336 to i32*
  store i32 24, i32* %337, align 4
  %338 = load i64, i64* %PC, align 8
  %339 = tail call %struct.Memory* @sub_400a11(%struct.State* nonnull %0, i64 %338, %struct.Memory* %2)
  ret %struct.Memory* %339

block_400686:                                     ; preds = %block_400586
  %340 = add i64 %266, -12
  store i64 4195981, i64* %PC, align 8
  %341 = inttoptr i64 %340 to i32*
  store i32 6, i32* %341, align 4
  %342 = load i64, i64* %PC, align 8
  %343 = tail call %struct.Memory* @sub_40068d(%struct.State* nonnull %0, i64 %342, %struct.Memory* %2)
  ret %struct.Memory* %343

block_400b04:                                     ; preds = %block_400586
  %344 = add i64 %266, -12
  store i64 4197131, i64* %PC, align 8
  %345 = inttoptr i64 %344 to i32*
  store i32 29, i32* %345, align 4
  %346 = load i64, i64* %PC, align 8
  %347 = tail call %struct.Memory* @sub_400b0b(%struct.State* nonnull %0, i64 %346, %struct.Memory* %2)
  ret %struct.Memory* %347

block_400780:                                     ; preds = %block_400586
  %348 = add i64 %266, -12
  store i64 4196231, i64* %PC, align 8
  %349 = inttoptr i64 %348 to i32*
  store i32 11, i32* %349, align 4
  %350 = load i64, i64* %PC, align 8
  %351 = tail call %struct.Memory* @sub_400787(%struct.State* nonnull %0, i64 %350, %struct.Memory* %2)
  ret %struct.Memory* %351

block_4009a6:                                     ; preds = %block_400586
  %352 = add i64 %266, -12
  store i64 4196781, i64* %PC, align 8
  %353 = inttoptr i64 %352 to i32*
  store i32 22, i32* %353, align 4
  %354 = load i64, i64* %RBP, align 8
  %355 = add i64 %354, -12
  %356 = load i64, i64* %PC, align 8
  %357 = add i64 %356, 3
  store i64 %357, i64* %PC, align 8
  %358 = inttoptr i64 %355 to i32*
  %359 = load i32, i32* %358, align 4
  %360 = zext i32 %359 to i64
  store i64 %360, i64* %RDI, align 8, !tbaa !2428
  %361 = add i64 %356, -1181
  br label %block_400586.backedge

; <label>:362:                                    ; preds = %block_400586
  %363 = tail call %struct.Memory* @__remill_jump(%struct.State* nonnull %0, i64 %270, %struct.Memory* %2)
  ret %struct.Memory* %363
}

; Function Attrs: noinline nounwind
define %struct.Memory* @sub_400420__start(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) local_unnamed_addr #6 {
block_400420:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RSP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %R8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 17, i32 0, i32 0
  %R9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0, i32 0
  store i64 0, i64* %RBP, align 8, !tbaa !2428
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3, align 1, !tbaa !2432
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 1, i8* %4, align 1, !tbaa !2446
  %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 1, i8* %5, align 1, !tbaa !2448
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %6, align 1, !tbaa !2449
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7, align 1, !tbaa !2450
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8, align 1, !tbaa !2447
  %9 = load i64, i64* %RDX, align 8
  store i64 %9, i64* %R9, align 8, !tbaa !2428
  %10 = add i64 %1, 6
  store i64 %10, i64* %PC, align 8
  %11 = load i64, i64* %RSP, align 8, !tbaa !2428
  %12 = add i64 %11, 8
  %13 = inttoptr i64 %11 to i64*
  %14 = load i64, i64* %13, align 8
  store i64 %14, i64* %RSI, align 8, !tbaa !2428
  store i64 %12, i64* %RDX, align 8, !tbaa !2428
  %15 = and i64 %12, -16
  store i8 0, i8* %3, align 1, !tbaa !2432
  %16 = trunc i64 %12 to i32
  %17 = and i32 %16, 240
  %18 = tail call i32 @llvm.ctpop.i32(i32 %17) #9
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  store i8 %21, i8* %4, align 1, !tbaa !2446
  %22 = icmp eq i64 %15, 0
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %5, align 1, !tbaa !2448
  %24 = lshr i64 %12, 63
  %25 = trunc i64 %24 to i8
  store i8 %25, i8* %6, align 1, !tbaa !2449
  store i8 0, i8* %7, align 1, !tbaa !2450
  store i8 0, i8* %8, align 1, !tbaa !2447
  %26 = load i64, i64* %RAX, align 8
  %27 = add i64 %1, 14
  store i64 %27, i64* %PC, align 8
  %28 = add i64 %15, -8
  %29 = inttoptr i64 %28 to i64*
  store i64 %26, i64* %29, align 8
  %30 = load i64, i64* %PC, align 8
  %31 = add i64 %30, 1
  store i64 %31, i64* %PC, align 8
  %32 = add i64 %15, -16
  %33 = inttoptr i64 %32 to i64*
  store i64 %28, i64* %33, align 16
  %34 = load i64, i64* %PC, align 8
  store i64 ptrtoint (void ()* @callback_sub_400cf0___libc_csu_fini to i64), i64* %R8, align 8, !tbaa !2428
  store i64 ptrtoint (void ()* @callback_sub_400c80___libc_csu_init to i64), i64* %RCX, align 8, !tbaa !2428
  store i64 ptrtoint (void ()* @main to i64), i64* %RDI, align 8, !tbaa !2428
  %35 = add i64 %34, 27
  %36 = add i64 %15, -24
  %37 = inttoptr i64 %36 to i64*
  store i64 %35, i64* %37, align 8
  store i64 %36, i64* %RSP, align 8, !tbaa !2428
  %38 = load i64, i64* getelementptr inbounds (%seg_601ff0__got_type, %seg_601ff0__got_type* @seg_601ff0__got, i64 0, i32 0), align 8
  store i64 %38, i64* %PC, align 8, !tbaa !2428
  %39 = tail call fastcc %struct.Memory* @ext_602150___libc_start_main(%struct.State* nonnull %0, %struct.Memory* %2)
  %40 = load i64, i64* %PC, align 8
  %41 = add i64 %40, 1
  store i64 %41, i64* %PC, align 8
  %42 = tail call %struct.Memory* @__remill_error(%struct.State* nonnull %0, i64 %41, %struct.Memory* %39)
  ret %struct.Memory* %42
}

; Function Attrs: noinline nounwind
define %struct.Memory* @sub_400881(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) local_unnamed_addr #6 {
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %PC, align 8
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RSP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %10 = bitcast i64* %RAX to i32**
  br label %block_400881

block_40087a:                                     ; preds = %block_400586
  %11 = add i64 %263, -12
  store i64 4196481, i64* %PC, align 8
  %12 = inttoptr i64 %11 to i32*
  store i32 16, i32* %12, align 4
  %.pre = load i64, i64* %PC, align 8
  br label %block_400881

block_400974:                                     ; preds = %block_400586
  %13 = add i64 %263, -12
  store i64 4196731, i64* %PC, align 8
  %14 = inttoptr i64 %13 to i32*
  store i32 21, i32* %14, align 4
  %15 = load i64, i64* %RBP, align 8
  %16 = add i64 %15, -12
  %17 = load i64, i64* %PC, align 8
  %18 = add i64 %17, 3
  store i64 %18, i64* %PC, align 8
  %19 = inttoptr i64 %16 to i32*
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDI, align 8, !tbaa !2428
  %22 = add i64 %17, -1131
  br label %block_400586.backedge

block_400586.backedge:                            ; preds = %block_400974, %block_400a6e, %block_4006ea, %block_400b68, %block_4007e4, %block_4009d8, %block_400ad2, %block_40074e, %block_400780, %block_400848, %block_4008de, %block_400942, %block_4005be, %block_400a3c, %block_4006b8, %block_400b36, %block_4007b2, %block_4008ac, %block_4005f0, %block_4009a6, %block_400622, %block_400aa0, %block_40071c, %block_400816, %block_400910, %block_40058c, %block_400654, %block_400a0a, %block_400686, %block_400b04
  %.sink90 = phi i64 [ %17, %block_400974 ], [ %32, %block_400a6e ], [ %42, %block_4006ea ], [ %52, %block_400b68 ], [ %62, %block_4007e4 ], [ %72, %block_4009d8 ], [ %82, %block_400ad2 ], [ %92, %block_40074e ], [ %102, %block_400780 ], [ %112, %block_400848 ], [ %122, %block_4008de ], [ %132, %block_400942 ], [ %142, %block_4005be ], [ %152, %block_400a3c ], [ %162, %block_4006b8 ], [ %172, %block_400b36 ], [ %182, %block_4007b2 ], [ %192, %block_4008ac ], [ %202, %block_4005f0 ], [ %212, %block_4009a6 ], [ %307, %block_400622 ], [ %317, %block_400aa0 ], [ %327, %block_40071c ], [ %337, %block_400816 ], [ %347, %block_400910 ], [ %357, %block_40058c ], [ %367, %block_400654 ], [ %377, %block_400a0a ], [ %387, %block_400686 ], [ %397, %block_400b04 ]
  %.sink85 = phi i64 [ %22, %block_400974 ], [ %37, %block_400a6e ], [ %47, %block_4006ea ], [ %57, %block_400b68 ], [ %67, %block_4007e4 ], [ %77, %block_4009d8 ], [ %87, %block_400ad2 ], [ %97, %block_40074e ], [ %107, %block_400780 ], [ %117, %block_400848 ], [ %127, %block_4008de ], [ %137, %block_400942 ], [ %147, %block_4005be ], [ %157, %block_400a3c ], [ %167, %block_4006b8 ], [ %177, %block_400b36 ], [ %187, %block_4007b2 ], [ %197, %block_4008ac ], [ %207, %block_4005f0 ], [ %217, %block_4009a6 ], [ %312, %block_400622 ], [ %322, %block_400aa0 ], [ %332, %block_40071c ], [ %342, %block_400816 ], [ %352, %block_400910 ], [ %362, %block_40058c ], [ %372, %block_400654 ], [ %382, %block_400a0a ], [ %392, %block_400686 ], [ %402, %block_400b04 ]
  %.sink5.be = phi i64 [ 1051, %block_400974 ], [ 1301, %block_400a6e ], [ 401, %block_4006ea ], [ 1551, %block_400b68 ], [ 651, %block_4007e4 ], [ 1151, %block_4009d8 ], [ 1401, %block_400ad2 ], [ 501, %block_40074e ], [ 551, %block_400780 ], [ 751, %block_400848 ], [ 901, %block_4008de ], [ 1001, %block_400942 ], [ 101, %block_4005be ], [ 1251, %block_400a3c ], [ 351, %block_4006b8 ], [ 1501, %block_400b36 ], [ 601, %block_4007b2 ], [ 851, %block_4008ac ], [ 151, %block_4005f0 ], [ 1101, %block_4009a6 ], [ 201, %block_400622 ], [ 1351, %block_400aa0 ], [ 451, %block_40071c ], [ 701, %block_400816 ], [ 951, %block_400910 ], [ 51, %block_40058c ], [ 251, %block_400654 ], [ 1201, %block_400a0a ], [ 301, %block_400686 ], [ 1451, %block_400b04 ]
  %23 = add i64 %.sink90, 8
  %24 = load i64, i64* %RSP, align 8, !tbaa !2428
  %25 = add i64 %24, -8
  %26 = inttoptr i64 %25 to i64*
  store i64 %23, i64* %26, align 8
  store i64 %25, i64* %RSP, align 8, !tbaa !2428
  store i64 %.sink85, i64* %PC, align 8, !tbaa !2428
  %27 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %.sink85, %struct.Memory* %2)
  br label %block_400586

block_400a6e:                                     ; preds = %block_400586
  %28 = add i64 %263, -12
  store i64 4196981, i64* %PC, align 8
  %29 = inttoptr i64 %28 to i32*
  store i32 26, i32* %29, align 4
  %30 = load i64, i64* %RBP, align 8
  %31 = add i64 %30, -12
  %32 = load i64, i64* %PC, align 8
  %33 = add i64 %32, 3
  store i64 %33, i64* %PC, align 8
  %34 = inttoptr i64 %31 to i32*
  %35 = load i32, i32* %34, align 4
  %36 = zext i32 %35 to i64
  store i64 %36, i64* %RDI, align 8, !tbaa !2428
  %37 = add i64 %32, -1381
  br label %block_400586.backedge

block_4006ea:                                     ; preds = %block_400586
  %38 = add i64 %263, -12
  store i64 4196081, i64* %PC, align 8
  %39 = inttoptr i64 %38 to i32*
  store i32 8, i32* %39, align 4
  %40 = load i64, i64* %RBP, align 8
  %41 = add i64 %40, -12
  %42 = load i64, i64* %PC, align 8
  %43 = add i64 %42, 3
  store i64 %43, i64* %PC, align 8
  %44 = inttoptr i64 %41 to i32*
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i64
  store i64 %46, i64* %RDI, align 8, !tbaa !2428
  %47 = add i64 %42, -481
  br label %block_400586.backedge

block_400b68:                                     ; preds = %block_400586
  %48 = add i64 %263, -12
  store i64 4197231, i64* %PC, align 8
  %49 = inttoptr i64 %48 to i32*
  store i32 31, i32* %49, align 4
  %50 = load i64, i64* %RBP, align 8
  %51 = add i64 %50, -12
  %52 = load i64, i64* %PC, align 8
  %53 = add i64 %52, 3
  store i64 %53, i64* %PC, align 8
  %54 = inttoptr i64 %51 to i32*
  %55 = load i32, i32* %54, align 4
  %56 = zext i32 %55 to i64
  store i64 %56, i64* %RDI, align 8, !tbaa !2428
  %57 = add i64 %52, -1631
  br label %block_400586.backedge

block_4007e4:                                     ; preds = %block_400586
  %58 = add i64 %263, -12
  store i64 4196331, i64* %PC, align 8
  %59 = inttoptr i64 %58 to i32*
  store i32 13, i32* %59, align 4
  %60 = load i64, i64* %RBP, align 8
  %61 = add i64 %60, -12
  %62 = load i64, i64* %PC, align 8
  %63 = add i64 %62, 3
  store i64 %63, i64* %PC, align 8
  %64 = inttoptr i64 %61 to i32*
  %65 = load i32, i32* %64, align 4
  %66 = zext i32 %65 to i64
  store i64 %66, i64* %RDI, align 8, !tbaa !2428
  %67 = add i64 %62, -731
  br label %block_400586.backedge

block_4009d8:                                     ; preds = %block_400586
  %68 = add i64 %263, -12
  store i64 4196831, i64* %PC, align 8
  %69 = inttoptr i64 %68 to i32*
  store i32 23, i32* %69, align 4
  %70 = load i64, i64* %RBP, align 8
  %71 = add i64 %70, -12
  %72 = load i64, i64* %PC, align 8
  %73 = add i64 %72, 3
  store i64 %73, i64* %PC, align 8
  %74 = inttoptr i64 %71 to i32*
  %75 = load i32, i32* %74, align 4
  %76 = zext i32 %75 to i64
  store i64 %76, i64* %RDI, align 8, !tbaa !2428
  %77 = add i64 %72, -1231
  br label %block_400586.backedge

block_400ad2:                                     ; preds = %block_400586
  %78 = add i64 %263, -12
  store i64 4197081, i64* %PC, align 8
  %79 = inttoptr i64 %78 to i32*
  store i32 28, i32* %79, align 4
  %80 = load i64, i64* %RBP, align 8
  %81 = add i64 %80, -12
  %82 = load i64, i64* %PC, align 8
  %83 = add i64 %82, 3
  store i64 %83, i64* %PC, align 8
  %84 = inttoptr i64 %81 to i32*
  %85 = load i32, i32* %84, align 4
  %86 = zext i32 %85 to i64
  store i64 %86, i64* %RDI, align 8, !tbaa !2428
  %87 = add i64 %82, -1481
  br label %block_400586.backedge

block_40074e:                                     ; preds = %block_400586
  %88 = add i64 %263, -12
  store i64 4196181, i64* %PC, align 8
  %89 = inttoptr i64 %88 to i32*
  store i32 10, i32* %89, align 4
  %90 = load i64, i64* %RBP, align 8
  %91 = add i64 %90, -12
  %92 = load i64, i64* %PC, align 8
  %93 = add i64 %92, 3
  store i64 %93, i64* %PC, align 8
  %94 = inttoptr i64 %91 to i32*
  %95 = load i32, i32* %94, align 4
  %96 = zext i32 %95 to i64
  store i64 %96, i64* %RDI, align 8, !tbaa !2428
  %97 = add i64 %92, -581
  br label %block_400586.backedge

block_400780:                                     ; preds = %block_400586
  %98 = add i64 %263, -12
  store i64 4196231, i64* %PC, align 8
  %99 = inttoptr i64 %98 to i32*
  store i32 11, i32* %99, align 4
  %100 = load i64, i64* %RBP, align 8
  %101 = add i64 %100, -12
  %102 = load i64, i64* %PC, align 8
  %103 = add i64 %102, 3
  store i64 %103, i64* %PC, align 8
  %104 = inttoptr i64 %101 to i32*
  %105 = load i32, i32* %104, align 4
  %106 = zext i32 %105 to i64
  store i64 %106, i64* %RDI, align 8, !tbaa !2428
  %107 = add i64 %102, -631
  br label %block_400586.backedge

block_400848:                                     ; preds = %block_400586
  %108 = add i64 %263, -12
  store i64 4196431, i64* %PC, align 8
  %109 = inttoptr i64 %108 to i32*
  store i32 15, i32* %109, align 4
  %110 = load i64, i64* %RBP, align 8
  %111 = add i64 %110, -12
  %112 = load i64, i64* %PC, align 8
  %113 = add i64 %112, 3
  store i64 %113, i64* %PC, align 8
  %114 = inttoptr i64 %111 to i32*
  %115 = load i32, i32* %114, align 4
  %116 = zext i32 %115 to i64
  store i64 %116, i64* %RDI, align 8, !tbaa !2428
  %117 = add i64 %112, -831
  br label %block_400586.backedge

block_4008de:                                     ; preds = %block_400586
  %118 = add i64 %263, -12
  store i64 4196581, i64* %PC, align 8
  %119 = inttoptr i64 %118 to i32*
  store i32 18, i32* %119, align 4
  %120 = load i64, i64* %RBP, align 8
  %121 = add i64 %120, -12
  %122 = load i64, i64* %PC, align 8
  %123 = add i64 %122, 3
  store i64 %123, i64* %PC, align 8
  %124 = inttoptr i64 %121 to i32*
  %125 = load i32, i32* %124, align 4
  %126 = zext i32 %125 to i64
  store i64 %126, i64* %RDI, align 8, !tbaa !2428
  %127 = add i64 %122, -981
  br label %block_400586.backedge

block_400942:                                     ; preds = %block_400586
  %128 = add i64 %263, -12
  store i64 4196681, i64* %PC, align 8
  %129 = inttoptr i64 %128 to i32*
  store i32 20, i32* %129, align 4
  %130 = load i64, i64* %RBP, align 8
  %131 = add i64 %130, -12
  %132 = load i64, i64* %PC, align 8
  %133 = add i64 %132, 3
  store i64 %133, i64* %PC, align 8
  %134 = inttoptr i64 %131 to i32*
  %135 = load i32, i32* %134, align 4
  %136 = zext i32 %135 to i64
  store i64 %136, i64* %RDI, align 8, !tbaa !2428
  %137 = add i64 %132, -1081
  br label %block_400586.backedge

block_4005be:                                     ; preds = %block_400586
  %138 = add i64 %263, -12
  store i64 4195781, i64* %PC, align 8
  %139 = inttoptr i64 %138 to i32*
  store i32 2, i32* %139, align 4
  %140 = load i64, i64* %RBP, align 8
  %141 = add i64 %140, -12
  %142 = load i64, i64* %PC, align 8
  %143 = add i64 %142, 3
  store i64 %143, i64* %PC, align 8
  %144 = inttoptr i64 %141 to i32*
  %145 = load i32, i32* %144, align 4
  %146 = zext i32 %145 to i64
  store i64 %146, i64* %RDI, align 8, !tbaa !2428
  %147 = add i64 %142, -181
  br label %block_400586.backedge

block_400a3c:                                     ; preds = %block_400586
  %148 = add i64 %263, -12
  store i64 4196931, i64* %PC, align 8
  %149 = inttoptr i64 %148 to i32*
  store i32 25, i32* %149, align 4
  %150 = load i64, i64* %RBP, align 8
  %151 = add i64 %150, -12
  %152 = load i64, i64* %PC, align 8
  %153 = add i64 %152, 3
  store i64 %153, i64* %PC, align 8
  %154 = inttoptr i64 %151 to i32*
  %155 = load i32, i32* %154, align 4
  %156 = zext i32 %155 to i64
  store i64 %156, i64* %RDI, align 8, !tbaa !2428
  %157 = add i64 %152, -1331
  br label %block_400586.backedge

block_4006b8:                                     ; preds = %block_400586
  %158 = add i64 %263, -12
  store i64 4196031, i64* %PC, align 8
  %159 = inttoptr i64 %158 to i32*
  store i32 7, i32* %159, align 4
  %160 = load i64, i64* %RBP, align 8
  %161 = add i64 %160, -12
  %162 = load i64, i64* %PC, align 8
  %163 = add i64 %162, 3
  store i64 %163, i64* %PC, align 8
  %164 = inttoptr i64 %161 to i32*
  %165 = load i32, i32* %164, align 4
  %166 = zext i32 %165 to i64
  store i64 %166, i64* %RDI, align 8, !tbaa !2428
  %167 = add i64 %162, -431
  br label %block_400586.backedge

block_400b36:                                     ; preds = %block_400586
  %168 = add i64 %263, -12
  store i64 4197181, i64* %PC, align 8
  %169 = inttoptr i64 %168 to i32*
  store i32 30, i32* %169, align 4
  %170 = load i64, i64* %RBP, align 8
  %171 = add i64 %170, -12
  %172 = load i64, i64* %PC, align 8
  %173 = add i64 %172, 3
  store i64 %173, i64* %PC, align 8
  %174 = inttoptr i64 %171 to i32*
  %175 = load i32, i32* %174, align 4
  %176 = zext i32 %175 to i64
  store i64 %176, i64* %RDI, align 8, !tbaa !2428
  %177 = add i64 %172, -1581
  br label %block_400586.backedge

block_4007b2:                                     ; preds = %block_400586
  %178 = add i64 %263, -12
  store i64 4196281, i64* %PC, align 8
  %179 = inttoptr i64 %178 to i32*
  store i32 12, i32* %179, align 4
  %180 = load i64, i64* %RBP, align 8
  %181 = add i64 %180, -12
  %182 = load i64, i64* %PC, align 8
  %183 = add i64 %182, 3
  store i64 %183, i64* %PC, align 8
  %184 = inttoptr i64 %181 to i32*
  %185 = load i32, i32* %184, align 4
  %186 = zext i32 %185 to i64
  store i64 %186, i64* %RDI, align 8, !tbaa !2428
  %187 = add i64 %182, -681
  br label %block_400586.backedge

block_4008ac:                                     ; preds = %block_400586
  %188 = add i64 %263, -12
  store i64 4196531, i64* %PC, align 8
  %189 = inttoptr i64 %188 to i32*
  store i32 17, i32* %189, align 4
  %190 = load i64, i64* %RBP, align 8
  %191 = add i64 %190, -12
  %192 = load i64, i64* %PC, align 8
  %193 = add i64 %192, 3
  store i64 %193, i64* %PC, align 8
  %194 = inttoptr i64 %191 to i32*
  %195 = load i32, i32* %194, align 4
  %196 = zext i32 %195 to i64
  store i64 %196, i64* %RDI, align 8, !tbaa !2428
  %197 = add i64 %192, -931
  br label %block_400586.backedge

block_4005f0:                                     ; preds = %block_400586
  %198 = add i64 %263, -12
  store i64 4195831, i64* %PC, align 8
  %199 = inttoptr i64 %198 to i32*
  store i32 3, i32* %199, align 4
  %200 = load i64, i64* %RBP, align 8
  %201 = add i64 %200, -12
  %202 = load i64, i64* %PC, align 8
  %203 = add i64 %202, 3
  store i64 %203, i64* %PC, align 8
  %204 = inttoptr i64 %201 to i32*
  %205 = load i32, i32* %204, align 4
  %206 = zext i32 %205 to i64
  store i64 %206, i64* %RDI, align 8, !tbaa !2428
  %207 = add i64 %202, -231
  br label %block_400586.backedge

block_4009a6:                                     ; preds = %block_400586
  %208 = add i64 %263, -12
  store i64 4196781, i64* %PC, align 8
  %209 = inttoptr i64 %208 to i32*
  store i32 22, i32* %209, align 4
  %210 = load i64, i64* %RBP, align 8
  %211 = add i64 %210, -12
  %212 = load i64, i64* %PC, align 8
  %213 = add i64 %212, 3
  store i64 %213, i64* %PC, align 8
  %214 = inttoptr i64 %211 to i32*
  %215 = load i32, i32* %214, align 4
  %216 = zext i32 %215 to i64
  store i64 %216, i64* %RDI, align 8, !tbaa !2428
  %217 = add i64 %212, -1181
  br label %block_400586.backedge

block_400586:                                     ; preds = %block_400586.backedge, %block_400881
  %.sink5 = phi i64 [ 801, %block_400881 ], [ %.sink5.be, %block_400586.backedge ]
  %218 = load i64, i64* %RBP, align 8
  %219 = add i64 %218, -8
  %220 = load i64, i64* %PC, align 8
  %221 = add i64 %220, 4
  store i64 %221, i64* %PC, align 8
  %222 = inttoptr i64 %219 to i64*
  %223 = load i64, i64* %222, align 8
  store i64 %223, i64* %RAX, align 8, !tbaa !2428
  %224 = add i64 %223, 4
  store i64 %224, i64* %RCX, align 8, !tbaa !2428
  %225 = icmp ugt i64 %223, -5
  %226 = zext i1 %225 to i8
  store i8 %226, i8* %4, align 1, !tbaa !2432
  %227 = trunc i64 %224 to i32
  %228 = and i32 %227, 255
  %229 = tail call i32 @llvm.ctpop.i32(i32 %228) #9
  %230 = trunc i32 %229 to i8
  %231 = and i8 %230, 1
  %232 = xor i8 %231, 1
  store i8 %232, i8* %5, align 1, !tbaa !2446
  %233 = xor i64 %224, %223
  %234 = lshr i64 %233, 4
  %235 = trunc i64 %234 to i8
  %236 = and i8 %235, 1
  store i8 %236, i8* %6, align 1, !tbaa !2447
  %237 = icmp eq i64 %224, 0
  %238 = zext i1 %237 to i8
  store i8 %238, i8* %7, align 1, !tbaa !2448
  %239 = lshr i64 %224, 63
  %240 = trunc i64 %239 to i8
  store i8 %240, i8* %8, align 1, !tbaa !2449
  %241 = lshr i64 %223, 63
  %242 = xor i64 %239, %241
  %243 = add nuw nsw i64 %242, %239
  %244 = icmp eq i64 %243, 2
  %245 = zext i1 %244 to i8
  store i8 %245, i8* %9, align 1, !tbaa !2450
  %246 = add i64 %220, 15
  store i64 %246, i64* %PC, align 8
  store i64 %224, i64* %222, align 8
  %247 = load i32*, i32** %10, align 8
  %248 = load i64, i64* %PC, align 8
  %249 = add i64 %248, 3
  store i64 %249, i64* %PC, align 8
  %250 = load i32, i32* %247, align 4
  %251 = sext i32 %250 to i64
  store i64 %251, i64* %RAX, align 8, !tbaa !2428
  %252 = shl nsw i64 %251, 3
  %253 = add i64 %252, add (i64 ptrtoint (%seg_602020__data_type* @seg_602020__data to i64), i64 16)
  %254 = add i64 %248, 11
  store i64 %254, i64* %PC, align 8
  %255 = inttoptr i64 %253 to i64*
  %256 = load i64, i64* %255, align 8
  store i64 %256, i64* %RAX, align 8, !tbaa !2428
  %257 = load i64, i64* %RBP, align 8
  %258 = add i64 %257, -40
  %259 = add i64 %248, 15
  store i64 %259, i64* %PC, align 8
  %260 = inttoptr i64 %258 to i64*
  store i64 %256, i64* %260, align 8
  %261 = load i64, i64* %PC, align 8
  %262 = sub i64 %261, %.sink5
  %263 = load i64, i64* %RBP, align 8
  %264 = add i64 %263, -40
  %265 = add i64 %262, 4
  store i64 %265, i64* %PC, align 8
  %266 = inttoptr i64 %264 to i64*
  %267 = load i64, i64* %266, align 8
  store i64 %267, i64* %RAX, align 8, !tbaa !2428
  store i64 %267, i64* %PC, align 8, !tbaa !2428
  switch i64 %267, label %416 [
    i64 4197124, label %block_400b04
    i64 4195974, label %block_400686
    i64 4196874, label %block_400a0a
    i64 4195924, label %block_400654
    i64 4196624, label %block_400910
    i64 4196374, label %block_400816
    i64 4196124, label %block_40071c
    i64 4197024, label %block_400aa0
    i64 4195874, label %block_400622
    i64 4196224, label %block_400780
    i64 4197074, label %block_400ad2
    i64 4196324, label %block_4007e4
    i64 4197224, label %block_400b68
    i64 4196074, label %block_4006ea
    i64 4196474, label %block_40087a
    i64 4196824, label %block_4009d8
    i64 4195724, label %block_40058c
    i64 4196174, label %block_40074e
    i64 4196724, label %block_400974
    i64 4195824, label %block_4005f0
    i64 4196424, label %block_400848
    i64 4196574, label %block_4008de
    i64 4196674, label %block_400942
    i64 4195774, label %block_4005be
    i64 4196924, label %block_400a3c
    i64 4196974, label %block_400a6e
    i64 4195705, label %block_400579
    i64 4196024, label %block_4006b8
    i64 4197174, label %block_400b36
    i64 4196274, label %block_4007b2
    i64 4196524, label %block_4008ac
    i64 4196774, label %block_4009a6
  ]

block_400579:                                     ; preds = %block_400586
  %268 = add i64 %263, -12
  store i64 4195712, i64* %PC, align 8
  %269 = inttoptr i64 %268 to i32*
  store i32 0, i32* %269, align 4
  %270 = load i64, i64* %RSP, align 8
  %271 = load i64, i64* %PC, align 8
  %272 = add i64 %270, 48
  store i64 %272, i64* %RSP, align 8, !tbaa !2428
  %273 = icmp ugt i64 %270, -49
  %274 = zext i1 %273 to i8
  store i8 %274, i8* %4, align 1, !tbaa !2432
  %275 = trunc i64 %272 to i32
  %276 = and i32 %275, 255
  %277 = tail call i32 @llvm.ctpop.i32(i32 %276) #9
  %278 = trunc i32 %277 to i8
  %279 = and i8 %278, 1
  %280 = xor i8 %279, 1
  store i8 %280, i8* %5, align 1, !tbaa !2446
  %281 = xor i64 %270, 16
  %282 = xor i64 %281, %272
  %283 = lshr i64 %282, 4
  %284 = trunc i64 %283 to i8
  %285 = and i8 %284, 1
  store i8 %285, i8* %6, align 1, !tbaa !2447
  %286 = icmp eq i64 %272, 0
  %287 = zext i1 %286 to i8
  store i8 %287, i8* %7, align 1, !tbaa !2448
  %288 = lshr i64 %272, 63
  %289 = trunc i64 %288 to i8
  store i8 %289, i8* %8, align 1, !tbaa !2449
  %290 = lshr i64 %270, 63
  %291 = xor i64 %288, %290
  %292 = add nuw nsw i64 %291, %288
  %293 = icmp eq i64 %292, 2
  %294 = zext i1 %293 to i8
  store i8 %294, i8* %9, align 1, !tbaa !2450
  %295 = add i64 %271, 5
  store i64 %295, i64* %PC, align 8
  %296 = add i64 %270, 56
  %297 = inttoptr i64 %272 to i64*
  %298 = load i64, i64* %297, align 8
  store i64 %298, i64* %RBP, align 8, !tbaa !2428
  store i64 %296, i64* %RSP, align 8, !tbaa !2428
  %299 = add i64 %271, 6
  store i64 %299, i64* %PC, align 8
  %300 = inttoptr i64 %296 to i64*
  %301 = load i64, i64* %300, align 8
  store i64 %301, i64* %PC, align 8, !tbaa !2428
  %302 = add i64 %270, 64
  store i64 %302, i64* %RSP, align 8, !tbaa !2428
  ret %struct.Memory* %2

block_400622:                                     ; preds = %block_400586
  %303 = add i64 %263, -12
  store i64 4195881, i64* %PC, align 8
  %304 = inttoptr i64 %303 to i32*
  store i32 4, i32* %304, align 4
  %305 = load i64, i64* %RBP, align 8
  %306 = add i64 %305, -12
  %307 = load i64, i64* %PC, align 8
  %308 = add i64 %307, 3
  store i64 %308, i64* %PC, align 8
  %309 = inttoptr i64 %306 to i32*
  %310 = load i32, i32* %309, align 4
  %311 = zext i32 %310 to i64
  store i64 %311, i64* %RDI, align 8, !tbaa !2428
  %312 = add i64 %307, -281
  br label %block_400586.backedge

block_400aa0:                                     ; preds = %block_400586
  %313 = add i64 %263, -12
  store i64 4197031, i64* %PC, align 8
  %314 = inttoptr i64 %313 to i32*
  store i32 27, i32* %314, align 4
  %315 = load i64, i64* %RBP, align 8
  %316 = add i64 %315, -12
  %317 = load i64, i64* %PC, align 8
  %318 = add i64 %317, 3
  store i64 %318, i64* %PC, align 8
  %319 = inttoptr i64 %316 to i32*
  %320 = load i32, i32* %319, align 4
  %321 = zext i32 %320 to i64
  store i64 %321, i64* %RDI, align 8, !tbaa !2428
  %322 = add i64 %317, -1431
  br label %block_400586.backedge

block_40071c:                                     ; preds = %block_400586
  %323 = add i64 %263, -12
  store i64 4196131, i64* %PC, align 8
  %324 = inttoptr i64 %323 to i32*
  store i32 9, i32* %324, align 4
  %325 = load i64, i64* %RBP, align 8
  %326 = add i64 %325, -12
  %327 = load i64, i64* %PC, align 8
  %328 = add i64 %327, 3
  store i64 %328, i64* %PC, align 8
  %329 = inttoptr i64 %326 to i32*
  %330 = load i32, i32* %329, align 4
  %331 = zext i32 %330 to i64
  store i64 %331, i64* %RDI, align 8, !tbaa !2428
  %332 = add i64 %327, -531
  br label %block_400586.backedge

block_400816:                                     ; preds = %block_400586
  %333 = add i64 %263, -12
  store i64 4196381, i64* %PC, align 8
  %334 = inttoptr i64 %333 to i32*
  store i32 14, i32* %334, align 4
  %335 = load i64, i64* %RBP, align 8
  %336 = add i64 %335, -12
  %337 = load i64, i64* %PC, align 8
  %338 = add i64 %337, 3
  store i64 %338, i64* %PC, align 8
  %339 = inttoptr i64 %336 to i32*
  %340 = load i32, i32* %339, align 4
  %341 = zext i32 %340 to i64
  store i64 %341, i64* %RDI, align 8, !tbaa !2428
  %342 = add i64 %337, -781
  br label %block_400586.backedge

block_400910:                                     ; preds = %block_400586
  %343 = add i64 %263, -12
  store i64 4196631, i64* %PC, align 8
  %344 = inttoptr i64 %343 to i32*
  store i32 19, i32* %344, align 4
  %345 = load i64, i64* %RBP, align 8
  %346 = add i64 %345, -12
  %347 = load i64, i64* %PC, align 8
  %348 = add i64 %347, 3
  store i64 %348, i64* %PC, align 8
  %349 = inttoptr i64 %346 to i32*
  %350 = load i32, i32* %349, align 4
  %351 = zext i32 %350 to i64
  store i64 %351, i64* %RDI, align 8, !tbaa !2428
  %352 = add i64 %347, -1031
  br label %block_400586.backedge

block_40058c:                                     ; preds = %block_400586
  %353 = add i64 %263, -12
  store i64 4195731, i64* %PC, align 8
  %354 = inttoptr i64 %353 to i32*
  store i32 1, i32* %354, align 4
  %355 = load i64, i64* %RBP, align 8
  %356 = add i64 %355, -12
  %357 = load i64, i64* %PC, align 8
  %358 = add i64 %357, 3
  store i64 %358, i64* %PC, align 8
  %359 = inttoptr i64 %356 to i32*
  %360 = load i32, i32* %359, align 4
  %361 = zext i32 %360 to i64
  store i64 %361, i64* %RDI, align 8, !tbaa !2428
  %362 = add i64 %357, -131
  br label %block_400586.backedge

block_400654:                                     ; preds = %block_400586
  %363 = add i64 %263, -12
  store i64 4195931, i64* %PC, align 8
  %364 = inttoptr i64 %363 to i32*
  store i32 5, i32* %364, align 4
  %365 = load i64, i64* %RBP, align 8
  %366 = add i64 %365, -12
  %367 = load i64, i64* %PC, align 8
  %368 = add i64 %367, 3
  store i64 %368, i64* %PC, align 8
  %369 = inttoptr i64 %366 to i32*
  %370 = load i32, i32* %369, align 4
  %371 = zext i32 %370 to i64
  store i64 %371, i64* %RDI, align 8, !tbaa !2428
  %372 = add i64 %367, -331
  br label %block_400586.backedge

block_400a0a:                                     ; preds = %block_400586
  %373 = add i64 %263, -12
  store i64 4196881, i64* %PC, align 8
  %374 = inttoptr i64 %373 to i32*
  store i32 24, i32* %374, align 4
  %375 = load i64, i64* %RBP, align 8
  %376 = add i64 %375, -12
  %377 = load i64, i64* %PC, align 8
  %378 = add i64 %377, 3
  store i64 %378, i64* %PC, align 8
  %379 = inttoptr i64 %376 to i32*
  %380 = load i32, i32* %379, align 4
  %381 = zext i32 %380 to i64
  store i64 %381, i64* %RDI, align 8, !tbaa !2428
  %382 = add i64 %377, -1281
  br label %block_400586.backedge

block_400686:                                     ; preds = %block_400586
  %383 = add i64 %263, -12
  store i64 4195981, i64* %PC, align 8
  %384 = inttoptr i64 %383 to i32*
  store i32 6, i32* %384, align 4
  %385 = load i64, i64* %RBP, align 8
  %386 = add i64 %385, -12
  %387 = load i64, i64* %PC, align 8
  %388 = add i64 %387, 3
  store i64 %388, i64* %PC, align 8
  %389 = inttoptr i64 %386 to i32*
  %390 = load i32, i32* %389, align 4
  %391 = zext i32 %390 to i64
  store i64 %391, i64* %RDI, align 8, !tbaa !2428
  %392 = add i64 %387, -381
  br label %block_400586.backedge

block_400b04:                                     ; preds = %block_400586
  %393 = add i64 %263, -12
  store i64 4197131, i64* %PC, align 8
  %394 = inttoptr i64 %393 to i32*
  store i32 29, i32* %394, align 4
  %395 = load i64, i64* %RBP, align 8
  %396 = add i64 %395, -12
  %397 = load i64, i64* %PC, align 8
  %398 = add i64 %397, 3
  store i64 %398, i64* %PC, align 8
  %399 = inttoptr i64 %396 to i32*
  %400 = load i32, i32* %399, align 4
  %401 = zext i32 %400 to i64
  store i64 %401, i64* %RDI, align 8, !tbaa !2428
  %402 = add i64 %397, -1531
  br label %block_400586.backedge

block_400881:                                     ; preds = %block_40087a, %3
  %403 = phi i64 [ %.pre, %block_40087a ], [ %1, %3 ]
  %404 = load i64, i64* %RBP, align 8
  %405 = add i64 %404, -12
  %406 = add i64 %403, 3
  store i64 %406, i64* %PC, align 8
  %407 = inttoptr i64 %405 to i32*
  %408 = load i32, i32* %407, align 4
  %409 = zext i32 %408 to i64
  store i64 %409, i64* %RDI, align 8, !tbaa !2428
  %410 = add i64 %403, -881
  %411 = add i64 %403, 8
  %412 = load i64, i64* %RSP, align 8, !tbaa !2428
  %413 = add i64 %412, -8
  %414 = inttoptr i64 %413 to i64*
  store i64 %411, i64* %414, align 8
  store i64 %413, i64* %RSP, align 8, !tbaa !2428
  store i64 %410, i64* %PC, align 8, !tbaa !2428
  %415 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %410, %struct.Memory* %2)
  br label %block_400586

; <label>:416:                                    ; preds = %block_400586
  %417 = tail call %struct.Memory* @__remill_jump(%struct.State* nonnull %0, i64 %267, %struct.Memory* %2)
  ret %struct.Memory* %417
}

; Function Attrs: noinline nounwind
define %struct.Memory* @sub_400500_frame_dummy(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) local_unnamed_addr #6 {
block_400500:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %1, 1
  store i64 %4, i64* %PC, align 8
  %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6 = load i64, i64* %5, align 8, !tbaa !2428
  %7 = add i64 %6, -8
  %8 = inttoptr i64 %7 to i64*
  store i64 %3, i64* %8, align 8
  store i64 %7, i64* %5, align 8, !tbaa !2428
  %9 = load i64, i64* %PC, align 8
  store i64 %7, i64* %RBP, align 8, !tbaa !2428
  %10 = add i64 %9, 4
  store i64 %10, i64* %PC, align 8
  %11 = load i64, i64* %8, align 8
  store i64 %11, i64* %RBP, align 8, !tbaa !2428
  store i64 %6, i64* %5, align 8, !tbaa !2428
  %12 = add i64 %9, -113
  store i64 %12, i64* %PC, align 8, !tbaa !2428
  %13 = tail call %struct.Memory* @sub_400490_register_tm_clones(%struct.State* nonnull %0, i64 %12, %struct.Memory* %2)
  ret %struct.Memory* %13
}

; Function Attrs: noinline nounwind
define %struct.Memory* @sub_400ba0_main(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) local_unnamed_addr #6 {
block_400ba0:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0
  %ECX = bitcast %union.anon* %4 to i32*
  %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0
  %RAX = getelementptr inbounds %union.anon, %union.anon* %3, i64 0, i32 0
  %RCX = getelementptr inbounds %union.anon, %union.anon* %4, i64 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %RSI = getelementptr inbounds %union.anon, %union.anon* %5, i64 0, i32 0
  %RSP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %6 = load i64, i64* %RBP, align 8
  %7 = add i64 %1, 1
  store i64 %7, i64* %PC, align 8
  %8 = load i64, i64* %RSP, align 8, !tbaa !2428
  %9 = add i64 %8, -8
  %10 = inttoptr i64 %9 to i64*
  store i64 %6, i64* %10, align 8
  %11 = load i64, i64* %PC, align 8
  store i64 %9, i64* %RBP, align 8, !tbaa !2428
  %12 = add i64 %8, -8232
  store i64 %12, i64* %RSP, align 8, !tbaa !2428
  %13 = icmp ult i64 %9, 8224
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14, i8* %15, align 1, !tbaa !2432
  %16 = trunc i64 %12 to i32
  %17 = and i32 %16, 255
  %18 = tail call i32 @llvm.ctpop.i32(i32 %17) #9
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1, !tbaa !2446
  %23 = xor i64 %9, %12
  %24 = lshr i64 %23, 4
  %25 = trunc i64 %24 to i8
  %26 = and i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %26, i8* %27, align 1, !tbaa !2447
  %28 = icmp eq i64 %12, 0
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %29, i8* %30, align 1, !tbaa !2448
  %31 = lshr i64 %12, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1, !tbaa !2449
  %34 = lshr i64 %9, 63
  %35 = xor i64 %31, %34
  %36 = add nuw nsw i64 %35, %34
  %37 = icmp eq i64 %36, 2
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %38, i8* %39, align 1, !tbaa !2450
  %40 = add i64 %8, -12
  %41 = add i64 %11, 17
  store i64 %41, i64* %PC, align 8
  %42 = inttoptr i64 %40 to i32*
  store i32 0, i32* %42, align 4
  %43 = load i64, i64* %RBP, align 8
  %44 = add i64 %43, -8
  %45 = load i64, i64* %PC, align 8
  %46 = add i64 %45, 7
  store i64 %46, i64* %PC, align 8
  %47 = inttoptr i64 %44 to i32*
  store i32 2048, i32* %47, align 4
  %48 = load i64, i64* %RBP, align 8
  %49 = add i64 %48, -8212
  %50 = load i64, i64* %PC, align 8
  %51 = add i64 %50, 10
  store i64 %51, i64* %PC, align 8
  %52 = inttoptr i64 %49 to i32*
  store i32 0, i32* %52, align 4
  %53 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %.pre = load i64, i64* %PC, align 8
  br label %block_400bc3

block_400c55:                                     ; preds = %block_400c25
  store i64 add (i64 ptrtoint (%seg_400d00__rodata_type* @seg_400d00__rodata to i64), i64 264), i64* %RDI, align 8, !tbaa !2428
  %54 = load i32, i32* bitcast (%sum_type* @sum to i32*), align 8
  %55 = zext i32 %54 to i64
  store i64 %55, i64* %RSI, align 8, !tbaa !2428
  store i8 0, i8* %AL, align 1, !tbaa !2451
  %56 = add i64 %279, -2117
  %57 = add i64 %279, 24
  %58 = load i64, i64* %RSP, align 8, !tbaa !2428
  %59 = add i64 %58, -8
  %60 = inttoptr i64 %59 to i64*
  store i64 %57, i64* %60, align 8
  store i64 %59, i64* %RSP, align 8, !tbaa !2428
  store i64 %56, i64* %PC, align 8, !tbaa !2428
  %61 = tail call fastcc %struct.Memory* @ext_602138_printf(%struct.State* nonnull %0, %struct.Memory* %MEMORY.0)
  %62 = load i64, i64* %PC, align 8
  store i64 0, i64* %RSI, align 8, !tbaa !2428
  %63 = load i64, i64* %RBP, align 8
  %64 = add i64 %63, -8224
  %65 = load i32, i32* %EAX, align 4
  %66 = add i64 %62, 8
  store i64 %66, i64* %PC, align 8
  %67 = inttoptr i64 %64 to i32*
  store i32 %65, i32* %67, align 4
  %68 = load i32, i32* %ESI, align 4
  %69 = zext i32 %68 to i64
  %70 = load i64, i64* %PC, align 8
  store i64 %69, i64* %RAX, align 8, !tbaa !2428
  %71 = load i64, i64* %RSP, align 8
  %72 = add i64 %71, 8224
  store i64 %72, i64* %RSP, align 8, !tbaa !2428
  %73 = icmp ugt i64 %71, -8225
  %74 = zext i1 %73 to i8
  store i8 %74, i8* %15, align 1, !tbaa !2432
  %75 = trunc i64 %72 to i32
  %76 = and i32 %75, 255
  %77 = tail call i32 @llvm.ctpop.i32(i32 %76) #9
  %78 = trunc i32 %77 to i8
  %79 = and i8 %78, 1
  %80 = xor i8 %79, 1
  store i8 %80, i8* %22, align 1, !tbaa !2446
  %81 = xor i64 %72, %71
  %82 = lshr i64 %81, 4
  %83 = trunc i64 %82 to i8
  %84 = and i8 %83, 1
  store i8 %84, i8* %27, align 1, !tbaa !2447
  %85 = icmp eq i64 %72, 0
  %86 = zext i1 %85 to i8
  store i8 %86, i8* %30, align 1, !tbaa !2448
  %87 = lshr i64 %72, 63
  %88 = trunc i64 %87 to i8
  store i8 %88, i8* %33, align 1, !tbaa !2449
  %89 = lshr i64 %71, 63
  %90 = xor i64 %87, %89
  %91 = add nuw nsw i64 %90, %87
  %92 = icmp eq i64 %91, 2
  %93 = zext i1 %92 to i8
  store i8 %93, i8* %39, align 1, !tbaa !2450
  %94 = add i64 %70, 10
  store i64 %94, i64* %PC, align 8
  %95 = add i64 %71, 8232
  %96 = inttoptr i64 %72 to i64*
  %97 = load i64, i64* %96, align 8
  store i64 %97, i64* %RBP, align 8, !tbaa !2428
  store i64 %95, i64* %RSP, align 8, !tbaa !2428
  %98 = add i64 %70, 11
  store i64 %98, i64* %PC, align 8
  %99 = inttoptr i64 %95 to i64*
  %100 = load i64, i64* %99, align 8
  store i64 %100, i64* %PC, align 8, !tbaa !2428
  %101 = add i64 %71, 8240
  store i64 %101, i64* %RSP, align 8, !tbaa !2428
  ret %struct.Memory* %61

block_400c14:                                     ; preds = %block_400bc3
  %AL = bitcast %union.anon* %3 to i8*
  %ESI = bitcast %union.anon* %5 to i32*
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %102 = add i64 %281, -20
  %103 = add i64 %310, 7
  store i64 %103, i64* %PC, align 8
  %104 = inttoptr i64 %102 to i32*
  store i32 0, i32* %104, align 4
  %105 = load i64, i64* %RBP, align 8
  %106 = add i64 %105, -8216
  %107 = load i64, i64* %PC, align 8
  %108 = add i64 %107, 10
  store i64 %108, i64* %PC, align 8
  %109 = inttoptr i64 %106 to i32*
  store i32 0, i32* %109, align 4
  %.pre4 = load i64, i64* %PC, align 8
  br label %block_400c25

block_400c35:                                     ; preds = %block_400c25
  %110 = add i64 %251, -8208
  store i64 %110, i64* %RDI, align 8, !tbaa !2428
  %111 = add i64 %279, -1797
  %112 = add i64 %279, 12
  %113 = load i64, i64* %RSP, align 8, !tbaa !2428
  %114 = add i64 %113, -8
  %115 = inttoptr i64 %114 to i64*
  store i64 %112, i64* %115, align 8
  store i64 %114, i64* %RSP, align 8, !tbaa !2428
  store i64 %111, i64* %PC, align 8, !tbaa !2428
  %116 = tail call %struct.Memory* @sub_400530_eval(%struct.State* nonnull %0, i64 %111, %struct.Memory* %MEMORY.0)
  %117 = load i64, i64* %RBP, align 8
  %118 = add i64 %117, -8216
  %119 = load i64, i64* %PC, align 8
  %120 = add i64 %119, 6
  store i64 %120, i64* %PC, align 8
  %121 = inttoptr i64 %118 to i32*
  %122 = load i32, i32* %121, align 4
  %123 = add i32 %122, 1
  %124 = zext i32 %123 to i64
  store i64 %124, i64* %RAX, align 8, !tbaa !2428
  %125 = icmp eq i32 %122, -1
  %126 = icmp eq i32 %123, 0
  %127 = or i1 %125, %126
  %128 = zext i1 %127 to i8
  store i8 %128, i8* %15, align 1, !tbaa !2432
  %129 = and i32 %123, 255
  %130 = tail call i32 @llvm.ctpop.i32(i32 %129) #9
  %131 = trunc i32 %130 to i8
  %132 = and i8 %131, 1
  %133 = xor i8 %132, 1
  store i8 %133, i8* %22, align 1, !tbaa !2446
  %134 = xor i32 %123, %122
  %135 = lshr i32 %134, 4
  %136 = trunc i32 %135 to i8
  %137 = and i8 %136, 1
  store i8 %137, i8* %27, align 1, !tbaa !2447
  %138 = zext i1 %126 to i8
  store i8 %138, i8* %30, align 1, !tbaa !2448
  %139 = lshr i32 %123, 31
  %140 = trunc i32 %139 to i8
  store i8 %140, i8* %33, align 1, !tbaa !2449
  %141 = lshr i32 %122, 31
  %142 = xor i32 %139, %141
  %143 = add nuw nsw i32 %142, %139
  %144 = icmp eq i32 %143, 2
  %145 = zext i1 %144 to i8
  store i8 %145, i8* %39, align 1, !tbaa !2450
  %146 = add i64 %119, 15
  store i64 %146, i64* %PC, align 8
  store i32 %123, i32* %121, align 4
  %147 = load i64, i64* %PC, align 8
  %148 = add i64 %147, -43
  store i64 %148, i64* %PC, align 8, !tbaa !2428
  br label %block_400c25

block_400bd3:                                     ; preds = %block_400bc3
  store i64 31, i64* %RAX, align 8, !tbaa !2428
  %149 = add i64 %310, 11
  store i64 %149, i64* %PC, align 8
  %150 = load i32, i32* %284, align 4
  %151 = zext i32 %150 to i64
  store i64 %151, i64* %RCX, align 8, !tbaa !2428
  %152 = add i64 %281, -8220
  %153 = add i64 %310, 17
  store i64 %153, i64* %PC, align 8
  %154 = inttoptr i64 %152 to i32*
  store i32 31, i32* %154, align 4
  %155 = load i32, i32* %ECX, align 4
  %156 = zext i32 %155 to i64
  %157 = load i64, i64* %PC, align 8
  store i64 %156, i64* %RAX, align 8, !tbaa !2428
  %158 = sext i32 %155 to i64
  %159 = lshr i64 %158, 32
  store i64 %159, i64* %53, align 8, !tbaa !2428
  %160 = load i64, i64* %RBP, align 8
  %161 = add i64 %160, -8220
  %162 = add i64 %157, 9
  store i64 %162, i64* %PC, align 8
  %163 = inttoptr i64 %161 to i32*
  %164 = load i32, i32* %163, align 4
  %165 = zext i32 %164 to i64
  store i64 %165, i64* %RCX, align 8, !tbaa !2428
  %166 = add i64 %157, 11
  store i64 %166, i64* %PC, align 8
  %167 = sext i32 %164 to i64
  %168 = shl nuw i64 %159, 32
  %169 = or i64 %168, %156
  %170 = sdiv i64 %169, %167
  %171 = shl i64 %170, 32
  %172 = ashr exact i64 %171, 32
  %173 = icmp eq i64 %170, %172
  br i1 %173, label %176, label %174

; <label>:174:                                    ; preds = %block_400bd3
  %175 = tail call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %166, %struct.Memory* %MEMORY.1) #12
  %.pre5 = load i64, i64* %RDX, align 8
  %.pre6 = load i64, i64* %PC, align 8
  %.pre7 = load i64, i64* %RBP, align 8
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:176:                                    ; preds = %block_400bd3
  %177 = srem i64 %169, %167
  %178 = and i64 %170, 4294967295
  store i64 %178, i64* %RAX, align 8, !tbaa !2428
  %179 = and i64 %177, 4294967295
  store i64 %179, i64* %RDX, align 8, !tbaa !2428
  store i8 0, i8* %15, align 1, !tbaa !2432
  store i8 0, i8* %22, align 1, !tbaa !2446
  store i8 0, i8* %27, align 1, !tbaa !2447
  store i8 0, i8* %30, align 1, !tbaa !2448
  store i8 0, i8* %33, align 1, !tbaa !2449
  store i8 0, i8* %39, align 1, !tbaa !2450
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %176, %174
  %180 = phi i64 [ %.pre7, %174 ], [ %160, %176 ]
  %181 = phi i64 [ %.pre6, %174 ], [ %166, %176 ]
  %182 = phi i64 [ %.pre5, %174 ], [ %179, %176 ]
  %183 = phi %struct.Memory* [ %175, %174 ], [ %MEMORY.1, %176 ]
  %184 = trunc i64 %182 to i32
  %185 = add i32 %184, 1
  %186 = zext i32 %185 to i64
  store i64 %186, i64* %RDX, align 8, !tbaa !2428
  %187 = icmp eq i32 %184, -1
  %188 = icmp eq i32 %185, 0
  %189 = or i1 %187, %188
  %190 = zext i1 %189 to i8
  store i8 %190, i8* %15, align 1, !tbaa !2432
  %191 = and i32 %185, 255
  %192 = tail call i32 @llvm.ctpop.i32(i32 %191) #9
  %193 = trunc i32 %192 to i8
  %194 = and i8 %193, 1
  %195 = xor i8 %194, 1
  store i8 %195, i8* %22, align 1, !tbaa !2446
  %196 = xor i32 %185, %184
  %197 = lshr i32 %196, 4
  %198 = trunc i32 %197 to i8
  %199 = and i8 %198, 1
  store i8 %199, i8* %27, align 1, !tbaa !2447
  %200 = zext i1 %188 to i8
  store i8 %200, i8* %30, align 1, !tbaa !2448
  %201 = lshr i32 %185, 31
  %202 = trunc i32 %201 to i8
  store i8 %202, i8* %33, align 1, !tbaa !2449
  %203 = lshr i32 %184, 31
  %204 = xor i32 %201, %203
  %205 = add nuw nsw i32 %204, %201
  %206 = icmp eq i32 %205, 2
  %207 = zext i1 %206 to i8
  store i8 %207, i8* %39, align 1, !tbaa !2450
  %208 = add i64 %180, -8212
  %209 = add i64 %181, 10
  store i64 %209, i64* %PC, align 8
  %210 = inttoptr i64 %208 to i32*
  %211 = load i32, i32* %210, align 4
  %212 = sext i32 %211 to i64
  store i64 %212, i64* %RSI, align 8, !tbaa !2428
  %213 = shl nsw i64 %212, 2
  %214 = add i64 %180, -8208
  %215 = add i64 %214, %213
  %216 = add i64 %181, 17
  store i64 %216, i64* %PC, align 8
  %217 = inttoptr i64 %215 to i32*
  store i32 %185, i32* %217, align 4
  %218 = load i64, i64* %RBP, align 8
  %219 = add i64 %218, -8212
  %220 = load i64, i64* %PC, align 8
  %221 = add i64 %220, 6
  store i64 %221, i64* %PC, align 8
  %222 = inttoptr i64 %219 to i32*
  %223 = load i32, i32* %222, align 4
  %224 = add i32 %223, 1
  %225 = zext i32 %224 to i64
  store i64 %225, i64* %RAX, align 8, !tbaa !2428
  %226 = icmp eq i32 %223, -1
  %227 = icmp eq i32 %224, 0
  %228 = or i1 %226, %227
  %229 = zext i1 %228 to i8
  store i8 %229, i8* %15, align 1, !tbaa !2432
  %230 = and i32 %224, 255
  %231 = tail call i32 @llvm.ctpop.i32(i32 %230) #9
  %232 = trunc i32 %231 to i8
  %233 = and i8 %232, 1
  %234 = xor i8 %233, 1
  store i8 %234, i8* %22, align 1, !tbaa !2446
  %235 = xor i32 %224, %223
  %236 = lshr i32 %235, 4
  %237 = trunc i32 %236 to i8
  %238 = and i8 %237, 1
  store i8 %238, i8* %27, align 1, !tbaa !2447
  %239 = zext i1 %227 to i8
  store i8 %239, i8* %30, align 1, !tbaa !2448
  %240 = lshr i32 %224, 31
  %241 = trunc i32 %240 to i8
  store i8 %241, i8* %33, align 1, !tbaa !2449
  %242 = lshr i32 %223, 31
  %243 = xor i32 %240, %242
  %244 = add nuw nsw i32 %243, %240
  %245 = icmp eq i32 %244, 2
  %246 = zext i1 %245 to i8
  store i8 %246, i8* %39, align 1, !tbaa !2450
  %247 = add i64 %220, 15
  store i64 %247, i64* %PC, align 8
  store i32 %224, i32* %222, align 4
  %248 = load i64, i64* %PC, align 8
  %249 = add i64 %248, -76
  store i64 %249, i64* %PC, align 8, !tbaa !2428
  br label %block_400bc3

block_400c25:                                     ; preds = %block_400c35, %block_400c14
  %250 = phi i64 [ %.pre4, %block_400c14 ], [ %148, %block_400c35 ]
  %MEMORY.0 = phi %struct.Memory* [ %MEMORY.1, %block_400c14 ], [ %116, %block_400c35 ]
  %251 = load i64, i64* %RBP, align 8
  %252 = add i64 %251, -8216
  %253 = add i64 %250, 10
  store i64 %253, i64* %PC, align 8
  %254 = inttoptr i64 %252 to i32*
  %255 = load i32, i32* %254, align 4
  %256 = add i32 %255, -100000
  %257 = icmp ult i32 %255, 100000
  %258 = zext i1 %257 to i8
  store i8 %258, i8* %15, align 1, !tbaa !2432
  %259 = and i32 %256, 255
  %260 = tail call i32 @llvm.ctpop.i32(i32 %259) #9
  %261 = trunc i32 %260 to i8
  %262 = and i8 %261, 1
  %263 = xor i8 %262, 1
  store i8 %263, i8* %22, align 1, !tbaa !2446
  %264 = xor i32 %256, %255
  %265 = lshr i32 %264, 4
  %266 = trunc i32 %265 to i8
  %267 = and i8 %266, 1
  store i8 %267, i8* %27, align 1, !tbaa !2447
  %268 = icmp eq i32 %256, 0
  %269 = zext i1 %268 to i8
  store i8 %269, i8* %30, align 1, !tbaa !2448
  %270 = lshr i32 %256, 31
  %271 = trunc i32 %270 to i8
  store i8 %271, i8* %33, align 1, !tbaa !2449
  %272 = lshr i32 %255, 31
  %273 = xor i32 %270, %272
  %274 = add nuw nsw i32 %273, %272
  %275 = icmp eq i32 %274, 2
  %276 = zext i1 %275 to i8
  store i8 %276, i8* %39, align 1, !tbaa !2450
  %277 = icmp ne i8 %271, 0
  %278 = xor i1 %277, %275
  %.v8 = select i1 %278, i64 16, i64 48
  %279 = add i64 %250, %.v8
  store i64 %279, i64* %PC, align 8, !tbaa !2428
  br i1 %278, label %block_400c35, label %block_400c55

block_400bc3:                                     ; preds = %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit, %block_400ba0
  %280 = phi i64 [ %.pre, %block_400ba0 ], [ %249, %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit ]
  %MEMORY.1 = phi %struct.Memory* [ %2, %block_400ba0 ], [ %183, %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit ]
  %281 = load i64, i64* %RBP, align 8
  %282 = add i64 %281, -8212
  %283 = add i64 %280, 10
  store i64 %283, i64* %PC, align 8
  %284 = inttoptr i64 %282 to i32*
  %285 = load i32, i32* %284, align 4
  %286 = add i32 %285, -2047
  %287 = icmp ult i32 %285, 2047
  %288 = zext i1 %287 to i8
  store i8 %288, i8* %15, align 1, !tbaa !2432
  %289 = and i32 %286, 255
  %290 = tail call i32 @llvm.ctpop.i32(i32 %289) #9
  %291 = trunc i32 %290 to i8
  %292 = and i8 %291, 1
  %293 = xor i8 %292, 1
  store i8 %293, i8* %22, align 1, !tbaa !2446
  %294 = xor i32 %285, 16
  %295 = xor i32 %294, %286
  %296 = lshr i32 %295, 4
  %297 = trunc i32 %296 to i8
  %298 = and i8 %297, 1
  store i8 %298, i8* %27, align 1, !tbaa !2447
  %299 = icmp eq i32 %286, 0
  %300 = zext i1 %299 to i8
  store i8 %300, i8* %30, align 1, !tbaa !2448
  %301 = lshr i32 %286, 31
  %302 = trunc i32 %301 to i8
  store i8 %302, i8* %33, align 1, !tbaa !2449
  %303 = lshr i32 %285, 31
  %304 = xor i32 %301, %303
  %305 = add nuw nsw i32 %304, %303
  %306 = icmp eq i32 %305, 2
  %307 = zext i1 %306 to i8
  store i8 %307, i8* %39, align 1, !tbaa !2450
  %308 = icmp ne i8 %302, 0
  %309 = xor i1 %308, %306
  %.v = select i1 %309, i64 16, i64 81
  %310 = add i64 %280, %.v
  store i64 %310, i64* %PC, align 8, !tbaa !2428
  br i1 %309, label %block_400bd3, label %block_400c14
}

; Function Attrs: noinline nounwind
define %struct.Memory* @sub_4005f7(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) local_unnamed_addr #6 {
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %PC, align 8
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %11 = bitcast i64* %RAX to i32**
  br label %block_4005f7

block_4005f0:                                     ; preds = %block_400586
  %12 = add i64 %209, -12
  store i64 4195831, i64* %PC, align 8
  %13 = inttoptr i64 %12 to i32*
  store i32 3, i32* %13, align 4
  %.pre = load i64, i64* %PC, align 8
  br label %block_4005f7

block_4007e4:                                     ; preds = %block_400586
  %14 = add i64 %209, -12
  store i64 4196331, i64* %PC, align 8
  %15 = inttoptr i64 %14 to i32*
  store i32 13, i32* %15, align 4
  %16 = load i64, i64* %PC, align 8
  %17 = tail call %struct.Memory* @sub_4007eb(%struct.State* nonnull %0, i64 %16, %struct.Memory* %2)
  ret %struct.Memory* %17

block_4008de:                                     ; preds = %block_400586
  %18 = add i64 %209, -12
  store i64 4196581, i64* %PC, align 8
  %19 = inttoptr i64 %18 to i32*
  store i32 18, i32* %19, align 4
  %20 = load i64, i64* %PC, align 8
  %21 = tail call %struct.Memory* @sub_4008e5(%struct.State* nonnull %0, i64 %20, %struct.Memory* %2)
  ret %struct.Memory* %21

block_4009d8:                                     ; preds = %block_400586
  %22 = add i64 %209, -12
  store i64 4196831, i64* %PC, align 8
  %23 = inttoptr i64 %22 to i32*
  store i32 23, i32* %23, align 4
  %24 = load i64, i64* %PC, align 8
  %25 = tail call %struct.Memory* @sub_4009df(%struct.State* nonnull %0, i64 %24, %struct.Memory* %2)
  ret %struct.Memory* %25

block_400ad2:                                     ; preds = %block_400586
  %26 = add i64 %209, -12
  store i64 4197081, i64* %PC, align 8
  %27 = inttoptr i64 %26 to i32*
  store i32 28, i32* %27, align 4
  %28 = load i64, i64* %PC, align 8
  %29 = tail call %struct.Memory* @sub_400ad9(%struct.State* nonnull %0, i64 %28, %struct.Memory* %2)
  ret %struct.Memory* %29

block_4006b8:                                     ; preds = %block_400586
  %30 = add i64 %209, -12
  store i64 4196031, i64* %PC, align 8
  %31 = inttoptr i64 %30 to i32*
  store i32 7, i32* %31, align 4
  %32 = load i64, i64* %RBP, align 8
  %33 = add i64 %32, -12
  %34 = load i64, i64* %PC, align 8
  %35 = add i64 %34, 3
  store i64 %35, i64* %PC, align 8
  %36 = inttoptr i64 %33 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i64
  store i64 %38, i64* %RDI, align 8, !tbaa !2428
  %39 = add i64 %34, -431
  br label %block_400586.backedge

block_400586.backedge:                            ; preds = %block_4006b8, %block_4007b2, %block_400974, %block_400b36
  %.sink124 = phi i64 [ %34, %block_4006b8 ], [ %49, %block_4007b2 ], [ %96, %block_400974 ], [ %150, %block_400b36 ]
  %.sink119 = phi i64 [ %39, %block_4006b8 ], [ %54, %block_4007b2 ], [ %101, %block_400974 ], [ %155, %block_400b36 ]
  %.sink5.be = phi i64 [ 351, %block_4006b8 ], [ 601, %block_4007b2 ], [ 1051, %block_400974 ], [ 1501, %block_400b36 ]
  %40 = add i64 %.sink124, 8
  %41 = load i64, i64* %4, align 8, !tbaa !2428
  %42 = add i64 %41, -8
  %43 = inttoptr i64 %42 to i64*
  store i64 %40, i64* %43, align 8
  store i64 %42, i64* %4, align 8, !tbaa !2428
  store i64 %.sink119, i64* %PC, align 8, !tbaa !2428
  %44 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %.sink119, %struct.Memory* %2)
  br label %block_400586

block_4007b2:                                     ; preds = %block_400586
  %45 = add i64 %209, -12
  store i64 4196281, i64* %PC, align 8
  %46 = inttoptr i64 %45 to i32*
  store i32 12, i32* %46, align 4
  %47 = load i64, i64* %RBP, align 8
  %48 = add i64 %47, -12
  %49 = load i64, i64* %PC, align 8
  %50 = add i64 %49, 3
  store i64 %50, i64* %PC, align 8
  %51 = inttoptr i64 %48 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = zext i32 %52 to i64
  store i64 %53, i64* %RDI, align 8, !tbaa !2428
  %54 = add i64 %49, -681
  br label %block_400586.backedge

block_4008ac:                                     ; preds = %block_400586
  %55 = add i64 %209, -12
  store i64 4196531, i64* %PC, align 8
  %56 = inttoptr i64 %55 to i32*
  store i32 17, i32* %56, align 4
  %57 = load i64, i64* %PC, align 8
  %58 = tail call %struct.Memory* @sub_4008b3(%struct.State* nonnull %0, i64 %57, %struct.Memory* %2)
  ret %struct.Memory* %58

block_4005f7:                                     ; preds = %block_4005f0, %3
  %59 = phi i64 [ %.pre, %block_4005f0 ], [ %1, %3 ]
  %60 = load i64, i64* %RBP, align 8
  %61 = add i64 %60, -12
  %62 = add i64 %59, 3
  store i64 %62, i64* %PC, align 8
  %63 = inttoptr i64 %61 to i32*
  %64 = load i32, i32* %63, align 4
  %65 = zext i32 %64 to i64
  store i64 %65, i64* %RDI, align 8, !tbaa !2428
  %66 = add i64 %59, -231
  %67 = add i64 %59, 8
  %68 = load i64, i64* %4, align 8, !tbaa !2428
  %69 = add i64 %68, -8
  %70 = inttoptr i64 %69 to i64*
  store i64 %67, i64* %70, align 8
  store i64 %69, i64* %4, align 8, !tbaa !2428
  store i64 %66, i64* %PC, align 8, !tbaa !2428
  %71 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %66, %struct.Memory* %2)
  br label %block_400586

block_4009a6:                                     ; preds = %block_400586
  %72 = add i64 %209, -12
  store i64 4196781, i64* %PC, align 8
  %73 = inttoptr i64 %72 to i32*
  store i32 22, i32* %73, align 4
  %74 = load i64, i64* %PC, align 8
  %75 = tail call %struct.Memory* @sub_4009ad(%struct.State* nonnull %0, i64 %74, %struct.Memory* %2)
  ret %struct.Memory* %75

block_400aa0:                                     ; preds = %block_400586
  %76 = add i64 %209, -12
  store i64 4197031, i64* %PC, align 8
  %77 = inttoptr i64 %76 to i32*
  store i32 27, i32* %77, align 4
  %78 = load i64, i64* %PC, align 8
  %79 = tail call %struct.Memory* @sub_400aa7(%struct.State* nonnull %0, i64 %78, %struct.Memory* %2)
  ret %struct.Memory* %79

block_40058c:                                     ; preds = %block_400586
  %80 = add i64 %209, -12
  store i64 4195731, i64* %PC, align 8
  %81 = inttoptr i64 %80 to i32*
  store i32 1, i32* %81, align 4
  %82 = load i64, i64* %PC, align 8
  %83 = tail call %struct.Memory* @sub_400593(%struct.State* nonnull %0, i64 %82, %struct.Memory* %2)
  ret %struct.Memory* %83

block_400686:                                     ; preds = %block_400586
  %84 = add i64 %209, -12
  store i64 4195981, i64* %PC, align 8
  %85 = inttoptr i64 %84 to i32*
  store i32 6, i32* %85, align 4
  %86 = load i64, i64* %PC, align 8
  %87 = tail call %struct.Memory* @sub_40068d(%struct.State* nonnull %0, i64 %86, %struct.Memory* %2)
  ret %struct.Memory* %87

block_40087a:                                     ; preds = %block_400586
  %88 = add i64 %209, -12
  store i64 4196481, i64* %PC, align 8
  %89 = inttoptr i64 %88 to i32*
  store i32 16, i32* %89, align 4
  %90 = load i64, i64* %PC, align 8
  %91 = tail call %struct.Memory* @sub_400881(%struct.State* nonnull %0, i64 %90, %struct.Memory* %2)
  ret %struct.Memory* %91

block_400974:                                     ; preds = %block_400586
  %92 = add i64 %209, -12
  store i64 4196731, i64* %PC, align 8
  %93 = inttoptr i64 %92 to i32*
  store i32 21, i32* %93, align 4
  %94 = load i64, i64* %RBP, align 8
  %95 = add i64 %94, -12
  %96 = load i64, i64* %PC, align 8
  %97 = add i64 %96, 3
  store i64 %97, i64* %PC, align 8
  %98 = inttoptr i64 %95 to i32*
  %99 = load i32, i32* %98, align 4
  %100 = zext i32 %99 to i64
  store i64 %100, i64* %RDI, align 8, !tbaa !2428
  %101 = add i64 %96, -1131
  br label %block_400586.backedge

block_400a6e:                                     ; preds = %block_400586
  %102 = add i64 %209, -12
  store i64 4196981, i64* %PC, align 8
  %103 = inttoptr i64 %102 to i32*
  store i32 26, i32* %103, align 4
  %104 = load i64, i64* %PC, align 8
  %105 = tail call %struct.Memory* @sub_400a75(%struct.State* nonnull %0, i64 %104, %struct.Memory* %2)
  ret %struct.Memory* %105

block_400780:                                     ; preds = %block_400586
  %106 = add i64 %209, -12
  store i64 4196231, i64* %PC, align 8
  %107 = inttoptr i64 %106 to i32*
  store i32 11, i32* %107, align 4
  %108 = load i64, i64* %PC, align 8
  %109 = tail call %struct.Memory* @sub_400787(%struct.State* nonnull %0, i64 %108, %struct.Memory* %2)
  ret %struct.Memory* %109

block_400b68:                                     ; preds = %block_400586
  %110 = add i64 %209, -12
  store i64 4197231, i64* %PC, align 8
  %111 = inttoptr i64 %110 to i32*
  store i32 31, i32* %111, align 4
  %112 = load i64, i64* %PC, align 8
  %113 = tail call %struct.Memory* @sub_400b6f(%struct.State* nonnull %0, i64 %112, %struct.Memory* %2)
  ret %struct.Memory* %113

block_400654:                                     ; preds = %block_400586
  %114 = add i64 %209, -12
  store i64 4195931, i64* %PC, align 8
  %115 = inttoptr i64 %114 to i32*
  store i32 5, i32* %115, align 4
  %116 = load i64, i64* %PC, align 8
  %117 = tail call %struct.Memory* @sub_40065b(%struct.State* nonnull %0, i64 %116, %struct.Memory* %2)
  ret %struct.Memory* %117

block_40074e:                                     ; preds = %block_400586
  %118 = add i64 %209, -12
  store i64 4196181, i64* %PC, align 8
  %119 = inttoptr i64 %118 to i32*
  store i32 10, i32* %119, align 4
  %120 = load i64, i64* %PC, align 8
  %121 = tail call %struct.Memory* @sub_400755(%struct.State* nonnull %0, i64 %120, %struct.Memory* %2)
  ret %struct.Memory* %121

block_400848:                                     ; preds = %block_400586
  %122 = add i64 %209, -12
  store i64 4196431, i64* %PC, align 8
  %123 = inttoptr i64 %122 to i32*
  store i32 15, i32* %123, align 4
  %124 = load i64, i64* %PC, align 8
  %125 = tail call %struct.Memory* @sub_40084f(%struct.State* nonnull %0, i64 %124, %struct.Memory* %2)
  ret %struct.Memory* %125

block_4005be:                                     ; preds = %block_400586
  %126 = add i64 %209, -12
  store i64 4195781, i64* %PC, align 8
  %127 = inttoptr i64 %126 to i32*
  store i32 2, i32* %127, align 4
  %128 = load i64, i64* %PC, align 8
  %129 = tail call %struct.Memory* @sub_4005c5(%struct.State* nonnull %0, i64 %128, %struct.Memory* %2)
  ret %struct.Memory* %129

block_400942:                                     ; preds = %block_400586
  %130 = add i64 %209, -12
  store i64 4196681, i64* %PC, align 8
  %131 = inttoptr i64 %130 to i32*
  store i32 20, i32* %131, align 4
  %132 = load i64, i64* %PC, align 8
  %133 = tail call %struct.Memory* @sub_400949(%struct.State* nonnull %0, i64 %132, %struct.Memory* %2)
  ret %struct.Memory* %133

block_4006ea:                                     ; preds = %block_400586
  %134 = add i64 %209, -12
  store i64 4196081, i64* %PC, align 8
  %135 = inttoptr i64 %134 to i32*
  store i32 8, i32* %135, align 4
  %136 = load i64, i64* %PC, align 8
  %137 = tail call %struct.Memory* @sub_4006f1(%struct.State* nonnull %0, i64 %136, %struct.Memory* %2)
  ret %struct.Memory* %137

block_400579:                                     ; preds = %block_400586
  %138 = add i64 %209, -12
  store i64 4195712, i64* %PC, align 8
  %139 = inttoptr i64 %138 to i32*
  store i32 0, i32* %139, align 4
  %140 = load i64, i64* %PC, align 8
  %141 = tail call %struct.Memory* @sub_400580(%struct.State* nonnull %0, i64 %140, %struct.Memory* %2)
  ret %struct.Memory* %141

block_400a3c:                                     ; preds = %block_400586
  %142 = add i64 %209, -12
  store i64 4196931, i64* %PC, align 8
  %143 = inttoptr i64 %142 to i32*
  store i32 25, i32* %143, align 4
  %144 = load i64, i64* %PC, align 8
  %145 = tail call %struct.Memory* @sub_400a43(%struct.State* nonnull %0, i64 %144, %struct.Memory* %2)
  ret %struct.Memory* %145

block_400b36:                                     ; preds = %block_400586
  %146 = add i64 %209, -12
  store i64 4197181, i64* %PC, align 8
  %147 = inttoptr i64 %146 to i32*
  store i32 30, i32* %147, align 4
  %148 = load i64, i64* %RBP, align 8
  %149 = add i64 %148, -12
  %150 = load i64, i64* %PC, align 8
  %151 = add i64 %150, 3
  store i64 %151, i64* %PC, align 8
  %152 = inttoptr i64 %149 to i32*
  %153 = load i32, i32* %152, align 4
  %154 = zext i32 %153 to i64
  store i64 %154, i64* %RDI, align 8, !tbaa !2428
  %155 = add i64 %150, -1581
  br label %block_400586.backedge

block_400622:                                     ; preds = %block_400586
  %156 = add i64 %209, -12
  store i64 4195881, i64* %PC, align 8
  %157 = inttoptr i64 %156 to i32*
  store i32 4, i32* %157, align 4
  %158 = load i64, i64* %PC, align 8
  %159 = tail call %struct.Memory* @sub_400629(%struct.State* nonnull %0, i64 %158, %struct.Memory* %2)
  ret %struct.Memory* %159

block_40071c:                                     ; preds = %block_400586
  %160 = add i64 %209, -12
  store i64 4196131, i64* %PC, align 8
  %161 = inttoptr i64 %160 to i32*
  store i32 9, i32* %161, align 4
  %162 = load i64, i64* %PC, align 8
  %163 = tail call %struct.Memory* @sub_400723(%struct.State* nonnull %0, i64 %162, %struct.Memory* %2)
  ret %struct.Memory* %163

block_400586:                                     ; preds = %block_400586.backedge, %block_4005f7
  %.sink5 = phi i64 [ 151, %block_4005f7 ], [ %.sink5.be, %block_400586.backedge ]
  %164 = load i64, i64* %RBP, align 8
  %165 = add i64 %164, -8
  %166 = load i64, i64* %PC, align 8
  %167 = add i64 %166, 4
  store i64 %167, i64* %PC, align 8
  %168 = inttoptr i64 %165 to i64*
  %169 = load i64, i64* %168, align 8
  store i64 %169, i64* %RAX, align 8, !tbaa !2428
  %170 = add i64 %169, 4
  store i64 %170, i64* %RCX, align 8, !tbaa !2428
  %171 = icmp ugt i64 %169, -5
  %172 = zext i1 %171 to i8
  store i8 %172, i8* %5, align 1, !tbaa !2432
  %173 = trunc i64 %170 to i32
  %174 = and i32 %173, 255
  %175 = tail call i32 @llvm.ctpop.i32(i32 %174) #9
  %176 = trunc i32 %175 to i8
  %177 = and i8 %176, 1
  %178 = xor i8 %177, 1
  store i8 %178, i8* %6, align 1, !tbaa !2446
  %179 = xor i64 %170, %169
  %180 = lshr i64 %179, 4
  %181 = trunc i64 %180 to i8
  %182 = and i8 %181, 1
  store i8 %182, i8* %7, align 1, !tbaa !2447
  %183 = icmp eq i64 %170, 0
  %184 = zext i1 %183 to i8
  store i8 %184, i8* %8, align 1, !tbaa !2448
  %185 = lshr i64 %170, 63
  %186 = trunc i64 %185 to i8
  store i8 %186, i8* %9, align 1, !tbaa !2449
  %187 = lshr i64 %169, 63
  %188 = xor i64 %185, %187
  %189 = add nuw nsw i64 %188, %185
  %190 = icmp eq i64 %189, 2
  %191 = zext i1 %190 to i8
  store i8 %191, i8* %10, align 1, !tbaa !2450
  %192 = add i64 %166, 15
  store i64 %192, i64* %PC, align 8
  store i64 %170, i64* %168, align 8
  %193 = load i32*, i32** %11, align 8
  %194 = load i64, i64* %PC, align 8
  %195 = add i64 %194, 3
  store i64 %195, i64* %PC, align 8
  %196 = load i32, i32* %193, align 4
  %197 = sext i32 %196 to i64
  store i64 %197, i64* %RAX, align 8, !tbaa !2428
  %198 = shl nsw i64 %197, 3
  %199 = add i64 %198, add (i64 ptrtoint (%seg_602020__data_type* @seg_602020__data to i64), i64 16)
  %200 = add i64 %194, 11
  store i64 %200, i64* %PC, align 8
  %201 = inttoptr i64 %199 to i64*
  %202 = load i64, i64* %201, align 8
  store i64 %202, i64* %RAX, align 8, !tbaa !2428
  %203 = load i64, i64* %RBP, align 8
  %204 = add i64 %203, -40
  %205 = add i64 %194, 15
  store i64 %205, i64* %PC, align 8
  %206 = inttoptr i64 %204 to i64*
  store i64 %202, i64* %206, align 8
  %207 = load i64, i64* %PC, align 8
  %208 = sub i64 %207, %.sink5
  %209 = load i64, i64* %RBP, align 8
  %210 = add i64 %209, -40
  %211 = add i64 %208, 4
  store i64 %211, i64* %PC, align 8
  %212 = inttoptr i64 %210 to i64*
  %213 = load i64, i64* %212, align 8
  store i64 %213, i64* %RAX, align 8, !tbaa !2428
  store i64 %213, i64* %PC, align 8, !tbaa !2428
  switch i64 %213, label %230 [
    i64 4197124, label %block_400b04
    i64 4196874, label %block_400a0a
    i64 4196624, label %block_400910
    i64 4196374, label %block_400816
    i64 4196124, label %block_40071c
    i64 4195874, label %block_400622
    i64 4197174, label %block_400b36
    i64 4196924, label %block_400a3c
    i64 4197024, label %block_400aa0
    i64 4196774, label %block_4009a6
    i64 4196524, label %block_4008ac
    i64 4197074, label %block_400ad2
    i64 4195924, label %block_400654
    i64 4195824, label %block_4005f0
    i64 4195705, label %block_400579
    i64 4196974, label %block_400a6e
    i64 4196324, label %block_4007e4
    i64 4196024, label %block_4006b8
    i64 4196574, label %block_4008de
    i64 4196274, label %block_4007b2
    i64 4195724, label %block_40058c
    i64 4196824, label %block_4009d8
    i64 4195974, label %block_400686
    i64 4196474, label %block_40087a
    i64 4196724, label %block_400974
    i64 4196224, label %block_400780
    i64 4197224, label %block_400b68
    i64 4196074, label %block_4006ea
    i64 4196174, label %block_40074e
    i64 4196424, label %block_400848
    i64 4195774, label %block_4005be
    i64 4196674, label %block_400942
  ]

block_400816:                                     ; preds = %block_400586
  %214 = add i64 %209, -12
  store i64 4196381, i64* %PC, align 8
  %215 = inttoptr i64 %214 to i32*
  store i32 14, i32* %215, align 4
  %216 = load i64, i64* %PC, align 8
  %217 = tail call %struct.Memory* @sub_40081d(%struct.State* nonnull %0, i64 %216, %struct.Memory* %2)
  ret %struct.Memory* %217

block_400910:                                     ; preds = %block_400586
  %218 = add i64 %209, -12
  store i64 4196631, i64* %PC, align 8
  %219 = inttoptr i64 %218 to i32*
  store i32 19, i32* %219, align 4
  %220 = load i64, i64* %PC, align 8
  %221 = tail call %struct.Memory* @sub_400917(%struct.State* nonnull %0, i64 %220, %struct.Memory* %2)
  ret %struct.Memory* %221

block_400a0a:                                     ; preds = %block_400586
  %222 = add i64 %209, -12
  store i64 4196881, i64* %PC, align 8
  %223 = inttoptr i64 %222 to i32*
  store i32 24, i32* %223, align 4
  %224 = load i64, i64* %PC, align 8
  %225 = tail call %struct.Memory* @sub_400a11(%struct.State* nonnull %0, i64 %224, %struct.Memory* %2)
  ret %struct.Memory* %225

block_400b04:                                     ; preds = %block_400586
  %226 = add i64 %209, -12
  store i64 4197131, i64* %PC, align 8
  %227 = inttoptr i64 %226 to i32*
  store i32 29, i32* %227, align 4
  %228 = load i64, i64* %PC, align 8
  %229 = tail call %struct.Memory* @sub_400b0b(%struct.State* nonnull %0, i64 %228, %struct.Memory* %2)
  ret %struct.Memory* %229

; <label>:230:                                    ; preds = %block_400586
  %231 = tail call %struct.Memory* @__remill_jump(%struct.State* nonnull %0, i64 %213, %struct.Memory* %2)
  ret %struct.Memory* %231
}

; Function Attrs: noinline nounwind
define %struct.Memory* @sub_400a11(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) local_unnamed_addr #6 {
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %PC, align 8
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RSP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %10 = bitcast i64* %RAX to i32**
  br label %block_400a11

block_40087a:                                     ; preds = %block_400586
  %11 = add i64 %252, -12
  store i64 4196481, i64* %PC, align 8
  %12 = inttoptr i64 %11 to i32*
  store i32 16, i32* %12, align 4
  %13 = load i64, i64* %PC, align 8
  %14 = tail call %struct.Memory* @sub_400881(%struct.State* nonnull %0, i64 %13, %struct.Memory* %2)
  ret %struct.Memory* %14

block_400579:                                     ; preds = %block_400586
  %15 = add i64 %252, -12
  store i64 4195712, i64* %PC, align 8
  %16 = inttoptr i64 %15 to i32*
  store i32 0, i32* %16, align 4
  %17 = load i64, i64* %RSP, align 8
  %18 = load i64, i64* %PC, align 8
  %19 = add i64 %17, 48
  store i64 %19, i64* %RSP, align 8, !tbaa !2428
  %20 = icmp ugt i64 %17, -49
  %21 = zext i1 %20 to i8
  store i8 %21, i8* %4, align 1, !tbaa !2432
  %22 = trunc i64 %19 to i32
  %23 = and i32 %22, 255
  %24 = tail call i32 @llvm.ctpop.i32(i32 %23) #9
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  store i8 %27, i8* %5, align 1, !tbaa !2446
  %28 = xor i64 %17, 16
  %29 = xor i64 %28, %19
  %30 = lshr i64 %29, 4
  %31 = trunc i64 %30 to i8
  %32 = and i8 %31, 1
  store i8 %32, i8* %6, align 1, !tbaa !2447
  %33 = icmp eq i64 %19, 0
  %34 = zext i1 %33 to i8
  store i8 %34, i8* %7, align 1, !tbaa !2448
  %35 = lshr i64 %19, 63
  %36 = trunc i64 %35 to i8
  store i8 %36, i8* %8, align 1, !tbaa !2449
  %37 = lshr i64 %17, 63
  %38 = xor i64 %35, %37
  %39 = add nuw nsw i64 %38, %35
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  store i8 %41, i8* %9, align 1, !tbaa !2450
  %42 = add i64 %18, 5
  store i64 %42, i64* %PC, align 8
  %43 = add i64 %17, 56
  %44 = inttoptr i64 %19 to i64*
  %45 = load i64, i64* %44, align 8
  store i64 %45, i64* %RBP, align 8, !tbaa !2428
  store i64 %43, i64* %RSP, align 8, !tbaa !2428
  %46 = add i64 %18, 6
  store i64 %46, i64* %PC, align 8
  %47 = inttoptr i64 %43 to i64*
  %48 = load i64, i64* %47, align 8
  store i64 %48, i64* %PC, align 8, !tbaa !2428
  %49 = add i64 %17, 64
  store i64 %49, i64* %RSP, align 8, !tbaa !2428
  ret %struct.Memory* %2

block_4005f0:                                     ; preds = %block_400586
  %50 = add i64 %252, -12
  store i64 4195831, i64* %PC, align 8
  %51 = inttoptr i64 %50 to i32*
  store i32 3, i32* %51, align 4
  %52 = load i64, i64* %RBP, align 8
  %53 = add i64 %52, -12
  %54 = load i64, i64* %PC, align 8
  %55 = add i64 %54, 3
  store i64 %55, i64* %PC, align 8
  %56 = inttoptr i64 %53 to i32*
  %57 = load i32, i32* %56, align 4
  %58 = zext i32 %57 to i64
  store i64 %58, i64* %RDI, align 8, !tbaa !2428
  %59 = add i64 %54, -231
  br label %block_400586.backedge

block_400586.backedge:                            ; preds = %block_4005f0, %block_4006ea, %block_400b68, %block_4007e4, %block_4008de, %block_400974, %block_400a6e, %block_400654, %block_40074e, %block_4009d8, %block_400ad2, %block_4006b8, %block_4007b2, %block_4009a6, %block_400aa0, %block_400b36, %block_40071c, %block_400816, %block_4008ac, %block_400910, %block_40058c, %block_400622
  %.sink154 = phi i64 [ %54, %block_4005f0 ], [ %69, %block_4006ea ], [ %79, %block_400b68 ], [ %89, %block_4007e4 ], [ %99, %block_4008de ], [ %109, %block_400974 ], [ %119, %block_400a6e ], [ %129, %block_400654 ], [ %139, %block_40074e ], [ %153, %block_4009d8 ], [ %167, %block_400ad2 ], [ %177, %block_4006b8 ], [ %187, %block_4007b2 ], [ %201, %block_4009a6 ], [ %265, %block_400aa0 ], [ %275, %block_400b36 ], [ %285, %block_40071c ], [ %295, %block_400816 ], [ %305, %block_4008ac ], [ %328, %block_400910 ], [ %338, %block_40058c ], [ %358, %block_400622 ]
  %.sink149 = phi i64 [ %59, %block_4005f0 ], [ %74, %block_4006ea ], [ %84, %block_400b68 ], [ %94, %block_4007e4 ], [ %104, %block_4008de ], [ %114, %block_400974 ], [ %124, %block_400a6e ], [ %134, %block_400654 ], [ %144, %block_40074e ], [ %158, %block_4009d8 ], [ %172, %block_400ad2 ], [ %182, %block_4006b8 ], [ %192, %block_4007b2 ], [ %206, %block_4009a6 ], [ %270, %block_400aa0 ], [ %280, %block_400b36 ], [ %290, %block_40071c ], [ %300, %block_400816 ], [ %310, %block_4008ac ], [ %333, %block_400910 ], [ %343, %block_40058c ], [ %363, %block_400622 ]
  %.sink5.be = phi i64 [ 151, %block_4005f0 ], [ 401, %block_4006ea ], [ 1551, %block_400b68 ], [ 651, %block_4007e4 ], [ 901, %block_4008de ], [ 1051, %block_400974 ], [ 1301, %block_400a6e ], [ 251, %block_400654 ], [ 501, %block_40074e ], [ 1151, %block_4009d8 ], [ 1401, %block_400ad2 ], [ 351, %block_4006b8 ], [ 601, %block_4007b2 ], [ 1101, %block_4009a6 ], [ 1351, %block_400aa0 ], [ 1501, %block_400b36 ], [ 451, %block_40071c ], [ 701, %block_400816 ], [ 851, %block_4008ac ], [ 951, %block_400910 ], [ 51, %block_40058c ], [ 201, %block_400622 ]
  %60 = add i64 %.sink154, 8
  %61 = load i64, i64* %RSP, align 8, !tbaa !2428
  %62 = add i64 %61, -8
  %63 = inttoptr i64 %62 to i64*
  store i64 %60, i64* %63, align 8
  store i64 %62, i64* %RSP, align 8, !tbaa !2428
  store i64 %.sink149, i64* %PC, align 8, !tbaa !2428
  %64 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %.sink149, %struct.Memory* %2)
  br label %block_400586

block_4006ea:                                     ; preds = %block_400586
  %65 = add i64 %252, -12
  store i64 4196081, i64* %PC, align 8
  %66 = inttoptr i64 %65 to i32*
  store i32 8, i32* %66, align 4
  %67 = load i64, i64* %RBP, align 8
  %68 = add i64 %67, -12
  %69 = load i64, i64* %PC, align 8
  %70 = add i64 %69, 3
  store i64 %70, i64* %PC, align 8
  %71 = inttoptr i64 %68 to i32*
  %72 = load i32, i32* %71, align 4
  %73 = zext i32 %72 to i64
  store i64 %73, i64* %RDI, align 8, !tbaa !2428
  %74 = add i64 %69, -481
  br label %block_400586.backedge

block_400b68:                                     ; preds = %block_400586
  %75 = add i64 %252, -12
  store i64 4197231, i64* %PC, align 8
  %76 = inttoptr i64 %75 to i32*
  store i32 31, i32* %76, align 4
  %77 = load i64, i64* %RBP, align 8
  %78 = add i64 %77, -12
  %79 = load i64, i64* %PC, align 8
  %80 = add i64 %79, 3
  store i64 %80, i64* %PC, align 8
  %81 = inttoptr i64 %78 to i32*
  %82 = load i32, i32* %81, align 4
  %83 = zext i32 %82 to i64
  store i64 %83, i64* %RDI, align 8, !tbaa !2428
  %84 = add i64 %79, -1631
  br label %block_400586.backedge

block_4007e4:                                     ; preds = %block_400586
  %85 = add i64 %252, -12
  store i64 4196331, i64* %PC, align 8
  %86 = inttoptr i64 %85 to i32*
  store i32 13, i32* %86, align 4
  %87 = load i64, i64* %RBP, align 8
  %88 = add i64 %87, -12
  %89 = load i64, i64* %PC, align 8
  %90 = add i64 %89, 3
  store i64 %90, i64* %PC, align 8
  %91 = inttoptr i64 %88 to i32*
  %92 = load i32, i32* %91, align 4
  %93 = zext i32 %92 to i64
  store i64 %93, i64* %RDI, align 8, !tbaa !2428
  %94 = add i64 %89, -731
  br label %block_400586.backedge

block_4008de:                                     ; preds = %block_400586
  %95 = add i64 %252, -12
  store i64 4196581, i64* %PC, align 8
  %96 = inttoptr i64 %95 to i32*
  store i32 18, i32* %96, align 4
  %97 = load i64, i64* %RBP, align 8
  %98 = add i64 %97, -12
  %99 = load i64, i64* %PC, align 8
  %100 = add i64 %99, 3
  store i64 %100, i64* %PC, align 8
  %101 = inttoptr i64 %98 to i32*
  %102 = load i32, i32* %101, align 4
  %103 = zext i32 %102 to i64
  store i64 %103, i64* %RDI, align 8, !tbaa !2428
  %104 = add i64 %99, -981
  br label %block_400586.backedge

block_400974:                                     ; preds = %block_400586
  %105 = add i64 %252, -12
  store i64 4196731, i64* %PC, align 8
  %106 = inttoptr i64 %105 to i32*
  store i32 21, i32* %106, align 4
  %107 = load i64, i64* %RBP, align 8
  %108 = add i64 %107, -12
  %109 = load i64, i64* %PC, align 8
  %110 = add i64 %109, 3
  store i64 %110, i64* %PC, align 8
  %111 = inttoptr i64 %108 to i32*
  %112 = load i32, i32* %111, align 4
  %113 = zext i32 %112 to i64
  store i64 %113, i64* %RDI, align 8, !tbaa !2428
  %114 = add i64 %109, -1131
  br label %block_400586.backedge

block_400a6e:                                     ; preds = %block_400586
  %115 = add i64 %252, -12
  store i64 4196981, i64* %PC, align 8
  %116 = inttoptr i64 %115 to i32*
  store i32 26, i32* %116, align 4
  %117 = load i64, i64* %RBP, align 8
  %118 = add i64 %117, -12
  %119 = load i64, i64* %PC, align 8
  %120 = add i64 %119, 3
  store i64 %120, i64* %PC, align 8
  %121 = inttoptr i64 %118 to i32*
  %122 = load i32, i32* %121, align 4
  %123 = zext i32 %122 to i64
  store i64 %123, i64* %RDI, align 8, !tbaa !2428
  %124 = add i64 %119, -1381
  br label %block_400586.backedge

block_400654:                                     ; preds = %block_400586
  %125 = add i64 %252, -12
  store i64 4195931, i64* %PC, align 8
  %126 = inttoptr i64 %125 to i32*
  store i32 5, i32* %126, align 4
  %127 = load i64, i64* %RBP, align 8
  %128 = add i64 %127, -12
  %129 = load i64, i64* %PC, align 8
  %130 = add i64 %129, 3
  store i64 %130, i64* %PC, align 8
  %131 = inttoptr i64 %128 to i32*
  %132 = load i32, i32* %131, align 4
  %133 = zext i32 %132 to i64
  store i64 %133, i64* %RDI, align 8, !tbaa !2428
  %134 = add i64 %129, -331
  br label %block_400586.backedge

block_40074e:                                     ; preds = %block_400586
  %135 = add i64 %252, -12
  store i64 4196181, i64* %PC, align 8
  %136 = inttoptr i64 %135 to i32*
  store i32 10, i32* %136, align 4
  %137 = load i64, i64* %RBP, align 8
  %138 = add i64 %137, -12
  %139 = load i64, i64* %PC, align 8
  %140 = add i64 %139, 3
  store i64 %140, i64* %PC, align 8
  %141 = inttoptr i64 %138 to i32*
  %142 = load i32, i32* %141, align 4
  %143 = zext i32 %142 to i64
  store i64 %143, i64* %RDI, align 8, !tbaa !2428
  %144 = add i64 %139, -581
  br label %block_400586.backedge

block_400848:                                     ; preds = %block_400586
  %145 = add i64 %252, -12
  store i64 4196431, i64* %PC, align 8
  %146 = inttoptr i64 %145 to i32*
  store i32 15, i32* %146, align 4
  %147 = load i64, i64* %PC, align 8
  %148 = tail call %struct.Memory* @sub_40084f(%struct.State* nonnull %0, i64 %147, %struct.Memory* %2)
  ret %struct.Memory* %148

block_4009d8:                                     ; preds = %block_400586
  %149 = add i64 %252, -12
  store i64 4196831, i64* %PC, align 8
  %150 = inttoptr i64 %149 to i32*
  store i32 23, i32* %150, align 4
  %151 = load i64, i64* %RBP, align 8
  %152 = add i64 %151, -12
  %153 = load i64, i64* %PC, align 8
  %154 = add i64 %153, 3
  store i64 %154, i64* %PC, align 8
  %155 = inttoptr i64 %152 to i32*
  %156 = load i32, i32* %155, align 4
  %157 = zext i32 %156 to i64
  store i64 %157, i64* %RDI, align 8, !tbaa !2428
  %158 = add i64 %153, -1231
  br label %block_400586.backedge

block_4005be:                                     ; preds = %block_400586
  %159 = add i64 %252, -12
  store i64 4195781, i64* %PC, align 8
  %160 = inttoptr i64 %159 to i32*
  store i32 2, i32* %160, align 4
  %161 = load i64, i64* %PC, align 8
  %162 = tail call %struct.Memory* @sub_4005c5(%struct.State* nonnull %0, i64 %161, %struct.Memory* %2)
  ret %struct.Memory* %162

block_400ad2:                                     ; preds = %block_400586
  %163 = add i64 %252, -12
  store i64 4197081, i64* %PC, align 8
  %164 = inttoptr i64 %163 to i32*
  store i32 28, i32* %164, align 4
  %165 = load i64, i64* %RBP, align 8
  %166 = add i64 %165, -12
  %167 = load i64, i64* %PC, align 8
  %168 = add i64 %167, 3
  store i64 %168, i64* %PC, align 8
  %169 = inttoptr i64 %166 to i32*
  %170 = load i32, i32* %169, align 4
  %171 = zext i32 %170 to i64
  store i64 %171, i64* %RDI, align 8, !tbaa !2428
  %172 = add i64 %167, -1481
  br label %block_400586.backedge

block_4006b8:                                     ; preds = %block_400586
  %173 = add i64 %252, -12
  store i64 4196031, i64* %PC, align 8
  %174 = inttoptr i64 %173 to i32*
  store i32 7, i32* %174, align 4
  %175 = load i64, i64* %RBP, align 8
  %176 = add i64 %175, -12
  %177 = load i64, i64* %PC, align 8
  %178 = add i64 %177, 3
  store i64 %178, i64* %PC, align 8
  %179 = inttoptr i64 %176 to i32*
  %180 = load i32, i32* %179, align 4
  %181 = zext i32 %180 to i64
  store i64 %181, i64* %RDI, align 8, !tbaa !2428
  %182 = add i64 %177, -431
  br label %block_400586.backedge

block_4007b2:                                     ; preds = %block_400586
  %183 = add i64 %252, -12
  store i64 4196281, i64* %PC, align 8
  %184 = inttoptr i64 %183 to i32*
  store i32 12, i32* %184, align 4
  %185 = load i64, i64* %RBP, align 8
  %186 = add i64 %185, -12
  %187 = load i64, i64* %PC, align 8
  %188 = add i64 %187, 3
  store i64 %188, i64* %PC, align 8
  %189 = inttoptr i64 %186 to i32*
  %190 = load i32, i32* %189, align 4
  %191 = zext i32 %190 to i64
  store i64 %191, i64* %RDI, align 8, !tbaa !2428
  %192 = add i64 %187, -681
  br label %block_400586.backedge

block_400942:                                     ; preds = %block_400586
  %193 = add i64 %252, -12
  store i64 4196681, i64* %PC, align 8
  %194 = inttoptr i64 %193 to i32*
  store i32 20, i32* %194, align 4
  %195 = load i64, i64* %PC, align 8
  %196 = tail call %struct.Memory* @sub_400949(%struct.State* nonnull %0, i64 %195, %struct.Memory* %2)
  ret %struct.Memory* %196

block_4009a6:                                     ; preds = %block_400586
  %197 = add i64 %252, -12
  store i64 4196781, i64* %PC, align 8
  %198 = inttoptr i64 %197 to i32*
  store i32 22, i32* %198, align 4
  %199 = load i64, i64* %RBP, align 8
  %200 = add i64 %199, -12
  %201 = load i64, i64* %PC, align 8
  %202 = add i64 %201, 3
  store i64 %202, i64* %PC, align 8
  %203 = inttoptr i64 %200 to i32*
  %204 = load i32, i32* %203, align 4
  %205 = zext i32 %204 to i64
  store i64 %205, i64* %RDI, align 8, !tbaa !2428
  %206 = add i64 %201, -1181
  br label %block_400586.backedge

block_400586:                                     ; preds = %block_400586.backedge, %block_400a11
  %.sink5 = phi i64 [ 1201, %block_400a11 ], [ %.sink5.be, %block_400586.backedge ]
  %207 = load i64, i64* %RBP, align 8
  %208 = add i64 %207, -8
  %209 = load i64, i64* %PC, align 8
  %210 = add i64 %209, 4
  store i64 %210, i64* %PC, align 8
  %211 = inttoptr i64 %208 to i64*
  %212 = load i64, i64* %211, align 8
  store i64 %212, i64* %RAX, align 8, !tbaa !2428
  %213 = add i64 %212, 4
  store i64 %213, i64* %RCX, align 8, !tbaa !2428
  %214 = icmp ugt i64 %212, -5
  %215 = zext i1 %214 to i8
  store i8 %215, i8* %4, align 1, !tbaa !2432
  %216 = trunc i64 %213 to i32
  %217 = and i32 %216, 255
  %218 = tail call i32 @llvm.ctpop.i32(i32 %217) #9
  %219 = trunc i32 %218 to i8
  %220 = and i8 %219, 1
  %221 = xor i8 %220, 1
  store i8 %221, i8* %5, align 1, !tbaa !2446
  %222 = xor i64 %213, %212
  %223 = lshr i64 %222, 4
  %224 = trunc i64 %223 to i8
  %225 = and i8 %224, 1
  store i8 %225, i8* %6, align 1, !tbaa !2447
  %226 = icmp eq i64 %213, 0
  %227 = zext i1 %226 to i8
  store i8 %227, i8* %7, align 1, !tbaa !2448
  %228 = lshr i64 %213, 63
  %229 = trunc i64 %228 to i8
  store i8 %229, i8* %8, align 1, !tbaa !2449
  %230 = lshr i64 %212, 63
  %231 = xor i64 %228, %230
  %232 = add nuw nsw i64 %231, %228
  %233 = icmp eq i64 %232, 2
  %234 = zext i1 %233 to i8
  store i8 %234, i8* %9, align 1, !tbaa !2450
  %235 = add i64 %209, 15
  store i64 %235, i64* %PC, align 8
  store i64 %213, i64* %211, align 8
  %236 = load i32*, i32** %10, align 8
  %237 = load i64, i64* %PC, align 8
  %238 = add i64 %237, 3
  store i64 %238, i64* %PC, align 8
  %239 = load i32, i32* %236, align 4
  %240 = sext i32 %239 to i64
  store i64 %240, i64* %RAX, align 8, !tbaa !2428
  %241 = shl nsw i64 %240, 3
  %242 = add i64 %241, add (i64 ptrtoint (%seg_602020__data_type* @seg_602020__data to i64), i64 16)
  %243 = add i64 %237, 11
  store i64 %243, i64* %PC, align 8
  %244 = inttoptr i64 %242 to i64*
  %245 = load i64, i64* %244, align 8
  store i64 %245, i64* %RAX, align 8, !tbaa !2428
  %246 = load i64, i64* %RBP, align 8
  %247 = add i64 %246, -40
  %248 = add i64 %237, 15
  store i64 %248, i64* %PC, align 8
  %249 = inttoptr i64 %247 to i64*
  store i64 %245, i64* %249, align 8
  %250 = load i64, i64* %PC, align 8
  %251 = sub i64 %250, %.sink5
  %252 = load i64, i64* %RBP, align 8
  %253 = add i64 %252, -40
  %254 = add i64 %251, 4
  store i64 %254, i64* %PC, align 8
  %255 = inttoptr i64 %253 to i64*
  %256 = load i64, i64* %255, align 8
  store i64 %256, i64* %RAX, align 8, !tbaa !2428
  store i64 %256, i64* %PC, align 8, !tbaa !2428
  switch i64 %256, label %368 [
    i64 4196224, label %block_400780
    i64 4195874, label %block_400622
    i64 4197124, label %block_400b04
    i64 4195974, label %block_400686
    i64 4196874, label %block_400a0a
    i64 4196624, label %block_400910
    i64 4196524, label %block_4008ac
    i64 4196374, label %block_400816
    i64 4196124, label %block_40071c
    i64 4195824, label %block_4005f0
    i64 4196724, label %block_400974
    i64 4196324, label %block_4007e4
    i64 4197224, label %block_400b68
    i64 4196074, label %block_4006ea
    i64 4195924, label %block_400654
    i64 4197074, label %block_400ad2
    i64 4196474, label %block_40087a
    i64 4195724, label %block_40058c
    i64 4196574, label %block_4008de
    i64 4196974, label %block_400a6e
    i64 4195705, label %block_400579
    i64 4195774, label %block_4005be
    i64 4196924, label %block_400a3c
    i64 4196174, label %block_40074e
    i64 4196424, label %block_400848
    i64 4196824, label %block_4009d8
    i64 4196024, label %block_4006b8
    i64 4197174, label %block_400b36
    i64 4196274, label %block_4007b2
    i64 4196674, label %block_400942
    i64 4196774, label %block_4009a6
    i64 4197024, label %block_400aa0
  ]

block_400a3c:                                     ; preds = %block_400586
  %257 = add i64 %252, -12
  store i64 4196931, i64* %PC, align 8
  %258 = inttoptr i64 %257 to i32*
  store i32 25, i32* %258, align 4
  %259 = load i64, i64* %PC, align 8
  %260 = tail call %struct.Memory* @sub_400a43(%struct.State* nonnull %0, i64 %259, %struct.Memory* %2)
  ret %struct.Memory* %260

block_400aa0:                                     ; preds = %block_400586
  %261 = add i64 %252, -12
  store i64 4197031, i64* %PC, align 8
  %262 = inttoptr i64 %261 to i32*
  store i32 27, i32* %262, align 4
  %263 = load i64, i64* %RBP, align 8
  %264 = add i64 %263, -12
  %265 = load i64, i64* %PC, align 8
  %266 = add i64 %265, 3
  store i64 %266, i64* %PC, align 8
  %267 = inttoptr i64 %264 to i32*
  %268 = load i32, i32* %267, align 4
  %269 = zext i32 %268 to i64
  store i64 %269, i64* %RDI, align 8, !tbaa !2428
  %270 = add i64 %265, -1431
  br label %block_400586.backedge

block_400b36:                                     ; preds = %block_400586
  %271 = add i64 %252, -12
  store i64 4197181, i64* %PC, align 8
  %272 = inttoptr i64 %271 to i32*
  store i32 30, i32* %272, align 4
  %273 = load i64, i64* %RBP, align 8
  %274 = add i64 %273, -12
  %275 = load i64, i64* %PC, align 8
  %276 = add i64 %275, 3
  store i64 %276, i64* %PC, align 8
  %277 = inttoptr i64 %274 to i32*
  %278 = load i32, i32* %277, align 4
  %279 = zext i32 %278 to i64
  store i64 %279, i64* %RDI, align 8, !tbaa !2428
  %280 = add i64 %275, -1581
  br label %block_400586.backedge

block_40071c:                                     ; preds = %block_400586
  %281 = add i64 %252, -12
  store i64 4196131, i64* %PC, align 8
  %282 = inttoptr i64 %281 to i32*
  store i32 9, i32* %282, align 4
  %283 = load i64, i64* %RBP, align 8
  %284 = add i64 %283, -12
  %285 = load i64, i64* %PC, align 8
  %286 = add i64 %285, 3
  store i64 %286, i64* %PC, align 8
  %287 = inttoptr i64 %284 to i32*
  %288 = load i32, i32* %287, align 4
  %289 = zext i32 %288 to i64
  store i64 %289, i64* %RDI, align 8, !tbaa !2428
  %290 = add i64 %285, -531
  br label %block_400586.backedge

block_400816:                                     ; preds = %block_400586
  %291 = add i64 %252, -12
  store i64 4196381, i64* %PC, align 8
  %292 = inttoptr i64 %291 to i32*
  store i32 14, i32* %292, align 4
  %293 = load i64, i64* %RBP, align 8
  %294 = add i64 %293, -12
  %295 = load i64, i64* %PC, align 8
  %296 = add i64 %295, 3
  store i64 %296, i64* %PC, align 8
  %297 = inttoptr i64 %294 to i32*
  %298 = load i32, i32* %297, align 4
  %299 = zext i32 %298 to i64
  store i64 %299, i64* %RDI, align 8, !tbaa !2428
  %300 = add i64 %295, -781
  br label %block_400586.backedge

block_4008ac:                                     ; preds = %block_400586
  %301 = add i64 %252, -12
  store i64 4196531, i64* %PC, align 8
  %302 = inttoptr i64 %301 to i32*
  store i32 17, i32* %302, align 4
  %303 = load i64, i64* %RBP, align 8
  %304 = add i64 %303, -12
  %305 = load i64, i64* %PC, align 8
  %306 = add i64 %305, 3
  store i64 %306, i64* %PC, align 8
  %307 = inttoptr i64 %304 to i32*
  %308 = load i32, i32* %307, align 4
  %309 = zext i32 %308 to i64
  store i64 %309, i64* %RDI, align 8, !tbaa !2428
  %310 = add i64 %305, -931
  br label %block_400586.backedge

block_400a11:                                     ; preds = %block_400a0a, %3
  %311 = phi i64 [ %.pre, %block_400a0a ], [ %1, %3 ]
  %312 = load i64, i64* %RBP, align 8
  %313 = add i64 %312, -12
  %314 = add i64 %311, 3
  store i64 %314, i64* %PC, align 8
  %315 = inttoptr i64 %313 to i32*
  %316 = load i32, i32* %315, align 4
  %317 = zext i32 %316 to i64
  store i64 %317, i64* %RDI, align 8, !tbaa !2428
  %318 = add i64 %311, -1281
  %319 = add i64 %311, 8
  %320 = load i64, i64* %RSP, align 8, !tbaa !2428
  %321 = add i64 %320, -8
  %322 = inttoptr i64 %321 to i64*
  store i64 %319, i64* %322, align 8
  store i64 %321, i64* %RSP, align 8, !tbaa !2428
  store i64 %318, i64* %PC, align 8, !tbaa !2428
  %323 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %318, %struct.Memory* %2)
  br label %block_400586

block_400910:                                     ; preds = %block_400586
  %324 = add i64 %252, -12
  store i64 4196631, i64* %PC, align 8
  %325 = inttoptr i64 %324 to i32*
  store i32 19, i32* %325, align 4
  %326 = load i64, i64* %RBP, align 8
  %327 = add i64 %326, -12
  %328 = load i64, i64* %PC, align 8
  %329 = add i64 %328, 3
  store i64 %329, i64* %PC, align 8
  %330 = inttoptr i64 %327 to i32*
  %331 = load i32, i32* %330, align 4
  %332 = zext i32 %331 to i64
  store i64 %332, i64* %RDI, align 8, !tbaa !2428
  %333 = add i64 %328, -1031
  br label %block_400586.backedge

block_40058c:                                     ; preds = %block_400586
  %334 = add i64 %252, -12
  store i64 4195731, i64* %PC, align 8
  %335 = inttoptr i64 %334 to i32*
  store i32 1, i32* %335, align 4
  %336 = load i64, i64* %RBP, align 8
  %337 = add i64 %336, -12
  %338 = load i64, i64* %PC, align 8
  %339 = add i64 %338, 3
  store i64 %339, i64* %PC, align 8
  %340 = inttoptr i64 %337 to i32*
  %341 = load i32, i32* %340, align 4
  %342 = zext i32 %341 to i64
  store i64 %342, i64* %RDI, align 8, !tbaa !2428
  %343 = add i64 %338, -131
  br label %block_400586.backedge

block_400a0a:                                     ; preds = %block_400586
  %344 = add i64 %252, -12
  store i64 4196881, i64* %PC, align 8
  %345 = inttoptr i64 %344 to i32*
  store i32 24, i32* %345, align 4
  %.pre = load i64, i64* %PC, align 8
  br label %block_400a11

block_400686:                                     ; preds = %block_400586
  %346 = add i64 %252, -12
  store i64 4195981, i64* %PC, align 8
  %347 = inttoptr i64 %346 to i32*
  store i32 6, i32* %347, align 4
  %348 = load i64, i64* %PC, align 8
  %349 = tail call %struct.Memory* @sub_40068d(%struct.State* nonnull %0, i64 %348, %struct.Memory* %2)
  ret %struct.Memory* %349

block_400b04:                                     ; preds = %block_400586
  %350 = add i64 %252, -12
  store i64 4197131, i64* %PC, align 8
  %351 = inttoptr i64 %350 to i32*
  store i32 29, i32* %351, align 4
  %352 = load i64, i64* %PC, align 8
  %353 = tail call %struct.Memory* @sub_400b0b(%struct.State* nonnull %0, i64 %352, %struct.Memory* %2)
  ret %struct.Memory* %353

block_400622:                                     ; preds = %block_400586
  %354 = add i64 %252, -12
  store i64 4195881, i64* %PC, align 8
  %355 = inttoptr i64 %354 to i32*
  store i32 4, i32* %355, align 4
  %356 = load i64, i64* %RBP, align 8
  %357 = add i64 %356, -12
  %358 = load i64, i64* %PC, align 8
  %359 = add i64 %358, 3
  store i64 %359, i64* %PC, align 8
  %360 = inttoptr i64 %357 to i32*
  %361 = load i32, i32* %360, align 4
  %362 = zext i32 %361 to i64
  store i64 %362, i64* %RDI, align 8, !tbaa !2428
  %363 = add i64 %358, -281
  br label %block_400586.backedge

block_400780:                                     ; preds = %block_400586
  %364 = add i64 %252, -12
  store i64 4196231, i64* %PC, align 8
  %365 = inttoptr i64 %364 to i32*
  store i32 11, i32* %365, align 4
  %366 = load i64, i64* %PC, align 8
  %367 = tail call %struct.Memory* @sub_400787(%struct.State* nonnull %0, i64 %366, %struct.Memory* %2)
  ret %struct.Memory* %367

; <label>:368:                                    ; preds = %block_400586
  %369 = tail call %struct.Memory* @__remill_jump(%struct.State* nonnull %0, i64 %256, %struct.Memory* %2)
  ret %struct.Memory* %369
}

; Function Attrs: noinline nounwind
define %struct.Memory* @sub_4008e5(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) local_unnamed_addr #6 {
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %PC, align 8
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RSP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %10 = bitcast i64* %RAX to i32**
  br label %block_4008e5

block_40087a:                                     ; preds = %block_400586
  %11 = add i64 %243, -12
  store i64 4196481, i64* %PC, align 8
  %12 = inttoptr i64 %11 to i32*
  store i32 16, i32* %12, align 4
  %13 = load i64, i64* %PC, align 8
  %14 = tail call %struct.Memory* @sub_400881(%struct.State* nonnull %0, i64 %13, %struct.Memory* %2)
  ret %struct.Memory* %14

block_400974:                                     ; preds = %block_400586
  %15 = add i64 %243, -12
  store i64 4196731, i64* %PC, align 8
  %16 = inttoptr i64 %15 to i32*
  store i32 21, i32* %16, align 4
  %17 = load i64, i64* %RBP, align 8
  %18 = add i64 %17, -12
  %19 = load i64, i64* %PC, align 8
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC, align 8
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RDI, align 8, !tbaa !2428
  %24 = add i64 %19, -1131
  br label %block_400586.backedge

block_400586.backedge:                            ; preds = %block_400974, %block_400a6e, %block_4006ea, %block_400b68, %block_4007e4, %block_400b36, %block_4008ac, %block_4006b8, %block_4009a6, %block_4005f0, %block_400622, %block_400aa0, %block_4007b2
  %.sink226 = phi i64 [ %19, %block_400974 ], [ %34, %block_400a6e ], [ %44, %block_4006ea ], [ %54, %block_400b68 ], [ %77, %block_4007e4 ], [ %148, %block_400b36 ], [ %162, %block_4008ac ], [ %172, %block_4006b8 ], [ %182, %block_4009a6 ], [ %192, %block_4005f0 ], [ %252, %block_400622 ], [ %262, %block_400aa0 ], [ %300, %block_4007b2 ]
  %.sink221 = phi i64 [ %24, %block_400974 ], [ %39, %block_400a6e ], [ %49, %block_4006ea ], [ %59, %block_400b68 ], [ %82, %block_4007e4 ], [ %153, %block_400b36 ], [ %167, %block_4008ac ], [ %177, %block_4006b8 ], [ %187, %block_4009a6 ], [ %197, %block_4005f0 ], [ %257, %block_400622 ], [ %267, %block_400aa0 ], [ %305, %block_4007b2 ]
  %.sink5.be = phi i64 [ 1051, %block_400974 ], [ 1301, %block_400a6e ], [ 401, %block_4006ea ], [ 1551, %block_400b68 ], [ 651, %block_4007e4 ], [ 1501, %block_400b36 ], [ 851, %block_4008ac ], [ 351, %block_4006b8 ], [ 1101, %block_4009a6 ], [ 151, %block_4005f0 ], [ 201, %block_400622 ], [ 1351, %block_400aa0 ], [ 601, %block_4007b2 ]
  %25 = add i64 %.sink226, 8
  %26 = load i64, i64* %RSP, align 8, !tbaa !2428
  %27 = add i64 %26, -8
  %28 = inttoptr i64 %27 to i64*
  store i64 %25, i64* %28, align 8
  store i64 %27, i64* %RSP, align 8, !tbaa !2428
  store i64 %.sink221, i64* %PC, align 8, !tbaa !2428
  %29 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %.sink221, %struct.Memory* %2)
  br label %block_400586

block_400a6e:                                     ; preds = %block_400586
  %30 = add i64 %243, -12
  store i64 4196981, i64* %PC, align 8
  %31 = inttoptr i64 %30 to i32*
  store i32 26, i32* %31, align 4
  %32 = load i64, i64* %RBP, align 8
  %33 = add i64 %32, -12
  %34 = load i64, i64* %PC, align 8
  %35 = add i64 %34, 3
  store i64 %35, i64* %PC, align 8
  %36 = inttoptr i64 %33 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i64
  store i64 %38, i64* %RDI, align 8, !tbaa !2428
  %39 = add i64 %34, -1381
  br label %block_400586.backedge

block_4006ea:                                     ; preds = %block_400586
  %40 = add i64 %243, -12
  store i64 4196081, i64* %PC, align 8
  %41 = inttoptr i64 %40 to i32*
  store i32 8, i32* %41, align 4
  %42 = load i64, i64* %RBP, align 8
  %43 = add i64 %42, -12
  %44 = load i64, i64* %PC, align 8
  %45 = add i64 %44, 3
  store i64 %45, i64* %PC, align 8
  %46 = inttoptr i64 %43 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = zext i32 %47 to i64
  store i64 %48, i64* %RDI, align 8, !tbaa !2428
  %49 = add i64 %44, -481
  br label %block_400586.backedge

block_400b68:                                     ; preds = %block_400586
  %50 = add i64 %243, -12
  store i64 4197231, i64* %PC, align 8
  %51 = inttoptr i64 %50 to i32*
  store i32 31, i32* %51, align 4
  %52 = load i64, i64* %RBP, align 8
  %53 = add i64 %52, -12
  %54 = load i64, i64* %PC, align 8
  %55 = add i64 %54, 3
  store i64 %55, i64* %PC, align 8
  %56 = inttoptr i64 %53 to i32*
  %57 = load i32, i32* %56, align 4
  %58 = zext i32 %57 to i64
  store i64 %58, i64* %RDI, align 8, !tbaa !2428
  %59 = add i64 %54, -1631
  br label %block_400586.backedge

block_4008e5:                                     ; preds = %block_4008de, %3
  %60 = phi i64 [ %.pre, %block_4008de ], [ %1, %3 ]
  %61 = load i64, i64* %RBP, align 8
  %62 = add i64 %61, -12
  %63 = add i64 %60, 3
  store i64 %63, i64* %PC, align 8
  %64 = inttoptr i64 %62 to i32*
  %65 = load i32, i32* %64, align 4
  %66 = zext i32 %65 to i64
  store i64 %66, i64* %RDI, align 8, !tbaa !2428
  %67 = add i64 %60, -981
  %68 = add i64 %60, 8
  %69 = load i64, i64* %RSP, align 8, !tbaa !2428
  %70 = add i64 %69, -8
  %71 = inttoptr i64 %70 to i64*
  store i64 %68, i64* %71, align 8
  store i64 %70, i64* %RSP, align 8, !tbaa !2428
  store i64 %67, i64* %PC, align 8, !tbaa !2428
  %72 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %67, %struct.Memory* %2)
  br label %block_400586

block_4007e4:                                     ; preds = %block_400586
  %73 = add i64 %243, -12
  store i64 4196331, i64* %PC, align 8
  %74 = inttoptr i64 %73 to i32*
  store i32 13, i32* %74, align 4
  %75 = load i64, i64* %RBP, align 8
  %76 = add i64 %75, -12
  %77 = load i64, i64* %PC, align 8
  %78 = add i64 %77, 3
  store i64 %78, i64* %PC, align 8
  %79 = inttoptr i64 %76 to i32*
  %80 = load i32, i32* %79, align 4
  %81 = zext i32 %80 to i64
  store i64 %81, i64* %RDI, align 8, !tbaa !2428
  %82 = add i64 %77, -731
  br label %block_400586.backedge

block_4008de:                                     ; preds = %block_400586
  %83 = add i64 %243, -12
  store i64 4196581, i64* %PC, align 8
  %84 = inttoptr i64 %83 to i32*
  store i32 18, i32* %84, align 4
  %.pre = load i64, i64* %PC, align 8
  br label %block_4008e5

block_4009d8:                                     ; preds = %block_400586
  %85 = add i64 %243, -12
  store i64 4196831, i64* %PC, align 8
  %86 = inttoptr i64 %85 to i32*
  store i32 23, i32* %86, align 4
  %87 = load i64, i64* %PC, align 8
  %88 = tail call %struct.Memory* @sub_4009df(%struct.State* nonnull %0, i64 %87, %struct.Memory* %2)
  ret %struct.Memory* %88

block_400ad2:                                     ; preds = %block_400586
  %89 = add i64 %243, -12
  store i64 4197081, i64* %PC, align 8
  %90 = inttoptr i64 %89 to i32*
  store i32 28, i32* %90, align 4
  %91 = load i64, i64* %PC, align 8
  %92 = tail call %struct.Memory* @sub_400ad9(%struct.State* nonnull %0, i64 %91, %struct.Memory* %2)
  ret %struct.Memory* %92

block_400848:                                     ; preds = %block_400586
  %93 = add i64 %243, -12
  store i64 4196431, i64* %PC, align 8
  %94 = inttoptr i64 %93 to i32*
  store i32 15, i32* %94, align 4
  %95 = load i64, i64* %PC, align 8
  %96 = tail call %struct.Memory* @sub_40084f(%struct.State* nonnull %0, i64 %95, %struct.Memory* %2)
  ret %struct.Memory* %96

block_400942:                                     ; preds = %block_400586
  %97 = add i64 %243, -12
  store i64 4196681, i64* %PC, align 8
  %98 = inttoptr i64 %97 to i32*
  store i32 20, i32* %98, align 4
  %99 = load i64, i64* %PC, align 8
  %100 = tail call %struct.Memory* @sub_400949(%struct.State* nonnull %0, i64 %99, %struct.Memory* %2)
  ret %struct.Memory* %100

block_40074e:                                     ; preds = %block_400586
  %101 = add i64 %243, -12
  store i64 4196181, i64* %PC, align 8
  %102 = inttoptr i64 %101 to i32*
  store i32 10, i32* %102, align 4
  %103 = load i64, i64* %PC, align 8
  %104 = tail call %struct.Memory* @sub_400755(%struct.State* nonnull %0, i64 %103, %struct.Memory* %2)
  ret %struct.Memory* %104

block_400579:                                     ; preds = %block_400586
  %105 = add i64 %243, -12
  store i64 4195712, i64* %PC, align 8
  %106 = inttoptr i64 %105 to i32*
  store i32 0, i32* %106, align 4
  %107 = load i64, i64* %RSP, align 8
  %108 = load i64, i64* %PC, align 8
  %109 = add i64 %107, 48
  store i64 %109, i64* %RSP, align 8, !tbaa !2428
  %110 = icmp ugt i64 %107, -49
  %111 = zext i1 %110 to i8
  store i8 %111, i8* %4, align 1, !tbaa !2432
  %112 = trunc i64 %109 to i32
  %113 = and i32 %112, 255
  %114 = tail call i32 @llvm.ctpop.i32(i32 %113) #9
  %115 = trunc i32 %114 to i8
  %116 = and i8 %115, 1
  %117 = xor i8 %116, 1
  store i8 %117, i8* %5, align 1, !tbaa !2446
  %118 = xor i64 %107, 16
  %119 = xor i64 %118, %109
  %120 = lshr i64 %119, 4
  %121 = trunc i64 %120 to i8
  %122 = and i8 %121, 1
  store i8 %122, i8* %6, align 1, !tbaa !2447
  %123 = icmp eq i64 %109, 0
  %124 = zext i1 %123 to i8
  store i8 %124, i8* %7, align 1, !tbaa !2448
  %125 = lshr i64 %109, 63
  %126 = trunc i64 %125 to i8
  store i8 %126, i8* %8, align 1, !tbaa !2449
  %127 = lshr i64 %107, 63
  %128 = xor i64 %125, %127
  %129 = add nuw nsw i64 %128, %125
  %130 = icmp eq i64 %129, 2
  %131 = zext i1 %130 to i8
  store i8 %131, i8* %9, align 1, !tbaa !2450
  %132 = add i64 %108, 5
  store i64 %132, i64* %PC, align 8
  %133 = add i64 %107, 56
  %134 = inttoptr i64 %109 to i64*
  %135 = load i64, i64* %134, align 8
  store i64 %135, i64* %RBP, align 8, !tbaa !2428
  store i64 %133, i64* %RSP, align 8, !tbaa !2428
  %136 = add i64 %108, 6
  store i64 %136, i64* %PC, align 8
  %137 = inttoptr i64 %133 to i64*
  %138 = load i64, i64* %137, align 8
  store i64 %138, i64* %PC, align 8, !tbaa !2428
  %139 = add i64 %107, 64
  store i64 %139, i64* %RSP, align 8, !tbaa !2428
  ret %struct.Memory* %2

block_400a3c:                                     ; preds = %block_400586
  %140 = add i64 %243, -12
  store i64 4196931, i64* %PC, align 8
  %141 = inttoptr i64 %140 to i32*
  store i32 25, i32* %141, align 4
  %142 = load i64, i64* %PC, align 8
  %143 = tail call %struct.Memory* @sub_400a43(%struct.State* nonnull %0, i64 %142, %struct.Memory* %2)
  ret %struct.Memory* %143

block_400b36:                                     ; preds = %block_400586
  %144 = add i64 %243, -12
  store i64 4197181, i64* %PC, align 8
  %145 = inttoptr i64 %144 to i32*
  store i32 30, i32* %145, align 4
  %146 = load i64, i64* %RBP, align 8
  %147 = add i64 %146, -12
  %148 = load i64, i64* %PC, align 8
  %149 = add i64 %148, 3
  store i64 %149, i64* %PC, align 8
  %150 = inttoptr i64 %147 to i32*
  %151 = load i32, i32* %150, align 4
  %152 = zext i32 %151 to i64
  store i64 %152, i64* %RDI, align 8, !tbaa !2428
  %153 = add i64 %148, -1581
  br label %block_400586.backedge

block_4005be:                                     ; preds = %block_400586
  %154 = add i64 %243, -12
  store i64 4195781, i64* %PC, align 8
  %155 = inttoptr i64 %154 to i32*
  store i32 2, i32* %155, align 4
  %156 = load i64, i64* %PC, align 8
  %157 = tail call %struct.Memory* @sub_4005c5(%struct.State* nonnull %0, i64 %156, %struct.Memory* %2)
  ret %struct.Memory* %157

block_4008ac:                                     ; preds = %block_400586
  %158 = add i64 %243, -12
  store i64 4196531, i64* %PC, align 8
  %159 = inttoptr i64 %158 to i32*
  store i32 17, i32* %159, align 4
  %160 = load i64, i64* %RBP, align 8
  %161 = add i64 %160, -12
  %162 = load i64, i64* %PC, align 8
  %163 = add i64 %162, 3
  store i64 %163, i64* %PC, align 8
  %164 = inttoptr i64 %161 to i32*
  %165 = load i32, i32* %164, align 4
  %166 = zext i32 %165 to i64
  store i64 %166, i64* %RDI, align 8, !tbaa !2428
  %167 = add i64 %162, -931
  br label %block_400586.backedge

block_4006b8:                                     ; preds = %block_400586
  %168 = add i64 %243, -12
  store i64 4196031, i64* %PC, align 8
  %169 = inttoptr i64 %168 to i32*
  store i32 7, i32* %169, align 4
  %170 = load i64, i64* %RBP, align 8
  %171 = add i64 %170, -12
  %172 = load i64, i64* %PC, align 8
  %173 = add i64 %172, 3
  store i64 %173, i64* %PC, align 8
  %174 = inttoptr i64 %171 to i32*
  %175 = load i32, i32* %174, align 4
  %176 = zext i32 %175 to i64
  store i64 %176, i64* %RDI, align 8, !tbaa !2428
  %177 = add i64 %172, -431
  br label %block_400586.backedge

block_4009a6:                                     ; preds = %block_400586
  %178 = add i64 %243, -12
  store i64 4196781, i64* %PC, align 8
  %179 = inttoptr i64 %178 to i32*
  store i32 22, i32* %179, align 4
  %180 = load i64, i64* %RBP, align 8
  %181 = add i64 %180, -12
  %182 = load i64, i64* %PC, align 8
  %183 = add i64 %182, 3
  store i64 %183, i64* %PC, align 8
  %184 = inttoptr i64 %181 to i32*
  %185 = load i32, i32* %184, align 4
  %186 = zext i32 %185 to i64
  store i64 %186, i64* %RDI, align 8, !tbaa !2428
  %187 = add i64 %182, -1181
  br label %block_400586.backedge

block_4005f0:                                     ; preds = %block_400586
  %188 = add i64 %243, -12
  store i64 4195831, i64* %PC, align 8
  %189 = inttoptr i64 %188 to i32*
  store i32 3, i32* %189, align 4
  %190 = load i64, i64* %RBP, align 8
  %191 = add i64 %190, -12
  %192 = load i64, i64* %PC, align 8
  %193 = add i64 %192, 3
  store i64 %193, i64* %PC, align 8
  %194 = inttoptr i64 %191 to i32*
  %195 = load i32, i32* %194, align 4
  %196 = zext i32 %195 to i64
  store i64 %196, i64* %RDI, align 8, !tbaa !2428
  %197 = add i64 %192, -231
  br label %block_400586.backedge

block_400586:                                     ; preds = %block_400586.backedge, %block_4008e5
  %.sink5 = phi i64 [ 901, %block_4008e5 ], [ %.sink5.be, %block_400586.backedge ]
  %198 = load i64, i64* %RBP, align 8
  %199 = add i64 %198, -8
  %200 = load i64, i64* %PC, align 8
  %201 = add i64 %200, 4
  store i64 %201, i64* %PC, align 8
  %202 = inttoptr i64 %199 to i64*
  %203 = load i64, i64* %202, align 8
  store i64 %203, i64* %RAX, align 8, !tbaa !2428
  %204 = add i64 %203, 4
  store i64 %204, i64* %RCX, align 8, !tbaa !2428
  %205 = icmp ugt i64 %203, -5
  %206 = zext i1 %205 to i8
  store i8 %206, i8* %4, align 1, !tbaa !2432
  %207 = trunc i64 %204 to i32
  %208 = and i32 %207, 255
  %209 = tail call i32 @llvm.ctpop.i32(i32 %208) #9
  %210 = trunc i32 %209 to i8
  %211 = and i8 %210, 1
  %212 = xor i8 %211, 1
  store i8 %212, i8* %5, align 1, !tbaa !2446
  %213 = xor i64 %204, %203
  %214 = lshr i64 %213, 4
  %215 = trunc i64 %214 to i8
  %216 = and i8 %215, 1
  store i8 %216, i8* %6, align 1, !tbaa !2447
  %217 = icmp eq i64 %204, 0
  %218 = zext i1 %217 to i8
  store i8 %218, i8* %7, align 1, !tbaa !2448
  %219 = lshr i64 %204, 63
  %220 = trunc i64 %219 to i8
  store i8 %220, i8* %8, align 1, !tbaa !2449
  %221 = lshr i64 %203, 63
  %222 = xor i64 %219, %221
  %223 = add nuw nsw i64 %222, %219
  %224 = icmp eq i64 %223, 2
  %225 = zext i1 %224 to i8
  store i8 %225, i8* %9, align 1, !tbaa !2450
  %226 = add i64 %200, 15
  store i64 %226, i64* %PC, align 8
  store i64 %204, i64* %202, align 8
  %227 = load i32*, i32** %10, align 8
  %228 = load i64, i64* %PC, align 8
  %229 = add i64 %228, 3
  store i64 %229, i64* %PC, align 8
  %230 = load i32, i32* %227, align 4
  %231 = sext i32 %230 to i64
  store i64 %231, i64* %RAX, align 8, !tbaa !2428
  %232 = shl nsw i64 %231, 3
  %233 = add i64 %232, add (i64 ptrtoint (%seg_602020__data_type* @seg_602020__data to i64), i64 16)
  %234 = add i64 %228, 11
  store i64 %234, i64* %PC, align 8
  %235 = inttoptr i64 %233 to i64*
  %236 = load i64, i64* %235, align 8
  store i64 %236, i64* %RAX, align 8, !tbaa !2428
  %237 = load i64, i64* %RBP, align 8
  %238 = add i64 %237, -40
  %239 = add i64 %228, 15
  store i64 %239, i64* %PC, align 8
  %240 = inttoptr i64 %238 to i64*
  store i64 %236, i64* %240, align 8
  %241 = load i64, i64* %PC, align 8
  %242 = sub i64 %241, %.sink5
  %243 = load i64, i64* %RBP, align 8
  %244 = add i64 %243, -40
  %245 = add i64 %242, 4
  store i64 %245, i64* %PC, align 8
  %246 = inttoptr i64 %244 to i64*
  %247 = load i64, i64* %246, align 8
  store i64 %247, i64* %RAX, align 8, !tbaa !2428
  store i64 %247, i64* %PC, align 8, !tbaa !2428
  switch i64 %247, label %314 [
    i64 4195924, label %block_400654
    i64 4196224, label %block_400780
    i64 4196274, label %block_4007b2
    i64 4197124, label %block_400b04
    i64 4195974, label %block_400686
    i64 4196874, label %block_400a0a
    i64 4196624, label %block_400910
    i64 4196374, label %block_400816
    i64 4196124, label %block_40071c
    i64 4197074, label %block_400ad2
    i64 4196574, label %block_4008de
    i64 4196324, label %block_4007e4
    i64 4197224, label %block_400b68
    i64 4196074, label %block_4006ea
    i64 4196474, label %block_40087a
    i64 4196824, label %block_4009d8
    i64 4195724, label %block_40058c
    i64 4196724, label %block_400974
    i64 4196424, label %block_400848
    i64 4195824, label %block_4005f0
    i64 4196674, label %block_400942
    i64 4196174, label %block_40074e
    i64 4196974, label %block_400a6e
    i64 4195705, label %block_400579
    i64 4196924, label %block_400a3c
    i64 4195774, label %block_4005be
    i64 4197174, label %block_400b36
    i64 4196024, label %block_4006b8
    i64 4196524, label %block_4008ac
    i64 4196774, label %block_4009a6
    i64 4195874, label %block_400622
    i64 4197024, label %block_400aa0
  ]

block_400622:                                     ; preds = %block_400586
  %248 = add i64 %243, -12
  store i64 4195881, i64* %PC, align 8
  %249 = inttoptr i64 %248 to i32*
  store i32 4, i32* %249, align 4
  %250 = load i64, i64* %RBP, align 8
  %251 = add i64 %250, -12
  %252 = load i64, i64* %PC, align 8
  %253 = add i64 %252, 3
  store i64 %253, i64* %PC, align 8
  %254 = inttoptr i64 %251 to i32*
  %255 = load i32, i32* %254, align 4
  %256 = zext i32 %255 to i64
  store i64 %256, i64* %RDI, align 8, !tbaa !2428
  %257 = add i64 %252, -281
  br label %block_400586.backedge

block_400aa0:                                     ; preds = %block_400586
  %258 = add i64 %243, -12
  store i64 4197031, i64* %PC, align 8
  %259 = inttoptr i64 %258 to i32*
  store i32 27, i32* %259, align 4
  %260 = load i64, i64* %RBP, align 8
  %261 = add i64 %260, -12
  %262 = load i64, i64* %PC, align 8
  %263 = add i64 %262, 3
  store i64 %263, i64* %PC, align 8
  %264 = inttoptr i64 %261 to i32*
  %265 = load i32, i32* %264, align 4
  %266 = zext i32 %265 to i64
  store i64 %266, i64* %RDI, align 8, !tbaa !2428
  %267 = add i64 %262, -1431
  br label %block_400586.backedge

block_40071c:                                     ; preds = %block_400586
  %268 = add i64 %243, -12
  store i64 4196131, i64* %PC, align 8
  %269 = inttoptr i64 %268 to i32*
  store i32 9, i32* %269, align 4
  %270 = load i64, i64* %PC, align 8
  %271 = tail call %struct.Memory* @sub_400723(%struct.State* nonnull %0, i64 %270, %struct.Memory* %2)
  ret %struct.Memory* %271

block_400816:                                     ; preds = %block_400586
  %272 = add i64 %243, -12
  store i64 4196381, i64* %PC, align 8
  %273 = inttoptr i64 %272 to i32*
  store i32 14, i32* %273, align 4
  %274 = load i64, i64* %PC, align 8
  %275 = tail call %struct.Memory* @sub_40081d(%struct.State* nonnull %0, i64 %274, %struct.Memory* %2)
  ret %struct.Memory* %275

block_400910:                                     ; preds = %block_400586
  %276 = add i64 %243, -12
  store i64 4196631, i64* %PC, align 8
  %277 = inttoptr i64 %276 to i32*
  store i32 19, i32* %277, align 4
  %278 = load i64, i64* %PC, align 8
  %279 = tail call %struct.Memory* @sub_400917(%struct.State* nonnull %0, i64 %278, %struct.Memory* %2)
  ret %struct.Memory* %279

block_40058c:                                     ; preds = %block_400586
  %280 = add i64 %243, -12
  store i64 4195731, i64* %PC, align 8
  %281 = inttoptr i64 %280 to i32*
  store i32 1, i32* %281, align 4
  %282 = load i64, i64* %PC, align 8
  %283 = tail call %struct.Memory* @sub_400593(%struct.State* nonnull %0, i64 %282, %struct.Memory* %2)
  ret %struct.Memory* %283

block_400a0a:                                     ; preds = %block_400586
  %284 = add i64 %243, -12
  store i64 4196881, i64* %PC, align 8
  %285 = inttoptr i64 %284 to i32*
  store i32 24, i32* %285, align 4
  %286 = load i64, i64* %PC, align 8
  %287 = tail call %struct.Memory* @sub_400a11(%struct.State* nonnull %0, i64 %286, %struct.Memory* %2)
  ret %struct.Memory* %287

block_400686:                                     ; preds = %block_400586
  %288 = add i64 %243, -12
  store i64 4195981, i64* %PC, align 8
  %289 = inttoptr i64 %288 to i32*
  store i32 6, i32* %289, align 4
  %290 = load i64, i64* %PC, align 8
  %291 = tail call %struct.Memory* @sub_40068d(%struct.State* nonnull %0, i64 %290, %struct.Memory* %2)
  ret %struct.Memory* %291

block_400b04:                                     ; preds = %block_400586
  %292 = add i64 %243, -12
  store i64 4197131, i64* %PC, align 8
  %293 = inttoptr i64 %292 to i32*
  store i32 29, i32* %293, align 4
  %294 = load i64, i64* %PC, align 8
  %295 = tail call %struct.Memory* @sub_400b0b(%struct.State* nonnull %0, i64 %294, %struct.Memory* %2)
  ret %struct.Memory* %295

block_4007b2:                                     ; preds = %block_400586
  %296 = add i64 %243, -12
  store i64 4196281, i64* %PC, align 8
  %297 = inttoptr i64 %296 to i32*
  store i32 12, i32* %297, align 4
  %298 = load i64, i64* %RBP, align 8
  %299 = add i64 %298, -12
  %300 = load i64, i64* %PC, align 8
  %301 = add i64 %300, 3
  store i64 %301, i64* %PC, align 8
  %302 = inttoptr i64 %299 to i32*
  %303 = load i32, i32* %302, align 4
  %304 = zext i32 %303 to i64
  store i64 %304, i64* %RDI, align 8, !tbaa !2428
  %305 = add i64 %300, -681
  br label %block_400586.backedge

block_400780:                                     ; preds = %block_400586
  %306 = add i64 %243, -12
  store i64 4196231, i64* %PC, align 8
  %307 = inttoptr i64 %306 to i32*
  store i32 11, i32* %307, align 4
  %308 = load i64, i64* %PC, align 8
  %309 = tail call %struct.Memory* @sub_400787(%struct.State* nonnull %0, i64 %308, %struct.Memory* %2)
  ret %struct.Memory* %309

block_400654:                                     ; preds = %block_400586
  %310 = add i64 %243, -12
  store i64 4195931, i64* %PC, align 8
  %311 = inttoptr i64 %310 to i32*
  store i32 5, i32* %311, align 4
  %312 = load i64, i64* %PC, align 8
  %313 = tail call %struct.Memory* @sub_40065b(%struct.State* nonnull %0, i64 %312, %struct.Memory* %2)
  ret %struct.Memory* %313

; <label>:314:                                    ; preds = %block_400586
  %315 = tail call %struct.Memory* @__remill_jump(%struct.State* nonnull %0, i64 %247, %struct.Memory* %2)
  ret %struct.Memory* %315
}

; Function Attrs: noinline nounwind
define %struct.Memory* @sub_400787(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) local_unnamed_addr #6 {
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %PC, align 8
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RSP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %10 = bitcast i64* %RAX to i32**
  br label %block_400787

block_40087a:                                     ; preds = %block_400586
  %11 = add i64 %288, -12
  store i64 4196481, i64* %PC, align 8
  %12 = inttoptr i64 %11 to i32*
  store i32 16, i32* %12, align 4
  %13 = load i64, i64* %PC, align 8
  %14 = tail call %struct.Memory* @sub_400881(%struct.State* nonnull %0, i64 %13, %struct.Memory* %2)
  ret %struct.Memory* %14

block_400974:                                     ; preds = %block_400586
  %15 = add i64 %288, -12
  store i64 4196731, i64* %PC, align 8
  %16 = inttoptr i64 %15 to i32*
  store i32 21, i32* %16, align 4
  %17 = load i64, i64* %RBP, align 8
  %18 = add i64 %17, -12
  %19 = load i64, i64* %PC, align 8
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC, align 8
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RDI, align 8, !tbaa !2428
  %24 = add i64 %19, -1131
  br label %block_400586.backedge

block_400586.backedge:                            ; preds = %block_400974, %block_4005f0, %block_400a6e, %block_4006ea, %block_400b68, %block_4007e4, %block_4008de, %block_4009d8, %block_400654, %block_400ad2, %block_40074e, %block_400848, %block_400942, %block_4006b8, %block_400b36, %block_4007b2, %block_4008ac, %block_4009a6, %block_400622, %block_400aa0, %block_40071c, %block_400816, %block_400910, %block_40058c, %block_400a0a, %block_400686, %block_400b04
  %.sink114 = phi i64 [ %19, %block_400974 ], [ %34, %block_4005f0 ], [ %44, %block_400a6e ], [ %54, %block_4006ea ], [ %64, %block_400b68 ], [ %74, %block_4007e4 ], [ %84, %block_4008de ], [ %94, %block_4009d8 ], [ %104, %block_400654 ], [ %114, %block_400ad2 ], [ %159, %block_40074e ], [ %169, %block_400848 ], [ %179, %block_400942 ], [ %193, %block_4006b8 ], [ %203, %block_400b36 ], [ %213, %block_4007b2 ], [ %223, %block_4008ac ], [ %233, %block_4009a6 ], [ %297, %block_400622 ], [ %307, %block_400aa0 ], [ %317, %block_40071c ], [ %327, %block_400816 ], [ %337, %block_400910 ], [ %347, %block_40058c ], [ %357, %block_400a0a ], [ %380, %block_400686 ], [ %390, %block_400b04 ]
  %.sink109 = phi i64 [ %24, %block_400974 ], [ %39, %block_4005f0 ], [ %49, %block_400a6e ], [ %59, %block_4006ea ], [ %69, %block_400b68 ], [ %79, %block_4007e4 ], [ %89, %block_4008de ], [ %99, %block_4009d8 ], [ %109, %block_400654 ], [ %119, %block_400ad2 ], [ %164, %block_40074e ], [ %174, %block_400848 ], [ %184, %block_400942 ], [ %198, %block_4006b8 ], [ %208, %block_400b36 ], [ %218, %block_4007b2 ], [ %228, %block_4008ac ], [ %238, %block_4009a6 ], [ %302, %block_400622 ], [ %312, %block_400aa0 ], [ %322, %block_40071c ], [ %332, %block_400816 ], [ %342, %block_400910 ], [ %352, %block_40058c ], [ %362, %block_400a0a ], [ %385, %block_400686 ], [ %395, %block_400b04 ]
  %.sink5.be = phi i64 [ 1051, %block_400974 ], [ 151, %block_4005f0 ], [ 1301, %block_400a6e ], [ 401, %block_4006ea ], [ 1551, %block_400b68 ], [ 651, %block_4007e4 ], [ 901, %block_4008de ], [ 1151, %block_4009d8 ], [ 251, %block_400654 ], [ 1401, %block_400ad2 ], [ 501, %block_40074e ], [ 751, %block_400848 ], [ 1001, %block_400942 ], [ 351, %block_4006b8 ], [ 1501, %block_400b36 ], [ 601, %block_4007b2 ], [ 851, %block_4008ac ], [ 1101, %block_4009a6 ], [ 201, %block_400622 ], [ 1351, %block_400aa0 ], [ 451, %block_40071c ], [ 701, %block_400816 ], [ 951, %block_400910 ], [ 51, %block_40058c ], [ 1201, %block_400a0a ], [ 301, %block_400686 ], [ 1451, %block_400b04 ]
  %25 = add i64 %.sink114, 8
  %26 = load i64, i64* %RSP, align 8, !tbaa !2428
  %27 = add i64 %26, -8
  %28 = inttoptr i64 %27 to i64*
  store i64 %25, i64* %28, align 8
  store i64 %27, i64* %RSP, align 8, !tbaa !2428
  store i64 %.sink109, i64* %PC, align 8, !tbaa !2428
  %29 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %.sink109, %struct.Memory* %2)
  br label %block_400586

block_4005f0:                                     ; preds = %block_400586
  %30 = add i64 %288, -12
  store i64 4195831, i64* %PC, align 8
  %31 = inttoptr i64 %30 to i32*
  store i32 3, i32* %31, align 4
  %32 = load i64, i64* %RBP, align 8
  %33 = add i64 %32, -12
  %34 = load i64, i64* %PC, align 8
  %35 = add i64 %34, 3
  store i64 %35, i64* %PC, align 8
  %36 = inttoptr i64 %33 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i64
  store i64 %38, i64* %RDI, align 8, !tbaa !2428
  %39 = add i64 %34, -231
  br label %block_400586.backedge

block_400a6e:                                     ; preds = %block_400586
  %40 = add i64 %288, -12
  store i64 4196981, i64* %PC, align 8
  %41 = inttoptr i64 %40 to i32*
  store i32 26, i32* %41, align 4
  %42 = load i64, i64* %RBP, align 8
  %43 = add i64 %42, -12
  %44 = load i64, i64* %PC, align 8
  %45 = add i64 %44, 3
  store i64 %45, i64* %PC, align 8
  %46 = inttoptr i64 %43 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = zext i32 %47 to i64
  store i64 %48, i64* %RDI, align 8, !tbaa !2428
  %49 = add i64 %44, -1381
  br label %block_400586.backedge

block_4006ea:                                     ; preds = %block_400586
  %50 = add i64 %288, -12
  store i64 4196081, i64* %PC, align 8
  %51 = inttoptr i64 %50 to i32*
  store i32 8, i32* %51, align 4
  %52 = load i64, i64* %RBP, align 8
  %53 = add i64 %52, -12
  %54 = load i64, i64* %PC, align 8
  %55 = add i64 %54, 3
  store i64 %55, i64* %PC, align 8
  %56 = inttoptr i64 %53 to i32*
  %57 = load i32, i32* %56, align 4
  %58 = zext i32 %57 to i64
  store i64 %58, i64* %RDI, align 8, !tbaa !2428
  %59 = add i64 %54, -481
  br label %block_400586.backedge

block_400b68:                                     ; preds = %block_400586
  %60 = add i64 %288, -12
  store i64 4197231, i64* %PC, align 8
  %61 = inttoptr i64 %60 to i32*
  store i32 31, i32* %61, align 4
  %62 = load i64, i64* %RBP, align 8
  %63 = add i64 %62, -12
  %64 = load i64, i64* %PC, align 8
  %65 = add i64 %64, 3
  store i64 %65, i64* %PC, align 8
  %66 = inttoptr i64 %63 to i32*
  %67 = load i32, i32* %66, align 4
  %68 = zext i32 %67 to i64
  store i64 %68, i64* %RDI, align 8, !tbaa !2428
  %69 = add i64 %64, -1631
  br label %block_400586.backedge

block_4007e4:                                     ; preds = %block_400586
  %70 = add i64 %288, -12
  store i64 4196331, i64* %PC, align 8
  %71 = inttoptr i64 %70 to i32*
  store i32 13, i32* %71, align 4
  %72 = load i64, i64* %RBP, align 8
  %73 = add i64 %72, -12
  %74 = load i64, i64* %PC, align 8
  %75 = add i64 %74, 3
  store i64 %75, i64* %PC, align 8
  %76 = inttoptr i64 %73 to i32*
  %77 = load i32, i32* %76, align 4
  %78 = zext i32 %77 to i64
  store i64 %78, i64* %RDI, align 8, !tbaa !2428
  %79 = add i64 %74, -731
  br label %block_400586.backedge

block_4008de:                                     ; preds = %block_400586
  %80 = add i64 %288, -12
  store i64 4196581, i64* %PC, align 8
  %81 = inttoptr i64 %80 to i32*
  store i32 18, i32* %81, align 4
  %82 = load i64, i64* %RBP, align 8
  %83 = add i64 %82, -12
  %84 = load i64, i64* %PC, align 8
  %85 = add i64 %84, 3
  store i64 %85, i64* %PC, align 8
  %86 = inttoptr i64 %83 to i32*
  %87 = load i32, i32* %86, align 4
  %88 = zext i32 %87 to i64
  store i64 %88, i64* %RDI, align 8, !tbaa !2428
  %89 = add i64 %84, -981
  br label %block_400586.backedge

block_4009d8:                                     ; preds = %block_400586
  %90 = add i64 %288, -12
  store i64 4196831, i64* %PC, align 8
  %91 = inttoptr i64 %90 to i32*
  store i32 23, i32* %91, align 4
  %92 = load i64, i64* %RBP, align 8
  %93 = add i64 %92, -12
  %94 = load i64, i64* %PC, align 8
  %95 = add i64 %94, 3
  store i64 %95, i64* %PC, align 8
  %96 = inttoptr i64 %93 to i32*
  %97 = load i32, i32* %96, align 4
  %98 = zext i32 %97 to i64
  store i64 %98, i64* %RDI, align 8, !tbaa !2428
  %99 = add i64 %94, -1231
  br label %block_400586.backedge

block_400654:                                     ; preds = %block_400586
  %100 = add i64 %288, -12
  store i64 4195931, i64* %PC, align 8
  %101 = inttoptr i64 %100 to i32*
  store i32 5, i32* %101, align 4
  %102 = load i64, i64* %RBP, align 8
  %103 = add i64 %102, -12
  %104 = load i64, i64* %PC, align 8
  %105 = add i64 %104, 3
  store i64 %105, i64* %PC, align 8
  %106 = inttoptr i64 %103 to i32*
  %107 = load i32, i32* %106, align 4
  %108 = zext i32 %107 to i64
  store i64 %108, i64* %RDI, align 8, !tbaa !2428
  %109 = add i64 %104, -331
  br label %block_400586.backedge

block_400ad2:                                     ; preds = %block_400586
  %110 = add i64 %288, -12
  store i64 4197081, i64* %PC, align 8
  %111 = inttoptr i64 %110 to i32*
  store i32 28, i32* %111, align 4
  %112 = load i64, i64* %RBP, align 8
  %113 = add i64 %112, -12
  %114 = load i64, i64* %PC, align 8
  %115 = add i64 %114, 3
  store i64 %115, i64* %PC, align 8
  %116 = inttoptr i64 %113 to i32*
  %117 = load i32, i32* %116, align 4
  %118 = zext i32 %117 to i64
  store i64 %118, i64* %RDI, align 8, !tbaa !2428
  %119 = add i64 %114, -1481
  br label %block_400586.backedge

block_400579:                                     ; preds = %block_400586
  %120 = add i64 %288, -12
  store i64 4195712, i64* %PC, align 8
  %121 = inttoptr i64 %120 to i32*
  store i32 0, i32* %121, align 4
  %122 = load i64, i64* %RSP, align 8
  %123 = load i64, i64* %PC, align 8
  %124 = add i64 %122, 48
  store i64 %124, i64* %RSP, align 8, !tbaa !2428
  %125 = icmp ugt i64 %122, -49
  %126 = zext i1 %125 to i8
  store i8 %126, i8* %4, align 1, !tbaa !2432
  %127 = trunc i64 %124 to i32
  %128 = and i32 %127, 255
  %129 = tail call i32 @llvm.ctpop.i32(i32 %128) #9
  %130 = trunc i32 %129 to i8
  %131 = and i8 %130, 1
  %132 = xor i8 %131, 1
  store i8 %132, i8* %5, align 1, !tbaa !2446
  %133 = xor i64 %122, 16
  %134 = xor i64 %133, %124
  %135 = lshr i64 %134, 4
  %136 = trunc i64 %135 to i8
  %137 = and i8 %136, 1
  store i8 %137, i8* %6, align 1, !tbaa !2447
  %138 = icmp eq i64 %124, 0
  %139 = zext i1 %138 to i8
  store i8 %139, i8* %7, align 1, !tbaa !2448
  %140 = lshr i64 %124, 63
  %141 = trunc i64 %140 to i8
  store i8 %141, i8* %8, align 1, !tbaa !2449
  %142 = lshr i64 %122, 63
  %143 = xor i64 %140, %142
  %144 = add nuw nsw i64 %143, %140
  %145 = icmp eq i64 %144, 2
  %146 = zext i1 %145 to i8
  store i8 %146, i8* %9, align 1, !tbaa !2450
  %147 = add i64 %123, 5
  store i64 %147, i64* %PC, align 8
  %148 = add i64 %122, 56
  %149 = inttoptr i64 %124 to i64*
  %150 = load i64, i64* %149, align 8
  store i64 %150, i64* %RBP, align 8, !tbaa !2428
  store i64 %148, i64* %RSP, align 8, !tbaa !2428
  %151 = add i64 %123, 6
  store i64 %151, i64* %PC, align 8
  %152 = inttoptr i64 %148 to i64*
  %153 = load i64, i64* %152, align 8
  store i64 %153, i64* %PC, align 8, !tbaa !2428
  %154 = add i64 %122, 64
  store i64 %154, i64* %RSP, align 8, !tbaa !2428
  ret %struct.Memory* %2

block_40074e:                                     ; preds = %block_400586
  %155 = add i64 %288, -12
  store i64 4196181, i64* %PC, align 8
  %156 = inttoptr i64 %155 to i32*
  store i32 10, i32* %156, align 4
  %157 = load i64, i64* %RBP, align 8
  %158 = add i64 %157, -12
  %159 = load i64, i64* %PC, align 8
  %160 = add i64 %159, 3
  store i64 %160, i64* %PC, align 8
  %161 = inttoptr i64 %158 to i32*
  %162 = load i32, i32* %161, align 4
  %163 = zext i32 %162 to i64
  store i64 %163, i64* %RDI, align 8, !tbaa !2428
  %164 = add i64 %159, -581
  br label %block_400586.backedge

block_400848:                                     ; preds = %block_400586
  %165 = add i64 %288, -12
  store i64 4196431, i64* %PC, align 8
  %166 = inttoptr i64 %165 to i32*
  store i32 15, i32* %166, align 4
  %167 = load i64, i64* %RBP, align 8
  %168 = add i64 %167, -12
  %169 = load i64, i64* %PC, align 8
  %170 = add i64 %169, 3
  store i64 %170, i64* %PC, align 8
  %171 = inttoptr i64 %168 to i32*
  %172 = load i32, i32* %171, align 4
  %173 = zext i32 %172 to i64
  store i64 %173, i64* %RDI, align 8, !tbaa !2428
  %174 = add i64 %169, -831
  br label %block_400586.backedge

block_400942:                                     ; preds = %block_400586
  %175 = add i64 %288, -12
  store i64 4196681, i64* %PC, align 8
  %176 = inttoptr i64 %175 to i32*
  store i32 20, i32* %176, align 4
  %177 = load i64, i64* %RBP, align 8
  %178 = add i64 %177, -12
  %179 = load i64, i64* %PC, align 8
  %180 = add i64 %179, 3
  store i64 %180, i64* %PC, align 8
  %181 = inttoptr i64 %178 to i32*
  %182 = load i32, i32* %181, align 4
  %183 = zext i32 %182 to i64
  store i64 %183, i64* %RDI, align 8, !tbaa !2428
  %184 = add i64 %179, -1081
  br label %block_400586.backedge

block_4005be:                                     ; preds = %block_400586
  %185 = add i64 %288, -12
  store i64 4195781, i64* %PC, align 8
  %186 = inttoptr i64 %185 to i32*
  store i32 2, i32* %186, align 4
  %187 = load i64, i64* %PC, align 8
  %188 = tail call %struct.Memory* @sub_4005c5(%struct.State* nonnull %0, i64 %187, %struct.Memory* %2)
  ret %struct.Memory* %188

block_4006b8:                                     ; preds = %block_400586
  %189 = add i64 %288, -12
  store i64 4196031, i64* %PC, align 8
  %190 = inttoptr i64 %189 to i32*
  store i32 7, i32* %190, align 4
  %191 = load i64, i64* %RBP, align 8
  %192 = add i64 %191, -12
  %193 = load i64, i64* %PC, align 8
  %194 = add i64 %193, 3
  store i64 %194, i64* %PC, align 8
  %195 = inttoptr i64 %192 to i32*
  %196 = load i32, i32* %195, align 4
  %197 = zext i32 %196 to i64
  store i64 %197, i64* %RDI, align 8, !tbaa !2428
  %198 = add i64 %193, -431
  br label %block_400586.backedge

block_400b36:                                     ; preds = %block_400586
  %199 = add i64 %288, -12
  store i64 4197181, i64* %PC, align 8
  %200 = inttoptr i64 %199 to i32*
  store i32 30, i32* %200, align 4
  %201 = load i64, i64* %RBP, align 8
  %202 = add i64 %201, -12
  %203 = load i64, i64* %PC, align 8
  %204 = add i64 %203, 3
  store i64 %204, i64* %PC, align 8
  %205 = inttoptr i64 %202 to i32*
  %206 = load i32, i32* %205, align 4
  %207 = zext i32 %206 to i64
  store i64 %207, i64* %RDI, align 8, !tbaa !2428
  %208 = add i64 %203, -1581
  br label %block_400586.backedge

block_4007b2:                                     ; preds = %block_400586
  %209 = add i64 %288, -12
  store i64 4196281, i64* %PC, align 8
  %210 = inttoptr i64 %209 to i32*
  store i32 12, i32* %210, align 4
  %211 = load i64, i64* %RBP, align 8
  %212 = add i64 %211, -12
  %213 = load i64, i64* %PC, align 8
  %214 = add i64 %213, 3
  store i64 %214, i64* %PC, align 8
  %215 = inttoptr i64 %212 to i32*
  %216 = load i32, i32* %215, align 4
  %217 = zext i32 %216 to i64
  store i64 %217, i64* %RDI, align 8, !tbaa !2428
  %218 = add i64 %213, -681
  br label %block_400586.backedge

block_4008ac:                                     ; preds = %block_400586
  %219 = add i64 %288, -12
  store i64 4196531, i64* %PC, align 8
  %220 = inttoptr i64 %219 to i32*
  store i32 17, i32* %220, align 4
  %221 = load i64, i64* %RBP, align 8
  %222 = add i64 %221, -12
  %223 = load i64, i64* %PC, align 8
  %224 = add i64 %223, 3
  store i64 %224, i64* %PC, align 8
  %225 = inttoptr i64 %222 to i32*
  %226 = load i32, i32* %225, align 4
  %227 = zext i32 %226 to i64
  store i64 %227, i64* %RDI, align 8, !tbaa !2428
  %228 = add i64 %223, -931
  br label %block_400586.backedge

block_4009a6:                                     ; preds = %block_400586
  %229 = add i64 %288, -12
  store i64 4196781, i64* %PC, align 8
  %230 = inttoptr i64 %229 to i32*
  store i32 22, i32* %230, align 4
  %231 = load i64, i64* %RBP, align 8
  %232 = add i64 %231, -12
  %233 = load i64, i64* %PC, align 8
  %234 = add i64 %233, 3
  store i64 %234, i64* %PC, align 8
  %235 = inttoptr i64 %232 to i32*
  %236 = load i32, i32* %235, align 4
  %237 = zext i32 %236 to i64
  store i64 %237, i64* %RDI, align 8, !tbaa !2428
  %238 = add i64 %233, -1181
  br label %block_400586.backedge

block_400a3c:                                     ; preds = %block_400586
  %239 = add i64 %288, -12
  store i64 4196931, i64* %PC, align 8
  %240 = inttoptr i64 %239 to i32*
  store i32 25, i32* %240, align 4
  %241 = load i64, i64* %PC, align 8
  %242 = tail call %struct.Memory* @sub_400a43(%struct.State* nonnull %0, i64 %241, %struct.Memory* %2)
  ret %struct.Memory* %242

block_400586:                                     ; preds = %block_400586.backedge, %block_400787
  %.sink5 = phi i64 [ 551, %block_400787 ], [ %.sink5.be, %block_400586.backedge ]
  %243 = load i64, i64* %RBP, align 8
  %244 = add i64 %243, -8
  %245 = load i64, i64* %PC, align 8
  %246 = add i64 %245, 4
  store i64 %246, i64* %PC, align 8
  %247 = inttoptr i64 %244 to i64*
  %248 = load i64, i64* %247, align 8
  store i64 %248, i64* %RAX, align 8, !tbaa !2428
  %249 = add i64 %248, 4
  store i64 %249, i64* %RCX, align 8, !tbaa !2428
  %250 = icmp ugt i64 %248, -5
  %251 = zext i1 %250 to i8
  store i8 %251, i8* %4, align 1, !tbaa !2432
  %252 = trunc i64 %249 to i32
  %253 = and i32 %252, 255
  %254 = tail call i32 @llvm.ctpop.i32(i32 %253) #9
  %255 = trunc i32 %254 to i8
  %256 = and i8 %255, 1
  %257 = xor i8 %256, 1
  store i8 %257, i8* %5, align 1, !tbaa !2446
  %258 = xor i64 %249, %248
  %259 = lshr i64 %258, 4
  %260 = trunc i64 %259 to i8
  %261 = and i8 %260, 1
  store i8 %261, i8* %6, align 1, !tbaa !2447
  %262 = icmp eq i64 %249, 0
  %263 = zext i1 %262 to i8
  store i8 %263, i8* %7, align 1, !tbaa !2448
  %264 = lshr i64 %249, 63
  %265 = trunc i64 %264 to i8
  store i8 %265, i8* %8, align 1, !tbaa !2449
  %266 = lshr i64 %248, 63
  %267 = xor i64 %264, %266
  %268 = add nuw nsw i64 %267, %264
  %269 = icmp eq i64 %268, 2
  %270 = zext i1 %269 to i8
  store i8 %270, i8* %9, align 1, !tbaa !2450
  %271 = add i64 %245, 15
  store i64 %271, i64* %PC, align 8
  store i64 %249, i64* %247, align 8
  %272 = load i32*, i32** %10, align 8
  %273 = load i64, i64* %PC, align 8
  %274 = add i64 %273, 3
  store i64 %274, i64* %PC, align 8
  %275 = load i32, i32* %272, align 4
  %276 = sext i32 %275 to i64
  store i64 %276, i64* %RAX, align 8, !tbaa !2428
  %277 = shl nsw i64 %276, 3
  %278 = add i64 %277, add (i64 ptrtoint (%seg_602020__data_type* @seg_602020__data to i64), i64 16)
  %279 = add i64 %273, 11
  store i64 %279, i64* %PC, align 8
  %280 = inttoptr i64 %278 to i64*
  %281 = load i64, i64* %280, align 8
  store i64 %281, i64* %RAX, align 8, !tbaa !2428
  %282 = load i64, i64* %RBP, align 8
  %283 = add i64 %282, -40
  %284 = add i64 %273, 15
  store i64 %284, i64* %PC, align 8
  %285 = inttoptr i64 %283 to i64*
  store i64 %281, i64* %285, align 8
  %286 = load i64, i64* %PC, align 8
  %287 = sub i64 %286, %.sink5
  %288 = load i64, i64* %RBP, align 8
  %289 = add i64 %288, -40
  %290 = add i64 %287, 4
  store i64 %290, i64* %PC, align 8
  %291 = inttoptr i64 %289 to i64*
  %292 = load i64, i64* %291, align 8
  store i64 %292, i64* %RAX, align 8, !tbaa !2428
  store i64 %292, i64* %PC, align 8, !tbaa !2428
  switch i64 %292, label %398 [
    i64 4196224, label %block_400780
    i64 4197124, label %block_400b04
    i64 4195974, label %block_400686
    i64 4196874, label %block_400a0a
    i64 4196624, label %block_400910
    i64 4196374, label %block_400816
    i64 4196124, label %block_40071c
    i64 4197024, label %block_400aa0
    i64 4195874, label %block_400622
    i64 4196574, label %block_4008de
    i64 4196324, label %block_4007e4
    i64 4197224, label %block_400b68
    i64 4196074, label %block_4006ea
    i64 4195924, label %block_400654
    i64 4197074, label %block_400ad2
    i64 4196474, label %block_40087a
    i64 4196824, label %block_4009d8
    i64 4195724, label %block_40058c
    i64 4196724, label %block_400974
    i64 4195824, label %block_4005f0
    i64 4196974, label %block_400a6e
    i64 4195705, label %block_400579
    i64 4195774, label %block_4005be
    i64 4196924, label %block_400a3c
    i64 4196174, label %block_40074e
    i64 4196424, label %block_400848
    i64 4196674, label %block_400942
    i64 4196024, label %block_4006b8
    i64 4197174, label %block_400b36
    i64 4196274, label %block_4007b2
    i64 4196524, label %block_4008ac
    i64 4196774, label %block_4009a6
  ]

block_400622:                                     ; preds = %block_400586
  %293 = add i64 %288, -12
  store i64 4195881, i64* %PC, align 8
  %294 = inttoptr i64 %293 to i32*
  store i32 4, i32* %294, align 4
  %295 = load i64, i64* %RBP, align 8
  %296 = add i64 %295, -12
  %297 = load i64, i64* %PC, align 8
  %298 = add i64 %297, 3
  store i64 %298, i64* %PC, align 8
  %299 = inttoptr i64 %296 to i32*
  %300 = load i32, i32* %299, align 4
  %301 = zext i32 %300 to i64
  store i64 %301, i64* %RDI, align 8, !tbaa !2428
  %302 = add i64 %297, -281
  br label %block_400586.backedge

block_400aa0:                                     ; preds = %block_400586
  %303 = add i64 %288, -12
  store i64 4197031, i64* %PC, align 8
  %304 = inttoptr i64 %303 to i32*
  store i32 27, i32* %304, align 4
  %305 = load i64, i64* %RBP, align 8
  %306 = add i64 %305, -12
  %307 = load i64, i64* %PC, align 8
  %308 = add i64 %307, 3
  store i64 %308, i64* %PC, align 8
  %309 = inttoptr i64 %306 to i32*
  %310 = load i32, i32* %309, align 4
  %311 = zext i32 %310 to i64
  store i64 %311, i64* %RDI, align 8, !tbaa !2428
  %312 = add i64 %307, -1431
  br label %block_400586.backedge

block_40071c:                                     ; preds = %block_400586
  %313 = add i64 %288, -12
  store i64 4196131, i64* %PC, align 8
  %314 = inttoptr i64 %313 to i32*
  store i32 9, i32* %314, align 4
  %315 = load i64, i64* %RBP, align 8
  %316 = add i64 %315, -12
  %317 = load i64, i64* %PC, align 8
  %318 = add i64 %317, 3
  store i64 %318, i64* %PC, align 8
  %319 = inttoptr i64 %316 to i32*
  %320 = load i32, i32* %319, align 4
  %321 = zext i32 %320 to i64
  store i64 %321, i64* %RDI, align 8, !tbaa !2428
  %322 = add i64 %317, -531
  br label %block_400586.backedge

block_400816:                                     ; preds = %block_400586
  %323 = add i64 %288, -12
  store i64 4196381, i64* %PC, align 8
  %324 = inttoptr i64 %323 to i32*
  store i32 14, i32* %324, align 4
  %325 = load i64, i64* %RBP, align 8
  %326 = add i64 %325, -12
  %327 = load i64, i64* %PC, align 8
  %328 = add i64 %327, 3
  store i64 %328, i64* %PC, align 8
  %329 = inttoptr i64 %326 to i32*
  %330 = load i32, i32* %329, align 4
  %331 = zext i32 %330 to i64
  store i64 %331, i64* %RDI, align 8, !tbaa !2428
  %332 = add i64 %327, -781
  br label %block_400586.backedge

block_400910:                                     ; preds = %block_400586
  %333 = add i64 %288, -12
  store i64 4196631, i64* %PC, align 8
  %334 = inttoptr i64 %333 to i32*
  store i32 19, i32* %334, align 4
  %335 = load i64, i64* %RBP, align 8
  %336 = add i64 %335, -12
  %337 = load i64, i64* %PC, align 8
  %338 = add i64 %337, 3
  store i64 %338, i64* %PC, align 8
  %339 = inttoptr i64 %336 to i32*
  %340 = load i32, i32* %339, align 4
  %341 = zext i32 %340 to i64
  store i64 %341, i64* %RDI, align 8, !tbaa !2428
  %342 = add i64 %337, -1031
  br label %block_400586.backedge

block_40058c:                                     ; preds = %block_400586
  %343 = add i64 %288, -12
  store i64 4195731, i64* %PC, align 8
  %344 = inttoptr i64 %343 to i32*
  store i32 1, i32* %344, align 4
  %345 = load i64, i64* %RBP, align 8
  %346 = add i64 %345, -12
  %347 = load i64, i64* %PC, align 8
  %348 = add i64 %347, 3
  store i64 %348, i64* %PC, align 8
  %349 = inttoptr i64 %346 to i32*
  %350 = load i32, i32* %349, align 4
  %351 = zext i32 %350 to i64
  store i64 %351, i64* %RDI, align 8, !tbaa !2428
  %352 = add i64 %347, -131
  br label %block_400586.backedge

block_400a0a:                                     ; preds = %block_400586
  %353 = add i64 %288, -12
  store i64 4196881, i64* %PC, align 8
  %354 = inttoptr i64 %353 to i32*
  store i32 24, i32* %354, align 4
  %355 = load i64, i64* %RBP, align 8
  %356 = add i64 %355, -12
  %357 = load i64, i64* %PC, align 8
  %358 = add i64 %357, 3
  store i64 %358, i64* %PC, align 8
  %359 = inttoptr i64 %356 to i32*
  %360 = load i32, i32* %359, align 4
  %361 = zext i32 %360 to i64
  store i64 %361, i64* %RDI, align 8, !tbaa !2428
  %362 = add i64 %357, -1281
  br label %block_400586.backedge

block_400787:                                     ; preds = %block_400780, %3
  %363 = phi i64 [ %.pre, %block_400780 ], [ %1, %3 ]
  %364 = load i64, i64* %RBP, align 8
  %365 = add i64 %364, -12
  %366 = add i64 %363, 3
  store i64 %366, i64* %PC, align 8
  %367 = inttoptr i64 %365 to i32*
  %368 = load i32, i32* %367, align 4
  %369 = zext i32 %368 to i64
  store i64 %369, i64* %RDI, align 8, !tbaa !2428
  %370 = add i64 %363, -631
  %371 = add i64 %363, 8
  %372 = load i64, i64* %RSP, align 8, !tbaa !2428
  %373 = add i64 %372, -8
  %374 = inttoptr i64 %373 to i64*
  store i64 %371, i64* %374, align 8
  store i64 %373, i64* %RSP, align 8, !tbaa !2428
  store i64 %370, i64* %PC, align 8, !tbaa !2428
  %375 = tail call %struct.Memory* @sub_400510_execute(%struct.State* nonnull %0, i64 %370, %struct.Memory* %2)
  br label %block_400586

block_400686:                                     ; preds = %block_400586
  %376 = add i64 %288, -12
  store i64 4195981, i64* %PC, align 8
  %377 = inttoptr i64 %376 to i32*
  store i32 6, i32* %377, align 4
  %378 = load i64, i64* %RBP, align 8
  %379 = add i64 %378, -12
  %380 = load i64, i64* %PC, align 8
  %381 = add i64 %380, 3
  store i64 %381, i64* %PC, align 8
  %382 = inttoptr i64 %379 to i32*
  %383 = load i32, i32* %382, align 4
  %384 = zext i32 %383 to i64
  store i64 %384, i64* %RDI, align 8, !tbaa !2428
  %385 = add i64 %380, -381
  br label %block_400586.backedge

block_400b04:                                     ; preds = %block_400586
  %386 = add i64 %288, -12
  store i64 4197131, i64* %PC, align 8
  %387 = inttoptr i64 %386 to i32*
  store i32 29, i32* %387, align 4
  %388 = load i64, i64* %RBP, align 8
  %389 = add i64 %388, -12
  %390 = load i64, i64* %PC, align 8
  %391 = add i64 %390, 3
  store i64 %391, i64* %PC, align 8
  %392 = inttoptr i64 %389 to i32*
  %393 = load i32, i32* %392, align 4
  %394 = zext i32 %393 to i64
  store i64 %394, i64* %RDI, align 8, !tbaa !2428
  %395 = add i64 %390, -1531
  br label %block_400586.backedge

block_400780:                                     ; preds = %block_400586
  %396 = add i64 %288, -12
  store i64 4196231, i64* %PC, align 8
  %397 = inttoptr i64 %396 to i32*
  store i32 11, i32* %397, align 4
  %.pre = load i64, i64* %PC, align 8
  br label %block_400787

; <label>:398:                                    ; preds = %block_400586
  %399 = tail call %struct.Memory* @__remill_jump(%struct.State* nonnull %0, i64 %292, %struct.Memory* %2)
  ret %struct.Memory* %399
}

; Function Attrs: noinline
declare void @__mcsema_attach_call() #5

; Function Attrs: naked nobuiltin noinline nounwind
define internal void @callback_sub_400500_frame_dummy() #8 {
  tail call void asm sideeffect "pushq $0;pushq $$0x400500;jmpq *$1;", "*m,*m,~{dirflag},~{fpsr},~{flags}"(%struct.Memory* (%struct.State*, i64, %struct.Memory*)** nonnull @1, void ()** nonnull @2) #9
  ret void
}

; Function Attrs: nounwind
define internal %struct.Memory* @callback_sub_400500_frame_dummy_wrapper(%struct.State*, i64, %struct.Memory*) #9 {
  %4 = load volatile i1, i1* @0, align 1
  br i1 %4, label %__mcsema_early_init.exit, label %5

; <label>:5:                                      ; preds = %3
  store volatile i1 true, i1* @0, align 1
  br label %__mcsema_early_init.exit

__mcsema_early_init.exit:                         ; preds = %3, %5
  %6 = tail call %struct.Memory* @sub_400500_frame_dummy(%struct.State* %0, i64 %1, %struct.Memory* %2)
  ret %struct.Memory* %6
}

; Function Attrs: naked nobuiltin noinline nounwind
define internal void @callback_sub_4004d0___do_global_dtors_aux() #8 {
  tail call void asm sideeffect "pushq $0;pushq $$0x4004d0;jmpq *$1;", "*m,*m,~{dirflag},~{fpsr},~{flags}"(%struct.Memory* (%struct.State*, i64, %struct.Memory*)** nonnull @3, void ()** nonnull @2) #9
  ret void
}

; Function Attrs: nounwind
define internal %struct.Memory* @callback_sub_4004d0___do_global_dtors_aux_wrapper(%struct.State*, i64, %struct.Memory*) #9 {
  %4 = load volatile i1, i1* @0, align 1
  br i1 %4, label %__mcsema_early_init.exit, label %5

; <label>:5:                                      ; preds = %3
  store volatile i1 true, i1* @0, align 1
  br label %__mcsema_early_init.exit

__mcsema_early_init.exit:                         ; preds = %3, %5
  %6 = tail call %struct.Memory* @sub_4004d0___do_global_dtors_aux(%struct.State* %0, i64 %1, %struct.Memory* %2)
  ret %struct.Memory* %6
}

; Function Attrs: naked nobuiltin noinline nounwind
define internal void @callback_sub_400cf0___libc_csu_fini() #8 {
  tail call void asm sideeffect "pushq $0;pushq $$0x400cf0;jmpq *$1;", "*m,*m,~{dirflag},~{fpsr},~{flags}"(%struct.Memory* (%struct.State*, i64, %struct.Memory*)** nonnull @4, void ()** nonnull @2) #9
  ret void
}

; Function Attrs: norecurse nounwind
define internal %struct.Memory* @callback_sub_400cf0___libc_csu_fini_wrapper(%struct.State* nocapture, i64, %struct.Memory* readnone returned) #10 {
  %4 = load volatile i1, i1* @0, align 1
  br i1 %4, label %__mcsema_early_init.exit, label %5

; <label>:5:                                      ; preds = %3
  store volatile i1 true, i1* @0, align 1
  br label %__mcsema_early_init.exit

__mcsema_early_init.exit:                         ; preds = %3, %5
  %6 = tail call %struct.Memory* @sub_400cf0___libc_csu_fini(%struct.State* %0, i64 %1, %struct.Memory* %2)
  ret %struct.Memory* %6
}

; Function Attrs: naked nobuiltin noinline nounwind
define internal void @callback_sub_400c80___libc_csu_init() #8 {
  tail call void asm sideeffect "pushq $0;pushq $$0x400c80;jmpq *$1;", "*m,*m,~{dirflag},~{fpsr},~{flags}"(%struct.Memory* (%struct.State*, i64, %struct.Memory*)** nonnull @5, void ()** nonnull @2) #9
  ret void
}

; Function Attrs: nounwind
define internal %struct.Memory* @callback_sub_400c80___libc_csu_init_wrapper(%struct.State*, i64, %struct.Memory*) #9 {
  %4 = load volatile i1, i1* @0, align 1
  br i1 %4, label %__mcsema_early_init.exit, label %5

; <label>:5:                                      ; preds = %3
  store volatile i1 true, i1* @0, align 1
  br label %__mcsema_early_init.exit

__mcsema_early_init.exit:                         ; preds = %3, %5
  %6 = tail call %struct.Memory* @sub_400c80___libc_csu_init(%struct.State* %0, i64 %1, %struct.Memory* %2)
  ret %struct.Memory* %6
}

; Function Attrs: naked nobuiltin noinline nounwind
define dllexport void @main() #8 {
  tail call void asm sideeffect "pushq $0;pushq $$0x400ba0;jmpq *$1;", "*m,*m,~{dirflag},~{fpsr},~{flags}"(%struct.Memory* (%struct.State*, i64, %struct.Memory*)** nonnull @6, void ()** nonnull @2) #9
  ret void
}

; Function Attrs: nounwind
define internal %struct.Memory* @main_wrapper(%struct.State*, i64, %struct.Memory*) #9 {
  %4 = load volatile i1, i1* @0, align 1
  br i1 %4, label %__mcsema_early_init.exit, label %5

; <label>:5:                                      ; preds = %3
  store volatile i1 true, i1* @0, align 1
  br label %__mcsema_early_init.exit

__mcsema_early_init.exit:                         ; preds = %3, %5
  %6 = tail call %struct.Memory* @sub_400ba0_main(%struct.State* %0, i64 %1, %struct.Memory* %2)
  ret %struct.Memory* %6
}

; Function Attrs: noinline nounwind
define internal fastcc %struct.Memory* @ext_602150___libc_start_main(%struct.State*, %struct.Memory*) unnamed_addr #11 {
  %3 = tail call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64)* @__libc_start_main to i64), %struct.Memory* %1)
  ret %struct.Memory* %3
}

; Function Attrs: noinline nounwind
define internal fastcc %struct.Memory* @ext_602138_printf(%struct.State*, %struct.Memory*) unnamed_addr #11 {
  %3 = tail call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %1)
  ret %struct.Memory* %3
}

; Function Attrs: naked nobuiltin noinline nounwind
define dllexport void @eval() local_unnamed_addr #8 {
  tail call void asm sideeffect "pushq $0;pushq $$0x400530;jmpq *$1;", "*m,*m,~{dirflag},~{fpsr},~{flags}"(%struct.Memory* (%struct.State*, i64, %struct.Memory*)** nonnull @7, void ()** nonnull @2) #9
  ret void
}

; Function Attrs: nounwind
define internal %struct.Memory* @eval_wrapper(%struct.State*, i64, %struct.Memory*) #9 {
  %4 = load volatile i1, i1* @0, align 1
  br i1 %4, label %__mcsema_early_init.exit, label %5

; <label>:5:                                      ; preds = %3
  store volatile i1 true, i1* @0, align 1
  br label %__mcsema_early_init.exit

__mcsema_early_init.exit:                         ; preds = %3, %5
  %6 = tail call %struct.Memory* @sub_400530_eval(%struct.State* %0, i64 %1, %struct.Memory* %2)
  ret %struct.Memory* %6
}

; Function Attrs: naked nobuiltin noinline nounwind
define dllexport void @.init_proc() local_unnamed_addr #8 {
  tail call void asm sideeffect "pushq $0;pushq $$0x4003e0;jmpq *$1;", "*m,*m,~{dirflag},~{fpsr},~{flags}"(%struct.Memory* (%struct.State*, i64, %struct.Memory*)** nonnull @8, void ()** nonnull @2) #9
  ret void
}

; Function Attrs: nounwind
define internal %struct.Memory* @.init_proc_wrapper(%struct.State*, i64, %struct.Memory*) #9 {
  %4 = load volatile i1, i1* @0, align 1
  br i1 %4, label %__mcsema_early_init.exit, label %5

; <label>:5:                                      ; preds = %3
  store volatile i1 true, i1* @0, align 1
  br label %__mcsema_early_init.exit

__mcsema_early_init.exit:                         ; preds = %3, %5
  %6 = tail call %struct.Memory* @sub_4003e0__init_proc(%struct.State* %0, i64 %1, %struct.Memory* %2)
  ret %struct.Memory* %6
}

; Function Attrs: naked nobuiltin noinline nounwind
define dllexport void @.term_proc() local_unnamed_addr #8 {
  tail call void asm sideeffect "pushq $0;pushq $$0x400cf4;jmpq *$1;", "*m,*m,~{dirflag},~{fpsr},~{flags}"(%struct.Memory* (%struct.State*, i64, %struct.Memory*)** nonnull @9, void ()** nonnull @2) #9
  ret void
}

; Function Attrs: nounwind
define internal %struct.Memory* @.term_proc_wrapper(%struct.State* nocapture, i64, %struct.Memory* readnone returned) #9 {
  %4 = load volatile i1, i1* @0, align 1
  br i1 %4, label %__mcsema_early_init.exit, label %5

; <label>:5:                                      ; preds = %3
  store volatile i1 true, i1* @0, align 1
  br label %__mcsema_early_init.exit

__mcsema_early_init.exit:                         ; preds = %3, %5
  %6 = tail call %struct.Memory* @sub_400cf4__term_proc(%struct.State* %0, i64 %1, %struct.Memory* %2)
  ret %struct.Memory* %6
}

; Function Attrs: naked nobuiltin noinline nounwind
define dllexport void @execute() local_unnamed_addr #8 {
  tail call void asm sideeffect "pushq $0;pushq $$0x400510;jmpq *$1;", "*m,*m,~{dirflag},~{fpsr},~{flags}"(%struct.Memory* (%struct.State*, i64, %struct.Memory*)** nonnull @10, void ()** nonnull @2) #9
  ret void
}

; Function Attrs: nounwind
define internal %struct.Memory* @execute_wrapper(%struct.State* nocapture, i64, %struct.Memory* readnone returned) #9 {
  %4 = load volatile i1, i1* @0, align 1
  br i1 %4, label %__mcsema_early_init.exit, label %5

; <label>:5:                                      ; preds = %3
  store volatile i1 true, i1* @0, align 1
  br label %__mcsema_early_init.exit

__mcsema_early_init.exit:                         ; preds = %3, %5
  %6 = tail call %struct.Memory* @sub_400510_execute(%struct.State* %0, i64 %1, %struct.Memory* %2)
  ret %struct.Memory* %6
}

; Function Attrs: nounwind
define internal void @__mcsema_constructor() #9 {
  %1 = load volatile i1, i1* @0, align 1
  br i1 %1, label %__mcsema_early_init.exit, label %2

; <label>:2:                                      ; preds = %0
  store volatile i1 true, i1* @0, align 1
  br label %__mcsema_early_init.exit

__mcsema_early_init.exit:                         ; preds = %0, %2
  tail call void @callback_sub_400c80___libc_csu_init()
  ret void
}

; Function Attrs: nounwind
define internal void @__mcsema_destructor() #9 {
  tail call void @callback_sub_400cf0___libc_csu_fini()
  ret void
}

attributes #0 = { nounwind readnone }
attributes #1 = { noduplicate noinline nounwind optnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noinline nounwind optnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noduplicate noinline nounwind optnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noduplicate noinline nounwind optnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline }
attributes #6 = { noinline nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noinline norecurse nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { naked nobuiltin noinline nounwind }
attributes #9 = { nounwind }
attributes #10 = { norecurse nounwind }
attributes #11 = { noinline nounwind }
attributes #12 = { alwaysinline nobuiltin nounwind }

!llvm.ident = !{!0, !0}
!llvm.dbg.cu = !{!1}
!llvm.module.flags = !{!1259, !1260}

!0 = !{!"clang version 4.0.1 (tags/RELEASE_401/final)"}
!1 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus, file: !2, producer: "clang version 4.0.1 (tags/RELEASE_401/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !3, retainedTypes: !67, imports: !70)
!2 = !DIFile(filename: "/home/ubuntu/Github/remill/remill/Arch/X86/Runtime/BasicBlock.cpp", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!3 = !{!4, !26, !35, !39, !45, !51, !55, !61}
!4 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, name: "Name", scope: !6, file: !5, line: 70, baseType: !8, size: 32, elements: !11, identifier: "_ZTSN14AsyncHyperCall4NameE")
!5 = !DIFile(filename: "/home/ubuntu/Github/remill/remill/Arch/Runtime/HyperCall.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!6 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "AsyncHyperCall", file: !5, line: 68, size: 8, elements: !7, identifier: "_ZTS14AsyncHyperCall")
!7 = !{}
!8 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !9, line: 183, baseType: !10)
!9 = !DIFile(filename: "/home/ubuntu/Github/remill/remill-build/libraries/llvm/bin/../lib/clang/4.0.1/include/stdint.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!10 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!11 = !{!12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25}
!12 = !DIEnumerator(name: "kInvalid", value: 0)
!13 = !DIEnumerator(name: "kX86Int1", value: 1)
!14 = !DIEnumerator(name: "kX86Int3", value: 2)
!15 = !DIEnumerator(name: "kX86IntO", value: 3)
!16 = !DIEnumerator(name: "kX86IntN", value: 4)
!17 = !DIEnumerator(name: "kX86Bound", value: 5)
!18 = !DIEnumerator(name: "kX86IRet", value: 6)
!19 = !DIEnumerator(name: "kX86SysCall", value: 7)
!20 = !DIEnumerator(name: "kX86SysRet", value: 8)
!21 = !DIEnumerator(name: "kX86SysEnter", value: 9)
!22 = !DIEnumerator(name: "kX86SysExit", value: 10)
!23 = !DIEnumerator(name: "kX86JmpFar", value: 11)
!24 = !DIEnumerator(name: "kAArch64SupervisorCall", value: 12)
!25 = !DIEnumerator(name: "kInvalidInstruction", value: 13)
!26 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, name: "RequestPrivilegeLevel", file: !27, line: 64, baseType: !28, size: 16, elements: !30, identifier: "_ZTS21RequestPrivilegeLevel")
!27 = !DIFile(filename: "/home/ubuntu/Github/remill/remill/Arch/X86/Runtime/State.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!28 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !9, line: 218, baseType: !29)
!29 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!30 = !{!31, !32, !33, !34}
!31 = !DIEnumerator(name: "kRPLRingZero", value: 0)
!32 = !DIEnumerator(name: "kRPLRingOne", value: 1)
!33 = !DIEnumerator(name: "kRPLRingTwo", value: 2)
!34 = !DIEnumerator(name: "kRPLRingThree", value: 3)
!35 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, name: "TableIndicator", file: !27, line: 71, baseType: !28, size: 16, elements: !36, identifier: "_ZTS14TableIndicator")
!36 = !{!37, !38}
!37 = !DIEnumerator(name: "kGlobalDescriptorTable", value: 0)
!38 = !DIEnumerator(name: "kLocalDescriptorTable", value: 1)
!39 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, name: "FPUPrecisionControl", file: !27, line: 123, baseType: !28, size: 16, elements: !40, identifier: "_ZTS19FPUPrecisionControl")
!40 = !{!41, !42, !43, !44}
!41 = !DIEnumerator(name: "kPrecisionSingle", value: 0)
!42 = !DIEnumerator(name: "kPrecisionReserved", value: 1)
!43 = !DIEnumerator(name: "kPrecisionDouble", value: 2)
!44 = !DIEnumerator(name: "kPrecisionExtended", value: 3)
!45 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, name: "FPURoundingControl", file: !27, line: 130, baseType: !28, size: 16, elements: !46, identifier: "_ZTS18FPURoundingControl")
!46 = !{!47, !48, !49, !50}
!47 = !DIEnumerator(name: "kFPURoundToNearestEven", value: 0)
!48 = !DIEnumerator(name: "kFPURoundDownNegInf", value: 1)
!49 = !DIEnumerator(name: "kFPURoundUpInf", value: 2)
!50 = !DIEnumerator(name: "kFPURoundToZero", value: 3)
!51 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, name: "FPUInfinityControl", file: !27, line: 137, baseType: !28, size: 16, elements: !52, identifier: "_ZTS18FPUInfinityControl")
!52 = !{!53, !54}
!53 = !DIEnumerator(name: "kInfinityProjective", value: 0)
!54 = !DIEnumerator(name: "kInfinityAffine", value: 1)
!55 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, name: "FPUTag", file: !27, line: 214, baseType: !28, size: 16, elements: !56, identifier: "_ZTS6FPUTag")
!56 = !{!57, !58, !59, !60}
!57 = !DIEnumerator(name: "kFPUTagNonZero", value: 0)
!58 = !DIEnumerator(name: "kFPUTagZero", value: 1)
!59 = !DIEnumerator(name: "kFPUTagSpecial", value: 2)
!60 = !DIEnumerator(name: "kFPUTagEmpty", value: 3)
!61 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, name: "FPUAbridgedTag", file: !27, line: 221, baseType: !62, size: 8, elements: !64, identifier: "_ZTS14FPUAbridgedTag")
!62 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !9, line: 237, baseType: !63)
!63 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!64 = !{!65, !66}
!65 = !DIEnumerator(name: "kFPUAbridgedTagEmpty", value: 0)
!66 = !DIEnumerator(name: "kFPUAbridgedTagValid", value: 1)
!67 = !{!68}
!68 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !69, size: 64)
!69 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!70 = !{!71, !77, !83, !86, !93, !97, !102, !104, !112, !116, !120, !132, !136, !140, !144, !148, !153, !157, !161, !165, !169, !177, !181, !185, !187, !191, !195, !199, !205, !209, !213, !215, !223, !227, !235, !237, !241, !245, !249, !253, !258, !263, !268, !269, !270, !271, !274, !275, !276, !277, !278, !279, !280, !335, !339, !355, !358, !363, !371, !376, !380, !384, !388, !392, !394, !396, !400, !406, !410, !416, !422, !424, !428, !432, !436, !440, !451, !453, !457, !461, !465, !467, !471, !475, !479, !481, !483, !487, !495, !499, !503, !507, !509, !515, !517, !523, !527, !531, !535, !539, !543, !547, !549, !551, !555, !559, !563, !565, !569, !573, !575, !577, !581, !585, !589, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !606, !609, !611, !613, !615, !617, !619, !621, !623, !625, !627, !629, !631, !633, !634, !635, !636, !638, !640, !642, !644, !646, !648, !650, !652, !654, !656, !658, !660, !662, !665, !669, !674, !677, !679, !681, !683, !685, !687, !689, !691, !693, !695, !697, !699, !701, !703, !706, !712, !717, !721, !723, !725, !727, !729, !736, !740, !744, !748, !752, !756, !761, !765, !767, !771, !777, !781, !786, !788, !790, !794, !798, !802, !804, !806, !808, !810, !814, !816, !818, !822, !826, !830, !834, !838, !840, !842, !846, !850, !854, !858, !860, !862, !866, !870, !871, !872, !873, !874, !875, !880, !882, !884, !888, !890, !892, !894, !896, !898, !900, !902, !907, !911, !913, !915, !920, !922, !924, !926, !928, !930, !932, !935, !937, !939, !943, !947, !949, !951, !953, !955, !957, !959, !961, !963, !965, !967, !971, !975, !977, !979, !981, !983, !985, !987, !989, !991, !993, !995, !997, !999, !1001, !1003, !1005, !1009, !1013, !1017, !1019, !1021, !1023, !1025, !1027, !1029, !1031, !1033, !1035, !1039, !1043, !1047, !1049, !1051, !1053, !1057, !1061, !1065, !1067, !1069, !1071, !1073, !1075, !1077, !1079, !1081, !1083, !1085, !1087, !1089, !1093, !1097, !1101, !1103, !1105, !1107, !1109, !1113, !1117, !1119, !1121, !1123, !1125, !1127, !1129, !1133, !1137, !1139, !1141, !1143, !1145, !1149, !1153, !1157, !1159, !1161, !1163, !1165, !1167, !1169, !1173, !1177, !1181, !1183, !1187, !1191, !1193, !1195, !1197, !1199, !1201, !1203, !1207, !1209, !1212, !1217, !1219, !1225, !1227, !1229, !1231, !1236, !1238, !1244, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258}
!71 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !72, entity: !74, line: 58)
!72 = !DINamespace(name: "__gnu_debug", scope: null, file: !73, line: 56)
!73 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/debug/debug.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!74 = !DINamespace(name: "__debug", scope: !75, file: !73, line: 50)
!75 = !DINamespace(name: "std", scope: null, file: !76, line: 229)
!76 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/c++config.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!77 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !78, line: 52)
!78 = !DISubprogram(name: "abs", scope: !79, file: !79, line: 837, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!79 = !DIFile(filename: "/usr/include/stdlib.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!80 = !DISubroutineType(types: !81)
!81 = !{!82, !82}
!82 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!83 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !84, line: 127)
!84 = !DIDerivedType(tag: DW_TAG_typedef, name: "div_t", file: !79, line: 62, baseType: !85)
!85 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !79, line: 58, flags: DIFlagFwdDecl, identifier: "_ZTS5div_t")
!86 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !87, line: 128)
!87 = !DIDerivedType(tag: DW_TAG_typedef, name: "ldiv_t", file: !79, line: 70, baseType: !88)
!88 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !79, line: 66, size: 128, elements: !89, identifier: "_ZTS6ldiv_t")
!89 = !{!90, !92}
!90 = !DIDerivedType(tag: DW_TAG_member, name: "quot", scope: !88, file: !79, line: 68, baseType: !91, size: 64)
!91 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!92 = !DIDerivedType(tag: DW_TAG_member, name: "rem", scope: !88, file: !79, line: 69, baseType: !91, size: 64, offset: 64)
!93 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !94, line: 130)
!94 = !DISubprogram(name: "abort", scope: !79, file: !79, line: 588, type: !95, isLocal: false, isDefinition: false, flags: DIFlagPrototyped | DIFlagNoReturn, isOptimized: false)
!95 = !DISubroutineType(types: !96)
!96 = !{null}
!97 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !98, line: 134)
!98 = !DISubprogram(name: "atexit", scope: !79, file: !79, line: 592, type: !99, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!99 = !DISubroutineType(types: !100)
!100 = !{!82, !101}
!101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !95, size: 64)
!102 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !103, line: 137)
!103 = !DISubprogram(name: "at_quick_exit", scope: !79, file: !79, line: 597, type: !99, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!104 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !105, line: 140)
!105 = !DISubprogram(name: "atof", scope: !79, file: !79, line: 101, type: !106, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!106 = !DISubroutineType(types: !107)
!107 = !{!108, !109}
!108 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !110, size: 64)
!110 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !111)
!111 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!112 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !113, line: 141)
!113 = !DISubprogram(name: "atoi", scope: !79, file: !79, line: 104, type: !114, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!114 = !DISubroutineType(types: !115)
!115 = !{!82, !109}
!116 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !117, line: 142)
!117 = !DISubprogram(name: "atol", scope: !79, file: !79, line: 107, type: !118, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!118 = !DISubroutineType(types: !119)
!119 = !{!91, !109}
!120 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !121, line: 143)
!121 = !DISubprogram(name: "bsearch", scope: !79, file: !79, line: 817, type: !122, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!122 = !DISubroutineType(types: !123)
!123 = !{!124, !68, !68, !125, !125, !128}
!124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!125 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !126, line: 62, baseType: !127)
!126 = !DIFile(filename: "/home/ubuntu/Github/remill/remill-build/libraries/llvm/bin/../lib/clang/4.0.1/include/stddef.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!127 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!128 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !79, line: 805, baseType: !129)
!129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !130, size: 64)
!130 = !DISubroutineType(types: !131)
!131 = !{!82, !68, !68}
!132 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !133, line: 144)
!133 = !DISubprogram(name: "calloc", scope: !79, file: !79, line: 541, type: !134, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!134 = !DISubroutineType(types: !135)
!135 = !{!124, !125, !125}
!136 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !137, line: 145)
!137 = !DISubprogram(name: "div", scope: !79, file: !79, line: 849, type: !138, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!138 = !DISubroutineType(types: !139)
!139 = !{!84, !82, !82}
!140 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !141, line: 146)
!141 = !DISubprogram(name: "exit", scope: !79, file: !79, line: 614, type: !142, isLocal: false, isDefinition: false, flags: DIFlagPrototyped | DIFlagNoReturn, isOptimized: false)
!142 = !DISubroutineType(types: !143)
!143 = !{null, !82}
!144 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !145, line: 147)
!145 = !DISubprogram(name: "free", scope: !79, file: !79, line: 563, type: !146, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!146 = !DISubroutineType(types: !147)
!147 = !{null, !124}
!148 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !149, line: 148)
!149 = !DISubprogram(name: "getenv", scope: !79, file: !79, line: 631, type: !150, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!150 = !DISubroutineType(types: !151)
!151 = !{!152, !109}
!152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !111, size: 64)
!153 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !154, line: 149)
!154 = !DISubprogram(name: "labs", scope: !79, file: !79, line: 838, type: !155, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!155 = !DISubroutineType(types: !156)
!156 = !{!91, !91}
!157 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !158, line: 150)
!158 = !DISubprogram(name: "ldiv", scope: !79, file: !79, line: 851, type: !159, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!159 = !DISubroutineType(types: !160)
!160 = !{!87, !91, !91}
!161 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !162, line: 151)
!162 = !DISubprogram(name: "malloc", scope: !79, file: !79, line: 539, type: !163, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!163 = !DISubroutineType(types: !164)
!164 = !{!124, !125}
!165 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !166, line: 153)
!166 = !DISubprogram(name: "mblen", scope: !79, file: !79, line: 919, type: !167, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!167 = !DISubroutineType(types: !168)
!168 = !{!82, !109, !125}
!169 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !170, line: 154)
!170 = !DISubprogram(name: "mbstowcs", scope: !79, file: !79, line: 930, type: !171, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!171 = !DISubroutineType(types: !172)
!172 = !{!125, !173, !176, !125}
!173 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !174)
!174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !175, size: 64)
!175 = !DIBasicType(name: "wchar_t", size: 32, encoding: DW_ATE_signed)
!176 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !109)
!177 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !178, line: 155)
!178 = !DISubprogram(name: "mbtowc", scope: !79, file: !79, line: 922, type: !179, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!179 = !DISubroutineType(types: !180)
!180 = !{!82, !173, !176, !125}
!181 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !182, line: 157)
!182 = !DISubprogram(name: "qsort", scope: !79, file: !79, line: 827, type: !183, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!183 = !DISubroutineType(types: !184)
!184 = !{null, !124, !125, !125, !128}
!185 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !186, line: 160)
!186 = !DISubprogram(name: "quick_exit", scope: !79, file: !79, line: 620, type: !142, isLocal: false, isDefinition: false, flags: DIFlagPrototyped | DIFlagNoReturn, isOptimized: false)
!187 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !188, line: 163)
!188 = !DISubprogram(name: "rand", scope: !79, file: !79, line: 453, type: !189, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!189 = !DISubroutineType(types: !190)
!190 = !{!82}
!191 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !192, line: 164)
!192 = !DISubprogram(name: "realloc", scope: !79, file: !79, line: 549, type: !193, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!193 = !DISubroutineType(types: !194)
!194 = !{!124, !124, !125}
!195 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !196, line: 165)
!196 = !DISubprogram(name: "srand", scope: !79, file: !79, line: 455, type: !197, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!197 = !DISubroutineType(types: !198)
!198 = !{null, !10}
!199 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !200, line: 166)
!200 = !DISubprogram(name: "strtod", scope: !79, file: !79, line: 117, type: !201, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!201 = !DISubroutineType(types: !202)
!202 = !{!108, !176, !203}
!203 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !204)
!204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !152, size: 64)
!205 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !206, line: 167)
!206 = !DISubprogram(name: "strtol", scope: !79, file: !79, line: 176, type: !207, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!207 = !DISubroutineType(types: !208)
!208 = !{!91, !176, !203, !82}
!209 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !210, line: 168)
!210 = !DISubprogram(name: "strtoul", scope: !79, file: !79, line: 180, type: !211, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!211 = !DISubroutineType(types: !212)
!212 = !{!127, !176, !203, !82}
!213 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !214, line: 169)
!214 = !DISubprogram(name: "system", scope: !79, file: !79, line: 781, type: !114, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!215 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !216, line: 171)
!216 = !DISubprogram(name: "wcstombs", scope: !79, file: !79, line: 933, type: !217, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!217 = !DISubroutineType(types: !218)
!218 = !{!125, !219, !220, !125}
!219 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !152)
!220 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !221)
!221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !222, size: 64)
!222 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !175)
!223 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !224, line: 172)
!224 = !DISubprogram(name: "wctomb", scope: !79, file: !79, line: 926, type: !225, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!225 = !DISubroutineType(types: !226)
!226 = !{!82, !152, !175}
!227 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !229, line: 200)
!228 = !DINamespace(name: "__gnu_cxx", scope: null, file: !76, line: 255)
!229 = !DIDerivedType(tag: DW_TAG_typedef, name: "lldiv_t", file: !79, line: 80, baseType: !230)
!230 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !79, line: 76, size: 128, elements: !231, identifier: "_ZTS7lldiv_t")
!231 = !{!232, !234}
!232 = !DIDerivedType(tag: DW_TAG_member, name: "quot", scope: !230, file: !79, line: 78, baseType: !233, size: 64)
!233 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "rem", scope: !230, file: !79, line: 79, baseType: !233, size: 64, offset: 64)
!235 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !236, line: 206)
!236 = !DISubprogram(name: "_Exit", scope: !79, file: !79, line: 626, type: !142, isLocal: false, isDefinition: false, flags: DIFlagPrototyped | DIFlagNoReturn, isOptimized: false)
!237 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !238, line: 210)
!238 = !DISubprogram(name: "llabs", scope: !79, file: !79, line: 841, type: !239, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!239 = !DISubroutineType(types: !240)
!240 = !{!233, !233}
!241 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !242, line: 216)
!242 = !DISubprogram(name: "lldiv", scope: !79, file: !79, line: 855, type: !243, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!243 = !DISubroutineType(types: !244)
!244 = !{!229, !233, !233}
!245 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !246, line: 227)
!246 = !DISubprogram(name: "atoll", scope: !79, file: !79, line: 112, type: !247, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!247 = !DISubroutineType(types: !248)
!248 = !{!233, !109}
!249 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !250, line: 228)
!250 = !DISubprogram(name: "strtoll", scope: !79, file: !79, line: 200, type: !251, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!251 = !DISubroutineType(types: !252)
!252 = !{!233, !176, !203, !82}
!253 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !254, line: 229)
!254 = !DISubprogram(name: "strtoull", scope: !79, file: !79, line: 205, type: !255, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!255 = !DISubroutineType(types: !256)
!256 = !{!257, !176, !203, !82}
!257 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!258 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !259, line: 231)
!259 = !DISubprogram(name: "strtof", scope: !79, file: !79, line: 123, type: !260, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!260 = !DISubroutineType(types: !261)
!261 = !{!262, !176, !203}
!262 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!263 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !264, line: 232)
!264 = !DISubprogram(name: "strtold", scope: !79, file: !79, line: 126, type: !265, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!265 = !DISubroutineType(types: !266)
!266 = !{!267, !176, !203}
!267 = !DIBasicType(name: "long double", size: 128, encoding: DW_ATE_float)
!268 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !229, line: 240)
!269 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !236, line: 242)
!270 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !238, line: 244)
!271 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !272, line: 245)
!272 = !DISubprogram(name: "div", linkageName: "_ZN9__gnu_cxx3divExx", scope: !228, file: !273, line: 213, type: !243, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!273 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/cstdlib", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!274 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !242, line: 246)
!275 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !246, line: 248)
!276 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !259, line: 249)
!277 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !250, line: 250)
!278 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !254, line: 251)
!279 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !264, line: 252)
!280 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !281, line: 57)
!281 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "exception_ptr", scope: !283, file: !282, line: 79, size: 64, elements: !284, identifier: "_ZTSNSt15__exception_ptr13exception_ptrE")
!282 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/exception_ptr.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!283 = !DINamespace(name: "__exception_ptr", scope: !75, file: !282, line: 52)
!284 = !{!285, !286, !290, !293, !294, !299, !300, !304, !309, !313, !317, !320, !321, !324, !328}
!285 = !DIDerivedType(tag: DW_TAG_member, name: "_M_exception_object", scope: !281, file: !282, line: 81, baseType: !124, size: 64)
!286 = !DISubprogram(name: "exception_ptr", scope: !281, file: !282, line: 83, type: !287, isLocal: false, isDefinition: false, scopeLine: 83, flags: DIFlagExplicit | DIFlagPrototyped, isOptimized: false)
!287 = !DISubroutineType(types: !288)
!288 = !{null, !289, !124}
!289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !281, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!290 = !DISubprogram(name: "_M_addref", linkageName: "_ZNSt15__exception_ptr13exception_ptr9_M_addrefEv", scope: !281, file: !282, line: 85, type: !291, isLocal: false, isDefinition: false, scopeLine: 85, flags: DIFlagPrototyped, isOptimized: false)
!291 = !DISubroutineType(types: !292)
!292 = !{null, !289}
!293 = !DISubprogram(name: "_M_release", linkageName: "_ZNSt15__exception_ptr13exception_ptr10_M_releaseEv", scope: !281, file: !282, line: 86, type: !291, isLocal: false, isDefinition: false, scopeLine: 86, flags: DIFlagPrototyped, isOptimized: false)
!294 = !DISubprogram(name: "_M_get", linkageName: "_ZNKSt15__exception_ptr13exception_ptr6_M_getEv", scope: !281, file: !282, line: 88, type: !295, isLocal: false, isDefinition: false, scopeLine: 88, flags: DIFlagPrototyped, isOptimized: false)
!295 = !DISubroutineType(types: !296)
!296 = !{!124, !297}
!297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !298, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!298 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !281)
!299 = !DISubprogram(name: "exception_ptr", scope: !281, file: !282, line: 96, type: !291, isLocal: false, isDefinition: false, scopeLine: 96, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: false)
!300 = !DISubprogram(name: "exception_ptr", scope: !281, file: !282, line: 98, type: !301, isLocal: false, isDefinition: false, scopeLine: 98, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: false)
!301 = !DISubroutineType(types: !302)
!302 = !{null, !289, !303}
!303 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !298, size: 64)
!304 = !DISubprogram(name: "exception_ptr", scope: !281, file: !282, line: 101, type: !305, isLocal: false, isDefinition: false, scopeLine: 101, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: false)
!305 = !DISubroutineType(types: !306)
!306 = !{null, !289, !307}
!307 = !DIDerivedType(tag: DW_TAG_typedef, name: "nullptr_t", scope: !75, file: !76, line: 235, baseType: !308)
!308 = !DIBasicType(tag: DW_TAG_unspecified_type, name: "decltype(nullptr)")
!309 = !DISubprogram(name: "exception_ptr", scope: !281, file: !282, line: 105, type: !310, isLocal: false, isDefinition: false, scopeLine: 105, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: false)
!310 = !DISubroutineType(types: !311)
!311 = !{null, !289, !312}
!312 = !DIDerivedType(tag: DW_TAG_rvalue_reference_type, baseType: !281, size: 64)
!313 = !DISubprogram(name: "operator=", linkageName: "_ZNSt15__exception_ptr13exception_ptraSERKS0_", scope: !281, file: !282, line: 118, type: !314, isLocal: false, isDefinition: false, scopeLine: 118, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: false)
!314 = !DISubroutineType(types: !315)
!315 = !{!316, !289, !303}
!316 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !281, size: 64)
!317 = !DISubprogram(name: "operator=", linkageName: "_ZNSt15__exception_ptr13exception_ptraSEOS0_", scope: !281, file: !282, line: 122, type: !318, isLocal: false, isDefinition: false, scopeLine: 122, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: false)
!318 = !DISubroutineType(types: !319)
!319 = !{!316, !289, !312}
!320 = !DISubprogram(name: "~exception_ptr", scope: !281, file: !282, line: 129, type: !291, isLocal: false, isDefinition: false, scopeLine: 129, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: false)
!321 = !DISubprogram(name: "swap", linkageName: "_ZNSt15__exception_ptr13exception_ptr4swapERS0_", scope: !281, file: !282, line: 132, type: !322, isLocal: false, isDefinition: false, scopeLine: 132, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: false)
!322 = !DISubroutineType(types: !323)
!323 = !{null, !289, !316}
!324 = !DISubprogram(name: "operator bool", linkageName: "_ZNKSt15__exception_ptr13exception_ptrcvbEv", scope: !281, file: !282, line: 144, type: !325, isLocal: false, isDefinition: false, scopeLine: 144, flags: DIFlagPublic | DIFlagExplicit | DIFlagPrototyped, isOptimized: false)
!325 = !DISubroutineType(types: !326)
!326 = !{!327, !297}
!327 = !DIBasicType(name: "bool", size: 8, encoding: DW_ATE_boolean)
!328 = !DISubprogram(name: "__cxa_exception_type", linkageName: "_ZNKSt15__exception_ptr13exception_ptr20__cxa_exception_typeEv", scope: !281, file: !282, line: 153, type: !329, isLocal: false, isDefinition: false, scopeLine: 153, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: false)
!329 = !DISubroutineType(types: !330)
!330 = !{!331, !297}
!331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !332, size: 64)
!332 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !333)
!333 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "type_info", scope: !75, file: !334, line: 88, flags: DIFlagFwdDecl, identifier: "_ZTSSt9type_info")
!334 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/typeinfo", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!335 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !283, entity: !336, line: 73)
!336 = !DISubprogram(name: "rethrow_exception", linkageName: "_ZSt17rethrow_exceptionNSt15__exception_ptr13exception_ptrE", scope: !75, file: !282, line: 69, type: !337, isLocal: false, isDefinition: false, flags: DIFlagPrototyped | DIFlagNoReturn, isOptimized: false)
!337 = !DISubroutineType(types: !338)
!338 = !{null, !281}
!339 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !340, line: 64)
!340 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !341, line: 6, baseType: !342)
!341 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/mbstate_t.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!342 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !343, line: 21, baseType: !344)
!343 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!344 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !343, line: 13, size: 64, elements: !345, identifier: "_ZTS11__mbstate_t")
!345 = !{!346, !347}
!346 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !344, file: !343, line: 15, baseType: !82, size: 32)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !344, file: !343, line: 20, baseType: !348, size: 32, offset: 32)
!348 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !344, file: !343, line: 16, size: 32, elements: !349, identifier: "_ZTSN11__mbstate_tUt_E")
!349 = !{!350, !351}
!350 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !348, file: !343, line: 18, baseType: !10, size: 32)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !348, file: !343, line: 19, baseType: !352, size: 32)
!352 = !DICompositeType(tag: DW_TAG_array_type, baseType: !111, size: 32, elements: !353)
!353 = !{!354}
!354 = !DISubrange(count: 4)
!355 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !356, line: 139)
!356 = !DIDerivedType(tag: DW_TAG_typedef, name: "wint_t", file: !357, line: 20, baseType: !10)
!357 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/wint_t.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!358 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !359, line: 141)
!359 = !DISubprogram(name: "btowc", scope: !360, file: !360, line: 284, type: !361, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!360 = !DIFile(filename: "/usr/include/wchar.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!361 = !DISubroutineType(types: !362)
!362 = !{!356, !82}
!363 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !364, line: 142)
!364 = !DISubprogram(name: "fgetwc", scope: !360, file: !360, line: 727, type: !365, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!365 = !DISubroutineType(types: !366)
!366 = !{!356, !367}
!367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !368, size: 64)
!368 = !DIDerivedType(tag: DW_TAG_typedef, name: "__FILE", file: !369, line: 5, baseType: !370)
!369 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/__FILE.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !369, line: 4, flags: DIFlagFwdDecl, identifier: "_ZTS8_IO_FILE")
!371 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !372, line: 143)
!372 = !DISubprogram(name: "fgetws", scope: !360, file: !360, line: 756, type: !373, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!373 = !DISubroutineType(types: !374)
!374 = !{!174, !173, !82, !375}
!375 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !367)
!376 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !377, line: 144)
!377 = !DISubprogram(name: "fputwc", scope: !360, file: !360, line: 741, type: !378, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!378 = !DISubroutineType(types: !379)
!379 = !{!356, !175, !367}
!380 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !381, line: 145)
!381 = !DISubprogram(name: "fputws", scope: !360, file: !360, line: 763, type: !382, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!382 = !DISubroutineType(types: !383)
!383 = !{!82, !220, !375}
!384 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !385, line: 146)
!385 = !DISubprogram(name: "fwide", scope: !360, file: !360, line: 573, type: !386, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!386 = !DISubroutineType(types: !387)
!387 = !{!82, !367, !82}
!388 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !389, line: 147)
!389 = !DISubprogram(name: "fwprintf", scope: !360, file: !360, line: 580, type: !390, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!390 = !DISubroutineType(types: !391)
!391 = !{!82, !375, !220, null}
!392 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !393, line: 148)
!393 = !DISubprogram(name: "fwscanf", scope: !360, file: !360, line: 621, type: !390, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!394 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !395, line: 149)
!395 = !DISubprogram(name: "getwc", scope: !360, file: !360, line: 728, type: !365, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!396 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !397, line: 150)
!397 = !DISubprogram(name: "getwchar", scope: !360, file: !360, line: 734, type: !398, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!398 = !DISubroutineType(types: !399)
!399 = !{!356}
!400 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !401, line: 151)
!401 = !DISubprogram(name: "mbrlen", scope: !360, file: !360, line: 307, type: !402, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!402 = !DISubroutineType(types: !403)
!403 = !{!125, !176, !125, !404}
!404 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !405)
!405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !340, size: 64)
!406 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !407, line: 152)
!407 = !DISubprogram(name: "mbrtowc", scope: !360, file: !360, line: 296, type: !408, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!408 = !DISubroutineType(types: !409)
!409 = !{!125, !173, !176, !125, !404}
!410 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !411, line: 153)
!411 = !DISubprogram(name: "mbsinit", scope: !360, file: !360, line: 292, type: !412, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!412 = !DISubroutineType(types: !413)
!413 = !{!82, !414}
!414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !415, size: 64)
!415 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !340)
!416 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !417, line: 154)
!417 = !DISubprogram(name: "mbsrtowcs", scope: !360, file: !360, line: 337, type: !418, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!418 = !DISubroutineType(types: !419)
!419 = !{!125, !173, !420, !125, !404}
!420 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !421)
!421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !109, size: 64)
!422 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !423, line: 155)
!423 = !DISubprogram(name: "putwc", scope: !360, file: !360, line: 742, type: !378, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!424 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !425, line: 156)
!425 = !DISubprogram(name: "putwchar", scope: !360, file: !360, line: 748, type: !426, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!426 = !DISubroutineType(types: !427)
!427 = !{!356, !175}
!428 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !429, line: 158)
!429 = !DISubprogram(name: "swprintf", scope: !360, file: !360, line: 590, type: !430, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!430 = !DISubroutineType(types: !431)
!431 = !{!82, !173, !125, !220, null}
!432 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !433, line: 160)
!433 = !DISubprogram(name: "swscanf", scope: !360, file: !360, line: 631, type: !434, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!434 = !DISubroutineType(types: !435)
!435 = !{!82, !220, !220, null}
!436 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !437, line: 161)
!437 = !DISubprogram(name: "ungetwc", scope: !360, file: !360, line: 771, type: !438, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!438 = !DISubroutineType(types: !439)
!439 = !{!356, !356, !367}
!440 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !441, line: 162)
!441 = !DISubprogram(name: "vfwprintf", scope: !360, file: !360, line: 598, type: !442, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!442 = !DISubroutineType(types: !443)
!443 = !{!82, !375, !220, !444}
!444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !445, size: 64)
!445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !2, size: 192, elements: !446, identifier: "_ZTS13__va_list_tag")
!446 = !{!447, !448, !449, !450}
!447 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !445, file: !2, baseType: !10, size: 32)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !445, file: !2, baseType: !10, size: 32, offset: 32)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !445, file: !2, baseType: !124, size: 64, offset: 64)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !445, file: !2, baseType: !124, size: 64, offset: 128)
!451 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !452, line: 164)
!452 = !DISubprogram(name: "vfwscanf", scope: !360, file: !360, line: 673, type: !442, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!453 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !454, line: 167)
!454 = !DISubprogram(name: "vswprintf", scope: !360, file: !360, line: 611, type: !455, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!455 = !DISubroutineType(types: !456)
!456 = !{!82, !173, !125, !220, !444}
!457 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !458, line: 170)
!458 = !DISubprogram(name: "vswscanf", scope: !360, file: !360, line: 685, type: !459, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!459 = !DISubroutineType(types: !460)
!460 = !{!82, !220, !220, !444}
!461 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !462, line: 172)
!462 = !DISubprogram(name: "vwprintf", scope: !360, file: !360, line: 606, type: !463, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!463 = !DISubroutineType(types: !464)
!464 = !{!82, !220, !444}
!465 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !466, line: 174)
!466 = !DISubprogram(name: "vwscanf", scope: !360, file: !360, line: 681, type: !463, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!467 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !468, line: 176)
!468 = !DISubprogram(name: "wcrtomb", scope: !360, file: !360, line: 301, type: !469, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!469 = !DISubroutineType(types: !470)
!470 = !{!125, !219, !175, !404}
!471 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !472, line: 177)
!472 = !DISubprogram(name: "wcscat", scope: !360, file: !360, line: 97, type: !473, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!473 = !DISubroutineType(types: !474)
!474 = !{!174, !173, !220}
!475 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !476, line: 178)
!476 = !DISubprogram(name: "wcscmp", scope: !360, file: !360, line: 106, type: !477, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!477 = !DISubroutineType(types: !478)
!478 = !{!82, !221, !221}
!479 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !480, line: 179)
!480 = !DISubprogram(name: "wcscoll", scope: !360, file: !360, line: 131, type: !477, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!481 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !482, line: 180)
!482 = !DISubprogram(name: "wcscpy", scope: !360, file: !360, line: 87, type: !473, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!483 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !484, line: 181)
!484 = !DISubprogram(name: "wcscspn", scope: !360, file: !360, line: 187, type: !485, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!485 = !DISubroutineType(types: !486)
!486 = !{!125, !221, !221}
!487 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !488, line: 182)
!488 = !DISubprogram(name: "wcsftime", scope: !360, file: !360, line: 835, type: !489, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!489 = !DISubroutineType(types: !490)
!490 = !{!125, !173, !125, !220, !491}
!491 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !492)
!492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !493, size: 64)
!493 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !494)
!494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tm", file: !360, line: 83, flags: DIFlagFwdDecl, identifier: "_ZTS2tm")
!495 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !496, line: 183)
!496 = !DISubprogram(name: "wcslen", scope: !360, file: !360, line: 222, type: !497, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!497 = !DISubroutineType(types: !498)
!498 = !{!125, !221}
!499 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !500, line: 184)
!500 = !DISubprogram(name: "wcsncat", scope: !360, file: !360, line: 101, type: !501, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!501 = !DISubroutineType(types: !502)
!502 = !{!174, !173, !220, !125}
!503 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !504, line: 185)
!504 = !DISubprogram(name: "wcsncmp", scope: !360, file: !360, line: 109, type: !505, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!505 = !DISubroutineType(types: !506)
!506 = !{!82, !221, !221, !125}
!507 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !508, line: 186)
!508 = !DISubprogram(name: "wcsncpy", scope: !360, file: !360, line: 92, type: !501, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!509 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !510, line: 187)
!510 = !DISubprogram(name: "wcsrtombs", scope: !360, file: !360, line: 343, type: !511, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!511 = !DISubroutineType(types: !512)
!512 = !{!125, !219, !513, !125, !404}
!513 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !514)
!514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !221, size: 64)
!515 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !516, line: 188)
!516 = !DISubprogram(name: "wcsspn", scope: !360, file: !360, line: 191, type: !485, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!517 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !518, line: 189)
!518 = !DISubprogram(name: "wcstod", scope: !360, file: !360, line: 377, type: !519, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!519 = !DISubroutineType(types: !520)
!520 = !{!108, !220, !521}
!521 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !522)
!522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !174, size: 64)
!523 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !524, line: 191)
!524 = !DISubprogram(name: "wcstof", scope: !360, file: !360, line: 382, type: !525, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!525 = !DISubroutineType(types: !526)
!526 = !{!262, !220, !521}
!527 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !528, line: 193)
!528 = !DISubprogram(name: "wcstok", scope: !360, file: !360, line: 217, type: !529, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!529 = !DISubroutineType(types: !530)
!530 = !{!174, !173, !220, !521}
!531 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !532, line: 194)
!532 = !DISubprogram(name: "wcstol", scope: !360, file: !360, line: 428, type: !533, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!533 = !DISubroutineType(types: !534)
!534 = !{!91, !220, !521, !82}
!535 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !536, line: 195)
!536 = !DISubprogram(name: "wcstoul", scope: !360, file: !360, line: 433, type: !537, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!537 = !DISubroutineType(types: !538)
!538 = !{!127, !220, !521, !82}
!539 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !540, line: 196)
!540 = !DISubprogram(name: "wcsxfrm", scope: !360, file: !360, line: 135, type: !541, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!541 = !DISubroutineType(types: !542)
!542 = !{!125, !173, !220, !125}
!543 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !544, line: 197)
!544 = !DISubprogram(name: "wctob", scope: !360, file: !360, line: 288, type: !545, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!545 = !DISubroutineType(types: !546)
!546 = !{!82, !356}
!547 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !548, line: 198)
!548 = !DISubprogram(name: "wmemcmp", scope: !360, file: !360, line: 258, type: !505, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!549 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !550, line: 199)
!550 = !DISubprogram(name: "wmemcpy", scope: !360, file: !360, line: 262, type: !501, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!551 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !552, line: 200)
!552 = !DISubprogram(name: "wmemmove", scope: !360, file: !360, line: 267, type: !553, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!553 = !DISubroutineType(types: !554)
!554 = !{!174, !174, !221, !125}
!555 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !556, line: 201)
!556 = !DISubprogram(name: "wmemset", scope: !360, file: !360, line: 271, type: !557, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!557 = !DISubroutineType(types: !558)
!558 = !{!174, !174, !175, !125}
!559 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !560, line: 202)
!560 = !DISubprogram(name: "wprintf", scope: !360, file: !360, line: 587, type: !561, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!561 = !DISubroutineType(types: !562)
!562 = !{!82, !220, null}
!563 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !564, line: 203)
!564 = !DISubprogram(name: "wscanf", scope: !360, file: !360, line: 628, type: !561, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!565 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !566, line: 204)
!566 = !DISubprogram(name: "wcschr", scope: !360, file: !360, line: 164, type: !567, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!567 = !DISubroutineType(types: !568)
!568 = !{!174, !221, !175}
!569 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !570, line: 205)
!570 = !DISubprogram(name: "wcspbrk", scope: !360, file: !360, line: 201, type: !571, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!571 = !DISubroutineType(types: !572)
!572 = !{!174, !221, !221}
!573 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !574, line: 206)
!574 = !DISubprogram(name: "wcsrchr", scope: !360, file: !360, line: 174, type: !567, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!575 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !576, line: 207)
!576 = !DISubprogram(name: "wcsstr", scope: !360, file: !360, line: 212, type: !571, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!577 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !578, line: 208)
!578 = !DISubprogram(name: "wmemchr", scope: !360, file: !360, line: 253, type: !579, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!579 = !DISubroutineType(types: !580)
!580 = !{!174, !221, !175, !125}
!581 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !582, line: 248)
!582 = !DISubprogram(name: "wcstold", scope: !360, file: !360, line: 384, type: !583, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!583 = !DISubroutineType(types: !584)
!584 = !{!267, !220, !521}
!585 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !586, line: 257)
!586 = !DISubprogram(name: "wcstoll", scope: !360, file: !360, line: 441, type: !587, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!587 = !DISubroutineType(types: !588)
!588 = !{!233, !220, !521, !82}
!589 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !590, line: 258)
!590 = !DISubprogram(name: "wcstoull", scope: !360, file: !360, line: 448, type: !591, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!591 = !DISubroutineType(types: !592)
!592 = !{!257, !220, !521, !82}
!593 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !582, line: 264)
!594 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !586, line: 265)
!595 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !590, line: 266)
!596 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !524, line: 280)
!597 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !452, line: 283)
!598 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !458, line: 286)
!599 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !466, line: 289)
!600 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !582, line: 293)
!601 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !586, line: 294)
!602 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !590, line: 295)
!603 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !604, line: 48)
!604 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !9, line: 235, baseType: !605)
!605 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!606 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !607, line: 49)
!607 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !9, line: 216, baseType: !608)
!608 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!609 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !610, line: 50)
!610 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !9, line: 178, baseType: !82)
!611 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !612, line: 51)
!612 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !9, line: 107, baseType: !91)
!613 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !614, line: 53)
!614 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_fast8_t", file: !9, line: 245, baseType: !604)
!615 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !616, line: 54)
!616 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_fast16_t", file: !9, line: 228, baseType: !607)
!617 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !618, line: 55)
!618 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_fast32_t", file: !9, line: 197, baseType: !610)
!619 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !620, line: 56)
!620 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_fast64_t", file: !9, line: 123, baseType: !612)
!621 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !622, line: 58)
!622 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_least8_t", file: !9, line: 243, baseType: !604)
!623 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !624, line: 59)
!624 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_least16_t", file: !9, line: 226, baseType: !607)
!625 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !626, line: 60)
!626 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_least32_t", file: !9, line: 195, baseType: !610)
!627 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !628, line: 61)
!628 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_least64_t", file: !9, line: 121, baseType: !612)
!629 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !630, line: 63)
!630 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !9, line: 276, baseType: !91)
!631 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !632, line: 64)
!632 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !9, line: 263, baseType: !612)
!633 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !62, line: 66)
!634 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !28, line: 67)
!635 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !8, line: 68)
!636 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !637, line: 69)
!637 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !9, line: 109, baseType: !127)
!638 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !639, line: 71)
!639 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_fast8_t", file: !9, line: 246, baseType: !62)
!640 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !641, line: 72)
!641 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_fast16_t", file: !9, line: 229, baseType: !28)
!642 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !643, line: 73)
!643 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_fast32_t", file: !9, line: 198, baseType: !8)
!644 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !645, line: 74)
!645 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_fast64_t", file: !9, line: 124, baseType: !637)
!646 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !647, line: 76)
!647 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_least8_t", file: !9, line: 244, baseType: !62)
!648 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !649, line: 77)
!649 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_least16_t", file: !9, line: 227, baseType: !28)
!650 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !651, line: 78)
!651 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_least32_t", file: !9, line: 196, baseType: !8)
!652 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !653, line: 79)
!653 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_least64_t", file: !9, line: 122, baseType: !637)
!654 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !655, line: 81)
!655 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !9, line: 277, baseType: !127)
!656 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !657, line: 82)
!657 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !9, line: 270, baseType: !637)
!658 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !659, line: 44)
!659 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", scope: !75, file: !76, line: 231, baseType: !127)
!660 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !661, line: 45)
!661 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", scope: !75, file: !76, line: 232, baseType: !91)
!662 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !663, line: 53)
!663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lconv", file: !664, line: 51, flags: DIFlagFwdDecl, identifier: "_ZTS5lconv")
!664 = !DIFile(filename: "/usr/include/locale.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!665 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !666, line: 54)
!666 = !DISubprogram(name: "setlocale", scope: !664, file: !664, line: 122, type: !667, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!667 = !DISubroutineType(types: !668)
!668 = !{!152, !82, !109}
!669 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !670, line: 55)
!670 = !DISubprogram(name: "localeconv", scope: !664, file: !664, line: 125, type: !671, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!671 = !DISubroutineType(types: !672)
!672 = !{!673}
!673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !663, size: 64)
!674 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !675, line: 64)
!675 = !DISubprogram(name: "isalnum", scope: !676, file: !676, line: 108, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!676 = !DIFile(filename: "/usr/include/ctype.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!677 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !678, line: 65)
!678 = !DISubprogram(name: "isalpha", scope: !676, file: !676, line: 109, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!679 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !680, line: 66)
!680 = !DISubprogram(name: "iscntrl", scope: !676, file: !676, line: 110, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!681 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !682, line: 67)
!682 = !DISubprogram(name: "isdigit", scope: !676, file: !676, line: 111, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!683 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !684, line: 68)
!684 = !DISubprogram(name: "isgraph", scope: !676, file: !676, line: 113, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!685 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !686, line: 69)
!686 = !DISubprogram(name: "islower", scope: !676, file: !676, line: 112, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!687 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !688, line: 70)
!688 = !DISubprogram(name: "isprint", scope: !676, file: !676, line: 114, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!689 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !690, line: 71)
!690 = !DISubprogram(name: "ispunct", scope: !676, file: !676, line: 115, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!691 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !692, line: 72)
!692 = !DISubprogram(name: "isspace", scope: !676, file: !676, line: 116, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!693 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !694, line: 73)
!694 = !DISubprogram(name: "isupper", scope: !676, file: !676, line: 117, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!695 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !696, line: 74)
!696 = !DISubprogram(name: "isxdigit", scope: !676, file: !676, line: 118, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!697 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !698, line: 75)
!698 = !DISubprogram(name: "tolower", scope: !676, file: !676, line: 122, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!699 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !700, line: 76)
!700 = !DISubprogram(name: "toupper", scope: !676, file: !676, line: 125, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!701 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !702, line: 87)
!702 = !DISubprogram(name: "isblank", scope: !676, file: !676, line: 130, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!703 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !704, line: 98)
!704 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !705, line: 7, baseType: !370)
!705 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!706 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !707, line: 99)
!707 = !DIDerivedType(tag: DW_TAG_typedef, name: "fpos_t", file: !708, line: 78, baseType: !709)
!708 = !DIFile(filename: "/usr/include/stdio.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!709 = !DIDerivedType(tag: DW_TAG_typedef, name: "_G_fpos_t", file: !710, line: 30, baseType: !711)
!710 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/_G_config.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!711 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !710, line: 26, flags: DIFlagFwdDecl, identifier: "_ZTS9_G_fpos_t")
!712 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !713, line: 101)
!713 = !DISubprogram(name: "clearerr", scope: !708, file: !708, line: 757, type: !714, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!714 = !DISubroutineType(types: !715)
!715 = !{null, !716}
!716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !704, size: 64)
!717 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !718, line: 102)
!718 = !DISubprogram(name: "fclose", scope: !708, file: !708, line: 199, type: !719, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!719 = !DISubroutineType(types: !720)
!720 = !{!82, !716}
!721 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !722, line: 103)
!722 = !DISubprogram(name: "feof", scope: !708, file: !708, line: 759, type: !719, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!723 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !724, line: 104)
!724 = !DISubprogram(name: "ferror", scope: !708, file: !708, line: 761, type: !719, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!725 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !726, line: 105)
!726 = !DISubprogram(name: "fflush", scope: !708, file: !708, line: 204, type: !719, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!727 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !728, line: 106)
!728 = !DISubprogram(name: "fgetc", scope: !708, file: !708, line: 477, type: !719, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!729 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !730, line: 107)
!730 = !DISubprogram(name: "fgetpos", scope: !708, file: !708, line: 731, type: !731, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!731 = !DISubroutineType(types: !732)
!732 = !{!82, !733, !734}
!733 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !716)
!734 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !735)
!735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !707, size: 64)
!736 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !737, line: 108)
!737 = !DISubprogram(name: "fgets", scope: !708, file: !708, line: 564, type: !738, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!738 = !DISubroutineType(types: !739)
!739 = !{!152, !219, !82, !733}
!740 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !741, line: 109)
!741 = !DISubprogram(name: "fopen", scope: !708, file: !708, line: 232, type: !742, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!742 = !DISubroutineType(types: !743)
!743 = !{!716, !176, !176}
!744 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !745, line: 110)
!745 = !DISubprogram(name: "fprintf", scope: !708, file: !708, line: 312, type: !746, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!746 = !DISubroutineType(types: !747)
!747 = !{!82, !733, !176, null}
!748 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !749, line: 111)
!749 = !DISubprogram(name: "fputc", scope: !708, file: !708, line: 517, type: !750, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!750 = !DISubroutineType(types: !751)
!751 = !{!82, !82, !716}
!752 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !753, line: 112)
!753 = !DISubprogram(name: "fputs", scope: !708, file: !708, line: 626, type: !754, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!754 = !DISubroutineType(types: !755)
!755 = !{!82, !176, !733}
!756 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !757, line: 113)
!757 = !DISubprogram(name: "fread", scope: !708, file: !708, line: 646, type: !758, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!758 = !DISubroutineType(types: !759)
!759 = !{!125, !760, !125, !125, !733}
!760 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !124)
!761 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !762, line: 114)
!762 = !DISubprogram(name: "freopen", scope: !708, file: !708, line: 238, type: !763, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!763 = !DISubroutineType(types: !764)
!764 = !{!716, !176, !176, !733}
!765 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !766, line: 115)
!766 = !DISubprogram(name: "fscanf", scope: !708, file: !708, line: 377, type: !746, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!767 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !768, line: 116)
!768 = !DISubprogram(name: "fseek", scope: !708, file: !708, line: 684, type: !769, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!769 = !DISubroutineType(types: !770)
!770 = !{!82, !716, !91, !82}
!771 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !772, line: 117)
!772 = !DISubprogram(name: "fsetpos", scope: !708, file: !708, line: 736, type: !773, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!773 = !DISubroutineType(types: !774)
!774 = !{!82, !716, !775}
!775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !776, size: 64)
!776 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !707)
!777 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !778, line: 118)
!778 = !DISubprogram(name: "ftell", scope: !708, file: !708, line: 689, type: !779, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!779 = !DISubroutineType(types: !780)
!780 = !{!91, !716}
!781 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !782, line: 119)
!782 = !DISubprogram(name: "fwrite", scope: !708, file: !708, line: 652, type: !783, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!783 = !DISubroutineType(types: !784)
!784 = !{!125, !785, !125, !125, !733}
!785 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !68)
!786 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !787, line: 120)
!787 = !DISubprogram(name: "getc", scope: !708, file: !708, line: 478, type: !719, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!788 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !789, line: 121)
!789 = !DISubprogram(name: "getchar", scope: !708, file: !708, line: 484, type: !189, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!790 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !791, line: 124)
!791 = !DISubprogram(name: "gets", scope: !708, file: !708, line: 577, type: !792, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!792 = !DISubroutineType(types: !793)
!793 = !{!152, !152}
!794 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !795, line: 126)
!795 = !DISubprogram(name: "perror", scope: !708, file: !708, line: 775, type: !796, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!796 = !DISubroutineType(types: !797)
!797 = !{null, !109}
!798 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !799, line: 127)
!799 = !DISubprogram(name: "printf", scope: !708, file: !708, line: 318, type: !800, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!800 = !DISubroutineType(types: !801)
!801 = !{!82, !176, null}
!802 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !803, line: 128)
!803 = !DISubprogram(name: "putc", scope: !708, file: !708, line: 518, type: !750, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!804 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !805, line: 129)
!805 = !DISubprogram(name: "putchar", scope: !708, file: !708, line: 524, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!806 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !807, line: 130)
!807 = !DISubprogram(name: "puts", scope: !708, file: !708, line: 632, type: !114, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!808 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !809, line: 131)
!809 = !DISubprogram(name: "remove", scope: !708, file: !708, line: 144, type: !114, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!810 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !811, line: 132)
!811 = !DISubprogram(name: "rename", scope: !708, file: !708, line: 146, type: !812, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!812 = !DISubroutineType(types: !813)
!813 = !{!82, !109, !109}
!814 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !815, line: 133)
!815 = !DISubprogram(name: "rewind", scope: !708, file: !708, line: 694, type: !714, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!816 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !817, line: 134)
!817 = !DISubprogram(name: "scanf", scope: !708, file: !708, line: 383, type: !800, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!818 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !819, line: 135)
!819 = !DISubprogram(name: "setbuf", scope: !708, file: !708, line: 290, type: !820, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!820 = !DISubroutineType(types: !821)
!821 = !{null, !733, !219}
!822 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !823, line: 136)
!823 = !DISubprogram(name: "setvbuf", scope: !708, file: !708, line: 294, type: !824, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!824 = !DISubroutineType(types: !825)
!825 = !{!82, !733, !219, !82, !125}
!826 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !827, line: 137)
!827 = !DISubprogram(name: "sprintf", scope: !708, file: !708, line: 320, type: !828, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!828 = !DISubroutineType(types: !829)
!829 = !{!82, !219, !176, null}
!830 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !831, line: 138)
!831 = !DISubprogram(name: "sscanf", scope: !708, file: !708, line: 385, type: !832, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!832 = !DISubroutineType(types: !833)
!833 = !{!82, !176, !176, null}
!834 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !835, line: 139)
!835 = !DISubprogram(name: "tmpfile", scope: !708, file: !708, line: 159, type: !836, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!836 = !DISubroutineType(types: !837)
!837 = !{!716}
!838 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !839, line: 141)
!839 = !DISubprogram(name: "tmpnam", scope: !708, file: !708, line: 173, type: !792, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!840 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !841, line: 143)
!841 = !DISubprogram(name: "ungetc", scope: !708, file: !708, line: 639, type: !750, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!842 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !843, line: 144)
!843 = !DISubprogram(name: "vfprintf", scope: !708, file: !708, line: 327, type: !844, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!844 = !DISubroutineType(types: !845)
!845 = !{!82, !733, !176, !444}
!846 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !847, line: 145)
!847 = !DISubprogram(name: "vprintf", scope: !708, file: !708, line: 333, type: !848, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!848 = !DISubroutineType(types: !849)
!849 = !{!82, !176, !444}
!850 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !851, line: 146)
!851 = !DISubprogram(name: "vsprintf", scope: !708, file: !708, line: 335, type: !852, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!852 = !DISubroutineType(types: !853)
!853 = !{!82, !219, !176, !444}
!854 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !855, line: 175)
!855 = !DISubprogram(name: "snprintf", scope: !708, file: !708, line: 340, type: !856, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!856 = !DISubroutineType(types: !857)
!857 = !{!82, !219, !125, !176, null}
!858 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !859, line: 176)
!859 = !DISubprogram(name: "vfscanf", scope: !708, file: !708, line: 420, type: !844, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!860 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !861, line: 177)
!861 = !DISubprogram(name: "vscanf", scope: !708, file: !708, line: 428, type: !848, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!862 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !863, line: 178)
!863 = !DISubprogram(name: "vsnprintf", scope: !708, file: !708, line: 344, type: !864, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!864 = !DISubroutineType(types: !865)
!865 = !{!82, !219, !125, !176, !444}
!866 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !867, line: 179)
!867 = !DISubprogram(name: "vsscanf", scope: !708, file: !708, line: 432, type: !868, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!868 = !DISubroutineType(types: !869)
!869 = !{!82, !176, !176, !444}
!870 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !855, line: 185)
!871 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !859, line: 186)
!872 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !861, line: 187)
!873 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !863, line: 188)
!874 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !867, line: 189)
!875 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !876, line: 83)
!876 = !DISubprogram(name: "acos", scope: !877, file: !877, line: 53, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!877 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/mathcalls.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!878 = !DISubroutineType(types: !879)
!879 = !{!108, !108}
!880 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !881, line: 102)
!881 = !DISubprogram(name: "asin", scope: !877, file: !877, line: 55, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!882 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !883, line: 121)
!883 = !DISubprogram(name: "atan", scope: !877, file: !877, line: 57, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!884 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !885, line: 140)
!885 = !DISubprogram(name: "atan2", scope: !877, file: !877, line: 59, type: !886, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!886 = !DISubroutineType(types: !887)
!887 = !{!108, !108, !108}
!888 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !889, line: 161)
!889 = !DISubprogram(name: "ceil", scope: !877, file: !877, line: 159, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!890 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !891, line: 180)
!891 = !DISubprogram(name: "cos", scope: !877, file: !877, line: 62, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!892 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !893, line: 199)
!893 = !DISubprogram(name: "cosh", scope: !877, file: !877, line: 71, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!894 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !895, line: 218)
!895 = !DISubprogram(name: "exp", scope: !877, file: !877, line: 95, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!896 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !897, line: 237)
!897 = !DISubprogram(name: "fabs", scope: !877, file: !877, line: 162, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!898 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !899, line: 256)
!899 = !DISubprogram(name: "floor", scope: !877, file: !877, line: 165, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!900 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !901, line: 275)
!901 = !DISubprogram(name: "fmod", scope: !877, file: !877, line: 168, type: !886, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!902 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !903, line: 296)
!903 = !DISubprogram(name: "frexp", scope: !877, file: !877, line: 98, type: !904, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!904 = !DISubroutineType(types: !905)
!905 = !{!108, !108, !906}
!906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !82, size: 64)
!907 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !908, line: 315)
!908 = !DISubprogram(name: "ldexp", scope: !877, file: !877, line: 101, type: !909, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!909 = !DISubroutineType(types: !910)
!910 = !{!108, !108, !82}
!911 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !912, line: 334)
!912 = !DISubprogram(name: "log", scope: !877, file: !877, line: 104, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!913 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !914, line: 353)
!914 = !DISubprogram(name: "log10", scope: !877, file: !877, line: 107, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!915 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !916, line: 372)
!916 = !DISubprogram(name: "modf", scope: !877, file: !877, line: 110, type: !917, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!917 = !DISubroutineType(types: !918)
!918 = !{!108, !108, !919}
!919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !108, size: 64)
!920 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !921, line: 384)
!921 = !DISubprogram(name: "pow", scope: !877, file: !877, line: 140, type: !886, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!922 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !923, line: 421)
!923 = !DISubprogram(name: "sin", scope: !877, file: !877, line: 64, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!924 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !925, line: 440)
!925 = !DISubprogram(name: "sinh", scope: !877, file: !877, line: 73, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!926 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !927, line: 459)
!927 = !DISubprogram(name: "sqrt", scope: !877, file: !877, line: 143, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!928 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !929, line: 478)
!929 = !DISubprogram(name: "tan", scope: !877, file: !877, line: 66, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!930 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !931, line: 497)
!931 = !DISubprogram(name: "tanh", scope: !877, file: !877, line: 75, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!932 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !933, line: 1080)
!933 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_t", file: !934, line: 150, baseType: !108)
!934 = !DIFile(filename: "/usr/include/math.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!935 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !936, line: 1081)
!936 = !DIDerivedType(tag: DW_TAG_typedef, name: "float_t", file: !934, line: 149, baseType: !262)
!937 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !938, line: 1084)
!938 = !DISubprogram(name: "acosh", scope: !877, file: !877, line: 85, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!939 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !940, line: 1085)
!940 = !DISubprogram(name: "acoshf", scope: !877, file: !877, line: 85, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!941 = !DISubroutineType(types: !942)
!942 = !{!262, !262}
!943 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !944, line: 1086)
!944 = !DISubprogram(name: "acoshl", scope: !877, file: !877, line: 85, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!945 = !DISubroutineType(types: !946)
!946 = !{!267, !267}
!947 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !948, line: 1088)
!948 = !DISubprogram(name: "asinh", scope: !877, file: !877, line: 87, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!949 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !950, line: 1089)
!950 = !DISubprogram(name: "asinhf", scope: !877, file: !877, line: 87, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!951 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !952, line: 1090)
!952 = !DISubprogram(name: "asinhl", scope: !877, file: !877, line: 87, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!953 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !954, line: 1092)
!954 = !DISubprogram(name: "atanh", scope: !877, file: !877, line: 89, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!955 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !956, line: 1093)
!956 = !DISubprogram(name: "atanhf", scope: !877, file: !877, line: 89, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!957 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !958, line: 1094)
!958 = !DISubprogram(name: "atanhl", scope: !877, file: !877, line: 89, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!959 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !960, line: 1096)
!960 = !DISubprogram(name: "cbrt", scope: !877, file: !877, line: 152, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!961 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !962, line: 1097)
!962 = !DISubprogram(name: "cbrtf", scope: !877, file: !877, line: 152, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!963 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !964, line: 1098)
!964 = !DISubprogram(name: "cbrtl", scope: !877, file: !877, line: 152, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!965 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !966, line: 1100)
!966 = !DISubprogram(name: "copysign", scope: !877, file: !877, line: 196, type: !886, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!967 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !968, line: 1101)
!968 = !DISubprogram(name: "copysignf", scope: !877, file: !877, line: 196, type: !969, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!969 = !DISubroutineType(types: !970)
!970 = !{!262, !262, !262}
!971 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !972, line: 1102)
!972 = !DISubprogram(name: "copysignl", scope: !877, file: !877, line: 196, type: !973, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!973 = !DISubroutineType(types: !974)
!974 = !{!267, !267, !267}
!975 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !976, line: 1104)
!976 = !DISubprogram(name: "erf", scope: !877, file: !877, line: 228, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!977 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !978, line: 1105)
!978 = !DISubprogram(name: "erff", scope: !877, file: !877, line: 228, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!979 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !980, line: 1106)
!980 = !DISubprogram(name: "erfl", scope: !877, file: !877, line: 228, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!981 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !982, line: 1108)
!982 = !DISubprogram(name: "erfc", scope: !877, file: !877, line: 229, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!983 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !984, line: 1109)
!984 = !DISubprogram(name: "erfcf", scope: !877, file: !877, line: 229, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!985 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !986, line: 1110)
!986 = !DISubprogram(name: "erfcl", scope: !877, file: !877, line: 229, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!987 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !988, line: 1112)
!988 = !DISubprogram(name: "exp2", scope: !877, file: !877, line: 130, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!989 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !990, line: 1113)
!990 = !DISubprogram(name: "exp2f", scope: !877, file: !877, line: 130, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!991 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !992, line: 1114)
!992 = !DISubprogram(name: "exp2l", scope: !877, file: !877, line: 130, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!993 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !994, line: 1116)
!994 = !DISubprogram(name: "expm1", scope: !877, file: !877, line: 119, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!995 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !996, line: 1117)
!996 = !DISubprogram(name: "expm1f", scope: !877, file: !877, line: 119, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!997 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !998, line: 1118)
!998 = !DISubprogram(name: "expm1l", scope: !877, file: !877, line: 119, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!999 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1000, line: 1120)
!1000 = !DISubprogram(name: "fdim", scope: !877, file: !877, line: 326, type: !886, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1001 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1002, line: 1121)
!1002 = !DISubprogram(name: "fdimf", scope: !877, file: !877, line: 326, type: !969, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1003 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1004, line: 1122)
!1004 = !DISubprogram(name: "fdiml", scope: !877, file: !877, line: 326, type: !973, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1005 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1006, line: 1124)
!1006 = !DISubprogram(name: "fma", scope: !877, file: !877, line: 335, type: !1007, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1007 = !DISubroutineType(types: !1008)
!1008 = !{!108, !108, !108, !108}
!1009 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1010, line: 1125)
!1010 = !DISubprogram(name: "fmaf", scope: !877, file: !877, line: 335, type: !1011, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1011 = !DISubroutineType(types: !1012)
!1012 = !{!262, !262, !262, !262}
!1013 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1014, line: 1126)
!1014 = !DISubprogram(name: "fmal", scope: !877, file: !877, line: 335, type: !1015, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1015 = !DISubroutineType(types: !1016)
!1016 = !{!267, !267, !267, !267}
!1017 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1018, line: 1128)
!1018 = !DISubprogram(name: "fmax", scope: !877, file: !877, line: 329, type: !886, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1019 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1020, line: 1129)
!1020 = !DISubprogram(name: "fmaxf", scope: !877, file: !877, line: 329, type: !969, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1021 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1022, line: 1130)
!1022 = !DISubprogram(name: "fmaxl", scope: !877, file: !877, line: 329, type: !973, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1023 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1024, line: 1132)
!1024 = !DISubprogram(name: "fmin", scope: !877, file: !877, line: 332, type: !886, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1025 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1026, line: 1133)
!1026 = !DISubprogram(name: "fminf", scope: !877, file: !877, line: 332, type: !969, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1027 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1028, line: 1134)
!1028 = !DISubprogram(name: "fminl", scope: !877, file: !877, line: 332, type: !973, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1029 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1030, line: 1136)
!1030 = !DISubprogram(name: "hypot", scope: !877, file: !877, line: 147, type: !886, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1031 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1032, line: 1137)
!1032 = !DISubprogram(name: "hypotf", scope: !877, file: !877, line: 147, type: !969, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1033 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1034, line: 1138)
!1034 = !DISubprogram(name: "hypotl", scope: !877, file: !877, line: 147, type: !973, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1035 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1036, line: 1140)
!1036 = !DISubprogram(name: "ilogb", scope: !877, file: !877, line: 280, type: !1037, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1037 = !DISubroutineType(types: !1038)
!1038 = !{!82, !108}
!1039 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1040, line: 1141)
!1040 = !DISubprogram(name: "ilogbf", scope: !877, file: !877, line: 280, type: !1041, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1041 = !DISubroutineType(types: !1042)
!1042 = !{!82, !262}
!1043 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1044, line: 1142)
!1044 = !DISubprogram(name: "ilogbl", scope: !877, file: !877, line: 280, type: !1045, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1045 = !DISubroutineType(types: !1046)
!1046 = !{!82, !267}
!1047 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1048, line: 1144)
!1048 = !DISubprogram(name: "lgamma", scope: !877, file: !877, line: 230, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1049 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1050, line: 1145)
!1050 = !DISubprogram(name: "lgammaf", scope: !877, file: !877, line: 230, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1051 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1052, line: 1146)
!1052 = !DISubprogram(name: "lgammal", scope: !877, file: !877, line: 230, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1053 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1054, line: 1149)
!1054 = !DISubprogram(name: "llrint", scope: !877, file: !877, line: 316, type: !1055, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1055 = !DISubroutineType(types: !1056)
!1056 = !{!233, !108}
!1057 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1058, line: 1150)
!1058 = !DISubprogram(name: "llrintf", scope: !877, file: !877, line: 316, type: !1059, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1059 = !DISubroutineType(types: !1060)
!1060 = !{!233, !262}
!1061 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1062, line: 1151)
!1062 = !DISubprogram(name: "llrintl", scope: !877, file: !877, line: 316, type: !1063, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1063 = !DISubroutineType(types: !1064)
!1064 = !{!233, !267}
!1065 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1066, line: 1153)
!1066 = !DISubprogram(name: "llround", scope: !877, file: !877, line: 322, type: !1055, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1067 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1068, line: 1154)
!1068 = !DISubprogram(name: "llroundf", scope: !877, file: !877, line: 322, type: !1059, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1069 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1070, line: 1155)
!1070 = !DISubprogram(name: "llroundl", scope: !877, file: !877, line: 322, type: !1063, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1071 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1072, line: 1158)
!1072 = !DISubprogram(name: "log1p", scope: !877, file: !877, line: 122, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1073 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1074, line: 1159)
!1074 = !DISubprogram(name: "log1pf", scope: !877, file: !877, line: 122, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1075 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1076, line: 1160)
!1076 = !DISubprogram(name: "log1pl", scope: !877, file: !877, line: 122, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1077 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1078, line: 1162)
!1078 = !DISubprogram(name: "log2", scope: !877, file: !877, line: 133, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1079 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1080, line: 1163)
!1080 = !DISubprogram(name: "log2f", scope: !877, file: !877, line: 133, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1081 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1082, line: 1164)
!1082 = !DISubprogram(name: "log2l", scope: !877, file: !877, line: 133, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1083 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1084, line: 1166)
!1084 = !DISubprogram(name: "logb", scope: !877, file: !877, line: 125, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1085 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1086, line: 1167)
!1086 = !DISubprogram(name: "logbf", scope: !877, file: !877, line: 125, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1087 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1088, line: 1168)
!1088 = !DISubprogram(name: "logbl", scope: !877, file: !877, line: 125, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1089 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1090, line: 1170)
!1090 = !DISubprogram(name: "lrint", scope: !877, file: !877, line: 314, type: !1091, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1091 = !DISubroutineType(types: !1092)
!1092 = !{!91, !108}
!1093 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1094, line: 1171)
!1094 = !DISubprogram(name: "lrintf", scope: !877, file: !877, line: 314, type: !1095, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1095 = !DISubroutineType(types: !1096)
!1096 = !{!91, !262}
!1097 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1098, line: 1172)
!1098 = !DISubprogram(name: "lrintl", scope: !877, file: !877, line: 314, type: !1099, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1099 = !DISubroutineType(types: !1100)
!1100 = !{!91, !267}
!1101 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1102, line: 1174)
!1102 = !DISubprogram(name: "lround", scope: !877, file: !877, line: 320, type: !1091, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1103 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1104, line: 1175)
!1104 = !DISubprogram(name: "lroundf", scope: !877, file: !877, line: 320, type: !1095, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1105 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1106, line: 1176)
!1106 = !DISubprogram(name: "lroundl", scope: !877, file: !877, line: 320, type: !1099, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1107 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1108, line: 1178)
!1108 = !DISubprogram(name: "nan", scope: !877, file: !877, line: 201, type: !106, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1109 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1110, line: 1179)
!1110 = !DISubprogram(name: "nanf", scope: !877, file: !877, line: 201, type: !1111, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1111 = !DISubroutineType(types: !1112)
!1112 = !{!262, !109}
!1113 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1114, line: 1180)
!1114 = !DISubprogram(name: "nanl", scope: !877, file: !877, line: 201, type: !1115, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1115 = !DISubroutineType(types: !1116)
!1116 = !{!267, !109}
!1117 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1118, line: 1182)
!1118 = !DISubprogram(name: "nearbyint", scope: !877, file: !877, line: 294, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1119 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1120, line: 1183)
!1120 = !DISubprogram(name: "nearbyintf", scope: !877, file: !877, line: 294, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1121 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1122, line: 1184)
!1122 = !DISubprogram(name: "nearbyintl", scope: !877, file: !877, line: 294, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1123 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1124, line: 1186)
!1124 = !DISubprogram(name: "nextafter", scope: !877, file: !877, line: 259, type: !886, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1125 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1126, line: 1187)
!1126 = !DISubprogram(name: "nextafterf", scope: !877, file: !877, line: 259, type: !969, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1127 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1128, line: 1188)
!1128 = !DISubprogram(name: "nextafterl", scope: !877, file: !877, line: 259, type: !973, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1129 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1130, line: 1190)
!1130 = !DISubprogram(name: "nexttoward", scope: !877, file: !877, line: 261, type: !1131, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1131 = !DISubroutineType(types: !1132)
!1132 = !{!108, !108, !267}
!1133 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1134, line: 1191)
!1134 = !DISubprogram(name: "nexttowardf", scope: !877, file: !877, line: 261, type: !1135, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1135 = !DISubroutineType(types: !1136)
!1136 = !{!262, !262, !267}
!1137 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1138, line: 1192)
!1138 = !DISubprogram(name: "nexttowardl", scope: !877, file: !877, line: 261, type: !973, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1139 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1140, line: 1194)
!1140 = !DISubprogram(name: "remainder", scope: !877, file: !877, line: 272, type: !886, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1141 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1142, line: 1195)
!1142 = !DISubprogram(name: "remainderf", scope: !877, file: !877, line: 272, type: !969, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1143 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1144, line: 1196)
!1144 = !DISubprogram(name: "remainderl", scope: !877, file: !877, line: 272, type: !973, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1145 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1146, line: 1198)
!1146 = !DISubprogram(name: "remquo", scope: !877, file: !877, line: 307, type: !1147, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1147 = !DISubroutineType(types: !1148)
!1148 = !{!108, !108, !108, !906}
!1149 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1150, line: 1199)
!1150 = !DISubprogram(name: "remquof", scope: !877, file: !877, line: 307, type: !1151, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1151 = !DISubroutineType(types: !1152)
!1152 = !{!262, !262, !262, !906}
!1153 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1154, line: 1200)
!1154 = !DISubprogram(name: "remquol", scope: !877, file: !877, line: 307, type: !1155, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1155 = !DISubroutineType(types: !1156)
!1156 = !{!267, !267, !267, !906}
!1157 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1158, line: 1202)
!1158 = !DISubprogram(name: "rint", scope: !877, file: !877, line: 256, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1159 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1160, line: 1203)
!1160 = !DISubprogram(name: "rintf", scope: !877, file: !877, line: 256, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1161 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1162, line: 1204)
!1162 = !DISubprogram(name: "rintl", scope: !877, file: !877, line: 256, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1163 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1164, line: 1206)
!1164 = !DISubprogram(name: "round", scope: !877, file: !877, line: 298, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1165 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1166, line: 1207)
!1166 = !DISubprogram(name: "roundf", scope: !877, file: !877, line: 298, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1167 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1168, line: 1208)
!1168 = !DISubprogram(name: "roundl", scope: !877, file: !877, line: 298, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1169 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1170, line: 1210)
!1170 = !DISubprogram(name: "scalbln", scope: !877, file: !877, line: 290, type: !1171, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1171 = !DISubroutineType(types: !1172)
!1172 = !{!108, !108, !91}
!1173 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1174, line: 1211)
!1174 = !DISubprogram(name: "scalblnf", scope: !877, file: !877, line: 290, type: !1175, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1175 = !DISubroutineType(types: !1176)
!1176 = !{!262, !262, !91}
!1177 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1178, line: 1212)
!1178 = !DISubprogram(name: "scalblnl", scope: !877, file: !877, line: 290, type: !1179, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1179 = !DISubroutineType(types: !1180)
!1180 = !{!267, !267, !91}
!1181 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1182, line: 1214)
!1182 = !DISubprogram(name: "scalbn", scope: !877, file: !877, line: 276, type: !909, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1183 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1184, line: 1215)
!1184 = !DISubprogram(name: "scalbnf", scope: !877, file: !877, line: 276, type: !1185, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1185 = !DISubroutineType(types: !1186)
!1186 = !{!262, !262, !82}
!1187 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1188, line: 1216)
!1188 = !DISubprogram(name: "scalbnl", scope: !877, file: !877, line: 276, type: !1189, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1189 = !DISubroutineType(types: !1190)
!1190 = !{!267, !267, !82}
!1191 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1192, line: 1218)
!1192 = !DISubprogram(name: "tgamma", scope: !877, file: !877, line: 235, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1193 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1194, line: 1219)
!1194 = !DISubprogram(name: "tgammaf", scope: !877, file: !877, line: 235, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1195 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1196, line: 1220)
!1196 = !DISubprogram(name: "tgammal", scope: !877, file: !877, line: 235, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1197 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1198, line: 1222)
!1198 = !DISubprogram(name: "trunc", scope: !877, file: !877, line: 302, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1199 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1200, line: 1223)
!1200 = !DISubprogram(name: "truncf", scope: !877, file: !877, line: 302, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1201 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1202, line: 1224)
!1202 = !DISubprogram(name: "truncl", scope: !877, file: !877, line: 302, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1203 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1204, line: 58)
!1204 = !DIDerivedType(tag: DW_TAG_typedef, name: "fenv_t", file: !1205, line: 94, baseType: !1206)
!1205 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/fenv.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!1206 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1205, line: 75, flags: DIFlagFwdDecl, identifier: "_ZTS6fenv_t")
!1207 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1208, line: 59)
!1208 = !DIDerivedType(tag: DW_TAG_typedef, name: "fexcept_t", file: !1205, line: 68, baseType: !29)
!1209 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1210, line: 62)
!1210 = !DISubprogram(name: "feclearexcept", scope: !1211, file: !1211, line: 71, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1211 = !DIFile(filename: "/usr/include/fenv.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!1212 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1213, line: 63)
!1213 = !DISubprogram(name: "fegetexceptflag", scope: !1211, file: !1211, line: 75, type: !1214, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1214 = !DISubroutineType(types: !1215)
!1215 = !{!82, !1216, !82}
!1216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1208, size: 64)
!1217 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1218, line: 64)
!1218 = !DISubprogram(name: "feraiseexcept", scope: !1211, file: !1211, line: 78, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1219 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1220, line: 65)
!1220 = !DISubprogram(name: "fesetexceptflag", scope: !1211, file: !1211, line: 88, type: !1221, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1221 = !DISubroutineType(types: !1222)
!1222 = !{!82, !1223, !82}
!1223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1224, size: 64)
!1224 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1208)
!1225 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1226, line: 66)
!1226 = !DISubprogram(name: "fetestexcept", scope: !1211, file: !1211, line: 92, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1227 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1228, line: 68)
!1228 = !DISubprogram(name: "fegetround", scope: !1211, file: !1211, line: 104, type: !189, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1229 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1230, line: 69)
!1230 = !DISubprogram(name: "fesetround", scope: !1211, file: !1211, line: 107, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1231 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1232, line: 71)
!1232 = !DISubprogram(name: "fegetenv", scope: !1211, file: !1211, line: 114, type: !1233, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1233 = !DISubroutineType(types: !1234)
!1234 = !{!82, !1235}
!1235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1204, size: 64)
!1236 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1237, line: 72)
!1237 = !DISubprogram(name: "feholdexcept", scope: !1211, file: !1211, line: 119, type: !1233, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1238 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1239, line: 73)
!1239 = !DISubprogram(name: "fesetenv", scope: !1211, file: !1211, line: 123, type: !1240, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1240 = !DISubroutineType(types: !1241)
!1241 = !{!82, !1242}
!1242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1243, size: 64)
!1243 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1204)
!1244 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1245, line: 74)
!1245 = !DISubprogram(name: "feupdateenv", scope: !1211, file: !1211, line: 128, type: !1240, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1246 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1204, line: 61)
!1247 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1208, line: 62)
!1248 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1210, line: 65)
!1249 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1213, line: 66)
!1250 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1218, line: 67)
!1251 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1220, line: 68)
!1252 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1226, line: 69)
!1253 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1228, line: 71)
!1254 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1230, line: 72)
!1255 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1232, line: 74)
!1256 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1237, line: 75)
!1257 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1239, line: 76)
!1258 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1245, line: 77)
!1259 = !{i32 2, !"Dwarf Version", i32 4}
!1260 = !{i32 2, !"Debug Info Version", i32 3}
!1261 = distinct !DISubprogram(name: "__remill_basic_block", scope: !2, file: !2, line: 52, type: !1262, isLocal: false, isDefinition: true, scopeLine: 52, flags: DIFlagPrototyped, isOptimized: false, unit: !1, variables: !7)
!1262 = !DISubroutineType(types: !1263)
!1263 = !{!1264, !1267, !1950, !1264}
!1264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1265, size: 64)
!1265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Memory", file: !1266, line: 36, flags: DIFlagFwdDecl, identifier: "_ZTS6Memory")
!1266 = !DIFile(filename: "/home/ubuntu/Github/remill/remill/Arch/Runtime/Types.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!1267 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !1268, size: 64)
!1268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "State", file: !27, line: 742, size: 27008, align: 128, elements: !1269, identifier: "_ZTS5State")
!1269 = !{!1270, !1282, !1491, !1511, !1541, !1566, !1595, !1632, !1642, !1703, !1728, !1752, !1932}
!1270 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !1268, baseType: !1271)
!1271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ArchState", file: !1272, line: 21, size: 128, elements: !1273, identifier: "_ZTS9ArchState")
!1272 = !DIFile(filename: "/home/ubuntu/Github/remill/remill/Arch/Runtime/State.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!1273 = !{!1274, !1275, !1276}
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "hyper_call", scope: !1271, file: !1272, line: 23, baseType: !4, size: 32)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "_0", scope: !1271, file: !1272, line: 25, baseType: !8, size: 32, offset: 32)
!1276 = !DIDerivedType(tag: DW_TAG_member, scope: !1271, file: !1272, line: 31, baseType: !1277, size: 64, offset: 64)
!1277 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1271, file: !1272, line: 31, size: 64, elements: !1278, identifier: "_ZTSN9ArchStateUt_E")
!1278 = !{!1279, !1280, !1281}
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "addr_to_load", scope: !1277, file: !1272, line: 32, baseType: !637, size: 64)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "addr_to_store", scope: !1277, file: !1272, line: 33, baseType: !637, size: 64)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "hyper_call_vector", scope: !1277, file: !1272, line: 34, baseType: !8, size: 32)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1268, file: !27, line: 747, baseType: !1283, size: 16384, offset: 128)
!1283 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1284, size: 16384, elements: !1369)
!1284 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "VectorReg", file: !27, line: 636, size: 512, align: 128, elements: !1285, identifier: "_ZTS9VectorReg")
!1285 = !{!1286, !1361, !1426}
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "xmm", scope: !1284, file: !27, line: 637, baseType: !1287, size: 128, align: 128)
!1287 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "vec128_t", file: !1266, line: 317, size: 128, elements: !1288, identifier: "_ZTS8vec128_t")
!1288 = !{!1289, !1298, !1305, !1312, !1317, !1324, !1329, !1334, !1339, !1344, !1349, !1354}
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "dqwords", scope: !1287, file: !1266, line: 321, baseType: !1290, size: 128)
!1290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint128v1_t", file: !1266, line: 205, size: 128, elements: !1291, identifier: "_ZTS11uint128v1_t")
!1291 = !{!1292}
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1290, file: !1266, line: 205, baseType: !1293, size: 128)
!1293 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1294, size: 128, elements: !1296)
!1294 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint128_t", file: !1266, line: 46, baseType: !1295)
!1295 = !DIBasicType(name: "unsigned __int128", size: 128, encoding: DW_ATE_unsigned)
!1296 = !{!1297}
!1297 = !DISubrange(count: 1)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !1287, file: !1266, line: 323, baseType: !1299, size: 128)
!1299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint8v16_t", file: !1266, line: 182, size: 128, elements: !1300, identifier: "_ZTS10uint8v16_t")
!1300 = !{!1301}
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1299, file: !1266, line: 182, baseType: !1302, size: 128)
!1302 = !DICompositeType(tag: DW_TAG_array_type, baseType: !62, size: 128, elements: !1303)
!1303 = !{!1304}
!1304 = !DISubrange(count: 16)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !1287, file: !1266, line: 324, baseType: !1306, size: 128)
!1306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint16v8_t", file: !1266, line: 189, size: 128, elements: !1307, identifier: "_ZTS10uint16v8_t")
!1307 = !{!1308}
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1306, file: !1266, line: 189, baseType: !1309, size: 128)
!1309 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 128, elements: !1310)
!1310 = !{!1311}
!1311 = !DISubrange(count: 8)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "dwords", scope: !1287, file: !1266, line: 325, baseType: !1313, size: 128)
!1313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint32v4_t", file: !1266, line: 195, size: 128, elements: !1314, identifier: "_ZTS10uint32v4_t")
!1314 = !{!1315}
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1313, file: !1266, line: 195, baseType: !1316, size: 128)
!1316 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 128, elements: !353)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "qwords", scope: !1287, file: !1266, line: 326, baseType: !1318, size: 128)
!1318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint64v2_t", file: !1266, line: 200, size: 128, elements: !1319, identifier: "_ZTS10uint64v2_t")
!1319 = !{!1320}
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1318, file: !1266, line: 200, baseType: !1321, size: 128)
!1321 = !DICompositeType(tag: DW_TAG_array_type, baseType: !637, size: 128, elements: !1322)
!1322 = !{!1323}
!1323 = !DISubrange(count: 2)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "floats", scope: !1287, file: !1266, line: 327, baseType: !1325, size: 128)
!1325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "float32v4_t", file: !1266, line: 242, size: 128, elements: !1326, identifier: "_ZTS11float32v4_t")
!1326 = !{!1327}
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1325, file: !1266, line: 242, baseType: !1328, size: 128)
!1328 = !DICompositeType(tag: DW_TAG_array_type, baseType: !262, size: 128, elements: !353)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "doubles", scope: !1287, file: !1266, line: 328, baseType: !1330, size: 128)
!1330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "float64v2_t", file: !1266, line: 247, size: 128, elements: !1331, identifier: "_ZTS11float64v2_t")
!1331 = !{!1332}
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1330, file: !1266, line: 247, baseType: !1333, size: 128)
!1333 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 128, elements: !1322)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "sbytes", scope: !1287, file: !1266, line: 330, baseType: !1335, size: 128)
!1335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int8v16_t", file: !1266, line: 213, size: 128, elements: !1336, identifier: "_ZTS9int8v16_t")
!1336 = !{!1337}
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1335, file: !1266, line: 213, baseType: !1338, size: 128)
!1338 = !DICompositeType(tag: DW_TAG_array_type, baseType: !604, size: 128, elements: !1303)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "swords", scope: !1287, file: !1266, line: 331, baseType: !1340, size: 128)
!1340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int16v8_t", file: !1266, line: 220, size: 128, elements: !1341, identifier: "_ZTS9int16v8_t")
!1341 = !{!1342}
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1340, file: !1266, line: 220, baseType: !1343, size: 128)
!1343 = !DICompositeType(tag: DW_TAG_array_type, baseType: !607, size: 128, elements: !1310)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "sdwords", scope: !1287, file: !1266, line: 332, baseType: !1345, size: 128)
!1345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int32v4_t", file: !1266, line: 226, size: 128, elements: !1346, identifier: "_ZTS9int32v4_t")
!1346 = !{!1347}
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1345, file: !1266, line: 226, baseType: !1348, size: 128)
!1348 = !DICompositeType(tag: DW_TAG_array_type, baseType: !610, size: 128, elements: !353)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "sqwords", scope: !1287, file: !1266, line: 333, baseType: !1350, size: 128)
!1350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int64v2_t", file: !1266, line: 231, size: 128, elements: !1351, identifier: "_ZTS9int64v2_t")
!1351 = !{!1352}
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1350, file: !1266, line: 231, baseType: !1353, size: 128)
!1353 = !DICompositeType(tag: DW_TAG_array_type, baseType: !612, size: 128, elements: !1322)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "sdqwords", scope: !1287, file: !1266, line: 334, baseType: !1355, size: 128)
!1355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int128v1_t", file: !1266, line: 236, size: 128, elements: !1356, identifier: "_ZTS10int128v1_t")
!1356 = !{!1357}
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1355, file: !1266, line: 236, baseType: !1358, size: 128)
!1358 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1359, size: 128, elements: !1296)
!1359 = !DIDerivedType(tag: DW_TAG_typedef, name: "int128_t", file: !1266, line: 47, baseType: !1360)
!1360 = !DIBasicType(name: "__int128", size: 128, encoding: DW_ATE_signed)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "ymm", scope: !1284, file: !27, line: 638, baseType: !1362, size: 256, align: 128)
!1362 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "vec256_t", file: !1266, line: 340, size: 256, elements: !1363, identifier: "_ZTS8vec256_t")
!1363 = !{!1364, !1371, !1376, !1381, !1386, !1391, !1396, !1401, !1406, !1411, !1416, !1421}
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !1362, file: !1266, line: 341, baseType: !1365, size: 256)
!1365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint8v32_t", file: !1266, line: 183, size: 256, elements: !1366, identifier: "_ZTS10uint8v32_t")
!1366 = !{!1367}
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1365, file: !1266, line: 183, baseType: !1368, size: 256)
!1368 = !DICompositeType(tag: DW_TAG_array_type, baseType: !62, size: 256, elements: !1369)
!1369 = !{!1370}
!1370 = !DISubrange(count: 32)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !1362, file: !1266, line: 342, baseType: !1372, size: 256)
!1372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint16v16_t", file: !1266, line: 190, size: 256, elements: !1373, identifier: "_ZTS11uint16v16_t")
!1373 = !{!1374}
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1372, file: !1266, line: 190, baseType: !1375, size: 256)
!1375 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 256, elements: !1303)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "dwords", scope: !1362, file: !1266, line: 343, baseType: !1377, size: 256)
!1377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint32v8_t", file: !1266, line: 196, size: 256, elements: !1378, identifier: "_ZTS10uint32v8_t")
!1378 = !{!1379}
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1377, file: !1266, line: 196, baseType: !1380, size: 256)
!1380 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 256, elements: !1310)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "qwords", scope: !1362, file: !1266, line: 344, baseType: !1382, size: 256)
!1382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint64v4_t", file: !1266, line: 201, size: 256, elements: !1383, identifier: "_ZTS10uint64v4_t")
!1383 = !{!1384}
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1382, file: !1266, line: 201, baseType: !1385, size: 256)
!1385 = !DICompositeType(tag: DW_TAG_array_type, baseType: !637, size: 256, elements: !353)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "dqwords", scope: !1362, file: !1266, line: 345, baseType: !1387, size: 256)
!1387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint128v2_t", file: !1266, line: 206, size: 256, elements: !1388, identifier: "_ZTS11uint128v2_t")
!1388 = !{!1389}
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1387, file: !1266, line: 206, baseType: !1390, size: 256)
!1390 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1294, size: 256, elements: !1322)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "floats", scope: !1362, file: !1266, line: 346, baseType: !1392, size: 256)
!1392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "float32v8_t", file: !1266, line: 243, size: 256, elements: !1393, identifier: "_ZTS11float32v8_t")
!1393 = !{!1394}
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1392, file: !1266, line: 243, baseType: !1395, size: 256)
!1395 = !DICompositeType(tag: DW_TAG_array_type, baseType: !262, size: 256, elements: !1310)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "doubles", scope: !1362, file: !1266, line: 347, baseType: !1397, size: 256)
!1397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "float64v4_t", file: !1266, line: 248, size: 256, elements: !1398, identifier: "_ZTS11float64v4_t")
!1398 = !{!1399}
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1397, file: !1266, line: 248, baseType: !1400, size: 256)
!1400 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 256, elements: !353)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "sbytes", scope: !1362, file: !1266, line: 349, baseType: !1402, size: 256)
!1402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int8v32_t", file: !1266, line: 214, size: 256, elements: !1403, identifier: "_ZTS9int8v32_t")
!1403 = !{!1404}
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1402, file: !1266, line: 214, baseType: !1405, size: 256)
!1405 = !DICompositeType(tag: DW_TAG_array_type, baseType: !604, size: 256, elements: !1369)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "swords", scope: !1362, file: !1266, line: 350, baseType: !1407, size: 256)
!1407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int16v16_t", file: !1266, line: 221, size: 256, elements: !1408, identifier: "_ZTS10int16v16_t")
!1408 = !{!1409}
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1407, file: !1266, line: 221, baseType: !1410, size: 256)
!1410 = !DICompositeType(tag: DW_TAG_array_type, baseType: !607, size: 256, elements: !1303)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "sdwords", scope: !1362, file: !1266, line: 351, baseType: !1412, size: 256)
!1412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int32v8_t", file: !1266, line: 227, size: 256, elements: !1413, identifier: "_ZTS9int32v8_t")
!1413 = !{!1414}
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1412, file: !1266, line: 227, baseType: !1415, size: 256)
!1415 = !DICompositeType(tag: DW_TAG_array_type, baseType: !610, size: 256, elements: !1310)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "sqwords", scope: !1362, file: !1266, line: 352, baseType: !1417, size: 256)
!1417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int64v4_t", file: !1266, line: 232, size: 256, elements: !1418, identifier: "_ZTS9int64v4_t")
!1418 = !{!1419}
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1417, file: !1266, line: 232, baseType: !1420, size: 256)
!1420 = !DICompositeType(tag: DW_TAG_array_type, baseType: !612, size: 256, elements: !353)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "sdqwords", scope: !1362, file: !1266, line: 353, baseType: !1422, size: 256)
!1422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int128v2_t", file: !1266, line: 237, size: 256, elements: !1423, identifier: "_ZTS10int128v2_t")
!1423 = !{!1424}
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1422, file: !1266, line: 237, baseType: !1425, size: 256)
!1425 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1359, size: 256, elements: !1322)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "zmm", scope: !1284, file: !27, line: 639, baseType: !1427, size: 512, align: 128)
!1427 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "vec512_t", file: !1266, line: 359, size: 512, elements: !1428, identifier: "_ZTS8vec512_t")
!1428 = !{!1429, !1436, !1441, !1446, !1451, !1456, !1461, !1466, !1471, !1476, !1481, !1486}
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !1427, file: !1266, line: 360, baseType: !1430, size: 512)
!1430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint8v64_t", file: !1266, line: 184, size: 512, elements: !1431, identifier: "_ZTS10uint8v64_t")
!1431 = !{!1432}
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1430, file: !1266, line: 184, baseType: !1433, size: 512)
!1433 = !DICompositeType(tag: DW_TAG_array_type, baseType: !62, size: 512, elements: !1434)
!1434 = !{!1435}
!1435 = !DISubrange(count: 64)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !1427, file: !1266, line: 361, baseType: !1437, size: 512)
!1437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint16v32_t", file: !1266, line: 191, size: 512, elements: !1438, identifier: "_ZTS11uint16v32_t")
!1438 = !{!1439}
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1437, file: !1266, line: 191, baseType: !1440, size: 512)
!1440 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 512, elements: !1369)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "dwords", scope: !1427, file: !1266, line: 362, baseType: !1442, size: 512)
!1442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint32v16_t", file: !1266, line: 197, size: 512, elements: !1443, identifier: "_ZTS11uint32v16_t")
!1443 = !{!1444}
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1442, file: !1266, line: 197, baseType: !1445, size: 512)
!1445 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 512, elements: !1303)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "qwords", scope: !1427, file: !1266, line: 363, baseType: !1447, size: 512)
!1447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint64v8_t", file: !1266, line: 202, size: 512, elements: !1448, identifier: "_ZTS10uint64v8_t")
!1448 = !{!1449}
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1447, file: !1266, line: 202, baseType: !1450, size: 512)
!1450 = !DICompositeType(tag: DW_TAG_array_type, baseType: !637, size: 512, elements: !1310)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "dqwords", scope: !1427, file: !1266, line: 364, baseType: !1452, size: 512)
!1452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint128v4_t", file: !1266, line: 207, size: 512, elements: !1453, identifier: "_ZTS11uint128v4_t")
!1453 = !{!1454}
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1452, file: !1266, line: 207, baseType: !1455, size: 512)
!1455 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1294, size: 512, elements: !353)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "floats", scope: !1427, file: !1266, line: 365, baseType: !1457, size: 512)
!1457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "float32v16_t", file: !1266, line: 244, size: 512, elements: !1458, identifier: "_ZTS12float32v16_t")
!1458 = !{!1459}
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1457, file: !1266, line: 244, baseType: !1460, size: 512)
!1460 = !DICompositeType(tag: DW_TAG_array_type, baseType: !262, size: 512, elements: !1303)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "doubles", scope: !1427, file: !1266, line: 366, baseType: !1462, size: 512)
!1462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "float64v8_t", file: !1266, line: 249, size: 512, elements: !1463, identifier: "_ZTS11float64v8_t")
!1463 = !{!1464}
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1462, file: !1266, line: 249, baseType: !1465, size: 512)
!1465 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 512, elements: !1310)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "sbytes", scope: !1427, file: !1266, line: 368, baseType: !1467, size: 512)
!1467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int8v64_t", file: !1266, line: 215, size: 512, elements: !1468, identifier: "_ZTS9int8v64_t")
!1468 = !{!1469}
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1467, file: !1266, line: 215, baseType: !1470, size: 512)
!1470 = !DICompositeType(tag: DW_TAG_array_type, baseType: !604, size: 512, elements: !1434)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "swords", scope: !1427, file: !1266, line: 369, baseType: !1472, size: 512)
!1472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int16v32_t", file: !1266, line: 222, size: 512, elements: !1473, identifier: "_ZTS10int16v32_t")
!1473 = !{!1474}
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1472, file: !1266, line: 222, baseType: !1475, size: 512)
!1475 = !DICompositeType(tag: DW_TAG_array_type, baseType: !607, size: 512, elements: !1369)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "sdwords", scope: !1427, file: !1266, line: 370, baseType: !1477, size: 512)
!1477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int32v16_t", file: !1266, line: 228, size: 512, elements: !1478, identifier: "_ZTS10int32v16_t")
!1478 = !{!1479}
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1477, file: !1266, line: 228, baseType: !1480, size: 512)
!1480 = !DICompositeType(tag: DW_TAG_array_type, baseType: !610, size: 512, elements: !1303)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "sqwords", scope: !1427, file: !1266, line: 371, baseType: !1482, size: 512)
!1482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int64v8_t", file: !1266, line: 233, size: 512, elements: !1483, identifier: "_ZTS9int64v8_t")
!1483 = !{!1484}
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1482, file: !1266, line: 233, baseType: !1485, size: 512)
!1485 = !DICompositeType(tag: DW_TAG_array_type, baseType: !612, size: 512, elements: !1310)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "sdqwords", scope: !1427, file: !1266, line: 372, baseType: !1487, size: 512)
!1487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int128v4_t", file: !1266, line: 238, size: 512, elements: !1488, identifier: "_ZTS10int128v4_t")
!1488 = !{!1489}
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1487, file: !1266, line: 238, baseType: !1490, size: 512)
!1490 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1359, size: 512, elements: !353)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "aflag", scope: !1268, file: !27, line: 751, baseType: !1492, size: 128, align: 64, offset: 16512)
!1492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ArithFlags", file: !27, line: 402, size: 128, align: 64, elements: !1493, identifier: "_ZTS10ArithFlags")
!1493 = !{!1494, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510}
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "_0", scope: !1492, file: !27, line: 404, baseType: !1495, size: 8)
!1495 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !62)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "cf", scope: !1492, file: !27, line: 405, baseType: !62, size: 8, offset: 8)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "_1", scope: !1492, file: !27, line: 406, baseType: !1495, size: 8, offset: 16)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "pf", scope: !1492, file: !27, line: 407, baseType: !62, size: 8, offset: 24)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "_2", scope: !1492, file: !27, line: 408, baseType: !1495, size: 8, offset: 32)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "af", scope: !1492, file: !27, line: 409, baseType: !62, size: 8, offset: 40)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "_3", scope: !1492, file: !27, line: 410, baseType: !1495, size: 8, offset: 48)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "zf", scope: !1492, file: !27, line: 411, baseType: !62, size: 8, offset: 56)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "_4", scope: !1492, file: !27, line: 412, baseType: !1495, size: 8, offset: 64)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !1492, file: !27, line: 413, baseType: !62, size: 8, offset: 72)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "_5", scope: !1492, file: !27, line: 414, baseType: !1495, size: 8, offset: 80)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "df", scope: !1492, file: !27, line: 415, baseType: !62, size: 8, offset: 88)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "_6", scope: !1492, file: !27, line: 416, baseType: !1495, size: 8, offset: 96)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "of", scope: !1492, file: !27, line: 417, baseType: !62, size: 8, offset: 104)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "_7", scope: !1492, file: !27, line: 418, baseType: !1495, size: 8, offset: 112)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "_8", scope: !1492, file: !27, line: 419, baseType: !1495, size: 8, offset: 120)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "rflag", scope: !1268, file: !27, line: 752, baseType: !1512, size: 64, align: 64, offset: 16640)
!1512 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "Flags", file: !27, line: 366, size: 64, align: 64, elements: !1513, identifier: "_ZTS5Flags")
!1513 = !{!1514, !1515}
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "flat", scope: !1512, file: !27, line: 367, baseType: !637, size: 64)
!1515 = !DIDerivedType(tag: DW_TAG_member, scope: !1512, file: !27, line: 368, baseType: !1516, size: 64)
!1516 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1512, file: !27, line: 368, size: 64, elements: !1517, identifier: "_ZTSN5FlagsUt_E")
!1517 = !{!1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540}
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "cf", scope: !1516, file: !27, line: 369, baseType: !8, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "must_be_1", scope: !1516, file: !27, line: 370, baseType: !8, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "pf", scope: !1516, file: !27, line: 371, baseType: !8, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "must_be_0a", scope: !1516, file: !27, line: 372, baseType: !8, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "af", scope: !1516, file: !27, line: 374, baseType: !8, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "must_be_0b", scope: !1516, file: !27, line: 375, baseType: !8, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "zf", scope: !1516, file: !27, line: 376, baseType: !8, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !1516, file: !27, line: 377, baseType: !8, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "tf", scope: !1516, file: !27, line: 379, baseType: !8, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "_if", scope: !1516, file: !27, line: 380, baseType: !8, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "df", scope: !1516, file: !27, line: 381, baseType: !8, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "of", scope: !1516, file: !27, line: 382, baseType: !8, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "iopl", scope: !1516, file: !27, line: 384, baseType: !8, size: 2, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "nt", scope: !1516, file: !27, line: 385, baseType: !8, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "must_be_0c", scope: !1516, file: !27, line: 386, baseType: !8, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "rf", scope: !1516, file: !27, line: 388, baseType: !8, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "vm", scope: !1516, file: !27, line: 389, baseType: !8, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "ac", scope: !1516, file: !27, line: 390, baseType: !8, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "vif", scope: !1516, file: !27, line: 391, baseType: !8, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "vip", scope: !1516, file: !27, line: 393, baseType: !8, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1516, file: !27, line: 394, baseType: !8, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_eflags", scope: !1516, file: !27, line: 395, baseType: !8, size: 10, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_rflags", scope: !1516, file: !27, line: 396, baseType: !8, size: 32, offset: 32)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "seg", scope: !1268, file: !27, line: 753, baseType: !1542, size: 192, align: 64, offset: 16704)
!1542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Segments", file: !27, line: 451, size: 192, align: 64, elements: !1543, identifier: "_ZTS8Segments")
!1543 = !{!1544, !1546, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565}
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "_0", scope: !1542, file: !27, line: 452, baseType: !1545, size: 16)
!1545 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !28)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !1542, file: !27, line: 453, baseType: !1547, size: 16, offset: 16)
!1547 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "SegmentSelector", file: !27, line: 76, size: 16, elements: !1548, identifier: "_ZTS15SegmentSelector")
!1548 = !{!1549, !1550}
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "flat", scope: !1547, file: !27, line: 77, baseType: !28, size: 16)
!1550 = !DIDerivedType(tag: DW_TAG_member, scope: !1547, file: !27, line: 78, baseType: !1551, size: 16)
!1551 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1547, file: !27, line: 78, size: 16, elements: !1552, identifier: "_ZTSN15SegmentSelectorUt_E")
!1552 = !{!1553, !1554, !1555}
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "rpi", scope: !1551, file: !27, line: 79, baseType: !26, size: 2, flags: DIFlagBitField, extraData: i64 0)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "ti", scope: !1551, file: !27, line: 80, baseType: !35, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1551, file: !27, line: 81, baseType: !28, size: 13, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "_1", scope: !1542, file: !27, line: 454, baseType: !1545, size: 16, offset: 32)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !1542, file: !27, line: 455, baseType: !1547, size: 16, offset: 48)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "_2", scope: !1542, file: !27, line: 456, baseType: !1545, size: 16, offset: 64)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "gs", scope: !1542, file: !27, line: 457, baseType: !1547, size: 16, offset: 80)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "_3", scope: !1542, file: !27, line: 458, baseType: !1545, size: 16, offset: 96)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1542, file: !27, line: 459, baseType: !1547, size: 16, offset: 112)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "_4", scope: !1542, file: !27, line: 460, baseType: !1545, size: 16, offset: 128)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1542, file: !27, line: 461, baseType: !1547, size: 16, offset: 144)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "_5", scope: !1542, file: !27, line: 462, baseType: !1545, size: 16, offset: 160)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !1542, file: !27, line: 463, baseType: !1547, size: 16, offset: 176)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !1268, file: !27, line: 754, baseType: !1567, size: 768, align: 64, offset: 16896)
!1567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AddressSpace", file: !27, line: 654, size: 768, align: 64, elements: !1568, identifier: "_ZTS12AddressSpace")
!1568 = !{!1569, !1571, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594}
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "_0", scope: !1567, file: !27, line: 655, baseType: !1570, size: 64)
!1570 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !637)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "ss_base", scope: !1567, file: !27, line: 656, baseType: !1572, size: 64, offset: 64)
!1572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Reg", file: !27, line: 610, size: 64, elements: !1573, identifier: "_ZTS3Reg")
!1573 = !{!1574}
!1574 = !DIDerivedType(tag: DW_TAG_member, scope: !1572, file: !27, line: 611, baseType: !1575, size: 64)
!1575 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1572, file: !27, line: 611, size: 64, elements: !1576, identifier: "_ZTSN3RegUt_E")
!1576 = !{!1577, !1582, !1583, !1584}
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "byte", scope: !1575, file: !27, line: 615, baseType: !1578, size: 16, align: 8)
!1578 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1575, file: !27, line: 612, size: 16, elements: !1579, identifier: "_ZTSN3RegUt_Ut_E")
!1579 = !{!1580, !1581}
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !1578, file: !27, line: 613, baseType: !62, size: 8)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !1578, file: !27, line: 614, baseType: !62, size: 8, offset: 8)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "word", scope: !1575, file: !27, line: 616, baseType: !28, size: 16, align: 16)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "dword", scope: !1575, file: !27, line: 617, baseType: !8, size: 32, align: 32)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "qword", scope: !1575, file: !27, line: 618, baseType: !637, size: 64, align: 64)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "_1", scope: !1567, file: !27, line: 657, baseType: !1570, size: 64, offset: 128)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "es_base", scope: !1567, file: !27, line: 658, baseType: !1572, size: 64, offset: 192)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "_2", scope: !1567, file: !27, line: 659, baseType: !1570, size: 64, offset: 256)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "gs_base", scope: !1567, file: !27, line: 660, baseType: !1572, size: 64, offset: 320)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "_3", scope: !1567, file: !27, line: 661, baseType: !1570, size: 64, offset: 384)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "fs_base", scope: !1567, file: !27, line: 662, baseType: !1572, size: 64, offset: 448)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "_4", scope: !1567, file: !27, line: 663, baseType: !1570, size: 64, offset: 512)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "ds_base", scope: !1567, file: !27, line: 664, baseType: !1572, size: 64, offset: 576)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "_5", scope: !1567, file: !27, line: 665, baseType: !1570, size: 64, offset: 640)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "cs_base", scope: !1567, file: !27, line: 666, baseType: !1572, size: 64, offset: 704)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "gpr", scope: !1268, file: !27, line: 755, baseType: !1596, size: 2176, align: 64, offset: 17664)
!1596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GPR", file: !27, line: 677, size: 2176, align: 64, elements: !1597, identifier: "_ZTS3GPR")
!1597 = !{!1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1631}
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "_0", scope: !1596, file: !27, line: 679, baseType: !1570, size: 64)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "rax", scope: !1596, file: !27, line: 680, baseType: !1572, size: 64, offset: 64)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "_1", scope: !1596, file: !27, line: 681, baseType: !1570, size: 64, offset: 128)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "rbx", scope: !1596, file: !27, line: 682, baseType: !1572, size: 64, offset: 192)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "_2", scope: !1596, file: !27, line: 683, baseType: !1570, size: 64, offset: 256)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "rcx", scope: !1596, file: !27, line: 684, baseType: !1572, size: 64, offset: 320)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "_3", scope: !1596, file: !27, line: 685, baseType: !1570, size: 64, offset: 384)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "rdx", scope: !1596, file: !27, line: 686, baseType: !1572, size: 64, offset: 448)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "_4", scope: !1596, file: !27, line: 687, baseType: !1570, size: 64, offset: 512)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "rsi", scope: !1596, file: !27, line: 688, baseType: !1572, size: 64, offset: 576)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "_5", scope: !1596, file: !27, line: 689, baseType: !1570, size: 64, offset: 640)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "rdi", scope: !1596, file: !27, line: 690, baseType: !1572, size: 64, offset: 704)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "_6", scope: !1596, file: !27, line: 691, baseType: !1570, size: 64, offset: 768)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "rsp", scope: !1596, file: !27, line: 692, baseType: !1572, size: 64, offset: 832)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "_7", scope: !1596, file: !27, line: 693, baseType: !1570, size: 64, offset: 896)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "rbp", scope: !1596, file: !27, line: 694, baseType: !1572, size: 64, offset: 960)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "_8", scope: !1596, file: !27, line: 695, baseType: !1570, size: 64, offset: 1024)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !1596, file: !27, line: 696, baseType: !1572, size: 64, offset: 1088)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "_9", scope: !1596, file: !27, line: 697, baseType: !1570, size: 64, offset: 1152)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !1596, file: !27, line: 698, baseType: !1572, size: 64, offset: 1216)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "_10", scope: !1596, file: !27, line: 699, baseType: !1570, size: 64, offset: 1280)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !1596, file: !27, line: 700, baseType: !1572, size: 64, offset: 1344)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "_11", scope: !1596, file: !27, line: 701, baseType: !1570, size: 64, offset: 1408)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !1596, file: !27, line: 702, baseType: !1572, size: 64, offset: 1472)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "_12", scope: !1596, file: !27, line: 703, baseType: !1570, size: 64, offset: 1536)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !1596, file: !27, line: 704, baseType: !1572, size: 64, offset: 1600)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "_13", scope: !1596, file: !27, line: 705, baseType: !1570, size: 64, offset: 1664)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !1596, file: !27, line: 706, baseType: !1572, size: 64, offset: 1728)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "_14", scope: !1596, file: !27, line: 707, baseType: !1570, size: 64, offset: 1792)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !1596, file: !27, line: 708, baseType: !1572, size: 64, offset: 1856)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "_15", scope: !1596, file: !27, line: 709, baseType: !1570, size: 64, offset: 1920)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !1596, file: !27, line: 710, baseType: !1572, size: 64, offset: 1984)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "_16", scope: !1596, file: !27, line: 711, baseType: !1570, size: 64, offset: 2048)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !1596, file: !27, line: 714, baseType: !1572, size: 64, offset: 2112)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "st", scope: !1268, file: !27, line: 756, baseType: !1633, size: 1024, align: 64, offset: 19840)
!1633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "X87Stack", file: !27, line: 719, size: 1024, align: 64, elements: !1634, identifier: "_ZTS8X87Stack")
!1634 = !{!1635}
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1633, file: !27, line: 723, baseType: !1636, size: 1024)
!1636 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1637, size: 1024, elements: !1310)
!1637 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1633, file: !27, line: 720, size: 128, align: 64, elements: !1638, identifier: "_ZTSN8X87StackUt_E")
!1638 = !{!1639, !1640}
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "_0", scope: !1637, file: !27, line: 721, baseType: !637, size: 64)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1637, file: !27, line: 722, baseType: !1641, size: 64, offset: 64)
!1641 = !DIDerivedType(tag: DW_TAG_typedef, name: "float64_t", file: !1266, line: 61, baseType: !108)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "mmx", scope: !1268, file: !27, line: 757, baseType: !1643, size: 1024, align: 64, offset: 20864)
!1643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MMX", file: !27, line: 729, size: 1024, align: 64, elements: !1644, identifier: "_ZTS3MMX")
!1644 = !{!1645}
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1643, file: !27, line: 733, baseType: !1646, size: 1024)
!1646 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1647, size: 1024, elements: !1310)
!1647 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1643, file: !27, line: 730, size: 128, align: 64, elements: !1648, identifier: "_ZTSN3MMXUt_E")
!1648 = !{!1649, !1650}
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "_0", scope: !1647, file: !27, line: 731, baseType: !637, size: 64)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1647, file: !27, line: 732, baseType: !1651, size: 64, offset: 64)
!1651 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "vec64_t", file: !1266, line: 294, size: 64, elements: !1652, identifier: "_ZTS7vec64_t")
!1652 = !{!1653, !1658, !1663, !1668, !1673, !1678, !1683, !1688, !1693, !1698}
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "qwords", scope: !1651, file: !1266, line: 298, baseType: !1654, size: 64)
!1654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint64v1_t", file: !1266, line: 199, size: 64, elements: !1655, identifier: "_ZTS10uint64v1_t")
!1655 = !{!1656}
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1654, file: !1266, line: 199, baseType: !1657, size: 64)
!1657 = !DICompositeType(tag: DW_TAG_array_type, baseType: !637, size: 64, elements: !1296)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !1651, file: !1266, line: 300, baseType: !1659, size: 64)
!1659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint8v8_t", file: !1266, line: 181, size: 64, elements: !1660, identifier: "_ZTS9uint8v8_t")
!1660 = !{!1661}
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1659, file: !1266, line: 181, baseType: !1662, size: 64)
!1662 = !DICompositeType(tag: DW_TAG_array_type, baseType: !62, size: 64, elements: !1310)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !1651, file: !1266, line: 301, baseType: !1664, size: 64)
!1664 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint16v4_t", file: !1266, line: 188, size: 64, elements: !1665, identifier: "_ZTS10uint16v4_t")
!1665 = !{!1666}
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1664, file: !1266, line: 188, baseType: !1667, size: 64)
!1667 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 64, elements: !353)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "dwords", scope: !1651, file: !1266, line: 302, baseType: !1669, size: 64)
!1669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint32v2_t", file: !1266, line: 194, size: 64, elements: !1670, identifier: "_ZTS10uint32v2_t")
!1670 = !{!1671}
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1669, file: !1266, line: 194, baseType: !1672, size: 64)
!1672 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 64, elements: !1322)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "floats", scope: !1651, file: !1266, line: 303, baseType: !1674, size: 64)
!1674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "float32v2_t", file: !1266, line: 241, size: 64, elements: !1675, identifier: "_ZTS11float32v2_t")
!1675 = !{!1676}
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1674, file: !1266, line: 241, baseType: !1677, size: 64)
!1677 = !DICompositeType(tag: DW_TAG_array_type, baseType: !262, size: 64, elements: !1322)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "doubles", scope: !1651, file: !1266, line: 304, baseType: !1679, size: 64)
!1679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "float64v1_t", file: !1266, line: 246, size: 64, elements: !1680, identifier: "_ZTS11float64v1_t")
!1680 = !{!1681}
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1679, file: !1266, line: 246, baseType: !1682, size: 64)
!1682 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 64, elements: !1296)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "sbytes", scope: !1651, file: !1266, line: 306, baseType: !1684, size: 64)
!1684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int8v8_t", file: !1266, line: 212, size: 64, elements: !1685, identifier: "_ZTS8int8v8_t")
!1685 = !{!1686}
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1684, file: !1266, line: 212, baseType: !1687, size: 64)
!1687 = !DICompositeType(tag: DW_TAG_array_type, baseType: !604, size: 64, elements: !1310)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "swords", scope: !1651, file: !1266, line: 307, baseType: !1689, size: 64)
!1689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int16v4_t", file: !1266, line: 219, size: 64, elements: !1690, identifier: "_ZTS9int16v4_t")
!1690 = !{!1691}
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1689, file: !1266, line: 219, baseType: !1692, size: 64)
!1692 = !DICompositeType(tag: DW_TAG_array_type, baseType: !607, size: 64, elements: !353)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "sdwords", scope: !1651, file: !1266, line: 308, baseType: !1694, size: 64)
!1694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int32v2_t", file: !1266, line: 225, size: 64, elements: !1695, identifier: "_ZTS9int32v2_t")
!1695 = !{!1696}
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1694, file: !1266, line: 225, baseType: !1697, size: 64)
!1697 = !DICompositeType(tag: DW_TAG_array_type, baseType: !610, size: 64, elements: !1322)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "sqwords", scope: !1651, file: !1266, line: 309, baseType: !1699, size: 64)
!1699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int64v1_t", file: !1266, line: 230, size: 64, elements: !1700, identifier: "_ZTS9int64v1_t")
!1700 = !{!1701}
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1699, file: !1266, line: 230, baseType: !1702, size: 64)
!1702 = !DICompositeType(tag: DW_TAG_array_type, baseType: !612, size: 64, elements: !1296)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "sw", scope: !1268, file: !27, line: 758, baseType: !1704, size: 192, offset: 21888)
!1704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FPUStatusFlags", file: !27, line: 332, size: 192, elements: !1705, identifier: "_ZTS14FPUStatusFlags")
!1705 = !{!1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726}
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "_0", scope: !1704, file: !27, line: 333, baseType: !62, size: 8)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "c0", scope: !1704, file: !27, line: 334, baseType: !62, size: 8, offset: 8)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "_1", scope: !1704, file: !27, line: 335, baseType: !62, size: 8, offset: 16)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "c1", scope: !1704, file: !27, line: 336, baseType: !62, size: 8, offset: 24)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "_2", scope: !1704, file: !27, line: 337, baseType: !62, size: 8, offset: 32)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "c2", scope: !1704, file: !27, line: 338, baseType: !62, size: 8, offset: 40)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "_3", scope: !1704, file: !27, line: 339, baseType: !62, size: 8, offset: 48)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "c3", scope: !1704, file: !27, line: 340, baseType: !62, size: 8, offset: 56)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "_4", scope: !1704, file: !27, line: 342, baseType: !62, size: 8, offset: 64)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "pe", scope: !1704, file: !27, line: 343, baseType: !62, size: 8, offset: 72)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "_5", scope: !1704, file: !27, line: 345, baseType: !62, size: 8, offset: 80)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "ue", scope: !1704, file: !27, line: 346, baseType: !62, size: 8, offset: 88)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "_6", scope: !1704, file: !27, line: 348, baseType: !62, size: 8, offset: 96)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "oe", scope: !1704, file: !27, line: 349, baseType: !62, size: 8, offset: 104)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "_7", scope: !1704, file: !27, line: 351, baseType: !62, size: 8, offset: 112)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "ze", scope: !1704, file: !27, line: 352, baseType: !62, size: 8, offset: 120)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "_8", scope: !1704, file: !27, line: 354, baseType: !62, size: 8, offset: 128)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "de", scope: !1704, file: !27, line: 355, baseType: !62, size: 8, offset: 136)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "_9", scope: !1704, file: !27, line: 357, baseType: !62, size: 8, offset: 144)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "ie", scope: !1704, file: !27, line: 358, baseType: !62, size: 8, offset: 152)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "_padding", scope: !1704, file: !27, line: 360, baseType: !1727, size: 32, offset: 160)
!1727 = !DICompositeType(tag: DW_TAG_array_type, baseType: !62, size: 32, elements: !353)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "xcr0", scope: !1268, file: !27, line: 759, baseType: !1729, size: 64, offset: 22080)
!1729 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "XCR0", file: !27, line: 424, size: 64, elements: !1730, identifier: "_ZTS4XCR0")
!1730 = !{!1731, !1732, !1737}
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "flat", scope: !1729, file: !27, line: 425, baseType: !637, size: 64)
!1732 = !DIDerivedType(tag: DW_TAG_member, scope: !1729, file: !27, line: 427, baseType: !1733, size: 64)
!1733 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1729, file: !27, line: 427, size: 64, elements: !1734, identifier: "_ZTSN4XCR0Ut_E")
!1734 = !{!1735, !1736}
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "eax", scope: !1733, file: !27, line: 428, baseType: !8, size: 32)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "edx", scope: !1733, file: !27, line: 429, baseType: !8, size: 32, offset: 32)
!1737 = !DIDerivedType(tag: DW_TAG_member, scope: !1729, file: !27, line: 433, baseType: !1738, size: 64)
!1738 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1729, file: !27, line: 433, size: 64, elements: !1739, identifier: "_ZTSN4XCR0Ut0_E")
!1739 = !{!1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751}
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "x87_fpu_mmx", scope: !1738, file: !27, line: 434, baseType: !637, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "xmm", scope: !1738, file: !27, line: 435, baseType: !637, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "ymm", scope: !1738, file: !27, line: 436, baseType: !637, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "bndreg", scope: !1738, file: !27, line: 437, baseType: !637, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "bndcsr", scope: !1738, file: !27, line: 438, baseType: !637, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "opmask", scope: !1738, file: !27, line: 439, baseType: !637, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "zmm_hi256", scope: !1738, file: !27, line: 440, baseType: !637, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "hi16_zmm", scope: !1738, file: !27, line: 441, baseType: !637, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "pkru", scope: !1738, file: !27, line: 442, baseType: !637, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "_reserved0", scope: !1738, file: !27, line: 443, baseType: !637, size: 53, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "lwp", scope: !1738, file: !27, line: 444, baseType: !637, size: 1, offset: 62, flags: DIFlagBitField, extraData: i64 0)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "_reserved1", scope: !1738, file: !27, line: 445, baseType: !637, size: 1, offset: 63, flags: DIFlagBitField, extraData: i64 0)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "x87", scope: !1268, file: !27, line: 760, baseType: !1753, size: 4096, align: 128, offset: 22144)
!1753 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "FPU", file: !27, line: 314, size: 4096, align: 128, elements: !1754, identifier: "_ZTS3FPU")
!1754 = !{!1755, !1851, !1914}
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !1753, file: !27, line: 317, baseType: !1756, size: 4096)
!1756 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1753, file: !27, line: 315, size: 4096, elements: !1757, identifier: "_ZTSN3FPUUt_E")
!1757 = !{!1758, !1847}
!1758 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !1756, baseType: !1759)
!1759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FpuFSAVE", file: !27, line: 263, size: 1248, elements: !1760, identifier: "_ZTS8FpuFSAVE")
!1760 = !{!1761, !1779, !1780, !1801, !1802, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824}
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !1759, file: !27, line: 264, baseType: !1762, size: 16)
!1762 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "FPUControlWord", file: !27, line: 142, size: 16, elements: !1763, identifier: "_ZTS14FPUControlWord")
!1763 = !{!1764, !1765}
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "flat", scope: !1762, file: !27, line: 143, baseType: !28, size: 16)
!1765 = !DIDerivedType(tag: DW_TAG_member, scope: !1762, file: !27, line: 144, baseType: !1766, size: 16)
!1766 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1762, file: !27, line: 144, size: 16, elements: !1767, identifier: "_ZTSN14FPUControlWordUt_E")
!1767 = !{!1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778}
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "im", scope: !1766, file: !27, line: 145, baseType: !28, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "dm", scope: !1766, file: !27, line: 146, baseType: !28, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "zm", scope: !1766, file: !27, line: 147, baseType: !28, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "om", scope: !1766, file: !27, line: 148, baseType: !28, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "um", scope: !1766, file: !27, line: 149, baseType: !28, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !1766, file: !27, line: 150, baseType: !28, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd0", scope: !1766, file: !27, line: 151, baseType: !28, size: 2, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !1766, file: !27, line: 152, baseType: !39, size: 2, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "rc", scope: !1766, file: !27, line: 153, baseType: !45, size: 2, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1766, file: !27, line: 154, baseType: !51, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd1", scope: !1766, file: !27, line: 155, baseType: !28, size: 3, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd0", scope: !1759, file: !27, line: 265, baseType: !28, size: 16, offset: 16)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !1759, file: !27, line: 266, baseType: !1781, size: 16, offset: 32)
!1781 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "FPUStatusWord", file: !27, line: 100, size: 16, elements: !1782, identifier: "_ZTS13FPUStatusWord")
!1782 = !{!1783, !1784}
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "flat", scope: !1781, file: !27, line: 101, baseType: !28, size: 16)
!1784 = !DIDerivedType(tag: DW_TAG_member, scope: !1781, file: !27, line: 102, baseType: !1785, size: 16)
!1785 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1781, file: !27, line: 102, size: 16, elements: !1786, identifier: "_ZTSN13FPUStatusWordUt_E")
!1786 = !{!1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800}
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "ie", scope: !1785, file: !27, line: 103, baseType: !28, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "de", scope: !1785, file: !27, line: 104, baseType: !28, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "ze", scope: !1785, file: !27, line: 105, baseType: !28, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "oe", scope: !1785, file: !27, line: 106, baseType: !28, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "ue", scope: !1785, file: !27, line: 107, baseType: !28, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "pe", scope: !1785, file: !27, line: 108, baseType: !28, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !1785, file: !27, line: 109, baseType: !28, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !1785, file: !27, line: 110, baseType: !28, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "c0", scope: !1785, file: !27, line: 111, baseType: !28, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "c1", scope: !1785, file: !27, line: 112, baseType: !28, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "c2", scope: !1785, file: !27, line: 113, baseType: !28, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !1785, file: !27, line: 114, baseType: !28, size: 3, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "c3", scope: !1785, file: !27, line: 115, baseType: !28, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !1785, file: !27, line: 116, baseType: !28, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd1", scope: !1759, file: !27, line: 267, baseType: !28, size: 16, offset: 48)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "ftw", scope: !1759, file: !27, line: 268, baseType: !1803, size: 16, offset: 64)
!1803 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "FPUTagWord", file: !27, line: 227, size: 16, elements: !1804, identifier: "_ZTS10FPUTagWord")
!1804 = !{!1805, !1806}
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "flat", scope: !1803, file: !27, line: 228, baseType: !28, size: 16)
!1806 = !DIDerivedType(tag: DW_TAG_member, scope: !1803, file: !27, line: 229, baseType: !1807, size: 16)
!1807 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1803, file: !27, line: 229, size: 16, elements: !1808, identifier: "_ZTSN10FPUTagWordUt_E")
!1808 = !{!1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816}
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "tag0", scope: !1807, file: !27, line: 230, baseType: !55, size: 2, flags: DIFlagBitField, extraData: i64 0)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "tag1", scope: !1807, file: !27, line: 231, baseType: !55, size: 2, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "tag2", scope: !1807, file: !27, line: 232, baseType: !55, size: 2, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "tag3", scope: !1807, file: !27, line: 233, baseType: !55, size: 2, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "tag4", scope: !1807, file: !27, line: 234, baseType: !55, size: 2, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "tag5", scope: !1807, file: !27, line: 235, baseType: !55, size: 2, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "tag6", scope: !1807, file: !27, line: 236, baseType: !55, size: 2, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "tag7", scope: !1807, file: !27, line: 237, baseType: !55, size: 2, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !1759, file: !27, line: 269, baseType: !28, size: 16, offset: 80)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !1759, file: !27, line: 270, baseType: !8, size: 32, offset: 96)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !1759, file: !27, line: 271, baseType: !1547, size: 16, offset: 128)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd2", scope: !1759, file: !27, line: 272, baseType: !28, size: 16, offset: 144)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "dp", scope: !1759, file: !27, line: 273, baseType: !8, size: 32, offset: 160)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1759, file: !27, line: 274, baseType: !1547, size: 16, offset: 192)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd3", scope: !1759, file: !27, line: 275, baseType: !28, size: 16, offset: 208)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "st", scope: !1759, file: !27, line: 276, baseType: !1825, size: 1024, offset: 224)
!1825 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1826, size: 1024, elements: !1310)
!1826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FPUStackElem", file: !27, line: 162, size: 128, elements: !1827, identifier: "_ZTS12FPUStackElem")
!1827 = !{!1828, !1843}
!1828 = !DIDerivedType(tag: DW_TAG_member, scope: !1826, file: !27, line: 163, baseType: !1829, size: 80)
!1829 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1826, file: !27, line: 163, size: 80, elements: !1830, identifier: "_ZTSN12FPUStackElemUt_E")
!1830 = !{!1831, !1838}
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "st", scope: !1829, file: !27, line: 164, baseType: !1832, size: 80)
!1832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "float80_t", file: !1266, line: 65, size: 80, elements: !1833, identifier: "_ZTS9float80_t")
!1833 = !{!1834}
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1832, file: !1266, line: 66, baseType: !1835, size: 80)
!1835 = !DICompositeType(tag: DW_TAG_array_type, baseType: !62, size: 80, elements: !1836)
!1836 = !{!1837}
!1837 = !DISubrange(count: 10)
!1838 = !DIDerivedType(tag: DW_TAG_member, scope: !1829, file: !27, line: 165, baseType: !1839, size: 80)
!1839 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1829, file: !27, line: 165, size: 80, elements: !1840, identifier: "_ZTSN12FPUStackElemUt_Ut_E")
!1840 = !{!1841, !1842}
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "mmx", scope: !1839, file: !27, line: 166, baseType: !637, size: 64)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "infinity", scope: !1839, file: !27, line: 167, baseType: !28, size: 16, offset: 64)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd", scope: !1826, file: !27, line: 170, baseType: !1844, size: 48, offset: 80)
!1844 = !DICompositeType(tag: DW_TAG_array_type, baseType: !62, size: 48, elements: !1845)
!1845 = !{!1846}
!1846 = !DISubrange(count: 6)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "_padding0", scope: !1756, file: !27, line: 316, baseType: !1848, size: 2848, offset: 1248)
!1848 = !DICompositeType(tag: DW_TAG_array_type, baseType: !62, size: 2848, elements: !1849)
!1849 = !{!1850}
!1850 = !DISubrange(count: 356)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave32", scope: !1753, file: !27, line: 321, baseType: !1852, size: 4096)
!1852 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1753, file: !27, line: 319, size: 4096, elements: !1853, identifier: "_ZTSN3FPUUt0_E")
!1853 = !{!1854, !1910}
!1854 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !1852, baseType: !1855)
!1855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FpuFXSAVE", file: !27, line: 280, size: 3328, elements: !1856, identifier: "_ZTS9FpuFXSAVE")
!1856 = !{!1857, !1858, !1859, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1906, !1907, !1908}
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !1855, file: !27, line: 281, baseType: !1762, size: 16)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !1855, file: !27, line: 282, baseType: !1781, size: 16, offset: 16)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "ftw", scope: !1855, file: !27, line: 283, baseType: !1860, size: 8, offset: 32)
!1860 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "FPUAbridgedTagWord", file: !27, line: 245, size: 8, elements: !1861, identifier: "_ZTS18FPUAbridgedTagWord")
!1861 = !{!1862, !1863}
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "flat", scope: !1860, file: !27, line: 246, baseType: !62, size: 8)
!1863 = !DIDerivedType(tag: DW_TAG_member, scope: !1860, file: !27, line: 247, baseType: !1864, size: 8)
!1864 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1860, file: !27, line: 247, size: 8, elements: !1865, identifier: "_ZTSN18FPUAbridgedTagWordUt_E")
!1865 = !{!1866, !1867, !1868, !1869, !1870, !1871, !1872, !1873}
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !1864, file: !27, line: 248, baseType: !61, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !1864, file: !27, line: 249, baseType: !61, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !1864, file: !27, line: 250, baseType: !61, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !1864, file: !27, line: 251, baseType: !61, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "r4", scope: !1864, file: !27, line: 252, baseType: !61, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "r5", scope: !1864, file: !27, line: 253, baseType: !61, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "r6", scope: !1864, file: !27, line: 254, baseType: !61, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "r7", scope: !1864, file: !27, line: 255, baseType: !61, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd0", scope: !1855, file: !27, line: 284, baseType: !62, size: 8, offset: 40)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !1855, file: !27, line: 285, baseType: !28, size: 16, offset: 48)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !1855, file: !27, line: 286, baseType: !8, size: 32, offset: 64)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !1855, file: !27, line: 287, baseType: !1547, size: 16, offset: 96)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd1", scope: !1855, file: !27, line: 288, baseType: !28, size: 16, offset: 112)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "dp", scope: !1855, file: !27, line: 289, baseType: !8, size: 32, offset: 128)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1855, file: !27, line: 290, baseType: !1547, size: 16, offset: 160)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd2", scope: !1855, file: !27, line: 291, baseType: !28, size: 16, offset: 176)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !1855, file: !27, line: 292, baseType: !1883, size: 32, offset: 192)
!1883 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "FPUControlStatus", file: !27, line: 188, size: 32, elements: !1884, identifier: "_ZTS16FPUControlStatus")
!1884 = !{!1885, !1886}
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "flat", scope: !1883, file: !27, line: 189, baseType: !8, size: 32)
!1886 = !DIDerivedType(tag: DW_TAG_member, scope: !1883, file: !27, line: 190, baseType: !1887, size: 32)
!1887 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1883, file: !27, line: 190, size: 32, elements: !1888, identifier: "_ZTSN16FPUControlStatusUt_E")
!1888 = !{!1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905}
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "ie", scope: !1887, file: !27, line: 191, baseType: !8, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "de", scope: !1887, file: !27, line: 192, baseType: !8, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "ze", scope: !1887, file: !27, line: 193, baseType: !8, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "oe", scope: !1887, file: !27, line: 194, baseType: !8, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "ue", scope: !1887, file: !27, line: 195, baseType: !8, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "pe", scope: !1887, file: !27, line: 196, baseType: !8, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "daz", scope: !1887, file: !27, line: 197, baseType: !8, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "im", scope: !1887, file: !27, line: 198, baseType: !8, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "dm", scope: !1887, file: !27, line: 199, baseType: !8, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "zm", scope: !1887, file: !27, line: 200, baseType: !8, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "om", scope: !1887, file: !27, line: 201, baseType: !8, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "um", scope: !1887, file: !27, line: 202, baseType: !8, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !1887, file: !27, line: 203, baseType: !8, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "rn", scope: !1887, file: !27, line: 204, baseType: !8, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "rp", scope: !1887, file: !27, line: 205, baseType: !8, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "fz", scope: !1887, file: !27, line: 206, baseType: !8, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd", scope: !1887, file: !27, line: 207, baseType: !8, size: 16, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !1855, file: !27, line: 293, baseType: !1883, size: 32, offset: 224)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "st", scope: !1855, file: !27, line: 294, baseType: !1825, size: 1024, offset: 256)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "xmm", scope: !1855, file: !27, line: 295, baseType: !1909, size: 2048, offset: 1280)
!1909 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1287, size: 2048, elements: !1303)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "_padding0", scope: !1852, file: !27, line: 320, baseType: !1911, size: 768, offset: 3328)
!1911 = !DICompositeType(tag: DW_TAG_array_type, baseType: !62, size: 768, elements: !1912)
!1912 = !{!1913}
!1913 = !DISubrange(count: 96)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave64", scope: !1753, file: !27, line: 325, baseType: !1915, size: 4096)
!1915 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1753, file: !27, line: 323, size: 4096, elements: !1916, identifier: "_ZTSN3FPUUt1_E")
!1916 = !{!1917, !1931}
!1917 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !1915, baseType: !1918)
!1918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FpuFXSAVE64", file: !27, line: 299, size: 3328, elements: !1919, identifier: "_ZTS11FpuFXSAVE64")
!1919 = !{!1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930}
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !1918, file: !27, line: 300, baseType: !1762, size: 16)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !1918, file: !27, line: 301, baseType: !1781, size: 16, offset: 16)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "ftw", scope: !1918, file: !27, line: 302, baseType: !1860, size: 8, offset: 32)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd0", scope: !1918, file: !27, line: 303, baseType: !62, size: 8, offset: 40)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !1918, file: !27, line: 304, baseType: !28, size: 16, offset: 48)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !1918, file: !27, line: 305, baseType: !637, size: 64, offset: 64)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "dp", scope: !1918, file: !27, line: 306, baseType: !637, size: 64, offset: 128)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !1918, file: !27, line: 307, baseType: !1883, size: 32, offset: 192)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !1918, file: !27, line: 308, baseType: !1883, size: 32, offset: 224)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "st", scope: !1918, file: !27, line: 309, baseType: !1825, size: 1024, offset: 256)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "xmm", scope: !1918, file: !27, line: 310, baseType: !1909, size: 2048, offset: 1280)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "_padding0", scope: !1915, file: !27, line: 324, baseType: !1911, size: 768, offset: 3328)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "seg_caches", scope: !1268, file: !27, line: 761, baseType: !1933, size: 768, align: 64, offset: 26240)
!1933 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SegmentCaches", file: !27, line: 468, size: 768, align: 64, elements: !1934, identifier: "_ZTS13SegmentCaches")
!1934 = !{!1935, !1945, !1946, !1947, !1948, !1949}
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !1933, file: !27, line: 469, baseType: !1936, size: 128)
!1936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SegmentShadow", file: !27, line: 88, size: 128, elements: !1937, identifier: "_ZTS13SegmentShadow")
!1937 = !{!1938, !1943, !1944}
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1936, file: !27, line: 92, baseType: !1939, size: 64)
!1939 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1936, file: !27, line: 89, size: 64, elements: !1940, identifier: "_ZTSN13SegmentShadowUt_E")
!1940 = !{!1941, !1942}
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "dword", scope: !1939, file: !27, line: 90, baseType: !8, size: 32)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "qword", scope: !1939, file: !27, line: 91, baseType: !637, size: 64)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !1936, file: !27, line: 93, baseType: !8, size: 32, offset: 64)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1936, file: !27, line: 94, baseType: !8, size: 32, offset: 96)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !1933, file: !27, line: 470, baseType: !1936, size: 128, offset: 128)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1933, file: !27, line: 471, baseType: !1936, size: 128, offset: 256)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !1933, file: !27, line: 472, baseType: !1936, size: 128, offset: 384)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1933, file: !27, line: 473, baseType: !1936, size: 128, offset: 512)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "gs", scope: !1933, file: !27, line: 474, baseType: !1936, size: 128, offset: 640)
!1950 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_t", file: !1266, line: 42, baseType: !1951)
!1951 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr64_t", file: !1266, line: 41, baseType: !637)
!1952 = !DILocation(line: 54, column: 8, scope: !1261)
!1953 = !DILocation(line: 55, column: 10, scope: !1261)
!1954 = !DILocation(line: 56, column: 10, scope: !1261)
!1955 = !DILocation(line: 57, column: 10, scope: !1261)
!1956 = !DILocation(line: 58, column: 10, scope: !1261)
!1957 = !DILocation(line: 61, column: 9, scope: !1261)
!1958 = !DILocation(line: 62, column: 9, scope: !1261)
!1959 = !DILocation(line: 63, column: 20, scope: !1261)
!1960 = !DILocation(line: 63, column: 24, scope: !1261)
!1961 = !DILocation(line: 63, column: 28, scope: !1261)
!1962 = !DILocation(line: 69, column: 6, scope: !1261)
!1963 = !DILocation(line: 74, column: 20, scope: !1261)
!1964 = !DILocation(line: 74, column: 24, scope: !1261)
!1965 = !DILocation(line: 74, column: 28, scope: !1261)
!1966 = !DILocation(line: 74, column: 33, scope: !1261)
!1967 = !DILocation(line: 75, column: 20, scope: !1261)
!1968 = !DILocation(line: 75, column: 24, scope: !1261)
!1969 = !DILocation(line: 75, column: 28, scope: !1261)
!1970 = !DILocation(line: 75, column: 33, scope: !1261)
!1971 = !DILocation(line: 76, column: 20, scope: !1261)
!1972 = !DILocation(line: 76, column: 24, scope: !1261)
!1973 = !DILocation(line: 76, column: 28, scope: !1261)
!1974 = !DILocation(line: 76, column: 33, scope: !1261)
!1975 = !DILocation(line: 77, column: 20, scope: !1261)
!1976 = !DILocation(line: 77, column: 24, scope: !1261)
!1977 = !DILocation(line: 77, column: 28, scope: !1261)
!1978 = !DILocation(line: 77, column: 33, scope: !1261)
!1979 = !DILocation(line: 78, column: 20, scope: !1261)
!1980 = !DILocation(line: 78, column: 24, scope: !1261)
!1981 = !DILocation(line: 78, column: 28, scope: !1261)
!1982 = !DILocation(line: 78, column: 33, scope: !1261)
!1983 = !DILocation(line: 79, column: 20, scope: !1261)
!1984 = !DILocation(line: 79, column: 24, scope: !1261)
!1985 = !DILocation(line: 79, column: 28, scope: !1261)
!1986 = !DILocation(line: 79, column: 33, scope: !1261)
!1987 = !DILocation(line: 80, column: 20, scope: !1261)
!1988 = !DILocation(line: 80, column: 24, scope: !1261)
!1989 = !DILocation(line: 80, column: 28, scope: !1261)
!1990 = !DILocation(line: 80, column: 33, scope: !1261)
!1991 = !DILocation(line: 81, column: 20, scope: !1261)
!1992 = !DILocation(line: 81, column: 24, scope: !1261)
!1993 = !DILocation(line: 81, column: 28, scope: !1261)
!1994 = !DILocation(line: 81, column: 33, scope: !1261)
!1995 = !DILocation(line: 83, column: 21, scope: !1261)
!1996 = !DILocation(line: 83, column: 25, scope: !1261)
!1997 = !DILocation(line: 83, column: 29, scope: !1261)
!1998 = !DILocation(line: 83, column: 34, scope: !1261)
!1999 = !DILocation(line: 84, column: 21, scope: !1261)
!2000 = !DILocation(line: 84, column: 25, scope: !1261)
!2001 = !DILocation(line: 84, column: 29, scope: !1261)
!2002 = !DILocation(line: 84, column: 34, scope: !1261)
!2003 = !DILocation(line: 85, column: 21, scope: !1261)
!2004 = !DILocation(line: 85, column: 25, scope: !1261)
!2005 = !DILocation(line: 85, column: 29, scope: !1261)
!2006 = !DILocation(line: 85, column: 34, scope: !1261)
!2007 = !DILocation(line: 86, column: 21, scope: !1261)
!2008 = !DILocation(line: 86, column: 25, scope: !1261)
!2009 = !DILocation(line: 86, column: 29, scope: !1261)
!2010 = !DILocation(line: 86, column: 34, scope: !1261)
!2011 = !DILocation(line: 87, column: 21, scope: !1261)
!2012 = !DILocation(line: 87, column: 25, scope: !1261)
!2013 = !DILocation(line: 87, column: 28, scope: !1261)
!2014 = !DILocation(line: 87, column: 33, scope: !1261)
!2015 = !DILocation(line: 88, column: 21, scope: !1261)
!2016 = !DILocation(line: 88, column: 25, scope: !1261)
!2017 = !DILocation(line: 88, column: 28, scope: !1261)
!2018 = !DILocation(line: 88, column: 33, scope: !1261)
!2019 = !DILocation(line: 89, column: 22, scope: !1261)
!2020 = !DILocation(line: 89, column: 26, scope: !1261)
!2021 = !DILocation(line: 89, column: 30, scope: !1261)
!2022 = !DILocation(line: 89, column: 35, scope: !1261)
!2023 = !DILocation(line: 90, column: 22, scope: !1261)
!2024 = !DILocation(line: 90, column: 26, scope: !1261)
!2025 = !DILocation(line: 90, column: 30, scope: !1261)
!2026 = !DILocation(line: 90, column: 35, scope: !1261)
!2027 = !DILocation(line: 91, column: 22, scope: !1261)
!2028 = !DILocation(line: 91, column: 26, scope: !1261)
!2029 = !DILocation(line: 91, column: 30, scope: !1261)
!2030 = !DILocation(line: 91, column: 35, scope: !1261)
!2031 = !DILocation(line: 92, column: 22, scope: !1261)
!2032 = !DILocation(line: 92, column: 26, scope: !1261)
!2033 = !DILocation(line: 92, column: 30, scope: !1261)
!2034 = !DILocation(line: 92, column: 35, scope: !1261)
!2035 = !DILocation(line: 93, column: 22, scope: !1261)
!2036 = !DILocation(line: 93, column: 26, scope: !1261)
!2037 = !DILocation(line: 93, column: 30, scope: !1261)
!2038 = !DILocation(line: 93, column: 35, scope: !1261)
!2039 = !DILocation(line: 94, column: 22, scope: !1261)
!2040 = !DILocation(line: 94, column: 26, scope: !1261)
!2041 = !DILocation(line: 94, column: 30, scope: !1261)
!2042 = !DILocation(line: 94, column: 35, scope: !1261)
!2043 = !DILocation(line: 96, column: 20, scope: !1261)
!2044 = !DILocation(line: 96, column: 24, scope: !1261)
!2045 = !DILocation(line: 96, column: 28, scope: !1261)
!2046 = !DILocation(line: 97, column: 20, scope: !1261)
!2047 = !DILocation(line: 97, column: 24, scope: !1261)
!2048 = !DILocation(line: 97, column: 28, scope: !1261)
!2049 = !DILocation(line: 98, column: 20, scope: !1261)
!2050 = !DILocation(line: 98, column: 24, scope: !1261)
!2051 = !DILocation(line: 98, column: 28, scope: !1261)
!2052 = !DILocation(line: 99, column: 20, scope: !1261)
!2053 = !DILocation(line: 99, column: 24, scope: !1261)
!2054 = !DILocation(line: 99, column: 28, scope: !1261)
!2055 = !DILocation(line: 100, column: 20, scope: !1261)
!2056 = !DILocation(line: 100, column: 24, scope: !1261)
!2057 = !DILocation(line: 100, column: 28, scope: !1261)
!2058 = !DILocation(line: 101, column: 20, scope: !1261)
!2059 = !DILocation(line: 101, column: 24, scope: !1261)
!2060 = !DILocation(line: 101, column: 28, scope: !1261)
!2061 = !DILocation(line: 102, column: 20, scope: !1261)
!2062 = !DILocation(line: 102, column: 24, scope: !1261)
!2063 = !DILocation(line: 102, column: 28, scope: !1261)
!2064 = !DILocation(line: 103, column: 20, scope: !1261)
!2065 = !DILocation(line: 103, column: 24, scope: !1261)
!2066 = !DILocation(line: 103, column: 28, scope: !1261)
!2067 = !DILocation(line: 105, column: 21, scope: !1261)
!2068 = !DILocation(line: 105, column: 25, scope: !1261)
!2069 = !DILocation(line: 105, column: 28, scope: !1261)
!2070 = !DILocation(line: 106, column: 21, scope: !1261)
!2071 = !DILocation(line: 106, column: 25, scope: !1261)
!2072 = !DILocation(line: 106, column: 28, scope: !1261)
!2073 = !DILocation(line: 107, column: 22, scope: !1261)
!2074 = !DILocation(line: 107, column: 26, scope: !1261)
!2075 = !DILocation(line: 107, column: 30, scope: !1261)
!2076 = !DILocation(line: 108, column: 22, scope: !1261)
!2077 = !DILocation(line: 108, column: 26, scope: !1261)
!2078 = !DILocation(line: 108, column: 30, scope: !1261)
!2079 = !DILocation(line: 109, column: 22, scope: !1261)
!2080 = !DILocation(line: 109, column: 26, scope: !1261)
!2081 = !DILocation(line: 109, column: 30, scope: !1261)
!2082 = !DILocation(line: 110, column: 22, scope: !1261)
!2083 = !DILocation(line: 110, column: 26, scope: !1261)
!2084 = !DILocation(line: 110, column: 30, scope: !1261)
!2085 = !DILocation(line: 111, column: 22, scope: !1261)
!2086 = !DILocation(line: 111, column: 26, scope: !1261)
!2087 = !DILocation(line: 111, column: 30, scope: !1261)
!2088 = !DILocation(line: 112, column: 22, scope: !1261)
!2089 = !DILocation(line: 112, column: 26, scope: !1261)
!2090 = !DILocation(line: 112, column: 30, scope: !1261)
!2091 = !DILocation(line: 114, column: 20, scope: !1261)
!2092 = !DILocation(line: 114, column: 24, scope: !1261)
!2093 = !DILocation(line: 114, column: 28, scope: !1261)
!2094 = !DILocation(line: 116, column: 21, scope: !1261)
!2095 = !DILocation(line: 116, column: 25, scope: !1261)
!2096 = !DILocation(line: 116, column: 29, scope: !1261)
!2097 = !DILocation(line: 117, column: 21, scope: !1261)
!2098 = !DILocation(line: 117, column: 25, scope: !1261)
!2099 = !DILocation(line: 117, column: 29, scope: !1261)
!2100 = !DILocation(line: 118, column: 21, scope: !1261)
!2101 = !DILocation(line: 118, column: 25, scope: !1261)
!2102 = !DILocation(line: 118, column: 29, scope: !1261)
!2103 = !DILocation(line: 119, column: 21, scope: !1261)
!2104 = !DILocation(line: 119, column: 25, scope: !1261)
!2105 = !DILocation(line: 119, column: 29, scope: !1261)
!2106 = !DILocation(line: 120, column: 21, scope: !1261)
!2107 = !DILocation(line: 120, column: 25, scope: !1261)
!2108 = !DILocation(line: 120, column: 29, scope: !1261)
!2109 = !DILocation(line: 121, column: 21, scope: !1261)
!2110 = !DILocation(line: 121, column: 25, scope: !1261)
!2111 = !DILocation(line: 121, column: 29, scope: !1261)
!2112 = !DILocation(line: 122, column: 21, scope: !1261)
!2113 = !DILocation(line: 122, column: 25, scope: !1261)
!2114 = !DILocation(line: 122, column: 29, scope: !1261)
!2115 = !DILocation(line: 123, column: 21, scope: !1261)
!2116 = !DILocation(line: 123, column: 25, scope: !1261)
!2117 = !DILocation(line: 123, column: 29, scope: !1261)
!2118 = !DILocation(line: 124, column: 21, scope: !1261)
!2119 = !DILocation(line: 124, column: 25, scope: !1261)
!2120 = !DILocation(line: 124, column: 29, scope: !1261)
!2121 = !DILocation(line: 127, column: 21, scope: !1261)
!2122 = !DILocation(line: 127, column: 25, scope: !1261)
!2123 = !DILocation(line: 127, column: 28, scope: !1261)
!2124 = !DILocation(line: 128, column: 21, scope: !1261)
!2125 = !DILocation(line: 128, column: 25, scope: !1261)
!2126 = !DILocation(line: 128, column: 28, scope: !1261)
!2127 = !DILocation(line: 129, column: 22, scope: !1261)
!2128 = !DILocation(line: 129, column: 26, scope: !1261)
!2129 = !DILocation(line: 129, column: 30, scope: !1261)
!2130 = !DILocation(line: 130, column: 22, scope: !1261)
!2131 = !DILocation(line: 130, column: 26, scope: !1261)
!2132 = !DILocation(line: 130, column: 30, scope: !1261)
!2133 = !DILocation(line: 131, column: 22, scope: !1261)
!2134 = !DILocation(line: 131, column: 26, scope: !1261)
!2135 = !DILocation(line: 131, column: 30, scope: !1261)
!2136 = !DILocation(line: 132, column: 22, scope: !1261)
!2137 = !DILocation(line: 132, column: 26, scope: !1261)
!2138 = !DILocation(line: 132, column: 30, scope: !1261)
!2139 = !DILocation(line: 133, column: 22, scope: !1261)
!2140 = !DILocation(line: 133, column: 26, scope: !1261)
!2141 = !DILocation(line: 133, column: 30, scope: !1261)
!2142 = !DILocation(line: 134, column: 22, scope: !1261)
!2143 = !DILocation(line: 134, column: 26, scope: !1261)
!2144 = !DILocation(line: 134, column: 30, scope: !1261)
!2145 = !DILocation(line: 136, column: 21, scope: !1261)
!2146 = !DILocation(line: 136, column: 25, scope: !1261)
!2147 = !DILocation(line: 136, column: 29, scope: !1261)
!2148 = !DILocation(line: 137, column: 21, scope: !1261)
!2149 = !DILocation(line: 137, column: 25, scope: !1261)
!2150 = !DILocation(line: 137, column: 29, scope: !1261)
!2151 = !DILocation(line: 138, column: 21, scope: !1261)
!2152 = !DILocation(line: 138, column: 25, scope: !1261)
!2153 = !DILocation(line: 138, column: 29, scope: !1261)
!2154 = !DILocation(line: 139, column: 21, scope: !1261)
!2155 = !DILocation(line: 139, column: 25, scope: !1261)
!2156 = !DILocation(line: 139, column: 29, scope: !1261)
!2157 = !DILocation(line: 140, column: 21, scope: !1261)
!2158 = !DILocation(line: 140, column: 25, scope: !1261)
!2159 = !DILocation(line: 140, column: 29, scope: !1261)
!2160 = !DILocation(line: 141, column: 21, scope: !1261)
!2161 = !DILocation(line: 141, column: 25, scope: !1261)
!2162 = !DILocation(line: 141, column: 29, scope: !1261)
!2163 = !DILocation(line: 142, column: 21, scope: !1261)
!2164 = !DILocation(line: 142, column: 25, scope: !1261)
!2165 = !DILocation(line: 142, column: 29, scope: !1261)
!2166 = !DILocation(line: 143, column: 21, scope: !1261)
!2167 = !DILocation(line: 143, column: 25, scope: !1261)
!2168 = !DILocation(line: 143, column: 29, scope: !1261)
!2169 = !DILocation(line: 144, column: 20, scope: !1261)
!2170 = !DILocation(line: 144, column: 24, scope: !1261)
!2171 = !DILocation(line: 144, column: 27, scope: !1261)
!2172 = !DILocation(line: 145, column: 20, scope: !1261)
!2173 = !DILocation(line: 145, column: 24, scope: !1261)
!2174 = !DILocation(line: 145, column: 27, scope: !1261)
!2175 = !DILocation(line: 146, column: 21, scope: !1261)
!2176 = !DILocation(line: 146, column: 25, scope: !1261)
!2177 = !DILocation(line: 146, column: 29, scope: !1261)
!2178 = !DILocation(line: 147, column: 21, scope: !1261)
!2179 = !DILocation(line: 147, column: 25, scope: !1261)
!2180 = !DILocation(line: 147, column: 29, scope: !1261)
!2181 = !DILocation(line: 148, column: 21, scope: !1261)
!2182 = !DILocation(line: 148, column: 25, scope: !1261)
!2183 = !DILocation(line: 148, column: 29, scope: !1261)
!2184 = !DILocation(line: 149, column: 21, scope: !1261)
!2185 = !DILocation(line: 149, column: 25, scope: !1261)
!2186 = !DILocation(line: 149, column: 29, scope: !1261)
!2187 = !DILocation(line: 150, column: 21, scope: !1261)
!2188 = !DILocation(line: 150, column: 25, scope: !1261)
!2189 = !DILocation(line: 150, column: 29, scope: !1261)
!2190 = !DILocation(line: 151, column: 21, scope: !1261)
!2191 = !DILocation(line: 151, column: 25, scope: !1261)
!2192 = !DILocation(line: 151, column: 29, scope: !1261)
!2193 = !DILocation(line: 152, column: 21, scope: !1261)
!2194 = !DILocation(line: 152, column: 25, scope: !1261)
!2195 = !DILocation(line: 152, column: 29, scope: !1261)
!2196 = !DILocation(line: 155, column: 20, scope: !1261)
!2197 = !DILocation(line: 155, column: 24, scope: !1261)
!2198 = !DILocation(line: 155, column: 27, scope: !1261)
!2199 = !DILocation(line: 156, column: 20, scope: !1261)
!2200 = !DILocation(line: 156, column: 24, scope: !1261)
!2201 = !DILocation(line: 156, column: 27, scope: !1261)
!2202 = !DILocation(line: 157, column: 20, scope: !1261)
!2203 = !DILocation(line: 157, column: 24, scope: !1261)
!2204 = !DILocation(line: 157, column: 27, scope: !1261)
!2205 = !DILocation(line: 158, column: 20, scope: !1261)
!2206 = !DILocation(line: 158, column: 24, scope: !1261)
!2207 = !DILocation(line: 158, column: 27, scope: !1261)
!2208 = !DILocation(line: 159, column: 20, scope: !1261)
!2209 = !DILocation(line: 159, column: 24, scope: !1261)
!2210 = !DILocation(line: 159, column: 27, scope: !1261)
!2211 = !DILocation(line: 160, column: 20, scope: !1261)
!2212 = !DILocation(line: 160, column: 24, scope: !1261)
!2213 = !DILocation(line: 160, column: 27, scope: !1261)
!2214 = !DILocation(line: 164, column: 25, scope: !1261)
!2215 = !DILocation(line: 164, column: 30, scope: !1261)
!2216 = !DILocation(line: 164, column: 38, scope: !1261)
!2217 = !DILocation(line: 165, column: 25, scope: !1261)
!2218 = !DILocation(line: 165, column: 30, scope: !1261)
!2219 = !DILocation(line: 165, column: 38, scope: !1261)
!2220 = !DILocation(line: 205, column: 22, scope: !1261)
!2221 = !DILocation(line: 205, column: 16, scope: !1261)
!2222 = !DILocation(line: 205, column: 29, scope: !1261)
!2223 = !DILocation(line: 206, column: 22, scope: !1261)
!2224 = !DILocation(line: 206, column: 16, scope: !1261)
!2225 = !DILocation(line: 206, column: 29, scope: !1261)
!2226 = !DILocation(line: 207, column: 22, scope: !1261)
!2227 = !DILocation(line: 207, column: 16, scope: !1261)
!2228 = !DILocation(line: 207, column: 29, scope: !1261)
!2229 = !DILocation(line: 208, column: 22, scope: !1261)
!2230 = !DILocation(line: 208, column: 16, scope: !1261)
!2231 = !DILocation(line: 208, column: 29, scope: !1261)
!2232 = !DILocation(line: 209, column: 22, scope: !1261)
!2233 = !DILocation(line: 209, column: 16, scope: !1261)
!2234 = !DILocation(line: 209, column: 29, scope: !1261)
!2235 = !DILocation(line: 210, column: 22, scope: !1261)
!2236 = !DILocation(line: 210, column: 16, scope: !1261)
!2237 = !DILocation(line: 210, column: 29, scope: !1261)
!2238 = !DILocation(line: 211, column: 22, scope: !1261)
!2239 = !DILocation(line: 211, column: 16, scope: !1261)
!2240 = !DILocation(line: 211, column: 29, scope: !1261)
!2241 = !DILocation(line: 212, column: 22, scope: !1261)
!2242 = !DILocation(line: 212, column: 16, scope: !1261)
!2243 = !DILocation(line: 212, column: 29, scope: !1261)
!2244 = !DILocation(line: 214, column: 22, scope: !1261)
!2245 = !DILocation(line: 214, column: 16, scope: !1261)
!2246 = !DILocation(line: 214, column: 29, scope: !1261)
!2247 = !DILocation(line: 215, column: 22, scope: !1261)
!2248 = !DILocation(line: 215, column: 16, scope: !1261)
!2249 = !DILocation(line: 215, column: 29, scope: !1261)
!2250 = !DILocation(line: 216, column: 23, scope: !1261)
!2251 = !DILocation(line: 216, column: 17, scope: !1261)
!2252 = !DILocation(line: 216, column: 31, scope: !1261)
!2253 = !DILocation(line: 217, column: 23, scope: !1261)
!2254 = !DILocation(line: 217, column: 17, scope: !1261)
!2255 = !DILocation(line: 217, column: 31, scope: !1261)
!2256 = !DILocation(line: 218, column: 23, scope: !1261)
!2257 = !DILocation(line: 218, column: 17, scope: !1261)
!2258 = !DILocation(line: 218, column: 31, scope: !1261)
!2259 = !DILocation(line: 219, column: 23, scope: !1261)
!2260 = !DILocation(line: 219, column: 17, scope: !1261)
!2261 = !DILocation(line: 219, column: 31, scope: !1261)
!2262 = !DILocation(line: 220, column: 23, scope: !1261)
!2263 = !DILocation(line: 220, column: 17, scope: !1261)
!2264 = !DILocation(line: 220, column: 31, scope: !1261)
!2265 = !DILocation(line: 221, column: 23, scope: !1261)
!2266 = !DILocation(line: 221, column: 17, scope: !1261)
!2267 = !DILocation(line: 221, column: 31, scope: !1261)
!2268 = !DILocation(line: 245, column: 22, scope: !1261)
!2269 = !DILocation(line: 245, column: 16, scope: !1261)
!2270 = !DILocation(line: 245, column: 29, scope: !1261)
!2271 = !DILocation(line: 246, column: 22, scope: !1261)
!2272 = !DILocation(line: 246, column: 16, scope: !1261)
!2273 = !DILocation(line: 246, column: 29, scope: !1261)
!2274 = !DILocation(line: 247, column: 22, scope: !1261)
!2275 = !DILocation(line: 247, column: 16, scope: !1261)
!2276 = !DILocation(line: 247, column: 29, scope: !1261)
!2277 = !DILocation(line: 248, column: 22, scope: !1261)
!2278 = !DILocation(line: 248, column: 16, scope: !1261)
!2279 = !DILocation(line: 248, column: 29, scope: !1261)
!2280 = !DILocation(line: 249, column: 22, scope: !1261)
!2281 = !DILocation(line: 249, column: 16, scope: !1261)
!2282 = !DILocation(line: 249, column: 29, scope: !1261)
!2283 = !DILocation(line: 250, column: 22, scope: !1261)
!2284 = !DILocation(line: 250, column: 16, scope: !1261)
!2285 = !DILocation(line: 250, column: 29, scope: !1261)
!2286 = !DILocation(line: 251, column: 22, scope: !1261)
!2287 = !DILocation(line: 251, column: 16, scope: !1261)
!2288 = !DILocation(line: 251, column: 29, scope: !1261)
!2289 = !DILocation(line: 252, column: 22, scope: !1261)
!2290 = !DILocation(line: 252, column: 16, scope: !1261)
!2291 = !DILocation(line: 252, column: 29, scope: !1261)
!2292 = !DILocation(line: 255, column: 22, scope: !1261)
!2293 = !DILocation(line: 255, column: 16, scope: !1261)
!2294 = !DILocation(line: 255, column: 29, scope: !1261)
!2295 = !DILocation(line: 256, column: 22, scope: !1261)
!2296 = !DILocation(line: 256, column: 16, scope: !1261)
!2297 = !DILocation(line: 256, column: 29, scope: !1261)
!2298 = !DILocation(line: 257, column: 23, scope: !1261)
!2299 = !DILocation(line: 257, column: 17, scope: !1261)
!2300 = !DILocation(line: 257, column: 31, scope: !1261)
!2301 = !DILocation(line: 258, column: 23, scope: !1261)
!2302 = !DILocation(line: 258, column: 17, scope: !1261)
!2303 = !DILocation(line: 258, column: 31, scope: !1261)
!2304 = !DILocation(line: 259, column: 23, scope: !1261)
!2305 = !DILocation(line: 259, column: 17, scope: !1261)
!2306 = !DILocation(line: 259, column: 31, scope: !1261)
!2307 = !DILocation(line: 260, column: 23, scope: !1261)
!2308 = !DILocation(line: 260, column: 17, scope: !1261)
!2309 = !DILocation(line: 260, column: 31, scope: !1261)
!2310 = !DILocation(line: 261, column: 23, scope: !1261)
!2311 = !DILocation(line: 261, column: 17, scope: !1261)
!2312 = !DILocation(line: 261, column: 31, scope: !1261)
!2313 = !DILocation(line: 262, column: 23, scope: !1261)
!2314 = !DILocation(line: 262, column: 17, scope: !1261)
!2315 = !DILocation(line: 262, column: 31, scope: !1261)
!2316 = !DILocation(line: 285, column: 21, scope: !1261)
!2317 = !DILocation(line: 285, column: 24, scope: !1261)
!2318 = !DILocation(line: 285, column: 15, scope: !1261)
!2319 = !DILocation(line: 285, column: 33, scope: !1261)
!2320 = !DILocation(line: 286, column: 21, scope: !1261)
!2321 = !DILocation(line: 286, column: 24, scope: !1261)
!2322 = !DILocation(line: 286, column: 15, scope: !1261)
!2323 = !DILocation(line: 286, column: 33, scope: !1261)
!2324 = !DILocation(line: 287, column: 21, scope: !1261)
!2325 = !DILocation(line: 287, column: 24, scope: !1261)
!2326 = !DILocation(line: 287, column: 15, scope: !1261)
!2327 = !DILocation(line: 287, column: 33, scope: !1261)
!2328 = !DILocation(line: 288, column: 21, scope: !1261)
!2329 = !DILocation(line: 288, column: 24, scope: !1261)
!2330 = !DILocation(line: 288, column: 15, scope: !1261)
!2331 = !DILocation(line: 288, column: 33, scope: !1261)
!2332 = !DILocation(line: 289, column: 21, scope: !1261)
!2333 = !DILocation(line: 289, column: 24, scope: !1261)
!2334 = !DILocation(line: 289, column: 15, scope: !1261)
!2335 = !DILocation(line: 289, column: 33, scope: !1261)
!2336 = !DILocation(line: 290, column: 21, scope: !1261)
!2337 = !DILocation(line: 290, column: 24, scope: !1261)
!2338 = !DILocation(line: 290, column: 15, scope: !1261)
!2339 = !DILocation(line: 290, column: 33, scope: !1261)
!2340 = !DILocation(line: 291, column: 21, scope: !1261)
!2341 = !DILocation(line: 291, column: 24, scope: !1261)
!2342 = !DILocation(line: 291, column: 15, scope: !1261)
!2343 = !DILocation(line: 291, column: 33, scope: !1261)
!2344 = !DILocation(line: 292, column: 21, scope: !1261)
!2345 = !DILocation(line: 292, column: 24, scope: !1261)
!2346 = !DILocation(line: 292, column: 15, scope: !1261)
!2347 = !DILocation(line: 292, column: 33, scope: !1261)
!2348 = !DILocation(line: 318, column: 21, scope: !1261)
!2349 = !DILocation(line: 318, column: 25, scope: !1261)
!2350 = !DILocation(line: 318, column: 15, scope: !1261)
!2351 = !DILocation(line: 318, column: 34, scope: !1261)
!2352 = !DILocation(line: 318, column: 38, scope: !1261)
!2353 = !DILocation(line: 318, column: 45, scope: !1261)
!2354 = !DILocation(line: 319, column: 21, scope: !1261)
!2355 = !DILocation(line: 319, column: 25, scope: !1261)
!2356 = !DILocation(line: 319, column: 15, scope: !1261)
!2357 = !DILocation(line: 319, column: 34, scope: !1261)
!2358 = !DILocation(line: 319, column: 38, scope: !1261)
!2359 = !DILocation(line: 319, column: 45, scope: !1261)
!2360 = !DILocation(line: 320, column: 21, scope: !1261)
!2361 = !DILocation(line: 320, column: 25, scope: !1261)
!2362 = !DILocation(line: 320, column: 15, scope: !1261)
!2363 = !DILocation(line: 320, column: 34, scope: !1261)
!2364 = !DILocation(line: 320, column: 38, scope: !1261)
!2365 = !DILocation(line: 320, column: 45, scope: !1261)
!2366 = !DILocation(line: 321, column: 21, scope: !1261)
!2367 = !DILocation(line: 321, column: 25, scope: !1261)
!2368 = !DILocation(line: 321, column: 15, scope: !1261)
!2369 = !DILocation(line: 321, column: 34, scope: !1261)
!2370 = !DILocation(line: 321, column: 38, scope: !1261)
!2371 = !DILocation(line: 321, column: 45, scope: !1261)
!2372 = !DILocation(line: 322, column: 21, scope: !1261)
!2373 = !DILocation(line: 322, column: 25, scope: !1261)
!2374 = !DILocation(line: 322, column: 15, scope: !1261)
!2375 = !DILocation(line: 322, column: 34, scope: !1261)
!2376 = !DILocation(line: 322, column: 38, scope: !1261)
!2377 = !DILocation(line: 322, column: 45, scope: !1261)
!2378 = !DILocation(line: 323, column: 21, scope: !1261)
!2379 = !DILocation(line: 323, column: 25, scope: !1261)
!2380 = !DILocation(line: 323, column: 15, scope: !1261)
!2381 = !DILocation(line: 323, column: 34, scope: !1261)
!2382 = !DILocation(line: 323, column: 38, scope: !1261)
!2383 = !DILocation(line: 323, column: 45, scope: !1261)
!2384 = !DILocation(line: 324, column: 21, scope: !1261)
!2385 = !DILocation(line: 324, column: 25, scope: !1261)
!2386 = !DILocation(line: 324, column: 15, scope: !1261)
!2387 = !DILocation(line: 324, column: 34, scope: !1261)
!2388 = !DILocation(line: 324, column: 38, scope: !1261)
!2389 = !DILocation(line: 324, column: 45, scope: !1261)
!2390 = !DILocation(line: 325, column: 21, scope: !1261)
!2391 = !DILocation(line: 325, column: 25, scope: !1261)
!2392 = !DILocation(line: 325, column: 15, scope: !1261)
!2393 = !DILocation(line: 325, column: 34, scope: !1261)
!2394 = !DILocation(line: 325, column: 38, scope: !1261)
!2395 = !DILocation(line: 325, column: 45, scope: !1261)
!2396 = !DILocation(line: 328, column: 20, scope: !1261)
!2397 = !DILocation(line: 328, column: 26, scope: !1261)
!2398 = !DILocation(line: 329, column: 20, scope: !1261)
!2399 = !DILocation(line: 329, column: 26, scope: !1261)
!2400 = !DILocation(line: 330, column: 20, scope: !1261)
!2401 = !DILocation(line: 330, column: 26, scope: !1261)
!2402 = !DILocation(line: 331, column: 20, scope: !1261)
!2403 = !DILocation(line: 331, column: 26, scope: !1261)
!2404 = !DILocation(line: 332, column: 20, scope: !1261)
!2405 = !DILocation(line: 332, column: 26, scope: !1261)
!2406 = !DILocation(line: 333, column: 20, scope: !1261)
!2407 = !DILocation(line: 333, column: 26, scope: !1261)
!2408 = !DILocation(line: 334, column: 20, scope: !1261)
!2409 = !DILocation(line: 334, column: 26, scope: !1261)
!2410 = !DILocation(line: 337, column: 9, scope: !1261)
!2411 = !DILocation(line: 338, column: 9, scope: !1261)
!2412 = !DILocation(line: 339, column: 9, scope: !1261)
!2413 = !DILocation(line: 340, column: 9, scope: !1261)
!2414 = !DILocation(line: 341, column: 9, scope: !1261)
!2415 = !DILocation(line: 342, column: 9, scope: !1261)
!2416 = !DILocation(line: 343, column: 9, scope: !1261)
!2417 = !DILocation(line: 344, column: 9, scope: !1261)
!2418 = !DILocation(line: 347, column: 9, scope: !1261)
!2419 = !DILocation(line: 348, column: 9, scope: !1261)
!2420 = !DILocation(line: 349, column: 9, scope: !1261)
!2421 = !DILocation(line: 350, column: 9, scope: !1261)
!2422 = !DILocation(line: 351, column: 9, scope: !1261)
!2423 = !DILocation(line: 353, column: 9, scope: !1261)
!2424 = !DILocation(line: 357, column: 3, scope: !1261)
!2425 = distinct !DISubprogram(name: "__remill_intrinsics", scope: !2426, file: !2426, line: 35, type: !95, isLocal: false, isDefinition: true, scopeLine: 35, flags: DIFlagPrototyped, isOptimized: false, unit: !1, variables: !7)
!2426 = !DIFile(filename: "/home/ubuntu/Github/remill/remill/Arch/Runtime/Intrinsics.cpp", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!2427 = !DILocation(line: 116, column: 1, scope: !2425)
!2428 = !{!2429, !2429, i64 0}
!2429 = !{!"long", !2430, i64 0}
!2430 = !{!"omnipotent char", !2431, i64 0}
!2431 = !{!"Simple C++ TBAA"}
!2432 = !{!2433, !2430, i64 2065}
!2433 = !{!"_ZTS5State", !2430, i64 16, !2434, i64 2064, !2430, i64 2080, !2435, i64 2088, !2437, i64 2112, !2439, i64 2208, !2440, i64 2480, !2441, i64 2608, !2442, i64 2736, !2430, i64 2760, !2430, i64 2768, !2443, i64 3280}
!2434 = !{!"_ZTS10ArithFlags", !2430, i64 0, !2430, i64 1, !2430, i64 2, !2430, i64 3, !2430, i64 4, !2430, i64 5, !2430, i64 6, !2430, i64 7, !2430, i64 8, !2430, i64 9, !2430, i64 10, !2430, i64 11, !2430, i64 12, !2430, i64 13, !2430, i64 14, !2430, i64 15}
!2435 = !{!"_ZTS8Segments", !2436, i64 0, !2430, i64 2, !2436, i64 4, !2430, i64 6, !2436, i64 8, !2430, i64 10, !2436, i64 12, !2430, i64 14, !2436, i64 16, !2430, i64 18, !2436, i64 20, !2430, i64 22}
!2436 = !{!"short", !2430, i64 0}
!2437 = !{!"_ZTS12AddressSpace", !2429, i64 0, !2438, i64 8, !2429, i64 16, !2438, i64 24, !2429, i64 32, !2438, i64 40, !2429, i64 48, !2438, i64 56, !2429, i64 64, !2438, i64 72, !2429, i64 80, !2438, i64 88}
!2438 = !{!"_ZTS3Reg", !2430, i64 0}
!2439 = !{!"_ZTS3GPR", !2429, i64 0, !2438, i64 8, !2429, i64 16, !2438, i64 24, !2429, i64 32, !2438, i64 40, !2429, i64 48, !2438, i64 56, !2429, i64 64, !2438, i64 72, !2429, i64 80, !2438, i64 88, !2429, i64 96, !2438, i64 104, !2429, i64 112, !2438, i64 120, !2429, i64 128, !2438, i64 136, !2429, i64 144, !2438, i64 152, !2429, i64 160, !2438, i64 168, !2429, i64 176, !2438, i64 184, !2429, i64 192, !2438, i64 200, !2429, i64 208, !2438, i64 216, !2429, i64 224, !2438, i64 232, !2429, i64 240, !2438, i64 248, !2429, i64 256, !2438, i64 264}
!2440 = !{!"_ZTS8X87Stack", !2430, i64 0}
!2441 = !{!"_ZTS3MMX", !2430, i64 0}
!2442 = !{!"_ZTS14FPUStatusFlags", !2430, i64 0, !2430, i64 1, !2430, i64 2, !2430, i64 3, !2430, i64 4, !2430, i64 5, !2430, i64 6, !2430, i64 7, !2430, i64 8, !2430, i64 9, !2430, i64 10, !2430, i64 11, !2430, i64 12, !2430, i64 13, !2430, i64 14, !2430, i64 15, !2430, i64 16, !2430, i64 17, !2430, i64 18, !2430, i64 19, !2430, i64 20}
!2443 = !{!"_ZTS13SegmentCaches", !2444, i64 0, !2444, i64 16, !2444, i64 32, !2444, i64 48, !2444, i64 64, !2444, i64 80}
!2444 = !{!"_ZTS13SegmentShadow", !2430, i64 0, !2445, i64 8, !2445, i64 12}
!2445 = !{!"int", !2430, i64 0}
!2446 = !{!2433, !2430, i64 2067}
!2447 = !{!2433, !2430, i64 2069}
!2448 = !{!2433, !2430, i64 2071}
!2449 = !{!2433, !2430, i64 2073}
!2450 = !{!2433, !2430, i64 2077}
!2451 = !{!2430, !2430, i64 0}
