; ModuleID = 'mcsema/test.proposed.ll'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"

%union.anon = type { i64 }
%seg_400370__init_type = type <{ [23 x i8] }>
%seg_400390__text_type = type <{ [354 x i8] }>
%seg_4004f4__fini_type = type <{ [9 x i8] }>
%seg_400500__rodata_type = type <{ [4 x i8] }>
%seg_400504__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400538__eh_frame_type = type <{ [208 x i8] }>
%seg_601018__data_type = type <{ [16 x i8] }>
%__bss_start_type = type <{ [8 x i8] }>
%seg_400504__fini_type = type <{ [9 x i8] }>
%seg_400510__rodata_type = type <{ [4 x i8] }>
%seg_400514__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400548__eh_frame_type = type <{ [208 x i8] }>
%G_0x603a94_type = type <{ [4 x i8] }>
%G_0x603aa0___rsi_4__type = type <{ [4 x i8] }>
%G_0x6042a0___rsi_4__type = type <{ [4 x i8] }>
%G_0x604aa0___rsi_4__type = type <{ [4 x i8] }>
%G_0x6052a0___rsi_4__type = type <{ [4 x i8] }>
%G_0x605aa0___rsi_4__type = type <{ [4 x i8] }>
%G_0x6062a0___rsi_4__type = type <{ [4 x i8] }>
%G_0x606aa0___rsi_4__type = type <{ [4 x i8] }>
%G_0x6072a0___rsi_4__type = type <{ [4 x i8] }>
%G_0x607aa0___rsi_4__type = type <{ [4 x i8] }>
%G_0x6082a0___rsi_4__type = type <{ [4 x i8] }>
%G_0x608aa0___rsi_4__type = type <{ [4 x i8] }>
%G_0x6092a0___rsi_4__type = type <{ [4 x i8] }>
%G_0x609aa0___rsi_4__type = type <{ [4 x i8] }>
%G_0x60df50___rax_4__type = type <{ [4 x i8] }>
%G_0x60df50___rsi_4__type = type <{ [4 x i8] }>
%G_0x610250_type = type <{ [4 x i8] }>
%G_0x610254_type = type <{ [4 x i8] }>
%G_0x610258_type = type <{ [4 x i8] }>
%G_0x61025c_type = type <{ [4 x i8] }>
%G_0x610260_type = type <{ [4 x i8] }>
%G_0x610264_type = type <{ [4 x i8] }>
%G_0x610268_type = type <{ [4 x i8] }>
%G_0x61026c_type = type <{ [4 x i8] }>
%G_0x610270_type = type <{ [4 x i8] }>
%G_0x610274_type = type <{ [4 x i8] }>
%G_0x610278_type = type <{ [4 x i8] }>
%G_0x61027c_type = type <{ [4 x i8] }>
%G_0x610280_type = type <{ [4 x i8] }>
%G_0x6191c4_type = type <{ [4 x i8] }>
%G_0x6191e0_type = type <{ [4 x i8] }>
%G_0x6191e4_type = type <{ [4 x i8] }>
%G_0x6191e8_type = type <{ [4 x i8] }>
%G_0x6191ec_type = type <{ [4 x i8] }>
%G_0x6191f0_type = type <{ [4 x i8] }>
%G_0x6191f4_type = type <{ [4 x i8] }>
%G_0x6191f8_type = type <{ [4 x i8] }>
%G_0x6191fc_type = type <{ [4 x i8] }>
%G_0x619200_type = type <{ [4 x i8] }>
%G_0x619204_type = type <{ [4 x i8] }>
%G_0x619208_type = type <{ [4 x i8] }>
%G_0x61920c_type = type <{ [4 x i8] }>
%G_0x619210_type = type <{ [4 x i8] }>
%G_0x619214_type = type <{ [4 x i8] }>
%G_0x619218_type = type <{ [4 x i8] }>
%G_0x61921c_type = type <{ [4 x i8] }>
%G_0x619220_type = type <{ [4 x i8] }>
%G__0x401344_type = type <{ [8 x i8] }>
%G__0x401356_type = type <{ [8 x i8] }>
%G__0x401369_type = type <{ [8 x i8] }>
%G__0x40137c_type = type <{ [8 x i8] }>
%G__0x603aa0_type = type <{ [8 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque
%struct.anon.2 = type { i8, i8 }

@switch.table = private unnamed_addr constant [4 x i32] [i32 2048, i32 3072, i32 0, i32 1024]
@DR0 = external global i64, align 8
@DR1 = external global i64, align 8
@DR2 = external global i64, align 8
@DR3 = external global i64, align 8
@DR4 = external global i64, align 8
@DR5 = external global i64, align 8
@DR6 = external global i64, align 8
@DR7 = external global i64, align 8
@gCR0 = external global %union.anon, align 1
@gCR1 = external global %union.anon, align 1
@gCR2 = external global %union.anon, align 1
@gCR3 = external global %union.anon, align 1
@gCR4 = external global %union.anon, align 1
@gCR8 = external global %union.anon, align 1
@seg_400370__init = internal constant %seg_400370__init_type <{ [23 x i8] c"H\83\EC\08H\8B\05}\0C \00H\85\C0t\02\FF\D0H\83\C4\08\C3" }>
@seg_400390__text = internal constant %seg_400390__text_type <{ [354 x i8] c"1\EDI\89\D1^H\89\E2H\83\E4\F0PTI\C7\C0\F0\04@\00H\C7\C1\80\04@\00H\C7\C7x\04@\00\FF\156\0C \00\F4\0F\1FD\00\00\F3\C3f.\0F\1F\84\00\00\00\00\00\0F\1F@\00U\B8(\10`\00H=(\10`\00H\89\E5t\17\B8\00\00\00\00H\85\C0t\0D]\BF(\10`\00\FF\E0\0F\1FD\00\00]\C3f\0F\1FD\00\00\BE(\10`\00UH\81\EE(\10`\00H\89\E5H\C1\FE\03H\89\F0H\C1\E8?H\01\C6H\D1\FEt\15\B8\00\00\00\00H\85\C0t\0B]\BF(\10`\00\FF\E0\0F\1F\00]\C3f\0F\1FD\00\00\80=\E1\0B \00\00u\17UH\89\E5\E8~\FF\FF\FF\C6\05\CF\0B \00\01]\C3\0F\1FD\00\00\F3\C3\0F\1F@\00f.\0F\1F\84\00\00\00\00\00UH\89\E5]\EB\89\90U\C3f\0F\1FD\00\00AWAVI\89\D7AUATL\8D%\BE\09 \00UH\8D-\BE\09 \00SA\89\FDI\89\F6L)\E5H\83\EC\08H\C1\FD\03\E8\BF\FE\FF\FFH\85\EDt 1\DB\0F\1F\84\00\00\00\00\00L\89\FAL\89\F6D\89\EFA\FF\14\DCH\83\C3\01H9\DDu\EAH\83\C4\08[]A\5CA]A^A_\C3\90f.\0F\1F\84\00\00\00\00\00\F3\C3" }>
@seg_4004f4__fini = internal constant %seg_4004f4__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400500__rodata = internal constant %seg_400500__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400504__eh_frame_hdr = internal constant %seg_400504__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00\8C\FE\FF\FFL\00\00\00\BC\FE\FF\FFx\00\00\00t\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400538__eh_frame = internal constant %seg_400538__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\008\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00<\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\E0\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@seg_601018__data = internal global %seg_601018__data_type zeroinitializer
@__bss_start = global %__bss_start_type zeroinitializer
@0 = internal global i1 false
@seg_400504__fini = internal constant %seg_400504__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400510__rodata = internal constant %seg_400510__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400514__eh_frame_hdr = internal constant %seg_400514__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00|\FE\FF\FFL\00\00\00\AC\FE\FF\FFx\00\00\00d\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400548__eh_frame = internal constant %seg_400548__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\00(\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00,\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\D0\FE\FF\FF\0C\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@G_0x603a94 = global %G_0x603a94_type zeroinitializer
@G_0x603aa0___rsi_4_ = global %G_0x603aa0___rsi_4__type zeroinitializer
@G_0x6042a0___rsi_4_ = global %G_0x6042a0___rsi_4__type zeroinitializer
@G_0x604aa0___rsi_4_ = global %G_0x604aa0___rsi_4__type zeroinitializer
@G_0x6052a0___rsi_4_ = global %G_0x6052a0___rsi_4__type zeroinitializer
@G_0x605aa0___rsi_4_ = global %G_0x605aa0___rsi_4__type zeroinitializer
@G_0x6062a0___rsi_4_ = global %G_0x6062a0___rsi_4__type zeroinitializer
@G_0x606aa0___rsi_4_ = global %G_0x606aa0___rsi_4__type zeroinitializer
@G_0x6072a0___rsi_4_ = global %G_0x6072a0___rsi_4__type zeroinitializer
@G_0x607aa0___rsi_4_ = global %G_0x607aa0___rsi_4__type zeroinitializer
@G_0x6082a0___rsi_4_ = global %G_0x6082a0___rsi_4__type zeroinitializer
@G_0x608aa0___rsi_4_ = global %G_0x608aa0___rsi_4__type zeroinitializer
@G_0x6092a0___rsi_4_ = global %G_0x6092a0___rsi_4__type zeroinitializer
@G_0x609aa0___rsi_4_ = global %G_0x609aa0___rsi_4__type zeroinitializer
@G_0x60df50___rax_4_ = global %G_0x60df50___rax_4__type zeroinitializer
@G_0x60df50___rsi_4_ = global %G_0x60df50___rsi_4__type zeroinitializer
@G_0x610250 = global %G_0x610250_type zeroinitializer
@G_0x610254 = global %G_0x610254_type zeroinitializer
@G_0x610258 = global %G_0x610258_type zeroinitializer
@G_0x61025c = global %G_0x61025c_type zeroinitializer
@G_0x610260 = global %G_0x610260_type zeroinitializer
@G_0x610264 = global %G_0x610264_type zeroinitializer
@G_0x610268 = global %G_0x610268_type zeroinitializer
@G_0x61026c = global %G_0x61026c_type zeroinitializer
@G_0x610270 = global %G_0x610270_type zeroinitializer
@G_0x610274 = global %G_0x610274_type zeroinitializer
@G_0x610278 = global %G_0x610278_type zeroinitializer
@G_0x61027c = global %G_0x61027c_type zeroinitializer
@G_0x610280 = global %G_0x610280_type zeroinitializer
@G_0x6191c4 = global %G_0x6191c4_type zeroinitializer
@G_0x6191e0 = global %G_0x6191e0_type zeroinitializer
@G_0x6191e4 = global %G_0x6191e4_type zeroinitializer
@G_0x6191e8 = global %G_0x6191e8_type zeroinitializer
@G_0x6191ec = global %G_0x6191ec_type zeroinitializer
@G_0x6191f0 = global %G_0x6191f0_type zeroinitializer
@G_0x6191f4 = global %G_0x6191f4_type zeroinitializer
@G_0x6191f8 = global %G_0x6191f8_type zeroinitializer
@G_0x6191fc = global %G_0x6191fc_type zeroinitializer
@G_0x619200 = global %G_0x619200_type zeroinitializer
@G_0x619204 = global %G_0x619204_type zeroinitializer
@G_0x619208 = global %G_0x619208_type zeroinitializer
@G_0x61920c = global %G_0x61920c_type zeroinitializer
@G_0x619210 = global %G_0x619210_type zeroinitializer
@G_0x619214 = global %G_0x619214_type zeroinitializer
@G_0x619218 = global %G_0x619218_type zeroinitializer
@G_0x61921c = global %G_0x61921c_type zeroinitializer
@G_0x619220 = global %G_0x619220_type zeroinitializer
@G__0x401344 = global %G__0x401344_type zeroinitializer
@G__0x401356 = global %G__0x401356_type zeroinitializer
@G__0x401369 = global %G__0x401369_type zeroinitializer
@G__0x40137c = global %G__0x40137c_type zeroinitializer
@G__0x603aa0 = global %G__0x603aa0_type zeroinitializer

declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare i32 @__remill_fpu_exception_test_and_clear(i32, i32)

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #0

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #0

; Function Attrs: nounwind readnone
declare i32 @llvm.ctpop.i32(i32) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.bswap.i64(i64) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.cttz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.cttz.i64(i64, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.ctlz.i64(i64, i1) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #0

; Function Attrs: nounwind readnone
declare double @llvm.nearbyint.f64(double) #1

; Function Attrs: nounwind readnone
declare double @llvm.fabs.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.nearbyint.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.fabs.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare double @llvm.trunc.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.trunc.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare float @llvm.nearbyint.f32(float) #1

; Function Attrs: nounwind readnone
declare float @llvm.fabs.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.nearbyint.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.fabs.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare float @llvm.trunc.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.trunc.v4f32(<4 x float>) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #0

declare double @atan(double) local_unnamed_addr

declare double @cos(double) local_unnamed_addr

declare double @sin(double) local_unnamed_addr

declare double @sqrt(double) local_unnamed_addr

declare double @tan(double) local_unnamed_addr

declare extern_weak x86_64_sysvcc i64 @abort()

declare extern_weak x86_64_sysvcc i64 @abs(i64)

declare extern_weak x86_64_sysvcc i64 @asin(i64)

declare extern_weak x86_64_sysvcc i64 @atof(i64)

declare extern_weak x86_64_sysvcc i64 @atoi(i64)

declare extern_weak x86_64_sysvcc i64 @atol(i64)

declare extern_weak x86_64_sysvcc i64 @calloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @clock()

declare extern_weak x86_64_sysvcc i64 @cosf(i64)

declare extern_weak x86_64_sysvcc i64 @exit(i64)

declare extern_weak x86_64_sysvcc i64 @exp(i64)

declare extern_weak x86_64_sysvcc i64 @fflush(i64)

declare extern_weak x86_64_sysvcc i64 @floor(i64)

declare extern_weak x86_64_sysvcc i64 @fprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @fputs(i64, i64)

declare extern_weak x86_64_sysvcc i64 @free(i64)

declare extern_weak x86_64_sysvcc i64 @fwrite(i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @getchar()

declare extern_weak x86_64_sysvcc i64 @gettimeofday(i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_fscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_scanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_sscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @log(i64)

declare extern_weak x86_64_sysvcc i64 @lrand48()

declare extern_weak x86_64_sysvcc i64 @malloc(i64)

declare extern_weak x86_64_sysvcc i64 @memalign(i64, i64)

declare extern_weak x86_64_sysvcc i64 @memcpy(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @memset(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @perror(i64)

declare extern_weak x86_64_sysvcc i64 @posix_memalign(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @pow(i64, i64)

declare extern_weak x86_64_sysvcc i64 @printf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @putchar(i64)

declare extern_weak x86_64_sysvcc i64 @puts(i64)

declare extern_weak x86_64_sysvcc i64 @rand()

declare extern_weak x86_64_sysvcc i64 @random()

declare extern_weak x86_64_sysvcc i64 @realloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @seed48(i64)

declare extern_weak x86_64_sysvcc i64 @sinf(i64)

declare extern_weak x86_64_sysvcc i64 @sprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @srand(i64)

declare extern_weak x86_64_sysvcc i64 @strcat(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcmp(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcpy(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strdup(i64)

declare extern_weak x86_64_sysvcc i64 @strlen(i64)

declare extern_weak x86_64_sysvcc i64 @strncmp(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @strtoll(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @time(i64)

declare extern_weak x86_64_sysvcc i64 @ungetc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_join(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_create(i64, i64, i64, i64)

declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare %struct.Memory* @ext_sqrt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_atan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_cos(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_tan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_sin(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @sub_400550.Fit(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_4005e0.Place(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_400770.Trial(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

; Function Attrs: alwaysinline
define %struct.Memory* @Puzzle(%struct.State* noalias, i64, %struct.Memory* noalias) #2 {
entry:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %MEMORY = alloca %struct.Memory*, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8
  %loadMem_400840 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0
  %PC.i = bitcast %union.anon* %6 to i64*
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 15
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0
  %RBP.i = bitcast %union.anon* %9 to i64*
  %10 = load i64, i64* %RBP.i
  %11 = load i64, i64* %PC.i
  %12 = add i64 %11, 1
  store i64 %12, i64* %PC.i
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, -8
  %16 = inttoptr i64 %15 to i64*
  store i64 %10, i64* %16
  store i64 %15, i64* %13, align 8
  store %struct.Memory* %loadMem_400840, %struct.Memory** %MEMORY
  %loadMem_400841 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18 = getelementptr inbounds %struct.GPR, %struct.GPR* %17, i32 0, i32 33
  %19 = getelementptr inbounds %struct.Reg, %struct.Reg* %18, i32 0, i32 0
  %PC.i7 = bitcast %union.anon* %19 to i64*
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21 = getelementptr inbounds %struct.GPR, %struct.GPR* %20, i32 0, i32 13
  %22 = getelementptr inbounds %struct.Reg, %struct.Reg* %21, i32 0, i32 0
  %RSP.i8 = bitcast %union.anon* %22 to i64*
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 15
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0
  %RBP.i9 = bitcast %union.anon* %25 to i64*
  %26 = load i64, i64* %RSP.i8
  %27 = load i64, i64* %PC.i7
  %28 = add i64 %27, 3
  store i64 %28, i64* %PC.i7
  store i64 %26, i64* %RBP.i9, align 8
  store %struct.Memory* %loadMem_400841, %struct.Memory** %MEMORY
  %loadMem_400844 = load %struct.Memory*, %struct.Memory** %MEMORY
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30 = getelementptr inbounds %struct.GPR, %struct.GPR* %29, i32 0, i32 33
  %31 = getelementptr inbounds %struct.Reg, %struct.Reg* %30, i32 0, i32 0
  %PC.i17 = bitcast %union.anon* %31 to i64*
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33 = getelementptr inbounds %struct.GPR, %struct.GPR* %32, i32 0, i32 13
  %34 = getelementptr inbounds %struct.Reg, %struct.Reg* %33, i32 0, i32 0
  %RSP.i18 = bitcast %union.anon* %34 to i64*
  %35 = load i64, i64* %RSP.i18
  %36 = load i64, i64* %PC.i17
  %37 = add i64 %36, 4
  store i64 %37, i64* %PC.i17
  %38 = sub i64 %35, 48
  store i64 %38, i64* %RSP.i18, align 8
  %39 = icmp ult i64 %35, 48
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %40, i8* %41, align 1
  %42 = trunc i64 %38 to i32
  %43 = and i32 %42, 255
  %44 = call i32 @llvm.ctpop.i32(i32 %43)
  %45 = trunc i32 %44 to i8
  %46 = and i8 %45, 1
  %47 = xor i8 %46, 1
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %47, i8* %48, align 1
  %49 = xor i64 48, %35
  %50 = xor i64 %49, %38
  %51 = lshr i64 %50, 4
  %52 = trunc i64 %51 to i8
  %53 = and i8 %52, 1
  %54 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %53, i8* %54, align 1
  %55 = icmp eq i64 %38, 0
  %56 = zext i1 %55 to i8
  %57 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %56, i8* %57, align 1
  %58 = lshr i64 %38, 63
  %59 = trunc i64 %58 to i8
  %60 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %59, i8* %60, align 1
  %61 = lshr i64 %35, 63
  %62 = xor i64 %58, %61
  %63 = add i64 %62, %61
  %64 = icmp eq i64 %63, 2
  %65 = zext i1 %64 to i8
  %66 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %65, i8* %66, align 1
  store %struct.Memory* %loadMem_400844, %struct.Memory** %MEMORY
  %loadMem_400848 = load %struct.Memory*, %struct.Memory** %MEMORY
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %68 = getelementptr inbounds %struct.GPR, %struct.GPR* %67, i32 0, i32 33
  %69 = getelementptr inbounds %struct.Reg, %struct.Reg* %68, i32 0, i32 0
  %PC.i30 = bitcast %union.anon* %69 to i64*
  %70 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %71 = getelementptr inbounds %struct.GPR, %struct.GPR* %70, i32 0, i32 15
  %72 = getelementptr inbounds %struct.Reg, %struct.Reg* %71, i32 0, i32 0
  %RBP.i31 = bitcast %union.anon* %72 to i64*
  %73 = load i64, i64* %RBP.i31
  %74 = sub i64 %73, 16
  %75 = load i64, i64* %PC.i30
  %76 = add i64 %75, 7
  store i64 %76, i64* %PC.i30
  %77 = inttoptr i64 %74 to i32*
  store i32 0, i32* %77
  store %struct.Memory* %loadMem_400848, %struct.Memory** %MEMORY
  br label %block_.L_40084f

block_.L_40084f:                                  ; preds = %block_40085c, %entry
  %loadMem_40084f = load %struct.Memory*, %struct.Memory** %MEMORY
  %78 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %79 = getelementptr inbounds %struct.GPR, %struct.GPR* %78, i32 0, i32 33
  %80 = getelementptr inbounds %struct.Reg, %struct.Reg* %79, i32 0, i32 0
  %PC.i43 = bitcast %union.anon* %80 to i64*
  %81 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %82 = getelementptr inbounds %struct.GPR, %struct.GPR* %81, i32 0, i32 15
  %83 = getelementptr inbounds %struct.Reg, %struct.Reg* %82, i32 0, i32 0
  %RBP.i44 = bitcast %union.anon* %83 to i64*
  %84 = load i64, i64* %RBP.i44
  %85 = sub i64 %84, 16
  %86 = load i64, i64* %PC.i43
  %87 = add i64 %86, 7
  store i64 %87, i64* %PC.i43
  %88 = inttoptr i64 %85 to i32*
  %89 = load i32, i32* %88
  %90 = sub i32 %89, 511
  %91 = icmp ult i32 %89, 511
  %92 = zext i1 %91 to i8
  %93 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %92, i8* %93, align 1
  %94 = and i32 %90, 255
  %95 = call i32 @llvm.ctpop.i32(i32 %94)
  %96 = trunc i32 %95 to i8
  %97 = and i8 %96, 1
  %98 = xor i8 %97, 1
  %99 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %98, i8* %99, align 1
  %100 = xor i32 %89, 511
  %101 = xor i32 %100, %90
  %102 = lshr i32 %101, 4
  %103 = trunc i32 %102 to i8
  %104 = and i8 %103, 1
  %105 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %104, i8* %105, align 1
  %106 = icmp eq i32 %90, 0
  %107 = zext i1 %106 to i8
  %108 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %107, i8* %108, align 1
  %109 = lshr i32 %90, 31
  %110 = trunc i32 %109 to i8
  %111 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %110, i8* %111, align 1
  %112 = lshr i32 %89, 31
  %113 = xor i32 %109, %112
  %114 = add i32 %113, %112
  %115 = icmp eq i32 %114, 2
  %116 = zext i1 %115 to i8
  %117 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %116, i8* %117, align 1
  store %struct.Memory* %loadMem_40084f, %struct.Memory** %MEMORY
  %loadMem_400856 = load %struct.Memory*, %struct.Memory** %MEMORY
  %118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %119 = getelementptr inbounds %struct.GPR, %struct.GPR* %118, i32 0, i32 33
  %120 = getelementptr inbounds %struct.Reg, %struct.Reg* %119, i32 0, i32 0
  %PC.i59 = bitcast %union.anon* %120 to i64*
  %121 = load i64, i64* %PC.i59
  %122 = add i64 %121, 35
  %123 = load i64, i64* %PC.i59
  %124 = add i64 %123, 6
  %125 = load i64, i64* %PC.i59
  %126 = add i64 %125, 6
  store i64 %126, i64* %PC.i59
  %127 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %128 = load i8, i8* %127, align 1
  %129 = icmp eq i8 %128, 0
  %130 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %131 = load i8, i8* %130, align 1
  %132 = icmp ne i8 %131, 0
  %133 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %134 = load i8, i8* %133, align 1
  %135 = icmp ne i8 %134, 0
  %136 = xor i1 %132, %135
  %137 = xor i1 %136, true
  %138 = and i1 %129, %137
  %139 = zext i1 %138 to i8
  store i8 %139, i8* %BRANCH_TAKEN, align 1
  %140 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %141 = select i1 %138, i64 %122, i64 %124
  store i64 %141, i64* %140, align 8
  store %struct.Memory* %loadMem_400856, %struct.Memory** %MEMORY
  %loadBr_400856 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400856 = icmp eq i8 %loadBr_400856, 1
  br i1 %cmpBr_400856, label %block_.L_400879, label %block_40085c

block_40085c:                                     ; preds = %block_.L_40084f
  %loadMem_40085c = load %struct.Memory*, %struct.Memory** %MEMORY
  %142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %143 = getelementptr inbounds %struct.GPR, %struct.GPR* %142, i32 0, i32 33
  %144 = getelementptr inbounds %struct.Reg, %struct.Reg* %143, i32 0, i32 0
  %PC.i1120 = bitcast %union.anon* %144 to i64*
  %145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %146 = getelementptr inbounds %struct.GPR, %struct.GPR* %145, i32 0, i32 1
  %147 = getelementptr inbounds %struct.Reg, %struct.Reg* %146, i32 0, i32 0
  %RAX.i1121 = bitcast %union.anon* %147 to i64*
  %148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %149 = getelementptr inbounds %struct.GPR, %struct.GPR* %148, i32 0, i32 15
  %150 = getelementptr inbounds %struct.Reg, %struct.Reg* %149, i32 0, i32 0
  %RBP.i1122 = bitcast %union.anon* %150 to i64*
  %151 = load i64, i64* %RBP.i1122
  %152 = sub i64 %151, 16
  %153 = load i64, i64* %PC.i1120
  %154 = add i64 %153, 4
  store i64 %154, i64* %PC.i1120
  %155 = inttoptr i64 %152 to i32*
  %156 = load i32, i32* %155
  %157 = sext i32 %156 to i64
  store i64 %157, i64* %RAX.i1121, align 8
  store %struct.Memory* %loadMem_40085c, %struct.Memory** %MEMORY
  %loadMem_400860 = load %struct.Memory*, %struct.Memory** %MEMORY
  %158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %159 = getelementptr inbounds %struct.GPR, %struct.GPR* %158, i32 0, i32 33
  %160 = getelementptr inbounds %struct.Reg, %struct.Reg* %159, i32 0, i32 0
  %PC.i1118 = bitcast %union.anon* %160 to i64*
  %161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %162 = getelementptr inbounds %struct.GPR, %struct.GPR* %161, i32 0, i32 1
  %163 = getelementptr inbounds %struct.Reg, %struct.Reg* %162, i32 0, i32 0
  %RAX.i1119 = bitcast %union.anon* %163 to i64*
  %164 = load i64, i64* %RAX.i1119
  %165 = mul i64 %164, 4
  %166 = add i64 %165, ptrtoint (%G_0x60df50___rax_4__type* @G_0x60df50___rax_4_ to i64)
  %167 = load i64, i64* %PC.i1118
  %168 = add i64 %167, 11
  store i64 %168, i64* %PC.i1118
  %169 = inttoptr i64 %166 to i32*
  store i32 1, i32* %169
  store %struct.Memory* %loadMem_400860, %struct.Memory** %MEMORY
  %loadMem_40086b = load %struct.Memory*, %struct.Memory** %MEMORY
  %170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %171 = getelementptr inbounds %struct.GPR, %struct.GPR* %170, i32 0, i32 33
  %172 = getelementptr inbounds %struct.Reg, %struct.Reg* %171, i32 0, i32 0
  %PC.i1115 = bitcast %union.anon* %172 to i64*
  %173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %174 = getelementptr inbounds %struct.GPR, %struct.GPR* %173, i32 0, i32 1
  %175 = getelementptr inbounds %struct.Reg, %struct.Reg* %174, i32 0, i32 0
  %RAX.i1116 = bitcast %union.anon* %175 to i64*
  %176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %177 = getelementptr inbounds %struct.GPR, %struct.GPR* %176, i32 0, i32 15
  %178 = getelementptr inbounds %struct.Reg, %struct.Reg* %177, i32 0, i32 0
  %RBP.i1117 = bitcast %union.anon* %178 to i64*
  %179 = load i64, i64* %RBP.i1117
  %180 = sub i64 %179, 16
  %181 = load i64, i64* %PC.i1115
  %182 = add i64 %181, 3
  store i64 %182, i64* %PC.i1115
  %183 = inttoptr i64 %180 to i32*
  %184 = load i32, i32* %183
  %185 = zext i32 %184 to i64
  store i64 %185, i64* %RAX.i1116, align 8
  store %struct.Memory* %loadMem_40086b, %struct.Memory** %MEMORY
  %loadMem_40086e = load %struct.Memory*, %struct.Memory** %MEMORY
  %186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %187 = getelementptr inbounds %struct.GPR, %struct.GPR* %186, i32 0, i32 33
  %188 = getelementptr inbounds %struct.Reg, %struct.Reg* %187, i32 0, i32 0
  %PC.i1113 = bitcast %union.anon* %188 to i64*
  %189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %190 = getelementptr inbounds %struct.GPR, %struct.GPR* %189, i32 0, i32 1
  %191 = getelementptr inbounds %struct.Reg, %struct.Reg* %190, i32 0, i32 0
  %RAX.i1114 = bitcast %union.anon* %191 to i64*
  %192 = load i64, i64* %RAX.i1114
  %193 = load i64, i64* %PC.i1113
  %194 = add i64 %193, 3
  store i64 %194, i64* %PC.i1113
  %195 = trunc i64 %192 to i32
  %196 = add i32 1, %195
  %197 = zext i32 %196 to i64
  store i64 %197, i64* %RAX.i1114, align 8
  %198 = icmp ult i32 %196, %195
  %199 = icmp ult i32 %196, 1
  %200 = or i1 %198, %199
  %201 = zext i1 %200 to i8
  %202 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %201, i8* %202, align 1
  %203 = and i32 %196, 255
  %204 = call i32 @llvm.ctpop.i32(i32 %203)
  %205 = trunc i32 %204 to i8
  %206 = and i8 %205, 1
  %207 = xor i8 %206, 1
  %208 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %207, i8* %208, align 1
  %209 = xor i64 1, %192
  %210 = trunc i64 %209 to i32
  %211 = xor i32 %210, %196
  %212 = lshr i32 %211, 4
  %213 = trunc i32 %212 to i8
  %214 = and i8 %213, 1
  %215 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %214, i8* %215, align 1
  %216 = icmp eq i32 %196, 0
  %217 = zext i1 %216 to i8
  %218 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %217, i8* %218, align 1
  %219 = lshr i32 %196, 31
  %220 = trunc i32 %219 to i8
  %221 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %220, i8* %221, align 1
  %222 = lshr i32 %195, 31
  %223 = xor i32 %219, %222
  %224 = add i32 %223, %219
  %225 = icmp eq i32 %224, 2
  %226 = zext i1 %225 to i8
  %227 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %226, i8* %227, align 1
  store %struct.Memory* %loadMem_40086e, %struct.Memory** %MEMORY
  %loadMem_400871 = load %struct.Memory*, %struct.Memory** %MEMORY
  %228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %229 = getelementptr inbounds %struct.GPR, %struct.GPR* %228, i32 0, i32 33
  %230 = getelementptr inbounds %struct.Reg, %struct.Reg* %229, i32 0, i32 0
  %PC.i1110 = bitcast %union.anon* %230 to i64*
  %231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %232 = getelementptr inbounds %struct.GPR, %struct.GPR* %231, i32 0, i32 1
  %233 = getelementptr inbounds %struct.Reg, %struct.Reg* %232, i32 0, i32 0
  %EAX.i1111 = bitcast %union.anon* %233 to i32*
  %234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %235 = getelementptr inbounds %struct.GPR, %struct.GPR* %234, i32 0, i32 15
  %236 = getelementptr inbounds %struct.Reg, %struct.Reg* %235, i32 0, i32 0
  %RBP.i1112 = bitcast %union.anon* %236 to i64*
  %237 = load i64, i64* %RBP.i1112
  %238 = sub i64 %237, 16
  %239 = load i32, i32* %EAX.i1111
  %240 = zext i32 %239 to i64
  %241 = load i64, i64* %PC.i1110
  %242 = add i64 %241, 3
  store i64 %242, i64* %PC.i1110
  %243 = inttoptr i64 %238 to i32*
  store i32 %239, i32* %243
  store %struct.Memory* %loadMem_400871, %struct.Memory** %MEMORY
  %loadMem_400874 = load %struct.Memory*, %struct.Memory** %MEMORY
  %244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %245 = getelementptr inbounds %struct.GPR, %struct.GPR* %244, i32 0, i32 33
  %246 = getelementptr inbounds %struct.Reg, %struct.Reg* %245, i32 0, i32 0
  %PC.i1109 = bitcast %union.anon* %246 to i64*
  %247 = load i64, i64* %PC.i1109
  %248 = add i64 %247, -37
  %249 = load i64, i64* %PC.i1109
  %250 = add i64 %249, 5
  store i64 %250, i64* %PC.i1109
  %251 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %248, i64* %251, align 8
  store %struct.Memory* %loadMem_400874, %struct.Memory** %MEMORY
  br label %block_.L_40084f

block_.L_400879:                                  ; preds = %block_.L_40084f
  %loadMem_400879 = load %struct.Memory*, %struct.Memory** %MEMORY
  %252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %253 = getelementptr inbounds %struct.GPR, %struct.GPR* %252, i32 0, i32 33
  %254 = getelementptr inbounds %struct.Reg, %struct.Reg* %253, i32 0, i32 0
  %PC.i1107 = bitcast %union.anon* %254 to i64*
  %255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %256 = getelementptr inbounds %struct.GPR, %struct.GPR* %255, i32 0, i32 15
  %257 = getelementptr inbounds %struct.Reg, %struct.Reg* %256, i32 0, i32 0
  %RBP.i1108 = bitcast %union.anon* %257 to i64*
  %258 = load i64, i64* %RBP.i1108
  %259 = sub i64 %258, 4
  %260 = load i64, i64* %PC.i1107
  %261 = add i64 %260, 7
  store i64 %261, i64* %PC.i1107
  %262 = inttoptr i64 %259 to i32*
  store i32 1, i32* %262
  store %struct.Memory* %loadMem_400879, %struct.Memory** %MEMORY
  br label %block_.L_400880

block_.L_400880:                                  ; preds = %block_.L_4008f3, %block_.L_400879
  %loadMem_400880 = load %struct.Memory*, %struct.Memory** %MEMORY
  %263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %264 = getelementptr inbounds %struct.GPR, %struct.GPR* %263, i32 0, i32 33
  %265 = getelementptr inbounds %struct.Reg, %struct.Reg* %264, i32 0, i32 0
  %PC.i1105 = bitcast %union.anon* %265 to i64*
  %266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %267 = getelementptr inbounds %struct.GPR, %struct.GPR* %266, i32 0, i32 15
  %268 = getelementptr inbounds %struct.Reg, %struct.Reg* %267, i32 0, i32 0
  %RBP.i1106 = bitcast %union.anon* %268 to i64*
  %269 = load i64, i64* %RBP.i1106
  %270 = sub i64 %269, 4
  %271 = load i64, i64* %PC.i1105
  %272 = add i64 %271, 4
  store i64 %272, i64* %PC.i1105
  %273 = inttoptr i64 %270 to i32*
  %274 = load i32, i32* %273
  %275 = sub i32 %274, 5
  %276 = icmp ult i32 %274, 5
  %277 = zext i1 %276 to i8
  %278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %277, i8* %278, align 1
  %279 = and i32 %275, 255
  %280 = call i32 @llvm.ctpop.i32(i32 %279)
  %281 = trunc i32 %280 to i8
  %282 = and i8 %281, 1
  %283 = xor i8 %282, 1
  %284 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %283, i8* %284, align 1
  %285 = xor i32 %274, 5
  %286 = xor i32 %285, %275
  %287 = lshr i32 %286, 4
  %288 = trunc i32 %287 to i8
  %289 = and i8 %288, 1
  %290 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %289, i8* %290, align 1
  %291 = icmp eq i32 %275, 0
  %292 = zext i1 %291 to i8
  %293 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %292, i8* %293, align 1
  %294 = lshr i32 %275, 31
  %295 = trunc i32 %294 to i8
  %296 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %295, i8* %296, align 1
  %297 = lshr i32 %274, 31
  %298 = xor i32 %294, %297
  %299 = add i32 %298, %297
  %300 = icmp eq i32 %299, 2
  %301 = zext i1 %300 to i8
  %302 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %301, i8* %302, align 1
  store %struct.Memory* %loadMem_400880, %struct.Memory** %MEMORY
  %loadMem_400884 = load %struct.Memory*, %struct.Memory** %MEMORY
  %303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %304 = getelementptr inbounds %struct.GPR, %struct.GPR* %303, i32 0, i32 33
  %305 = getelementptr inbounds %struct.Reg, %struct.Reg* %304, i32 0, i32 0
  %PC.i1104 = bitcast %union.anon* %305 to i64*
  %306 = load i64, i64* %PC.i1104
  %307 = add i64 %306, 125
  %308 = load i64, i64* %PC.i1104
  %309 = add i64 %308, 6
  %310 = load i64, i64* %PC.i1104
  %311 = add i64 %310, 6
  store i64 %311, i64* %PC.i1104
  %312 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %313 = load i8, i8* %312, align 1
  %314 = icmp eq i8 %313, 0
  %315 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %316 = load i8, i8* %315, align 1
  %317 = icmp ne i8 %316, 0
  %318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %319 = load i8, i8* %318, align 1
  %320 = icmp ne i8 %319, 0
  %321 = xor i1 %317, %320
  %322 = xor i1 %321, true
  %323 = and i1 %314, %322
  %324 = zext i1 %323 to i8
  store i8 %324, i8* %BRANCH_TAKEN, align 1
  %325 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %326 = select i1 %323, i64 %307, i64 %309
  store i64 %326, i64* %325, align 8
  store %struct.Memory* %loadMem_400884, %struct.Memory** %MEMORY
  %loadBr_400884 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400884 = icmp eq i8 %loadBr_400884, 1
  br i1 %cmpBr_400884, label %block_.L_400901, label %block_40088a

block_40088a:                                     ; preds = %block_.L_400880
  %loadMem_40088a = load %struct.Memory*, %struct.Memory** %MEMORY
  %327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %328 = getelementptr inbounds %struct.GPR, %struct.GPR* %327, i32 0, i32 33
  %329 = getelementptr inbounds %struct.Reg, %struct.Reg* %328, i32 0, i32 0
  %PC.i1102 = bitcast %union.anon* %329 to i64*
  %330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %331 = getelementptr inbounds %struct.GPR, %struct.GPR* %330, i32 0, i32 15
  %332 = getelementptr inbounds %struct.Reg, %struct.Reg* %331, i32 0, i32 0
  %RBP.i1103 = bitcast %union.anon* %332 to i64*
  %333 = load i64, i64* %RBP.i1103
  %334 = sub i64 %333, 8
  %335 = load i64, i64* %PC.i1102
  %336 = add i64 %335, 7
  store i64 %336, i64* %PC.i1102
  %337 = inttoptr i64 %334 to i32*
  store i32 1, i32* %337
  store %struct.Memory* %loadMem_40088a, %struct.Memory** %MEMORY
  br label %block_.L_400891

block_.L_400891:                                  ; preds = %block_.L_4008e0, %block_40088a
  %loadMem_400891 = load %struct.Memory*, %struct.Memory** %MEMORY
  %338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %339 = getelementptr inbounds %struct.GPR, %struct.GPR* %338, i32 0, i32 33
  %340 = getelementptr inbounds %struct.Reg, %struct.Reg* %339, i32 0, i32 0
  %PC.i1100 = bitcast %union.anon* %340 to i64*
  %341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %342 = getelementptr inbounds %struct.GPR, %struct.GPR* %341, i32 0, i32 15
  %343 = getelementptr inbounds %struct.Reg, %struct.Reg* %342, i32 0, i32 0
  %RBP.i1101 = bitcast %union.anon* %343 to i64*
  %344 = load i64, i64* %RBP.i1101
  %345 = sub i64 %344, 8
  %346 = load i64, i64* %PC.i1100
  %347 = add i64 %346, 4
  store i64 %347, i64* %PC.i1100
  %348 = inttoptr i64 %345 to i32*
  %349 = load i32, i32* %348
  %350 = sub i32 %349, 5
  %351 = icmp ult i32 %349, 5
  %352 = zext i1 %351 to i8
  %353 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %352, i8* %353, align 1
  %354 = and i32 %350, 255
  %355 = call i32 @llvm.ctpop.i32(i32 %354)
  %356 = trunc i32 %355 to i8
  %357 = and i8 %356, 1
  %358 = xor i8 %357, 1
  %359 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %358, i8* %359, align 1
  %360 = xor i32 %349, 5
  %361 = xor i32 %360, %350
  %362 = lshr i32 %361, 4
  %363 = trunc i32 %362 to i8
  %364 = and i8 %363, 1
  %365 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %364, i8* %365, align 1
  %366 = icmp eq i32 %350, 0
  %367 = zext i1 %366 to i8
  %368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %367, i8* %368, align 1
  %369 = lshr i32 %350, 31
  %370 = trunc i32 %369 to i8
  %371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %370, i8* %371, align 1
  %372 = lshr i32 %349, 31
  %373 = xor i32 %369, %372
  %374 = add i32 %373, %372
  %375 = icmp eq i32 %374, 2
  %376 = zext i1 %375 to i8
  %377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %376, i8* %377, align 1
  store %struct.Memory* %loadMem_400891, %struct.Memory** %MEMORY
  %loadMem_400895 = load %struct.Memory*, %struct.Memory** %MEMORY
  %378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %379 = getelementptr inbounds %struct.GPR, %struct.GPR* %378, i32 0, i32 33
  %380 = getelementptr inbounds %struct.Reg, %struct.Reg* %379, i32 0, i32 0
  %PC.i1099 = bitcast %union.anon* %380 to i64*
  %381 = load i64, i64* %PC.i1099
  %382 = add i64 %381, 89
  %383 = load i64, i64* %PC.i1099
  %384 = add i64 %383, 6
  %385 = load i64, i64* %PC.i1099
  %386 = add i64 %385, 6
  store i64 %386, i64* %PC.i1099
  %387 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %388 = load i8, i8* %387, align 1
  %389 = icmp eq i8 %388, 0
  %390 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %391 = load i8, i8* %390, align 1
  %392 = icmp ne i8 %391, 0
  %393 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %394 = load i8, i8* %393, align 1
  %395 = icmp ne i8 %394, 0
  %396 = xor i1 %392, %395
  %397 = xor i1 %396, true
  %398 = and i1 %389, %397
  %399 = zext i1 %398 to i8
  store i8 %399, i8* %BRANCH_TAKEN, align 1
  %400 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %401 = select i1 %398, i64 %382, i64 %384
  store i64 %401, i64* %400, align 8
  store %struct.Memory* %loadMem_400895, %struct.Memory** %MEMORY
  %loadBr_400895 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400895 = icmp eq i8 %loadBr_400895, 1
  br i1 %cmpBr_400895, label %block_.L_4008ee, label %block_40089b

block_40089b:                                     ; preds = %block_.L_400891
  %loadMem_40089b = load %struct.Memory*, %struct.Memory** %MEMORY
  %402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %403 = getelementptr inbounds %struct.GPR, %struct.GPR* %402, i32 0, i32 33
  %404 = getelementptr inbounds %struct.Reg, %struct.Reg* %403, i32 0, i32 0
  %PC.i1097 = bitcast %union.anon* %404 to i64*
  %405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %406 = getelementptr inbounds %struct.GPR, %struct.GPR* %405, i32 0, i32 15
  %407 = getelementptr inbounds %struct.Reg, %struct.Reg* %406, i32 0, i32 0
  %RBP.i1098 = bitcast %union.anon* %407 to i64*
  %408 = load i64, i64* %RBP.i1098
  %409 = sub i64 %408, 12
  %410 = load i64, i64* %PC.i1097
  %411 = add i64 %410, 7
  store i64 %411, i64* %PC.i1097
  %412 = inttoptr i64 %409 to i32*
  store i32 1, i32* %412
  store %struct.Memory* %loadMem_40089b, %struct.Memory** %MEMORY
  br label %block_.L_4008a2

block_.L_4008a2:                                  ; preds = %block_4008ac, %block_40089b
  %loadMem_4008a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %414 = getelementptr inbounds %struct.GPR, %struct.GPR* %413, i32 0, i32 33
  %415 = getelementptr inbounds %struct.Reg, %struct.Reg* %414, i32 0, i32 0
  %PC.i1095 = bitcast %union.anon* %415 to i64*
  %416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %417 = getelementptr inbounds %struct.GPR, %struct.GPR* %416, i32 0, i32 15
  %418 = getelementptr inbounds %struct.Reg, %struct.Reg* %417, i32 0, i32 0
  %RBP.i1096 = bitcast %union.anon* %418 to i64*
  %419 = load i64, i64* %RBP.i1096
  %420 = sub i64 %419, 12
  %421 = load i64, i64* %PC.i1095
  %422 = add i64 %421, 4
  store i64 %422, i64* %PC.i1095
  %423 = inttoptr i64 %420 to i32*
  %424 = load i32, i32* %423
  %425 = sub i32 %424, 5
  %426 = icmp ult i32 %424, 5
  %427 = zext i1 %426 to i8
  %428 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %427, i8* %428, align 1
  %429 = and i32 %425, 255
  %430 = call i32 @llvm.ctpop.i32(i32 %429)
  %431 = trunc i32 %430 to i8
  %432 = and i8 %431, 1
  %433 = xor i8 %432, 1
  %434 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %433, i8* %434, align 1
  %435 = xor i32 %424, 5
  %436 = xor i32 %435, %425
  %437 = lshr i32 %436, 4
  %438 = trunc i32 %437 to i8
  %439 = and i8 %438, 1
  %440 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %439, i8* %440, align 1
  %441 = icmp eq i32 %425, 0
  %442 = zext i1 %441 to i8
  %443 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %442, i8* %443, align 1
  %444 = lshr i32 %425, 31
  %445 = trunc i32 %444 to i8
  %446 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %445, i8* %446, align 1
  %447 = lshr i32 %424, 31
  %448 = xor i32 %444, %447
  %449 = add i32 %448, %447
  %450 = icmp eq i32 %449, 2
  %451 = zext i1 %450 to i8
  %452 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %451, i8* %452, align 1
  store %struct.Memory* %loadMem_4008a2, %struct.Memory** %MEMORY
  %loadMem_4008a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %454 = getelementptr inbounds %struct.GPR, %struct.GPR* %453, i32 0, i32 33
  %455 = getelementptr inbounds %struct.Reg, %struct.Reg* %454, i32 0, i32 0
  %PC.i1094 = bitcast %union.anon* %455 to i64*
  %456 = load i64, i64* %PC.i1094
  %457 = add i64 %456, 53
  %458 = load i64, i64* %PC.i1094
  %459 = add i64 %458, 6
  %460 = load i64, i64* %PC.i1094
  %461 = add i64 %460, 6
  store i64 %461, i64* %PC.i1094
  %462 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %463 = load i8, i8* %462, align 1
  %464 = icmp eq i8 %463, 0
  %465 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %466 = load i8, i8* %465, align 1
  %467 = icmp ne i8 %466, 0
  %468 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %469 = load i8, i8* %468, align 1
  %470 = icmp ne i8 %469, 0
  %471 = xor i1 %467, %470
  %472 = xor i1 %471, true
  %473 = and i1 %464, %472
  %474 = zext i1 %473 to i8
  store i8 %474, i8* %BRANCH_TAKEN, align 1
  %475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %476 = select i1 %473, i64 %457, i64 %459
  store i64 %476, i64* %475, align 8
  store %struct.Memory* %loadMem_4008a6, %struct.Memory** %MEMORY
  %loadBr_4008a6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4008a6 = icmp eq i8 %loadBr_4008a6, 1
  br i1 %cmpBr_4008a6, label %block_.L_4008db, label %block_4008ac

block_4008ac:                                     ; preds = %block_.L_4008a2
  %loadMem_4008ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %478 = getelementptr inbounds %struct.GPR, %struct.GPR* %477, i32 0, i32 33
  %479 = getelementptr inbounds %struct.Reg, %struct.Reg* %478, i32 0, i32 0
  %PC.i1091 = bitcast %union.anon* %479 to i64*
  %480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %481 = getelementptr inbounds %struct.GPR, %struct.GPR* %480, i32 0, i32 1
  %482 = getelementptr inbounds %struct.Reg, %struct.Reg* %481, i32 0, i32 0
  %RAX.i1092 = bitcast %union.anon* %482 to i64*
  %483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %484 = getelementptr inbounds %struct.GPR, %struct.GPR* %483, i32 0, i32 15
  %485 = getelementptr inbounds %struct.Reg, %struct.Reg* %484, i32 0, i32 0
  %RBP.i1093 = bitcast %union.anon* %485 to i64*
  %486 = load i64, i64* %RBP.i1093
  %487 = sub i64 %486, 4
  %488 = load i64, i64* %PC.i1091
  %489 = add i64 %488, 3
  store i64 %489, i64* %PC.i1091
  %490 = inttoptr i64 %487 to i32*
  %491 = load i32, i32* %490
  %492 = zext i32 %491 to i64
  store i64 %492, i64* %RAX.i1092, align 8
  store %struct.Memory* %loadMem_4008ac, %struct.Memory** %MEMORY
  %loadMem_4008af = load %struct.Memory*, %struct.Memory** %MEMORY
  %493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %494 = getelementptr inbounds %struct.GPR, %struct.GPR* %493, i32 0, i32 33
  %495 = getelementptr inbounds %struct.Reg, %struct.Reg* %494, i32 0, i32 0
  %PC.i1088 = bitcast %union.anon* %495 to i64*
  %496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %497 = getelementptr inbounds %struct.GPR, %struct.GPR* %496, i32 0, i32 5
  %498 = getelementptr inbounds %struct.Reg, %struct.Reg* %497, i32 0, i32 0
  %RCX.i1089 = bitcast %union.anon* %498 to i64*
  %499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %500 = getelementptr inbounds %struct.GPR, %struct.GPR* %499, i32 0, i32 15
  %501 = getelementptr inbounds %struct.Reg, %struct.Reg* %500, i32 0, i32 0
  %RBP.i1090 = bitcast %union.anon* %501 to i64*
  %502 = load i64, i64* %RBP.i1090
  %503 = sub i64 %502, 8
  %504 = load i64, i64* %PC.i1088
  %505 = add i64 %504, 3
  store i64 %505, i64* %PC.i1088
  %506 = inttoptr i64 %503 to i32*
  %507 = load i32, i32* %506
  %508 = zext i32 %507 to i64
  store i64 %508, i64* %RCX.i1089, align 8
  store %struct.Memory* %loadMem_4008af, %struct.Memory** %MEMORY
  %loadMem_4008b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %509 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %510 = getelementptr inbounds %struct.GPR, %struct.GPR* %509, i32 0, i32 33
  %511 = getelementptr inbounds %struct.Reg, %struct.Reg* %510, i32 0, i32 0
  %PC.i1085 = bitcast %union.anon* %511 to i64*
  %512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %513 = getelementptr inbounds %struct.GPR, %struct.GPR* %512, i32 0, i32 7
  %514 = getelementptr inbounds %struct.Reg, %struct.Reg* %513, i32 0, i32 0
  %RDX.i1086 = bitcast %union.anon* %514 to i64*
  %515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %516 = getelementptr inbounds %struct.GPR, %struct.GPR* %515, i32 0, i32 15
  %517 = getelementptr inbounds %struct.Reg, %struct.Reg* %516, i32 0, i32 0
  %RBP.i1087 = bitcast %union.anon* %517 to i64*
  %518 = load i64, i64* %RBP.i1087
  %519 = sub i64 %518, 12
  %520 = load i64, i64* %PC.i1085
  %521 = add i64 %520, 3
  store i64 %521, i64* %PC.i1085
  %522 = inttoptr i64 %519 to i32*
  %523 = load i32, i32* %522
  %524 = zext i32 %523 to i64
  store i64 %524, i64* %RDX.i1086, align 8
  store %struct.Memory* %loadMem_4008b2, %struct.Memory** %MEMORY
  %loadMem_4008b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %526 = getelementptr inbounds %struct.GPR, %struct.GPR* %525, i32 0, i32 33
  %527 = getelementptr inbounds %struct.Reg, %struct.Reg* %526, i32 0, i32 0
  %PC.i1083 = bitcast %union.anon* %527 to i64*
  %528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %529 = getelementptr inbounds %struct.GPR, %struct.GPR* %528, i32 0, i32 7
  %530 = getelementptr inbounds %struct.Reg, %struct.Reg* %529, i32 0, i32 0
  %RDX.i1084 = bitcast %union.anon* %530 to i64*
  %531 = load i64, i64* %RDX.i1084
  %532 = load i64, i64* %PC.i1083
  %533 = add i64 %532, 3
  store i64 %533, i64* %PC.i1083
  %534 = and i64 %531, 4294967295
  %535 = shl i64 %534, 2
  %536 = trunc i64 %535 to i32
  %537 = icmp slt i32 %536, 0
  %538 = shl i32 %536, 1
  %539 = zext i32 %538 to i64
  store i64 %539, i64* %RDX.i1084, align 8
  %540 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %541 = zext i1 %537 to i8
  store i8 %541, i8* %540, align 1
  %542 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %543 = and i32 %538, 254
  %544 = call i32 @llvm.ctpop.i32(i32 %543)
  %545 = trunc i32 %544 to i8
  %546 = and i8 %545, 1
  %547 = xor i8 %546, 1
  store i8 %547, i8* %542, align 1
  %548 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %548, align 1
  %549 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %550 = icmp eq i32 %538, 0
  %551 = zext i1 %550 to i8
  store i8 %551, i8* %549, align 1
  %552 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %553 = lshr i32 %538, 31
  %554 = trunc i32 %553 to i8
  store i8 %554, i8* %552, align 1
  %555 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %555, align 1
  store %struct.Memory* %loadMem_4008b5, %struct.Memory** %MEMORY
  %loadMem_4008b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %557 = getelementptr inbounds %struct.GPR, %struct.GPR* %556, i32 0, i32 33
  %558 = getelementptr inbounds %struct.Reg, %struct.Reg* %557, i32 0, i32 0
  %PC.i1080 = bitcast %union.anon* %558 to i64*
  %559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %560 = getelementptr inbounds %struct.GPR, %struct.GPR* %559, i32 0, i32 7
  %561 = getelementptr inbounds %struct.Reg, %struct.Reg* %560, i32 0, i32 0
  %EDX.i1081 = bitcast %union.anon* %561 to i32*
  %562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %563 = getelementptr inbounds %struct.GPR, %struct.GPR* %562, i32 0, i32 5
  %564 = getelementptr inbounds %struct.Reg, %struct.Reg* %563, i32 0, i32 0
  %RCX.i1082 = bitcast %union.anon* %564 to i64*
  %565 = load i64, i64* %RCX.i1082
  %566 = load i32, i32* %EDX.i1081
  %567 = zext i32 %566 to i64
  %568 = load i64, i64* %PC.i1080
  %569 = add i64 %568, 2
  store i64 %569, i64* %PC.i1080
  %570 = trunc i64 %565 to i32
  %571 = add i32 %566, %570
  %572 = zext i32 %571 to i64
  store i64 %572, i64* %RCX.i1082, align 8
  %573 = icmp ult i32 %571, %570
  %574 = icmp ult i32 %571, %566
  %575 = or i1 %573, %574
  %576 = zext i1 %575 to i8
  %577 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %576, i8* %577, align 1
  %578 = and i32 %571, 255
  %579 = call i32 @llvm.ctpop.i32(i32 %578)
  %580 = trunc i32 %579 to i8
  %581 = and i8 %580, 1
  %582 = xor i8 %581, 1
  %583 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %582, i8* %583, align 1
  %584 = xor i64 %567, %565
  %585 = trunc i64 %584 to i32
  %586 = xor i32 %585, %571
  %587 = lshr i32 %586, 4
  %588 = trunc i32 %587 to i8
  %589 = and i8 %588, 1
  %590 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %589, i8* %590, align 1
  %591 = icmp eq i32 %571, 0
  %592 = zext i1 %591 to i8
  %593 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %592, i8* %593, align 1
  %594 = lshr i32 %571, 31
  %595 = trunc i32 %594 to i8
  %596 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %595, i8* %596, align 1
  %597 = lshr i32 %570, 31
  %598 = lshr i32 %566, 31
  %599 = xor i32 %594, %597
  %600 = xor i32 %594, %598
  %601 = add i32 %599, %600
  %602 = icmp eq i32 %601, 2
  %603 = zext i1 %602 to i8
  %604 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %603, i8* %604, align 1
  store %struct.Memory* %loadMem_4008b8, %struct.Memory** %MEMORY
  %loadMem_4008ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %606 = getelementptr inbounds %struct.GPR, %struct.GPR* %605, i32 0, i32 33
  %607 = getelementptr inbounds %struct.Reg, %struct.Reg* %606, i32 0, i32 0
  %PC.i1078 = bitcast %union.anon* %607 to i64*
  %608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %609 = getelementptr inbounds %struct.GPR, %struct.GPR* %608, i32 0, i32 5
  %610 = getelementptr inbounds %struct.Reg, %struct.Reg* %609, i32 0, i32 0
  %RCX.i1079 = bitcast %union.anon* %610 to i64*
  %611 = load i64, i64* %RCX.i1079
  %612 = load i64, i64* %PC.i1078
  %613 = add i64 %612, 3
  store i64 %613, i64* %PC.i1078
  %614 = and i64 %611, 4294967295
  %615 = shl i64 %614, 2
  %616 = trunc i64 %615 to i32
  %617 = icmp slt i32 %616, 0
  %618 = shl i32 %616, 1
  %619 = zext i32 %618 to i64
  store i64 %619, i64* %RCX.i1079, align 8
  %620 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %621 = zext i1 %617 to i8
  store i8 %621, i8* %620, align 1
  %622 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %623 = and i32 %618, 254
  %624 = call i32 @llvm.ctpop.i32(i32 %623)
  %625 = trunc i32 %624 to i8
  %626 = and i8 %625, 1
  %627 = xor i8 %626, 1
  store i8 %627, i8* %622, align 1
  %628 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %628, align 1
  %629 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %630 = icmp eq i32 %618, 0
  %631 = zext i1 %630 to i8
  store i8 %631, i8* %629, align 1
  %632 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %633 = lshr i32 %618, 31
  %634 = trunc i32 %633 to i8
  store i8 %634, i8* %632, align 1
  %635 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %635, align 1
  store %struct.Memory* %loadMem_4008ba, %struct.Memory** %MEMORY
  %loadMem_4008bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %637 = getelementptr inbounds %struct.GPR, %struct.GPR* %636, i32 0, i32 33
  %638 = getelementptr inbounds %struct.Reg, %struct.Reg* %637, i32 0, i32 0
  %PC.i1075 = bitcast %union.anon* %638 to i64*
  %639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %640 = getelementptr inbounds %struct.GPR, %struct.GPR* %639, i32 0, i32 5
  %641 = getelementptr inbounds %struct.Reg, %struct.Reg* %640, i32 0, i32 0
  %ECX.i1076 = bitcast %union.anon* %641 to i32*
  %642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %643 = getelementptr inbounds %struct.GPR, %struct.GPR* %642, i32 0, i32 1
  %644 = getelementptr inbounds %struct.Reg, %struct.Reg* %643, i32 0, i32 0
  %RAX.i1077 = bitcast %union.anon* %644 to i64*
  %645 = load i64, i64* %RAX.i1077
  %646 = load i32, i32* %ECX.i1076
  %647 = zext i32 %646 to i64
  %648 = load i64, i64* %PC.i1075
  %649 = add i64 %648, 2
  store i64 %649, i64* %PC.i1075
  %650 = trunc i64 %645 to i32
  %651 = add i32 %646, %650
  %652 = zext i32 %651 to i64
  store i64 %652, i64* %RAX.i1077, align 8
  %653 = icmp ult i32 %651, %650
  %654 = icmp ult i32 %651, %646
  %655 = or i1 %653, %654
  %656 = zext i1 %655 to i8
  %657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %656, i8* %657, align 1
  %658 = and i32 %651, 255
  %659 = call i32 @llvm.ctpop.i32(i32 %658)
  %660 = trunc i32 %659 to i8
  %661 = and i8 %660, 1
  %662 = xor i8 %661, 1
  %663 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %662, i8* %663, align 1
  %664 = xor i64 %647, %645
  %665 = trunc i64 %664 to i32
  %666 = xor i32 %665, %651
  %667 = lshr i32 %666, 4
  %668 = trunc i32 %667 to i8
  %669 = and i8 %668, 1
  %670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %669, i8* %670, align 1
  %671 = icmp eq i32 %651, 0
  %672 = zext i1 %671 to i8
  %673 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %672, i8* %673, align 1
  %674 = lshr i32 %651, 31
  %675 = trunc i32 %674 to i8
  %676 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %675, i8* %676, align 1
  %677 = lshr i32 %650, 31
  %678 = lshr i32 %646, 31
  %679 = xor i32 %674, %677
  %680 = xor i32 %674, %678
  %681 = add i32 %679, %680
  %682 = icmp eq i32 %681, 2
  %683 = zext i1 %682 to i8
  %684 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %683, i8* %684, align 1
  store %struct.Memory* %loadMem_4008bd, %struct.Memory** %MEMORY
  %loadMem_4008bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %686 = getelementptr inbounds %struct.GPR, %struct.GPR* %685, i32 0, i32 33
  %687 = getelementptr inbounds %struct.Reg, %struct.Reg* %686, i32 0, i32 0
  %PC.i1072 = bitcast %union.anon* %687 to i64*
  %688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %689 = getelementptr inbounds %struct.GPR, %struct.GPR* %688, i32 0, i32 1
  %690 = getelementptr inbounds %struct.Reg, %struct.Reg* %689, i32 0, i32 0
  %EAX.i1073 = bitcast %union.anon* %690 to i32*
  %691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %692 = getelementptr inbounds %struct.GPR, %struct.GPR* %691, i32 0, i32 9
  %693 = getelementptr inbounds %struct.Reg, %struct.Reg* %692, i32 0, i32 0
  %RSI.i1074 = bitcast %union.anon* %693 to i64*
  %694 = load i32, i32* %EAX.i1073
  %695 = zext i32 %694 to i64
  %696 = load i64, i64* %PC.i1072
  %697 = add i64 %696, 3
  store i64 %697, i64* %PC.i1072
  %698 = shl i64 %695, 32
  %699 = ashr exact i64 %698, 32
  store i64 %699, i64* %RSI.i1074, align 8
  store %struct.Memory* %loadMem_4008bf, %struct.Memory** %MEMORY
  %loadMem_4008c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %701 = getelementptr inbounds %struct.GPR, %struct.GPR* %700, i32 0, i32 33
  %702 = getelementptr inbounds %struct.Reg, %struct.Reg* %701, i32 0, i32 0
  %PC.i1070 = bitcast %union.anon* %702 to i64*
  %703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %704 = getelementptr inbounds %struct.GPR, %struct.GPR* %703, i32 0, i32 9
  %705 = getelementptr inbounds %struct.Reg, %struct.Reg* %704, i32 0, i32 0
  %RSI.i1071 = bitcast %union.anon* %705 to i64*
  %706 = load i64, i64* %RSI.i1071
  %707 = mul i64 %706, 4
  %708 = add i64 %707, ptrtoint (%G_0x60df50___rsi_4__type* @G_0x60df50___rsi_4_ to i64)
  %709 = load i64, i64* %PC.i1070
  %710 = add i64 %709, 11
  store i64 %710, i64* %PC.i1070
  %711 = inttoptr i64 %708 to i32*
  store i32 0, i32* %711
  store %struct.Memory* %loadMem_4008c2, %struct.Memory** %MEMORY
  %loadMem_4008cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %713 = getelementptr inbounds %struct.GPR, %struct.GPR* %712, i32 0, i32 33
  %714 = getelementptr inbounds %struct.Reg, %struct.Reg* %713, i32 0, i32 0
  %PC.i1067 = bitcast %union.anon* %714 to i64*
  %715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %716 = getelementptr inbounds %struct.GPR, %struct.GPR* %715, i32 0, i32 1
  %717 = getelementptr inbounds %struct.Reg, %struct.Reg* %716, i32 0, i32 0
  %RAX.i1068 = bitcast %union.anon* %717 to i64*
  %718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %719 = getelementptr inbounds %struct.GPR, %struct.GPR* %718, i32 0, i32 15
  %720 = getelementptr inbounds %struct.Reg, %struct.Reg* %719, i32 0, i32 0
  %RBP.i1069 = bitcast %union.anon* %720 to i64*
  %721 = load i64, i64* %RBP.i1069
  %722 = sub i64 %721, 12
  %723 = load i64, i64* %PC.i1067
  %724 = add i64 %723, 3
  store i64 %724, i64* %PC.i1067
  %725 = inttoptr i64 %722 to i32*
  %726 = load i32, i32* %725
  %727 = zext i32 %726 to i64
  store i64 %727, i64* %RAX.i1068, align 8
  store %struct.Memory* %loadMem_4008cd, %struct.Memory** %MEMORY
  %loadMem_4008d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %729 = getelementptr inbounds %struct.GPR, %struct.GPR* %728, i32 0, i32 33
  %730 = getelementptr inbounds %struct.Reg, %struct.Reg* %729, i32 0, i32 0
  %PC.i1065 = bitcast %union.anon* %730 to i64*
  %731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %732 = getelementptr inbounds %struct.GPR, %struct.GPR* %731, i32 0, i32 1
  %733 = getelementptr inbounds %struct.Reg, %struct.Reg* %732, i32 0, i32 0
  %RAX.i1066 = bitcast %union.anon* %733 to i64*
  %734 = load i64, i64* %RAX.i1066
  %735 = load i64, i64* %PC.i1065
  %736 = add i64 %735, 3
  store i64 %736, i64* %PC.i1065
  %737 = trunc i64 %734 to i32
  %738 = add i32 1, %737
  %739 = zext i32 %738 to i64
  store i64 %739, i64* %RAX.i1066, align 8
  %740 = icmp ult i32 %738, %737
  %741 = icmp ult i32 %738, 1
  %742 = or i1 %740, %741
  %743 = zext i1 %742 to i8
  %744 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %743, i8* %744, align 1
  %745 = and i32 %738, 255
  %746 = call i32 @llvm.ctpop.i32(i32 %745)
  %747 = trunc i32 %746 to i8
  %748 = and i8 %747, 1
  %749 = xor i8 %748, 1
  %750 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %749, i8* %750, align 1
  %751 = xor i64 1, %734
  %752 = trunc i64 %751 to i32
  %753 = xor i32 %752, %738
  %754 = lshr i32 %753, 4
  %755 = trunc i32 %754 to i8
  %756 = and i8 %755, 1
  %757 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %756, i8* %757, align 1
  %758 = icmp eq i32 %738, 0
  %759 = zext i1 %758 to i8
  %760 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %759, i8* %760, align 1
  %761 = lshr i32 %738, 31
  %762 = trunc i32 %761 to i8
  %763 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %762, i8* %763, align 1
  %764 = lshr i32 %737, 31
  %765 = xor i32 %761, %764
  %766 = add i32 %765, %761
  %767 = icmp eq i32 %766, 2
  %768 = zext i1 %767 to i8
  %769 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %768, i8* %769, align 1
  store %struct.Memory* %loadMem_4008d0, %struct.Memory** %MEMORY
  %loadMem_4008d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %771 = getelementptr inbounds %struct.GPR, %struct.GPR* %770, i32 0, i32 33
  %772 = getelementptr inbounds %struct.Reg, %struct.Reg* %771, i32 0, i32 0
  %PC.i1062 = bitcast %union.anon* %772 to i64*
  %773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %774 = getelementptr inbounds %struct.GPR, %struct.GPR* %773, i32 0, i32 1
  %775 = getelementptr inbounds %struct.Reg, %struct.Reg* %774, i32 0, i32 0
  %EAX.i1063 = bitcast %union.anon* %775 to i32*
  %776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %777 = getelementptr inbounds %struct.GPR, %struct.GPR* %776, i32 0, i32 15
  %778 = getelementptr inbounds %struct.Reg, %struct.Reg* %777, i32 0, i32 0
  %RBP.i1064 = bitcast %union.anon* %778 to i64*
  %779 = load i64, i64* %RBP.i1064
  %780 = sub i64 %779, 12
  %781 = load i32, i32* %EAX.i1063
  %782 = zext i32 %781 to i64
  %783 = load i64, i64* %PC.i1062
  %784 = add i64 %783, 3
  store i64 %784, i64* %PC.i1062
  %785 = inttoptr i64 %780 to i32*
  store i32 %781, i32* %785
  store %struct.Memory* %loadMem_4008d3, %struct.Memory** %MEMORY
  %loadMem_4008d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %787 = getelementptr inbounds %struct.GPR, %struct.GPR* %786, i32 0, i32 33
  %788 = getelementptr inbounds %struct.Reg, %struct.Reg* %787, i32 0, i32 0
  %PC.i1061 = bitcast %union.anon* %788 to i64*
  %789 = load i64, i64* %PC.i1061
  %790 = add i64 %789, -52
  %791 = load i64, i64* %PC.i1061
  %792 = add i64 %791, 5
  store i64 %792, i64* %PC.i1061
  %793 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %790, i64* %793, align 8
  store %struct.Memory* %loadMem_4008d6, %struct.Memory** %MEMORY
  br label %block_.L_4008a2

block_.L_4008db:                                  ; preds = %block_.L_4008a2
  %loadMem_4008db = load %struct.Memory*, %struct.Memory** %MEMORY
  %794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %795 = getelementptr inbounds %struct.GPR, %struct.GPR* %794, i32 0, i32 33
  %796 = getelementptr inbounds %struct.Reg, %struct.Reg* %795, i32 0, i32 0
  %PC.i1060 = bitcast %union.anon* %796 to i64*
  %797 = load i64, i64* %PC.i1060
  %798 = add i64 %797, 5
  %799 = load i64, i64* %PC.i1060
  %800 = add i64 %799, 5
  store i64 %800, i64* %PC.i1060
  %801 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %798, i64* %801, align 8
  store %struct.Memory* %loadMem_4008db, %struct.Memory** %MEMORY
  br label %block_.L_4008e0

block_.L_4008e0:                                  ; preds = %block_.L_4008db
  %loadMem_4008e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %803 = getelementptr inbounds %struct.GPR, %struct.GPR* %802, i32 0, i32 33
  %804 = getelementptr inbounds %struct.Reg, %struct.Reg* %803, i32 0, i32 0
  %PC.i1057 = bitcast %union.anon* %804 to i64*
  %805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %806 = getelementptr inbounds %struct.GPR, %struct.GPR* %805, i32 0, i32 1
  %807 = getelementptr inbounds %struct.Reg, %struct.Reg* %806, i32 0, i32 0
  %RAX.i1058 = bitcast %union.anon* %807 to i64*
  %808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %809 = getelementptr inbounds %struct.GPR, %struct.GPR* %808, i32 0, i32 15
  %810 = getelementptr inbounds %struct.Reg, %struct.Reg* %809, i32 0, i32 0
  %RBP.i1059 = bitcast %union.anon* %810 to i64*
  %811 = load i64, i64* %RBP.i1059
  %812 = sub i64 %811, 8
  %813 = load i64, i64* %PC.i1057
  %814 = add i64 %813, 3
  store i64 %814, i64* %PC.i1057
  %815 = inttoptr i64 %812 to i32*
  %816 = load i32, i32* %815
  %817 = zext i32 %816 to i64
  store i64 %817, i64* %RAX.i1058, align 8
  store %struct.Memory* %loadMem_4008e0, %struct.Memory** %MEMORY
  %loadMem_4008e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %819 = getelementptr inbounds %struct.GPR, %struct.GPR* %818, i32 0, i32 33
  %820 = getelementptr inbounds %struct.Reg, %struct.Reg* %819, i32 0, i32 0
  %PC.i1055 = bitcast %union.anon* %820 to i64*
  %821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %822 = getelementptr inbounds %struct.GPR, %struct.GPR* %821, i32 0, i32 1
  %823 = getelementptr inbounds %struct.Reg, %struct.Reg* %822, i32 0, i32 0
  %RAX.i1056 = bitcast %union.anon* %823 to i64*
  %824 = load i64, i64* %RAX.i1056
  %825 = load i64, i64* %PC.i1055
  %826 = add i64 %825, 3
  store i64 %826, i64* %PC.i1055
  %827 = trunc i64 %824 to i32
  %828 = add i32 1, %827
  %829 = zext i32 %828 to i64
  store i64 %829, i64* %RAX.i1056, align 8
  %830 = icmp ult i32 %828, %827
  %831 = icmp ult i32 %828, 1
  %832 = or i1 %830, %831
  %833 = zext i1 %832 to i8
  %834 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %833, i8* %834, align 1
  %835 = and i32 %828, 255
  %836 = call i32 @llvm.ctpop.i32(i32 %835)
  %837 = trunc i32 %836 to i8
  %838 = and i8 %837, 1
  %839 = xor i8 %838, 1
  %840 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %839, i8* %840, align 1
  %841 = xor i64 1, %824
  %842 = trunc i64 %841 to i32
  %843 = xor i32 %842, %828
  %844 = lshr i32 %843, 4
  %845 = trunc i32 %844 to i8
  %846 = and i8 %845, 1
  %847 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %846, i8* %847, align 1
  %848 = icmp eq i32 %828, 0
  %849 = zext i1 %848 to i8
  %850 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %849, i8* %850, align 1
  %851 = lshr i32 %828, 31
  %852 = trunc i32 %851 to i8
  %853 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %852, i8* %853, align 1
  %854 = lshr i32 %827, 31
  %855 = xor i32 %851, %854
  %856 = add i32 %855, %851
  %857 = icmp eq i32 %856, 2
  %858 = zext i1 %857 to i8
  %859 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %858, i8* %859, align 1
  store %struct.Memory* %loadMem_4008e3, %struct.Memory** %MEMORY
  %loadMem_4008e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %861 = getelementptr inbounds %struct.GPR, %struct.GPR* %860, i32 0, i32 33
  %862 = getelementptr inbounds %struct.Reg, %struct.Reg* %861, i32 0, i32 0
  %PC.i1052 = bitcast %union.anon* %862 to i64*
  %863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %864 = getelementptr inbounds %struct.GPR, %struct.GPR* %863, i32 0, i32 1
  %865 = getelementptr inbounds %struct.Reg, %struct.Reg* %864, i32 0, i32 0
  %EAX.i1053 = bitcast %union.anon* %865 to i32*
  %866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %867 = getelementptr inbounds %struct.GPR, %struct.GPR* %866, i32 0, i32 15
  %868 = getelementptr inbounds %struct.Reg, %struct.Reg* %867, i32 0, i32 0
  %RBP.i1054 = bitcast %union.anon* %868 to i64*
  %869 = load i64, i64* %RBP.i1054
  %870 = sub i64 %869, 8
  %871 = load i32, i32* %EAX.i1053
  %872 = zext i32 %871 to i64
  %873 = load i64, i64* %PC.i1052
  %874 = add i64 %873, 3
  store i64 %874, i64* %PC.i1052
  %875 = inttoptr i64 %870 to i32*
  store i32 %871, i32* %875
  store %struct.Memory* %loadMem_4008e6, %struct.Memory** %MEMORY
  %loadMem_4008e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %877 = getelementptr inbounds %struct.GPR, %struct.GPR* %876, i32 0, i32 33
  %878 = getelementptr inbounds %struct.Reg, %struct.Reg* %877, i32 0, i32 0
  %PC.i1051 = bitcast %union.anon* %878 to i64*
  %879 = load i64, i64* %PC.i1051
  %880 = add i64 %879, -88
  %881 = load i64, i64* %PC.i1051
  %882 = add i64 %881, 5
  store i64 %882, i64* %PC.i1051
  %883 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %880, i64* %883, align 8
  store %struct.Memory* %loadMem_4008e9, %struct.Memory** %MEMORY
  br label %block_.L_400891

block_.L_4008ee:                                  ; preds = %block_.L_400891
  %loadMem_4008ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %885 = getelementptr inbounds %struct.GPR, %struct.GPR* %884, i32 0, i32 33
  %886 = getelementptr inbounds %struct.Reg, %struct.Reg* %885, i32 0, i32 0
  %PC.i1050 = bitcast %union.anon* %886 to i64*
  %887 = load i64, i64* %PC.i1050
  %888 = add i64 %887, 5
  %889 = load i64, i64* %PC.i1050
  %890 = add i64 %889, 5
  store i64 %890, i64* %PC.i1050
  %891 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %888, i64* %891, align 8
  store %struct.Memory* %loadMem_4008ee, %struct.Memory** %MEMORY
  br label %block_.L_4008f3

block_.L_4008f3:                                  ; preds = %block_.L_4008ee
  %loadMem_4008f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %893 = getelementptr inbounds %struct.GPR, %struct.GPR* %892, i32 0, i32 33
  %894 = getelementptr inbounds %struct.Reg, %struct.Reg* %893, i32 0, i32 0
  %PC.i1047 = bitcast %union.anon* %894 to i64*
  %895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %896 = getelementptr inbounds %struct.GPR, %struct.GPR* %895, i32 0, i32 1
  %897 = getelementptr inbounds %struct.Reg, %struct.Reg* %896, i32 0, i32 0
  %RAX.i1048 = bitcast %union.anon* %897 to i64*
  %898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %899 = getelementptr inbounds %struct.GPR, %struct.GPR* %898, i32 0, i32 15
  %900 = getelementptr inbounds %struct.Reg, %struct.Reg* %899, i32 0, i32 0
  %RBP.i1049 = bitcast %union.anon* %900 to i64*
  %901 = load i64, i64* %RBP.i1049
  %902 = sub i64 %901, 4
  %903 = load i64, i64* %PC.i1047
  %904 = add i64 %903, 3
  store i64 %904, i64* %PC.i1047
  %905 = inttoptr i64 %902 to i32*
  %906 = load i32, i32* %905
  %907 = zext i32 %906 to i64
  store i64 %907, i64* %RAX.i1048, align 8
  store %struct.Memory* %loadMem_4008f3, %struct.Memory** %MEMORY
  %loadMem_4008f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %909 = getelementptr inbounds %struct.GPR, %struct.GPR* %908, i32 0, i32 33
  %910 = getelementptr inbounds %struct.Reg, %struct.Reg* %909, i32 0, i32 0
  %PC.i1045 = bitcast %union.anon* %910 to i64*
  %911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %912 = getelementptr inbounds %struct.GPR, %struct.GPR* %911, i32 0, i32 1
  %913 = getelementptr inbounds %struct.Reg, %struct.Reg* %912, i32 0, i32 0
  %RAX.i1046 = bitcast %union.anon* %913 to i64*
  %914 = load i64, i64* %RAX.i1046
  %915 = load i64, i64* %PC.i1045
  %916 = add i64 %915, 3
  store i64 %916, i64* %PC.i1045
  %917 = trunc i64 %914 to i32
  %918 = add i32 1, %917
  %919 = zext i32 %918 to i64
  store i64 %919, i64* %RAX.i1046, align 8
  %920 = icmp ult i32 %918, %917
  %921 = icmp ult i32 %918, 1
  %922 = or i1 %920, %921
  %923 = zext i1 %922 to i8
  %924 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %923, i8* %924, align 1
  %925 = and i32 %918, 255
  %926 = call i32 @llvm.ctpop.i32(i32 %925)
  %927 = trunc i32 %926 to i8
  %928 = and i8 %927, 1
  %929 = xor i8 %928, 1
  %930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %929, i8* %930, align 1
  %931 = xor i64 1, %914
  %932 = trunc i64 %931 to i32
  %933 = xor i32 %932, %918
  %934 = lshr i32 %933, 4
  %935 = trunc i32 %934 to i8
  %936 = and i8 %935, 1
  %937 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %936, i8* %937, align 1
  %938 = icmp eq i32 %918, 0
  %939 = zext i1 %938 to i8
  %940 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %939, i8* %940, align 1
  %941 = lshr i32 %918, 31
  %942 = trunc i32 %941 to i8
  %943 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %942, i8* %943, align 1
  %944 = lshr i32 %917, 31
  %945 = xor i32 %941, %944
  %946 = add i32 %945, %941
  %947 = icmp eq i32 %946, 2
  %948 = zext i1 %947 to i8
  %949 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %948, i8* %949, align 1
  store %struct.Memory* %loadMem_4008f6, %struct.Memory** %MEMORY
  %loadMem_4008f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %951 = getelementptr inbounds %struct.GPR, %struct.GPR* %950, i32 0, i32 33
  %952 = getelementptr inbounds %struct.Reg, %struct.Reg* %951, i32 0, i32 0
  %PC.i1042 = bitcast %union.anon* %952 to i64*
  %953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %954 = getelementptr inbounds %struct.GPR, %struct.GPR* %953, i32 0, i32 1
  %955 = getelementptr inbounds %struct.Reg, %struct.Reg* %954, i32 0, i32 0
  %EAX.i1043 = bitcast %union.anon* %955 to i32*
  %956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %957 = getelementptr inbounds %struct.GPR, %struct.GPR* %956, i32 0, i32 15
  %958 = getelementptr inbounds %struct.Reg, %struct.Reg* %957, i32 0, i32 0
  %RBP.i1044 = bitcast %union.anon* %958 to i64*
  %959 = load i64, i64* %RBP.i1044
  %960 = sub i64 %959, 4
  %961 = load i32, i32* %EAX.i1043
  %962 = zext i32 %961 to i64
  %963 = load i64, i64* %PC.i1042
  %964 = add i64 %963, 3
  store i64 %964, i64* %PC.i1042
  %965 = inttoptr i64 %960 to i32*
  store i32 %961, i32* %965
  store %struct.Memory* %loadMem_4008f9, %struct.Memory** %MEMORY
  %loadMem_4008fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %967 = getelementptr inbounds %struct.GPR, %struct.GPR* %966, i32 0, i32 33
  %968 = getelementptr inbounds %struct.Reg, %struct.Reg* %967, i32 0, i32 0
  %PC.i1041 = bitcast %union.anon* %968 to i64*
  %969 = load i64, i64* %PC.i1041
  %970 = add i64 %969, -124
  %971 = load i64, i64* %PC.i1041
  %972 = add i64 %971, 5
  store i64 %972, i64* %PC.i1041
  %973 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %970, i64* %973, align 8
  store %struct.Memory* %loadMem_4008fc, %struct.Memory** %MEMORY
  br label %block_.L_400880

block_.L_400901:                                  ; preds = %block_.L_400880
  %loadMem_400901 = load %struct.Memory*, %struct.Memory** %MEMORY
  %974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %975 = getelementptr inbounds %struct.GPR, %struct.GPR* %974, i32 0, i32 33
  %976 = getelementptr inbounds %struct.Reg, %struct.Reg* %975, i32 0, i32 0
  %PC.i1039 = bitcast %union.anon* %976 to i64*
  %977 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %978 = getelementptr inbounds %struct.GPR, %struct.GPR* %977, i32 0, i32 15
  %979 = getelementptr inbounds %struct.Reg, %struct.Reg* %978, i32 0, i32 0
  %RBP.i1040 = bitcast %union.anon* %979 to i64*
  %980 = load i64, i64* %RBP.i1040
  %981 = sub i64 %980, 4
  %982 = load i64, i64* %PC.i1039
  %983 = add i64 %982, 7
  store i64 %983, i64* %PC.i1039
  %984 = inttoptr i64 %981 to i32*
  store i32 0, i32* %984
  store %struct.Memory* %loadMem_400901, %struct.Memory** %MEMORY
  br label %block_.L_400908

block_.L_400908:                                  ; preds = %block_.L_400959, %block_.L_400901
  %loadMem_400908 = load %struct.Memory*, %struct.Memory** %MEMORY
  %985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %986 = getelementptr inbounds %struct.GPR, %struct.GPR* %985, i32 0, i32 33
  %987 = getelementptr inbounds %struct.Reg, %struct.Reg* %986, i32 0, i32 0
  %PC.i1037 = bitcast %union.anon* %987 to i64*
  %988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %989 = getelementptr inbounds %struct.GPR, %struct.GPR* %988, i32 0, i32 15
  %990 = getelementptr inbounds %struct.Reg, %struct.Reg* %989, i32 0, i32 0
  %RBP.i1038 = bitcast %union.anon* %990 to i64*
  %991 = load i64, i64* %RBP.i1038
  %992 = sub i64 %991, 4
  %993 = load i64, i64* %PC.i1037
  %994 = add i64 %993, 4
  store i64 %994, i64* %PC.i1037
  %995 = inttoptr i64 %992 to i32*
  %996 = load i32, i32* %995
  %997 = sub i32 %996, 12
  %998 = icmp ult i32 %996, 12
  %999 = zext i1 %998 to i8
  %1000 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %999, i8* %1000, align 1
  %1001 = and i32 %997, 255
  %1002 = call i32 @llvm.ctpop.i32(i32 %1001)
  %1003 = trunc i32 %1002 to i8
  %1004 = and i8 %1003, 1
  %1005 = xor i8 %1004, 1
  %1006 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1005, i8* %1006, align 1
  %1007 = xor i32 %996, 12
  %1008 = xor i32 %1007, %997
  %1009 = lshr i32 %1008, 4
  %1010 = trunc i32 %1009 to i8
  %1011 = and i8 %1010, 1
  %1012 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1011, i8* %1012, align 1
  %1013 = icmp eq i32 %997, 0
  %1014 = zext i1 %1013 to i8
  %1015 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1014, i8* %1015, align 1
  %1016 = lshr i32 %997, 31
  %1017 = trunc i32 %1016 to i8
  %1018 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1017, i8* %1018, align 1
  %1019 = lshr i32 %996, 31
  %1020 = xor i32 %1016, %1019
  %1021 = add i32 %1020, %1019
  %1022 = icmp eq i32 %1021, 2
  %1023 = zext i1 %1022 to i8
  %1024 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1023, i8* %1024, align 1
  store %struct.Memory* %loadMem_400908, %struct.Memory** %MEMORY
  %loadMem_40090c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1026 = getelementptr inbounds %struct.GPR, %struct.GPR* %1025, i32 0, i32 33
  %1027 = getelementptr inbounds %struct.Reg, %struct.Reg* %1026, i32 0, i32 0
  %PC.i1036 = bitcast %union.anon* %1027 to i64*
  %1028 = load i64, i64* %PC.i1036
  %1029 = add i64 %1028, 91
  %1030 = load i64, i64* %PC.i1036
  %1031 = add i64 %1030, 6
  %1032 = load i64, i64* %PC.i1036
  %1033 = add i64 %1032, 6
  store i64 %1033, i64* %PC.i1036
  %1034 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1035 = load i8, i8* %1034, align 1
  %1036 = icmp eq i8 %1035, 0
  %1037 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1038 = load i8, i8* %1037, align 1
  %1039 = icmp ne i8 %1038, 0
  %1040 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1041 = load i8, i8* %1040, align 1
  %1042 = icmp ne i8 %1041, 0
  %1043 = xor i1 %1039, %1042
  %1044 = xor i1 %1043, true
  %1045 = and i1 %1036, %1044
  %1046 = zext i1 %1045 to i8
  store i8 %1046, i8* %BRANCH_TAKEN, align 1
  %1047 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1048 = select i1 %1045, i64 %1029, i64 %1031
  store i64 %1048, i64* %1047, align 8
  store %struct.Memory* %loadMem_40090c, %struct.Memory** %MEMORY
  %loadBr_40090c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40090c = icmp eq i8 %loadBr_40090c, 1
  br i1 %cmpBr_40090c, label %block_.L_400967, label %block_400912

block_400912:                                     ; preds = %block_.L_400908
  %loadMem_400912 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1050 = getelementptr inbounds %struct.GPR, %struct.GPR* %1049, i32 0, i32 33
  %1051 = getelementptr inbounds %struct.Reg, %struct.Reg* %1050, i32 0, i32 0
  %PC.i1034 = bitcast %union.anon* %1051 to i64*
  %1052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1053 = getelementptr inbounds %struct.GPR, %struct.GPR* %1052, i32 0, i32 15
  %1054 = getelementptr inbounds %struct.Reg, %struct.Reg* %1053, i32 0, i32 0
  %RBP.i1035 = bitcast %union.anon* %1054 to i64*
  %1055 = load i64, i64* %RBP.i1035
  %1056 = sub i64 %1055, 16
  %1057 = load i64, i64* %PC.i1034
  %1058 = add i64 %1057, 7
  store i64 %1058, i64* %PC.i1034
  %1059 = inttoptr i64 %1056 to i32*
  store i32 0, i32* %1059
  store %struct.Memory* %loadMem_400912, %struct.Memory** %MEMORY
  br label %block_.L_400919

block_.L_400919:                                  ; preds = %block_400926, %block_400912
  %loadMem_400919 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1061 = getelementptr inbounds %struct.GPR, %struct.GPR* %1060, i32 0, i32 33
  %1062 = getelementptr inbounds %struct.Reg, %struct.Reg* %1061, i32 0, i32 0
  %PC.i1032 = bitcast %union.anon* %1062 to i64*
  %1063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1064 = getelementptr inbounds %struct.GPR, %struct.GPR* %1063, i32 0, i32 15
  %1065 = getelementptr inbounds %struct.Reg, %struct.Reg* %1064, i32 0, i32 0
  %RBP.i1033 = bitcast %union.anon* %1065 to i64*
  %1066 = load i64, i64* %RBP.i1033
  %1067 = sub i64 %1066, 16
  %1068 = load i64, i64* %PC.i1032
  %1069 = add i64 %1068, 7
  store i64 %1069, i64* %PC.i1032
  %1070 = inttoptr i64 %1067 to i32*
  %1071 = load i32, i32* %1070
  %1072 = sub i32 %1071, 511
  %1073 = icmp ult i32 %1071, 511
  %1074 = zext i1 %1073 to i8
  %1075 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1074, i8* %1075, align 1
  %1076 = and i32 %1072, 255
  %1077 = call i32 @llvm.ctpop.i32(i32 %1076)
  %1078 = trunc i32 %1077 to i8
  %1079 = and i8 %1078, 1
  %1080 = xor i8 %1079, 1
  %1081 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1080, i8* %1081, align 1
  %1082 = xor i32 %1071, 511
  %1083 = xor i32 %1082, %1072
  %1084 = lshr i32 %1083, 4
  %1085 = trunc i32 %1084 to i8
  %1086 = and i8 %1085, 1
  %1087 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1086, i8* %1087, align 1
  %1088 = icmp eq i32 %1072, 0
  %1089 = zext i1 %1088 to i8
  %1090 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1089, i8* %1090, align 1
  %1091 = lshr i32 %1072, 31
  %1092 = trunc i32 %1091 to i8
  %1093 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1092, i8* %1093, align 1
  %1094 = lshr i32 %1071, 31
  %1095 = xor i32 %1091, %1094
  %1096 = add i32 %1095, %1094
  %1097 = icmp eq i32 %1096, 2
  %1098 = zext i1 %1097 to i8
  %1099 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1098, i8* %1099, align 1
  store %struct.Memory* %loadMem_400919, %struct.Memory** %MEMORY
  %loadMem_400920 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1101 = getelementptr inbounds %struct.GPR, %struct.GPR* %1100, i32 0, i32 33
  %1102 = getelementptr inbounds %struct.Reg, %struct.Reg* %1101, i32 0, i32 0
  %PC.i1031 = bitcast %union.anon* %1102 to i64*
  %1103 = load i64, i64* %PC.i1031
  %1104 = add i64 %1103, 52
  %1105 = load i64, i64* %PC.i1031
  %1106 = add i64 %1105, 6
  %1107 = load i64, i64* %PC.i1031
  %1108 = add i64 %1107, 6
  store i64 %1108, i64* %PC.i1031
  %1109 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1110 = load i8, i8* %1109, align 1
  %1111 = icmp eq i8 %1110, 0
  %1112 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1113 = load i8, i8* %1112, align 1
  %1114 = icmp ne i8 %1113, 0
  %1115 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1116 = load i8, i8* %1115, align 1
  %1117 = icmp ne i8 %1116, 0
  %1118 = xor i1 %1114, %1117
  %1119 = xor i1 %1118, true
  %1120 = and i1 %1111, %1119
  %1121 = zext i1 %1120 to i8
  store i8 %1121, i8* %BRANCH_TAKEN, align 1
  %1122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1123 = select i1 %1120, i64 %1104, i64 %1106
  store i64 %1123, i64* %1122, align 8
  store %struct.Memory* %loadMem_400920, %struct.Memory** %MEMORY
  %loadBr_400920 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400920 = icmp eq i8 %loadBr_400920, 1
  br i1 %cmpBr_400920, label %block_.L_400954, label %block_400926

block_400926:                                     ; preds = %block_.L_400919
  %loadMem_400926 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1125 = getelementptr inbounds %struct.GPR, %struct.GPR* %1124, i32 0, i32 33
  %1126 = getelementptr inbounds %struct.Reg, %struct.Reg* %1125, i32 0, i32 0
  %PC.i1029 = bitcast %union.anon* %1126 to i64*
  %1127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1128 = getelementptr inbounds %struct.GPR, %struct.GPR* %1127, i32 0, i32 1
  %1129 = getelementptr inbounds %struct.Reg, %struct.Reg* %1128, i32 0, i32 0
  %RAX.i1030 = bitcast %union.anon* %1129 to i64*
  %1130 = load i64, i64* %PC.i1029
  %1131 = add i64 %1130, 10
  store i64 %1131, i64* %PC.i1029
  store i64 ptrtoint (%G__0x603aa0_type* @G__0x603aa0 to i64), i64* %RAX.i1030, align 8
  store %struct.Memory* %loadMem_400926, %struct.Memory** %MEMORY
  %loadMem_400930 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1133 = getelementptr inbounds %struct.GPR, %struct.GPR* %1132, i32 0, i32 33
  %1134 = getelementptr inbounds %struct.Reg, %struct.Reg* %1133, i32 0, i32 0
  %PC.i1026 = bitcast %union.anon* %1134 to i64*
  %1135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1136 = getelementptr inbounds %struct.GPR, %struct.GPR* %1135, i32 0, i32 5
  %1137 = getelementptr inbounds %struct.Reg, %struct.Reg* %1136, i32 0, i32 0
  %RCX.i1027 = bitcast %union.anon* %1137 to i64*
  %1138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1139 = getelementptr inbounds %struct.GPR, %struct.GPR* %1138, i32 0, i32 15
  %1140 = getelementptr inbounds %struct.Reg, %struct.Reg* %1139, i32 0, i32 0
  %RBP.i1028 = bitcast %union.anon* %1140 to i64*
  %1141 = load i64, i64* %RBP.i1028
  %1142 = sub i64 %1141, 4
  %1143 = load i64, i64* %PC.i1026
  %1144 = add i64 %1143, 4
  store i64 %1144, i64* %PC.i1026
  %1145 = inttoptr i64 %1142 to i32*
  %1146 = load i32, i32* %1145
  %1147 = sext i32 %1146 to i64
  store i64 %1147, i64* %RCX.i1027, align 8
  store %struct.Memory* %loadMem_400930, %struct.Memory** %MEMORY
  %loadMem_400934 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1149 = getelementptr inbounds %struct.GPR, %struct.GPR* %1148, i32 0, i32 33
  %1150 = getelementptr inbounds %struct.Reg, %struct.Reg* %1149, i32 0, i32 0
  %PC.i1024 = bitcast %union.anon* %1150 to i64*
  %1151 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1152 = getelementptr inbounds %struct.GPR, %struct.GPR* %1151, i32 0, i32 5
  %1153 = getelementptr inbounds %struct.Reg, %struct.Reg* %1152, i32 0, i32 0
  %RCX.i1025 = bitcast %union.anon* %1153 to i64*
  %1154 = load i64, i64* %RCX.i1025
  %1155 = load i64, i64* %PC.i1024
  %1156 = add i64 %1155, 4
  store i64 %1156, i64* %PC.i1024
  %1157 = shl i64 %1154, 10
  %1158 = icmp slt i64 %1157, 0
  %1159 = shl i64 %1157, 1
  store i64 %1159, i64* %RCX.i1025, align 8
  %1160 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %1161 = zext i1 %1158 to i8
  store i8 %1161, i8* %1160, align 1
  %1162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %1163 = trunc i64 %1159 to i32
  store i8 1, i8* %1162, align 1
  %1164 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1164, align 1
  %1165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1166 = icmp eq i64 %1159, 0
  %1167 = zext i1 %1166 to i8
  store i8 %1167, i8* %1165, align 1
  %1168 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1169 = lshr i64 %1159, 63
  %1170 = trunc i64 %1169 to i8
  store i8 %1170, i8* %1168, align 1
  %1171 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1171, align 1
  store %struct.Memory* %loadMem_400934, %struct.Memory** %MEMORY
  %loadMem_400938 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1173 = getelementptr inbounds %struct.GPR, %struct.GPR* %1172, i32 0, i32 33
  %1174 = getelementptr inbounds %struct.Reg, %struct.Reg* %1173, i32 0, i32 0
  %PC.i1021 = bitcast %union.anon* %1174 to i64*
  %1175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1176 = getelementptr inbounds %struct.GPR, %struct.GPR* %1175, i32 0, i32 1
  %1177 = getelementptr inbounds %struct.Reg, %struct.Reg* %1176, i32 0, i32 0
  %RAX.i1022 = bitcast %union.anon* %1177 to i64*
  %1178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1179 = getelementptr inbounds %struct.GPR, %struct.GPR* %1178, i32 0, i32 5
  %1180 = getelementptr inbounds %struct.Reg, %struct.Reg* %1179, i32 0, i32 0
  %RCX.i1023 = bitcast %union.anon* %1180 to i64*
  %1181 = load i64, i64* %RAX.i1022
  %1182 = load i64, i64* %RCX.i1023
  %1183 = load i64, i64* %PC.i1021
  %1184 = add i64 %1183, 3
  store i64 %1184, i64* %PC.i1021
  %1185 = add i64 %1182, %1181
  store i64 %1185, i64* %RAX.i1022, align 8
  %1186 = icmp ult i64 %1185, %1181
  %1187 = icmp ult i64 %1185, %1182
  %1188 = or i1 %1186, %1187
  %1189 = zext i1 %1188 to i8
  %1190 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1189, i8* %1190, align 1
  %1191 = trunc i64 %1185 to i32
  %1192 = and i32 %1191, 255
  %1193 = call i32 @llvm.ctpop.i32(i32 %1192)
  %1194 = trunc i32 %1193 to i8
  %1195 = and i8 %1194, 1
  %1196 = xor i8 %1195, 1
  %1197 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1196, i8* %1197, align 1
  %1198 = xor i64 %1182, %1181
  %1199 = xor i64 %1198, %1185
  %1200 = lshr i64 %1199, 4
  %1201 = trunc i64 %1200 to i8
  %1202 = and i8 %1201, 1
  %1203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1202, i8* %1203, align 1
  %1204 = icmp eq i64 %1185, 0
  %1205 = zext i1 %1204 to i8
  %1206 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1205, i8* %1206, align 1
  %1207 = lshr i64 %1185, 63
  %1208 = trunc i64 %1207 to i8
  %1209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1208, i8* %1209, align 1
  %1210 = lshr i64 %1181, 63
  %1211 = lshr i64 %1182, 63
  %1212 = xor i64 %1207, %1210
  %1213 = xor i64 %1207, %1211
  %1214 = add i64 %1212, %1213
  %1215 = icmp eq i64 %1214, 2
  %1216 = zext i1 %1215 to i8
  %1217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1216, i8* %1217, align 1
  store %struct.Memory* %loadMem_400938, %struct.Memory** %MEMORY
  %loadMem_40093b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1219 = getelementptr inbounds %struct.GPR, %struct.GPR* %1218, i32 0, i32 33
  %1220 = getelementptr inbounds %struct.Reg, %struct.Reg* %1219, i32 0, i32 0
  %PC.i1018 = bitcast %union.anon* %1220 to i64*
  %1221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1222 = getelementptr inbounds %struct.GPR, %struct.GPR* %1221, i32 0, i32 5
  %1223 = getelementptr inbounds %struct.Reg, %struct.Reg* %1222, i32 0, i32 0
  %RCX.i1019 = bitcast %union.anon* %1223 to i64*
  %1224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1225 = getelementptr inbounds %struct.GPR, %struct.GPR* %1224, i32 0, i32 15
  %1226 = getelementptr inbounds %struct.Reg, %struct.Reg* %1225, i32 0, i32 0
  %RBP.i1020 = bitcast %union.anon* %1226 to i64*
  %1227 = load i64, i64* %RBP.i1020
  %1228 = sub i64 %1227, 16
  %1229 = load i64, i64* %PC.i1018
  %1230 = add i64 %1229, 4
  store i64 %1230, i64* %PC.i1018
  %1231 = inttoptr i64 %1228 to i32*
  %1232 = load i32, i32* %1231
  %1233 = sext i32 %1232 to i64
  store i64 %1233, i64* %RCX.i1019, align 8
  store %struct.Memory* %loadMem_40093b, %struct.Memory** %MEMORY
  %loadMem_40093f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1235 = getelementptr inbounds %struct.GPR, %struct.GPR* %1234, i32 0, i32 33
  %1236 = getelementptr inbounds %struct.Reg, %struct.Reg* %1235, i32 0, i32 0
  %PC.i1015 = bitcast %union.anon* %1236 to i64*
  %1237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1238 = getelementptr inbounds %struct.GPR, %struct.GPR* %1237, i32 0, i32 1
  %1239 = getelementptr inbounds %struct.Reg, %struct.Reg* %1238, i32 0, i32 0
  %RAX.i1016 = bitcast %union.anon* %1239 to i64*
  %1240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1241 = getelementptr inbounds %struct.GPR, %struct.GPR* %1240, i32 0, i32 5
  %1242 = getelementptr inbounds %struct.Reg, %struct.Reg* %1241, i32 0, i32 0
  %RCX.i1017 = bitcast %union.anon* %1242 to i64*
  %1243 = load i64, i64* %RAX.i1016
  %1244 = load i64, i64* %RCX.i1017
  %1245 = mul i64 %1244, 4
  %1246 = add i64 %1245, %1243
  %1247 = load i64, i64* %PC.i1015
  %1248 = add i64 %1247, 7
  store i64 %1248, i64* %PC.i1015
  %1249 = inttoptr i64 %1246 to i32*
  store i32 0, i32* %1249
  store %struct.Memory* %loadMem_40093f, %struct.Memory** %MEMORY
  %loadMem_400946 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1251 = getelementptr inbounds %struct.GPR, %struct.GPR* %1250, i32 0, i32 33
  %1252 = getelementptr inbounds %struct.Reg, %struct.Reg* %1251, i32 0, i32 0
  %PC.i1012 = bitcast %union.anon* %1252 to i64*
  %1253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1254 = getelementptr inbounds %struct.GPR, %struct.GPR* %1253, i32 0, i32 1
  %1255 = getelementptr inbounds %struct.Reg, %struct.Reg* %1254, i32 0, i32 0
  %RAX.i1013 = bitcast %union.anon* %1255 to i64*
  %1256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1257 = getelementptr inbounds %struct.GPR, %struct.GPR* %1256, i32 0, i32 15
  %1258 = getelementptr inbounds %struct.Reg, %struct.Reg* %1257, i32 0, i32 0
  %RBP.i1014 = bitcast %union.anon* %1258 to i64*
  %1259 = load i64, i64* %RBP.i1014
  %1260 = sub i64 %1259, 16
  %1261 = load i64, i64* %PC.i1012
  %1262 = add i64 %1261, 3
  store i64 %1262, i64* %PC.i1012
  %1263 = inttoptr i64 %1260 to i32*
  %1264 = load i32, i32* %1263
  %1265 = zext i32 %1264 to i64
  store i64 %1265, i64* %RAX.i1013, align 8
  store %struct.Memory* %loadMem_400946, %struct.Memory** %MEMORY
  %loadMem_400949 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1267 = getelementptr inbounds %struct.GPR, %struct.GPR* %1266, i32 0, i32 33
  %1268 = getelementptr inbounds %struct.Reg, %struct.Reg* %1267, i32 0, i32 0
  %PC.i1010 = bitcast %union.anon* %1268 to i64*
  %1269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1270 = getelementptr inbounds %struct.GPR, %struct.GPR* %1269, i32 0, i32 1
  %1271 = getelementptr inbounds %struct.Reg, %struct.Reg* %1270, i32 0, i32 0
  %RAX.i1011 = bitcast %union.anon* %1271 to i64*
  %1272 = load i64, i64* %RAX.i1011
  %1273 = load i64, i64* %PC.i1010
  %1274 = add i64 %1273, 3
  store i64 %1274, i64* %PC.i1010
  %1275 = trunc i64 %1272 to i32
  %1276 = add i32 1, %1275
  %1277 = zext i32 %1276 to i64
  store i64 %1277, i64* %RAX.i1011, align 8
  %1278 = icmp ult i32 %1276, %1275
  %1279 = icmp ult i32 %1276, 1
  %1280 = or i1 %1278, %1279
  %1281 = zext i1 %1280 to i8
  %1282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1281, i8* %1282, align 1
  %1283 = and i32 %1276, 255
  %1284 = call i32 @llvm.ctpop.i32(i32 %1283)
  %1285 = trunc i32 %1284 to i8
  %1286 = and i8 %1285, 1
  %1287 = xor i8 %1286, 1
  %1288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1287, i8* %1288, align 1
  %1289 = xor i64 1, %1272
  %1290 = trunc i64 %1289 to i32
  %1291 = xor i32 %1290, %1276
  %1292 = lshr i32 %1291, 4
  %1293 = trunc i32 %1292 to i8
  %1294 = and i8 %1293, 1
  %1295 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1294, i8* %1295, align 1
  %1296 = icmp eq i32 %1276, 0
  %1297 = zext i1 %1296 to i8
  %1298 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1297, i8* %1298, align 1
  %1299 = lshr i32 %1276, 31
  %1300 = trunc i32 %1299 to i8
  %1301 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1300, i8* %1301, align 1
  %1302 = lshr i32 %1275, 31
  %1303 = xor i32 %1299, %1302
  %1304 = add i32 %1303, %1299
  %1305 = icmp eq i32 %1304, 2
  %1306 = zext i1 %1305 to i8
  %1307 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1306, i8* %1307, align 1
  store %struct.Memory* %loadMem_400949, %struct.Memory** %MEMORY
  %loadMem_40094c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1309 = getelementptr inbounds %struct.GPR, %struct.GPR* %1308, i32 0, i32 33
  %1310 = getelementptr inbounds %struct.Reg, %struct.Reg* %1309, i32 0, i32 0
  %PC.i1007 = bitcast %union.anon* %1310 to i64*
  %1311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1312 = getelementptr inbounds %struct.GPR, %struct.GPR* %1311, i32 0, i32 1
  %1313 = getelementptr inbounds %struct.Reg, %struct.Reg* %1312, i32 0, i32 0
  %EAX.i1008 = bitcast %union.anon* %1313 to i32*
  %1314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1315 = getelementptr inbounds %struct.GPR, %struct.GPR* %1314, i32 0, i32 15
  %1316 = getelementptr inbounds %struct.Reg, %struct.Reg* %1315, i32 0, i32 0
  %RBP.i1009 = bitcast %union.anon* %1316 to i64*
  %1317 = load i64, i64* %RBP.i1009
  %1318 = sub i64 %1317, 16
  %1319 = load i32, i32* %EAX.i1008
  %1320 = zext i32 %1319 to i64
  %1321 = load i64, i64* %PC.i1007
  %1322 = add i64 %1321, 3
  store i64 %1322, i64* %PC.i1007
  %1323 = inttoptr i64 %1318 to i32*
  store i32 %1319, i32* %1323
  store %struct.Memory* %loadMem_40094c, %struct.Memory** %MEMORY
  %loadMem_40094f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1324 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1325 = getelementptr inbounds %struct.GPR, %struct.GPR* %1324, i32 0, i32 33
  %1326 = getelementptr inbounds %struct.Reg, %struct.Reg* %1325, i32 0, i32 0
  %PC.i1006 = bitcast %union.anon* %1326 to i64*
  %1327 = load i64, i64* %PC.i1006
  %1328 = add i64 %1327, -54
  %1329 = load i64, i64* %PC.i1006
  %1330 = add i64 %1329, 5
  store i64 %1330, i64* %PC.i1006
  %1331 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1328, i64* %1331, align 8
  store %struct.Memory* %loadMem_40094f, %struct.Memory** %MEMORY
  br label %block_.L_400919

block_.L_400954:                                  ; preds = %block_.L_400919
  %loadMem_400954 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1333 = getelementptr inbounds %struct.GPR, %struct.GPR* %1332, i32 0, i32 33
  %1334 = getelementptr inbounds %struct.Reg, %struct.Reg* %1333, i32 0, i32 0
  %PC.i1005 = bitcast %union.anon* %1334 to i64*
  %1335 = load i64, i64* %PC.i1005
  %1336 = add i64 %1335, 5
  %1337 = load i64, i64* %PC.i1005
  %1338 = add i64 %1337, 5
  store i64 %1338, i64* %PC.i1005
  %1339 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1336, i64* %1339, align 8
  store %struct.Memory* %loadMem_400954, %struct.Memory** %MEMORY
  br label %block_.L_400959

block_.L_400959:                                  ; preds = %block_.L_400954
  %loadMem_400959 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1341 = getelementptr inbounds %struct.GPR, %struct.GPR* %1340, i32 0, i32 33
  %1342 = getelementptr inbounds %struct.Reg, %struct.Reg* %1341, i32 0, i32 0
  %PC.i1002 = bitcast %union.anon* %1342 to i64*
  %1343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1344 = getelementptr inbounds %struct.GPR, %struct.GPR* %1343, i32 0, i32 1
  %1345 = getelementptr inbounds %struct.Reg, %struct.Reg* %1344, i32 0, i32 0
  %RAX.i1003 = bitcast %union.anon* %1345 to i64*
  %1346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1347 = getelementptr inbounds %struct.GPR, %struct.GPR* %1346, i32 0, i32 15
  %1348 = getelementptr inbounds %struct.Reg, %struct.Reg* %1347, i32 0, i32 0
  %RBP.i1004 = bitcast %union.anon* %1348 to i64*
  %1349 = load i64, i64* %RBP.i1004
  %1350 = sub i64 %1349, 4
  %1351 = load i64, i64* %PC.i1002
  %1352 = add i64 %1351, 3
  store i64 %1352, i64* %PC.i1002
  %1353 = inttoptr i64 %1350 to i32*
  %1354 = load i32, i32* %1353
  %1355 = zext i32 %1354 to i64
  store i64 %1355, i64* %RAX.i1003, align 8
  store %struct.Memory* %loadMem_400959, %struct.Memory** %MEMORY
  %loadMem_40095c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1357 = getelementptr inbounds %struct.GPR, %struct.GPR* %1356, i32 0, i32 33
  %1358 = getelementptr inbounds %struct.Reg, %struct.Reg* %1357, i32 0, i32 0
  %PC.i1000 = bitcast %union.anon* %1358 to i64*
  %1359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1360 = getelementptr inbounds %struct.GPR, %struct.GPR* %1359, i32 0, i32 1
  %1361 = getelementptr inbounds %struct.Reg, %struct.Reg* %1360, i32 0, i32 0
  %RAX.i1001 = bitcast %union.anon* %1361 to i64*
  %1362 = load i64, i64* %RAX.i1001
  %1363 = load i64, i64* %PC.i1000
  %1364 = add i64 %1363, 3
  store i64 %1364, i64* %PC.i1000
  %1365 = trunc i64 %1362 to i32
  %1366 = add i32 1, %1365
  %1367 = zext i32 %1366 to i64
  store i64 %1367, i64* %RAX.i1001, align 8
  %1368 = icmp ult i32 %1366, %1365
  %1369 = icmp ult i32 %1366, 1
  %1370 = or i1 %1368, %1369
  %1371 = zext i1 %1370 to i8
  %1372 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1371, i8* %1372, align 1
  %1373 = and i32 %1366, 255
  %1374 = call i32 @llvm.ctpop.i32(i32 %1373)
  %1375 = trunc i32 %1374 to i8
  %1376 = and i8 %1375, 1
  %1377 = xor i8 %1376, 1
  %1378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1377, i8* %1378, align 1
  %1379 = xor i64 1, %1362
  %1380 = trunc i64 %1379 to i32
  %1381 = xor i32 %1380, %1366
  %1382 = lshr i32 %1381, 4
  %1383 = trunc i32 %1382 to i8
  %1384 = and i8 %1383, 1
  %1385 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1384, i8* %1385, align 1
  %1386 = icmp eq i32 %1366, 0
  %1387 = zext i1 %1386 to i8
  %1388 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1387, i8* %1388, align 1
  %1389 = lshr i32 %1366, 31
  %1390 = trunc i32 %1389 to i8
  %1391 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1390, i8* %1391, align 1
  %1392 = lshr i32 %1365, 31
  %1393 = xor i32 %1389, %1392
  %1394 = add i32 %1393, %1389
  %1395 = icmp eq i32 %1394, 2
  %1396 = zext i1 %1395 to i8
  %1397 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1396, i8* %1397, align 1
  store %struct.Memory* %loadMem_40095c, %struct.Memory** %MEMORY
  %loadMem_40095f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1399 = getelementptr inbounds %struct.GPR, %struct.GPR* %1398, i32 0, i32 33
  %1400 = getelementptr inbounds %struct.Reg, %struct.Reg* %1399, i32 0, i32 0
  %PC.i997 = bitcast %union.anon* %1400 to i64*
  %1401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1402 = getelementptr inbounds %struct.GPR, %struct.GPR* %1401, i32 0, i32 1
  %1403 = getelementptr inbounds %struct.Reg, %struct.Reg* %1402, i32 0, i32 0
  %EAX.i998 = bitcast %union.anon* %1403 to i32*
  %1404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1405 = getelementptr inbounds %struct.GPR, %struct.GPR* %1404, i32 0, i32 15
  %1406 = getelementptr inbounds %struct.Reg, %struct.Reg* %1405, i32 0, i32 0
  %RBP.i999 = bitcast %union.anon* %1406 to i64*
  %1407 = load i64, i64* %RBP.i999
  %1408 = sub i64 %1407, 4
  %1409 = load i32, i32* %EAX.i998
  %1410 = zext i32 %1409 to i64
  %1411 = load i64, i64* %PC.i997
  %1412 = add i64 %1411, 3
  store i64 %1412, i64* %PC.i997
  %1413 = inttoptr i64 %1408 to i32*
  store i32 %1409, i32* %1413
  store %struct.Memory* %loadMem_40095f, %struct.Memory** %MEMORY
  %loadMem_400962 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1415 = getelementptr inbounds %struct.GPR, %struct.GPR* %1414, i32 0, i32 33
  %1416 = getelementptr inbounds %struct.Reg, %struct.Reg* %1415, i32 0, i32 0
  %PC.i996 = bitcast %union.anon* %1416 to i64*
  %1417 = load i64, i64* %PC.i996
  %1418 = add i64 %1417, -90
  %1419 = load i64, i64* %PC.i996
  %1420 = add i64 %1419, 5
  store i64 %1420, i64* %PC.i996
  %1421 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1418, i64* %1421, align 8
  store %struct.Memory* %loadMem_400962, %struct.Memory** %MEMORY
  br label %block_.L_400908

block_.L_400967:                                  ; preds = %block_.L_400908
  %loadMem_400967 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1423 = getelementptr inbounds %struct.GPR, %struct.GPR* %1422, i32 0, i32 33
  %1424 = getelementptr inbounds %struct.Reg, %struct.Reg* %1423, i32 0, i32 0
  %PC.i994 = bitcast %union.anon* %1424 to i64*
  %1425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1426 = getelementptr inbounds %struct.GPR, %struct.GPR* %1425, i32 0, i32 15
  %1427 = getelementptr inbounds %struct.Reg, %struct.Reg* %1426, i32 0, i32 0
  %RBP.i995 = bitcast %union.anon* %1427 to i64*
  %1428 = load i64, i64* %RBP.i995
  %1429 = sub i64 %1428, 4
  %1430 = load i64, i64* %PC.i994
  %1431 = add i64 %1430, 7
  store i64 %1431, i64* %PC.i994
  %1432 = inttoptr i64 %1429 to i32*
  store i32 0, i32* %1432
  store %struct.Memory* %loadMem_400967, %struct.Memory** %MEMORY
  br label %block_.L_40096e

block_.L_40096e:                                  ; preds = %block_.L_4009e1, %block_.L_400967
  %loadMem_40096e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1434 = getelementptr inbounds %struct.GPR, %struct.GPR* %1433, i32 0, i32 33
  %1435 = getelementptr inbounds %struct.Reg, %struct.Reg* %1434, i32 0, i32 0
  %PC.i992 = bitcast %union.anon* %1435 to i64*
  %1436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1437 = getelementptr inbounds %struct.GPR, %struct.GPR* %1436, i32 0, i32 15
  %1438 = getelementptr inbounds %struct.Reg, %struct.Reg* %1437, i32 0, i32 0
  %RBP.i993 = bitcast %union.anon* %1438 to i64*
  %1439 = load i64, i64* %RBP.i993
  %1440 = sub i64 %1439, 4
  %1441 = load i64, i64* %PC.i992
  %1442 = add i64 %1441, 4
  store i64 %1442, i64* %PC.i992
  %1443 = inttoptr i64 %1440 to i32*
  %1444 = load i32, i32* %1443
  %1445 = sub i32 %1444, 3
  %1446 = icmp ult i32 %1444, 3
  %1447 = zext i1 %1446 to i8
  %1448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1447, i8* %1448, align 1
  %1449 = and i32 %1445, 255
  %1450 = call i32 @llvm.ctpop.i32(i32 %1449)
  %1451 = trunc i32 %1450 to i8
  %1452 = and i8 %1451, 1
  %1453 = xor i8 %1452, 1
  %1454 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1453, i8* %1454, align 1
  %1455 = xor i32 %1444, 3
  %1456 = xor i32 %1455, %1445
  %1457 = lshr i32 %1456, 4
  %1458 = trunc i32 %1457 to i8
  %1459 = and i8 %1458, 1
  %1460 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1459, i8* %1460, align 1
  %1461 = icmp eq i32 %1445, 0
  %1462 = zext i1 %1461 to i8
  %1463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1462, i8* %1463, align 1
  %1464 = lshr i32 %1445, 31
  %1465 = trunc i32 %1464 to i8
  %1466 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1465, i8* %1466, align 1
  %1467 = lshr i32 %1444, 31
  %1468 = xor i32 %1464, %1467
  %1469 = add i32 %1468, %1467
  %1470 = icmp eq i32 %1469, 2
  %1471 = zext i1 %1470 to i8
  %1472 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1471, i8* %1472, align 1
  store %struct.Memory* %loadMem_40096e, %struct.Memory** %MEMORY
  %loadMem_400972 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1474 = getelementptr inbounds %struct.GPR, %struct.GPR* %1473, i32 0, i32 33
  %1475 = getelementptr inbounds %struct.Reg, %struct.Reg* %1474, i32 0, i32 0
  %PC.i991 = bitcast %union.anon* %1475 to i64*
  %1476 = load i64, i64* %PC.i991
  %1477 = add i64 %1476, 125
  %1478 = load i64, i64* %PC.i991
  %1479 = add i64 %1478, 6
  %1480 = load i64, i64* %PC.i991
  %1481 = add i64 %1480, 6
  store i64 %1481, i64* %PC.i991
  %1482 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1483 = load i8, i8* %1482, align 1
  %1484 = icmp eq i8 %1483, 0
  %1485 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1486 = load i8, i8* %1485, align 1
  %1487 = icmp ne i8 %1486, 0
  %1488 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1489 = load i8, i8* %1488, align 1
  %1490 = icmp ne i8 %1489, 0
  %1491 = xor i1 %1487, %1490
  %1492 = xor i1 %1491, true
  %1493 = and i1 %1484, %1492
  %1494 = zext i1 %1493 to i8
  store i8 %1494, i8* %BRANCH_TAKEN, align 1
  %1495 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1496 = select i1 %1493, i64 %1477, i64 %1479
  store i64 %1496, i64* %1495, align 8
  store %struct.Memory* %loadMem_400972, %struct.Memory** %MEMORY
  %loadBr_400972 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400972 = icmp eq i8 %loadBr_400972, 1
  br i1 %cmpBr_400972, label %block_.L_4009ef, label %block_400978

block_400978:                                     ; preds = %block_.L_40096e
  %loadMem_400978 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1498 = getelementptr inbounds %struct.GPR, %struct.GPR* %1497, i32 0, i32 33
  %1499 = getelementptr inbounds %struct.Reg, %struct.Reg* %1498, i32 0, i32 0
  %PC.i989 = bitcast %union.anon* %1499 to i64*
  %1500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1501 = getelementptr inbounds %struct.GPR, %struct.GPR* %1500, i32 0, i32 15
  %1502 = getelementptr inbounds %struct.Reg, %struct.Reg* %1501, i32 0, i32 0
  %RBP.i990 = bitcast %union.anon* %1502 to i64*
  %1503 = load i64, i64* %RBP.i990
  %1504 = sub i64 %1503, 8
  %1505 = load i64, i64* %PC.i989
  %1506 = add i64 %1505, 7
  store i64 %1506, i64* %PC.i989
  %1507 = inttoptr i64 %1504 to i32*
  store i32 0, i32* %1507
  store %struct.Memory* %loadMem_400978, %struct.Memory** %MEMORY
  br label %block_.L_40097f

block_.L_40097f:                                  ; preds = %block_.L_4009ce, %block_400978
  %loadMem_40097f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1509 = getelementptr inbounds %struct.GPR, %struct.GPR* %1508, i32 0, i32 33
  %1510 = getelementptr inbounds %struct.Reg, %struct.Reg* %1509, i32 0, i32 0
  %PC.i987 = bitcast %union.anon* %1510 to i64*
  %1511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1512 = getelementptr inbounds %struct.GPR, %struct.GPR* %1511, i32 0, i32 15
  %1513 = getelementptr inbounds %struct.Reg, %struct.Reg* %1512, i32 0, i32 0
  %RBP.i988 = bitcast %union.anon* %1513 to i64*
  %1514 = load i64, i64* %RBP.i988
  %1515 = sub i64 %1514, 8
  %1516 = load i64, i64* %PC.i987
  %1517 = add i64 %1516, 4
  store i64 %1517, i64* %PC.i987
  %1518 = inttoptr i64 %1515 to i32*
  %1519 = load i32, i32* %1518
  %1520 = sub i32 %1519, 1
  %1521 = icmp ult i32 %1519, 1
  %1522 = zext i1 %1521 to i8
  %1523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1522, i8* %1523, align 1
  %1524 = and i32 %1520, 255
  %1525 = call i32 @llvm.ctpop.i32(i32 %1524)
  %1526 = trunc i32 %1525 to i8
  %1527 = and i8 %1526, 1
  %1528 = xor i8 %1527, 1
  %1529 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1528, i8* %1529, align 1
  %1530 = xor i32 %1519, 1
  %1531 = xor i32 %1530, %1520
  %1532 = lshr i32 %1531, 4
  %1533 = trunc i32 %1532 to i8
  %1534 = and i8 %1533, 1
  %1535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1534, i8* %1535, align 1
  %1536 = icmp eq i32 %1520, 0
  %1537 = zext i1 %1536 to i8
  %1538 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1537, i8* %1538, align 1
  %1539 = lshr i32 %1520, 31
  %1540 = trunc i32 %1539 to i8
  %1541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1540, i8* %1541, align 1
  %1542 = lshr i32 %1519, 31
  %1543 = xor i32 %1539, %1542
  %1544 = add i32 %1543, %1542
  %1545 = icmp eq i32 %1544, 2
  %1546 = zext i1 %1545 to i8
  %1547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1546, i8* %1547, align 1
  store %struct.Memory* %loadMem_40097f, %struct.Memory** %MEMORY
  %loadMem_400983 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1549 = getelementptr inbounds %struct.GPR, %struct.GPR* %1548, i32 0, i32 33
  %1550 = getelementptr inbounds %struct.Reg, %struct.Reg* %1549, i32 0, i32 0
  %PC.i986 = bitcast %union.anon* %1550 to i64*
  %1551 = load i64, i64* %PC.i986
  %1552 = add i64 %1551, 89
  %1553 = load i64, i64* %PC.i986
  %1554 = add i64 %1553, 6
  %1555 = load i64, i64* %PC.i986
  %1556 = add i64 %1555, 6
  store i64 %1556, i64* %PC.i986
  %1557 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1558 = load i8, i8* %1557, align 1
  %1559 = icmp eq i8 %1558, 0
  %1560 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1561 = load i8, i8* %1560, align 1
  %1562 = icmp ne i8 %1561, 0
  %1563 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1564 = load i8, i8* %1563, align 1
  %1565 = icmp ne i8 %1564, 0
  %1566 = xor i1 %1562, %1565
  %1567 = xor i1 %1566, true
  %1568 = and i1 %1559, %1567
  %1569 = zext i1 %1568 to i8
  store i8 %1569, i8* %BRANCH_TAKEN, align 1
  %1570 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1571 = select i1 %1568, i64 %1552, i64 %1554
  store i64 %1571, i64* %1570, align 8
  store %struct.Memory* %loadMem_400983, %struct.Memory** %MEMORY
  %loadBr_400983 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400983 = icmp eq i8 %loadBr_400983, 1
  br i1 %cmpBr_400983, label %block_.L_4009dc, label %block_400989

block_400989:                                     ; preds = %block_.L_40097f
  %loadMem_400989 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1573 = getelementptr inbounds %struct.GPR, %struct.GPR* %1572, i32 0, i32 33
  %1574 = getelementptr inbounds %struct.Reg, %struct.Reg* %1573, i32 0, i32 0
  %PC.i984 = bitcast %union.anon* %1574 to i64*
  %1575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1576 = getelementptr inbounds %struct.GPR, %struct.GPR* %1575, i32 0, i32 15
  %1577 = getelementptr inbounds %struct.Reg, %struct.Reg* %1576, i32 0, i32 0
  %RBP.i985 = bitcast %union.anon* %1577 to i64*
  %1578 = load i64, i64* %RBP.i985
  %1579 = sub i64 %1578, 12
  %1580 = load i64, i64* %PC.i984
  %1581 = add i64 %1580, 7
  store i64 %1581, i64* %PC.i984
  %1582 = inttoptr i64 %1579 to i32*
  store i32 0, i32* %1582
  store %struct.Memory* %loadMem_400989, %struct.Memory** %MEMORY
  br label %block_.L_400990

block_.L_400990:                                  ; preds = %block_40099a, %block_400989
  %loadMem_400990 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1584 = getelementptr inbounds %struct.GPR, %struct.GPR* %1583, i32 0, i32 33
  %1585 = getelementptr inbounds %struct.Reg, %struct.Reg* %1584, i32 0, i32 0
  %PC.i982 = bitcast %union.anon* %1585 to i64*
  %1586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1587 = getelementptr inbounds %struct.GPR, %struct.GPR* %1586, i32 0, i32 15
  %1588 = getelementptr inbounds %struct.Reg, %struct.Reg* %1587, i32 0, i32 0
  %RBP.i983 = bitcast %union.anon* %1588 to i64*
  %1589 = load i64, i64* %RBP.i983
  %1590 = sub i64 %1589, 12
  %1591 = load i64, i64* %PC.i982
  %1592 = add i64 %1591, 4
  store i64 %1592, i64* %PC.i982
  %1593 = inttoptr i64 %1590 to i32*
  %1594 = load i32, i32* %1593
  %1595 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1595, align 1
  %1596 = and i32 %1594, 255
  %1597 = call i32 @llvm.ctpop.i32(i32 %1596)
  %1598 = trunc i32 %1597 to i8
  %1599 = and i8 %1598, 1
  %1600 = xor i8 %1599, 1
  %1601 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1600, i8* %1601, align 1
  %1602 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1602, align 1
  %1603 = icmp eq i32 %1594, 0
  %1604 = zext i1 %1603 to i8
  %1605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1604, i8* %1605, align 1
  %1606 = lshr i32 %1594, 31
  %1607 = trunc i32 %1606 to i8
  %1608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1607, i8* %1608, align 1
  %1609 = lshr i32 %1594, 31
  %1610 = xor i32 %1606, %1609
  %1611 = add i32 %1610, %1609
  %1612 = icmp eq i32 %1611, 2
  %1613 = zext i1 %1612 to i8
  %1614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1613, i8* %1614, align 1
  store %struct.Memory* %loadMem_400990, %struct.Memory** %MEMORY
  %loadMem_400994 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1616 = getelementptr inbounds %struct.GPR, %struct.GPR* %1615, i32 0, i32 33
  %1617 = getelementptr inbounds %struct.Reg, %struct.Reg* %1616, i32 0, i32 0
  %PC.i981 = bitcast %union.anon* %1617 to i64*
  %1618 = load i64, i64* %PC.i981
  %1619 = add i64 %1618, 53
  %1620 = load i64, i64* %PC.i981
  %1621 = add i64 %1620, 6
  %1622 = load i64, i64* %PC.i981
  %1623 = add i64 %1622, 6
  store i64 %1623, i64* %PC.i981
  %1624 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1625 = load i8, i8* %1624, align 1
  %1626 = icmp eq i8 %1625, 0
  %1627 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1628 = load i8, i8* %1627, align 1
  %1629 = icmp ne i8 %1628, 0
  %1630 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1631 = load i8, i8* %1630, align 1
  %1632 = icmp ne i8 %1631, 0
  %1633 = xor i1 %1629, %1632
  %1634 = xor i1 %1633, true
  %1635 = and i1 %1626, %1634
  %1636 = zext i1 %1635 to i8
  store i8 %1636, i8* %BRANCH_TAKEN, align 1
  %1637 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1638 = select i1 %1635, i64 %1619, i64 %1621
  store i64 %1638, i64* %1637, align 8
  store %struct.Memory* %loadMem_400994, %struct.Memory** %MEMORY
  %loadBr_400994 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400994 = icmp eq i8 %loadBr_400994, 1
  br i1 %cmpBr_400994, label %block_.L_4009c9, label %block_40099a

block_40099a:                                     ; preds = %block_.L_400990
  %loadMem_40099a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1640 = getelementptr inbounds %struct.GPR, %struct.GPR* %1639, i32 0, i32 33
  %1641 = getelementptr inbounds %struct.Reg, %struct.Reg* %1640, i32 0, i32 0
  %PC.i978 = bitcast %union.anon* %1641 to i64*
  %1642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1643 = getelementptr inbounds %struct.GPR, %struct.GPR* %1642, i32 0, i32 1
  %1644 = getelementptr inbounds %struct.Reg, %struct.Reg* %1643, i32 0, i32 0
  %RAX.i979 = bitcast %union.anon* %1644 to i64*
  %1645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1646 = getelementptr inbounds %struct.GPR, %struct.GPR* %1645, i32 0, i32 15
  %1647 = getelementptr inbounds %struct.Reg, %struct.Reg* %1646, i32 0, i32 0
  %RBP.i980 = bitcast %union.anon* %1647 to i64*
  %1648 = load i64, i64* %RBP.i980
  %1649 = sub i64 %1648, 4
  %1650 = load i64, i64* %PC.i978
  %1651 = add i64 %1650, 3
  store i64 %1651, i64* %PC.i978
  %1652 = inttoptr i64 %1649 to i32*
  %1653 = load i32, i32* %1652
  %1654 = zext i32 %1653 to i64
  store i64 %1654, i64* %RAX.i979, align 8
  store %struct.Memory* %loadMem_40099a, %struct.Memory** %MEMORY
  %loadMem_40099d = load %struct.Memory*, %struct.Memory** %MEMORY
  %1655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1656 = getelementptr inbounds %struct.GPR, %struct.GPR* %1655, i32 0, i32 33
  %1657 = getelementptr inbounds %struct.Reg, %struct.Reg* %1656, i32 0, i32 0
  %PC.i975 = bitcast %union.anon* %1657 to i64*
  %1658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1659 = getelementptr inbounds %struct.GPR, %struct.GPR* %1658, i32 0, i32 5
  %1660 = getelementptr inbounds %struct.Reg, %struct.Reg* %1659, i32 0, i32 0
  %RCX.i976 = bitcast %union.anon* %1660 to i64*
  %1661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1662 = getelementptr inbounds %struct.GPR, %struct.GPR* %1661, i32 0, i32 15
  %1663 = getelementptr inbounds %struct.Reg, %struct.Reg* %1662, i32 0, i32 0
  %RBP.i977 = bitcast %union.anon* %1663 to i64*
  %1664 = load i64, i64* %RBP.i977
  %1665 = sub i64 %1664, 8
  %1666 = load i64, i64* %PC.i975
  %1667 = add i64 %1666, 3
  store i64 %1667, i64* %PC.i975
  %1668 = inttoptr i64 %1665 to i32*
  %1669 = load i32, i32* %1668
  %1670 = zext i32 %1669 to i64
  store i64 %1670, i64* %RCX.i976, align 8
  store %struct.Memory* %loadMem_40099d, %struct.Memory** %MEMORY
  %loadMem_4009a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1672 = getelementptr inbounds %struct.GPR, %struct.GPR* %1671, i32 0, i32 33
  %1673 = getelementptr inbounds %struct.Reg, %struct.Reg* %1672, i32 0, i32 0
  %PC.i972 = bitcast %union.anon* %1673 to i64*
  %1674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1675 = getelementptr inbounds %struct.GPR, %struct.GPR* %1674, i32 0, i32 7
  %1676 = getelementptr inbounds %struct.Reg, %struct.Reg* %1675, i32 0, i32 0
  %RDX.i973 = bitcast %union.anon* %1676 to i64*
  %1677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1678 = getelementptr inbounds %struct.GPR, %struct.GPR* %1677, i32 0, i32 15
  %1679 = getelementptr inbounds %struct.Reg, %struct.Reg* %1678, i32 0, i32 0
  %RBP.i974 = bitcast %union.anon* %1679 to i64*
  %1680 = load i64, i64* %RBP.i974
  %1681 = sub i64 %1680, 12
  %1682 = load i64, i64* %PC.i972
  %1683 = add i64 %1682, 3
  store i64 %1683, i64* %PC.i972
  %1684 = inttoptr i64 %1681 to i32*
  %1685 = load i32, i32* %1684
  %1686 = zext i32 %1685 to i64
  store i64 %1686, i64* %RDX.i973, align 8
  store %struct.Memory* %loadMem_4009a0, %struct.Memory** %MEMORY
  %loadMem_4009a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1688 = getelementptr inbounds %struct.GPR, %struct.GPR* %1687, i32 0, i32 33
  %1689 = getelementptr inbounds %struct.Reg, %struct.Reg* %1688, i32 0, i32 0
  %PC.i970 = bitcast %union.anon* %1689 to i64*
  %1690 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1691 = getelementptr inbounds %struct.GPR, %struct.GPR* %1690, i32 0, i32 7
  %1692 = getelementptr inbounds %struct.Reg, %struct.Reg* %1691, i32 0, i32 0
  %RDX.i971 = bitcast %union.anon* %1692 to i64*
  %1693 = load i64, i64* %RDX.i971
  %1694 = load i64, i64* %PC.i970
  %1695 = add i64 %1694, 3
  store i64 %1695, i64* %PC.i970
  %1696 = and i64 %1693, 4294967295
  %1697 = shl i64 %1696, 2
  %1698 = trunc i64 %1697 to i32
  %1699 = icmp slt i32 %1698, 0
  %1700 = shl i32 %1698, 1
  %1701 = zext i32 %1700 to i64
  store i64 %1701, i64* %RDX.i971, align 8
  %1702 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %1703 = zext i1 %1699 to i8
  store i8 %1703, i8* %1702, align 1
  %1704 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %1705 = and i32 %1700, 254
  %1706 = call i32 @llvm.ctpop.i32(i32 %1705)
  %1707 = trunc i32 %1706 to i8
  %1708 = and i8 %1707, 1
  %1709 = xor i8 %1708, 1
  store i8 %1709, i8* %1704, align 1
  %1710 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1710, align 1
  %1711 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1712 = icmp eq i32 %1700, 0
  %1713 = zext i1 %1712 to i8
  store i8 %1713, i8* %1711, align 1
  %1714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1715 = lshr i32 %1700, 31
  %1716 = trunc i32 %1715 to i8
  store i8 %1716, i8* %1714, align 1
  %1717 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1717, align 1
  store %struct.Memory* %loadMem_4009a3, %struct.Memory** %MEMORY
  %loadMem_4009a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1719 = getelementptr inbounds %struct.GPR, %struct.GPR* %1718, i32 0, i32 33
  %1720 = getelementptr inbounds %struct.Reg, %struct.Reg* %1719, i32 0, i32 0
  %PC.i967 = bitcast %union.anon* %1720 to i64*
  %1721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1722 = getelementptr inbounds %struct.GPR, %struct.GPR* %1721, i32 0, i32 7
  %1723 = getelementptr inbounds %struct.Reg, %struct.Reg* %1722, i32 0, i32 0
  %EDX.i968 = bitcast %union.anon* %1723 to i32*
  %1724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1725 = getelementptr inbounds %struct.GPR, %struct.GPR* %1724, i32 0, i32 5
  %1726 = getelementptr inbounds %struct.Reg, %struct.Reg* %1725, i32 0, i32 0
  %RCX.i969 = bitcast %union.anon* %1726 to i64*
  %1727 = load i64, i64* %RCX.i969
  %1728 = load i32, i32* %EDX.i968
  %1729 = zext i32 %1728 to i64
  %1730 = load i64, i64* %PC.i967
  %1731 = add i64 %1730, 2
  store i64 %1731, i64* %PC.i967
  %1732 = trunc i64 %1727 to i32
  %1733 = add i32 %1728, %1732
  %1734 = zext i32 %1733 to i64
  store i64 %1734, i64* %RCX.i969, align 8
  %1735 = icmp ult i32 %1733, %1732
  %1736 = icmp ult i32 %1733, %1728
  %1737 = or i1 %1735, %1736
  %1738 = zext i1 %1737 to i8
  %1739 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1738, i8* %1739, align 1
  %1740 = and i32 %1733, 255
  %1741 = call i32 @llvm.ctpop.i32(i32 %1740)
  %1742 = trunc i32 %1741 to i8
  %1743 = and i8 %1742, 1
  %1744 = xor i8 %1743, 1
  %1745 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1744, i8* %1745, align 1
  %1746 = xor i64 %1729, %1727
  %1747 = trunc i64 %1746 to i32
  %1748 = xor i32 %1747, %1733
  %1749 = lshr i32 %1748, 4
  %1750 = trunc i32 %1749 to i8
  %1751 = and i8 %1750, 1
  %1752 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1751, i8* %1752, align 1
  %1753 = icmp eq i32 %1733, 0
  %1754 = zext i1 %1753 to i8
  %1755 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1754, i8* %1755, align 1
  %1756 = lshr i32 %1733, 31
  %1757 = trunc i32 %1756 to i8
  %1758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1757, i8* %1758, align 1
  %1759 = lshr i32 %1732, 31
  %1760 = lshr i32 %1728, 31
  %1761 = xor i32 %1756, %1759
  %1762 = xor i32 %1756, %1760
  %1763 = add i32 %1761, %1762
  %1764 = icmp eq i32 %1763, 2
  %1765 = zext i1 %1764 to i8
  %1766 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1765, i8* %1766, align 1
  store %struct.Memory* %loadMem_4009a6, %struct.Memory** %MEMORY
  %loadMem_4009a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1768 = getelementptr inbounds %struct.GPR, %struct.GPR* %1767, i32 0, i32 33
  %1769 = getelementptr inbounds %struct.Reg, %struct.Reg* %1768, i32 0, i32 0
  %PC.i965 = bitcast %union.anon* %1769 to i64*
  %1770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1771 = getelementptr inbounds %struct.GPR, %struct.GPR* %1770, i32 0, i32 5
  %1772 = getelementptr inbounds %struct.Reg, %struct.Reg* %1771, i32 0, i32 0
  %RCX.i966 = bitcast %union.anon* %1772 to i64*
  %1773 = load i64, i64* %RCX.i966
  %1774 = load i64, i64* %PC.i965
  %1775 = add i64 %1774, 3
  store i64 %1775, i64* %PC.i965
  %1776 = and i64 %1773, 4294967295
  %1777 = shl i64 %1776, 2
  %1778 = trunc i64 %1777 to i32
  %1779 = icmp slt i32 %1778, 0
  %1780 = shl i32 %1778, 1
  %1781 = zext i32 %1780 to i64
  store i64 %1781, i64* %RCX.i966, align 8
  %1782 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %1783 = zext i1 %1779 to i8
  store i8 %1783, i8* %1782, align 1
  %1784 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %1785 = and i32 %1780, 254
  %1786 = call i32 @llvm.ctpop.i32(i32 %1785)
  %1787 = trunc i32 %1786 to i8
  %1788 = and i8 %1787, 1
  %1789 = xor i8 %1788, 1
  store i8 %1789, i8* %1784, align 1
  %1790 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1790, align 1
  %1791 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1792 = icmp eq i32 %1780, 0
  %1793 = zext i1 %1792 to i8
  store i8 %1793, i8* %1791, align 1
  %1794 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1795 = lshr i32 %1780, 31
  %1796 = trunc i32 %1795 to i8
  store i8 %1796, i8* %1794, align 1
  %1797 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1797, align 1
  store %struct.Memory* %loadMem_4009a8, %struct.Memory** %MEMORY
  %loadMem_4009ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %1798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1799 = getelementptr inbounds %struct.GPR, %struct.GPR* %1798, i32 0, i32 33
  %1800 = getelementptr inbounds %struct.Reg, %struct.Reg* %1799, i32 0, i32 0
  %PC.i962 = bitcast %union.anon* %1800 to i64*
  %1801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1802 = getelementptr inbounds %struct.GPR, %struct.GPR* %1801, i32 0, i32 5
  %1803 = getelementptr inbounds %struct.Reg, %struct.Reg* %1802, i32 0, i32 0
  %ECX.i963 = bitcast %union.anon* %1803 to i32*
  %1804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1805 = getelementptr inbounds %struct.GPR, %struct.GPR* %1804, i32 0, i32 1
  %1806 = getelementptr inbounds %struct.Reg, %struct.Reg* %1805, i32 0, i32 0
  %RAX.i964 = bitcast %union.anon* %1806 to i64*
  %1807 = load i64, i64* %RAX.i964
  %1808 = load i32, i32* %ECX.i963
  %1809 = zext i32 %1808 to i64
  %1810 = load i64, i64* %PC.i962
  %1811 = add i64 %1810, 2
  store i64 %1811, i64* %PC.i962
  %1812 = trunc i64 %1807 to i32
  %1813 = add i32 %1808, %1812
  %1814 = zext i32 %1813 to i64
  store i64 %1814, i64* %RAX.i964, align 8
  %1815 = icmp ult i32 %1813, %1812
  %1816 = icmp ult i32 %1813, %1808
  %1817 = or i1 %1815, %1816
  %1818 = zext i1 %1817 to i8
  %1819 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1818, i8* %1819, align 1
  %1820 = and i32 %1813, 255
  %1821 = call i32 @llvm.ctpop.i32(i32 %1820)
  %1822 = trunc i32 %1821 to i8
  %1823 = and i8 %1822, 1
  %1824 = xor i8 %1823, 1
  %1825 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1824, i8* %1825, align 1
  %1826 = xor i64 %1809, %1807
  %1827 = trunc i64 %1826 to i32
  %1828 = xor i32 %1827, %1813
  %1829 = lshr i32 %1828, 4
  %1830 = trunc i32 %1829 to i8
  %1831 = and i8 %1830, 1
  %1832 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1831, i8* %1832, align 1
  %1833 = icmp eq i32 %1813, 0
  %1834 = zext i1 %1833 to i8
  %1835 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1834, i8* %1835, align 1
  %1836 = lshr i32 %1813, 31
  %1837 = trunc i32 %1836 to i8
  %1838 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1837, i8* %1838, align 1
  %1839 = lshr i32 %1812, 31
  %1840 = lshr i32 %1808, 31
  %1841 = xor i32 %1836, %1839
  %1842 = xor i32 %1836, %1840
  %1843 = add i32 %1841, %1842
  %1844 = icmp eq i32 %1843, 2
  %1845 = zext i1 %1844 to i8
  %1846 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1845, i8* %1846, align 1
  store %struct.Memory* %loadMem_4009ab, %struct.Memory** %MEMORY
  %loadMem_4009ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %1847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1848 = getelementptr inbounds %struct.GPR, %struct.GPR* %1847, i32 0, i32 33
  %1849 = getelementptr inbounds %struct.Reg, %struct.Reg* %1848, i32 0, i32 0
  %PC.i959 = bitcast %union.anon* %1849 to i64*
  %1850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1851 = getelementptr inbounds %struct.GPR, %struct.GPR* %1850, i32 0, i32 1
  %1852 = getelementptr inbounds %struct.Reg, %struct.Reg* %1851, i32 0, i32 0
  %EAX.i960 = bitcast %union.anon* %1852 to i32*
  %1853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1854 = getelementptr inbounds %struct.GPR, %struct.GPR* %1853, i32 0, i32 9
  %1855 = getelementptr inbounds %struct.Reg, %struct.Reg* %1854, i32 0, i32 0
  %RSI.i961 = bitcast %union.anon* %1855 to i64*
  %1856 = load i32, i32* %EAX.i960
  %1857 = zext i32 %1856 to i64
  %1858 = load i64, i64* %PC.i959
  %1859 = add i64 %1858, 3
  store i64 %1859, i64* %PC.i959
  %1860 = shl i64 %1857, 32
  %1861 = ashr exact i64 %1860, 32
  store i64 %1861, i64* %RSI.i961, align 8
  store %struct.Memory* %loadMem_4009ad, %struct.Memory** %MEMORY
  %loadMem_4009b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1863 = getelementptr inbounds %struct.GPR, %struct.GPR* %1862, i32 0, i32 33
  %1864 = getelementptr inbounds %struct.Reg, %struct.Reg* %1863, i32 0, i32 0
  %PC.i957 = bitcast %union.anon* %1864 to i64*
  %1865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1866 = getelementptr inbounds %struct.GPR, %struct.GPR* %1865, i32 0, i32 9
  %1867 = getelementptr inbounds %struct.Reg, %struct.Reg* %1866, i32 0, i32 0
  %RSI.i958 = bitcast %union.anon* %1867 to i64*
  %1868 = load i64, i64* %RSI.i958
  %1869 = mul i64 %1868, 4
  %1870 = add i64 %1869, ptrtoint (%G_0x603aa0___rsi_4__type* @G_0x603aa0___rsi_4_ to i64)
  %1871 = load i64, i64* %PC.i957
  %1872 = add i64 %1871, 11
  store i64 %1872, i64* %PC.i957
  %1873 = inttoptr i64 %1870 to i32*
  store i32 1, i32* %1873
  store %struct.Memory* %loadMem_4009b0, %struct.Memory** %MEMORY
  %loadMem_4009bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %1874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1875 = getelementptr inbounds %struct.GPR, %struct.GPR* %1874, i32 0, i32 33
  %1876 = getelementptr inbounds %struct.Reg, %struct.Reg* %1875, i32 0, i32 0
  %PC.i954 = bitcast %union.anon* %1876 to i64*
  %1877 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1878 = getelementptr inbounds %struct.GPR, %struct.GPR* %1877, i32 0, i32 1
  %1879 = getelementptr inbounds %struct.Reg, %struct.Reg* %1878, i32 0, i32 0
  %RAX.i955 = bitcast %union.anon* %1879 to i64*
  %1880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1881 = getelementptr inbounds %struct.GPR, %struct.GPR* %1880, i32 0, i32 15
  %1882 = getelementptr inbounds %struct.Reg, %struct.Reg* %1881, i32 0, i32 0
  %RBP.i956 = bitcast %union.anon* %1882 to i64*
  %1883 = load i64, i64* %RBP.i956
  %1884 = sub i64 %1883, 12
  %1885 = load i64, i64* %PC.i954
  %1886 = add i64 %1885, 3
  store i64 %1886, i64* %PC.i954
  %1887 = inttoptr i64 %1884 to i32*
  %1888 = load i32, i32* %1887
  %1889 = zext i32 %1888 to i64
  store i64 %1889, i64* %RAX.i955, align 8
  store %struct.Memory* %loadMem_4009bb, %struct.Memory** %MEMORY
  %loadMem_4009be = load %struct.Memory*, %struct.Memory** %MEMORY
  %1890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1891 = getelementptr inbounds %struct.GPR, %struct.GPR* %1890, i32 0, i32 33
  %1892 = getelementptr inbounds %struct.Reg, %struct.Reg* %1891, i32 0, i32 0
  %PC.i952 = bitcast %union.anon* %1892 to i64*
  %1893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1894 = getelementptr inbounds %struct.GPR, %struct.GPR* %1893, i32 0, i32 1
  %1895 = getelementptr inbounds %struct.Reg, %struct.Reg* %1894, i32 0, i32 0
  %RAX.i953 = bitcast %union.anon* %1895 to i64*
  %1896 = load i64, i64* %RAX.i953
  %1897 = load i64, i64* %PC.i952
  %1898 = add i64 %1897, 3
  store i64 %1898, i64* %PC.i952
  %1899 = trunc i64 %1896 to i32
  %1900 = add i32 1, %1899
  %1901 = zext i32 %1900 to i64
  store i64 %1901, i64* %RAX.i953, align 8
  %1902 = icmp ult i32 %1900, %1899
  %1903 = icmp ult i32 %1900, 1
  %1904 = or i1 %1902, %1903
  %1905 = zext i1 %1904 to i8
  %1906 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1905, i8* %1906, align 1
  %1907 = and i32 %1900, 255
  %1908 = call i32 @llvm.ctpop.i32(i32 %1907)
  %1909 = trunc i32 %1908 to i8
  %1910 = and i8 %1909, 1
  %1911 = xor i8 %1910, 1
  %1912 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1911, i8* %1912, align 1
  %1913 = xor i64 1, %1896
  %1914 = trunc i64 %1913 to i32
  %1915 = xor i32 %1914, %1900
  %1916 = lshr i32 %1915, 4
  %1917 = trunc i32 %1916 to i8
  %1918 = and i8 %1917, 1
  %1919 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1918, i8* %1919, align 1
  %1920 = icmp eq i32 %1900, 0
  %1921 = zext i1 %1920 to i8
  %1922 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1921, i8* %1922, align 1
  %1923 = lshr i32 %1900, 31
  %1924 = trunc i32 %1923 to i8
  %1925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1924, i8* %1925, align 1
  %1926 = lshr i32 %1899, 31
  %1927 = xor i32 %1923, %1926
  %1928 = add i32 %1927, %1923
  %1929 = icmp eq i32 %1928, 2
  %1930 = zext i1 %1929 to i8
  %1931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1930, i8* %1931, align 1
  store %struct.Memory* %loadMem_4009be, %struct.Memory** %MEMORY
  %loadMem_4009c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1933 = getelementptr inbounds %struct.GPR, %struct.GPR* %1932, i32 0, i32 33
  %1934 = getelementptr inbounds %struct.Reg, %struct.Reg* %1933, i32 0, i32 0
  %PC.i949 = bitcast %union.anon* %1934 to i64*
  %1935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1936 = getelementptr inbounds %struct.GPR, %struct.GPR* %1935, i32 0, i32 1
  %1937 = getelementptr inbounds %struct.Reg, %struct.Reg* %1936, i32 0, i32 0
  %EAX.i950 = bitcast %union.anon* %1937 to i32*
  %1938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1939 = getelementptr inbounds %struct.GPR, %struct.GPR* %1938, i32 0, i32 15
  %1940 = getelementptr inbounds %struct.Reg, %struct.Reg* %1939, i32 0, i32 0
  %RBP.i951 = bitcast %union.anon* %1940 to i64*
  %1941 = load i64, i64* %RBP.i951
  %1942 = sub i64 %1941, 12
  %1943 = load i32, i32* %EAX.i950
  %1944 = zext i32 %1943 to i64
  %1945 = load i64, i64* %PC.i949
  %1946 = add i64 %1945, 3
  store i64 %1946, i64* %PC.i949
  %1947 = inttoptr i64 %1942 to i32*
  store i32 %1943, i32* %1947
  store %struct.Memory* %loadMem_4009c1, %struct.Memory** %MEMORY
  %loadMem_4009c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1949 = getelementptr inbounds %struct.GPR, %struct.GPR* %1948, i32 0, i32 33
  %1950 = getelementptr inbounds %struct.Reg, %struct.Reg* %1949, i32 0, i32 0
  %PC.i948 = bitcast %union.anon* %1950 to i64*
  %1951 = load i64, i64* %PC.i948
  %1952 = add i64 %1951, -52
  %1953 = load i64, i64* %PC.i948
  %1954 = add i64 %1953, 5
  store i64 %1954, i64* %PC.i948
  %1955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1952, i64* %1955, align 8
  store %struct.Memory* %loadMem_4009c4, %struct.Memory** %MEMORY
  br label %block_.L_400990

block_.L_4009c9:                                  ; preds = %block_.L_400990
  %loadMem_4009c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1957 = getelementptr inbounds %struct.GPR, %struct.GPR* %1956, i32 0, i32 33
  %1958 = getelementptr inbounds %struct.Reg, %struct.Reg* %1957, i32 0, i32 0
  %PC.i947 = bitcast %union.anon* %1958 to i64*
  %1959 = load i64, i64* %PC.i947
  %1960 = add i64 %1959, 5
  %1961 = load i64, i64* %PC.i947
  %1962 = add i64 %1961, 5
  store i64 %1962, i64* %PC.i947
  %1963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1960, i64* %1963, align 8
  store %struct.Memory* %loadMem_4009c9, %struct.Memory** %MEMORY
  br label %block_.L_4009ce

block_.L_4009ce:                                  ; preds = %block_.L_4009c9
  %loadMem_4009ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %1964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1965 = getelementptr inbounds %struct.GPR, %struct.GPR* %1964, i32 0, i32 33
  %1966 = getelementptr inbounds %struct.Reg, %struct.Reg* %1965, i32 0, i32 0
  %PC.i944 = bitcast %union.anon* %1966 to i64*
  %1967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1968 = getelementptr inbounds %struct.GPR, %struct.GPR* %1967, i32 0, i32 1
  %1969 = getelementptr inbounds %struct.Reg, %struct.Reg* %1968, i32 0, i32 0
  %RAX.i945 = bitcast %union.anon* %1969 to i64*
  %1970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1971 = getelementptr inbounds %struct.GPR, %struct.GPR* %1970, i32 0, i32 15
  %1972 = getelementptr inbounds %struct.Reg, %struct.Reg* %1971, i32 0, i32 0
  %RBP.i946 = bitcast %union.anon* %1972 to i64*
  %1973 = load i64, i64* %RBP.i946
  %1974 = sub i64 %1973, 8
  %1975 = load i64, i64* %PC.i944
  %1976 = add i64 %1975, 3
  store i64 %1976, i64* %PC.i944
  %1977 = inttoptr i64 %1974 to i32*
  %1978 = load i32, i32* %1977
  %1979 = zext i32 %1978 to i64
  store i64 %1979, i64* %RAX.i945, align 8
  store %struct.Memory* %loadMem_4009ce, %struct.Memory** %MEMORY
  %loadMem_4009d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1980 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1981 = getelementptr inbounds %struct.GPR, %struct.GPR* %1980, i32 0, i32 33
  %1982 = getelementptr inbounds %struct.Reg, %struct.Reg* %1981, i32 0, i32 0
  %PC.i942 = bitcast %union.anon* %1982 to i64*
  %1983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1984 = getelementptr inbounds %struct.GPR, %struct.GPR* %1983, i32 0, i32 1
  %1985 = getelementptr inbounds %struct.Reg, %struct.Reg* %1984, i32 0, i32 0
  %RAX.i943 = bitcast %union.anon* %1985 to i64*
  %1986 = load i64, i64* %RAX.i943
  %1987 = load i64, i64* %PC.i942
  %1988 = add i64 %1987, 3
  store i64 %1988, i64* %PC.i942
  %1989 = trunc i64 %1986 to i32
  %1990 = add i32 1, %1989
  %1991 = zext i32 %1990 to i64
  store i64 %1991, i64* %RAX.i943, align 8
  %1992 = icmp ult i32 %1990, %1989
  %1993 = icmp ult i32 %1990, 1
  %1994 = or i1 %1992, %1993
  %1995 = zext i1 %1994 to i8
  %1996 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1995, i8* %1996, align 1
  %1997 = and i32 %1990, 255
  %1998 = call i32 @llvm.ctpop.i32(i32 %1997)
  %1999 = trunc i32 %1998 to i8
  %2000 = and i8 %1999, 1
  %2001 = xor i8 %2000, 1
  %2002 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2001, i8* %2002, align 1
  %2003 = xor i64 1, %1986
  %2004 = trunc i64 %2003 to i32
  %2005 = xor i32 %2004, %1990
  %2006 = lshr i32 %2005, 4
  %2007 = trunc i32 %2006 to i8
  %2008 = and i8 %2007, 1
  %2009 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2008, i8* %2009, align 1
  %2010 = icmp eq i32 %1990, 0
  %2011 = zext i1 %2010 to i8
  %2012 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2011, i8* %2012, align 1
  %2013 = lshr i32 %1990, 31
  %2014 = trunc i32 %2013 to i8
  %2015 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2014, i8* %2015, align 1
  %2016 = lshr i32 %1989, 31
  %2017 = xor i32 %2013, %2016
  %2018 = add i32 %2017, %2013
  %2019 = icmp eq i32 %2018, 2
  %2020 = zext i1 %2019 to i8
  %2021 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2020, i8* %2021, align 1
  store %struct.Memory* %loadMem_4009d1, %struct.Memory** %MEMORY
  %loadMem_4009d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2023 = getelementptr inbounds %struct.GPR, %struct.GPR* %2022, i32 0, i32 33
  %2024 = getelementptr inbounds %struct.Reg, %struct.Reg* %2023, i32 0, i32 0
  %PC.i939 = bitcast %union.anon* %2024 to i64*
  %2025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2026 = getelementptr inbounds %struct.GPR, %struct.GPR* %2025, i32 0, i32 1
  %2027 = getelementptr inbounds %struct.Reg, %struct.Reg* %2026, i32 0, i32 0
  %EAX.i940 = bitcast %union.anon* %2027 to i32*
  %2028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2029 = getelementptr inbounds %struct.GPR, %struct.GPR* %2028, i32 0, i32 15
  %2030 = getelementptr inbounds %struct.Reg, %struct.Reg* %2029, i32 0, i32 0
  %RBP.i941 = bitcast %union.anon* %2030 to i64*
  %2031 = load i64, i64* %RBP.i941
  %2032 = sub i64 %2031, 8
  %2033 = load i32, i32* %EAX.i940
  %2034 = zext i32 %2033 to i64
  %2035 = load i64, i64* %PC.i939
  %2036 = add i64 %2035, 3
  store i64 %2036, i64* %PC.i939
  %2037 = inttoptr i64 %2032 to i32*
  store i32 %2033, i32* %2037
  store %struct.Memory* %loadMem_4009d4, %struct.Memory** %MEMORY
  %loadMem_4009d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2039 = getelementptr inbounds %struct.GPR, %struct.GPR* %2038, i32 0, i32 33
  %2040 = getelementptr inbounds %struct.Reg, %struct.Reg* %2039, i32 0, i32 0
  %PC.i938 = bitcast %union.anon* %2040 to i64*
  %2041 = load i64, i64* %PC.i938
  %2042 = add i64 %2041, -88
  %2043 = load i64, i64* %PC.i938
  %2044 = add i64 %2043, 5
  store i64 %2044, i64* %PC.i938
  %2045 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2042, i64* %2045, align 8
  store %struct.Memory* %loadMem_4009d7, %struct.Memory** %MEMORY
  br label %block_.L_40097f

block_.L_4009dc:                                  ; preds = %block_.L_40097f
  %loadMem_4009dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %2046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2047 = getelementptr inbounds %struct.GPR, %struct.GPR* %2046, i32 0, i32 33
  %2048 = getelementptr inbounds %struct.Reg, %struct.Reg* %2047, i32 0, i32 0
  %PC.i937 = bitcast %union.anon* %2048 to i64*
  %2049 = load i64, i64* %PC.i937
  %2050 = add i64 %2049, 5
  %2051 = load i64, i64* %PC.i937
  %2052 = add i64 %2051, 5
  store i64 %2052, i64* %PC.i937
  %2053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2050, i64* %2053, align 8
  store %struct.Memory* %loadMem_4009dc, %struct.Memory** %MEMORY
  br label %block_.L_4009e1

block_.L_4009e1:                                  ; preds = %block_.L_4009dc
  %loadMem_4009e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2055 = getelementptr inbounds %struct.GPR, %struct.GPR* %2054, i32 0, i32 33
  %2056 = getelementptr inbounds %struct.Reg, %struct.Reg* %2055, i32 0, i32 0
  %PC.i934 = bitcast %union.anon* %2056 to i64*
  %2057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2058 = getelementptr inbounds %struct.GPR, %struct.GPR* %2057, i32 0, i32 1
  %2059 = getelementptr inbounds %struct.Reg, %struct.Reg* %2058, i32 0, i32 0
  %RAX.i935 = bitcast %union.anon* %2059 to i64*
  %2060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2061 = getelementptr inbounds %struct.GPR, %struct.GPR* %2060, i32 0, i32 15
  %2062 = getelementptr inbounds %struct.Reg, %struct.Reg* %2061, i32 0, i32 0
  %RBP.i936 = bitcast %union.anon* %2062 to i64*
  %2063 = load i64, i64* %RBP.i936
  %2064 = sub i64 %2063, 4
  %2065 = load i64, i64* %PC.i934
  %2066 = add i64 %2065, 3
  store i64 %2066, i64* %PC.i934
  %2067 = inttoptr i64 %2064 to i32*
  %2068 = load i32, i32* %2067
  %2069 = zext i32 %2068 to i64
  store i64 %2069, i64* %RAX.i935, align 8
  store %struct.Memory* %loadMem_4009e1, %struct.Memory** %MEMORY
  %loadMem_4009e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2071 = getelementptr inbounds %struct.GPR, %struct.GPR* %2070, i32 0, i32 33
  %2072 = getelementptr inbounds %struct.Reg, %struct.Reg* %2071, i32 0, i32 0
  %PC.i932 = bitcast %union.anon* %2072 to i64*
  %2073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2074 = getelementptr inbounds %struct.GPR, %struct.GPR* %2073, i32 0, i32 1
  %2075 = getelementptr inbounds %struct.Reg, %struct.Reg* %2074, i32 0, i32 0
  %RAX.i933 = bitcast %union.anon* %2075 to i64*
  %2076 = load i64, i64* %RAX.i933
  %2077 = load i64, i64* %PC.i932
  %2078 = add i64 %2077, 3
  store i64 %2078, i64* %PC.i932
  %2079 = trunc i64 %2076 to i32
  %2080 = add i32 1, %2079
  %2081 = zext i32 %2080 to i64
  store i64 %2081, i64* %RAX.i933, align 8
  %2082 = icmp ult i32 %2080, %2079
  %2083 = icmp ult i32 %2080, 1
  %2084 = or i1 %2082, %2083
  %2085 = zext i1 %2084 to i8
  %2086 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2085, i8* %2086, align 1
  %2087 = and i32 %2080, 255
  %2088 = call i32 @llvm.ctpop.i32(i32 %2087)
  %2089 = trunc i32 %2088 to i8
  %2090 = and i8 %2089, 1
  %2091 = xor i8 %2090, 1
  %2092 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2091, i8* %2092, align 1
  %2093 = xor i64 1, %2076
  %2094 = trunc i64 %2093 to i32
  %2095 = xor i32 %2094, %2080
  %2096 = lshr i32 %2095, 4
  %2097 = trunc i32 %2096 to i8
  %2098 = and i8 %2097, 1
  %2099 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2098, i8* %2099, align 1
  %2100 = icmp eq i32 %2080, 0
  %2101 = zext i1 %2100 to i8
  %2102 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2101, i8* %2102, align 1
  %2103 = lshr i32 %2080, 31
  %2104 = trunc i32 %2103 to i8
  %2105 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2104, i8* %2105, align 1
  %2106 = lshr i32 %2079, 31
  %2107 = xor i32 %2103, %2106
  %2108 = add i32 %2107, %2103
  %2109 = icmp eq i32 %2108, 2
  %2110 = zext i1 %2109 to i8
  %2111 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2110, i8* %2111, align 1
  store %struct.Memory* %loadMem_4009e4, %struct.Memory** %MEMORY
  %loadMem_4009e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2113 = getelementptr inbounds %struct.GPR, %struct.GPR* %2112, i32 0, i32 33
  %2114 = getelementptr inbounds %struct.Reg, %struct.Reg* %2113, i32 0, i32 0
  %PC.i929 = bitcast %union.anon* %2114 to i64*
  %2115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2116 = getelementptr inbounds %struct.GPR, %struct.GPR* %2115, i32 0, i32 1
  %2117 = getelementptr inbounds %struct.Reg, %struct.Reg* %2116, i32 0, i32 0
  %EAX.i930 = bitcast %union.anon* %2117 to i32*
  %2118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2119 = getelementptr inbounds %struct.GPR, %struct.GPR* %2118, i32 0, i32 15
  %2120 = getelementptr inbounds %struct.Reg, %struct.Reg* %2119, i32 0, i32 0
  %RBP.i931 = bitcast %union.anon* %2120 to i64*
  %2121 = load i64, i64* %RBP.i931
  %2122 = sub i64 %2121, 4
  %2123 = load i32, i32* %EAX.i930
  %2124 = zext i32 %2123 to i64
  %2125 = load i64, i64* %PC.i929
  %2126 = add i64 %2125, 3
  store i64 %2126, i64* %PC.i929
  %2127 = inttoptr i64 %2122 to i32*
  store i32 %2123, i32* %2127
  store %struct.Memory* %loadMem_4009e7, %struct.Memory** %MEMORY
  %loadMem_4009ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %2128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2129 = getelementptr inbounds %struct.GPR, %struct.GPR* %2128, i32 0, i32 33
  %2130 = getelementptr inbounds %struct.Reg, %struct.Reg* %2129, i32 0, i32 0
  %PC.i928 = bitcast %union.anon* %2130 to i64*
  %2131 = load i64, i64* %PC.i928
  %2132 = add i64 %2131, -124
  %2133 = load i64, i64* %PC.i928
  %2134 = add i64 %2133, 5
  store i64 %2134, i64* %PC.i928
  %2135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2132, i64* %2135, align 8
  store %struct.Memory* %loadMem_4009ea, %struct.Memory** %MEMORY
  br label %block_.L_40096e

block_.L_4009ef:                                  ; preds = %block_.L_40096e
  %loadMem_4009ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %2136 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2137 = getelementptr inbounds %struct.GPR, %struct.GPR* %2136, i32 0, i32 33
  %2138 = getelementptr inbounds %struct.Reg, %struct.Reg* %2137, i32 0, i32 0
  %PC.i927 = bitcast %union.anon* %2138 to i64*
  %2139 = load i64, i64* %PC.i927
  %2140 = add i64 %2139, 11
  store i64 %2140, i64* %PC.i927
  store i32 0, i32* bitcast (%G_0x6191f0_type* @G_0x6191f0 to i32*)
  store %struct.Memory* %loadMem_4009ef, %struct.Memory** %MEMORY
  %loadMem_4009fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %2141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2142 = getelementptr inbounds %struct.GPR, %struct.GPR* %2141, i32 0, i32 33
  %2143 = getelementptr inbounds %struct.Reg, %struct.Reg* %2142, i32 0, i32 0
  %PC.i926 = bitcast %union.anon* %2143 to i64*
  %2144 = load i64, i64* %PC.i926
  %2145 = add i64 %2144, 11
  store i64 %2145, i64* %PC.i926
  store i32 11, i32* bitcast (%G_0x610250_type* @G_0x610250 to i32*)
  store %struct.Memory* %loadMem_4009fa, %struct.Memory** %MEMORY
  %loadMem_400a05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2147 = getelementptr inbounds %struct.GPR, %struct.GPR* %2146, i32 0, i32 33
  %2148 = getelementptr inbounds %struct.Reg, %struct.Reg* %2147, i32 0, i32 0
  %PC.i924 = bitcast %union.anon* %2148 to i64*
  %2149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2150 = getelementptr inbounds %struct.GPR, %struct.GPR* %2149, i32 0, i32 15
  %2151 = getelementptr inbounds %struct.Reg, %struct.Reg* %2150, i32 0, i32 0
  %RBP.i925 = bitcast %union.anon* %2151 to i64*
  %2152 = load i64, i64* %RBP.i925
  %2153 = sub i64 %2152, 4
  %2154 = load i64, i64* %PC.i924
  %2155 = add i64 %2154, 7
  store i64 %2155, i64* %PC.i924
  %2156 = inttoptr i64 %2153 to i32*
  store i32 0, i32* %2156
  store %struct.Memory* %loadMem_400a05, %struct.Memory** %MEMORY
  br label %block_.L_400a0c

block_.L_400a0c:                                  ; preds = %block_.L_400a7f, %block_.L_4009ef
  %loadMem_400a0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2158 = getelementptr inbounds %struct.GPR, %struct.GPR* %2157, i32 0, i32 33
  %2159 = getelementptr inbounds %struct.Reg, %struct.Reg* %2158, i32 0, i32 0
  %PC.i922 = bitcast %union.anon* %2159 to i64*
  %2160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2161 = getelementptr inbounds %struct.GPR, %struct.GPR* %2160, i32 0, i32 15
  %2162 = getelementptr inbounds %struct.Reg, %struct.Reg* %2161, i32 0, i32 0
  %RBP.i923 = bitcast %union.anon* %2162 to i64*
  %2163 = load i64, i64* %RBP.i923
  %2164 = sub i64 %2163, 4
  %2165 = load i64, i64* %PC.i922
  %2166 = add i64 %2165, 4
  store i64 %2166, i64* %PC.i922
  %2167 = inttoptr i64 %2164 to i32*
  %2168 = load i32, i32* %2167
  %2169 = sub i32 %2168, 1
  %2170 = icmp ult i32 %2168, 1
  %2171 = zext i1 %2170 to i8
  %2172 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2171, i8* %2172, align 1
  %2173 = and i32 %2169, 255
  %2174 = call i32 @llvm.ctpop.i32(i32 %2173)
  %2175 = trunc i32 %2174 to i8
  %2176 = and i8 %2175, 1
  %2177 = xor i8 %2176, 1
  %2178 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2177, i8* %2178, align 1
  %2179 = xor i32 %2168, 1
  %2180 = xor i32 %2179, %2169
  %2181 = lshr i32 %2180, 4
  %2182 = trunc i32 %2181 to i8
  %2183 = and i8 %2182, 1
  %2184 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2183, i8* %2184, align 1
  %2185 = icmp eq i32 %2169, 0
  %2186 = zext i1 %2185 to i8
  %2187 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2186, i8* %2187, align 1
  %2188 = lshr i32 %2169, 31
  %2189 = trunc i32 %2188 to i8
  %2190 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2189, i8* %2190, align 1
  %2191 = lshr i32 %2168, 31
  %2192 = xor i32 %2188, %2191
  %2193 = add i32 %2192, %2191
  %2194 = icmp eq i32 %2193, 2
  %2195 = zext i1 %2194 to i8
  %2196 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2195, i8* %2196, align 1
  store %struct.Memory* %loadMem_400a0c, %struct.Memory** %MEMORY
  %loadMem_400a10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2197 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2198 = getelementptr inbounds %struct.GPR, %struct.GPR* %2197, i32 0, i32 33
  %2199 = getelementptr inbounds %struct.Reg, %struct.Reg* %2198, i32 0, i32 0
  %PC.i921 = bitcast %union.anon* %2199 to i64*
  %2200 = load i64, i64* %PC.i921
  %2201 = add i64 %2200, 125
  %2202 = load i64, i64* %PC.i921
  %2203 = add i64 %2202, 6
  %2204 = load i64, i64* %PC.i921
  %2205 = add i64 %2204, 6
  store i64 %2205, i64* %PC.i921
  %2206 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2207 = load i8, i8* %2206, align 1
  %2208 = icmp eq i8 %2207, 0
  %2209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2210 = load i8, i8* %2209, align 1
  %2211 = icmp ne i8 %2210, 0
  %2212 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2213 = load i8, i8* %2212, align 1
  %2214 = icmp ne i8 %2213, 0
  %2215 = xor i1 %2211, %2214
  %2216 = xor i1 %2215, true
  %2217 = and i1 %2208, %2216
  %2218 = zext i1 %2217 to i8
  store i8 %2218, i8* %BRANCH_TAKEN, align 1
  %2219 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2220 = select i1 %2217, i64 %2201, i64 %2203
  store i64 %2220, i64* %2219, align 8
  store %struct.Memory* %loadMem_400a10, %struct.Memory** %MEMORY
  %loadBr_400a10 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400a10 = icmp eq i8 %loadBr_400a10, 1
  br i1 %cmpBr_400a10, label %block_.L_400a8d, label %block_400a16

block_400a16:                                     ; preds = %block_.L_400a0c
  %loadMem_400a16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2222 = getelementptr inbounds %struct.GPR, %struct.GPR* %2221, i32 0, i32 33
  %2223 = getelementptr inbounds %struct.Reg, %struct.Reg* %2222, i32 0, i32 0
  %PC.i919 = bitcast %union.anon* %2223 to i64*
  %2224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2225 = getelementptr inbounds %struct.GPR, %struct.GPR* %2224, i32 0, i32 15
  %2226 = getelementptr inbounds %struct.Reg, %struct.Reg* %2225, i32 0, i32 0
  %RBP.i920 = bitcast %union.anon* %2226 to i64*
  %2227 = load i64, i64* %RBP.i920
  %2228 = sub i64 %2227, 8
  %2229 = load i64, i64* %PC.i919
  %2230 = add i64 %2229, 7
  store i64 %2230, i64* %PC.i919
  %2231 = inttoptr i64 %2228 to i32*
  store i32 0, i32* %2231
  store %struct.Memory* %loadMem_400a16, %struct.Memory** %MEMORY
  br label %block_.L_400a1d

block_.L_400a1d:                                  ; preds = %block_.L_400a6c, %block_400a16
  %loadMem_400a1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2233 = getelementptr inbounds %struct.GPR, %struct.GPR* %2232, i32 0, i32 33
  %2234 = getelementptr inbounds %struct.Reg, %struct.Reg* %2233, i32 0, i32 0
  %PC.i917 = bitcast %union.anon* %2234 to i64*
  %2235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2236 = getelementptr inbounds %struct.GPR, %struct.GPR* %2235, i32 0, i32 15
  %2237 = getelementptr inbounds %struct.Reg, %struct.Reg* %2236, i32 0, i32 0
  %RBP.i918 = bitcast %union.anon* %2237 to i64*
  %2238 = load i64, i64* %RBP.i918
  %2239 = sub i64 %2238, 8
  %2240 = load i64, i64* %PC.i917
  %2241 = add i64 %2240, 4
  store i64 %2241, i64* %PC.i917
  %2242 = inttoptr i64 %2239 to i32*
  %2243 = load i32, i32* %2242
  %2244 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2244, align 1
  %2245 = and i32 %2243, 255
  %2246 = call i32 @llvm.ctpop.i32(i32 %2245)
  %2247 = trunc i32 %2246 to i8
  %2248 = and i8 %2247, 1
  %2249 = xor i8 %2248, 1
  %2250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2249, i8* %2250, align 1
  %2251 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2251, align 1
  %2252 = icmp eq i32 %2243, 0
  %2253 = zext i1 %2252 to i8
  %2254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2253, i8* %2254, align 1
  %2255 = lshr i32 %2243, 31
  %2256 = trunc i32 %2255 to i8
  %2257 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2256, i8* %2257, align 1
  %2258 = lshr i32 %2243, 31
  %2259 = xor i32 %2255, %2258
  %2260 = add i32 %2259, %2258
  %2261 = icmp eq i32 %2260, 2
  %2262 = zext i1 %2261 to i8
  %2263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2262, i8* %2263, align 1
  store %struct.Memory* %loadMem_400a1d, %struct.Memory** %MEMORY
  %loadMem_400a21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2265 = getelementptr inbounds %struct.GPR, %struct.GPR* %2264, i32 0, i32 33
  %2266 = getelementptr inbounds %struct.Reg, %struct.Reg* %2265, i32 0, i32 0
  %PC.i916 = bitcast %union.anon* %2266 to i64*
  %2267 = load i64, i64* %PC.i916
  %2268 = add i64 %2267, 89
  %2269 = load i64, i64* %PC.i916
  %2270 = add i64 %2269, 6
  %2271 = load i64, i64* %PC.i916
  %2272 = add i64 %2271, 6
  store i64 %2272, i64* %PC.i916
  %2273 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2274 = load i8, i8* %2273, align 1
  %2275 = icmp eq i8 %2274, 0
  %2276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2277 = load i8, i8* %2276, align 1
  %2278 = icmp ne i8 %2277, 0
  %2279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2280 = load i8, i8* %2279, align 1
  %2281 = icmp ne i8 %2280, 0
  %2282 = xor i1 %2278, %2281
  %2283 = xor i1 %2282, true
  %2284 = and i1 %2275, %2283
  %2285 = zext i1 %2284 to i8
  store i8 %2285, i8* %BRANCH_TAKEN, align 1
  %2286 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2287 = select i1 %2284, i64 %2268, i64 %2270
  store i64 %2287, i64* %2286, align 8
  store %struct.Memory* %loadMem_400a21, %struct.Memory** %MEMORY
  %loadBr_400a21 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400a21 = icmp eq i8 %loadBr_400a21, 1
  br i1 %cmpBr_400a21, label %block_.L_400a7a, label %block_400a27

block_400a27:                                     ; preds = %block_.L_400a1d
  %loadMem_400a27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2289 = getelementptr inbounds %struct.GPR, %struct.GPR* %2288, i32 0, i32 33
  %2290 = getelementptr inbounds %struct.Reg, %struct.Reg* %2289, i32 0, i32 0
  %PC.i914 = bitcast %union.anon* %2290 to i64*
  %2291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2292 = getelementptr inbounds %struct.GPR, %struct.GPR* %2291, i32 0, i32 15
  %2293 = getelementptr inbounds %struct.Reg, %struct.Reg* %2292, i32 0, i32 0
  %RBP.i915 = bitcast %union.anon* %2293 to i64*
  %2294 = load i64, i64* %RBP.i915
  %2295 = sub i64 %2294, 12
  %2296 = load i64, i64* %PC.i914
  %2297 = add i64 %2296, 7
  store i64 %2297, i64* %PC.i914
  %2298 = inttoptr i64 %2295 to i32*
  store i32 0, i32* %2298
  store %struct.Memory* %loadMem_400a27, %struct.Memory** %MEMORY
  br label %block_.L_400a2e

block_.L_400a2e:                                  ; preds = %block_400a38, %block_400a27
  %loadMem_400a2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2300 = getelementptr inbounds %struct.GPR, %struct.GPR* %2299, i32 0, i32 33
  %2301 = getelementptr inbounds %struct.Reg, %struct.Reg* %2300, i32 0, i32 0
  %PC.i912 = bitcast %union.anon* %2301 to i64*
  %2302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2303 = getelementptr inbounds %struct.GPR, %struct.GPR* %2302, i32 0, i32 15
  %2304 = getelementptr inbounds %struct.Reg, %struct.Reg* %2303, i32 0, i32 0
  %RBP.i913 = bitcast %union.anon* %2304 to i64*
  %2305 = load i64, i64* %RBP.i913
  %2306 = sub i64 %2305, 12
  %2307 = load i64, i64* %PC.i912
  %2308 = add i64 %2307, 4
  store i64 %2308, i64* %PC.i912
  %2309 = inttoptr i64 %2306 to i32*
  %2310 = load i32, i32* %2309
  %2311 = sub i32 %2310, 3
  %2312 = icmp ult i32 %2310, 3
  %2313 = zext i1 %2312 to i8
  %2314 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2313, i8* %2314, align 1
  %2315 = and i32 %2311, 255
  %2316 = call i32 @llvm.ctpop.i32(i32 %2315)
  %2317 = trunc i32 %2316 to i8
  %2318 = and i8 %2317, 1
  %2319 = xor i8 %2318, 1
  %2320 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2319, i8* %2320, align 1
  %2321 = xor i32 %2310, 3
  %2322 = xor i32 %2321, %2311
  %2323 = lshr i32 %2322, 4
  %2324 = trunc i32 %2323 to i8
  %2325 = and i8 %2324, 1
  %2326 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2325, i8* %2326, align 1
  %2327 = icmp eq i32 %2311, 0
  %2328 = zext i1 %2327 to i8
  %2329 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2328, i8* %2329, align 1
  %2330 = lshr i32 %2311, 31
  %2331 = trunc i32 %2330 to i8
  %2332 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2331, i8* %2332, align 1
  %2333 = lshr i32 %2310, 31
  %2334 = xor i32 %2330, %2333
  %2335 = add i32 %2334, %2333
  %2336 = icmp eq i32 %2335, 2
  %2337 = zext i1 %2336 to i8
  %2338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2337, i8* %2338, align 1
  store %struct.Memory* %loadMem_400a2e, %struct.Memory** %MEMORY
  %loadMem_400a32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2340 = getelementptr inbounds %struct.GPR, %struct.GPR* %2339, i32 0, i32 33
  %2341 = getelementptr inbounds %struct.Reg, %struct.Reg* %2340, i32 0, i32 0
  %PC.i911 = bitcast %union.anon* %2341 to i64*
  %2342 = load i64, i64* %PC.i911
  %2343 = add i64 %2342, 53
  %2344 = load i64, i64* %PC.i911
  %2345 = add i64 %2344, 6
  %2346 = load i64, i64* %PC.i911
  %2347 = add i64 %2346, 6
  store i64 %2347, i64* %PC.i911
  %2348 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2349 = load i8, i8* %2348, align 1
  %2350 = icmp eq i8 %2349, 0
  %2351 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2352 = load i8, i8* %2351, align 1
  %2353 = icmp ne i8 %2352, 0
  %2354 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2355 = load i8, i8* %2354, align 1
  %2356 = icmp ne i8 %2355, 0
  %2357 = xor i1 %2353, %2356
  %2358 = xor i1 %2357, true
  %2359 = and i1 %2350, %2358
  %2360 = zext i1 %2359 to i8
  store i8 %2360, i8* %BRANCH_TAKEN, align 1
  %2361 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2362 = select i1 %2359, i64 %2343, i64 %2345
  store i64 %2362, i64* %2361, align 8
  store %struct.Memory* %loadMem_400a32, %struct.Memory** %MEMORY
  %loadBr_400a32 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400a32 = icmp eq i8 %loadBr_400a32, 1
  br i1 %cmpBr_400a32, label %block_.L_400a67, label %block_400a38

block_400a38:                                     ; preds = %block_.L_400a2e
  %loadMem_400a38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2364 = getelementptr inbounds %struct.GPR, %struct.GPR* %2363, i32 0, i32 33
  %2365 = getelementptr inbounds %struct.Reg, %struct.Reg* %2364, i32 0, i32 0
  %PC.i908 = bitcast %union.anon* %2365 to i64*
  %2366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2367 = getelementptr inbounds %struct.GPR, %struct.GPR* %2366, i32 0, i32 1
  %2368 = getelementptr inbounds %struct.Reg, %struct.Reg* %2367, i32 0, i32 0
  %RAX.i909 = bitcast %union.anon* %2368 to i64*
  %2369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2370 = getelementptr inbounds %struct.GPR, %struct.GPR* %2369, i32 0, i32 15
  %2371 = getelementptr inbounds %struct.Reg, %struct.Reg* %2370, i32 0, i32 0
  %RBP.i910 = bitcast %union.anon* %2371 to i64*
  %2372 = load i64, i64* %RBP.i910
  %2373 = sub i64 %2372, 4
  %2374 = load i64, i64* %PC.i908
  %2375 = add i64 %2374, 3
  store i64 %2375, i64* %PC.i908
  %2376 = inttoptr i64 %2373 to i32*
  %2377 = load i32, i32* %2376
  %2378 = zext i32 %2377 to i64
  store i64 %2378, i64* %RAX.i909, align 8
  store %struct.Memory* %loadMem_400a38, %struct.Memory** %MEMORY
  %loadMem_400a3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2380 = getelementptr inbounds %struct.GPR, %struct.GPR* %2379, i32 0, i32 33
  %2381 = getelementptr inbounds %struct.Reg, %struct.Reg* %2380, i32 0, i32 0
  %PC.i905 = bitcast %union.anon* %2381 to i64*
  %2382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2383 = getelementptr inbounds %struct.GPR, %struct.GPR* %2382, i32 0, i32 5
  %2384 = getelementptr inbounds %struct.Reg, %struct.Reg* %2383, i32 0, i32 0
  %RCX.i906 = bitcast %union.anon* %2384 to i64*
  %2385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2386 = getelementptr inbounds %struct.GPR, %struct.GPR* %2385, i32 0, i32 15
  %2387 = getelementptr inbounds %struct.Reg, %struct.Reg* %2386, i32 0, i32 0
  %RBP.i907 = bitcast %union.anon* %2387 to i64*
  %2388 = load i64, i64* %RBP.i907
  %2389 = sub i64 %2388, 8
  %2390 = load i64, i64* %PC.i905
  %2391 = add i64 %2390, 3
  store i64 %2391, i64* %PC.i905
  %2392 = inttoptr i64 %2389 to i32*
  %2393 = load i32, i32* %2392
  %2394 = zext i32 %2393 to i64
  store i64 %2394, i64* %RCX.i906, align 8
  store %struct.Memory* %loadMem_400a3b, %struct.Memory** %MEMORY
  %loadMem_400a3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2396 = getelementptr inbounds %struct.GPR, %struct.GPR* %2395, i32 0, i32 33
  %2397 = getelementptr inbounds %struct.Reg, %struct.Reg* %2396, i32 0, i32 0
  %PC.i902 = bitcast %union.anon* %2397 to i64*
  %2398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2399 = getelementptr inbounds %struct.GPR, %struct.GPR* %2398, i32 0, i32 7
  %2400 = getelementptr inbounds %struct.Reg, %struct.Reg* %2399, i32 0, i32 0
  %RDX.i903 = bitcast %union.anon* %2400 to i64*
  %2401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2402 = getelementptr inbounds %struct.GPR, %struct.GPR* %2401, i32 0, i32 15
  %2403 = getelementptr inbounds %struct.Reg, %struct.Reg* %2402, i32 0, i32 0
  %RBP.i904 = bitcast %union.anon* %2403 to i64*
  %2404 = load i64, i64* %RBP.i904
  %2405 = sub i64 %2404, 12
  %2406 = load i64, i64* %PC.i902
  %2407 = add i64 %2406, 3
  store i64 %2407, i64* %PC.i902
  %2408 = inttoptr i64 %2405 to i32*
  %2409 = load i32, i32* %2408
  %2410 = zext i32 %2409 to i64
  store i64 %2410, i64* %RDX.i903, align 8
  store %struct.Memory* %loadMem_400a3e, %struct.Memory** %MEMORY
  %loadMem_400a41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2412 = getelementptr inbounds %struct.GPR, %struct.GPR* %2411, i32 0, i32 33
  %2413 = getelementptr inbounds %struct.Reg, %struct.Reg* %2412, i32 0, i32 0
  %PC.i900 = bitcast %union.anon* %2413 to i64*
  %2414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2415 = getelementptr inbounds %struct.GPR, %struct.GPR* %2414, i32 0, i32 7
  %2416 = getelementptr inbounds %struct.Reg, %struct.Reg* %2415, i32 0, i32 0
  %RDX.i901 = bitcast %union.anon* %2416 to i64*
  %2417 = load i64, i64* %RDX.i901
  %2418 = load i64, i64* %PC.i900
  %2419 = add i64 %2418, 3
  store i64 %2419, i64* %PC.i900
  %2420 = and i64 %2417, 4294967295
  %2421 = shl i64 %2420, 2
  %2422 = trunc i64 %2421 to i32
  %2423 = icmp slt i32 %2422, 0
  %2424 = shl i32 %2422, 1
  %2425 = zext i32 %2424 to i64
  store i64 %2425, i64* %RDX.i901, align 8
  %2426 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %2427 = zext i1 %2423 to i8
  store i8 %2427, i8* %2426, align 1
  %2428 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %2429 = and i32 %2424, 254
  %2430 = call i32 @llvm.ctpop.i32(i32 %2429)
  %2431 = trunc i32 %2430 to i8
  %2432 = and i8 %2431, 1
  %2433 = xor i8 %2432, 1
  store i8 %2433, i8* %2428, align 1
  %2434 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2434, align 1
  %2435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2436 = icmp eq i32 %2424, 0
  %2437 = zext i1 %2436 to i8
  store i8 %2437, i8* %2435, align 1
  %2438 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2439 = lshr i32 %2424, 31
  %2440 = trunc i32 %2439 to i8
  store i8 %2440, i8* %2438, align 1
  %2441 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2441, align 1
  store %struct.Memory* %loadMem_400a41, %struct.Memory** %MEMORY
  %loadMem_400a44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2443 = getelementptr inbounds %struct.GPR, %struct.GPR* %2442, i32 0, i32 33
  %2444 = getelementptr inbounds %struct.Reg, %struct.Reg* %2443, i32 0, i32 0
  %PC.i897 = bitcast %union.anon* %2444 to i64*
  %2445 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2446 = getelementptr inbounds %struct.GPR, %struct.GPR* %2445, i32 0, i32 7
  %2447 = getelementptr inbounds %struct.Reg, %struct.Reg* %2446, i32 0, i32 0
  %EDX.i898 = bitcast %union.anon* %2447 to i32*
  %2448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2449 = getelementptr inbounds %struct.GPR, %struct.GPR* %2448, i32 0, i32 5
  %2450 = getelementptr inbounds %struct.Reg, %struct.Reg* %2449, i32 0, i32 0
  %RCX.i899 = bitcast %union.anon* %2450 to i64*
  %2451 = load i64, i64* %RCX.i899
  %2452 = load i32, i32* %EDX.i898
  %2453 = zext i32 %2452 to i64
  %2454 = load i64, i64* %PC.i897
  %2455 = add i64 %2454, 2
  store i64 %2455, i64* %PC.i897
  %2456 = trunc i64 %2451 to i32
  %2457 = add i32 %2452, %2456
  %2458 = zext i32 %2457 to i64
  store i64 %2458, i64* %RCX.i899, align 8
  %2459 = icmp ult i32 %2457, %2456
  %2460 = icmp ult i32 %2457, %2452
  %2461 = or i1 %2459, %2460
  %2462 = zext i1 %2461 to i8
  %2463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2462, i8* %2463, align 1
  %2464 = and i32 %2457, 255
  %2465 = call i32 @llvm.ctpop.i32(i32 %2464)
  %2466 = trunc i32 %2465 to i8
  %2467 = and i8 %2466, 1
  %2468 = xor i8 %2467, 1
  %2469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2468, i8* %2469, align 1
  %2470 = xor i64 %2453, %2451
  %2471 = trunc i64 %2470 to i32
  %2472 = xor i32 %2471, %2457
  %2473 = lshr i32 %2472, 4
  %2474 = trunc i32 %2473 to i8
  %2475 = and i8 %2474, 1
  %2476 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2475, i8* %2476, align 1
  %2477 = icmp eq i32 %2457, 0
  %2478 = zext i1 %2477 to i8
  %2479 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2478, i8* %2479, align 1
  %2480 = lshr i32 %2457, 31
  %2481 = trunc i32 %2480 to i8
  %2482 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2481, i8* %2482, align 1
  %2483 = lshr i32 %2456, 31
  %2484 = lshr i32 %2452, 31
  %2485 = xor i32 %2480, %2483
  %2486 = xor i32 %2480, %2484
  %2487 = add i32 %2485, %2486
  %2488 = icmp eq i32 %2487, 2
  %2489 = zext i1 %2488 to i8
  %2490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2489, i8* %2490, align 1
  store %struct.Memory* %loadMem_400a44, %struct.Memory** %MEMORY
  %loadMem_400a46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2492 = getelementptr inbounds %struct.GPR, %struct.GPR* %2491, i32 0, i32 33
  %2493 = getelementptr inbounds %struct.Reg, %struct.Reg* %2492, i32 0, i32 0
  %PC.i895 = bitcast %union.anon* %2493 to i64*
  %2494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2495 = getelementptr inbounds %struct.GPR, %struct.GPR* %2494, i32 0, i32 5
  %2496 = getelementptr inbounds %struct.Reg, %struct.Reg* %2495, i32 0, i32 0
  %RCX.i896 = bitcast %union.anon* %2496 to i64*
  %2497 = load i64, i64* %RCX.i896
  %2498 = load i64, i64* %PC.i895
  %2499 = add i64 %2498, 3
  store i64 %2499, i64* %PC.i895
  %2500 = and i64 %2497, 4294967295
  %2501 = shl i64 %2500, 2
  %2502 = trunc i64 %2501 to i32
  %2503 = icmp slt i32 %2502, 0
  %2504 = shl i32 %2502, 1
  %2505 = zext i32 %2504 to i64
  store i64 %2505, i64* %RCX.i896, align 8
  %2506 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %2507 = zext i1 %2503 to i8
  store i8 %2507, i8* %2506, align 1
  %2508 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %2509 = and i32 %2504, 254
  %2510 = call i32 @llvm.ctpop.i32(i32 %2509)
  %2511 = trunc i32 %2510 to i8
  %2512 = and i8 %2511, 1
  %2513 = xor i8 %2512, 1
  store i8 %2513, i8* %2508, align 1
  %2514 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2514, align 1
  %2515 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2516 = icmp eq i32 %2504, 0
  %2517 = zext i1 %2516 to i8
  store i8 %2517, i8* %2515, align 1
  %2518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2519 = lshr i32 %2504, 31
  %2520 = trunc i32 %2519 to i8
  store i8 %2520, i8* %2518, align 1
  %2521 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2521, align 1
  store %struct.Memory* %loadMem_400a46, %struct.Memory** %MEMORY
  %loadMem_400a49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2523 = getelementptr inbounds %struct.GPR, %struct.GPR* %2522, i32 0, i32 33
  %2524 = getelementptr inbounds %struct.Reg, %struct.Reg* %2523, i32 0, i32 0
  %PC.i892 = bitcast %union.anon* %2524 to i64*
  %2525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2526 = getelementptr inbounds %struct.GPR, %struct.GPR* %2525, i32 0, i32 5
  %2527 = getelementptr inbounds %struct.Reg, %struct.Reg* %2526, i32 0, i32 0
  %ECX.i893 = bitcast %union.anon* %2527 to i32*
  %2528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2529 = getelementptr inbounds %struct.GPR, %struct.GPR* %2528, i32 0, i32 1
  %2530 = getelementptr inbounds %struct.Reg, %struct.Reg* %2529, i32 0, i32 0
  %RAX.i894 = bitcast %union.anon* %2530 to i64*
  %2531 = load i64, i64* %RAX.i894
  %2532 = load i32, i32* %ECX.i893
  %2533 = zext i32 %2532 to i64
  %2534 = load i64, i64* %PC.i892
  %2535 = add i64 %2534, 2
  store i64 %2535, i64* %PC.i892
  %2536 = trunc i64 %2531 to i32
  %2537 = add i32 %2532, %2536
  %2538 = zext i32 %2537 to i64
  store i64 %2538, i64* %RAX.i894, align 8
  %2539 = icmp ult i32 %2537, %2536
  %2540 = icmp ult i32 %2537, %2532
  %2541 = or i1 %2539, %2540
  %2542 = zext i1 %2541 to i8
  %2543 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2542, i8* %2543, align 1
  %2544 = and i32 %2537, 255
  %2545 = call i32 @llvm.ctpop.i32(i32 %2544)
  %2546 = trunc i32 %2545 to i8
  %2547 = and i8 %2546, 1
  %2548 = xor i8 %2547, 1
  %2549 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2548, i8* %2549, align 1
  %2550 = xor i64 %2533, %2531
  %2551 = trunc i64 %2550 to i32
  %2552 = xor i32 %2551, %2537
  %2553 = lshr i32 %2552, 4
  %2554 = trunc i32 %2553 to i8
  %2555 = and i8 %2554, 1
  %2556 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2555, i8* %2556, align 1
  %2557 = icmp eq i32 %2537, 0
  %2558 = zext i1 %2557 to i8
  %2559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2558, i8* %2559, align 1
  %2560 = lshr i32 %2537, 31
  %2561 = trunc i32 %2560 to i8
  %2562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2561, i8* %2562, align 1
  %2563 = lshr i32 %2536, 31
  %2564 = lshr i32 %2532, 31
  %2565 = xor i32 %2560, %2563
  %2566 = xor i32 %2560, %2564
  %2567 = add i32 %2565, %2566
  %2568 = icmp eq i32 %2567, 2
  %2569 = zext i1 %2568 to i8
  %2570 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2569, i8* %2570, align 1
  store %struct.Memory* %loadMem_400a49, %struct.Memory** %MEMORY
  %loadMem_400a4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2572 = getelementptr inbounds %struct.GPR, %struct.GPR* %2571, i32 0, i32 33
  %2573 = getelementptr inbounds %struct.Reg, %struct.Reg* %2572, i32 0, i32 0
  %PC.i889 = bitcast %union.anon* %2573 to i64*
  %2574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2575 = getelementptr inbounds %struct.GPR, %struct.GPR* %2574, i32 0, i32 1
  %2576 = getelementptr inbounds %struct.Reg, %struct.Reg* %2575, i32 0, i32 0
  %EAX.i890 = bitcast %union.anon* %2576 to i32*
  %2577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2578 = getelementptr inbounds %struct.GPR, %struct.GPR* %2577, i32 0, i32 9
  %2579 = getelementptr inbounds %struct.Reg, %struct.Reg* %2578, i32 0, i32 0
  %RSI.i891 = bitcast %union.anon* %2579 to i64*
  %2580 = load i32, i32* %EAX.i890
  %2581 = zext i32 %2580 to i64
  %2582 = load i64, i64* %PC.i889
  %2583 = add i64 %2582, 3
  store i64 %2583, i64* %PC.i889
  %2584 = shl i64 %2581, 32
  %2585 = ashr exact i64 %2584, 32
  store i64 %2585, i64* %RSI.i891, align 8
  store %struct.Memory* %loadMem_400a4b, %struct.Memory** %MEMORY
  %loadMem_400a4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2587 = getelementptr inbounds %struct.GPR, %struct.GPR* %2586, i32 0, i32 33
  %2588 = getelementptr inbounds %struct.Reg, %struct.Reg* %2587, i32 0, i32 0
  %PC.i887 = bitcast %union.anon* %2588 to i64*
  %2589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2590 = getelementptr inbounds %struct.GPR, %struct.GPR* %2589, i32 0, i32 9
  %2591 = getelementptr inbounds %struct.Reg, %struct.Reg* %2590, i32 0, i32 0
  %RSI.i888 = bitcast %union.anon* %2591 to i64*
  %2592 = load i64, i64* %RSI.i888
  %2593 = mul i64 %2592, 4
  %2594 = add i64 %2593, ptrtoint (%G_0x6042a0___rsi_4__type* @G_0x6042a0___rsi_4_ to i64)
  %2595 = load i64, i64* %PC.i887
  %2596 = add i64 %2595, 11
  store i64 %2596, i64* %PC.i887
  %2597 = inttoptr i64 %2594 to i32*
  store i32 1, i32* %2597
  store %struct.Memory* %loadMem_400a4e, %struct.Memory** %MEMORY
  %loadMem_400a59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2599 = getelementptr inbounds %struct.GPR, %struct.GPR* %2598, i32 0, i32 33
  %2600 = getelementptr inbounds %struct.Reg, %struct.Reg* %2599, i32 0, i32 0
  %PC.i884 = bitcast %union.anon* %2600 to i64*
  %2601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2602 = getelementptr inbounds %struct.GPR, %struct.GPR* %2601, i32 0, i32 1
  %2603 = getelementptr inbounds %struct.Reg, %struct.Reg* %2602, i32 0, i32 0
  %RAX.i885 = bitcast %union.anon* %2603 to i64*
  %2604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2605 = getelementptr inbounds %struct.GPR, %struct.GPR* %2604, i32 0, i32 15
  %2606 = getelementptr inbounds %struct.Reg, %struct.Reg* %2605, i32 0, i32 0
  %RBP.i886 = bitcast %union.anon* %2606 to i64*
  %2607 = load i64, i64* %RBP.i886
  %2608 = sub i64 %2607, 12
  %2609 = load i64, i64* %PC.i884
  %2610 = add i64 %2609, 3
  store i64 %2610, i64* %PC.i884
  %2611 = inttoptr i64 %2608 to i32*
  %2612 = load i32, i32* %2611
  %2613 = zext i32 %2612 to i64
  store i64 %2613, i64* %RAX.i885, align 8
  store %struct.Memory* %loadMem_400a59, %struct.Memory** %MEMORY
  %loadMem_400a5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2615 = getelementptr inbounds %struct.GPR, %struct.GPR* %2614, i32 0, i32 33
  %2616 = getelementptr inbounds %struct.Reg, %struct.Reg* %2615, i32 0, i32 0
  %PC.i882 = bitcast %union.anon* %2616 to i64*
  %2617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2618 = getelementptr inbounds %struct.GPR, %struct.GPR* %2617, i32 0, i32 1
  %2619 = getelementptr inbounds %struct.Reg, %struct.Reg* %2618, i32 0, i32 0
  %RAX.i883 = bitcast %union.anon* %2619 to i64*
  %2620 = load i64, i64* %RAX.i883
  %2621 = load i64, i64* %PC.i882
  %2622 = add i64 %2621, 3
  store i64 %2622, i64* %PC.i882
  %2623 = trunc i64 %2620 to i32
  %2624 = add i32 1, %2623
  %2625 = zext i32 %2624 to i64
  store i64 %2625, i64* %RAX.i883, align 8
  %2626 = icmp ult i32 %2624, %2623
  %2627 = icmp ult i32 %2624, 1
  %2628 = or i1 %2626, %2627
  %2629 = zext i1 %2628 to i8
  %2630 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2629, i8* %2630, align 1
  %2631 = and i32 %2624, 255
  %2632 = call i32 @llvm.ctpop.i32(i32 %2631)
  %2633 = trunc i32 %2632 to i8
  %2634 = and i8 %2633, 1
  %2635 = xor i8 %2634, 1
  %2636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2635, i8* %2636, align 1
  %2637 = xor i64 1, %2620
  %2638 = trunc i64 %2637 to i32
  %2639 = xor i32 %2638, %2624
  %2640 = lshr i32 %2639, 4
  %2641 = trunc i32 %2640 to i8
  %2642 = and i8 %2641, 1
  %2643 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2642, i8* %2643, align 1
  %2644 = icmp eq i32 %2624, 0
  %2645 = zext i1 %2644 to i8
  %2646 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2645, i8* %2646, align 1
  %2647 = lshr i32 %2624, 31
  %2648 = trunc i32 %2647 to i8
  %2649 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2648, i8* %2649, align 1
  %2650 = lshr i32 %2623, 31
  %2651 = xor i32 %2647, %2650
  %2652 = add i32 %2651, %2647
  %2653 = icmp eq i32 %2652, 2
  %2654 = zext i1 %2653 to i8
  %2655 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2654, i8* %2655, align 1
  store %struct.Memory* %loadMem_400a5c, %struct.Memory** %MEMORY
  %loadMem_400a5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2657 = getelementptr inbounds %struct.GPR, %struct.GPR* %2656, i32 0, i32 33
  %2658 = getelementptr inbounds %struct.Reg, %struct.Reg* %2657, i32 0, i32 0
  %PC.i879 = bitcast %union.anon* %2658 to i64*
  %2659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2660 = getelementptr inbounds %struct.GPR, %struct.GPR* %2659, i32 0, i32 1
  %2661 = getelementptr inbounds %struct.Reg, %struct.Reg* %2660, i32 0, i32 0
  %EAX.i880 = bitcast %union.anon* %2661 to i32*
  %2662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2663 = getelementptr inbounds %struct.GPR, %struct.GPR* %2662, i32 0, i32 15
  %2664 = getelementptr inbounds %struct.Reg, %struct.Reg* %2663, i32 0, i32 0
  %RBP.i881 = bitcast %union.anon* %2664 to i64*
  %2665 = load i64, i64* %RBP.i881
  %2666 = sub i64 %2665, 12
  %2667 = load i32, i32* %EAX.i880
  %2668 = zext i32 %2667 to i64
  %2669 = load i64, i64* %PC.i879
  %2670 = add i64 %2669, 3
  store i64 %2670, i64* %PC.i879
  %2671 = inttoptr i64 %2666 to i32*
  store i32 %2667, i32* %2671
  store %struct.Memory* %loadMem_400a5f, %struct.Memory** %MEMORY
  %loadMem_400a62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2673 = getelementptr inbounds %struct.GPR, %struct.GPR* %2672, i32 0, i32 33
  %2674 = getelementptr inbounds %struct.Reg, %struct.Reg* %2673, i32 0, i32 0
  %PC.i878 = bitcast %union.anon* %2674 to i64*
  %2675 = load i64, i64* %PC.i878
  %2676 = add i64 %2675, -52
  %2677 = load i64, i64* %PC.i878
  %2678 = add i64 %2677, 5
  store i64 %2678, i64* %PC.i878
  %2679 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2676, i64* %2679, align 8
  store %struct.Memory* %loadMem_400a62, %struct.Memory** %MEMORY
  br label %block_.L_400a2e

block_.L_400a67:                                  ; preds = %block_.L_400a2e
  %loadMem_400a67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2681 = getelementptr inbounds %struct.GPR, %struct.GPR* %2680, i32 0, i32 33
  %2682 = getelementptr inbounds %struct.Reg, %struct.Reg* %2681, i32 0, i32 0
  %PC.i877 = bitcast %union.anon* %2682 to i64*
  %2683 = load i64, i64* %PC.i877
  %2684 = add i64 %2683, 5
  %2685 = load i64, i64* %PC.i877
  %2686 = add i64 %2685, 5
  store i64 %2686, i64* %PC.i877
  %2687 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2684, i64* %2687, align 8
  store %struct.Memory* %loadMem_400a67, %struct.Memory** %MEMORY
  br label %block_.L_400a6c

block_.L_400a6c:                                  ; preds = %block_.L_400a67
  %loadMem_400a6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2689 = getelementptr inbounds %struct.GPR, %struct.GPR* %2688, i32 0, i32 33
  %2690 = getelementptr inbounds %struct.Reg, %struct.Reg* %2689, i32 0, i32 0
  %PC.i874 = bitcast %union.anon* %2690 to i64*
  %2691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2692 = getelementptr inbounds %struct.GPR, %struct.GPR* %2691, i32 0, i32 1
  %2693 = getelementptr inbounds %struct.Reg, %struct.Reg* %2692, i32 0, i32 0
  %RAX.i875 = bitcast %union.anon* %2693 to i64*
  %2694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2695 = getelementptr inbounds %struct.GPR, %struct.GPR* %2694, i32 0, i32 15
  %2696 = getelementptr inbounds %struct.Reg, %struct.Reg* %2695, i32 0, i32 0
  %RBP.i876 = bitcast %union.anon* %2696 to i64*
  %2697 = load i64, i64* %RBP.i876
  %2698 = sub i64 %2697, 8
  %2699 = load i64, i64* %PC.i874
  %2700 = add i64 %2699, 3
  store i64 %2700, i64* %PC.i874
  %2701 = inttoptr i64 %2698 to i32*
  %2702 = load i32, i32* %2701
  %2703 = zext i32 %2702 to i64
  store i64 %2703, i64* %RAX.i875, align 8
  store %struct.Memory* %loadMem_400a6c, %struct.Memory** %MEMORY
  %loadMem_400a6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2705 = getelementptr inbounds %struct.GPR, %struct.GPR* %2704, i32 0, i32 33
  %2706 = getelementptr inbounds %struct.Reg, %struct.Reg* %2705, i32 0, i32 0
  %PC.i872 = bitcast %union.anon* %2706 to i64*
  %2707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2708 = getelementptr inbounds %struct.GPR, %struct.GPR* %2707, i32 0, i32 1
  %2709 = getelementptr inbounds %struct.Reg, %struct.Reg* %2708, i32 0, i32 0
  %RAX.i873 = bitcast %union.anon* %2709 to i64*
  %2710 = load i64, i64* %RAX.i873
  %2711 = load i64, i64* %PC.i872
  %2712 = add i64 %2711, 3
  store i64 %2712, i64* %PC.i872
  %2713 = trunc i64 %2710 to i32
  %2714 = add i32 1, %2713
  %2715 = zext i32 %2714 to i64
  store i64 %2715, i64* %RAX.i873, align 8
  %2716 = icmp ult i32 %2714, %2713
  %2717 = icmp ult i32 %2714, 1
  %2718 = or i1 %2716, %2717
  %2719 = zext i1 %2718 to i8
  %2720 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2719, i8* %2720, align 1
  %2721 = and i32 %2714, 255
  %2722 = call i32 @llvm.ctpop.i32(i32 %2721)
  %2723 = trunc i32 %2722 to i8
  %2724 = and i8 %2723, 1
  %2725 = xor i8 %2724, 1
  %2726 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2725, i8* %2726, align 1
  %2727 = xor i64 1, %2710
  %2728 = trunc i64 %2727 to i32
  %2729 = xor i32 %2728, %2714
  %2730 = lshr i32 %2729, 4
  %2731 = trunc i32 %2730 to i8
  %2732 = and i8 %2731, 1
  %2733 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2732, i8* %2733, align 1
  %2734 = icmp eq i32 %2714, 0
  %2735 = zext i1 %2734 to i8
  %2736 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2735, i8* %2736, align 1
  %2737 = lshr i32 %2714, 31
  %2738 = trunc i32 %2737 to i8
  %2739 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2738, i8* %2739, align 1
  %2740 = lshr i32 %2713, 31
  %2741 = xor i32 %2737, %2740
  %2742 = add i32 %2741, %2737
  %2743 = icmp eq i32 %2742, 2
  %2744 = zext i1 %2743 to i8
  %2745 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2744, i8* %2745, align 1
  store %struct.Memory* %loadMem_400a6f, %struct.Memory** %MEMORY
  %loadMem_400a72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2747 = getelementptr inbounds %struct.GPR, %struct.GPR* %2746, i32 0, i32 33
  %2748 = getelementptr inbounds %struct.Reg, %struct.Reg* %2747, i32 0, i32 0
  %PC.i869 = bitcast %union.anon* %2748 to i64*
  %2749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2750 = getelementptr inbounds %struct.GPR, %struct.GPR* %2749, i32 0, i32 1
  %2751 = getelementptr inbounds %struct.Reg, %struct.Reg* %2750, i32 0, i32 0
  %EAX.i870 = bitcast %union.anon* %2751 to i32*
  %2752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2753 = getelementptr inbounds %struct.GPR, %struct.GPR* %2752, i32 0, i32 15
  %2754 = getelementptr inbounds %struct.Reg, %struct.Reg* %2753, i32 0, i32 0
  %RBP.i871 = bitcast %union.anon* %2754 to i64*
  %2755 = load i64, i64* %RBP.i871
  %2756 = sub i64 %2755, 8
  %2757 = load i32, i32* %EAX.i870
  %2758 = zext i32 %2757 to i64
  %2759 = load i64, i64* %PC.i869
  %2760 = add i64 %2759, 3
  store i64 %2760, i64* %PC.i869
  %2761 = inttoptr i64 %2756 to i32*
  store i32 %2757, i32* %2761
  store %struct.Memory* %loadMem_400a72, %struct.Memory** %MEMORY
  %loadMem_400a75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2763 = getelementptr inbounds %struct.GPR, %struct.GPR* %2762, i32 0, i32 33
  %2764 = getelementptr inbounds %struct.Reg, %struct.Reg* %2763, i32 0, i32 0
  %PC.i868 = bitcast %union.anon* %2764 to i64*
  %2765 = load i64, i64* %PC.i868
  %2766 = add i64 %2765, -88
  %2767 = load i64, i64* %PC.i868
  %2768 = add i64 %2767, 5
  store i64 %2768, i64* %PC.i868
  %2769 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2766, i64* %2769, align 8
  store %struct.Memory* %loadMem_400a75, %struct.Memory** %MEMORY
  br label %block_.L_400a1d

block_.L_400a7a:                                  ; preds = %block_.L_400a1d
  %loadMem_400a7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2771 = getelementptr inbounds %struct.GPR, %struct.GPR* %2770, i32 0, i32 33
  %2772 = getelementptr inbounds %struct.Reg, %struct.Reg* %2771, i32 0, i32 0
  %PC.i867 = bitcast %union.anon* %2772 to i64*
  %2773 = load i64, i64* %PC.i867
  %2774 = add i64 %2773, 5
  %2775 = load i64, i64* %PC.i867
  %2776 = add i64 %2775, 5
  store i64 %2776, i64* %PC.i867
  %2777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2774, i64* %2777, align 8
  store %struct.Memory* %loadMem_400a7a, %struct.Memory** %MEMORY
  br label %block_.L_400a7f

block_.L_400a7f:                                  ; preds = %block_.L_400a7a
  %loadMem_400a7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2779 = getelementptr inbounds %struct.GPR, %struct.GPR* %2778, i32 0, i32 33
  %2780 = getelementptr inbounds %struct.Reg, %struct.Reg* %2779, i32 0, i32 0
  %PC.i864 = bitcast %union.anon* %2780 to i64*
  %2781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2782 = getelementptr inbounds %struct.GPR, %struct.GPR* %2781, i32 0, i32 1
  %2783 = getelementptr inbounds %struct.Reg, %struct.Reg* %2782, i32 0, i32 0
  %RAX.i865 = bitcast %union.anon* %2783 to i64*
  %2784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2785 = getelementptr inbounds %struct.GPR, %struct.GPR* %2784, i32 0, i32 15
  %2786 = getelementptr inbounds %struct.Reg, %struct.Reg* %2785, i32 0, i32 0
  %RBP.i866 = bitcast %union.anon* %2786 to i64*
  %2787 = load i64, i64* %RBP.i866
  %2788 = sub i64 %2787, 4
  %2789 = load i64, i64* %PC.i864
  %2790 = add i64 %2789, 3
  store i64 %2790, i64* %PC.i864
  %2791 = inttoptr i64 %2788 to i32*
  %2792 = load i32, i32* %2791
  %2793 = zext i32 %2792 to i64
  store i64 %2793, i64* %RAX.i865, align 8
  store %struct.Memory* %loadMem_400a7f, %struct.Memory** %MEMORY
  %loadMem_400a82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2795 = getelementptr inbounds %struct.GPR, %struct.GPR* %2794, i32 0, i32 33
  %2796 = getelementptr inbounds %struct.Reg, %struct.Reg* %2795, i32 0, i32 0
  %PC.i862 = bitcast %union.anon* %2796 to i64*
  %2797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2798 = getelementptr inbounds %struct.GPR, %struct.GPR* %2797, i32 0, i32 1
  %2799 = getelementptr inbounds %struct.Reg, %struct.Reg* %2798, i32 0, i32 0
  %RAX.i863 = bitcast %union.anon* %2799 to i64*
  %2800 = load i64, i64* %RAX.i863
  %2801 = load i64, i64* %PC.i862
  %2802 = add i64 %2801, 3
  store i64 %2802, i64* %PC.i862
  %2803 = trunc i64 %2800 to i32
  %2804 = add i32 1, %2803
  %2805 = zext i32 %2804 to i64
  store i64 %2805, i64* %RAX.i863, align 8
  %2806 = icmp ult i32 %2804, %2803
  %2807 = icmp ult i32 %2804, 1
  %2808 = or i1 %2806, %2807
  %2809 = zext i1 %2808 to i8
  %2810 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2809, i8* %2810, align 1
  %2811 = and i32 %2804, 255
  %2812 = call i32 @llvm.ctpop.i32(i32 %2811)
  %2813 = trunc i32 %2812 to i8
  %2814 = and i8 %2813, 1
  %2815 = xor i8 %2814, 1
  %2816 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2815, i8* %2816, align 1
  %2817 = xor i64 1, %2800
  %2818 = trunc i64 %2817 to i32
  %2819 = xor i32 %2818, %2804
  %2820 = lshr i32 %2819, 4
  %2821 = trunc i32 %2820 to i8
  %2822 = and i8 %2821, 1
  %2823 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2822, i8* %2823, align 1
  %2824 = icmp eq i32 %2804, 0
  %2825 = zext i1 %2824 to i8
  %2826 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2825, i8* %2826, align 1
  %2827 = lshr i32 %2804, 31
  %2828 = trunc i32 %2827 to i8
  %2829 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2828, i8* %2829, align 1
  %2830 = lshr i32 %2803, 31
  %2831 = xor i32 %2827, %2830
  %2832 = add i32 %2831, %2827
  %2833 = icmp eq i32 %2832, 2
  %2834 = zext i1 %2833 to i8
  %2835 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2834, i8* %2835, align 1
  store %struct.Memory* %loadMem_400a82, %struct.Memory** %MEMORY
  %loadMem_400a85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2837 = getelementptr inbounds %struct.GPR, %struct.GPR* %2836, i32 0, i32 33
  %2838 = getelementptr inbounds %struct.Reg, %struct.Reg* %2837, i32 0, i32 0
  %PC.i859 = bitcast %union.anon* %2838 to i64*
  %2839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2840 = getelementptr inbounds %struct.GPR, %struct.GPR* %2839, i32 0, i32 1
  %2841 = getelementptr inbounds %struct.Reg, %struct.Reg* %2840, i32 0, i32 0
  %EAX.i860 = bitcast %union.anon* %2841 to i32*
  %2842 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2843 = getelementptr inbounds %struct.GPR, %struct.GPR* %2842, i32 0, i32 15
  %2844 = getelementptr inbounds %struct.Reg, %struct.Reg* %2843, i32 0, i32 0
  %RBP.i861 = bitcast %union.anon* %2844 to i64*
  %2845 = load i64, i64* %RBP.i861
  %2846 = sub i64 %2845, 4
  %2847 = load i32, i32* %EAX.i860
  %2848 = zext i32 %2847 to i64
  %2849 = load i64, i64* %PC.i859
  %2850 = add i64 %2849, 3
  store i64 %2850, i64* %PC.i859
  %2851 = inttoptr i64 %2846 to i32*
  store i32 %2847, i32* %2851
  store %struct.Memory* %loadMem_400a85, %struct.Memory** %MEMORY
  %loadMem_400a88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2853 = getelementptr inbounds %struct.GPR, %struct.GPR* %2852, i32 0, i32 33
  %2854 = getelementptr inbounds %struct.Reg, %struct.Reg* %2853, i32 0, i32 0
  %PC.i858 = bitcast %union.anon* %2854 to i64*
  %2855 = load i64, i64* %PC.i858
  %2856 = add i64 %2855, -124
  %2857 = load i64, i64* %PC.i858
  %2858 = add i64 %2857, 5
  store i64 %2858, i64* %PC.i858
  %2859 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2856, i64* %2859, align 8
  store %struct.Memory* %loadMem_400a88, %struct.Memory** %MEMORY
  br label %block_.L_400a0c

block_.L_400a8d:                                  ; preds = %block_.L_400a0c
  %loadMem_400a8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2861 = getelementptr inbounds %struct.GPR, %struct.GPR* %2860, i32 0, i32 33
  %2862 = getelementptr inbounds %struct.Reg, %struct.Reg* %2861, i32 0, i32 0
  %PC.i857 = bitcast %union.anon* %2862 to i64*
  %2863 = load i64, i64* %PC.i857
  %2864 = add i64 %2863, 11
  store i64 %2864, i64* %PC.i857
  store i32 0, i32* bitcast (%G_0x6191f4_type* @G_0x6191f4 to i32*)
  store %struct.Memory* %loadMem_400a8d, %struct.Memory** %MEMORY
  %loadMem_400a98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2866 = getelementptr inbounds %struct.GPR, %struct.GPR* %2865, i32 0, i32 33
  %2867 = getelementptr inbounds %struct.Reg, %struct.Reg* %2866, i32 0, i32 0
  %PC.i856 = bitcast %union.anon* %2867 to i64*
  %2868 = load i64, i64* %PC.i856
  %2869 = add i64 %2868, 11
  store i64 %2869, i64* %PC.i856
  store i32 193, i32* bitcast (%G_0x610254_type* @G_0x610254 to i32*)
  store %struct.Memory* %loadMem_400a98, %struct.Memory** %MEMORY
  %loadMem_400aa3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2871 = getelementptr inbounds %struct.GPR, %struct.GPR* %2870, i32 0, i32 33
  %2872 = getelementptr inbounds %struct.Reg, %struct.Reg* %2871, i32 0, i32 0
  %PC.i854 = bitcast %union.anon* %2872 to i64*
  %2873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2874 = getelementptr inbounds %struct.GPR, %struct.GPR* %2873, i32 0, i32 15
  %2875 = getelementptr inbounds %struct.Reg, %struct.Reg* %2874, i32 0, i32 0
  %RBP.i855 = bitcast %union.anon* %2875 to i64*
  %2876 = load i64, i64* %RBP.i855
  %2877 = sub i64 %2876, 4
  %2878 = load i64, i64* %PC.i854
  %2879 = add i64 %2878, 7
  store i64 %2879, i64* %PC.i854
  %2880 = inttoptr i64 %2877 to i32*
  store i32 0, i32* %2880
  store %struct.Memory* %loadMem_400aa3, %struct.Memory** %MEMORY
  br label %block_.L_400aaa

block_.L_400aaa:                                  ; preds = %block_.L_400b1d, %block_.L_400a8d
  %loadMem_400aaa = load %struct.Memory*, %struct.Memory** %MEMORY
  %2881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2882 = getelementptr inbounds %struct.GPR, %struct.GPR* %2881, i32 0, i32 33
  %2883 = getelementptr inbounds %struct.Reg, %struct.Reg* %2882, i32 0, i32 0
  %PC.i852 = bitcast %union.anon* %2883 to i64*
  %2884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2885 = getelementptr inbounds %struct.GPR, %struct.GPR* %2884, i32 0, i32 15
  %2886 = getelementptr inbounds %struct.Reg, %struct.Reg* %2885, i32 0, i32 0
  %RBP.i853 = bitcast %union.anon* %2886 to i64*
  %2887 = load i64, i64* %RBP.i853
  %2888 = sub i64 %2887, 4
  %2889 = load i64, i64* %PC.i852
  %2890 = add i64 %2889, 4
  store i64 %2890, i64* %PC.i852
  %2891 = inttoptr i64 %2888 to i32*
  %2892 = load i32, i32* %2891
  %2893 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2893, align 1
  %2894 = and i32 %2892, 255
  %2895 = call i32 @llvm.ctpop.i32(i32 %2894)
  %2896 = trunc i32 %2895 to i8
  %2897 = and i8 %2896, 1
  %2898 = xor i8 %2897, 1
  %2899 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2898, i8* %2899, align 1
  %2900 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2900, align 1
  %2901 = icmp eq i32 %2892, 0
  %2902 = zext i1 %2901 to i8
  %2903 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2902, i8* %2903, align 1
  %2904 = lshr i32 %2892, 31
  %2905 = trunc i32 %2904 to i8
  %2906 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2905, i8* %2906, align 1
  %2907 = lshr i32 %2892, 31
  %2908 = xor i32 %2904, %2907
  %2909 = add i32 %2908, %2907
  %2910 = icmp eq i32 %2909, 2
  %2911 = zext i1 %2910 to i8
  %2912 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2911, i8* %2912, align 1
  store %struct.Memory* %loadMem_400aaa, %struct.Memory** %MEMORY
  %loadMem_400aae = load %struct.Memory*, %struct.Memory** %MEMORY
  %2913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2914 = getelementptr inbounds %struct.GPR, %struct.GPR* %2913, i32 0, i32 33
  %2915 = getelementptr inbounds %struct.Reg, %struct.Reg* %2914, i32 0, i32 0
  %PC.i851 = bitcast %union.anon* %2915 to i64*
  %2916 = load i64, i64* %PC.i851
  %2917 = add i64 %2916, 125
  %2918 = load i64, i64* %PC.i851
  %2919 = add i64 %2918, 6
  %2920 = load i64, i64* %PC.i851
  %2921 = add i64 %2920, 6
  store i64 %2921, i64* %PC.i851
  %2922 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2923 = load i8, i8* %2922, align 1
  %2924 = icmp eq i8 %2923, 0
  %2925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2926 = load i8, i8* %2925, align 1
  %2927 = icmp ne i8 %2926, 0
  %2928 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2929 = load i8, i8* %2928, align 1
  %2930 = icmp ne i8 %2929, 0
  %2931 = xor i1 %2927, %2930
  %2932 = xor i1 %2931, true
  %2933 = and i1 %2924, %2932
  %2934 = zext i1 %2933 to i8
  store i8 %2934, i8* %BRANCH_TAKEN, align 1
  %2935 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2936 = select i1 %2933, i64 %2917, i64 %2919
  store i64 %2936, i64* %2935, align 8
  store %struct.Memory* %loadMem_400aae, %struct.Memory** %MEMORY
  %loadBr_400aae = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400aae = icmp eq i8 %loadBr_400aae, 1
  br i1 %cmpBr_400aae, label %block_.L_400b2b, label %block_400ab4

block_400ab4:                                     ; preds = %block_.L_400aaa
  %loadMem_400ab4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2937 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2938 = getelementptr inbounds %struct.GPR, %struct.GPR* %2937, i32 0, i32 33
  %2939 = getelementptr inbounds %struct.Reg, %struct.Reg* %2938, i32 0, i32 0
  %PC.i849 = bitcast %union.anon* %2939 to i64*
  %2940 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2941 = getelementptr inbounds %struct.GPR, %struct.GPR* %2940, i32 0, i32 15
  %2942 = getelementptr inbounds %struct.Reg, %struct.Reg* %2941, i32 0, i32 0
  %RBP.i850 = bitcast %union.anon* %2942 to i64*
  %2943 = load i64, i64* %RBP.i850
  %2944 = sub i64 %2943, 8
  %2945 = load i64, i64* %PC.i849
  %2946 = add i64 %2945, 7
  store i64 %2946, i64* %PC.i849
  %2947 = inttoptr i64 %2944 to i32*
  store i32 0, i32* %2947
  store %struct.Memory* %loadMem_400ab4, %struct.Memory** %MEMORY
  br label %block_.L_400abb

block_.L_400abb:                                  ; preds = %block_.L_400b0a, %block_400ab4
  %loadMem_400abb = load %struct.Memory*, %struct.Memory** %MEMORY
  %2948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2949 = getelementptr inbounds %struct.GPR, %struct.GPR* %2948, i32 0, i32 33
  %2950 = getelementptr inbounds %struct.Reg, %struct.Reg* %2949, i32 0, i32 0
  %PC.i847 = bitcast %union.anon* %2950 to i64*
  %2951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2952 = getelementptr inbounds %struct.GPR, %struct.GPR* %2951, i32 0, i32 15
  %2953 = getelementptr inbounds %struct.Reg, %struct.Reg* %2952, i32 0, i32 0
  %RBP.i848 = bitcast %union.anon* %2953 to i64*
  %2954 = load i64, i64* %RBP.i848
  %2955 = sub i64 %2954, 8
  %2956 = load i64, i64* %PC.i847
  %2957 = add i64 %2956, 4
  store i64 %2957, i64* %PC.i847
  %2958 = inttoptr i64 %2955 to i32*
  %2959 = load i32, i32* %2958
  %2960 = sub i32 %2959, 3
  %2961 = icmp ult i32 %2959, 3
  %2962 = zext i1 %2961 to i8
  %2963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2962, i8* %2963, align 1
  %2964 = and i32 %2960, 255
  %2965 = call i32 @llvm.ctpop.i32(i32 %2964)
  %2966 = trunc i32 %2965 to i8
  %2967 = and i8 %2966, 1
  %2968 = xor i8 %2967, 1
  %2969 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2968, i8* %2969, align 1
  %2970 = xor i32 %2959, 3
  %2971 = xor i32 %2970, %2960
  %2972 = lshr i32 %2971, 4
  %2973 = trunc i32 %2972 to i8
  %2974 = and i8 %2973, 1
  %2975 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2974, i8* %2975, align 1
  %2976 = icmp eq i32 %2960, 0
  %2977 = zext i1 %2976 to i8
  %2978 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2977, i8* %2978, align 1
  %2979 = lshr i32 %2960, 31
  %2980 = trunc i32 %2979 to i8
  %2981 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2980, i8* %2981, align 1
  %2982 = lshr i32 %2959, 31
  %2983 = xor i32 %2979, %2982
  %2984 = add i32 %2983, %2982
  %2985 = icmp eq i32 %2984, 2
  %2986 = zext i1 %2985 to i8
  %2987 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2986, i8* %2987, align 1
  store %struct.Memory* %loadMem_400abb, %struct.Memory** %MEMORY
  %loadMem_400abf = load %struct.Memory*, %struct.Memory** %MEMORY
  %2988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2989 = getelementptr inbounds %struct.GPR, %struct.GPR* %2988, i32 0, i32 33
  %2990 = getelementptr inbounds %struct.Reg, %struct.Reg* %2989, i32 0, i32 0
  %PC.i846 = bitcast %union.anon* %2990 to i64*
  %2991 = load i64, i64* %PC.i846
  %2992 = add i64 %2991, 89
  %2993 = load i64, i64* %PC.i846
  %2994 = add i64 %2993, 6
  %2995 = load i64, i64* %PC.i846
  %2996 = add i64 %2995, 6
  store i64 %2996, i64* %PC.i846
  %2997 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2998 = load i8, i8* %2997, align 1
  %2999 = icmp eq i8 %2998, 0
  %3000 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3001 = load i8, i8* %3000, align 1
  %3002 = icmp ne i8 %3001, 0
  %3003 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3004 = load i8, i8* %3003, align 1
  %3005 = icmp ne i8 %3004, 0
  %3006 = xor i1 %3002, %3005
  %3007 = xor i1 %3006, true
  %3008 = and i1 %2999, %3007
  %3009 = zext i1 %3008 to i8
  store i8 %3009, i8* %BRANCH_TAKEN, align 1
  %3010 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3011 = select i1 %3008, i64 %2992, i64 %2994
  store i64 %3011, i64* %3010, align 8
  store %struct.Memory* %loadMem_400abf, %struct.Memory** %MEMORY
  %loadBr_400abf = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400abf = icmp eq i8 %loadBr_400abf, 1
  br i1 %cmpBr_400abf, label %block_.L_400b18, label %block_400ac5

block_400ac5:                                     ; preds = %block_.L_400abb
  %loadMem_400ac5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3013 = getelementptr inbounds %struct.GPR, %struct.GPR* %3012, i32 0, i32 33
  %3014 = getelementptr inbounds %struct.Reg, %struct.Reg* %3013, i32 0, i32 0
  %PC.i844 = bitcast %union.anon* %3014 to i64*
  %3015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3016 = getelementptr inbounds %struct.GPR, %struct.GPR* %3015, i32 0, i32 15
  %3017 = getelementptr inbounds %struct.Reg, %struct.Reg* %3016, i32 0, i32 0
  %RBP.i845 = bitcast %union.anon* %3017 to i64*
  %3018 = load i64, i64* %RBP.i845
  %3019 = sub i64 %3018, 12
  %3020 = load i64, i64* %PC.i844
  %3021 = add i64 %3020, 7
  store i64 %3021, i64* %PC.i844
  %3022 = inttoptr i64 %3019 to i32*
  store i32 0, i32* %3022
  store %struct.Memory* %loadMem_400ac5, %struct.Memory** %MEMORY
  br label %block_.L_400acc

block_.L_400acc:                                  ; preds = %block_400ad6, %block_400ac5
  %loadMem_400acc = load %struct.Memory*, %struct.Memory** %MEMORY
  %3023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3024 = getelementptr inbounds %struct.GPR, %struct.GPR* %3023, i32 0, i32 33
  %3025 = getelementptr inbounds %struct.Reg, %struct.Reg* %3024, i32 0, i32 0
  %PC.i842 = bitcast %union.anon* %3025 to i64*
  %3026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3027 = getelementptr inbounds %struct.GPR, %struct.GPR* %3026, i32 0, i32 15
  %3028 = getelementptr inbounds %struct.Reg, %struct.Reg* %3027, i32 0, i32 0
  %RBP.i843 = bitcast %union.anon* %3028 to i64*
  %3029 = load i64, i64* %RBP.i843
  %3030 = sub i64 %3029, 12
  %3031 = load i64, i64* %PC.i842
  %3032 = add i64 %3031, 4
  store i64 %3032, i64* %PC.i842
  %3033 = inttoptr i64 %3030 to i32*
  %3034 = load i32, i32* %3033
  %3035 = sub i32 %3034, 1
  %3036 = icmp ult i32 %3034, 1
  %3037 = zext i1 %3036 to i8
  %3038 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3037, i8* %3038, align 1
  %3039 = and i32 %3035, 255
  %3040 = call i32 @llvm.ctpop.i32(i32 %3039)
  %3041 = trunc i32 %3040 to i8
  %3042 = and i8 %3041, 1
  %3043 = xor i8 %3042, 1
  %3044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3043, i8* %3044, align 1
  %3045 = xor i32 %3034, 1
  %3046 = xor i32 %3045, %3035
  %3047 = lshr i32 %3046, 4
  %3048 = trunc i32 %3047 to i8
  %3049 = and i8 %3048, 1
  %3050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3049, i8* %3050, align 1
  %3051 = icmp eq i32 %3035, 0
  %3052 = zext i1 %3051 to i8
  %3053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3052, i8* %3053, align 1
  %3054 = lshr i32 %3035, 31
  %3055 = trunc i32 %3054 to i8
  %3056 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3055, i8* %3056, align 1
  %3057 = lshr i32 %3034, 31
  %3058 = xor i32 %3054, %3057
  %3059 = add i32 %3058, %3057
  %3060 = icmp eq i32 %3059, 2
  %3061 = zext i1 %3060 to i8
  %3062 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3061, i8* %3062, align 1
  store %struct.Memory* %loadMem_400acc, %struct.Memory** %MEMORY
  %loadMem_400ad0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3064 = getelementptr inbounds %struct.GPR, %struct.GPR* %3063, i32 0, i32 33
  %3065 = getelementptr inbounds %struct.Reg, %struct.Reg* %3064, i32 0, i32 0
  %PC.i841 = bitcast %union.anon* %3065 to i64*
  %3066 = load i64, i64* %PC.i841
  %3067 = add i64 %3066, 53
  %3068 = load i64, i64* %PC.i841
  %3069 = add i64 %3068, 6
  %3070 = load i64, i64* %PC.i841
  %3071 = add i64 %3070, 6
  store i64 %3071, i64* %PC.i841
  %3072 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3073 = load i8, i8* %3072, align 1
  %3074 = icmp eq i8 %3073, 0
  %3075 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3076 = load i8, i8* %3075, align 1
  %3077 = icmp ne i8 %3076, 0
  %3078 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3079 = load i8, i8* %3078, align 1
  %3080 = icmp ne i8 %3079, 0
  %3081 = xor i1 %3077, %3080
  %3082 = xor i1 %3081, true
  %3083 = and i1 %3074, %3082
  %3084 = zext i1 %3083 to i8
  store i8 %3084, i8* %BRANCH_TAKEN, align 1
  %3085 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3086 = select i1 %3083, i64 %3067, i64 %3069
  store i64 %3086, i64* %3085, align 8
  store %struct.Memory* %loadMem_400ad0, %struct.Memory** %MEMORY
  %loadBr_400ad0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400ad0 = icmp eq i8 %loadBr_400ad0, 1
  br i1 %cmpBr_400ad0, label %block_.L_400b05, label %block_400ad6

block_400ad6:                                     ; preds = %block_.L_400acc
  %loadMem_400ad6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3087 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3088 = getelementptr inbounds %struct.GPR, %struct.GPR* %3087, i32 0, i32 33
  %3089 = getelementptr inbounds %struct.Reg, %struct.Reg* %3088, i32 0, i32 0
  %PC.i838 = bitcast %union.anon* %3089 to i64*
  %3090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3091 = getelementptr inbounds %struct.GPR, %struct.GPR* %3090, i32 0, i32 1
  %3092 = getelementptr inbounds %struct.Reg, %struct.Reg* %3091, i32 0, i32 0
  %RAX.i839 = bitcast %union.anon* %3092 to i64*
  %3093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3094 = getelementptr inbounds %struct.GPR, %struct.GPR* %3093, i32 0, i32 15
  %3095 = getelementptr inbounds %struct.Reg, %struct.Reg* %3094, i32 0, i32 0
  %RBP.i840 = bitcast %union.anon* %3095 to i64*
  %3096 = load i64, i64* %RBP.i840
  %3097 = sub i64 %3096, 4
  %3098 = load i64, i64* %PC.i838
  %3099 = add i64 %3098, 3
  store i64 %3099, i64* %PC.i838
  %3100 = inttoptr i64 %3097 to i32*
  %3101 = load i32, i32* %3100
  %3102 = zext i32 %3101 to i64
  store i64 %3102, i64* %RAX.i839, align 8
  store %struct.Memory* %loadMem_400ad6, %struct.Memory** %MEMORY
  %loadMem_400ad9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3104 = getelementptr inbounds %struct.GPR, %struct.GPR* %3103, i32 0, i32 33
  %3105 = getelementptr inbounds %struct.Reg, %struct.Reg* %3104, i32 0, i32 0
  %PC.i835 = bitcast %union.anon* %3105 to i64*
  %3106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3107 = getelementptr inbounds %struct.GPR, %struct.GPR* %3106, i32 0, i32 5
  %3108 = getelementptr inbounds %struct.Reg, %struct.Reg* %3107, i32 0, i32 0
  %RCX.i836 = bitcast %union.anon* %3108 to i64*
  %3109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3110 = getelementptr inbounds %struct.GPR, %struct.GPR* %3109, i32 0, i32 15
  %3111 = getelementptr inbounds %struct.Reg, %struct.Reg* %3110, i32 0, i32 0
  %RBP.i837 = bitcast %union.anon* %3111 to i64*
  %3112 = load i64, i64* %RBP.i837
  %3113 = sub i64 %3112, 8
  %3114 = load i64, i64* %PC.i835
  %3115 = add i64 %3114, 3
  store i64 %3115, i64* %PC.i835
  %3116 = inttoptr i64 %3113 to i32*
  %3117 = load i32, i32* %3116
  %3118 = zext i32 %3117 to i64
  store i64 %3118, i64* %RCX.i836, align 8
  store %struct.Memory* %loadMem_400ad9, %struct.Memory** %MEMORY
  %loadMem_400adc = load %struct.Memory*, %struct.Memory** %MEMORY
  %3119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3120 = getelementptr inbounds %struct.GPR, %struct.GPR* %3119, i32 0, i32 33
  %3121 = getelementptr inbounds %struct.Reg, %struct.Reg* %3120, i32 0, i32 0
  %PC.i832 = bitcast %union.anon* %3121 to i64*
  %3122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3123 = getelementptr inbounds %struct.GPR, %struct.GPR* %3122, i32 0, i32 7
  %3124 = getelementptr inbounds %struct.Reg, %struct.Reg* %3123, i32 0, i32 0
  %RDX.i833 = bitcast %union.anon* %3124 to i64*
  %3125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3126 = getelementptr inbounds %struct.GPR, %struct.GPR* %3125, i32 0, i32 15
  %3127 = getelementptr inbounds %struct.Reg, %struct.Reg* %3126, i32 0, i32 0
  %RBP.i834 = bitcast %union.anon* %3127 to i64*
  %3128 = load i64, i64* %RBP.i834
  %3129 = sub i64 %3128, 12
  %3130 = load i64, i64* %PC.i832
  %3131 = add i64 %3130, 3
  store i64 %3131, i64* %PC.i832
  %3132 = inttoptr i64 %3129 to i32*
  %3133 = load i32, i32* %3132
  %3134 = zext i32 %3133 to i64
  store i64 %3134, i64* %RDX.i833, align 8
  store %struct.Memory* %loadMem_400adc, %struct.Memory** %MEMORY
  %loadMem_400adf = load %struct.Memory*, %struct.Memory** %MEMORY
  %3135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3136 = getelementptr inbounds %struct.GPR, %struct.GPR* %3135, i32 0, i32 33
  %3137 = getelementptr inbounds %struct.Reg, %struct.Reg* %3136, i32 0, i32 0
  %PC.i830 = bitcast %union.anon* %3137 to i64*
  %3138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3139 = getelementptr inbounds %struct.GPR, %struct.GPR* %3138, i32 0, i32 7
  %3140 = getelementptr inbounds %struct.Reg, %struct.Reg* %3139, i32 0, i32 0
  %RDX.i831 = bitcast %union.anon* %3140 to i64*
  %3141 = load i64, i64* %RDX.i831
  %3142 = load i64, i64* %PC.i830
  %3143 = add i64 %3142, 3
  store i64 %3143, i64* %PC.i830
  %3144 = and i64 %3141, 4294967295
  %3145 = shl i64 %3144, 2
  %3146 = trunc i64 %3145 to i32
  %3147 = icmp slt i32 %3146, 0
  %3148 = shl i32 %3146, 1
  %3149 = zext i32 %3148 to i64
  store i64 %3149, i64* %RDX.i831, align 8
  %3150 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %3151 = zext i1 %3147 to i8
  store i8 %3151, i8* %3150, align 1
  %3152 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %3153 = and i32 %3148, 254
  %3154 = call i32 @llvm.ctpop.i32(i32 %3153)
  %3155 = trunc i32 %3154 to i8
  %3156 = and i8 %3155, 1
  %3157 = xor i8 %3156, 1
  store i8 %3157, i8* %3152, align 1
  %3158 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3158, align 1
  %3159 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3160 = icmp eq i32 %3148, 0
  %3161 = zext i1 %3160 to i8
  store i8 %3161, i8* %3159, align 1
  %3162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3163 = lshr i32 %3148, 31
  %3164 = trunc i32 %3163 to i8
  store i8 %3164, i8* %3162, align 1
  %3165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3165, align 1
  store %struct.Memory* %loadMem_400adf, %struct.Memory** %MEMORY
  %loadMem_400ae2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3167 = getelementptr inbounds %struct.GPR, %struct.GPR* %3166, i32 0, i32 33
  %3168 = getelementptr inbounds %struct.Reg, %struct.Reg* %3167, i32 0, i32 0
  %PC.i827 = bitcast %union.anon* %3168 to i64*
  %3169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3170 = getelementptr inbounds %struct.GPR, %struct.GPR* %3169, i32 0, i32 7
  %3171 = getelementptr inbounds %struct.Reg, %struct.Reg* %3170, i32 0, i32 0
  %EDX.i828 = bitcast %union.anon* %3171 to i32*
  %3172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3173 = getelementptr inbounds %struct.GPR, %struct.GPR* %3172, i32 0, i32 5
  %3174 = getelementptr inbounds %struct.Reg, %struct.Reg* %3173, i32 0, i32 0
  %RCX.i829 = bitcast %union.anon* %3174 to i64*
  %3175 = load i64, i64* %RCX.i829
  %3176 = load i32, i32* %EDX.i828
  %3177 = zext i32 %3176 to i64
  %3178 = load i64, i64* %PC.i827
  %3179 = add i64 %3178, 2
  store i64 %3179, i64* %PC.i827
  %3180 = trunc i64 %3175 to i32
  %3181 = add i32 %3176, %3180
  %3182 = zext i32 %3181 to i64
  store i64 %3182, i64* %RCX.i829, align 8
  %3183 = icmp ult i32 %3181, %3180
  %3184 = icmp ult i32 %3181, %3176
  %3185 = or i1 %3183, %3184
  %3186 = zext i1 %3185 to i8
  %3187 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3186, i8* %3187, align 1
  %3188 = and i32 %3181, 255
  %3189 = call i32 @llvm.ctpop.i32(i32 %3188)
  %3190 = trunc i32 %3189 to i8
  %3191 = and i8 %3190, 1
  %3192 = xor i8 %3191, 1
  %3193 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3192, i8* %3193, align 1
  %3194 = xor i64 %3177, %3175
  %3195 = trunc i64 %3194 to i32
  %3196 = xor i32 %3195, %3181
  %3197 = lshr i32 %3196, 4
  %3198 = trunc i32 %3197 to i8
  %3199 = and i8 %3198, 1
  %3200 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3199, i8* %3200, align 1
  %3201 = icmp eq i32 %3181, 0
  %3202 = zext i1 %3201 to i8
  %3203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3202, i8* %3203, align 1
  %3204 = lshr i32 %3181, 31
  %3205 = trunc i32 %3204 to i8
  %3206 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3205, i8* %3206, align 1
  %3207 = lshr i32 %3180, 31
  %3208 = lshr i32 %3176, 31
  %3209 = xor i32 %3204, %3207
  %3210 = xor i32 %3204, %3208
  %3211 = add i32 %3209, %3210
  %3212 = icmp eq i32 %3211, 2
  %3213 = zext i1 %3212 to i8
  %3214 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3213, i8* %3214, align 1
  store %struct.Memory* %loadMem_400ae2, %struct.Memory** %MEMORY
  %loadMem_400ae4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3216 = getelementptr inbounds %struct.GPR, %struct.GPR* %3215, i32 0, i32 33
  %3217 = getelementptr inbounds %struct.Reg, %struct.Reg* %3216, i32 0, i32 0
  %PC.i825 = bitcast %union.anon* %3217 to i64*
  %3218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3219 = getelementptr inbounds %struct.GPR, %struct.GPR* %3218, i32 0, i32 5
  %3220 = getelementptr inbounds %struct.Reg, %struct.Reg* %3219, i32 0, i32 0
  %RCX.i826 = bitcast %union.anon* %3220 to i64*
  %3221 = load i64, i64* %RCX.i826
  %3222 = load i64, i64* %PC.i825
  %3223 = add i64 %3222, 3
  store i64 %3223, i64* %PC.i825
  %3224 = and i64 %3221, 4294967295
  %3225 = shl i64 %3224, 2
  %3226 = trunc i64 %3225 to i32
  %3227 = icmp slt i32 %3226, 0
  %3228 = shl i32 %3226, 1
  %3229 = zext i32 %3228 to i64
  store i64 %3229, i64* %RCX.i826, align 8
  %3230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %3231 = zext i1 %3227 to i8
  store i8 %3231, i8* %3230, align 1
  %3232 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %3233 = and i32 %3228, 254
  %3234 = call i32 @llvm.ctpop.i32(i32 %3233)
  %3235 = trunc i32 %3234 to i8
  %3236 = and i8 %3235, 1
  %3237 = xor i8 %3236, 1
  store i8 %3237, i8* %3232, align 1
  %3238 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3238, align 1
  %3239 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3240 = icmp eq i32 %3228, 0
  %3241 = zext i1 %3240 to i8
  store i8 %3241, i8* %3239, align 1
  %3242 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3243 = lshr i32 %3228, 31
  %3244 = trunc i32 %3243 to i8
  store i8 %3244, i8* %3242, align 1
  %3245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3245, align 1
  store %struct.Memory* %loadMem_400ae4, %struct.Memory** %MEMORY
  %loadMem_400ae7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3247 = getelementptr inbounds %struct.GPR, %struct.GPR* %3246, i32 0, i32 33
  %3248 = getelementptr inbounds %struct.Reg, %struct.Reg* %3247, i32 0, i32 0
  %PC.i822 = bitcast %union.anon* %3248 to i64*
  %3249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3250 = getelementptr inbounds %struct.GPR, %struct.GPR* %3249, i32 0, i32 5
  %3251 = getelementptr inbounds %struct.Reg, %struct.Reg* %3250, i32 0, i32 0
  %ECX.i823 = bitcast %union.anon* %3251 to i32*
  %3252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3253 = getelementptr inbounds %struct.GPR, %struct.GPR* %3252, i32 0, i32 1
  %3254 = getelementptr inbounds %struct.Reg, %struct.Reg* %3253, i32 0, i32 0
  %RAX.i824 = bitcast %union.anon* %3254 to i64*
  %3255 = load i64, i64* %RAX.i824
  %3256 = load i32, i32* %ECX.i823
  %3257 = zext i32 %3256 to i64
  %3258 = load i64, i64* %PC.i822
  %3259 = add i64 %3258, 2
  store i64 %3259, i64* %PC.i822
  %3260 = trunc i64 %3255 to i32
  %3261 = add i32 %3256, %3260
  %3262 = zext i32 %3261 to i64
  store i64 %3262, i64* %RAX.i824, align 8
  %3263 = icmp ult i32 %3261, %3260
  %3264 = icmp ult i32 %3261, %3256
  %3265 = or i1 %3263, %3264
  %3266 = zext i1 %3265 to i8
  %3267 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3266, i8* %3267, align 1
  %3268 = and i32 %3261, 255
  %3269 = call i32 @llvm.ctpop.i32(i32 %3268)
  %3270 = trunc i32 %3269 to i8
  %3271 = and i8 %3270, 1
  %3272 = xor i8 %3271, 1
  %3273 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3272, i8* %3273, align 1
  %3274 = xor i64 %3257, %3255
  %3275 = trunc i64 %3274 to i32
  %3276 = xor i32 %3275, %3261
  %3277 = lshr i32 %3276, 4
  %3278 = trunc i32 %3277 to i8
  %3279 = and i8 %3278, 1
  %3280 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3279, i8* %3280, align 1
  %3281 = icmp eq i32 %3261, 0
  %3282 = zext i1 %3281 to i8
  %3283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3282, i8* %3283, align 1
  %3284 = lshr i32 %3261, 31
  %3285 = trunc i32 %3284 to i8
  %3286 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3285, i8* %3286, align 1
  %3287 = lshr i32 %3260, 31
  %3288 = lshr i32 %3256, 31
  %3289 = xor i32 %3284, %3287
  %3290 = xor i32 %3284, %3288
  %3291 = add i32 %3289, %3290
  %3292 = icmp eq i32 %3291, 2
  %3293 = zext i1 %3292 to i8
  %3294 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3293, i8* %3294, align 1
  store %struct.Memory* %loadMem_400ae7, %struct.Memory** %MEMORY
  %loadMem_400ae9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3296 = getelementptr inbounds %struct.GPR, %struct.GPR* %3295, i32 0, i32 33
  %3297 = getelementptr inbounds %struct.Reg, %struct.Reg* %3296, i32 0, i32 0
  %PC.i819 = bitcast %union.anon* %3297 to i64*
  %3298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3299 = getelementptr inbounds %struct.GPR, %struct.GPR* %3298, i32 0, i32 1
  %3300 = getelementptr inbounds %struct.Reg, %struct.Reg* %3299, i32 0, i32 0
  %EAX.i820 = bitcast %union.anon* %3300 to i32*
  %3301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3302 = getelementptr inbounds %struct.GPR, %struct.GPR* %3301, i32 0, i32 9
  %3303 = getelementptr inbounds %struct.Reg, %struct.Reg* %3302, i32 0, i32 0
  %RSI.i821 = bitcast %union.anon* %3303 to i64*
  %3304 = load i32, i32* %EAX.i820
  %3305 = zext i32 %3304 to i64
  %3306 = load i64, i64* %PC.i819
  %3307 = add i64 %3306, 3
  store i64 %3307, i64* %PC.i819
  %3308 = shl i64 %3305, 32
  %3309 = ashr exact i64 %3308, 32
  store i64 %3309, i64* %RSI.i821, align 8
  store %struct.Memory* %loadMem_400ae9, %struct.Memory** %MEMORY
  %loadMem_400aec = load %struct.Memory*, %struct.Memory** %MEMORY
  %3310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3311 = getelementptr inbounds %struct.GPR, %struct.GPR* %3310, i32 0, i32 33
  %3312 = getelementptr inbounds %struct.Reg, %struct.Reg* %3311, i32 0, i32 0
  %PC.i817 = bitcast %union.anon* %3312 to i64*
  %3313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3314 = getelementptr inbounds %struct.GPR, %struct.GPR* %3313, i32 0, i32 9
  %3315 = getelementptr inbounds %struct.Reg, %struct.Reg* %3314, i32 0, i32 0
  %RSI.i818 = bitcast %union.anon* %3315 to i64*
  %3316 = load i64, i64* %RSI.i818
  %3317 = mul i64 %3316, 4
  %3318 = add i64 %3317, ptrtoint (%G_0x604aa0___rsi_4__type* @G_0x604aa0___rsi_4_ to i64)
  %3319 = load i64, i64* %PC.i817
  %3320 = add i64 %3319, 11
  store i64 %3320, i64* %PC.i817
  %3321 = inttoptr i64 %3318 to i32*
  store i32 1, i32* %3321
  store %struct.Memory* %loadMem_400aec, %struct.Memory** %MEMORY
  %loadMem_400af7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3323 = getelementptr inbounds %struct.GPR, %struct.GPR* %3322, i32 0, i32 33
  %3324 = getelementptr inbounds %struct.Reg, %struct.Reg* %3323, i32 0, i32 0
  %PC.i814 = bitcast %union.anon* %3324 to i64*
  %3325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3326 = getelementptr inbounds %struct.GPR, %struct.GPR* %3325, i32 0, i32 1
  %3327 = getelementptr inbounds %struct.Reg, %struct.Reg* %3326, i32 0, i32 0
  %RAX.i815 = bitcast %union.anon* %3327 to i64*
  %3328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3329 = getelementptr inbounds %struct.GPR, %struct.GPR* %3328, i32 0, i32 15
  %3330 = getelementptr inbounds %struct.Reg, %struct.Reg* %3329, i32 0, i32 0
  %RBP.i816 = bitcast %union.anon* %3330 to i64*
  %3331 = load i64, i64* %RBP.i816
  %3332 = sub i64 %3331, 12
  %3333 = load i64, i64* %PC.i814
  %3334 = add i64 %3333, 3
  store i64 %3334, i64* %PC.i814
  %3335 = inttoptr i64 %3332 to i32*
  %3336 = load i32, i32* %3335
  %3337 = zext i32 %3336 to i64
  store i64 %3337, i64* %RAX.i815, align 8
  store %struct.Memory* %loadMem_400af7, %struct.Memory** %MEMORY
  %loadMem_400afa = load %struct.Memory*, %struct.Memory** %MEMORY
  %3338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3339 = getelementptr inbounds %struct.GPR, %struct.GPR* %3338, i32 0, i32 33
  %3340 = getelementptr inbounds %struct.Reg, %struct.Reg* %3339, i32 0, i32 0
  %PC.i812 = bitcast %union.anon* %3340 to i64*
  %3341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3342 = getelementptr inbounds %struct.GPR, %struct.GPR* %3341, i32 0, i32 1
  %3343 = getelementptr inbounds %struct.Reg, %struct.Reg* %3342, i32 0, i32 0
  %RAX.i813 = bitcast %union.anon* %3343 to i64*
  %3344 = load i64, i64* %RAX.i813
  %3345 = load i64, i64* %PC.i812
  %3346 = add i64 %3345, 3
  store i64 %3346, i64* %PC.i812
  %3347 = trunc i64 %3344 to i32
  %3348 = add i32 1, %3347
  %3349 = zext i32 %3348 to i64
  store i64 %3349, i64* %RAX.i813, align 8
  %3350 = icmp ult i32 %3348, %3347
  %3351 = icmp ult i32 %3348, 1
  %3352 = or i1 %3350, %3351
  %3353 = zext i1 %3352 to i8
  %3354 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3353, i8* %3354, align 1
  %3355 = and i32 %3348, 255
  %3356 = call i32 @llvm.ctpop.i32(i32 %3355)
  %3357 = trunc i32 %3356 to i8
  %3358 = and i8 %3357, 1
  %3359 = xor i8 %3358, 1
  %3360 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3359, i8* %3360, align 1
  %3361 = xor i64 1, %3344
  %3362 = trunc i64 %3361 to i32
  %3363 = xor i32 %3362, %3348
  %3364 = lshr i32 %3363, 4
  %3365 = trunc i32 %3364 to i8
  %3366 = and i8 %3365, 1
  %3367 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3366, i8* %3367, align 1
  %3368 = icmp eq i32 %3348, 0
  %3369 = zext i1 %3368 to i8
  %3370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3369, i8* %3370, align 1
  %3371 = lshr i32 %3348, 31
  %3372 = trunc i32 %3371 to i8
  %3373 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3372, i8* %3373, align 1
  %3374 = lshr i32 %3347, 31
  %3375 = xor i32 %3371, %3374
  %3376 = add i32 %3375, %3371
  %3377 = icmp eq i32 %3376, 2
  %3378 = zext i1 %3377 to i8
  %3379 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3378, i8* %3379, align 1
  store %struct.Memory* %loadMem_400afa, %struct.Memory** %MEMORY
  %loadMem_400afd = load %struct.Memory*, %struct.Memory** %MEMORY
  %3380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3381 = getelementptr inbounds %struct.GPR, %struct.GPR* %3380, i32 0, i32 33
  %3382 = getelementptr inbounds %struct.Reg, %struct.Reg* %3381, i32 0, i32 0
  %PC.i809 = bitcast %union.anon* %3382 to i64*
  %3383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3384 = getelementptr inbounds %struct.GPR, %struct.GPR* %3383, i32 0, i32 1
  %3385 = getelementptr inbounds %struct.Reg, %struct.Reg* %3384, i32 0, i32 0
  %EAX.i810 = bitcast %union.anon* %3385 to i32*
  %3386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3387 = getelementptr inbounds %struct.GPR, %struct.GPR* %3386, i32 0, i32 15
  %3388 = getelementptr inbounds %struct.Reg, %struct.Reg* %3387, i32 0, i32 0
  %RBP.i811 = bitcast %union.anon* %3388 to i64*
  %3389 = load i64, i64* %RBP.i811
  %3390 = sub i64 %3389, 12
  %3391 = load i32, i32* %EAX.i810
  %3392 = zext i32 %3391 to i64
  %3393 = load i64, i64* %PC.i809
  %3394 = add i64 %3393, 3
  store i64 %3394, i64* %PC.i809
  %3395 = inttoptr i64 %3390 to i32*
  store i32 %3391, i32* %3395
  store %struct.Memory* %loadMem_400afd, %struct.Memory** %MEMORY
  %loadMem_400b00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3397 = getelementptr inbounds %struct.GPR, %struct.GPR* %3396, i32 0, i32 33
  %3398 = getelementptr inbounds %struct.Reg, %struct.Reg* %3397, i32 0, i32 0
  %PC.i808 = bitcast %union.anon* %3398 to i64*
  %3399 = load i64, i64* %PC.i808
  %3400 = add i64 %3399, -52
  %3401 = load i64, i64* %PC.i808
  %3402 = add i64 %3401, 5
  store i64 %3402, i64* %PC.i808
  %3403 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3400, i64* %3403, align 8
  store %struct.Memory* %loadMem_400b00, %struct.Memory** %MEMORY
  br label %block_.L_400acc

block_.L_400b05:                                  ; preds = %block_.L_400acc
  %loadMem_400b05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3405 = getelementptr inbounds %struct.GPR, %struct.GPR* %3404, i32 0, i32 33
  %3406 = getelementptr inbounds %struct.Reg, %struct.Reg* %3405, i32 0, i32 0
  %PC.i807 = bitcast %union.anon* %3406 to i64*
  %3407 = load i64, i64* %PC.i807
  %3408 = add i64 %3407, 5
  %3409 = load i64, i64* %PC.i807
  %3410 = add i64 %3409, 5
  store i64 %3410, i64* %PC.i807
  %3411 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3408, i64* %3411, align 8
  store %struct.Memory* %loadMem_400b05, %struct.Memory** %MEMORY
  br label %block_.L_400b0a

block_.L_400b0a:                                  ; preds = %block_.L_400b05
  %loadMem_400b0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3413 = getelementptr inbounds %struct.GPR, %struct.GPR* %3412, i32 0, i32 33
  %3414 = getelementptr inbounds %struct.Reg, %struct.Reg* %3413, i32 0, i32 0
  %PC.i804 = bitcast %union.anon* %3414 to i64*
  %3415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3416 = getelementptr inbounds %struct.GPR, %struct.GPR* %3415, i32 0, i32 1
  %3417 = getelementptr inbounds %struct.Reg, %struct.Reg* %3416, i32 0, i32 0
  %RAX.i805 = bitcast %union.anon* %3417 to i64*
  %3418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3419 = getelementptr inbounds %struct.GPR, %struct.GPR* %3418, i32 0, i32 15
  %3420 = getelementptr inbounds %struct.Reg, %struct.Reg* %3419, i32 0, i32 0
  %RBP.i806 = bitcast %union.anon* %3420 to i64*
  %3421 = load i64, i64* %RBP.i806
  %3422 = sub i64 %3421, 8
  %3423 = load i64, i64* %PC.i804
  %3424 = add i64 %3423, 3
  store i64 %3424, i64* %PC.i804
  %3425 = inttoptr i64 %3422 to i32*
  %3426 = load i32, i32* %3425
  %3427 = zext i32 %3426 to i64
  store i64 %3427, i64* %RAX.i805, align 8
  store %struct.Memory* %loadMem_400b0a, %struct.Memory** %MEMORY
  %loadMem_400b0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3429 = getelementptr inbounds %struct.GPR, %struct.GPR* %3428, i32 0, i32 33
  %3430 = getelementptr inbounds %struct.Reg, %struct.Reg* %3429, i32 0, i32 0
  %PC.i802 = bitcast %union.anon* %3430 to i64*
  %3431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3432 = getelementptr inbounds %struct.GPR, %struct.GPR* %3431, i32 0, i32 1
  %3433 = getelementptr inbounds %struct.Reg, %struct.Reg* %3432, i32 0, i32 0
  %RAX.i803 = bitcast %union.anon* %3433 to i64*
  %3434 = load i64, i64* %RAX.i803
  %3435 = load i64, i64* %PC.i802
  %3436 = add i64 %3435, 3
  store i64 %3436, i64* %PC.i802
  %3437 = trunc i64 %3434 to i32
  %3438 = add i32 1, %3437
  %3439 = zext i32 %3438 to i64
  store i64 %3439, i64* %RAX.i803, align 8
  %3440 = icmp ult i32 %3438, %3437
  %3441 = icmp ult i32 %3438, 1
  %3442 = or i1 %3440, %3441
  %3443 = zext i1 %3442 to i8
  %3444 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3443, i8* %3444, align 1
  %3445 = and i32 %3438, 255
  %3446 = call i32 @llvm.ctpop.i32(i32 %3445)
  %3447 = trunc i32 %3446 to i8
  %3448 = and i8 %3447, 1
  %3449 = xor i8 %3448, 1
  %3450 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3449, i8* %3450, align 1
  %3451 = xor i64 1, %3434
  %3452 = trunc i64 %3451 to i32
  %3453 = xor i32 %3452, %3438
  %3454 = lshr i32 %3453, 4
  %3455 = trunc i32 %3454 to i8
  %3456 = and i8 %3455, 1
  %3457 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3456, i8* %3457, align 1
  %3458 = icmp eq i32 %3438, 0
  %3459 = zext i1 %3458 to i8
  %3460 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3459, i8* %3460, align 1
  %3461 = lshr i32 %3438, 31
  %3462 = trunc i32 %3461 to i8
  %3463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3462, i8* %3463, align 1
  %3464 = lshr i32 %3437, 31
  %3465 = xor i32 %3461, %3464
  %3466 = add i32 %3465, %3461
  %3467 = icmp eq i32 %3466, 2
  %3468 = zext i1 %3467 to i8
  %3469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3468, i8* %3469, align 1
  store %struct.Memory* %loadMem_400b0d, %struct.Memory** %MEMORY
  %loadMem_400b10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3471 = getelementptr inbounds %struct.GPR, %struct.GPR* %3470, i32 0, i32 33
  %3472 = getelementptr inbounds %struct.Reg, %struct.Reg* %3471, i32 0, i32 0
  %PC.i799 = bitcast %union.anon* %3472 to i64*
  %3473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3474 = getelementptr inbounds %struct.GPR, %struct.GPR* %3473, i32 0, i32 1
  %3475 = getelementptr inbounds %struct.Reg, %struct.Reg* %3474, i32 0, i32 0
  %EAX.i800 = bitcast %union.anon* %3475 to i32*
  %3476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3477 = getelementptr inbounds %struct.GPR, %struct.GPR* %3476, i32 0, i32 15
  %3478 = getelementptr inbounds %struct.Reg, %struct.Reg* %3477, i32 0, i32 0
  %RBP.i801 = bitcast %union.anon* %3478 to i64*
  %3479 = load i64, i64* %RBP.i801
  %3480 = sub i64 %3479, 8
  %3481 = load i32, i32* %EAX.i800
  %3482 = zext i32 %3481 to i64
  %3483 = load i64, i64* %PC.i799
  %3484 = add i64 %3483, 3
  store i64 %3484, i64* %PC.i799
  %3485 = inttoptr i64 %3480 to i32*
  store i32 %3481, i32* %3485
  store %struct.Memory* %loadMem_400b10, %struct.Memory** %MEMORY
  %loadMem_400b13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3487 = getelementptr inbounds %struct.GPR, %struct.GPR* %3486, i32 0, i32 33
  %3488 = getelementptr inbounds %struct.Reg, %struct.Reg* %3487, i32 0, i32 0
  %PC.i798 = bitcast %union.anon* %3488 to i64*
  %3489 = load i64, i64* %PC.i798
  %3490 = add i64 %3489, -88
  %3491 = load i64, i64* %PC.i798
  %3492 = add i64 %3491, 5
  store i64 %3492, i64* %PC.i798
  %3493 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3490, i64* %3493, align 8
  store %struct.Memory* %loadMem_400b13, %struct.Memory** %MEMORY
  br label %block_.L_400abb

block_.L_400b18:                                  ; preds = %block_.L_400abb
  %loadMem_400b18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3495 = getelementptr inbounds %struct.GPR, %struct.GPR* %3494, i32 0, i32 33
  %3496 = getelementptr inbounds %struct.Reg, %struct.Reg* %3495, i32 0, i32 0
  %PC.i797 = bitcast %union.anon* %3496 to i64*
  %3497 = load i64, i64* %PC.i797
  %3498 = add i64 %3497, 5
  %3499 = load i64, i64* %PC.i797
  %3500 = add i64 %3499, 5
  store i64 %3500, i64* %PC.i797
  %3501 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3498, i64* %3501, align 8
  store %struct.Memory* %loadMem_400b18, %struct.Memory** %MEMORY
  br label %block_.L_400b1d

block_.L_400b1d:                                  ; preds = %block_.L_400b18
  %loadMem_400b1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3503 = getelementptr inbounds %struct.GPR, %struct.GPR* %3502, i32 0, i32 33
  %3504 = getelementptr inbounds %struct.Reg, %struct.Reg* %3503, i32 0, i32 0
  %PC.i794 = bitcast %union.anon* %3504 to i64*
  %3505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3506 = getelementptr inbounds %struct.GPR, %struct.GPR* %3505, i32 0, i32 1
  %3507 = getelementptr inbounds %struct.Reg, %struct.Reg* %3506, i32 0, i32 0
  %RAX.i795 = bitcast %union.anon* %3507 to i64*
  %3508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3509 = getelementptr inbounds %struct.GPR, %struct.GPR* %3508, i32 0, i32 15
  %3510 = getelementptr inbounds %struct.Reg, %struct.Reg* %3509, i32 0, i32 0
  %RBP.i796 = bitcast %union.anon* %3510 to i64*
  %3511 = load i64, i64* %RBP.i796
  %3512 = sub i64 %3511, 4
  %3513 = load i64, i64* %PC.i794
  %3514 = add i64 %3513, 3
  store i64 %3514, i64* %PC.i794
  %3515 = inttoptr i64 %3512 to i32*
  %3516 = load i32, i32* %3515
  %3517 = zext i32 %3516 to i64
  store i64 %3517, i64* %RAX.i795, align 8
  store %struct.Memory* %loadMem_400b1d, %struct.Memory** %MEMORY
  %loadMem_400b20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3519 = getelementptr inbounds %struct.GPR, %struct.GPR* %3518, i32 0, i32 33
  %3520 = getelementptr inbounds %struct.Reg, %struct.Reg* %3519, i32 0, i32 0
  %PC.i792 = bitcast %union.anon* %3520 to i64*
  %3521 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3522 = getelementptr inbounds %struct.GPR, %struct.GPR* %3521, i32 0, i32 1
  %3523 = getelementptr inbounds %struct.Reg, %struct.Reg* %3522, i32 0, i32 0
  %RAX.i793 = bitcast %union.anon* %3523 to i64*
  %3524 = load i64, i64* %RAX.i793
  %3525 = load i64, i64* %PC.i792
  %3526 = add i64 %3525, 3
  store i64 %3526, i64* %PC.i792
  %3527 = trunc i64 %3524 to i32
  %3528 = add i32 1, %3527
  %3529 = zext i32 %3528 to i64
  store i64 %3529, i64* %RAX.i793, align 8
  %3530 = icmp ult i32 %3528, %3527
  %3531 = icmp ult i32 %3528, 1
  %3532 = or i1 %3530, %3531
  %3533 = zext i1 %3532 to i8
  %3534 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3533, i8* %3534, align 1
  %3535 = and i32 %3528, 255
  %3536 = call i32 @llvm.ctpop.i32(i32 %3535)
  %3537 = trunc i32 %3536 to i8
  %3538 = and i8 %3537, 1
  %3539 = xor i8 %3538, 1
  %3540 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3539, i8* %3540, align 1
  %3541 = xor i64 1, %3524
  %3542 = trunc i64 %3541 to i32
  %3543 = xor i32 %3542, %3528
  %3544 = lshr i32 %3543, 4
  %3545 = trunc i32 %3544 to i8
  %3546 = and i8 %3545, 1
  %3547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3546, i8* %3547, align 1
  %3548 = icmp eq i32 %3528, 0
  %3549 = zext i1 %3548 to i8
  %3550 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3549, i8* %3550, align 1
  %3551 = lshr i32 %3528, 31
  %3552 = trunc i32 %3551 to i8
  %3553 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3552, i8* %3553, align 1
  %3554 = lshr i32 %3527, 31
  %3555 = xor i32 %3551, %3554
  %3556 = add i32 %3555, %3551
  %3557 = icmp eq i32 %3556, 2
  %3558 = zext i1 %3557 to i8
  %3559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3558, i8* %3559, align 1
  store %struct.Memory* %loadMem_400b20, %struct.Memory** %MEMORY
  %loadMem_400b23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3561 = getelementptr inbounds %struct.GPR, %struct.GPR* %3560, i32 0, i32 33
  %3562 = getelementptr inbounds %struct.Reg, %struct.Reg* %3561, i32 0, i32 0
  %PC.i789 = bitcast %union.anon* %3562 to i64*
  %3563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3564 = getelementptr inbounds %struct.GPR, %struct.GPR* %3563, i32 0, i32 1
  %3565 = getelementptr inbounds %struct.Reg, %struct.Reg* %3564, i32 0, i32 0
  %EAX.i790 = bitcast %union.anon* %3565 to i32*
  %3566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3567 = getelementptr inbounds %struct.GPR, %struct.GPR* %3566, i32 0, i32 15
  %3568 = getelementptr inbounds %struct.Reg, %struct.Reg* %3567, i32 0, i32 0
  %RBP.i791 = bitcast %union.anon* %3568 to i64*
  %3569 = load i64, i64* %RBP.i791
  %3570 = sub i64 %3569, 4
  %3571 = load i32, i32* %EAX.i790
  %3572 = zext i32 %3571 to i64
  %3573 = load i64, i64* %PC.i789
  %3574 = add i64 %3573, 3
  store i64 %3574, i64* %PC.i789
  %3575 = inttoptr i64 %3570 to i32*
  store i32 %3571, i32* %3575
  store %struct.Memory* %loadMem_400b23, %struct.Memory** %MEMORY
  %loadMem_400b26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3577 = getelementptr inbounds %struct.GPR, %struct.GPR* %3576, i32 0, i32 33
  %3578 = getelementptr inbounds %struct.Reg, %struct.Reg* %3577, i32 0, i32 0
  %PC.i788 = bitcast %union.anon* %3578 to i64*
  %3579 = load i64, i64* %PC.i788
  %3580 = add i64 %3579, -124
  %3581 = load i64, i64* %PC.i788
  %3582 = add i64 %3581, 5
  store i64 %3582, i64* %PC.i788
  %3583 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3580, i64* %3583, align 8
  store %struct.Memory* %loadMem_400b26, %struct.Memory** %MEMORY
  br label %block_.L_400aaa

block_.L_400b2b:                                  ; preds = %block_.L_400aaa
  %loadMem_400b2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3585 = getelementptr inbounds %struct.GPR, %struct.GPR* %3584, i32 0, i32 33
  %3586 = getelementptr inbounds %struct.Reg, %struct.Reg* %3585, i32 0, i32 0
  %PC.i787 = bitcast %union.anon* %3586 to i64*
  %3587 = load i64, i64* %PC.i787
  %3588 = add i64 %3587, 11
  store i64 %3588, i64* %PC.i787
  store i32 0, i32* bitcast (%G_0x6191f8_type* @G_0x6191f8 to i32*)
  store %struct.Memory* %loadMem_400b2b, %struct.Memory** %MEMORY
  %loadMem_400b36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3590 = getelementptr inbounds %struct.GPR, %struct.GPR* %3589, i32 0, i32 33
  %3591 = getelementptr inbounds %struct.Reg, %struct.Reg* %3590, i32 0, i32 0
  %PC.i786 = bitcast %union.anon* %3591 to i64*
  %3592 = load i64, i64* %PC.i786
  %3593 = add i64 %3592, 11
  store i64 %3593, i64* %PC.i786
  store i32 88, i32* bitcast (%G_0x610258_type* @G_0x610258 to i32*)
  store %struct.Memory* %loadMem_400b36, %struct.Memory** %MEMORY
  %loadMem_400b41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3595 = getelementptr inbounds %struct.GPR, %struct.GPR* %3594, i32 0, i32 33
  %3596 = getelementptr inbounds %struct.Reg, %struct.Reg* %3595, i32 0, i32 0
  %PC.i784 = bitcast %union.anon* %3596 to i64*
  %3597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3598 = getelementptr inbounds %struct.GPR, %struct.GPR* %3597, i32 0, i32 15
  %3599 = getelementptr inbounds %struct.Reg, %struct.Reg* %3598, i32 0, i32 0
  %RBP.i785 = bitcast %union.anon* %3599 to i64*
  %3600 = load i64, i64* %RBP.i785
  %3601 = sub i64 %3600, 4
  %3602 = load i64, i64* %PC.i784
  %3603 = add i64 %3602, 7
  store i64 %3603, i64* %PC.i784
  %3604 = inttoptr i64 %3601 to i32*
  store i32 0, i32* %3604
  store %struct.Memory* %loadMem_400b41, %struct.Memory** %MEMORY
  br label %block_.L_400b48

block_.L_400b48:                                  ; preds = %block_.L_400bbb, %block_.L_400b2b
  %loadMem_400b48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3606 = getelementptr inbounds %struct.GPR, %struct.GPR* %3605, i32 0, i32 33
  %3607 = getelementptr inbounds %struct.Reg, %struct.Reg* %3606, i32 0, i32 0
  %PC.i782 = bitcast %union.anon* %3607 to i64*
  %3608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3609 = getelementptr inbounds %struct.GPR, %struct.GPR* %3608, i32 0, i32 15
  %3610 = getelementptr inbounds %struct.Reg, %struct.Reg* %3609, i32 0, i32 0
  %RBP.i783 = bitcast %union.anon* %3610 to i64*
  %3611 = load i64, i64* %RBP.i783
  %3612 = sub i64 %3611, 4
  %3613 = load i64, i64* %PC.i782
  %3614 = add i64 %3613, 4
  store i64 %3614, i64* %PC.i782
  %3615 = inttoptr i64 %3612 to i32*
  %3616 = load i32, i32* %3615
  %3617 = sub i32 %3616, 1
  %3618 = icmp ult i32 %3616, 1
  %3619 = zext i1 %3618 to i8
  %3620 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3619, i8* %3620, align 1
  %3621 = and i32 %3617, 255
  %3622 = call i32 @llvm.ctpop.i32(i32 %3621)
  %3623 = trunc i32 %3622 to i8
  %3624 = and i8 %3623, 1
  %3625 = xor i8 %3624, 1
  %3626 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3625, i8* %3626, align 1
  %3627 = xor i32 %3616, 1
  %3628 = xor i32 %3627, %3617
  %3629 = lshr i32 %3628, 4
  %3630 = trunc i32 %3629 to i8
  %3631 = and i8 %3630, 1
  %3632 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3631, i8* %3632, align 1
  %3633 = icmp eq i32 %3617, 0
  %3634 = zext i1 %3633 to i8
  %3635 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3634, i8* %3635, align 1
  %3636 = lshr i32 %3617, 31
  %3637 = trunc i32 %3636 to i8
  %3638 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3637, i8* %3638, align 1
  %3639 = lshr i32 %3616, 31
  %3640 = xor i32 %3636, %3639
  %3641 = add i32 %3640, %3639
  %3642 = icmp eq i32 %3641, 2
  %3643 = zext i1 %3642 to i8
  %3644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3643, i8* %3644, align 1
  store %struct.Memory* %loadMem_400b48, %struct.Memory** %MEMORY
  %loadMem_400b4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3646 = getelementptr inbounds %struct.GPR, %struct.GPR* %3645, i32 0, i32 33
  %3647 = getelementptr inbounds %struct.Reg, %struct.Reg* %3646, i32 0, i32 0
  %PC.i781 = bitcast %union.anon* %3647 to i64*
  %3648 = load i64, i64* %PC.i781
  %3649 = add i64 %3648, 125
  %3650 = load i64, i64* %PC.i781
  %3651 = add i64 %3650, 6
  %3652 = load i64, i64* %PC.i781
  %3653 = add i64 %3652, 6
  store i64 %3653, i64* %PC.i781
  %3654 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3655 = load i8, i8* %3654, align 1
  %3656 = icmp eq i8 %3655, 0
  %3657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3658 = load i8, i8* %3657, align 1
  %3659 = icmp ne i8 %3658, 0
  %3660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3661 = load i8, i8* %3660, align 1
  %3662 = icmp ne i8 %3661, 0
  %3663 = xor i1 %3659, %3662
  %3664 = xor i1 %3663, true
  %3665 = and i1 %3656, %3664
  %3666 = zext i1 %3665 to i8
  store i8 %3666, i8* %BRANCH_TAKEN, align 1
  %3667 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3668 = select i1 %3665, i64 %3649, i64 %3651
  store i64 %3668, i64* %3667, align 8
  store %struct.Memory* %loadMem_400b4c, %struct.Memory** %MEMORY
  %loadBr_400b4c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400b4c = icmp eq i8 %loadBr_400b4c, 1
  br i1 %cmpBr_400b4c, label %block_.L_400bc9, label %block_400b52

block_400b52:                                     ; preds = %block_.L_400b48
  %loadMem_400b52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3670 = getelementptr inbounds %struct.GPR, %struct.GPR* %3669, i32 0, i32 33
  %3671 = getelementptr inbounds %struct.Reg, %struct.Reg* %3670, i32 0, i32 0
  %PC.i779 = bitcast %union.anon* %3671 to i64*
  %3672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3673 = getelementptr inbounds %struct.GPR, %struct.GPR* %3672, i32 0, i32 15
  %3674 = getelementptr inbounds %struct.Reg, %struct.Reg* %3673, i32 0, i32 0
  %RBP.i780 = bitcast %union.anon* %3674 to i64*
  %3675 = load i64, i64* %RBP.i780
  %3676 = sub i64 %3675, 8
  %3677 = load i64, i64* %PC.i779
  %3678 = add i64 %3677, 7
  store i64 %3678, i64* %PC.i779
  %3679 = inttoptr i64 %3676 to i32*
  store i32 0, i32* %3679
  store %struct.Memory* %loadMem_400b52, %struct.Memory** %MEMORY
  br label %block_.L_400b59

block_.L_400b59:                                  ; preds = %block_.L_400ba8, %block_400b52
  %loadMem_400b59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3681 = getelementptr inbounds %struct.GPR, %struct.GPR* %3680, i32 0, i32 33
  %3682 = getelementptr inbounds %struct.Reg, %struct.Reg* %3681, i32 0, i32 0
  %PC.i777 = bitcast %union.anon* %3682 to i64*
  %3683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3684 = getelementptr inbounds %struct.GPR, %struct.GPR* %3683, i32 0, i32 15
  %3685 = getelementptr inbounds %struct.Reg, %struct.Reg* %3684, i32 0, i32 0
  %RBP.i778 = bitcast %union.anon* %3685 to i64*
  %3686 = load i64, i64* %RBP.i778
  %3687 = sub i64 %3686, 8
  %3688 = load i64, i64* %PC.i777
  %3689 = add i64 %3688, 4
  store i64 %3689, i64* %PC.i777
  %3690 = inttoptr i64 %3687 to i32*
  %3691 = load i32, i32* %3690
  %3692 = sub i32 %3691, 3
  %3693 = icmp ult i32 %3691, 3
  %3694 = zext i1 %3693 to i8
  %3695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3694, i8* %3695, align 1
  %3696 = and i32 %3692, 255
  %3697 = call i32 @llvm.ctpop.i32(i32 %3696)
  %3698 = trunc i32 %3697 to i8
  %3699 = and i8 %3698, 1
  %3700 = xor i8 %3699, 1
  %3701 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3700, i8* %3701, align 1
  %3702 = xor i32 %3691, 3
  %3703 = xor i32 %3702, %3692
  %3704 = lshr i32 %3703, 4
  %3705 = trunc i32 %3704 to i8
  %3706 = and i8 %3705, 1
  %3707 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3706, i8* %3707, align 1
  %3708 = icmp eq i32 %3692, 0
  %3709 = zext i1 %3708 to i8
  %3710 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3709, i8* %3710, align 1
  %3711 = lshr i32 %3692, 31
  %3712 = trunc i32 %3711 to i8
  %3713 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3712, i8* %3713, align 1
  %3714 = lshr i32 %3691, 31
  %3715 = xor i32 %3711, %3714
  %3716 = add i32 %3715, %3714
  %3717 = icmp eq i32 %3716, 2
  %3718 = zext i1 %3717 to i8
  %3719 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3718, i8* %3719, align 1
  store %struct.Memory* %loadMem_400b59, %struct.Memory** %MEMORY
  %loadMem_400b5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3720 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3721 = getelementptr inbounds %struct.GPR, %struct.GPR* %3720, i32 0, i32 33
  %3722 = getelementptr inbounds %struct.Reg, %struct.Reg* %3721, i32 0, i32 0
  %PC.i776 = bitcast %union.anon* %3722 to i64*
  %3723 = load i64, i64* %PC.i776
  %3724 = add i64 %3723, 89
  %3725 = load i64, i64* %PC.i776
  %3726 = add i64 %3725, 6
  %3727 = load i64, i64* %PC.i776
  %3728 = add i64 %3727, 6
  store i64 %3728, i64* %PC.i776
  %3729 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3730 = load i8, i8* %3729, align 1
  %3731 = icmp eq i8 %3730, 0
  %3732 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3733 = load i8, i8* %3732, align 1
  %3734 = icmp ne i8 %3733, 0
  %3735 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3736 = load i8, i8* %3735, align 1
  %3737 = icmp ne i8 %3736, 0
  %3738 = xor i1 %3734, %3737
  %3739 = xor i1 %3738, true
  %3740 = and i1 %3731, %3739
  %3741 = zext i1 %3740 to i8
  store i8 %3741, i8* %BRANCH_TAKEN, align 1
  %3742 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3743 = select i1 %3740, i64 %3724, i64 %3726
  store i64 %3743, i64* %3742, align 8
  store %struct.Memory* %loadMem_400b5d, %struct.Memory** %MEMORY
  %loadBr_400b5d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400b5d = icmp eq i8 %loadBr_400b5d, 1
  br i1 %cmpBr_400b5d, label %block_.L_400bb6, label %block_400b63

block_400b63:                                     ; preds = %block_.L_400b59
  %loadMem_400b63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3745 = getelementptr inbounds %struct.GPR, %struct.GPR* %3744, i32 0, i32 33
  %3746 = getelementptr inbounds %struct.Reg, %struct.Reg* %3745, i32 0, i32 0
  %PC.i774 = bitcast %union.anon* %3746 to i64*
  %3747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3748 = getelementptr inbounds %struct.GPR, %struct.GPR* %3747, i32 0, i32 15
  %3749 = getelementptr inbounds %struct.Reg, %struct.Reg* %3748, i32 0, i32 0
  %RBP.i775 = bitcast %union.anon* %3749 to i64*
  %3750 = load i64, i64* %RBP.i775
  %3751 = sub i64 %3750, 12
  %3752 = load i64, i64* %PC.i774
  %3753 = add i64 %3752, 7
  store i64 %3753, i64* %PC.i774
  %3754 = inttoptr i64 %3751 to i32*
  store i32 0, i32* %3754
  store %struct.Memory* %loadMem_400b63, %struct.Memory** %MEMORY
  br label %block_.L_400b6a

block_.L_400b6a:                                  ; preds = %block_400b74, %block_400b63
  %loadMem_400b6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3756 = getelementptr inbounds %struct.GPR, %struct.GPR* %3755, i32 0, i32 33
  %3757 = getelementptr inbounds %struct.Reg, %struct.Reg* %3756, i32 0, i32 0
  %PC.i772 = bitcast %union.anon* %3757 to i64*
  %3758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3759 = getelementptr inbounds %struct.GPR, %struct.GPR* %3758, i32 0, i32 15
  %3760 = getelementptr inbounds %struct.Reg, %struct.Reg* %3759, i32 0, i32 0
  %RBP.i773 = bitcast %union.anon* %3760 to i64*
  %3761 = load i64, i64* %RBP.i773
  %3762 = sub i64 %3761, 12
  %3763 = load i64, i64* %PC.i772
  %3764 = add i64 %3763, 4
  store i64 %3764, i64* %PC.i772
  %3765 = inttoptr i64 %3762 to i32*
  %3766 = load i32, i32* %3765
  %3767 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3767, align 1
  %3768 = and i32 %3766, 255
  %3769 = call i32 @llvm.ctpop.i32(i32 %3768)
  %3770 = trunc i32 %3769 to i8
  %3771 = and i8 %3770, 1
  %3772 = xor i8 %3771, 1
  %3773 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3772, i8* %3773, align 1
  %3774 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3774, align 1
  %3775 = icmp eq i32 %3766, 0
  %3776 = zext i1 %3775 to i8
  %3777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3776, i8* %3777, align 1
  %3778 = lshr i32 %3766, 31
  %3779 = trunc i32 %3778 to i8
  %3780 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3779, i8* %3780, align 1
  %3781 = lshr i32 %3766, 31
  %3782 = xor i32 %3778, %3781
  %3783 = add i32 %3782, %3781
  %3784 = icmp eq i32 %3783, 2
  %3785 = zext i1 %3784 to i8
  %3786 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3785, i8* %3786, align 1
  store %struct.Memory* %loadMem_400b6a, %struct.Memory** %MEMORY
  %loadMem_400b6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3788 = getelementptr inbounds %struct.GPR, %struct.GPR* %3787, i32 0, i32 33
  %3789 = getelementptr inbounds %struct.Reg, %struct.Reg* %3788, i32 0, i32 0
  %PC.i771 = bitcast %union.anon* %3789 to i64*
  %3790 = load i64, i64* %PC.i771
  %3791 = add i64 %3790, 53
  %3792 = load i64, i64* %PC.i771
  %3793 = add i64 %3792, 6
  %3794 = load i64, i64* %PC.i771
  %3795 = add i64 %3794, 6
  store i64 %3795, i64* %PC.i771
  %3796 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3797 = load i8, i8* %3796, align 1
  %3798 = icmp eq i8 %3797, 0
  %3799 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3800 = load i8, i8* %3799, align 1
  %3801 = icmp ne i8 %3800, 0
  %3802 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3803 = load i8, i8* %3802, align 1
  %3804 = icmp ne i8 %3803, 0
  %3805 = xor i1 %3801, %3804
  %3806 = xor i1 %3805, true
  %3807 = and i1 %3798, %3806
  %3808 = zext i1 %3807 to i8
  store i8 %3808, i8* %BRANCH_TAKEN, align 1
  %3809 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3810 = select i1 %3807, i64 %3791, i64 %3793
  store i64 %3810, i64* %3809, align 8
  store %struct.Memory* %loadMem_400b6e, %struct.Memory** %MEMORY
  %loadBr_400b6e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400b6e = icmp eq i8 %loadBr_400b6e, 1
  br i1 %cmpBr_400b6e, label %block_.L_400ba3, label %block_400b74

block_400b74:                                     ; preds = %block_.L_400b6a
  %loadMem_400b74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3812 = getelementptr inbounds %struct.GPR, %struct.GPR* %3811, i32 0, i32 33
  %3813 = getelementptr inbounds %struct.Reg, %struct.Reg* %3812, i32 0, i32 0
  %PC.i768 = bitcast %union.anon* %3813 to i64*
  %3814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3815 = getelementptr inbounds %struct.GPR, %struct.GPR* %3814, i32 0, i32 1
  %3816 = getelementptr inbounds %struct.Reg, %struct.Reg* %3815, i32 0, i32 0
  %RAX.i769 = bitcast %union.anon* %3816 to i64*
  %3817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3818 = getelementptr inbounds %struct.GPR, %struct.GPR* %3817, i32 0, i32 15
  %3819 = getelementptr inbounds %struct.Reg, %struct.Reg* %3818, i32 0, i32 0
  %RBP.i770 = bitcast %union.anon* %3819 to i64*
  %3820 = load i64, i64* %RBP.i770
  %3821 = sub i64 %3820, 4
  %3822 = load i64, i64* %PC.i768
  %3823 = add i64 %3822, 3
  store i64 %3823, i64* %PC.i768
  %3824 = inttoptr i64 %3821 to i32*
  %3825 = load i32, i32* %3824
  %3826 = zext i32 %3825 to i64
  store i64 %3826, i64* %RAX.i769, align 8
  store %struct.Memory* %loadMem_400b74, %struct.Memory** %MEMORY
  %loadMem_400b77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3828 = getelementptr inbounds %struct.GPR, %struct.GPR* %3827, i32 0, i32 33
  %3829 = getelementptr inbounds %struct.Reg, %struct.Reg* %3828, i32 0, i32 0
  %PC.i765 = bitcast %union.anon* %3829 to i64*
  %3830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3831 = getelementptr inbounds %struct.GPR, %struct.GPR* %3830, i32 0, i32 5
  %3832 = getelementptr inbounds %struct.Reg, %struct.Reg* %3831, i32 0, i32 0
  %RCX.i766 = bitcast %union.anon* %3832 to i64*
  %3833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3834 = getelementptr inbounds %struct.GPR, %struct.GPR* %3833, i32 0, i32 15
  %3835 = getelementptr inbounds %struct.Reg, %struct.Reg* %3834, i32 0, i32 0
  %RBP.i767 = bitcast %union.anon* %3835 to i64*
  %3836 = load i64, i64* %RBP.i767
  %3837 = sub i64 %3836, 8
  %3838 = load i64, i64* %PC.i765
  %3839 = add i64 %3838, 3
  store i64 %3839, i64* %PC.i765
  %3840 = inttoptr i64 %3837 to i32*
  %3841 = load i32, i32* %3840
  %3842 = zext i32 %3841 to i64
  store i64 %3842, i64* %RCX.i766, align 8
  store %struct.Memory* %loadMem_400b77, %struct.Memory** %MEMORY
  %loadMem_400b7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3844 = getelementptr inbounds %struct.GPR, %struct.GPR* %3843, i32 0, i32 33
  %3845 = getelementptr inbounds %struct.Reg, %struct.Reg* %3844, i32 0, i32 0
  %PC.i762 = bitcast %union.anon* %3845 to i64*
  %3846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3847 = getelementptr inbounds %struct.GPR, %struct.GPR* %3846, i32 0, i32 7
  %3848 = getelementptr inbounds %struct.Reg, %struct.Reg* %3847, i32 0, i32 0
  %RDX.i763 = bitcast %union.anon* %3848 to i64*
  %3849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3850 = getelementptr inbounds %struct.GPR, %struct.GPR* %3849, i32 0, i32 15
  %3851 = getelementptr inbounds %struct.Reg, %struct.Reg* %3850, i32 0, i32 0
  %RBP.i764 = bitcast %union.anon* %3851 to i64*
  %3852 = load i64, i64* %RBP.i764
  %3853 = sub i64 %3852, 12
  %3854 = load i64, i64* %PC.i762
  %3855 = add i64 %3854, 3
  store i64 %3855, i64* %PC.i762
  %3856 = inttoptr i64 %3853 to i32*
  %3857 = load i32, i32* %3856
  %3858 = zext i32 %3857 to i64
  store i64 %3858, i64* %RDX.i763, align 8
  store %struct.Memory* %loadMem_400b7a, %struct.Memory** %MEMORY
  %loadMem_400b7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3860 = getelementptr inbounds %struct.GPR, %struct.GPR* %3859, i32 0, i32 33
  %3861 = getelementptr inbounds %struct.Reg, %struct.Reg* %3860, i32 0, i32 0
  %PC.i760 = bitcast %union.anon* %3861 to i64*
  %3862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3863 = getelementptr inbounds %struct.GPR, %struct.GPR* %3862, i32 0, i32 7
  %3864 = getelementptr inbounds %struct.Reg, %struct.Reg* %3863, i32 0, i32 0
  %RDX.i761 = bitcast %union.anon* %3864 to i64*
  %3865 = load i64, i64* %RDX.i761
  %3866 = load i64, i64* %PC.i760
  %3867 = add i64 %3866, 3
  store i64 %3867, i64* %PC.i760
  %3868 = and i64 %3865, 4294967295
  %3869 = shl i64 %3868, 2
  %3870 = trunc i64 %3869 to i32
  %3871 = icmp slt i32 %3870, 0
  %3872 = shl i32 %3870, 1
  %3873 = zext i32 %3872 to i64
  store i64 %3873, i64* %RDX.i761, align 8
  %3874 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %3875 = zext i1 %3871 to i8
  store i8 %3875, i8* %3874, align 1
  %3876 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %3877 = and i32 %3872, 254
  %3878 = call i32 @llvm.ctpop.i32(i32 %3877)
  %3879 = trunc i32 %3878 to i8
  %3880 = and i8 %3879, 1
  %3881 = xor i8 %3880, 1
  store i8 %3881, i8* %3876, align 1
  %3882 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3882, align 1
  %3883 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3884 = icmp eq i32 %3872, 0
  %3885 = zext i1 %3884 to i8
  store i8 %3885, i8* %3883, align 1
  %3886 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3887 = lshr i32 %3872, 31
  %3888 = trunc i32 %3887 to i8
  store i8 %3888, i8* %3886, align 1
  %3889 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3889, align 1
  store %struct.Memory* %loadMem_400b7d, %struct.Memory** %MEMORY
  %loadMem_400b80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3891 = getelementptr inbounds %struct.GPR, %struct.GPR* %3890, i32 0, i32 33
  %3892 = getelementptr inbounds %struct.Reg, %struct.Reg* %3891, i32 0, i32 0
  %PC.i757 = bitcast %union.anon* %3892 to i64*
  %3893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3894 = getelementptr inbounds %struct.GPR, %struct.GPR* %3893, i32 0, i32 7
  %3895 = getelementptr inbounds %struct.Reg, %struct.Reg* %3894, i32 0, i32 0
  %EDX.i758 = bitcast %union.anon* %3895 to i32*
  %3896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3897 = getelementptr inbounds %struct.GPR, %struct.GPR* %3896, i32 0, i32 5
  %3898 = getelementptr inbounds %struct.Reg, %struct.Reg* %3897, i32 0, i32 0
  %RCX.i759 = bitcast %union.anon* %3898 to i64*
  %3899 = load i64, i64* %RCX.i759
  %3900 = load i32, i32* %EDX.i758
  %3901 = zext i32 %3900 to i64
  %3902 = load i64, i64* %PC.i757
  %3903 = add i64 %3902, 2
  store i64 %3903, i64* %PC.i757
  %3904 = trunc i64 %3899 to i32
  %3905 = add i32 %3900, %3904
  %3906 = zext i32 %3905 to i64
  store i64 %3906, i64* %RCX.i759, align 8
  %3907 = icmp ult i32 %3905, %3904
  %3908 = icmp ult i32 %3905, %3900
  %3909 = or i1 %3907, %3908
  %3910 = zext i1 %3909 to i8
  %3911 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3910, i8* %3911, align 1
  %3912 = and i32 %3905, 255
  %3913 = call i32 @llvm.ctpop.i32(i32 %3912)
  %3914 = trunc i32 %3913 to i8
  %3915 = and i8 %3914, 1
  %3916 = xor i8 %3915, 1
  %3917 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3916, i8* %3917, align 1
  %3918 = xor i64 %3901, %3899
  %3919 = trunc i64 %3918 to i32
  %3920 = xor i32 %3919, %3905
  %3921 = lshr i32 %3920, 4
  %3922 = trunc i32 %3921 to i8
  %3923 = and i8 %3922, 1
  %3924 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3923, i8* %3924, align 1
  %3925 = icmp eq i32 %3905, 0
  %3926 = zext i1 %3925 to i8
  %3927 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3926, i8* %3927, align 1
  %3928 = lshr i32 %3905, 31
  %3929 = trunc i32 %3928 to i8
  %3930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3929, i8* %3930, align 1
  %3931 = lshr i32 %3904, 31
  %3932 = lshr i32 %3900, 31
  %3933 = xor i32 %3928, %3931
  %3934 = xor i32 %3928, %3932
  %3935 = add i32 %3933, %3934
  %3936 = icmp eq i32 %3935, 2
  %3937 = zext i1 %3936 to i8
  %3938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3937, i8* %3938, align 1
  store %struct.Memory* %loadMem_400b80, %struct.Memory** %MEMORY
  %loadMem_400b82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3940 = getelementptr inbounds %struct.GPR, %struct.GPR* %3939, i32 0, i32 33
  %3941 = getelementptr inbounds %struct.Reg, %struct.Reg* %3940, i32 0, i32 0
  %PC.i755 = bitcast %union.anon* %3941 to i64*
  %3942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3943 = getelementptr inbounds %struct.GPR, %struct.GPR* %3942, i32 0, i32 5
  %3944 = getelementptr inbounds %struct.Reg, %struct.Reg* %3943, i32 0, i32 0
  %RCX.i756 = bitcast %union.anon* %3944 to i64*
  %3945 = load i64, i64* %RCX.i756
  %3946 = load i64, i64* %PC.i755
  %3947 = add i64 %3946, 3
  store i64 %3947, i64* %PC.i755
  %3948 = and i64 %3945, 4294967295
  %3949 = shl i64 %3948, 2
  %3950 = trunc i64 %3949 to i32
  %3951 = icmp slt i32 %3950, 0
  %3952 = shl i32 %3950, 1
  %3953 = zext i32 %3952 to i64
  store i64 %3953, i64* %RCX.i756, align 8
  %3954 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %3955 = zext i1 %3951 to i8
  store i8 %3955, i8* %3954, align 1
  %3956 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %3957 = and i32 %3952, 254
  %3958 = call i32 @llvm.ctpop.i32(i32 %3957)
  %3959 = trunc i32 %3958 to i8
  %3960 = and i8 %3959, 1
  %3961 = xor i8 %3960, 1
  store i8 %3961, i8* %3956, align 1
  %3962 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3962, align 1
  %3963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3964 = icmp eq i32 %3952, 0
  %3965 = zext i1 %3964 to i8
  store i8 %3965, i8* %3963, align 1
  %3966 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3967 = lshr i32 %3952, 31
  %3968 = trunc i32 %3967 to i8
  store i8 %3968, i8* %3966, align 1
  %3969 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3969, align 1
  store %struct.Memory* %loadMem_400b82, %struct.Memory** %MEMORY
  %loadMem_400b85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3971 = getelementptr inbounds %struct.GPR, %struct.GPR* %3970, i32 0, i32 33
  %3972 = getelementptr inbounds %struct.Reg, %struct.Reg* %3971, i32 0, i32 0
  %PC.i752 = bitcast %union.anon* %3972 to i64*
  %3973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3974 = getelementptr inbounds %struct.GPR, %struct.GPR* %3973, i32 0, i32 5
  %3975 = getelementptr inbounds %struct.Reg, %struct.Reg* %3974, i32 0, i32 0
  %ECX.i753 = bitcast %union.anon* %3975 to i32*
  %3976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3977 = getelementptr inbounds %struct.GPR, %struct.GPR* %3976, i32 0, i32 1
  %3978 = getelementptr inbounds %struct.Reg, %struct.Reg* %3977, i32 0, i32 0
  %RAX.i754 = bitcast %union.anon* %3978 to i64*
  %3979 = load i64, i64* %RAX.i754
  %3980 = load i32, i32* %ECX.i753
  %3981 = zext i32 %3980 to i64
  %3982 = load i64, i64* %PC.i752
  %3983 = add i64 %3982, 2
  store i64 %3983, i64* %PC.i752
  %3984 = trunc i64 %3979 to i32
  %3985 = add i32 %3980, %3984
  %3986 = zext i32 %3985 to i64
  store i64 %3986, i64* %RAX.i754, align 8
  %3987 = icmp ult i32 %3985, %3984
  %3988 = icmp ult i32 %3985, %3980
  %3989 = or i1 %3987, %3988
  %3990 = zext i1 %3989 to i8
  %3991 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3990, i8* %3991, align 1
  %3992 = and i32 %3985, 255
  %3993 = call i32 @llvm.ctpop.i32(i32 %3992)
  %3994 = trunc i32 %3993 to i8
  %3995 = and i8 %3994, 1
  %3996 = xor i8 %3995, 1
  %3997 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3996, i8* %3997, align 1
  %3998 = xor i64 %3981, %3979
  %3999 = trunc i64 %3998 to i32
  %4000 = xor i32 %3999, %3985
  %4001 = lshr i32 %4000, 4
  %4002 = trunc i32 %4001 to i8
  %4003 = and i8 %4002, 1
  %4004 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4003, i8* %4004, align 1
  %4005 = icmp eq i32 %3985, 0
  %4006 = zext i1 %4005 to i8
  %4007 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4006, i8* %4007, align 1
  %4008 = lshr i32 %3985, 31
  %4009 = trunc i32 %4008 to i8
  %4010 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4009, i8* %4010, align 1
  %4011 = lshr i32 %3984, 31
  %4012 = lshr i32 %3980, 31
  %4013 = xor i32 %4008, %4011
  %4014 = xor i32 %4008, %4012
  %4015 = add i32 %4013, %4014
  %4016 = icmp eq i32 %4015, 2
  %4017 = zext i1 %4016 to i8
  %4018 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4017, i8* %4018, align 1
  store %struct.Memory* %loadMem_400b85, %struct.Memory** %MEMORY
  %loadMem_400b87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4020 = getelementptr inbounds %struct.GPR, %struct.GPR* %4019, i32 0, i32 33
  %4021 = getelementptr inbounds %struct.Reg, %struct.Reg* %4020, i32 0, i32 0
  %PC.i749 = bitcast %union.anon* %4021 to i64*
  %4022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4023 = getelementptr inbounds %struct.GPR, %struct.GPR* %4022, i32 0, i32 1
  %4024 = getelementptr inbounds %struct.Reg, %struct.Reg* %4023, i32 0, i32 0
  %EAX.i750 = bitcast %union.anon* %4024 to i32*
  %4025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4026 = getelementptr inbounds %struct.GPR, %struct.GPR* %4025, i32 0, i32 9
  %4027 = getelementptr inbounds %struct.Reg, %struct.Reg* %4026, i32 0, i32 0
  %RSI.i751 = bitcast %union.anon* %4027 to i64*
  %4028 = load i32, i32* %EAX.i750
  %4029 = zext i32 %4028 to i64
  %4030 = load i64, i64* %PC.i749
  %4031 = add i64 %4030, 3
  store i64 %4031, i64* %PC.i749
  %4032 = shl i64 %4029, 32
  %4033 = ashr exact i64 %4032, 32
  store i64 %4033, i64* %RSI.i751, align 8
  store %struct.Memory* %loadMem_400b87, %struct.Memory** %MEMORY
  %loadMem_400b8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4035 = getelementptr inbounds %struct.GPR, %struct.GPR* %4034, i32 0, i32 33
  %4036 = getelementptr inbounds %struct.Reg, %struct.Reg* %4035, i32 0, i32 0
  %PC.i747 = bitcast %union.anon* %4036 to i64*
  %4037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4038 = getelementptr inbounds %struct.GPR, %struct.GPR* %4037, i32 0, i32 9
  %4039 = getelementptr inbounds %struct.Reg, %struct.Reg* %4038, i32 0, i32 0
  %RSI.i748 = bitcast %union.anon* %4039 to i64*
  %4040 = load i64, i64* %RSI.i748
  %4041 = mul i64 %4040, 4
  %4042 = add i64 %4041, ptrtoint (%G_0x6052a0___rsi_4__type* @G_0x6052a0___rsi_4_ to i64)
  %4043 = load i64, i64* %PC.i747
  %4044 = add i64 %4043, 11
  store i64 %4044, i64* %PC.i747
  %4045 = inttoptr i64 %4042 to i32*
  store i32 1, i32* %4045
  store %struct.Memory* %loadMem_400b8a, %struct.Memory** %MEMORY
  %loadMem_400b95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4047 = getelementptr inbounds %struct.GPR, %struct.GPR* %4046, i32 0, i32 33
  %4048 = getelementptr inbounds %struct.Reg, %struct.Reg* %4047, i32 0, i32 0
  %PC.i744 = bitcast %union.anon* %4048 to i64*
  %4049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4050 = getelementptr inbounds %struct.GPR, %struct.GPR* %4049, i32 0, i32 1
  %4051 = getelementptr inbounds %struct.Reg, %struct.Reg* %4050, i32 0, i32 0
  %RAX.i745 = bitcast %union.anon* %4051 to i64*
  %4052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4053 = getelementptr inbounds %struct.GPR, %struct.GPR* %4052, i32 0, i32 15
  %4054 = getelementptr inbounds %struct.Reg, %struct.Reg* %4053, i32 0, i32 0
  %RBP.i746 = bitcast %union.anon* %4054 to i64*
  %4055 = load i64, i64* %RBP.i746
  %4056 = sub i64 %4055, 12
  %4057 = load i64, i64* %PC.i744
  %4058 = add i64 %4057, 3
  store i64 %4058, i64* %PC.i744
  %4059 = inttoptr i64 %4056 to i32*
  %4060 = load i32, i32* %4059
  %4061 = zext i32 %4060 to i64
  store i64 %4061, i64* %RAX.i745, align 8
  store %struct.Memory* %loadMem_400b95, %struct.Memory** %MEMORY
  %loadMem_400b98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4063 = getelementptr inbounds %struct.GPR, %struct.GPR* %4062, i32 0, i32 33
  %4064 = getelementptr inbounds %struct.Reg, %struct.Reg* %4063, i32 0, i32 0
  %PC.i742 = bitcast %union.anon* %4064 to i64*
  %4065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4066 = getelementptr inbounds %struct.GPR, %struct.GPR* %4065, i32 0, i32 1
  %4067 = getelementptr inbounds %struct.Reg, %struct.Reg* %4066, i32 0, i32 0
  %RAX.i743 = bitcast %union.anon* %4067 to i64*
  %4068 = load i64, i64* %RAX.i743
  %4069 = load i64, i64* %PC.i742
  %4070 = add i64 %4069, 3
  store i64 %4070, i64* %PC.i742
  %4071 = trunc i64 %4068 to i32
  %4072 = add i32 1, %4071
  %4073 = zext i32 %4072 to i64
  store i64 %4073, i64* %RAX.i743, align 8
  %4074 = icmp ult i32 %4072, %4071
  %4075 = icmp ult i32 %4072, 1
  %4076 = or i1 %4074, %4075
  %4077 = zext i1 %4076 to i8
  %4078 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4077, i8* %4078, align 1
  %4079 = and i32 %4072, 255
  %4080 = call i32 @llvm.ctpop.i32(i32 %4079)
  %4081 = trunc i32 %4080 to i8
  %4082 = and i8 %4081, 1
  %4083 = xor i8 %4082, 1
  %4084 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4083, i8* %4084, align 1
  %4085 = xor i64 1, %4068
  %4086 = trunc i64 %4085 to i32
  %4087 = xor i32 %4086, %4072
  %4088 = lshr i32 %4087, 4
  %4089 = trunc i32 %4088 to i8
  %4090 = and i8 %4089, 1
  %4091 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4090, i8* %4091, align 1
  %4092 = icmp eq i32 %4072, 0
  %4093 = zext i1 %4092 to i8
  %4094 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4093, i8* %4094, align 1
  %4095 = lshr i32 %4072, 31
  %4096 = trunc i32 %4095 to i8
  %4097 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4096, i8* %4097, align 1
  %4098 = lshr i32 %4071, 31
  %4099 = xor i32 %4095, %4098
  %4100 = add i32 %4099, %4095
  %4101 = icmp eq i32 %4100, 2
  %4102 = zext i1 %4101 to i8
  %4103 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4102, i8* %4103, align 1
  store %struct.Memory* %loadMem_400b98, %struct.Memory** %MEMORY
  %loadMem_400b9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4105 = getelementptr inbounds %struct.GPR, %struct.GPR* %4104, i32 0, i32 33
  %4106 = getelementptr inbounds %struct.Reg, %struct.Reg* %4105, i32 0, i32 0
  %PC.i739 = bitcast %union.anon* %4106 to i64*
  %4107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4108 = getelementptr inbounds %struct.GPR, %struct.GPR* %4107, i32 0, i32 1
  %4109 = getelementptr inbounds %struct.Reg, %struct.Reg* %4108, i32 0, i32 0
  %EAX.i740 = bitcast %union.anon* %4109 to i32*
  %4110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4111 = getelementptr inbounds %struct.GPR, %struct.GPR* %4110, i32 0, i32 15
  %4112 = getelementptr inbounds %struct.Reg, %struct.Reg* %4111, i32 0, i32 0
  %RBP.i741 = bitcast %union.anon* %4112 to i64*
  %4113 = load i64, i64* %RBP.i741
  %4114 = sub i64 %4113, 12
  %4115 = load i32, i32* %EAX.i740
  %4116 = zext i32 %4115 to i64
  %4117 = load i64, i64* %PC.i739
  %4118 = add i64 %4117, 3
  store i64 %4118, i64* %PC.i739
  %4119 = inttoptr i64 %4114 to i32*
  store i32 %4115, i32* %4119
  store %struct.Memory* %loadMem_400b9b, %struct.Memory** %MEMORY
  %loadMem_400b9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4121 = getelementptr inbounds %struct.GPR, %struct.GPR* %4120, i32 0, i32 33
  %4122 = getelementptr inbounds %struct.Reg, %struct.Reg* %4121, i32 0, i32 0
  %PC.i738 = bitcast %union.anon* %4122 to i64*
  %4123 = load i64, i64* %PC.i738
  %4124 = add i64 %4123, -52
  %4125 = load i64, i64* %PC.i738
  %4126 = add i64 %4125, 5
  store i64 %4126, i64* %PC.i738
  %4127 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4124, i64* %4127, align 8
  store %struct.Memory* %loadMem_400b9e, %struct.Memory** %MEMORY
  br label %block_.L_400b6a

block_.L_400ba3:                                  ; preds = %block_.L_400b6a
  %loadMem_400ba3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4129 = getelementptr inbounds %struct.GPR, %struct.GPR* %4128, i32 0, i32 33
  %4130 = getelementptr inbounds %struct.Reg, %struct.Reg* %4129, i32 0, i32 0
  %PC.i737 = bitcast %union.anon* %4130 to i64*
  %4131 = load i64, i64* %PC.i737
  %4132 = add i64 %4131, 5
  %4133 = load i64, i64* %PC.i737
  %4134 = add i64 %4133, 5
  store i64 %4134, i64* %PC.i737
  %4135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4132, i64* %4135, align 8
  store %struct.Memory* %loadMem_400ba3, %struct.Memory** %MEMORY
  br label %block_.L_400ba8

block_.L_400ba8:                                  ; preds = %block_.L_400ba3
  %loadMem_400ba8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4136 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4137 = getelementptr inbounds %struct.GPR, %struct.GPR* %4136, i32 0, i32 33
  %4138 = getelementptr inbounds %struct.Reg, %struct.Reg* %4137, i32 0, i32 0
  %PC.i734 = bitcast %union.anon* %4138 to i64*
  %4139 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4140 = getelementptr inbounds %struct.GPR, %struct.GPR* %4139, i32 0, i32 1
  %4141 = getelementptr inbounds %struct.Reg, %struct.Reg* %4140, i32 0, i32 0
  %RAX.i735 = bitcast %union.anon* %4141 to i64*
  %4142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4143 = getelementptr inbounds %struct.GPR, %struct.GPR* %4142, i32 0, i32 15
  %4144 = getelementptr inbounds %struct.Reg, %struct.Reg* %4143, i32 0, i32 0
  %RBP.i736 = bitcast %union.anon* %4144 to i64*
  %4145 = load i64, i64* %RBP.i736
  %4146 = sub i64 %4145, 8
  %4147 = load i64, i64* %PC.i734
  %4148 = add i64 %4147, 3
  store i64 %4148, i64* %PC.i734
  %4149 = inttoptr i64 %4146 to i32*
  %4150 = load i32, i32* %4149
  %4151 = zext i32 %4150 to i64
  store i64 %4151, i64* %RAX.i735, align 8
  store %struct.Memory* %loadMem_400ba8, %struct.Memory** %MEMORY
  %loadMem_400bab = load %struct.Memory*, %struct.Memory** %MEMORY
  %4152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4153 = getelementptr inbounds %struct.GPR, %struct.GPR* %4152, i32 0, i32 33
  %4154 = getelementptr inbounds %struct.Reg, %struct.Reg* %4153, i32 0, i32 0
  %PC.i732 = bitcast %union.anon* %4154 to i64*
  %4155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4156 = getelementptr inbounds %struct.GPR, %struct.GPR* %4155, i32 0, i32 1
  %4157 = getelementptr inbounds %struct.Reg, %struct.Reg* %4156, i32 0, i32 0
  %RAX.i733 = bitcast %union.anon* %4157 to i64*
  %4158 = load i64, i64* %RAX.i733
  %4159 = load i64, i64* %PC.i732
  %4160 = add i64 %4159, 3
  store i64 %4160, i64* %PC.i732
  %4161 = trunc i64 %4158 to i32
  %4162 = add i32 1, %4161
  %4163 = zext i32 %4162 to i64
  store i64 %4163, i64* %RAX.i733, align 8
  %4164 = icmp ult i32 %4162, %4161
  %4165 = icmp ult i32 %4162, 1
  %4166 = or i1 %4164, %4165
  %4167 = zext i1 %4166 to i8
  %4168 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4167, i8* %4168, align 1
  %4169 = and i32 %4162, 255
  %4170 = call i32 @llvm.ctpop.i32(i32 %4169)
  %4171 = trunc i32 %4170 to i8
  %4172 = and i8 %4171, 1
  %4173 = xor i8 %4172, 1
  %4174 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4173, i8* %4174, align 1
  %4175 = xor i64 1, %4158
  %4176 = trunc i64 %4175 to i32
  %4177 = xor i32 %4176, %4162
  %4178 = lshr i32 %4177, 4
  %4179 = trunc i32 %4178 to i8
  %4180 = and i8 %4179, 1
  %4181 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4180, i8* %4181, align 1
  %4182 = icmp eq i32 %4162, 0
  %4183 = zext i1 %4182 to i8
  %4184 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4183, i8* %4184, align 1
  %4185 = lshr i32 %4162, 31
  %4186 = trunc i32 %4185 to i8
  %4187 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4186, i8* %4187, align 1
  %4188 = lshr i32 %4161, 31
  %4189 = xor i32 %4185, %4188
  %4190 = add i32 %4189, %4185
  %4191 = icmp eq i32 %4190, 2
  %4192 = zext i1 %4191 to i8
  %4193 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4192, i8* %4193, align 1
  store %struct.Memory* %loadMem_400bab, %struct.Memory** %MEMORY
  %loadMem_400bae = load %struct.Memory*, %struct.Memory** %MEMORY
  %4194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4195 = getelementptr inbounds %struct.GPR, %struct.GPR* %4194, i32 0, i32 33
  %4196 = getelementptr inbounds %struct.Reg, %struct.Reg* %4195, i32 0, i32 0
  %PC.i729 = bitcast %union.anon* %4196 to i64*
  %4197 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4198 = getelementptr inbounds %struct.GPR, %struct.GPR* %4197, i32 0, i32 1
  %4199 = getelementptr inbounds %struct.Reg, %struct.Reg* %4198, i32 0, i32 0
  %EAX.i730 = bitcast %union.anon* %4199 to i32*
  %4200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4201 = getelementptr inbounds %struct.GPR, %struct.GPR* %4200, i32 0, i32 15
  %4202 = getelementptr inbounds %struct.Reg, %struct.Reg* %4201, i32 0, i32 0
  %RBP.i731 = bitcast %union.anon* %4202 to i64*
  %4203 = load i64, i64* %RBP.i731
  %4204 = sub i64 %4203, 8
  %4205 = load i32, i32* %EAX.i730
  %4206 = zext i32 %4205 to i64
  %4207 = load i64, i64* %PC.i729
  %4208 = add i64 %4207, 3
  store i64 %4208, i64* %PC.i729
  %4209 = inttoptr i64 %4204 to i32*
  store i32 %4205, i32* %4209
  store %struct.Memory* %loadMem_400bae, %struct.Memory** %MEMORY
  %loadMem_400bb1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4211 = getelementptr inbounds %struct.GPR, %struct.GPR* %4210, i32 0, i32 33
  %4212 = getelementptr inbounds %struct.Reg, %struct.Reg* %4211, i32 0, i32 0
  %PC.i728 = bitcast %union.anon* %4212 to i64*
  %4213 = load i64, i64* %PC.i728
  %4214 = add i64 %4213, -88
  %4215 = load i64, i64* %PC.i728
  %4216 = add i64 %4215, 5
  store i64 %4216, i64* %PC.i728
  %4217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4214, i64* %4217, align 8
  store %struct.Memory* %loadMem_400bb1, %struct.Memory** %MEMORY
  br label %block_.L_400b59

block_.L_400bb6:                                  ; preds = %block_.L_400b59
  %loadMem_400bb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4219 = getelementptr inbounds %struct.GPR, %struct.GPR* %4218, i32 0, i32 33
  %4220 = getelementptr inbounds %struct.Reg, %struct.Reg* %4219, i32 0, i32 0
  %PC.i727 = bitcast %union.anon* %4220 to i64*
  %4221 = load i64, i64* %PC.i727
  %4222 = add i64 %4221, 5
  %4223 = load i64, i64* %PC.i727
  %4224 = add i64 %4223, 5
  store i64 %4224, i64* %PC.i727
  %4225 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4222, i64* %4225, align 8
  store %struct.Memory* %loadMem_400bb6, %struct.Memory** %MEMORY
  br label %block_.L_400bbb

block_.L_400bbb:                                  ; preds = %block_.L_400bb6
  %loadMem_400bbb = load %struct.Memory*, %struct.Memory** %MEMORY
  %4226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4227 = getelementptr inbounds %struct.GPR, %struct.GPR* %4226, i32 0, i32 33
  %4228 = getelementptr inbounds %struct.Reg, %struct.Reg* %4227, i32 0, i32 0
  %PC.i724 = bitcast %union.anon* %4228 to i64*
  %4229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4230 = getelementptr inbounds %struct.GPR, %struct.GPR* %4229, i32 0, i32 1
  %4231 = getelementptr inbounds %struct.Reg, %struct.Reg* %4230, i32 0, i32 0
  %RAX.i725 = bitcast %union.anon* %4231 to i64*
  %4232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4233 = getelementptr inbounds %struct.GPR, %struct.GPR* %4232, i32 0, i32 15
  %4234 = getelementptr inbounds %struct.Reg, %struct.Reg* %4233, i32 0, i32 0
  %RBP.i726 = bitcast %union.anon* %4234 to i64*
  %4235 = load i64, i64* %RBP.i726
  %4236 = sub i64 %4235, 4
  %4237 = load i64, i64* %PC.i724
  %4238 = add i64 %4237, 3
  store i64 %4238, i64* %PC.i724
  %4239 = inttoptr i64 %4236 to i32*
  %4240 = load i32, i32* %4239
  %4241 = zext i32 %4240 to i64
  store i64 %4241, i64* %RAX.i725, align 8
  store %struct.Memory* %loadMem_400bbb, %struct.Memory** %MEMORY
  %loadMem_400bbe = load %struct.Memory*, %struct.Memory** %MEMORY
  %4242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4243 = getelementptr inbounds %struct.GPR, %struct.GPR* %4242, i32 0, i32 33
  %4244 = getelementptr inbounds %struct.Reg, %struct.Reg* %4243, i32 0, i32 0
  %PC.i722 = bitcast %union.anon* %4244 to i64*
  %4245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4246 = getelementptr inbounds %struct.GPR, %struct.GPR* %4245, i32 0, i32 1
  %4247 = getelementptr inbounds %struct.Reg, %struct.Reg* %4246, i32 0, i32 0
  %RAX.i723 = bitcast %union.anon* %4247 to i64*
  %4248 = load i64, i64* %RAX.i723
  %4249 = load i64, i64* %PC.i722
  %4250 = add i64 %4249, 3
  store i64 %4250, i64* %PC.i722
  %4251 = trunc i64 %4248 to i32
  %4252 = add i32 1, %4251
  %4253 = zext i32 %4252 to i64
  store i64 %4253, i64* %RAX.i723, align 8
  %4254 = icmp ult i32 %4252, %4251
  %4255 = icmp ult i32 %4252, 1
  %4256 = or i1 %4254, %4255
  %4257 = zext i1 %4256 to i8
  %4258 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4257, i8* %4258, align 1
  %4259 = and i32 %4252, 255
  %4260 = call i32 @llvm.ctpop.i32(i32 %4259)
  %4261 = trunc i32 %4260 to i8
  %4262 = and i8 %4261, 1
  %4263 = xor i8 %4262, 1
  %4264 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4263, i8* %4264, align 1
  %4265 = xor i64 1, %4248
  %4266 = trunc i64 %4265 to i32
  %4267 = xor i32 %4266, %4252
  %4268 = lshr i32 %4267, 4
  %4269 = trunc i32 %4268 to i8
  %4270 = and i8 %4269, 1
  %4271 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4270, i8* %4271, align 1
  %4272 = icmp eq i32 %4252, 0
  %4273 = zext i1 %4272 to i8
  %4274 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4273, i8* %4274, align 1
  %4275 = lshr i32 %4252, 31
  %4276 = trunc i32 %4275 to i8
  %4277 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4276, i8* %4277, align 1
  %4278 = lshr i32 %4251, 31
  %4279 = xor i32 %4275, %4278
  %4280 = add i32 %4279, %4275
  %4281 = icmp eq i32 %4280, 2
  %4282 = zext i1 %4281 to i8
  %4283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4282, i8* %4283, align 1
  store %struct.Memory* %loadMem_400bbe, %struct.Memory** %MEMORY
  %loadMem_400bc1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4285 = getelementptr inbounds %struct.GPR, %struct.GPR* %4284, i32 0, i32 33
  %4286 = getelementptr inbounds %struct.Reg, %struct.Reg* %4285, i32 0, i32 0
  %PC.i719 = bitcast %union.anon* %4286 to i64*
  %4287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4288 = getelementptr inbounds %struct.GPR, %struct.GPR* %4287, i32 0, i32 1
  %4289 = getelementptr inbounds %struct.Reg, %struct.Reg* %4288, i32 0, i32 0
  %EAX.i720 = bitcast %union.anon* %4289 to i32*
  %4290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4291 = getelementptr inbounds %struct.GPR, %struct.GPR* %4290, i32 0, i32 15
  %4292 = getelementptr inbounds %struct.Reg, %struct.Reg* %4291, i32 0, i32 0
  %RBP.i721 = bitcast %union.anon* %4292 to i64*
  %4293 = load i64, i64* %RBP.i721
  %4294 = sub i64 %4293, 4
  %4295 = load i32, i32* %EAX.i720
  %4296 = zext i32 %4295 to i64
  %4297 = load i64, i64* %PC.i719
  %4298 = add i64 %4297, 3
  store i64 %4298, i64* %PC.i719
  %4299 = inttoptr i64 %4294 to i32*
  store i32 %4295, i32* %4299
  store %struct.Memory* %loadMem_400bc1, %struct.Memory** %MEMORY
  %loadMem_400bc4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4301 = getelementptr inbounds %struct.GPR, %struct.GPR* %4300, i32 0, i32 33
  %4302 = getelementptr inbounds %struct.Reg, %struct.Reg* %4301, i32 0, i32 0
  %PC.i718 = bitcast %union.anon* %4302 to i64*
  %4303 = load i64, i64* %PC.i718
  %4304 = add i64 %4303, -124
  %4305 = load i64, i64* %PC.i718
  %4306 = add i64 %4305, 5
  store i64 %4306, i64* %PC.i718
  %4307 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4304, i64* %4307, align 8
  store %struct.Memory* %loadMem_400bc4, %struct.Memory** %MEMORY
  br label %block_.L_400b48

block_.L_400bc9:                                  ; preds = %block_.L_400b48
  %loadMem_400bc9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4309 = getelementptr inbounds %struct.GPR, %struct.GPR* %4308, i32 0, i32 33
  %4310 = getelementptr inbounds %struct.Reg, %struct.Reg* %4309, i32 0, i32 0
  %PC.i717 = bitcast %union.anon* %4310 to i64*
  %4311 = load i64, i64* %PC.i717
  %4312 = add i64 %4311, 11
  store i64 %4312, i64* %PC.i717
  store i32 0, i32* bitcast (%G_0x6191fc_type* @G_0x6191fc to i32*)
  store %struct.Memory* %loadMem_400bc9, %struct.Memory** %MEMORY
  %loadMem_400bd4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4314 = getelementptr inbounds %struct.GPR, %struct.GPR* %4313, i32 0, i32 33
  %4315 = getelementptr inbounds %struct.Reg, %struct.Reg* %4314, i32 0, i32 0
  %PC.i716 = bitcast %union.anon* %4315 to i64*
  %4316 = load i64, i64* %PC.i716
  %4317 = add i64 %4316, 11
  store i64 %4317, i64* %PC.i716
  store i32 25, i32* bitcast (%G_0x61025c_type* @G_0x61025c to i32*)
  store %struct.Memory* %loadMem_400bd4, %struct.Memory** %MEMORY
  %loadMem_400bdf = load %struct.Memory*, %struct.Memory** %MEMORY
  %4318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4319 = getelementptr inbounds %struct.GPR, %struct.GPR* %4318, i32 0, i32 33
  %4320 = getelementptr inbounds %struct.Reg, %struct.Reg* %4319, i32 0, i32 0
  %PC.i714 = bitcast %union.anon* %4320 to i64*
  %4321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4322 = getelementptr inbounds %struct.GPR, %struct.GPR* %4321, i32 0, i32 15
  %4323 = getelementptr inbounds %struct.Reg, %struct.Reg* %4322, i32 0, i32 0
  %RBP.i715 = bitcast %union.anon* %4323 to i64*
  %4324 = load i64, i64* %RBP.i715
  %4325 = sub i64 %4324, 4
  %4326 = load i64, i64* %PC.i714
  %4327 = add i64 %4326, 7
  store i64 %4327, i64* %PC.i714
  %4328 = inttoptr i64 %4325 to i32*
  store i32 0, i32* %4328
  store %struct.Memory* %loadMem_400bdf, %struct.Memory** %MEMORY
  br label %block_.L_400be6

block_.L_400be6:                                  ; preds = %block_.L_400c59, %block_.L_400bc9
  %loadMem_400be6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4330 = getelementptr inbounds %struct.GPR, %struct.GPR* %4329, i32 0, i32 33
  %4331 = getelementptr inbounds %struct.Reg, %struct.Reg* %4330, i32 0, i32 0
  %PC.i712 = bitcast %union.anon* %4331 to i64*
  %4332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4333 = getelementptr inbounds %struct.GPR, %struct.GPR* %4332, i32 0, i32 15
  %4334 = getelementptr inbounds %struct.Reg, %struct.Reg* %4333, i32 0, i32 0
  %RBP.i713 = bitcast %union.anon* %4334 to i64*
  %4335 = load i64, i64* %RBP.i713
  %4336 = sub i64 %4335, 4
  %4337 = load i64, i64* %PC.i712
  %4338 = add i64 %4337, 4
  store i64 %4338, i64* %PC.i712
  %4339 = inttoptr i64 %4336 to i32*
  %4340 = load i32, i32* %4339
  %4341 = sub i32 %4340, 3
  %4342 = icmp ult i32 %4340, 3
  %4343 = zext i1 %4342 to i8
  %4344 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4343, i8* %4344, align 1
  %4345 = and i32 %4341, 255
  %4346 = call i32 @llvm.ctpop.i32(i32 %4345)
  %4347 = trunc i32 %4346 to i8
  %4348 = and i8 %4347, 1
  %4349 = xor i8 %4348, 1
  %4350 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4349, i8* %4350, align 1
  %4351 = xor i32 %4340, 3
  %4352 = xor i32 %4351, %4341
  %4353 = lshr i32 %4352, 4
  %4354 = trunc i32 %4353 to i8
  %4355 = and i8 %4354, 1
  %4356 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4355, i8* %4356, align 1
  %4357 = icmp eq i32 %4341, 0
  %4358 = zext i1 %4357 to i8
  %4359 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4358, i8* %4359, align 1
  %4360 = lshr i32 %4341, 31
  %4361 = trunc i32 %4360 to i8
  %4362 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4361, i8* %4362, align 1
  %4363 = lshr i32 %4340, 31
  %4364 = xor i32 %4360, %4363
  %4365 = add i32 %4364, %4363
  %4366 = icmp eq i32 %4365, 2
  %4367 = zext i1 %4366 to i8
  %4368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4367, i8* %4368, align 1
  store %struct.Memory* %loadMem_400be6, %struct.Memory** %MEMORY
  %loadMem_400bea = load %struct.Memory*, %struct.Memory** %MEMORY
  %4369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4370 = getelementptr inbounds %struct.GPR, %struct.GPR* %4369, i32 0, i32 33
  %4371 = getelementptr inbounds %struct.Reg, %struct.Reg* %4370, i32 0, i32 0
  %PC.i711 = bitcast %union.anon* %4371 to i64*
  %4372 = load i64, i64* %PC.i711
  %4373 = add i64 %4372, 125
  %4374 = load i64, i64* %PC.i711
  %4375 = add i64 %4374, 6
  %4376 = load i64, i64* %PC.i711
  %4377 = add i64 %4376, 6
  store i64 %4377, i64* %PC.i711
  %4378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4379 = load i8, i8* %4378, align 1
  %4380 = icmp eq i8 %4379, 0
  %4381 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4382 = load i8, i8* %4381, align 1
  %4383 = icmp ne i8 %4382, 0
  %4384 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4385 = load i8, i8* %4384, align 1
  %4386 = icmp ne i8 %4385, 0
  %4387 = xor i1 %4383, %4386
  %4388 = xor i1 %4387, true
  %4389 = and i1 %4380, %4388
  %4390 = zext i1 %4389 to i8
  store i8 %4390, i8* %BRANCH_TAKEN, align 1
  %4391 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4392 = select i1 %4389, i64 %4373, i64 %4375
  store i64 %4392, i64* %4391, align 8
  store %struct.Memory* %loadMem_400bea, %struct.Memory** %MEMORY
  %loadBr_400bea = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400bea = icmp eq i8 %loadBr_400bea, 1
  br i1 %cmpBr_400bea, label %block_.L_400c67, label %block_400bf0

block_400bf0:                                     ; preds = %block_.L_400be6
  %loadMem_400bf0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4394 = getelementptr inbounds %struct.GPR, %struct.GPR* %4393, i32 0, i32 33
  %4395 = getelementptr inbounds %struct.Reg, %struct.Reg* %4394, i32 0, i32 0
  %PC.i709 = bitcast %union.anon* %4395 to i64*
  %4396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4397 = getelementptr inbounds %struct.GPR, %struct.GPR* %4396, i32 0, i32 15
  %4398 = getelementptr inbounds %struct.Reg, %struct.Reg* %4397, i32 0, i32 0
  %RBP.i710 = bitcast %union.anon* %4398 to i64*
  %4399 = load i64, i64* %RBP.i710
  %4400 = sub i64 %4399, 8
  %4401 = load i64, i64* %PC.i709
  %4402 = add i64 %4401, 7
  store i64 %4402, i64* %PC.i709
  %4403 = inttoptr i64 %4400 to i32*
  store i32 0, i32* %4403
  store %struct.Memory* %loadMem_400bf0, %struct.Memory** %MEMORY
  br label %block_.L_400bf7

block_.L_400bf7:                                  ; preds = %block_.L_400c46, %block_400bf0
  %loadMem_400bf7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4405 = getelementptr inbounds %struct.GPR, %struct.GPR* %4404, i32 0, i32 33
  %4406 = getelementptr inbounds %struct.Reg, %struct.Reg* %4405, i32 0, i32 0
  %PC.i707 = bitcast %union.anon* %4406 to i64*
  %4407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4408 = getelementptr inbounds %struct.GPR, %struct.GPR* %4407, i32 0, i32 15
  %4409 = getelementptr inbounds %struct.Reg, %struct.Reg* %4408, i32 0, i32 0
  %RBP.i708 = bitcast %union.anon* %4409 to i64*
  %4410 = load i64, i64* %RBP.i708
  %4411 = sub i64 %4410, 8
  %4412 = load i64, i64* %PC.i707
  %4413 = add i64 %4412, 4
  store i64 %4413, i64* %PC.i707
  %4414 = inttoptr i64 %4411 to i32*
  %4415 = load i32, i32* %4414
  %4416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4416, align 1
  %4417 = and i32 %4415, 255
  %4418 = call i32 @llvm.ctpop.i32(i32 %4417)
  %4419 = trunc i32 %4418 to i8
  %4420 = and i8 %4419, 1
  %4421 = xor i8 %4420, 1
  %4422 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4421, i8* %4422, align 1
  %4423 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4423, align 1
  %4424 = icmp eq i32 %4415, 0
  %4425 = zext i1 %4424 to i8
  %4426 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4425, i8* %4426, align 1
  %4427 = lshr i32 %4415, 31
  %4428 = trunc i32 %4427 to i8
  %4429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4428, i8* %4429, align 1
  %4430 = lshr i32 %4415, 31
  %4431 = xor i32 %4427, %4430
  %4432 = add i32 %4431, %4430
  %4433 = icmp eq i32 %4432, 2
  %4434 = zext i1 %4433 to i8
  %4435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4434, i8* %4435, align 1
  store %struct.Memory* %loadMem_400bf7, %struct.Memory** %MEMORY
  %loadMem_400bfb = load %struct.Memory*, %struct.Memory** %MEMORY
  %4436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4437 = getelementptr inbounds %struct.GPR, %struct.GPR* %4436, i32 0, i32 33
  %4438 = getelementptr inbounds %struct.Reg, %struct.Reg* %4437, i32 0, i32 0
  %PC.i706 = bitcast %union.anon* %4438 to i64*
  %4439 = load i64, i64* %PC.i706
  %4440 = add i64 %4439, 89
  %4441 = load i64, i64* %PC.i706
  %4442 = add i64 %4441, 6
  %4443 = load i64, i64* %PC.i706
  %4444 = add i64 %4443, 6
  store i64 %4444, i64* %PC.i706
  %4445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4446 = load i8, i8* %4445, align 1
  %4447 = icmp eq i8 %4446, 0
  %4448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4449 = load i8, i8* %4448, align 1
  %4450 = icmp ne i8 %4449, 0
  %4451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4452 = load i8, i8* %4451, align 1
  %4453 = icmp ne i8 %4452, 0
  %4454 = xor i1 %4450, %4453
  %4455 = xor i1 %4454, true
  %4456 = and i1 %4447, %4455
  %4457 = zext i1 %4456 to i8
  store i8 %4457, i8* %BRANCH_TAKEN, align 1
  %4458 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4459 = select i1 %4456, i64 %4440, i64 %4442
  store i64 %4459, i64* %4458, align 8
  store %struct.Memory* %loadMem_400bfb, %struct.Memory** %MEMORY
  %loadBr_400bfb = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400bfb = icmp eq i8 %loadBr_400bfb, 1
  br i1 %cmpBr_400bfb, label %block_.L_400c54, label %block_400c01

block_400c01:                                     ; preds = %block_.L_400bf7
  %loadMem_400c01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4461 = getelementptr inbounds %struct.GPR, %struct.GPR* %4460, i32 0, i32 33
  %4462 = getelementptr inbounds %struct.Reg, %struct.Reg* %4461, i32 0, i32 0
  %PC.i704 = bitcast %union.anon* %4462 to i64*
  %4463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4464 = getelementptr inbounds %struct.GPR, %struct.GPR* %4463, i32 0, i32 15
  %4465 = getelementptr inbounds %struct.Reg, %struct.Reg* %4464, i32 0, i32 0
  %RBP.i705 = bitcast %union.anon* %4465 to i64*
  %4466 = load i64, i64* %RBP.i705
  %4467 = sub i64 %4466, 12
  %4468 = load i64, i64* %PC.i704
  %4469 = add i64 %4468, 7
  store i64 %4469, i64* %PC.i704
  %4470 = inttoptr i64 %4467 to i32*
  store i32 0, i32* %4470
  store %struct.Memory* %loadMem_400c01, %struct.Memory** %MEMORY
  br label %block_.L_400c08

block_.L_400c08:                                  ; preds = %block_400c12, %block_400c01
  %loadMem_400c08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4472 = getelementptr inbounds %struct.GPR, %struct.GPR* %4471, i32 0, i32 33
  %4473 = getelementptr inbounds %struct.Reg, %struct.Reg* %4472, i32 0, i32 0
  %PC.i702 = bitcast %union.anon* %4473 to i64*
  %4474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4475 = getelementptr inbounds %struct.GPR, %struct.GPR* %4474, i32 0, i32 15
  %4476 = getelementptr inbounds %struct.Reg, %struct.Reg* %4475, i32 0, i32 0
  %RBP.i703 = bitcast %union.anon* %4476 to i64*
  %4477 = load i64, i64* %RBP.i703
  %4478 = sub i64 %4477, 12
  %4479 = load i64, i64* %PC.i702
  %4480 = add i64 %4479, 4
  store i64 %4480, i64* %PC.i702
  %4481 = inttoptr i64 %4478 to i32*
  %4482 = load i32, i32* %4481
  %4483 = sub i32 %4482, 1
  %4484 = icmp ult i32 %4482, 1
  %4485 = zext i1 %4484 to i8
  %4486 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4485, i8* %4486, align 1
  %4487 = and i32 %4483, 255
  %4488 = call i32 @llvm.ctpop.i32(i32 %4487)
  %4489 = trunc i32 %4488 to i8
  %4490 = and i8 %4489, 1
  %4491 = xor i8 %4490, 1
  %4492 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4491, i8* %4492, align 1
  %4493 = xor i32 %4482, 1
  %4494 = xor i32 %4493, %4483
  %4495 = lshr i32 %4494, 4
  %4496 = trunc i32 %4495 to i8
  %4497 = and i8 %4496, 1
  %4498 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4497, i8* %4498, align 1
  %4499 = icmp eq i32 %4483, 0
  %4500 = zext i1 %4499 to i8
  %4501 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4500, i8* %4501, align 1
  %4502 = lshr i32 %4483, 31
  %4503 = trunc i32 %4502 to i8
  %4504 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4503, i8* %4504, align 1
  %4505 = lshr i32 %4482, 31
  %4506 = xor i32 %4502, %4505
  %4507 = add i32 %4506, %4505
  %4508 = icmp eq i32 %4507, 2
  %4509 = zext i1 %4508 to i8
  %4510 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4509, i8* %4510, align 1
  store %struct.Memory* %loadMem_400c08, %struct.Memory** %MEMORY
  %loadMem_400c0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4512 = getelementptr inbounds %struct.GPR, %struct.GPR* %4511, i32 0, i32 33
  %4513 = getelementptr inbounds %struct.Reg, %struct.Reg* %4512, i32 0, i32 0
  %PC.i701 = bitcast %union.anon* %4513 to i64*
  %4514 = load i64, i64* %PC.i701
  %4515 = add i64 %4514, 53
  %4516 = load i64, i64* %PC.i701
  %4517 = add i64 %4516, 6
  %4518 = load i64, i64* %PC.i701
  %4519 = add i64 %4518, 6
  store i64 %4519, i64* %PC.i701
  %4520 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4521 = load i8, i8* %4520, align 1
  %4522 = icmp eq i8 %4521, 0
  %4523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4524 = load i8, i8* %4523, align 1
  %4525 = icmp ne i8 %4524, 0
  %4526 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4527 = load i8, i8* %4526, align 1
  %4528 = icmp ne i8 %4527, 0
  %4529 = xor i1 %4525, %4528
  %4530 = xor i1 %4529, true
  %4531 = and i1 %4522, %4530
  %4532 = zext i1 %4531 to i8
  store i8 %4532, i8* %BRANCH_TAKEN, align 1
  %4533 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4534 = select i1 %4531, i64 %4515, i64 %4517
  store i64 %4534, i64* %4533, align 8
  store %struct.Memory* %loadMem_400c0c, %struct.Memory** %MEMORY
  %loadBr_400c0c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400c0c = icmp eq i8 %loadBr_400c0c, 1
  br i1 %cmpBr_400c0c, label %block_.L_400c41, label %block_400c12

block_400c12:                                     ; preds = %block_.L_400c08
  %loadMem_400c12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4536 = getelementptr inbounds %struct.GPR, %struct.GPR* %4535, i32 0, i32 33
  %4537 = getelementptr inbounds %struct.Reg, %struct.Reg* %4536, i32 0, i32 0
  %PC.i698 = bitcast %union.anon* %4537 to i64*
  %4538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4539 = getelementptr inbounds %struct.GPR, %struct.GPR* %4538, i32 0, i32 1
  %4540 = getelementptr inbounds %struct.Reg, %struct.Reg* %4539, i32 0, i32 0
  %RAX.i699 = bitcast %union.anon* %4540 to i64*
  %4541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4542 = getelementptr inbounds %struct.GPR, %struct.GPR* %4541, i32 0, i32 15
  %4543 = getelementptr inbounds %struct.Reg, %struct.Reg* %4542, i32 0, i32 0
  %RBP.i700 = bitcast %union.anon* %4543 to i64*
  %4544 = load i64, i64* %RBP.i700
  %4545 = sub i64 %4544, 4
  %4546 = load i64, i64* %PC.i698
  %4547 = add i64 %4546, 3
  store i64 %4547, i64* %PC.i698
  %4548 = inttoptr i64 %4545 to i32*
  %4549 = load i32, i32* %4548
  %4550 = zext i32 %4549 to i64
  store i64 %4550, i64* %RAX.i699, align 8
  store %struct.Memory* %loadMem_400c12, %struct.Memory** %MEMORY
  %loadMem_400c15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4552 = getelementptr inbounds %struct.GPR, %struct.GPR* %4551, i32 0, i32 33
  %4553 = getelementptr inbounds %struct.Reg, %struct.Reg* %4552, i32 0, i32 0
  %PC.i695 = bitcast %union.anon* %4553 to i64*
  %4554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4555 = getelementptr inbounds %struct.GPR, %struct.GPR* %4554, i32 0, i32 5
  %4556 = getelementptr inbounds %struct.Reg, %struct.Reg* %4555, i32 0, i32 0
  %RCX.i696 = bitcast %union.anon* %4556 to i64*
  %4557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4558 = getelementptr inbounds %struct.GPR, %struct.GPR* %4557, i32 0, i32 15
  %4559 = getelementptr inbounds %struct.Reg, %struct.Reg* %4558, i32 0, i32 0
  %RBP.i697 = bitcast %union.anon* %4559 to i64*
  %4560 = load i64, i64* %RBP.i697
  %4561 = sub i64 %4560, 8
  %4562 = load i64, i64* %PC.i695
  %4563 = add i64 %4562, 3
  store i64 %4563, i64* %PC.i695
  %4564 = inttoptr i64 %4561 to i32*
  %4565 = load i32, i32* %4564
  %4566 = zext i32 %4565 to i64
  store i64 %4566, i64* %RCX.i696, align 8
  store %struct.Memory* %loadMem_400c15, %struct.Memory** %MEMORY
  %loadMem_400c18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4568 = getelementptr inbounds %struct.GPR, %struct.GPR* %4567, i32 0, i32 33
  %4569 = getelementptr inbounds %struct.Reg, %struct.Reg* %4568, i32 0, i32 0
  %PC.i692 = bitcast %union.anon* %4569 to i64*
  %4570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4571 = getelementptr inbounds %struct.GPR, %struct.GPR* %4570, i32 0, i32 7
  %4572 = getelementptr inbounds %struct.Reg, %struct.Reg* %4571, i32 0, i32 0
  %RDX.i693 = bitcast %union.anon* %4572 to i64*
  %4573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4574 = getelementptr inbounds %struct.GPR, %struct.GPR* %4573, i32 0, i32 15
  %4575 = getelementptr inbounds %struct.Reg, %struct.Reg* %4574, i32 0, i32 0
  %RBP.i694 = bitcast %union.anon* %4575 to i64*
  %4576 = load i64, i64* %RBP.i694
  %4577 = sub i64 %4576, 12
  %4578 = load i64, i64* %PC.i692
  %4579 = add i64 %4578, 3
  store i64 %4579, i64* %PC.i692
  %4580 = inttoptr i64 %4577 to i32*
  %4581 = load i32, i32* %4580
  %4582 = zext i32 %4581 to i64
  store i64 %4582, i64* %RDX.i693, align 8
  store %struct.Memory* %loadMem_400c18, %struct.Memory** %MEMORY
  %loadMem_400c1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4584 = getelementptr inbounds %struct.GPR, %struct.GPR* %4583, i32 0, i32 33
  %4585 = getelementptr inbounds %struct.Reg, %struct.Reg* %4584, i32 0, i32 0
  %PC.i690 = bitcast %union.anon* %4585 to i64*
  %4586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4587 = getelementptr inbounds %struct.GPR, %struct.GPR* %4586, i32 0, i32 7
  %4588 = getelementptr inbounds %struct.Reg, %struct.Reg* %4587, i32 0, i32 0
  %RDX.i691 = bitcast %union.anon* %4588 to i64*
  %4589 = load i64, i64* %RDX.i691
  %4590 = load i64, i64* %PC.i690
  %4591 = add i64 %4590, 3
  store i64 %4591, i64* %PC.i690
  %4592 = and i64 %4589, 4294967295
  %4593 = shl i64 %4592, 2
  %4594 = trunc i64 %4593 to i32
  %4595 = icmp slt i32 %4594, 0
  %4596 = shl i32 %4594, 1
  %4597 = zext i32 %4596 to i64
  store i64 %4597, i64* %RDX.i691, align 8
  %4598 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %4599 = zext i1 %4595 to i8
  store i8 %4599, i8* %4598, align 1
  %4600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %4601 = and i32 %4596, 254
  %4602 = call i32 @llvm.ctpop.i32(i32 %4601)
  %4603 = trunc i32 %4602 to i8
  %4604 = and i8 %4603, 1
  %4605 = xor i8 %4604, 1
  store i8 %4605, i8* %4600, align 1
  %4606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4606, align 1
  %4607 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4608 = icmp eq i32 %4596, 0
  %4609 = zext i1 %4608 to i8
  store i8 %4609, i8* %4607, align 1
  %4610 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4611 = lshr i32 %4596, 31
  %4612 = trunc i32 %4611 to i8
  store i8 %4612, i8* %4610, align 1
  %4613 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4613, align 1
  store %struct.Memory* %loadMem_400c1b, %struct.Memory** %MEMORY
  %loadMem_400c1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4615 = getelementptr inbounds %struct.GPR, %struct.GPR* %4614, i32 0, i32 33
  %4616 = getelementptr inbounds %struct.Reg, %struct.Reg* %4615, i32 0, i32 0
  %PC.i687 = bitcast %union.anon* %4616 to i64*
  %4617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4618 = getelementptr inbounds %struct.GPR, %struct.GPR* %4617, i32 0, i32 7
  %4619 = getelementptr inbounds %struct.Reg, %struct.Reg* %4618, i32 0, i32 0
  %EDX.i688 = bitcast %union.anon* %4619 to i32*
  %4620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4621 = getelementptr inbounds %struct.GPR, %struct.GPR* %4620, i32 0, i32 5
  %4622 = getelementptr inbounds %struct.Reg, %struct.Reg* %4621, i32 0, i32 0
  %RCX.i689 = bitcast %union.anon* %4622 to i64*
  %4623 = load i64, i64* %RCX.i689
  %4624 = load i32, i32* %EDX.i688
  %4625 = zext i32 %4624 to i64
  %4626 = load i64, i64* %PC.i687
  %4627 = add i64 %4626, 2
  store i64 %4627, i64* %PC.i687
  %4628 = trunc i64 %4623 to i32
  %4629 = add i32 %4624, %4628
  %4630 = zext i32 %4629 to i64
  store i64 %4630, i64* %RCX.i689, align 8
  %4631 = icmp ult i32 %4629, %4628
  %4632 = icmp ult i32 %4629, %4624
  %4633 = or i1 %4631, %4632
  %4634 = zext i1 %4633 to i8
  %4635 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4634, i8* %4635, align 1
  %4636 = and i32 %4629, 255
  %4637 = call i32 @llvm.ctpop.i32(i32 %4636)
  %4638 = trunc i32 %4637 to i8
  %4639 = and i8 %4638, 1
  %4640 = xor i8 %4639, 1
  %4641 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4640, i8* %4641, align 1
  %4642 = xor i64 %4625, %4623
  %4643 = trunc i64 %4642 to i32
  %4644 = xor i32 %4643, %4629
  %4645 = lshr i32 %4644, 4
  %4646 = trunc i32 %4645 to i8
  %4647 = and i8 %4646, 1
  %4648 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4647, i8* %4648, align 1
  %4649 = icmp eq i32 %4629, 0
  %4650 = zext i1 %4649 to i8
  %4651 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4650, i8* %4651, align 1
  %4652 = lshr i32 %4629, 31
  %4653 = trunc i32 %4652 to i8
  %4654 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4653, i8* %4654, align 1
  %4655 = lshr i32 %4628, 31
  %4656 = lshr i32 %4624, 31
  %4657 = xor i32 %4652, %4655
  %4658 = xor i32 %4652, %4656
  %4659 = add i32 %4657, %4658
  %4660 = icmp eq i32 %4659, 2
  %4661 = zext i1 %4660 to i8
  %4662 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4661, i8* %4662, align 1
  store %struct.Memory* %loadMem_400c1e, %struct.Memory** %MEMORY
  %loadMem_400c20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4664 = getelementptr inbounds %struct.GPR, %struct.GPR* %4663, i32 0, i32 33
  %4665 = getelementptr inbounds %struct.Reg, %struct.Reg* %4664, i32 0, i32 0
  %PC.i685 = bitcast %union.anon* %4665 to i64*
  %4666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4667 = getelementptr inbounds %struct.GPR, %struct.GPR* %4666, i32 0, i32 5
  %4668 = getelementptr inbounds %struct.Reg, %struct.Reg* %4667, i32 0, i32 0
  %RCX.i686 = bitcast %union.anon* %4668 to i64*
  %4669 = load i64, i64* %RCX.i686
  %4670 = load i64, i64* %PC.i685
  %4671 = add i64 %4670, 3
  store i64 %4671, i64* %PC.i685
  %4672 = and i64 %4669, 4294967295
  %4673 = shl i64 %4672, 2
  %4674 = trunc i64 %4673 to i32
  %4675 = icmp slt i32 %4674, 0
  %4676 = shl i32 %4674, 1
  %4677 = zext i32 %4676 to i64
  store i64 %4677, i64* %RCX.i686, align 8
  %4678 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %4679 = zext i1 %4675 to i8
  store i8 %4679, i8* %4678, align 1
  %4680 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %4681 = and i32 %4676, 254
  %4682 = call i32 @llvm.ctpop.i32(i32 %4681)
  %4683 = trunc i32 %4682 to i8
  %4684 = and i8 %4683, 1
  %4685 = xor i8 %4684, 1
  store i8 %4685, i8* %4680, align 1
  %4686 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4686, align 1
  %4687 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4688 = icmp eq i32 %4676, 0
  %4689 = zext i1 %4688 to i8
  store i8 %4689, i8* %4687, align 1
  %4690 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4691 = lshr i32 %4676, 31
  %4692 = trunc i32 %4691 to i8
  store i8 %4692, i8* %4690, align 1
  %4693 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4693, align 1
  store %struct.Memory* %loadMem_400c20, %struct.Memory** %MEMORY
  %loadMem_400c23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4695 = getelementptr inbounds %struct.GPR, %struct.GPR* %4694, i32 0, i32 33
  %4696 = getelementptr inbounds %struct.Reg, %struct.Reg* %4695, i32 0, i32 0
  %PC.i682 = bitcast %union.anon* %4696 to i64*
  %4697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4698 = getelementptr inbounds %struct.GPR, %struct.GPR* %4697, i32 0, i32 5
  %4699 = getelementptr inbounds %struct.Reg, %struct.Reg* %4698, i32 0, i32 0
  %ECX.i683 = bitcast %union.anon* %4699 to i32*
  %4700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4701 = getelementptr inbounds %struct.GPR, %struct.GPR* %4700, i32 0, i32 1
  %4702 = getelementptr inbounds %struct.Reg, %struct.Reg* %4701, i32 0, i32 0
  %RAX.i684 = bitcast %union.anon* %4702 to i64*
  %4703 = load i64, i64* %RAX.i684
  %4704 = load i32, i32* %ECX.i683
  %4705 = zext i32 %4704 to i64
  %4706 = load i64, i64* %PC.i682
  %4707 = add i64 %4706, 2
  store i64 %4707, i64* %PC.i682
  %4708 = trunc i64 %4703 to i32
  %4709 = add i32 %4704, %4708
  %4710 = zext i32 %4709 to i64
  store i64 %4710, i64* %RAX.i684, align 8
  %4711 = icmp ult i32 %4709, %4708
  %4712 = icmp ult i32 %4709, %4704
  %4713 = or i1 %4711, %4712
  %4714 = zext i1 %4713 to i8
  %4715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4714, i8* %4715, align 1
  %4716 = and i32 %4709, 255
  %4717 = call i32 @llvm.ctpop.i32(i32 %4716)
  %4718 = trunc i32 %4717 to i8
  %4719 = and i8 %4718, 1
  %4720 = xor i8 %4719, 1
  %4721 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4720, i8* %4721, align 1
  %4722 = xor i64 %4705, %4703
  %4723 = trunc i64 %4722 to i32
  %4724 = xor i32 %4723, %4709
  %4725 = lshr i32 %4724, 4
  %4726 = trunc i32 %4725 to i8
  %4727 = and i8 %4726, 1
  %4728 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4727, i8* %4728, align 1
  %4729 = icmp eq i32 %4709, 0
  %4730 = zext i1 %4729 to i8
  %4731 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4730, i8* %4731, align 1
  %4732 = lshr i32 %4709, 31
  %4733 = trunc i32 %4732 to i8
  %4734 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4733, i8* %4734, align 1
  %4735 = lshr i32 %4708, 31
  %4736 = lshr i32 %4704, 31
  %4737 = xor i32 %4732, %4735
  %4738 = xor i32 %4732, %4736
  %4739 = add i32 %4737, %4738
  %4740 = icmp eq i32 %4739, 2
  %4741 = zext i1 %4740 to i8
  %4742 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4741, i8* %4742, align 1
  store %struct.Memory* %loadMem_400c23, %struct.Memory** %MEMORY
  %loadMem_400c25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4744 = getelementptr inbounds %struct.GPR, %struct.GPR* %4743, i32 0, i32 33
  %4745 = getelementptr inbounds %struct.Reg, %struct.Reg* %4744, i32 0, i32 0
  %PC.i679 = bitcast %union.anon* %4745 to i64*
  %4746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4747 = getelementptr inbounds %struct.GPR, %struct.GPR* %4746, i32 0, i32 1
  %4748 = getelementptr inbounds %struct.Reg, %struct.Reg* %4747, i32 0, i32 0
  %EAX.i680 = bitcast %union.anon* %4748 to i32*
  %4749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4750 = getelementptr inbounds %struct.GPR, %struct.GPR* %4749, i32 0, i32 9
  %4751 = getelementptr inbounds %struct.Reg, %struct.Reg* %4750, i32 0, i32 0
  %RSI.i681 = bitcast %union.anon* %4751 to i64*
  %4752 = load i32, i32* %EAX.i680
  %4753 = zext i32 %4752 to i64
  %4754 = load i64, i64* %PC.i679
  %4755 = add i64 %4754, 3
  store i64 %4755, i64* %PC.i679
  %4756 = shl i64 %4753, 32
  %4757 = ashr exact i64 %4756, 32
  store i64 %4757, i64* %RSI.i681, align 8
  store %struct.Memory* %loadMem_400c25, %struct.Memory** %MEMORY
  %loadMem_400c28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4759 = getelementptr inbounds %struct.GPR, %struct.GPR* %4758, i32 0, i32 33
  %4760 = getelementptr inbounds %struct.Reg, %struct.Reg* %4759, i32 0, i32 0
  %PC.i677 = bitcast %union.anon* %4760 to i64*
  %4761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4762 = getelementptr inbounds %struct.GPR, %struct.GPR* %4761, i32 0, i32 9
  %4763 = getelementptr inbounds %struct.Reg, %struct.Reg* %4762, i32 0, i32 0
  %RSI.i678 = bitcast %union.anon* %4763 to i64*
  %4764 = load i64, i64* %RSI.i678
  %4765 = mul i64 %4764, 4
  %4766 = add i64 %4765, ptrtoint (%G_0x605aa0___rsi_4__type* @G_0x605aa0___rsi_4_ to i64)
  %4767 = load i64, i64* %PC.i677
  %4768 = add i64 %4767, 11
  store i64 %4768, i64* %PC.i677
  %4769 = inttoptr i64 %4766 to i32*
  store i32 1, i32* %4769
  store %struct.Memory* %loadMem_400c28, %struct.Memory** %MEMORY
  %loadMem_400c33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4771 = getelementptr inbounds %struct.GPR, %struct.GPR* %4770, i32 0, i32 33
  %4772 = getelementptr inbounds %struct.Reg, %struct.Reg* %4771, i32 0, i32 0
  %PC.i674 = bitcast %union.anon* %4772 to i64*
  %4773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4774 = getelementptr inbounds %struct.GPR, %struct.GPR* %4773, i32 0, i32 1
  %4775 = getelementptr inbounds %struct.Reg, %struct.Reg* %4774, i32 0, i32 0
  %RAX.i675 = bitcast %union.anon* %4775 to i64*
  %4776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4777 = getelementptr inbounds %struct.GPR, %struct.GPR* %4776, i32 0, i32 15
  %4778 = getelementptr inbounds %struct.Reg, %struct.Reg* %4777, i32 0, i32 0
  %RBP.i676 = bitcast %union.anon* %4778 to i64*
  %4779 = load i64, i64* %RBP.i676
  %4780 = sub i64 %4779, 12
  %4781 = load i64, i64* %PC.i674
  %4782 = add i64 %4781, 3
  store i64 %4782, i64* %PC.i674
  %4783 = inttoptr i64 %4780 to i32*
  %4784 = load i32, i32* %4783
  %4785 = zext i32 %4784 to i64
  store i64 %4785, i64* %RAX.i675, align 8
  store %struct.Memory* %loadMem_400c33, %struct.Memory** %MEMORY
  %loadMem_400c36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4787 = getelementptr inbounds %struct.GPR, %struct.GPR* %4786, i32 0, i32 33
  %4788 = getelementptr inbounds %struct.Reg, %struct.Reg* %4787, i32 0, i32 0
  %PC.i672 = bitcast %union.anon* %4788 to i64*
  %4789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4790 = getelementptr inbounds %struct.GPR, %struct.GPR* %4789, i32 0, i32 1
  %4791 = getelementptr inbounds %struct.Reg, %struct.Reg* %4790, i32 0, i32 0
  %RAX.i673 = bitcast %union.anon* %4791 to i64*
  %4792 = load i64, i64* %RAX.i673
  %4793 = load i64, i64* %PC.i672
  %4794 = add i64 %4793, 3
  store i64 %4794, i64* %PC.i672
  %4795 = trunc i64 %4792 to i32
  %4796 = add i32 1, %4795
  %4797 = zext i32 %4796 to i64
  store i64 %4797, i64* %RAX.i673, align 8
  %4798 = icmp ult i32 %4796, %4795
  %4799 = icmp ult i32 %4796, 1
  %4800 = or i1 %4798, %4799
  %4801 = zext i1 %4800 to i8
  %4802 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4801, i8* %4802, align 1
  %4803 = and i32 %4796, 255
  %4804 = call i32 @llvm.ctpop.i32(i32 %4803)
  %4805 = trunc i32 %4804 to i8
  %4806 = and i8 %4805, 1
  %4807 = xor i8 %4806, 1
  %4808 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4807, i8* %4808, align 1
  %4809 = xor i64 1, %4792
  %4810 = trunc i64 %4809 to i32
  %4811 = xor i32 %4810, %4796
  %4812 = lshr i32 %4811, 4
  %4813 = trunc i32 %4812 to i8
  %4814 = and i8 %4813, 1
  %4815 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4814, i8* %4815, align 1
  %4816 = icmp eq i32 %4796, 0
  %4817 = zext i1 %4816 to i8
  %4818 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4817, i8* %4818, align 1
  %4819 = lshr i32 %4796, 31
  %4820 = trunc i32 %4819 to i8
  %4821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4820, i8* %4821, align 1
  %4822 = lshr i32 %4795, 31
  %4823 = xor i32 %4819, %4822
  %4824 = add i32 %4823, %4819
  %4825 = icmp eq i32 %4824, 2
  %4826 = zext i1 %4825 to i8
  %4827 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4826, i8* %4827, align 1
  store %struct.Memory* %loadMem_400c36, %struct.Memory** %MEMORY
  %loadMem_400c39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4829 = getelementptr inbounds %struct.GPR, %struct.GPR* %4828, i32 0, i32 33
  %4830 = getelementptr inbounds %struct.Reg, %struct.Reg* %4829, i32 0, i32 0
  %PC.i669 = bitcast %union.anon* %4830 to i64*
  %4831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4832 = getelementptr inbounds %struct.GPR, %struct.GPR* %4831, i32 0, i32 1
  %4833 = getelementptr inbounds %struct.Reg, %struct.Reg* %4832, i32 0, i32 0
  %EAX.i670 = bitcast %union.anon* %4833 to i32*
  %4834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4835 = getelementptr inbounds %struct.GPR, %struct.GPR* %4834, i32 0, i32 15
  %4836 = getelementptr inbounds %struct.Reg, %struct.Reg* %4835, i32 0, i32 0
  %RBP.i671 = bitcast %union.anon* %4836 to i64*
  %4837 = load i64, i64* %RBP.i671
  %4838 = sub i64 %4837, 12
  %4839 = load i32, i32* %EAX.i670
  %4840 = zext i32 %4839 to i64
  %4841 = load i64, i64* %PC.i669
  %4842 = add i64 %4841, 3
  store i64 %4842, i64* %PC.i669
  %4843 = inttoptr i64 %4838 to i32*
  store i32 %4839, i32* %4843
  store %struct.Memory* %loadMem_400c39, %struct.Memory** %MEMORY
  %loadMem_400c3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4845 = getelementptr inbounds %struct.GPR, %struct.GPR* %4844, i32 0, i32 33
  %4846 = getelementptr inbounds %struct.Reg, %struct.Reg* %4845, i32 0, i32 0
  %PC.i668 = bitcast %union.anon* %4846 to i64*
  %4847 = load i64, i64* %PC.i668
  %4848 = add i64 %4847, -52
  %4849 = load i64, i64* %PC.i668
  %4850 = add i64 %4849, 5
  store i64 %4850, i64* %PC.i668
  %4851 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4848, i64* %4851, align 8
  store %struct.Memory* %loadMem_400c3c, %struct.Memory** %MEMORY
  br label %block_.L_400c08

block_.L_400c41:                                  ; preds = %block_.L_400c08
  %loadMem_400c41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4853 = getelementptr inbounds %struct.GPR, %struct.GPR* %4852, i32 0, i32 33
  %4854 = getelementptr inbounds %struct.Reg, %struct.Reg* %4853, i32 0, i32 0
  %PC.i667 = bitcast %union.anon* %4854 to i64*
  %4855 = load i64, i64* %PC.i667
  %4856 = add i64 %4855, 5
  %4857 = load i64, i64* %PC.i667
  %4858 = add i64 %4857, 5
  store i64 %4858, i64* %PC.i667
  %4859 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4856, i64* %4859, align 8
  store %struct.Memory* %loadMem_400c41, %struct.Memory** %MEMORY
  br label %block_.L_400c46

block_.L_400c46:                                  ; preds = %block_.L_400c41
  %loadMem_400c46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4861 = getelementptr inbounds %struct.GPR, %struct.GPR* %4860, i32 0, i32 33
  %4862 = getelementptr inbounds %struct.Reg, %struct.Reg* %4861, i32 0, i32 0
  %PC.i664 = bitcast %union.anon* %4862 to i64*
  %4863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4864 = getelementptr inbounds %struct.GPR, %struct.GPR* %4863, i32 0, i32 1
  %4865 = getelementptr inbounds %struct.Reg, %struct.Reg* %4864, i32 0, i32 0
  %RAX.i665 = bitcast %union.anon* %4865 to i64*
  %4866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4867 = getelementptr inbounds %struct.GPR, %struct.GPR* %4866, i32 0, i32 15
  %4868 = getelementptr inbounds %struct.Reg, %struct.Reg* %4867, i32 0, i32 0
  %RBP.i666 = bitcast %union.anon* %4868 to i64*
  %4869 = load i64, i64* %RBP.i666
  %4870 = sub i64 %4869, 8
  %4871 = load i64, i64* %PC.i664
  %4872 = add i64 %4871, 3
  store i64 %4872, i64* %PC.i664
  %4873 = inttoptr i64 %4870 to i32*
  %4874 = load i32, i32* %4873
  %4875 = zext i32 %4874 to i64
  store i64 %4875, i64* %RAX.i665, align 8
  store %struct.Memory* %loadMem_400c46, %struct.Memory** %MEMORY
  %loadMem_400c49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4877 = getelementptr inbounds %struct.GPR, %struct.GPR* %4876, i32 0, i32 33
  %4878 = getelementptr inbounds %struct.Reg, %struct.Reg* %4877, i32 0, i32 0
  %PC.i662 = bitcast %union.anon* %4878 to i64*
  %4879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4880 = getelementptr inbounds %struct.GPR, %struct.GPR* %4879, i32 0, i32 1
  %4881 = getelementptr inbounds %struct.Reg, %struct.Reg* %4880, i32 0, i32 0
  %RAX.i663 = bitcast %union.anon* %4881 to i64*
  %4882 = load i64, i64* %RAX.i663
  %4883 = load i64, i64* %PC.i662
  %4884 = add i64 %4883, 3
  store i64 %4884, i64* %PC.i662
  %4885 = trunc i64 %4882 to i32
  %4886 = add i32 1, %4885
  %4887 = zext i32 %4886 to i64
  store i64 %4887, i64* %RAX.i663, align 8
  %4888 = icmp ult i32 %4886, %4885
  %4889 = icmp ult i32 %4886, 1
  %4890 = or i1 %4888, %4889
  %4891 = zext i1 %4890 to i8
  %4892 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4891, i8* %4892, align 1
  %4893 = and i32 %4886, 255
  %4894 = call i32 @llvm.ctpop.i32(i32 %4893)
  %4895 = trunc i32 %4894 to i8
  %4896 = and i8 %4895, 1
  %4897 = xor i8 %4896, 1
  %4898 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4897, i8* %4898, align 1
  %4899 = xor i64 1, %4882
  %4900 = trunc i64 %4899 to i32
  %4901 = xor i32 %4900, %4886
  %4902 = lshr i32 %4901, 4
  %4903 = trunc i32 %4902 to i8
  %4904 = and i8 %4903, 1
  %4905 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4904, i8* %4905, align 1
  %4906 = icmp eq i32 %4886, 0
  %4907 = zext i1 %4906 to i8
  %4908 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4907, i8* %4908, align 1
  %4909 = lshr i32 %4886, 31
  %4910 = trunc i32 %4909 to i8
  %4911 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4910, i8* %4911, align 1
  %4912 = lshr i32 %4885, 31
  %4913 = xor i32 %4909, %4912
  %4914 = add i32 %4913, %4909
  %4915 = icmp eq i32 %4914, 2
  %4916 = zext i1 %4915 to i8
  %4917 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4916, i8* %4917, align 1
  store %struct.Memory* %loadMem_400c49, %struct.Memory** %MEMORY
  %loadMem_400c4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4919 = getelementptr inbounds %struct.GPR, %struct.GPR* %4918, i32 0, i32 33
  %4920 = getelementptr inbounds %struct.Reg, %struct.Reg* %4919, i32 0, i32 0
  %PC.i659 = bitcast %union.anon* %4920 to i64*
  %4921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4922 = getelementptr inbounds %struct.GPR, %struct.GPR* %4921, i32 0, i32 1
  %4923 = getelementptr inbounds %struct.Reg, %struct.Reg* %4922, i32 0, i32 0
  %EAX.i660 = bitcast %union.anon* %4923 to i32*
  %4924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4925 = getelementptr inbounds %struct.GPR, %struct.GPR* %4924, i32 0, i32 15
  %4926 = getelementptr inbounds %struct.Reg, %struct.Reg* %4925, i32 0, i32 0
  %RBP.i661 = bitcast %union.anon* %4926 to i64*
  %4927 = load i64, i64* %RBP.i661
  %4928 = sub i64 %4927, 8
  %4929 = load i32, i32* %EAX.i660
  %4930 = zext i32 %4929 to i64
  %4931 = load i64, i64* %PC.i659
  %4932 = add i64 %4931, 3
  store i64 %4932, i64* %PC.i659
  %4933 = inttoptr i64 %4928 to i32*
  store i32 %4929, i32* %4933
  store %struct.Memory* %loadMem_400c4c, %struct.Memory** %MEMORY
  %loadMem_400c4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4935 = getelementptr inbounds %struct.GPR, %struct.GPR* %4934, i32 0, i32 33
  %4936 = getelementptr inbounds %struct.Reg, %struct.Reg* %4935, i32 0, i32 0
  %PC.i658 = bitcast %union.anon* %4936 to i64*
  %4937 = load i64, i64* %PC.i658
  %4938 = add i64 %4937, -88
  %4939 = load i64, i64* %PC.i658
  %4940 = add i64 %4939, 5
  store i64 %4940, i64* %PC.i658
  %4941 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4938, i64* %4941, align 8
  store %struct.Memory* %loadMem_400c4f, %struct.Memory** %MEMORY
  br label %block_.L_400bf7

block_.L_400c54:                                  ; preds = %block_.L_400bf7
  %loadMem_400c54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4943 = getelementptr inbounds %struct.GPR, %struct.GPR* %4942, i32 0, i32 33
  %4944 = getelementptr inbounds %struct.Reg, %struct.Reg* %4943, i32 0, i32 0
  %PC.i657 = bitcast %union.anon* %4944 to i64*
  %4945 = load i64, i64* %PC.i657
  %4946 = add i64 %4945, 5
  %4947 = load i64, i64* %PC.i657
  %4948 = add i64 %4947, 5
  store i64 %4948, i64* %PC.i657
  %4949 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4946, i64* %4949, align 8
  store %struct.Memory* %loadMem_400c54, %struct.Memory** %MEMORY
  br label %block_.L_400c59

block_.L_400c59:                                  ; preds = %block_.L_400c54
  %loadMem_400c59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4951 = getelementptr inbounds %struct.GPR, %struct.GPR* %4950, i32 0, i32 33
  %4952 = getelementptr inbounds %struct.Reg, %struct.Reg* %4951, i32 0, i32 0
  %PC.i654 = bitcast %union.anon* %4952 to i64*
  %4953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4954 = getelementptr inbounds %struct.GPR, %struct.GPR* %4953, i32 0, i32 1
  %4955 = getelementptr inbounds %struct.Reg, %struct.Reg* %4954, i32 0, i32 0
  %RAX.i655 = bitcast %union.anon* %4955 to i64*
  %4956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4957 = getelementptr inbounds %struct.GPR, %struct.GPR* %4956, i32 0, i32 15
  %4958 = getelementptr inbounds %struct.Reg, %struct.Reg* %4957, i32 0, i32 0
  %RBP.i656 = bitcast %union.anon* %4958 to i64*
  %4959 = load i64, i64* %RBP.i656
  %4960 = sub i64 %4959, 4
  %4961 = load i64, i64* %PC.i654
  %4962 = add i64 %4961, 3
  store i64 %4962, i64* %PC.i654
  %4963 = inttoptr i64 %4960 to i32*
  %4964 = load i32, i32* %4963
  %4965 = zext i32 %4964 to i64
  store i64 %4965, i64* %RAX.i655, align 8
  store %struct.Memory* %loadMem_400c59, %struct.Memory** %MEMORY
  %loadMem_400c5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4967 = getelementptr inbounds %struct.GPR, %struct.GPR* %4966, i32 0, i32 33
  %4968 = getelementptr inbounds %struct.Reg, %struct.Reg* %4967, i32 0, i32 0
  %PC.i652 = bitcast %union.anon* %4968 to i64*
  %4969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4970 = getelementptr inbounds %struct.GPR, %struct.GPR* %4969, i32 0, i32 1
  %4971 = getelementptr inbounds %struct.Reg, %struct.Reg* %4970, i32 0, i32 0
  %RAX.i653 = bitcast %union.anon* %4971 to i64*
  %4972 = load i64, i64* %RAX.i653
  %4973 = load i64, i64* %PC.i652
  %4974 = add i64 %4973, 3
  store i64 %4974, i64* %PC.i652
  %4975 = trunc i64 %4972 to i32
  %4976 = add i32 1, %4975
  %4977 = zext i32 %4976 to i64
  store i64 %4977, i64* %RAX.i653, align 8
  %4978 = icmp ult i32 %4976, %4975
  %4979 = icmp ult i32 %4976, 1
  %4980 = or i1 %4978, %4979
  %4981 = zext i1 %4980 to i8
  %4982 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4981, i8* %4982, align 1
  %4983 = and i32 %4976, 255
  %4984 = call i32 @llvm.ctpop.i32(i32 %4983)
  %4985 = trunc i32 %4984 to i8
  %4986 = and i8 %4985, 1
  %4987 = xor i8 %4986, 1
  %4988 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4987, i8* %4988, align 1
  %4989 = xor i64 1, %4972
  %4990 = trunc i64 %4989 to i32
  %4991 = xor i32 %4990, %4976
  %4992 = lshr i32 %4991, 4
  %4993 = trunc i32 %4992 to i8
  %4994 = and i8 %4993, 1
  %4995 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4994, i8* %4995, align 1
  %4996 = icmp eq i32 %4976, 0
  %4997 = zext i1 %4996 to i8
  %4998 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4997, i8* %4998, align 1
  %4999 = lshr i32 %4976, 31
  %5000 = trunc i32 %4999 to i8
  %5001 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5000, i8* %5001, align 1
  %5002 = lshr i32 %4975, 31
  %5003 = xor i32 %4999, %5002
  %5004 = add i32 %5003, %4999
  %5005 = icmp eq i32 %5004, 2
  %5006 = zext i1 %5005 to i8
  %5007 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5006, i8* %5007, align 1
  store %struct.Memory* %loadMem_400c5c, %struct.Memory** %MEMORY
  %loadMem_400c5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5009 = getelementptr inbounds %struct.GPR, %struct.GPR* %5008, i32 0, i32 33
  %5010 = getelementptr inbounds %struct.Reg, %struct.Reg* %5009, i32 0, i32 0
  %PC.i649 = bitcast %union.anon* %5010 to i64*
  %5011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5012 = getelementptr inbounds %struct.GPR, %struct.GPR* %5011, i32 0, i32 1
  %5013 = getelementptr inbounds %struct.Reg, %struct.Reg* %5012, i32 0, i32 0
  %EAX.i650 = bitcast %union.anon* %5013 to i32*
  %5014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5015 = getelementptr inbounds %struct.GPR, %struct.GPR* %5014, i32 0, i32 15
  %5016 = getelementptr inbounds %struct.Reg, %struct.Reg* %5015, i32 0, i32 0
  %RBP.i651 = bitcast %union.anon* %5016 to i64*
  %5017 = load i64, i64* %RBP.i651
  %5018 = sub i64 %5017, 4
  %5019 = load i32, i32* %EAX.i650
  %5020 = zext i32 %5019 to i64
  %5021 = load i64, i64* %PC.i649
  %5022 = add i64 %5021, 3
  store i64 %5022, i64* %PC.i649
  %5023 = inttoptr i64 %5018 to i32*
  store i32 %5019, i32* %5023
  store %struct.Memory* %loadMem_400c5f, %struct.Memory** %MEMORY
  %loadMem_400c62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5025 = getelementptr inbounds %struct.GPR, %struct.GPR* %5024, i32 0, i32 33
  %5026 = getelementptr inbounds %struct.Reg, %struct.Reg* %5025, i32 0, i32 0
  %PC.i648 = bitcast %union.anon* %5026 to i64*
  %5027 = load i64, i64* %PC.i648
  %5028 = add i64 %5027, -124
  %5029 = load i64, i64* %PC.i648
  %5030 = add i64 %5029, 5
  store i64 %5030, i64* %PC.i648
  %5031 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5028, i64* %5031, align 8
  store %struct.Memory* %loadMem_400c62, %struct.Memory** %MEMORY
  br label %block_.L_400be6

block_.L_400c67:                                  ; preds = %block_.L_400be6
  %loadMem_400c67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5033 = getelementptr inbounds %struct.GPR, %struct.GPR* %5032, i32 0, i32 33
  %5034 = getelementptr inbounds %struct.Reg, %struct.Reg* %5033, i32 0, i32 0
  %PC.i647 = bitcast %union.anon* %5034 to i64*
  %5035 = load i64, i64* %PC.i647
  %5036 = add i64 %5035, 11
  store i64 %5036, i64* %PC.i647
  store i32 0, i32* bitcast (%G_0x619200_type* @G_0x619200 to i32*)
  store %struct.Memory* %loadMem_400c67, %struct.Memory** %MEMORY
  %loadMem_400c72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5038 = getelementptr inbounds %struct.GPR, %struct.GPR* %5037, i32 0, i32 33
  %5039 = getelementptr inbounds %struct.Reg, %struct.Reg* %5038, i32 0, i32 0
  %PC.i646 = bitcast %union.anon* %5039 to i64*
  %5040 = load i64, i64* %PC.i646
  %5041 = add i64 %5040, 11
  store i64 %5041, i64* %PC.i646
  store i32 67, i32* bitcast (%G_0x610260_type* @G_0x610260 to i32*)
  store %struct.Memory* %loadMem_400c72, %struct.Memory** %MEMORY
  %loadMem_400c7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5043 = getelementptr inbounds %struct.GPR, %struct.GPR* %5042, i32 0, i32 33
  %5044 = getelementptr inbounds %struct.Reg, %struct.Reg* %5043, i32 0, i32 0
  %PC.i644 = bitcast %union.anon* %5044 to i64*
  %5045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5046 = getelementptr inbounds %struct.GPR, %struct.GPR* %5045, i32 0, i32 15
  %5047 = getelementptr inbounds %struct.Reg, %struct.Reg* %5046, i32 0, i32 0
  %RBP.i645 = bitcast %union.anon* %5047 to i64*
  %5048 = load i64, i64* %RBP.i645
  %5049 = sub i64 %5048, 4
  %5050 = load i64, i64* %PC.i644
  %5051 = add i64 %5050, 7
  store i64 %5051, i64* %PC.i644
  %5052 = inttoptr i64 %5049 to i32*
  store i32 0, i32* %5052
  store %struct.Memory* %loadMem_400c7d, %struct.Memory** %MEMORY
  br label %block_.L_400c84

block_.L_400c84:                                  ; preds = %block_.L_400cf7, %block_.L_400c67
  %loadMem_400c84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5053 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5054 = getelementptr inbounds %struct.GPR, %struct.GPR* %5053, i32 0, i32 33
  %5055 = getelementptr inbounds %struct.Reg, %struct.Reg* %5054, i32 0, i32 0
  %PC.i642 = bitcast %union.anon* %5055 to i64*
  %5056 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5057 = getelementptr inbounds %struct.GPR, %struct.GPR* %5056, i32 0, i32 15
  %5058 = getelementptr inbounds %struct.Reg, %struct.Reg* %5057, i32 0, i32 0
  %RBP.i643 = bitcast %union.anon* %5058 to i64*
  %5059 = load i64, i64* %RBP.i643
  %5060 = sub i64 %5059, 4
  %5061 = load i64, i64* %PC.i642
  %5062 = add i64 %5061, 4
  store i64 %5062, i64* %PC.i642
  %5063 = inttoptr i64 %5060 to i32*
  %5064 = load i32, i32* %5063
  %5065 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5065, align 1
  %5066 = and i32 %5064, 255
  %5067 = call i32 @llvm.ctpop.i32(i32 %5066)
  %5068 = trunc i32 %5067 to i8
  %5069 = and i8 %5068, 1
  %5070 = xor i8 %5069, 1
  %5071 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5070, i8* %5071, align 1
  %5072 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5072, align 1
  %5073 = icmp eq i32 %5064, 0
  %5074 = zext i1 %5073 to i8
  %5075 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5074, i8* %5075, align 1
  %5076 = lshr i32 %5064, 31
  %5077 = trunc i32 %5076 to i8
  %5078 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5077, i8* %5078, align 1
  %5079 = lshr i32 %5064, 31
  %5080 = xor i32 %5076, %5079
  %5081 = add i32 %5080, %5079
  %5082 = icmp eq i32 %5081, 2
  %5083 = zext i1 %5082 to i8
  %5084 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5083, i8* %5084, align 1
  store %struct.Memory* %loadMem_400c84, %struct.Memory** %MEMORY
  %loadMem_400c88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5086 = getelementptr inbounds %struct.GPR, %struct.GPR* %5085, i32 0, i32 33
  %5087 = getelementptr inbounds %struct.Reg, %struct.Reg* %5086, i32 0, i32 0
  %PC.i641 = bitcast %union.anon* %5087 to i64*
  %5088 = load i64, i64* %PC.i641
  %5089 = add i64 %5088, 125
  %5090 = load i64, i64* %PC.i641
  %5091 = add i64 %5090, 6
  %5092 = load i64, i64* %PC.i641
  %5093 = add i64 %5092, 6
  store i64 %5093, i64* %PC.i641
  %5094 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5095 = load i8, i8* %5094, align 1
  %5096 = icmp eq i8 %5095, 0
  %5097 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5098 = load i8, i8* %5097, align 1
  %5099 = icmp ne i8 %5098, 0
  %5100 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5101 = load i8, i8* %5100, align 1
  %5102 = icmp ne i8 %5101, 0
  %5103 = xor i1 %5099, %5102
  %5104 = xor i1 %5103, true
  %5105 = and i1 %5096, %5104
  %5106 = zext i1 %5105 to i8
  store i8 %5106, i8* %BRANCH_TAKEN, align 1
  %5107 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5108 = select i1 %5105, i64 %5089, i64 %5091
  store i64 %5108, i64* %5107, align 8
  store %struct.Memory* %loadMem_400c88, %struct.Memory** %MEMORY
  %loadBr_400c88 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400c88 = icmp eq i8 %loadBr_400c88, 1
  br i1 %cmpBr_400c88, label %block_.L_400d05, label %block_400c8e

block_400c8e:                                     ; preds = %block_.L_400c84
  %loadMem_400c8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5110 = getelementptr inbounds %struct.GPR, %struct.GPR* %5109, i32 0, i32 33
  %5111 = getelementptr inbounds %struct.Reg, %struct.Reg* %5110, i32 0, i32 0
  %PC.i639 = bitcast %union.anon* %5111 to i64*
  %5112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5113 = getelementptr inbounds %struct.GPR, %struct.GPR* %5112, i32 0, i32 15
  %5114 = getelementptr inbounds %struct.Reg, %struct.Reg* %5113, i32 0, i32 0
  %RBP.i640 = bitcast %union.anon* %5114 to i64*
  %5115 = load i64, i64* %RBP.i640
  %5116 = sub i64 %5115, 8
  %5117 = load i64, i64* %PC.i639
  %5118 = add i64 %5117, 7
  store i64 %5118, i64* %PC.i639
  %5119 = inttoptr i64 %5116 to i32*
  store i32 0, i32* %5119
  store %struct.Memory* %loadMem_400c8e, %struct.Memory** %MEMORY
  br label %block_.L_400c95

block_.L_400c95:                                  ; preds = %block_.L_400ce4, %block_400c8e
  %loadMem_400c95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5121 = getelementptr inbounds %struct.GPR, %struct.GPR* %5120, i32 0, i32 33
  %5122 = getelementptr inbounds %struct.Reg, %struct.Reg* %5121, i32 0, i32 0
  %PC.i637 = bitcast %union.anon* %5122 to i64*
  %5123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5124 = getelementptr inbounds %struct.GPR, %struct.GPR* %5123, i32 0, i32 15
  %5125 = getelementptr inbounds %struct.Reg, %struct.Reg* %5124, i32 0, i32 0
  %RBP.i638 = bitcast %union.anon* %5125 to i64*
  %5126 = load i64, i64* %RBP.i638
  %5127 = sub i64 %5126, 8
  %5128 = load i64, i64* %PC.i637
  %5129 = add i64 %5128, 4
  store i64 %5129, i64* %PC.i637
  %5130 = inttoptr i64 %5127 to i32*
  %5131 = load i32, i32* %5130
  %5132 = sub i32 %5131, 1
  %5133 = icmp ult i32 %5131, 1
  %5134 = zext i1 %5133 to i8
  %5135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5134, i8* %5135, align 1
  %5136 = and i32 %5132, 255
  %5137 = call i32 @llvm.ctpop.i32(i32 %5136)
  %5138 = trunc i32 %5137 to i8
  %5139 = and i8 %5138, 1
  %5140 = xor i8 %5139, 1
  %5141 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5140, i8* %5141, align 1
  %5142 = xor i32 %5131, 1
  %5143 = xor i32 %5142, %5132
  %5144 = lshr i32 %5143, 4
  %5145 = trunc i32 %5144 to i8
  %5146 = and i8 %5145, 1
  %5147 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5146, i8* %5147, align 1
  %5148 = icmp eq i32 %5132, 0
  %5149 = zext i1 %5148 to i8
  %5150 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5149, i8* %5150, align 1
  %5151 = lshr i32 %5132, 31
  %5152 = trunc i32 %5151 to i8
  %5153 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5152, i8* %5153, align 1
  %5154 = lshr i32 %5131, 31
  %5155 = xor i32 %5151, %5154
  %5156 = add i32 %5155, %5154
  %5157 = icmp eq i32 %5156, 2
  %5158 = zext i1 %5157 to i8
  %5159 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5158, i8* %5159, align 1
  store %struct.Memory* %loadMem_400c95, %struct.Memory** %MEMORY
  %loadMem_400c99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5161 = getelementptr inbounds %struct.GPR, %struct.GPR* %5160, i32 0, i32 33
  %5162 = getelementptr inbounds %struct.Reg, %struct.Reg* %5161, i32 0, i32 0
  %PC.i636 = bitcast %union.anon* %5162 to i64*
  %5163 = load i64, i64* %PC.i636
  %5164 = add i64 %5163, 89
  %5165 = load i64, i64* %PC.i636
  %5166 = add i64 %5165, 6
  %5167 = load i64, i64* %PC.i636
  %5168 = add i64 %5167, 6
  store i64 %5168, i64* %PC.i636
  %5169 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5170 = load i8, i8* %5169, align 1
  %5171 = icmp eq i8 %5170, 0
  %5172 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5173 = load i8, i8* %5172, align 1
  %5174 = icmp ne i8 %5173, 0
  %5175 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5176 = load i8, i8* %5175, align 1
  %5177 = icmp ne i8 %5176, 0
  %5178 = xor i1 %5174, %5177
  %5179 = xor i1 %5178, true
  %5180 = and i1 %5171, %5179
  %5181 = zext i1 %5180 to i8
  store i8 %5181, i8* %BRANCH_TAKEN, align 1
  %5182 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5183 = select i1 %5180, i64 %5164, i64 %5166
  store i64 %5183, i64* %5182, align 8
  store %struct.Memory* %loadMem_400c99, %struct.Memory** %MEMORY
  %loadBr_400c99 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400c99 = icmp eq i8 %loadBr_400c99, 1
  br i1 %cmpBr_400c99, label %block_.L_400cf2, label %block_400c9f

block_400c9f:                                     ; preds = %block_.L_400c95
  %loadMem_400c9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5185 = getelementptr inbounds %struct.GPR, %struct.GPR* %5184, i32 0, i32 33
  %5186 = getelementptr inbounds %struct.Reg, %struct.Reg* %5185, i32 0, i32 0
  %PC.i634 = bitcast %union.anon* %5186 to i64*
  %5187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5188 = getelementptr inbounds %struct.GPR, %struct.GPR* %5187, i32 0, i32 15
  %5189 = getelementptr inbounds %struct.Reg, %struct.Reg* %5188, i32 0, i32 0
  %RBP.i635 = bitcast %union.anon* %5189 to i64*
  %5190 = load i64, i64* %RBP.i635
  %5191 = sub i64 %5190, 12
  %5192 = load i64, i64* %PC.i634
  %5193 = add i64 %5192, 7
  store i64 %5193, i64* %PC.i634
  %5194 = inttoptr i64 %5191 to i32*
  store i32 0, i32* %5194
  store %struct.Memory* %loadMem_400c9f, %struct.Memory** %MEMORY
  br label %block_.L_400ca6

block_.L_400ca6:                                  ; preds = %block_400cb0, %block_400c9f
  %loadMem_400ca6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5196 = getelementptr inbounds %struct.GPR, %struct.GPR* %5195, i32 0, i32 33
  %5197 = getelementptr inbounds %struct.Reg, %struct.Reg* %5196, i32 0, i32 0
  %PC.i632 = bitcast %union.anon* %5197 to i64*
  %5198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5199 = getelementptr inbounds %struct.GPR, %struct.GPR* %5198, i32 0, i32 15
  %5200 = getelementptr inbounds %struct.Reg, %struct.Reg* %5199, i32 0, i32 0
  %RBP.i633 = bitcast %union.anon* %5200 to i64*
  %5201 = load i64, i64* %RBP.i633
  %5202 = sub i64 %5201, 12
  %5203 = load i64, i64* %PC.i632
  %5204 = add i64 %5203, 4
  store i64 %5204, i64* %PC.i632
  %5205 = inttoptr i64 %5202 to i32*
  %5206 = load i32, i32* %5205
  %5207 = sub i32 %5206, 3
  %5208 = icmp ult i32 %5206, 3
  %5209 = zext i1 %5208 to i8
  %5210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5209, i8* %5210, align 1
  %5211 = and i32 %5207, 255
  %5212 = call i32 @llvm.ctpop.i32(i32 %5211)
  %5213 = trunc i32 %5212 to i8
  %5214 = and i8 %5213, 1
  %5215 = xor i8 %5214, 1
  %5216 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5215, i8* %5216, align 1
  %5217 = xor i32 %5206, 3
  %5218 = xor i32 %5217, %5207
  %5219 = lshr i32 %5218, 4
  %5220 = trunc i32 %5219 to i8
  %5221 = and i8 %5220, 1
  %5222 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5221, i8* %5222, align 1
  %5223 = icmp eq i32 %5207, 0
  %5224 = zext i1 %5223 to i8
  %5225 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5224, i8* %5225, align 1
  %5226 = lshr i32 %5207, 31
  %5227 = trunc i32 %5226 to i8
  %5228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5227, i8* %5228, align 1
  %5229 = lshr i32 %5206, 31
  %5230 = xor i32 %5226, %5229
  %5231 = add i32 %5230, %5229
  %5232 = icmp eq i32 %5231, 2
  %5233 = zext i1 %5232 to i8
  %5234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5233, i8* %5234, align 1
  store %struct.Memory* %loadMem_400ca6, %struct.Memory** %MEMORY
  %loadMem_400caa = load %struct.Memory*, %struct.Memory** %MEMORY
  %5235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5236 = getelementptr inbounds %struct.GPR, %struct.GPR* %5235, i32 0, i32 33
  %5237 = getelementptr inbounds %struct.Reg, %struct.Reg* %5236, i32 0, i32 0
  %PC.i631 = bitcast %union.anon* %5237 to i64*
  %5238 = load i64, i64* %PC.i631
  %5239 = add i64 %5238, 53
  %5240 = load i64, i64* %PC.i631
  %5241 = add i64 %5240, 6
  %5242 = load i64, i64* %PC.i631
  %5243 = add i64 %5242, 6
  store i64 %5243, i64* %PC.i631
  %5244 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5245 = load i8, i8* %5244, align 1
  %5246 = icmp eq i8 %5245, 0
  %5247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5248 = load i8, i8* %5247, align 1
  %5249 = icmp ne i8 %5248, 0
  %5250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5251 = load i8, i8* %5250, align 1
  %5252 = icmp ne i8 %5251, 0
  %5253 = xor i1 %5249, %5252
  %5254 = xor i1 %5253, true
  %5255 = and i1 %5246, %5254
  %5256 = zext i1 %5255 to i8
  store i8 %5256, i8* %BRANCH_TAKEN, align 1
  %5257 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5258 = select i1 %5255, i64 %5239, i64 %5241
  store i64 %5258, i64* %5257, align 8
  store %struct.Memory* %loadMem_400caa, %struct.Memory** %MEMORY
  %loadBr_400caa = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400caa = icmp eq i8 %loadBr_400caa, 1
  br i1 %cmpBr_400caa, label %block_.L_400cdf, label %block_400cb0

block_400cb0:                                     ; preds = %block_.L_400ca6
  %loadMem_400cb0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5260 = getelementptr inbounds %struct.GPR, %struct.GPR* %5259, i32 0, i32 33
  %5261 = getelementptr inbounds %struct.Reg, %struct.Reg* %5260, i32 0, i32 0
  %PC.i628 = bitcast %union.anon* %5261 to i64*
  %5262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5263 = getelementptr inbounds %struct.GPR, %struct.GPR* %5262, i32 0, i32 1
  %5264 = getelementptr inbounds %struct.Reg, %struct.Reg* %5263, i32 0, i32 0
  %RAX.i629 = bitcast %union.anon* %5264 to i64*
  %5265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5266 = getelementptr inbounds %struct.GPR, %struct.GPR* %5265, i32 0, i32 15
  %5267 = getelementptr inbounds %struct.Reg, %struct.Reg* %5266, i32 0, i32 0
  %RBP.i630 = bitcast %union.anon* %5267 to i64*
  %5268 = load i64, i64* %RBP.i630
  %5269 = sub i64 %5268, 4
  %5270 = load i64, i64* %PC.i628
  %5271 = add i64 %5270, 3
  store i64 %5271, i64* %PC.i628
  %5272 = inttoptr i64 %5269 to i32*
  %5273 = load i32, i32* %5272
  %5274 = zext i32 %5273 to i64
  store i64 %5274, i64* %RAX.i629, align 8
  store %struct.Memory* %loadMem_400cb0, %struct.Memory** %MEMORY
  %loadMem_400cb3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5276 = getelementptr inbounds %struct.GPR, %struct.GPR* %5275, i32 0, i32 33
  %5277 = getelementptr inbounds %struct.Reg, %struct.Reg* %5276, i32 0, i32 0
  %PC.i625 = bitcast %union.anon* %5277 to i64*
  %5278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5279 = getelementptr inbounds %struct.GPR, %struct.GPR* %5278, i32 0, i32 5
  %5280 = getelementptr inbounds %struct.Reg, %struct.Reg* %5279, i32 0, i32 0
  %RCX.i626 = bitcast %union.anon* %5280 to i64*
  %5281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5282 = getelementptr inbounds %struct.GPR, %struct.GPR* %5281, i32 0, i32 15
  %5283 = getelementptr inbounds %struct.Reg, %struct.Reg* %5282, i32 0, i32 0
  %RBP.i627 = bitcast %union.anon* %5283 to i64*
  %5284 = load i64, i64* %RBP.i627
  %5285 = sub i64 %5284, 8
  %5286 = load i64, i64* %PC.i625
  %5287 = add i64 %5286, 3
  store i64 %5287, i64* %PC.i625
  %5288 = inttoptr i64 %5285 to i32*
  %5289 = load i32, i32* %5288
  %5290 = zext i32 %5289 to i64
  store i64 %5290, i64* %RCX.i626, align 8
  store %struct.Memory* %loadMem_400cb3, %struct.Memory** %MEMORY
  %loadMem_400cb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5292 = getelementptr inbounds %struct.GPR, %struct.GPR* %5291, i32 0, i32 33
  %5293 = getelementptr inbounds %struct.Reg, %struct.Reg* %5292, i32 0, i32 0
  %PC.i622 = bitcast %union.anon* %5293 to i64*
  %5294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5295 = getelementptr inbounds %struct.GPR, %struct.GPR* %5294, i32 0, i32 7
  %5296 = getelementptr inbounds %struct.Reg, %struct.Reg* %5295, i32 0, i32 0
  %RDX.i623 = bitcast %union.anon* %5296 to i64*
  %5297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5298 = getelementptr inbounds %struct.GPR, %struct.GPR* %5297, i32 0, i32 15
  %5299 = getelementptr inbounds %struct.Reg, %struct.Reg* %5298, i32 0, i32 0
  %RBP.i624 = bitcast %union.anon* %5299 to i64*
  %5300 = load i64, i64* %RBP.i624
  %5301 = sub i64 %5300, 12
  %5302 = load i64, i64* %PC.i622
  %5303 = add i64 %5302, 3
  store i64 %5303, i64* %PC.i622
  %5304 = inttoptr i64 %5301 to i32*
  %5305 = load i32, i32* %5304
  %5306 = zext i32 %5305 to i64
  store i64 %5306, i64* %RDX.i623, align 8
  store %struct.Memory* %loadMem_400cb6, %struct.Memory** %MEMORY
  %loadMem_400cb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5308 = getelementptr inbounds %struct.GPR, %struct.GPR* %5307, i32 0, i32 33
  %5309 = getelementptr inbounds %struct.Reg, %struct.Reg* %5308, i32 0, i32 0
  %PC.i620 = bitcast %union.anon* %5309 to i64*
  %5310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5311 = getelementptr inbounds %struct.GPR, %struct.GPR* %5310, i32 0, i32 7
  %5312 = getelementptr inbounds %struct.Reg, %struct.Reg* %5311, i32 0, i32 0
  %RDX.i621 = bitcast %union.anon* %5312 to i64*
  %5313 = load i64, i64* %RDX.i621
  %5314 = load i64, i64* %PC.i620
  %5315 = add i64 %5314, 3
  store i64 %5315, i64* %PC.i620
  %5316 = and i64 %5313, 4294967295
  %5317 = shl i64 %5316, 2
  %5318 = trunc i64 %5317 to i32
  %5319 = icmp slt i32 %5318, 0
  %5320 = shl i32 %5318, 1
  %5321 = zext i32 %5320 to i64
  store i64 %5321, i64* %RDX.i621, align 8
  %5322 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %5323 = zext i1 %5319 to i8
  store i8 %5323, i8* %5322, align 1
  %5324 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %5325 = and i32 %5320, 254
  %5326 = call i32 @llvm.ctpop.i32(i32 %5325)
  %5327 = trunc i32 %5326 to i8
  %5328 = and i8 %5327, 1
  %5329 = xor i8 %5328, 1
  store i8 %5329, i8* %5324, align 1
  %5330 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5330, align 1
  %5331 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5332 = icmp eq i32 %5320, 0
  %5333 = zext i1 %5332 to i8
  store i8 %5333, i8* %5331, align 1
  %5334 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5335 = lshr i32 %5320, 31
  %5336 = trunc i32 %5335 to i8
  store i8 %5336, i8* %5334, align 1
  %5337 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5337, align 1
  store %struct.Memory* %loadMem_400cb9, %struct.Memory** %MEMORY
  %loadMem_400cbc = load %struct.Memory*, %struct.Memory** %MEMORY
  %5338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5339 = getelementptr inbounds %struct.GPR, %struct.GPR* %5338, i32 0, i32 33
  %5340 = getelementptr inbounds %struct.Reg, %struct.Reg* %5339, i32 0, i32 0
  %PC.i617 = bitcast %union.anon* %5340 to i64*
  %5341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5342 = getelementptr inbounds %struct.GPR, %struct.GPR* %5341, i32 0, i32 7
  %5343 = getelementptr inbounds %struct.Reg, %struct.Reg* %5342, i32 0, i32 0
  %EDX.i618 = bitcast %union.anon* %5343 to i32*
  %5344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5345 = getelementptr inbounds %struct.GPR, %struct.GPR* %5344, i32 0, i32 5
  %5346 = getelementptr inbounds %struct.Reg, %struct.Reg* %5345, i32 0, i32 0
  %RCX.i619 = bitcast %union.anon* %5346 to i64*
  %5347 = load i64, i64* %RCX.i619
  %5348 = load i32, i32* %EDX.i618
  %5349 = zext i32 %5348 to i64
  %5350 = load i64, i64* %PC.i617
  %5351 = add i64 %5350, 2
  store i64 %5351, i64* %PC.i617
  %5352 = trunc i64 %5347 to i32
  %5353 = add i32 %5348, %5352
  %5354 = zext i32 %5353 to i64
  store i64 %5354, i64* %RCX.i619, align 8
  %5355 = icmp ult i32 %5353, %5352
  %5356 = icmp ult i32 %5353, %5348
  %5357 = or i1 %5355, %5356
  %5358 = zext i1 %5357 to i8
  %5359 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5358, i8* %5359, align 1
  %5360 = and i32 %5353, 255
  %5361 = call i32 @llvm.ctpop.i32(i32 %5360)
  %5362 = trunc i32 %5361 to i8
  %5363 = and i8 %5362, 1
  %5364 = xor i8 %5363, 1
  %5365 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5364, i8* %5365, align 1
  %5366 = xor i64 %5349, %5347
  %5367 = trunc i64 %5366 to i32
  %5368 = xor i32 %5367, %5353
  %5369 = lshr i32 %5368, 4
  %5370 = trunc i32 %5369 to i8
  %5371 = and i8 %5370, 1
  %5372 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5371, i8* %5372, align 1
  %5373 = icmp eq i32 %5353, 0
  %5374 = zext i1 %5373 to i8
  %5375 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5374, i8* %5375, align 1
  %5376 = lshr i32 %5353, 31
  %5377 = trunc i32 %5376 to i8
  %5378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5377, i8* %5378, align 1
  %5379 = lshr i32 %5352, 31
  %5380 = lshr i32 %5348, 31
  %5381 = xor i32 %5376, %5379
  %5382 = xor i32 %5376, %5380
  %5383 = add i32 %5381, %5382
  %5384 = icmp eq i32 %5383, 2
  %5385 = zext i1 %5384 to i8
  %5386 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5385, i8* %5386, align 1
  store %struct.Memory* %loadMem_400cbc, %struct.Memory** %MEMORY
  %loadMem_400cbe = load %struct.Memory*, %struct.Memory** %MEMORY
  %5387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5388 = getelementptr inbounds %struct.GPR, %struct.GPR* %5387, i32 0, i32 33
  %5389 = getelementptr inbounds %struct.Reg, %struct.Reg* %5388, i32 0, i32 0
  %PC.i615 = bitcast %union.anon* %5389 to i64*
  %5390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5391 = getelementptr inbounds %struct.GPR, %struct.GPR* %5390, i32 0, i32 5
  %5392 = getelementptr inbounds %struct.Reg, %struct.Reg* %5391, i32 0, i32 0
  %RCX.i616 = bitcast %union.anon* %5392 to i64*
  %5393 = load i64, i64* %RCX.i616
  %5394 = load i64, i64* %PC.i615
  %5395 = add i64 %5394, 3
  store i64 %5395, i64* %PC.i615
  %5396 = and i64 %5393, 4294967295
  %5397 = shl i64 %5396, 2
  %5398 = trunc i64 %5397 to i32
  %5399 = icmp slt i32 %5398, 0
  %5400 = shl i32 %5398, 1
  %5401 = zext i32 %5400 to i64
  store i64 %5401, i64* %RCX.i616, align 8
  %5402 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %5403 = zext i1 %5399 to i8
  store i8 %5403, i8* %5402, align 1
  %5404 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %5405 = and i32 %5400, 254
  %5406 = call i32 @llvm.ctpop.i32(i32 %5405)
  %5407 = trunc i32 %5406 to i8
  %5408 = and i8 %5407, 1
  %5409 = xor i8 %5408, 1
  store i8 %5409, i8* %5404, align 1
  %5410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5410, align 1
  %5411 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5412 = icmp eq i32 %5400, 0
  %5413 = zext i1 %5412 to i8
  store i8 %5413, i8* %5411, align 1
  %5414 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5415 = lshr i32 %5400, 31
  %5416 = trunc i32 %5415 to i8
  store i8 %5416, i8* %5414, align 1
  %5417 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5417, align 1
  store %struct.Memory* %loadMem_400cbe, %struct.Memory** %MEMORY
  %loadMem_400cc1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5419 = getelementptr inbounds %struct.GPR, %struct.GPR* %5418, i32 0, i32 33
  %5420 = getelementptr inbounds %struct.Reg, %struct.Reg* %5419, i32 0, i32 0
  %PC.i612 = bitcast %union.anon* %5420 to i64*
  %5421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5422 = getelementptr inbounds %struct.GPR, %struct.GPR* %5421, i32 0, i32 5
  %5423 = getelementptr inbounds %struct.Reg, %struct.Reg* %5422, i32 0, i32 0
  %ECX.i613 = bitcast %union.anon* %5423 to i32*
  %5424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5425 = getelementptr inbounds %struct.GPR, %struct.GPR* %5424, i32 0, i32 1
  %5426 = getelementptr inbounds %struct.Reg, %struct.Reg* %5425, i32 0, i32 0
  %RAX.i614 = bitcast %union.anon* %5426 to i64*
  %5427 = load i64, i64* %RAX.i614
  %5428 = load i32, i32* %ECX.i613
  %5429 = zext i32 %5428 to i64
  %5430 = load i64, i64* %PC.i612
  %5431 = add i64 %5430, 2
  store i64 %5431, i64* %PC.i612
  %5432 = trunc i64 %5427 to i32
  %5433 = add i32 %5428, %5432
  %5434 = zext i32 %5433 to i64
  store i64 %5434, i64* %RAX.i614, align 8
  %5435 = icmp ult i32 %5433, %5432
  %5436 = icmp ult i32 %5433, %5428
  %5437 = or i1 %5435, %5436
  %5438 = zext i1 %5437 to i8
  %5439 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5438, i8* %5439, align 1
  %5440 = and i32 %5433, 255
  %5441 = call i32 @llvm.ctpop.i32(i32 %5440)
  %5442 = trunc i32 %5441 to i8
  %5443 = and i8 %5442, 1
  %5444 = xor i8 %5443, 1
  %5445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5444, i8* %5445, align 1
  %5446 = xor i64 %5429, %5427
  %5447 = trunc i64 %5446 to i32
  %5448 = xor i32 %5447, %5433
  %5449 = lshr i32 %5448, 4
  %5450 = trunc i32 %5449 to i8
  %5451 = and i8 %5450, 1
  %5452 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5451, i8* %5452, align 1
  %5453 = icmp eq i32 %5433, 0
  %5454 = zext i1 %5453 to i8
  %5455 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5454, i8* %5455, align 1
  %5456 = lshr i32 %5433, 31
  %5457 = trunc i32 %5456 to i8
  %5458 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5457, i8* %5458, align 1
  %5459 = lshr i32 %5432, 31
  %5460 = lshr i32 %5428, 31
  %5461 = xor i32 %5456, %5459
  %5462 = xor i32 %5456, %5460
  %5463 = add i32 %5461, %5462
  %5464 = icmp eq i32 %5463, 2
  %5465 = zext i1 %5464 to i8
  %5466 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5465, i8* %5466, align 1
  store %struct.Memory* %loadMem_400cc1, %struct.Memory** %MEMORY
  %loadMem_400cc3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5468 = getelementptr inbounds %struct.GPR, %struct.GPR* %5467, i32 0, i32 33
  %5469 = getelementptr inbounds %struct.Reg, %struct.Reg* %5468, i32 0, i32 0
  %PC.i609 = bitcast %union.anon* %5469 to i64*
  %5470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5471 = getelementptr inbounds %struct.GPR, %struct.GPR* %5470, i32 0, i32 1
  %5472 = getelementptr inbounds %struct.Reg, %struct.Reg* %5471, i32 0, i32 0
  %EAX.i610 = bitcast %union.anon* %5472 to i32*
  %5473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5474 = getelementptr inbounds %struct.GPR, %struct.GPR* %5473, i32 0, i32 9
  %5475 = getelementptr inbounds %struct.Reg, %struct.Reg* %5474, i32 0, i32 0
  %RSI.i611 = bitcast %union.anon* %5475 to i64*
  %5476 = load i32, i32* %EAX.i610
  %5477 = zext i32 %5476 to i64
  %5478 = load i64, i64* %PC.i609
  %5479 = add i64 %5478, 3
  store i64 %5479, i64* %PC.i609
  %5480 = shl i64 %5477, 32
  %5481 = ashr exact i64 %5480, 32
  store i64 %5481, i64* %RSI.i611, align 8
  store %struct.Memory* %loadMem_400cc3, %struct.Memory** %MEMORY
  %loadMem_400cc6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5483 = getelementptr inbounds %struct.GPR, %struct.GPR* %5482, i32 0, i32 33
  %5484 = getelementptr inbounds %struct.Reg, %struct.Reg* %5483, i32 0, i32 0
  %PC.i607 = bitcast %union.anon* %5484 to i64*
  %5485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5486 = getelementptr inbounds %struct.GPR, %struct.GPR* %5485, i32 0, i32 9
  %5487 = getelementptr inbounds %struct.Reg, %struct.Reg* %5486, i32 0, i32 0
  %RSI.i608 = bitcast %union.anon* %5487 to i64*
  %5488 = load i64, i64* %RSI.i608
  %5489 = mul i64 %5488, 4
  %5490 = add i64 %5489, ptrtoint (%G_0x6062a0___rsi_4__type* @G_0x6062a0___rsi_4_ to i64)
  %5491 = load i64, i64* %PC.i607
  %5492 = add i64 %5491, 11
  store i64 %5492, i64* %PC.i607
  %5493 = inttoptr i64 %5490 to i32*
  store i32 1, i32* %5493
  store %struct.Memory* %loadMem_400cc6, %struct.Memory** %MEMORY
  %loadMem_400cd1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5495 = getelementptr inbounds %struct.GPR, %struct.GPR* %5494, i32 0, i32 33
  %5496 = getelementptr inbounds %struct.Reg, %struct.Reg* %5495, i32 0, i32 0
  %PC.i604 = bitcast %union.anon* %5496 to i64*
  %5497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5498 = getelementptr inbounds %struct.GPR, %struct.GPR* %5497, i32 0, i32 1
  %5499 = getelementptr inbounds %struct.Reg, %struct.Reg* %5498, i32 0, i32 0
  %RAX.i605 = bitcast %union.anon* %5499 to i64*
  %5500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5501 = getelementptr inbounds %struct.GPR, %struct.GPR* %5500, i32 0, i32 15
  %5502 = getelementptr inbounds %struct.Reg, %struct.Reg* %5501, i32 0, i32 0
  %RBP.i606 = bitcast %union.anon* %5502 to i64*
  %5503 = load i64, i64* %RBP.i606
  %5504 = sub i64 %5503, 12
  %5505 = load i64, i64* %PC.i604
  %5506 = add i64 %5505, 3
  store i64 %5506, i64* %PC.i604
  %5507 = inttoptr i64 %5504 to i32*
  %5508 = load i32, i32* %5507
  %5509 = zext i32 %5508 to i64
  store i64 %5509, i64* %RAX.i605, align 8
  store %struct.Memory* %loadMem_400cd1, %struct.Memory** %MEMORY
  %loadMem_400cd4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5511 = getelementptr inbounds %struct.GPR, %struct.GPR* %5510, i32 0, i32 33
  %5512 = getelementptr inbounds %struct.Reg, %struct.Reg* %5511, i32 0, i32 0
  %PC.i602 = bitcast %union.anon* %5512 to i64*
  %5513 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5514 = getelementptr inbounds %struct.GPR, %struct.GPR* %5513, i32 0, i32 1
  %5515 = getelementptr inbounds %struct.Reg, %struct.Reg* %5514, i32 0, i32 0
  %RAX.i603 = bitcast %union.anon* %5515 to i64*
  %5516 = load i64, i64* %RAX.i603
  %5517 = load i64, i64* %PC.i602
  %5518 = add i64 %5517, 3
  store i64 %5518, i64* %PC.i602
  %5519 = trunc i64 %5516 to i32
  %5520 = add i32 1, %5519
  %5521 = zext i32 %5520 to i64
  store i64 %5521, i64* %RAX.i603, align 8
  %5522 = icmp ult i32 %5520, %5519
  %5523 = icmp ult i32 %5520, 1
  %5524 = or i1 %5522, %5523
  %5525 = zext i1 %5524 to i8
  %5526 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5525, i8* %5526, align 1
  %5527 = and i32 %5520, 255
  %5528 = call i32 @llvm.ctpop.i32(i32 %5527)
  %5529 = trunc i32 %5528 to i8
  %5530 = and i8 %5529, 1
  %5531 = xor i8 %5530, 1
  %5532 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5531, i8* %5532, align 1
  %5533 = xor i64 1, %5516
  %5534 = trunc i64 %5533 to i32
  %5535 = xor i32 %5534, %5520
  %5536 = lshr i32 %5535, 4
  %5537 = trunc i32 %5536 to i8
  %5538 = and i8 %5537, 1
  %5539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5538, i8* %5539, align 1
  %5540 = icmp eq i32 %5520, 0
  %5541 = zext i1 %5540 to i8
  %5542 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5541, i8* %5542, align 1
  %5543 = lshr i32 %5520, 31
  %5544 = trunc i32 %5543 to i8
  %5545 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5544, i8* %5545, align 1
  %5546 = lshr i32 %5519, 31
  %5547 = xor i32 %5543, %5546
  %5548 = add i32 %5547, %5543
  %5549 = icmp eq i32 %5548, 2
  %5550 = zext i1 %5549 to i8
  %5551 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5550, i8* %5551, align 1
  store %struct.Memory* %loadMem_400cd4, %struct.Memory** %MEMORY
  %loadMem_400cd7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5553 = getelementptr inbounds %struct.GPR, %struct.GPR* %5552, i32 0, i32 33
  %5554 = getelementptr inbounds %struct.Reg, %struct.Reg* %5553, i32 0, i32 0
  %PC.i599 = bitcast %union.anon* %5554 to i64*
  %5555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5556 = getelementptr inbounds %struct.GPR, %struct.GPR* %5555, i32 0, i32 1
  %5557 = getelementptr inbounds %struct.Reg, %struct.Reg* %5556, i32 0, i32 0
  %EAX.i600 = bitcast %union.anon* %5557 to i32*
  %5558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5559 = getelementptr inbounds %struct.GPR, %struct.GPR* %5558, i32 0, i32 15
  %5560 = getelementptr inbounds %struct.Reg, %struct.Reg* %5559, i32 0, i32 0
  %RBP.i601 = bitcast %union.anon* %5560 to i64*
  %5561 = load i64, i64* %RBP.i601
  %5562 = sub i64 %5561, 12
  %5563 = load i32, i32* %EAX.i600
  %5564 = zext i32 %5563 to i64
  %5565 = load i64, i64* %PC.i599
  %5566 = add i64 %5565, 3
  store i64 %5566, i64* %PC.i599
  %5567 = inttoptr i64 %5562 to i32*
  store i32 %5563, i32* %5567
  store %struct.Memory* %loadMem_400cd7, %struct.Memory** %MEMORY
  %loadMem_400cda = load %struct.Memory*, %struct.Memory** %MEMORY
  %5568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5569 = getelementptr inbounds %struct.GPR, %struct.GPR* %5568, i32 0, i32 33
  %5570 = getelementptr inbounds %struct.Reg, %struct.Reg* %5569, i32 0, i32 0
  %PC.i598 = bitcast %union.anon* %5570 to i64*
  %5571 = load i64, i64* %PC.i598
  %5572 = add i64 %5571, -52
  %5573 = load i64, i64* %PC.i598
  %5574 = add i64 %5573, 5
  store i64 %5574, i64* %PC.i598
  %5575 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5572, i64* %5575, align 8
  store %struct.Memory* %loadMem_400cda, %struct.Memory** %MEMORY
  br label %block_.L_400ca6

block_.L_400cdf:                                  ; preds = %block_.L_400ca6
  %loadMem_400cdf = load %struct.Memory*, %struct.Memory** %MEMORY
  %5576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5577 = getelementptr inbounds %struct.GPR, %struct.GPR* %5576, i32 0, i32 33
  %5578 = getelementptr inbounds %struct.Reg, %struct.Reg* %5577, i32 0, i32 0
  %PC.i597 = bitcast %union.anon* %5578 to i64*
  %5579 = load i64, i64* %PC.i597
  %5580 = add i64 %5579, 5
  %5581 = load i64, i64* %PC.i597
  %5582 = add i64 %5581, 5
  store i64 %5582, i64* %PC.i597
  %5583 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5580, i64* %5583, align 8
  store %struct.Memory* %loadMem_400cdf, %struct.Memory** %MEMORY
  br label %block_.L_400ce4

block_.L_400ce4:                                  ; preds = %block_.L_400cdf
  %loadMem_400ce4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5585 = getelementptr inbounds %struct.GPR, %struct.GPR* %5584, i32 0, i32 33
  %5586 = getelementptr inbounds %struct.Reg, %struct.Reg* %5585, i32 0, i32 0
  %PC.i594 = bitcast %union.anon* %5586 to i64*
  %5587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5588 = getelementptr inbounds %struct.GPR, %struct.GPR* %5587, i32 0, i32 1
  %5589 = getelementptr inbounds %struct.Reg, %struct.Reg* %5588, i32 0, i32 0
  %RAX.i595 = bitcast %union.anon* %5589 to i64*
  %5590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5591 = getelementptr inbounds %struct.GPR, %struct.GPR* %5590, i32 0, i32 15
  %5592 = getelementptr inbounds %struct.Reg, %struct.Reg* %5591, i32 0, i32 0
  %RBP.i596 = bitcast %union.anon* %5592 to i64*
  %5593 = load i64, i64* %RBP.i596
  %5594 = sub i64 %5593, 8
  %5595 = load i64, i64* %PC.i594
  %5596 = add i64 %5595, 3
  store i64 %5596, i64* %PC.i594
  %5597 = inttoptr i64 %5594 to i32*
  %5598 = load i32, i32* %5597
  %5599 = zext i32 %5598 to i64
  store i64 %5599, i64* %RAX.i595, align 8
  store %struct.Memory* %loadMem_400ce4, %struct.Memory** %MEMORY
  %loadMem_400ce7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5601 = getelementptr inbounds %struct.GPR, %struct.GPR* %5600, i32 0, i32 33
  %5602 = getelementptr inbounds %struct.Reg, %struct.Reg* %5601, i32 0, i32 0
  %PC.i592 = bitcast %union.anon* %5602 to i64*
  %5603 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5604 = getelementptr inbounds %struct.GPR, %struct.GPR* %5603, i32 0, i32 1
  %5605 = getelementptr inbounds %struct.Reg, %struct.Reg* %5604, i32 0, i32 0
  %RAX.i593 = bitcast %union.anon* %5605 to i64*
  %5606 = load i64, i64* %RAX.i593
  %5607 = load i64, i64* %PC.i592
  %5608 = add i64 %5607, 3
  store i64 %5608, i64* %PC.i592
  %5609 = trunc i64 %5606 to i32
  %5610 = add i32 1, %5609
  %5611 = zext i32 %5610 to i64
  store i64 %5611, i64* %RAX.i593, align 8
  %5612 = icmp ult i32 %5610, %5609
  %5613 = icmp ult i32 %5610, 1
  %5614 = or i1 %5612, %5613
  %5615 = zext i1 %5614 to i8
  %5616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5615, i8* %5616, align 1
  %5617 = and i32 %5610, 255
  %5618 = call i32 @llvm.ctpop.i32(i32 %5617)
  %5619 = trunc i32 %5618 to i8
  %5620 = and i8 %5619, 1
  %5621 = xor i8 %5620, 1
  %5622 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5621, i8* %5622, align 1
  %5623 = xor i64 1, %5606
  %5624 = trunc i64 %5623 to i32
  %5625 = xor i32 %5624, %5610
  %5626 = lshr i32 %5625, 4
  %5627 = trunc i32 %5626 to i8
  %5628 = and i8 %5627, 1
  %5629 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5628, i8* %5629, align 1
  %5630 = icmp eq i32 %5610, 0
  %5631 = zext i1 %5630 to i8
  %5632 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5631, i8* %5632, align 1
  %5633 = lshr i32 %5610, 31
  %5634 = trunc i32 %5633 to i8
  %5635 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5634, i8* %5635, align 1
  %5636 = lshr i32 %5609, 31
  %5637 = xor i32 %5633, %5636
  %5638 = add i32 %5637, %5633
  %5639 = icmp eq i32 %5638, 2
  %5640 = zext i1 %5639 to i8
  %5641 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5640, i8* %5641, align 1
  store %struct.Memory* %loadMem_400ce7, %struct.Memory** %MEMORY
  %loadMem_400cea = load %struct.Memory*, %struct.Memory** %MEMORY
  %5642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5643 = getelementptr inbounds %struct.GPR, %struct.GPR* %5642, i32 0, i32 33
  %5644 = getelementptr inbounds %struct.Reg, %struct.Reg* %5643, i32 0, i32 0
  %PC.i589 = bitcast %union.anon* %5644 to i64*
  %5645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5646 = getelementptr inbounds %struct.GPR, %struct.GPR* %5645, i32 0, i32 1
  %5647 = getelementptr inbounds %struct.Reg, %struct.Reg* %5646, i32 0, i32 0
  %EAX.i590 = bitcast %union.anon* %5647 to i32*
  %5648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5649 = getelementptr inbounds %struct.GPR, %struct.GPR* %5648, i32 0, i32 15
  %5650 = getelementptr inbounds %struct.Reg, %struct.Reg* %5649, i32 0, i32 0
  %RBP.i591 = bitcast %union.anon* %5650 to i64*
  %5651 = load i64, i64* %RBP.i591
  %5652 = sub i64 %5651, 8
  %5653 = load i32, i32* %EAX.i590
  %5654 = zext i32 %5653 to i64
  %5655 = load i64, i64* %PC.i589
  %5656 = add i64 %5655, 3
  store i64 %5656, i64* %PC.i589
  %5657 = inttoptr i64 %5652 to i32*
  store i32 %5653, i32* %5657
  store %struct.Memory* %loadMem_400cea, %struct.Memory** %MEMORY
  %loadMem_400ced = load %struct.Memory*, %struct.Memory** %MEMORY
  %5658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5659 = getelementptr inbounds %struct.GPR, %struct.GPR* %5658, i32 0, i32 33
  %5660 = getelementptr inbounds %struct.Reg, %struct.Reg* %5659, i32 0, i32 0
  %PC.i588 = bitcast %union.anon* %5660 to i64*
  %5661 = load i64, i64* %PC.i588
  %5662 = add i64 %5661, -88
  %5663 = load i64, i64* %PC.i588
  %5664 = add i64 %5663, 5
  store i64 %5664, i64* %PC.i588
  %5665 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5662, i64* %5665, align 8
  store %struct.Memory* %loadMem_400ced, %struct.Memory** %MEMORY
  br label %block_.L_400c95

block_.L_400cf2:                                  ; preds = %block_.L_400c95
  %loadMem_400cf2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5667 = getelementptr inbounds %struct.GPR, %struct.GPR* %5666, i32 0, i32 33
  %5668 = getelementptr inbounds %struct.Reg, %struct.Reg* %5667, i32 0, i32 0
  %PC.i587 = bitcast %union.anon* %5668 to i64*
  %5669 = load i64, i64* %PC.i587
  %5670 = add i64 %5669, 5
  %5671 = load i64, i64* %PC.i587
  %5672 = add i64 %5671, 5
  store i64 %5672, i64* %PC.i587
  %5673 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5670, i64* %5673, align 8
  store %struct.Memory* %loadMem_400cf2, %struct.Memory** %MEMORY
  br label %block_.L_400cf7

block_.L_400cf7:                                  ; preds = %block_.L_400cf2
  %loadMem_400cf7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5675 = getelementptr inbounds %struct.GPR, %struct.GPR* %5674, i32 0, i32 33
  %5676 = getelementptr inbounds %struct.Reg, %struct.Reg* %5675, i32 0, i32 0
  %PC.i584 = bitcast %union.anon* %5676 to i64*
  %5677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5678 = getelementptr inbounds %struct.GPR, %struct.GPR* %5677, i32 0, i32 1
  %5679 = getelementptr inbounds %struct.Reg, %struct.Reg* %5678, i32 0, i32 0
  %RAX.i585 = bitcast %union.anon* %5679 to i64*
  %5680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5681 = getelementptr inbounds %struct.GPR, %struct.GPR* %5680, i32 0, i32 15
  %5682 = getelementptr inbounds %struct.Reg, %struct.Reg* %5681, i32 0, i32 0
  %RBP.i586 = bitcast %union.anon* %5682 to i64*
  %5683 = load i64, i64* %RBP.i586
  %5684 = sub i64 %5683, 4
  %5685 = load i64, i64* %PC.i584
  %5686 = add i64 %5685, 3
  store i64 %5686, i64* %PC.i584
  %5687 = inttoptr i64 %5684 to i32*
  %5688 = load i32, i32* %5687
  %5689 = zext i32 %5688 to i64
  store i64 %5689, i64* %RAX.i585, align 8
  store %struct.Memory* %loadMem_400cf7, %struct.Memory** %MEMORY
  %loadMem_400cfa = load %struct.Memory*, %struct.Memory** %MEMORY
  %5690 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5691 = getelementptr inbounds %struct.GPR, %struct.GPR* %5690, i32 0, i32 33
  %5692 = getelementptr inbounds %struct.Reg, %struct.Reg* %5691, i32 0, i32 0
  %PC.i582 = bitcast %union.anon* %5692 to i64*
  %5693 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5694 = getelementptr inbounds %struct.GPR, %struct.GPR* %5693, i32 0, i32 1
  %5695 = getelementptr inbounds %struct.Reg, %struct.Reg* %5694, i32 0, i32 0
  %RAX.i583 = bitcast %union.anon* %5695 to i64*
  %5696 = load i64, i64* %RAX.i583
  %5697 = load i64, i64* %PC.i582
  %5698 = add i64 %5697, 3
  store i64 %5698, i64* %PC.i582
  %5699 = trunc i64 %5696 to i32
  %5700 = add i32 1, %5699
  %5701 = zext i32 %5700 to i64
  store i64 %5701, i64* %RAX.i583, align 8
  %5702 = icmp ult i32 %5700, %5699
  %5703 = icmp ult i32 %5700, 1
  %5704 = or i1 %5702, %5703
  %5705 = zext i1 %5704 to i8
  %5706 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5705, i8* %5706, align 1
  %5707 = and i32 %5700, 255
  %5708 = call i32 @llvm.ctpop.i32(i32 %5707)
  %5709 = trunc i32 %5708 to i8
  %5710 = and i8 %5709, 1
  %5711 = xor i8 %5710, 1
  %5712 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5711, i8* %5712, align 1
  %5713 = xor i64 1, %5696
  %5714 = trunc i64 %5713 to i32
  %5715 = xor i32 %5714, %5700
  %5716 = lshr i32 %5715, 4
  %5717 = trunc i32 %5716 to i8
  %5718 = and i8 %5717, 1
  %5719 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5718, i8* %5719, align 1
  %5720 = icmp eq i32 %5700, 0
  %5721 = zext i1 %5720 to i8
  %5722 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5721, i8* %5722, align 1
  %5723 = lshr i32 %5700, 31
  %5724 = trunc i32 %5723 to i8
  %5725 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5724, i8* %5725, align 1
  %5726 = lshr i32 %5699, 31
  %5727 = xor i32 %5723, %5726
  %5728 = add i32 %5727, %5723
  %5729 = icmp eq i32 %5728, 2
  %5730 = zext i1 %5729 to i8
  %5731 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5730, i8* %5731, align 1
  store %struct.Memory* %loadMem_400cfa, %struct.Memory** %MEMORY
  %loadMem_400cfd = load %struct.Memory*, %struct.Memory** %MEMORY
  %5732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5733 = getelementptr inbounds %struct.GPR, %struct.GPR* %5732, i32 0, i32 33
  %5734 = getelementptr inbounds %struct.Reg, %struct.Reg* %5733, i32 0, i32 0
  %PC.i579 = bitcast %union.anon* %5734 to i64*
  %5735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5736 = getelementptr inbounds %struct.GPR, %struct.GPR* %5735, i32 0, i32 1
  %5737 = getelementptr inbounds %struct.Reg, %struct.Reg* %5736, i32 0, i32 0
  %EAX.i580 = bitcast %union.anon* %5737 to i32*
  %5738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5739 = getelementptr inbounds %struct.GPR, %struct.GPR* %5738, i32 0, i32 15
  %5740 = getelementptr inbounds %struct.Reg, %struct.Reg* %5739, i32 0, i32 0
  %RBP.i581 = bitcast %union.anon* %5740 to i64*
  %5741 = load i64, i64* %RBP.i581
  %5742 = sub i64 %5741, 4
  %5743 = load i32, i32* %EAX.i580
  %5744 = zext i32 %5743 to i64
  %5745 = load i64, i64* %PC.i579
  %5746 = add i64 %5745, 3
  store i64 %5746, i64* %PC.i579
  %5747 = inttoptr i64 %5742 to i32*
  store i32 %5743, i32* %5747
  store %struct.Memory* %loadMem_400cfd, %struct.Memory** %MEMORY
  %loadMem_400d00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5748 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5749 = getelementptr inbounds %struct.GPR, %struct.GPR* %5748, i32 0, i32 33
  %5750 = getelementptr inbounds %struct.Reg, %struct.Reg* %5749, i32 0, i32 0
  %PC.i578 = bitcast %union.anon* %5750 to i64*
  %5751 = load i64, i64* %PC.i578
  %5752 = add i64 %5751, -124
  %5753 = load i64, i64* %PC.i578
  %5754 = add i64 %5753, 5
  store i64 %5754, i64* %PC.i578
  %5755 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5752, i64* %5755, align 8
  store %struct.Memory* %loadMem_400d00, %struct.Memory** %MEMORY
  br label %block_.L_400c84

block_.L_400d05:                                  ; preds = %block_.L_400c84
  %loadMem_400d05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5757 = getelementptr inbounds %struct.GPR, %struct.GPR* %5756, i32 0, i32 33
  %5758 = getelementptr inbounds %struct.Reg, %struct.Reg* %5757, i32 0, i32 0
  %PC.i577 = bitcast %union.anon* %5758 to i64*
  %5759 = load i64, i64* %PC.i577
  %5760 = add i64 %5759, 11
  store i64 %5760, i64* %PC.i577
  store i32 0, i32* bitcast (%G_0x619204_type* @G_0x619204 to i32*)
  store %struct.Memory* %loadMem_400d05, %struct.Memory** %MEMORY
  %loadMem_400d10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5762 = getelementptr inbounds %struct.GPR, %struct.GPR* %5761, i32 0, i32 33
  %5763 = getelementptr inbounds %struct.Reg, %struct.Reg* %5762, i32 0, i32 0
  %PC.i576 = bitcast %union.anon* %5763 to i64*
  %5764 = load i64, i64* %PC.i576
  %5765 = add i64 %5764, 11
  store i64 %5765, i64* %PC.i576
  store i32 200, i32* bitcast (%G_0x610264_type* @G_0x610264 to i32*)
  store %struct.Memory* %loadMem_400d10, %struct.Memory** %MEMORY
  %loadMem_400d1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5767 = getelementptr inbounds %struct.GPR, %struct.GPR* %5766, i32 0, i32 33
  %5768 = getelementptr inbounds %struct.Reg, %struct.Reg* %5767, i32 0, i32 0
  %PC.i574 = bitcast %union.anon* %5768 to i64*
  %5769 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5770 = getelementptr inbounds %struct.GPR, %struct.GPR* %5769, i32 0, i32 15
  %5771 = getelementptr inbounds %struct.Reg, %struct.Reg* %5770, i32 0, i32 0
  %RBP.i575 = bitcast %union.anon* %5771 to i64*
  %5772 = load i64, i64* %RBP.i575
  %5773 = sub i64 %5772, 4
  %5774 = load i64, i64* %PC.i574
  %5775 = add i64 %5774, 7
  store i64 %5775, i64* %PC.i574
  %5776 = inttoptr i64 %5773 to i32*
  store i32 0, i32* %5776
  store %struct.Memory* %loadMem_400d1b, %struct.Memory** %MEMORY
  br label %block_.L_400d22

block_.L_400d22:                                  ; preds = %block_.L_400d95, %block_.L_400d05
  %loadMem_400d22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5778 = getelementptr inbounds %struct.GPR, %struct.GPR* %5777, i32 0, i32 33
  %5779 = getelementptr inbounds %struct.Reg, %struct.Reg* %5778, i32 0, i32 0
  %PC.i572 = bitcast %union.anon* %5779 to i64*
  %5780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5781 = getelementptr inbounds %struct.GPR, %struct.GPR* %5780, i32 0, i32 15
  %5782 = getelementptr inbounds %struct.Reg, %struct.Reg* %5781, i32 0, i32 0
  %RBP.i573 = bitcast %union.anon* %5782 to i64*
  %5783 = load i64, i64* %RBP.i573
  %5784 = sub i64 %5783, 4
  %5785 = load i64, i64* %PC.i572
  %5786 = add i64 %5785, 4
  store i64 %5786, i64* %PC.i572
  %5787 = inttoptr i64 %5784 to i32*
  %5788 = load i32, i32* %5787
  %5789 = sub i32 %5788, 2
  %5790 = icmp ult i32 %5788, 2
  %5791 = zext i1 %5790 to i8
  %5792 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5791, i8* %5792, align 1
  %5793 = and i32 %5789, 255
  %5794 = call i32 @llvm.ctpop.i32(i32 %5793)
  %5795 = trunc i32 %5794 to i8
  %5796 = and i8 %5795, 1
  %5797 = xor i8 %5796, 1
  %5798 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5797, i8* %5798, align 1
  %5799 = xor i32 %5788, 2
  %5800 = xor i32 %5799, %5789
  %5801 = lshr i32 %5800, 4
  %5802 = trunc i32 %5801 to i8
  %5803 = and i8 %5802, 1
  %5804 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5803, i8* %5804, align 1
  %5805 = icmp eq i32 %5789, 0
  %5806 = zext i1 %5805 to i8
  %5807 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5806, i8* %5807, align 1
  %5808 = lshr i32 %5789, 31
  %5809 = trunc i32 %5808 to i8
  %5810 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5809, i8* %5810, align 1
  %5811 = lshr i32 %5788, 31
  %5812 = xor i32 %5808, %5811
  %5813 = add i32 %5812, %5811
  %5814 = icmp eq i32 %5813, 2
  %5815 = zext i1 %5814 to i8
  %5816 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5815, i8* %5816, align 1
  store %struct.Memory* %loadMem_400d22, %struct.Memory** %MEMORY
  %loadMem_400d26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5818 = getelementptr inbounds %struct.GPR, %struct.GPR* %5817, i32 0, i32 33
  %5819 = getelementptr inbounds %struct.Reg, %struct.Reg* %5818, i32 0, i32 0
  %PC.i571 = bitcast %union.anon* %5819 to i64*
  %5820 = load i64, i64* %PC.i571
  %5821 = add i64 %5820, 125
  %5822 = load i64, i64* %PC.i571
  %5823 = add i64 %5822, 6
  %5824 = load i64, i64* %PC.i571
  %5825 = add i64 %5824, 6
  store i64 %5825, i64* %PC.i571
  %5826 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5827 = load i8, i8* %5826, align 1
  %5828 = icmp eq i8 %5827, 0
  %5829 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5830 = load i8, i8* %5829, align 1
  %5831 = icmp ne i8 %5830, 0
  %5832 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5833 = load i8, i8* %5832, align 1
  %5834 = icmp ne i8 %5833, 0
  %5835 = xor i1 %5831, %5834
  %5836 = xor i1 %5835, true
  %5837 = and i1 %5828, %5836
  %5838 = zext i1 %5837 to i8
  store i8 %5838, i8* %BRANCH_TAKEN, align 1
  %5839 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5840 = select i1 %5837, i64 %5821, i64 %5823
  store i64 %5840, i64* %5839, align 8
  store %struct.Memory* %loadMem_400d26, %struct.Memory** %MEMORY
  %loadBr_400d26 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400d26 = icmp eq i8 %loadBr_400d26, 1
  br i1 %cmpBr_400d26, label %block_.L_400da3, label %block_400d2c

block_400d2c:                                     ; preds = %block_.L_400d22
  %loadMem_400d2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5841 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5842 = getelementptr inbounds %struct.GPR, %struct.GPR* %5841, i32 0, i32 33
  %5843 = getelementptr inbounds %struct.Reg, %struct.Reg* %5842, i32 0, i32 0
  %PC.i569 = bitcast %union.anon* %5843 to i64*
  %5844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5845 = getelementptr inbounds %struct.GPR, %struct.GPR* %5844, i32 0, i32 15
  %5846 = getelementptr inbounds %struct.Reg, %struct.Reg* %5845, i32 0, i32 0
  %RBP.i570 = bitcast %union.anon* %5846 to i64*
  %5847 = load i64, i64* %RBP.i570
  %5848 = sub i64 %5847, 8
  %5849 = load i64, i64* %PC.i569
  %5850 = add i64 %5849, 7
  store i64 %5850, i64* %PC.i569
  %5851 = inttoptr i64 %5848 to i32*
  store i32 0, i32* %5851
  store %struct.Memory* %loadMem_400d2c, %struct.Memory** %MEMORY
  br label %block_.L_400d33

block_.L_400d33:                                  ; preds = %block_.L_400d82, %block_400d2c
  %loadMem_400d33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5853 = getelementptr inbounds %struct.GPR, %struct.GPR* %5852, i32 0, i32 33
  %5854 = getelementptr inbounds %struct.Reg, %struct.Reg* %5853, i32 0, i32 0
  %PC.i567 = bitcast %union.anon* %5854 to i64*
  %5855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5856 = getelementptr inbounds %struct.GPR, %struct.GPR* %5855, i32 0, i32 15
  %5857 = getelementptr inbounds %struct.Reg, %struct.Reg* %5856, i32 0, i32 0
  %RBP.i568 = bitcast %union.anon* %5857 to i64*
  %5858 = load i64, i64* %RBP.i568
  %5859 = sub i64 %5858, 8
  %5860 = load i64, i64* %PC.i567
  %5861 = add i64 %5860, 4
  store i64 %5861, i64* %PC.i567
  %5862 = inttoptr i64 %5859 to i32*
  %5863 = load i32, i32* %5862
  %5864 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5864, align 1
  %5865 = and i32 %5863, 255
  %5866 = call i32 @llvm.ctpop.i32(i32 %5865)
  %5867 = trunc i32 %5866 to i8
  %5868 = and i8 %5867, 1
  %5869 = xor i8 %5868, 1
  %5870 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5869, i8* %5870, align 1
  %5871 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5871, align 1
  %5872 = icmp eq i32 %5863, 0
  %5873 = zext i1 %5872 to i8
  %5874 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5873, i8* %5874, align 1
  %5875 = lshr i32 %5863, 31
  %5876 = trunc i32 %5875 to i8
  %5877 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5876, i8* %5877, align 1
  %5878 = lshr i32 %5863, 31
  %5879 = xor i32 %5875, %5878
  %5880 = add i32 %5879, %5878
  %5881 = icmp eq i32 %5880, 2
  %5882 = zext i1 %5881 to i8
  %5883 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5882, i8* %5883, align 1
  store %struct.Memory* %loadMem_400d33, %struct.Memory** %MEMORY
  %loadMem_400d37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5885 = getelementptr inbounds %struct.GPR, %struct.GPR* %5884, i32 0, i32 33
  %5886 = getelementptr inbounds %struct.Reg, %struct.Reg* %5885, i32 0, i32 0
  %PC.i566 = bitcast %union.anon* %5886 to i64*
  %5887 = load i64, i64* %PC.i566
  %5888 = add i64 %5887, 89
  %5889 = load i64, i64* %PC.i566
  %5890 = add i64 %5889, 6
  %5891 = load i64, i64* %PC.i566
  %5892 = add i64 %5891, 6
  store i64 %5892, i64* %PC.i566
  %5893 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5894 = load i8, i8* %5893, align 1
  %5895 = icmp eq i8 %5894, 0
  %5896 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5897 = load i8, i8* %5896, align 1
  %5898 = icmp ne i8 %5897, 0
  %5899 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5900 = load i8, i8* %5899, align 1
  %5901 = icmp ne i8 %5900, 0
  %5902 = xor i1 %5898, %5901
  %5903 = xor i1 %5902, true
  %5904 = and i1 %5895, %5903
  %5905 = zext i1 %5904 to i8
  store i8 %5905, i8* %BRANCH_TAKEN, align 1
  %5906 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5907 = select i1 %5904, i64 %5888, i64 %5890
  store i64 %5907, i64* %5906, align 8
  store %struct.Memory* %loadMem_400d37, %struct.Memory** %MEMORY
  %loadBr_400d37 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400d37 = icmp eq i8 %loadBr_400d37, 1
  br i1 %cmpBr_400d37, label %block_.L_400d90, label %block_400d3d

block_400d3d:                                     ; preds = %block_.L_400d33
  %loadMem_400d3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5909 = getelementptr inbounds %struct.GPR, %struct.GPR* %5908, i32 0, i32 33
  %5910 = getelementptr inbounds %struct.Reg, %struct.Reg* %5909, i32 0, i32 0
  %PC.i564 = bitcast %union.anon* %5910 to i64*
  %5911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5912 = getelementptr inbounds %struct.GPR, %struct.GPR* %5911, i32 0, i32 15
  %5913 = getelementptr inbounds %struct.Reg, %struct.Reg* %5912, i32 0, i32 0
  %RBP.i565 = bitcast %union.anon* %5913 to i64*
  %5914 = load i64, i64* %RBP.i565
  %5915 = sub i64 %5914, 12
  %5916 = load i64, i64* %PC.i564
  %5917 = add i64 %5916, 7
  store i64 %5917, i64* %PC.i564
  %5918 = inttoptr i64 %5915 to i32*
  store i32 0, i32* %5918
  store %struct.Memory* %loadMem_400d3d, %struct.Memory** %MEMORY
  br label %block_.L_400d44

block_.L_400d44:                                  ; preds = %block_400d4e, %block_400d3d
  %loadMem_400d44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5920 = getelementptr inbounds %struct.GPR, %struct.GPR* %5919, i32 0, i32 33
  %5921 = getelementptr inbounds %struct.Reg, %struct.Reg* %5920, i32 0, i32 0
  %PC.i562 = bitcast %union.anon* %5921 to i64*
  %5922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5923 = getelementptr inbounds %struct.GPR, %struct.GPR* %5922, i32 0, i32 15
  %5924 = getelementptr inbounds %struct.Reg, %struct.Reg* %5923, i32 0, i32 0
  %RBP.i563 = bitcast %union.anon* %5924 to i64*
  %5925 = load i64, i64* %RBP.i563
  %5926 = sub i64 %5925, 12
  %5927 = load i64, i64* %PC.i562
  %5928 = add i64 %5927, 4
  store i64 %5928, i64* %PC.i562
  %5929 = inttoptr i64 %5926 to i32*
  %5930 = load i32, i32* %5929
  %5931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5931, align 1
  %5932 = and i32 %5930, 255
  %5933 = call i32 @llvm.ctpop.i32(i32 %5932)
  %5934 = trunc i32 %5933 to i8
  %5935 = and i8 %5934, 1
  %5936 = xor i8 %5935, 1
  %5937 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5936, i8* %5937, align 1
  %5938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5938, align 1
  %5939 = icmp eq i32 %5930, 0
  %5940 = zext i1 %5939 to i8
  %5941 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5940, i8* %5941, align 1
  %5942 = lshr i32 %5930, 31
  %5943 = trunc i32 %5942 to i8
  %5944 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5943, i8* %5944, align 1
  %5945 = lshr i32 %5930, 31
  %5946 = xor i32 %5942, %5945
  %5947 = add i32 %5946, %5945
  %5948 = icmp eq i32 %5947, 2
  %5949 = zext i1 %5948 to i8
  %5950 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5949, i8* %5950, align 1
  store %struct.Memory* %loadMem_400d44, %struct.Memory** %MEMORY
  %loadMem_400d48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5952 = getelementptr inbounds %struct.GPR, %struct.GPR* %5951, i32 0, i32 33
  %5953 = getelementptr inbounds %struct.Reg, %struct.Reg* %5952, i32 0, i32 0
  %PC.i561 = bitcast %union.anon* %5953 to i64*
  %5954 = load i64, i64* %PC.i561
  %5955 = add i64 %5954, 53
  %5956 = load i64, i64* %PC.i561
  %5957 = add i64 %5956, 6
  %5958 = load i64, i64* %PC.i561
  %5959 = add i64 %5958, 6
  store i64 %5959, i64* %PC.i561
  %5960 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5961 = load i8, i8* %5960, align 1
  %5962 = icmp eq i8 %5961, 0
  %5963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5964 = load i8, i8* %5963, align 1
  %5965 = icmp ne i8 %5964, 0
  %5966 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5967 = load i8, i8* %5966, align 1
  %5968 = icmp ne i8 %5967, 0
  %5969 = xor i1 %5965, %5968
  %5970 = xor i1 %5969, true
  %5971 = and i1 %5962, %5970
  %5972 = zext i1 %5971 to i8
  store i8 %5972, i8* %BRANCH_TAKEN, align 1
  %5973 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5974 = select i1 %5971, i64 %5955, i64 %5957
  store i64 %5974, i64* %5973, align 8
  store %struct.Memory* %loadMem_400d48, %struct.Memory** %MEMORY
  %loadBr_400d48 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400d48 = icmp eq i8 %loadBr_400d48, 1
  br i1 %cmpBr_400d48, label %block_.L_400d7d, label %block_400d4e

block_400d4e:                                     ; preds = %block_.L_400d44
  %loadMem_400d4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5976 = getelementptr inbounds %struct.GPR, %struct.GPR* %5975, i32 0, i32 33
  %5977 = getelementptr inbounds %struct.Reg, %struct.Reg* %5976, i32 0, i32 0
  %PC.i558 = bitcast %union.anon* %5977 to i64*
  %5978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5979 = getelementptr inbounds %struct.GPR, %struct.GPR* %5978, i32 0, i32 1
  %5980 = getelementptr inbounds %struct.Reg, %struct.Reg* %5979, i32 0, i32 0
  %RAX.i559 = bitcast %union.anon* %5980 to i64*
  %5981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5982 = getelementptr inbounds %struct.GPR, %struct.GPR* %5981, i32 0, i32 15
  %5983 = getelementptr inbounds %struct.Reg, %struct.Reg* %5982, i32 0, i32 0
  %RBP.i560 = bitcast %union.anon* %5983 to i64*
  %5984 = load i64, i64* %RBP.i560
  %5985 = sub i64 %5984, 4
  %5986 = load i64, i64* %PC.i558
  %5987 = add i64 %5986, 3
  store i64 %5987, i64* %PC.i558
  %5988 = inttoptr i64 %5985 to i32*
  %5989 = load i32, i32* %5988
  %5990 = zext i32 %5989 to i64
  store i64 %5990, i64* %RAX.i559, align 8
  store %struct.Memory* %loadMem_400d4e, %struct.Memory** %MEMORY
  %loadMem_400d51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5992 = getelementptr inbounds %struct.GPR, %struct.GPR* %5991, i32 0, i32 33
  %5993 = getelementptr inbounds %struct.Reg, %struct.Reg* %5992, i32 0, i32 0
  %PC.i555 = bitcast %union.anon* %5993 to i64*
  %5994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5995 = getelementptr inbounds %struct.GPR, %struct.GPR* %5994, i32 0, i32 5
  %5996 = getelementptr inbounds %struct.Reg, %struct.Reg* %5995, i32 0, i32 0
  %RCX.i556 = bitcast %union.anon* %5996 to i64*
  %5997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5998 = getelementptr inbounds %struct.GPR, %struct.GPR* %5997, i32 0, i32 15
  %5999 = getelementptr inbounds %struct.Reg, %struct.Reg* %5998, i32 0, i32 0
  %RBP.i557 = bitcast %union.anon* %5999 to i64*
  %6000 = load i64, i64* %RBP.i557
  %6001 = sub i64 %6000, 8
  %6002 = load i64, i64* %PC.i555
  %6003 = add i64 %6002, 3
  store i64 %6003, i64* %PC.i555
  %6004 = inttoptr i64 %6001 to i32*
  %6005 = load i32, i32* %6004
  %6006 = zext i32 %6005 to i64
  store i64 %6006, i64* %RCX.i556, align 8
  store %struct.Memory* %loadMem_400d51, %struct.Memory** %MEMORY
  %loadMem_400d54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6008 = getelementptr inbounds %struct.GPR, %struct.GPR* %6007, i32 0, i32 33
  %6009 = getelementptr inbounds %struct.Reg, %struct.Reg* %6008, i32 0, i32 0
  %PC.i552 = bitcast %union.anon* %6009 to i64*
  %6010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6011 = getelementptr inbounds %struct.GPR, %struct.GPR* %6010, i32 0, i32 7
  %6012 = getelementptr inbounds %struct.Reg, %struct.Reg* %6011, i32 0, i32 0
  %RDX.i553 = bitcast %union.anon* %6012 to i64*
  %6013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6014 = getelementptr inbounds %struct.GPR, %struct.GPR* %6013, i32 0, i32 15
  %6015 = getelementptr inbounds %struct.Reg, %struct.Reg* %6014, i32 0, i32 0
  %RBP.i554 = bitcast %union.anon* %6015 to i64*
  %6016 = load i64, i64* %RBP.i554
  %6017 = sub i64 %6016, 12
  %6018 = load i64, i64* %PC.i552
  %6019 = add i64 %6018, 3
  store i64 %6019, i64* %PC.i552
  %6020 = inttoptr i64 %6017 to i32*
  %6021 = load i32, i32* %6020
  %6022 = zext i32 %6021 to i64
  store i64 %6022, i64* %RDX.i553, align 8
  store %struct.Memory* %loadMem_400d54, %struct.Memory** %MEMORY
  %loadMem_400d57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6024 = getelementptr inbounds %struct.GPR, %struct.GPR* %6023, i32 0, i32 33
  %6025 = getelementptr inbounds %struct.Reg, %struct.Reg* %6024, i32 0, i32 0
  %PC.i550 = bitcast %union.anon* %6025 to i64*
  %6026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6027 = getelementptr inbounds %struct.GPR, %struct.GPR* %6026, i32 0, i32 7
  %6028 = getelementptr inbounds %struct.Reg, %struct.Reg* %6027, i32 0, i32 0
  %RDX.i551 = bitcast %union.anon* %6028 to i64*
  %6029 = load i64, i64* %RDX.i551
  %6030 = load i64, i64* %PC.i550
  %6031 = add i64 %6030, 3
  store i64 %6031, i64* %PC.i550
  %6032 = and i64 %6029, 4294967295
  %6033 = shl i64 %6032, 2
  %6034 = trunc i64 %6033 to i32
  %6035 = icmp slt i32 %6034, 0
  %6036 = shl i32 %6034, 1
  %6037 = zext i32 %6036 to i64
  store i64 %6037, i64* %RDX.i551, align 8
  %6038 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %6039 = zext i1 %6035 to i8
  store i8 %6039, i8* %6038, align 1
  %6040 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6041 = and i32 %6036, 254
  %6042 = call i32 @llvm.ctpop.i32(i32 %6041)
  %6043 = trunc i32 %6042 to i8
  %6044 = and i8 %6043, 1
  %6045 = xor i8 %6044, 1
  store i8 %6045, i8* %6040, align 1
  %6046 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6046, align 1
  %6047 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6048 = icmp eq i32 %6036, 0
  %6049 = zext i1 %6048 to i8
  store i8 %6049, i8* %6047, align 1
  %6050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6051 = lshr i32 %6036, 31
  %6052 = trunc i32 %6051 to i8
  store i8 %6052, i8* %6050, align 1
  %6053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6053, align 1
  store %struct.Memory* %loadMem_400d57, %struct.Memory** %MEMORY
  %loadMem_400d5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6055 = getelementptr inbounds %struct.GPR, %struct.GPR* %6054, i32 0, i32 33
  %6056 = getelementptr inbounds %struct.Reg, %struct.Reg* %6055, i32 0, i32 0
  %PC.i547 = bitcast %union.anon* %6056 to i64*
  %6057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6058 = getelementptr inbounds %struct.GPR, %struct.GPR* %6057, i32 0, i32 7
  %6059 = getelementptr inbounds %struct.Reg, %struct.Reg* %6058, i32 0, i32 0
  %EDX.i548 = bitcast %union.anon* %6059 to i32*
  %6060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6061 = getelementptr inbounds %struct.GPR, %struct.GPR* %6060, i32 0, i32 5
  %6062 = getelementptr inbounds %struct.Reg, %struct.Reg* %6061, i32 0, i32 0
  %RCX.i549 = bitcast %union.anon* %6062 to i64*
  %6063 = load i64, i64* %RCX.i549
  %6064 = load i32, i32* %EDX.i548
  %6065 = zext i32 %6064 to i64
  %6066 = load i64, i64* %PC.i547
  %6067 = add i64 %6066, 2
  store i64 %6067, i64* %PC.i547
  %6068 = trunc i64 %6063 to i32
  %6069 = add i32 %6064, %6068
  %6070 = zext i32 %6069 to i64
  store i64 %6070, i64* %RCX.i549, align 8
  %6071 = icmp ult i32 %6069, %6068
  %6072 = icmp ult i32 %6069, %6064
  %6073 = or i1 %6071, %6072
  %6074 = zext i1 %6073 to i8
  %6075 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6074, i8* %6075, align 1
  %6076 = and i32 %6069, 255
  %6077 = call i32 @llvm.ctpop.i32(i32 %6076)
  %6078 = trunc i32 %6077 to i8
  %6079 = and i8 %6078, 1
  %6080 = xor i8 %6079, 1
  %6081 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6080, i8* %6081, align 1
  %6082 = xor i64 %6065, %6063
  %6083 = trunc i64 %6082 to i32
  %6084 = xor i32 %6083, %6069
  %6085 = lshr i32 %6084, 4
  %6086 = trunc i32 %6085 to i8
  %6087 = and i8 %6086, 1
  %6088 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6087, i8* %6088, align 1
  %6089 = icmp eq i32 %6069, 0
  %6090 = zext i1 %6089 to i8
  %6091 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6090, i8* %6091, align 1
  %6092 = lshr i32 %6069, 31
  %6093 = trunc i32 %6092 to i8
  %6094 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6093, i8* %6094, align 1
  %6095 = lshr i32 %6068, 31
  %6096 = lshr i32 %6064, 31
  %6097 = xor i32 %6092, %6095
  %6098 = xor i32 %6092, %6096
  %6099 = add i32 %6097, %6098
  %6100 = icmp eq i32 %6099, 2
  %6101 = zext i1 %6100 to i8
  %6102 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6101, i8* %6102, align 1
  store %struct.Memory* %loadMem_400d5a, %struct.Memory** %MEMORY
  %loadMem_400d5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6104 = getelementptr inbounds %struct.GPR, %struct.GPR* %6103, i32 0, i32 33
  %6105 = getelementptr inbounds %struct.Reg, %struct.Reg* %6104, i32 0, i32 0
  %PC.i545 = bitcast %union.anon* %6105 to i64*
  %6106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6107 = getelementptr inbounds %struct.GPR, %struct.GPR* %6106, i32 0, i32 5
  %6108 = getelementptr inbounds %struct.Reg, %struct.Reg* %6107, i32 0, i32 0
  %RCX.i546 = bitcast %union.anon* %6108 to i64*
  %6109 = load i64, i64* %RCX.i546
  %6110 = load i64, i64* %PC.i545
  %6111 = add i64 %6110, 3
  store i64 %6111, i64* %PC.i545
  %6112 = and i64 %6109, 4294967295
  %6113 = shl i64 %6112, 2
  %6114 = trunc i64 %6113 to i32
  %6115 = icmp slt i32 %6114, 0
  %6116 = shl i32 %6114, 1
  %6117 = zext i32 %6116 to i64
  store i64 %6117, i64* %RCX.i546, align 8
  %6118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %6119 = zext i1 %6115 to i8
  store i8 %6119, i8* %6118, align 1
  %6120 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6121 = and i32 %6116, 254
  %6122 = call i32 @llvm.ctpop.i32(i32 %6121)
  %6123 = trunc i32 %6122 to i8
  %6124 = and i8 %6123, 1
  %6125 = xor i8 %6124, 1
  store i8 %6125, i8* %6120, align 1
  %6126 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6126, align 1
  %6127 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6128 = icmp eq i32 %6116, 0
  %6129 = zext i1 %6128 to i8
  store i8 %6129, i8* %6127, align 1
  %6130 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6131 = lshr i32 %6116, 31
  %6132 = trunc i32 %6131 to i8
  store i8 %6132, i8* %6130, align 1
  %6133 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6133, align 1
  store %struct.Memory* %loadMem_400d5c, %struct.Memory** %MEMORY
  %loadMem_400d5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %6134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6135 = getelementptr inbounds %struct.GPR, %struct.GPR* %6134, i32 0, i32 33
  %6136 = getelementptr inbounds %struct.Reg, %struct.Reg* %6135, i32 0, i32 0
  %PC.i542 = bitcast %union.anon* %6136 to i64*
  %6137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6138 = getelementptr inbounds %struct.GPR, %struct.GPR* %6137, i32 0, i32 5
  %6139 = getelementptr inbounds %struct.Reg, %struct.Reg* %6138, i32 0, i32 0
  %ECX.i543 = bitcast %union.anon* %6139 to i32*
  %6140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6141 = getelementptr inbounds %struct.GPR, %struct.GPR* %6140, i32 0, i32 1
  %6142 = getelementptr inbounds %struct.Reg, %struct.Reg* %6141, i32 0, i32 0
  %RAX.i544 = bitcast %union.anon* %6142 to i64*
  %6143 = load i64, i64* %RAX.i544
  %6144 = load i32, i32* %ECX.i543
  %6145 = zext i32 %6144 to i64
  %6146 = load i64, i64* %PC.i542
  %6147 = add i64 %6146, 2
  store i64 %6147, i64* %PC.i542
  %6148 = trunc i64 %6143 to i32
  %6149 = add i32 %6144, %6148
  %6150 = zext i32 %6149 to i64
  store i64 %6150, i64* %RAX.i544, align 8
  %6151 = icmp ult i32 %6149, %6148
  %6152 = icmp ult i32 %6149, %6144
  %6153 = or i1 %6151, %6152
  %6154 = zext i1 %6153 to i8
  %6155 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6154, i8* %6155, align 1
  %6156 = and i32 %6149, 255
  %6157 = call i32 @llvm.ctpop.i32(i32 %6156)
  %6158 = trunc i32 %6157 to i8
  %6159 = and i8 %6158, 1
  %6160 = xor i8 %6159, 1
  %6161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6160, i8* %6161, align 1
  %6162 = xor i64 %6145, %6143
  %6163 = trunc i64 %6162 to i32
  %6164 = xor i32 %6163, %6149
  %6165 = lshr i32 %6164, 4
  %6166 = trunc i32 %6165 to i8
  %6167 = and i8 %6166, 1
  %6168 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6167, i8* %6168, align 1
  %6169 = icmp eq i32 %6149, 0
  %6170 = zext i1 %6169 to i8
  %6171 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6170, i8* %6171, align 1
  %6172 = lshr i32 %6149, 31
  %6173 = trunc i32 %6172 to i8
  %6174 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6173, i8* %6174, align 1
  %6175 = lshr i32 %6148, 31
  %6176 = lshr i32 %6144, 31
  %6177 = xor i32 %6172, %6175
  %6178 = xor i32 %6172, %6176
  %6179 = add i32 %6177, %6178
  %6180 = icmp eq i32 %6179, 2
  %6181 = zext i1 %6180 to i8
  %6182 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6181, i8* %6182, align 1
  store %struct.Memory* %loadMem_400d5f, %struct.Memory** %MEMORY
  %loadMem_400d61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6184 = getelementptr inbounds %struct.GPR, %struct.GPR* %6183, i32 0, i32 33
  %6185 = getelementptr inbounds %struct.Reg, %struct.Reg* %6184, i32 0, i32 0
  %PC.i539 = bitcast %union.anon* %6185 to i64*
  %6186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6187 = getelementptr inbounds %struct.GPR, %struct.GPR* %6186, i32 0, i32 1
  %6188 = getelementptr inbounds %struct.Reg, %struct.Reg* %6187, i32 0, i32 0
  %EAX.i540 = bitcast %union.anon* %6188 to i32*
  %6189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6190 = getelementptr inbounds %struct.GPR, %struct.GPR* %6189, i32 0, i32 9
  %6191 = getelementptr inbounds %struct.Reg, %struct.Reg* %6190, i32 0, i32 0
  %RSI.i541 = bitcast %union.anon* %6191 to i64*
  %6192 = load i32, i32* %EAX.i540
  %6193 = zext i32 %6192 to i64
  %6194 = load i64, i64* %PC.i539
  %6195 = add i64 %6194, 3
  store i64 %6195, i64* %PC.i539
  %6196 = shl i64 %6193, 32
  %6197 = ashr exact i64 %6196, 32
  store i64 %6197, i64* %RSI.i541, align 8
  store %struct.Memory* %loadMem_400d61, %struct.Memory** %MEMORY
  %loadMem_400d64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6199 = getelementptr inbounds %struct.GPR, %struct.GPR* %6198, i32 0, i32 33
  %6200 = getelementptr inbounds %struct.Reg, %struct.Reg* %6199, i32 0, i32 0
  %PC.i537 = bitcast %union.anon* %6200 to i64*
  %6201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6202 = getelementptr inbounds %struct.GPR, %struct.GPR* %6201, i32 0, i32 9
  %6203 = getelementptr inbounds %struct.Reg, %struct.Reg* %6202, i32 0, i32 0
  %RSI.i538 = bitcast %union.anon* %6203 to i64*
  %6204 = load i64, i64* %RSI.i538
  %6205 = mul i64 %6204, 4
  %6206 = add i64 %6205, ptrtoint (%G_0x606aa0___rsi_4__type* @G_0x606aa0___rsi_4_ to i64)
  %6207 = load i64, i64* %PC.i537
  %6208 = add i64 %6207, 11
  store i64 %6208, i64* %PC.i537
  %6209 = inttoptr i64 %6206 to i32*
  store i32 1, i32* %6209
  store %struct.Memory* %loadMem_400d64, %struct.Memory** %MEMORY
  %loadMem_400d6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %6210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6211 = getelementptr inbounds %struct.GPR, %struct.GPR* %6210, i32 0, i32 33
  %6212 = getelementptr inbounds %struct.Reg, %struct.Reg* %6211, i32 0, i32 0
  %PC.i534 = bitcast %union.anon* %6212 to i64*
  %6213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6214 = getelementptr inbounds %struct.GPR, %struct.GPR* %6213, i32 0, i32 1
  %6215 = getelementptr inbounds %struct.Reg, %struct.Reg* %6214, i32 0, i32 0
  %RAX.i535 = bitcast %union.anon* %6215 to i64*
  %6216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6217 = getelementptr inbounds %struct.GPR, %struct.GPR* %6216, i32 0, i32 15
  %6218 = getelementptr inbounds %struct.Reg, %struct.Reg* %6217, i32 0, i32 0
  %RBP.i536 = bitcast %union.anon* %6218 to i64*
  %6219 = load i64, i64* %RBP.i536
  %6220 = sub i64 %6219, 12
  %6221 = load i64, i64* %PC.i534
  %6222 = add i64 %6221, 3
  store i64 %6222, i64* %PC.i534
  %6223 = inttoptr i64 %6220 to i32*
  %6224 = load i32, i32* %6223
  %6225 = zext i32 %6224 to i64
  store i64 %6225, i64* %RAX.i535, align 8
  store %struct.Memory* %loadMem_400d6f, %struct.Memory** %MEMORY
  %loadMem_400d72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6227 = getelementptr inbounds %struct.GPR, %struct.GPR* %6226, i32 0, i32 33
  %6228 = getelementptr inbounds %struct.Reg, %struct.Reg* %6227, i32 0, i32 0
  %PC.i532 = bitcast %union.anon* %6228 to i64*
  %6229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6230 = getelementptr inbounds %struct.GPR, %struct.GPR* %6229, i32 0, i32 1
  %6231 = getelementptr inbounds %struct.Reg, %struct.Reg* %6230, i32 0, i32 0
  %RAX.i533 = bitcast %union.anon* %6231 to i64*
  %6232 = load i64, i64* %RAX.i533
  %6233 = load i64, i64* %PC.i532
  %6234 = add i64 %6233, 3
  store i64 %6234, i64* %PC.i532
  %6235 = trunc i64 %6232 to i32
  %6236 = add i32 1, %6235
  %6237 = zext i32 %6236 to i64
  store i64 %6237, i64* %RAX.i533, align 8
  %6238 = icmp ult i32 %6236, %6235
  %6239 = icmp ult i32 %6236, 1
  %6240 = or i1 %6238, %6239
  %6241 = zext i1 %6240 to i8
  %6242 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6241, i8* %6242, align 1
  %6243 = and i32 %6236, 255
  %6244 = call i32 @llvm.ctpop.i32(i32 %6243)
  %6245 = trunc i32 %6244 to i8
  %6246 = and i8 %6245, 1
  %6247 = xor i8 %6246, 1
  %6248 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6247, i8* %6248, align 1
  %6249 = xor i64 1, %6232
  %6250 = trunc i64 %6249 to i32
  %6251 = xor i32 %6250, %6236
  %6252 = lshr i32 %6251, 4
  %6253 = trunc i32 %6252 to i8
  %6254 = and i8 %6253, 1
  %6255 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6254, i8* %6255, align 1
  %6256 = icmp eq i32 %6236, 0
  %6257 = zext i1 %6256 to i8
  %6258 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6257, i8* %6258, align 1
  %6259 = lshr i32 %6236, 31
  %6260 = trunc i32 %6259 to i8
  %6261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6260, i8* %6261, align 1
  %6262 = lshr i32 %6235, 31
  %6263 = xor i32 %6259, %6262
  %6264 = add i32 %6263, %6259
  %6265 = icmp eq i32 %6264, 2
  %6266 = zext i1 %6265 to i8
  %6267 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6266, i8* %6267, align 1
  store %struct.Memory* %loadMem_400d72, %struct.Memory** %MEMORY
  %loadMem_400d75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6269 = getelementptr inbounds %struct.GPR, %struct.GPR* %6268, i32 0, i32 33
  %6270 = getelementptr inbounds %struct.Reg, %struct.Reg* %6269, i32 0, i32 0
  %PC.i529 = bitcast %union.anon* %6270 to i64*
  %6271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6272 = getelementptr inbounds %struct.GPR, %struct.GPR* %6271, i32 0, i32 1
  %6273 = getelementptr inbounds %struct.Reg, %struct.Reg* %6272, i32 0, i32 0
  %EAX.i530 = bitcast %union.anon* %6273 to i32*
  %6274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6275 = getelementptr inbounds %struct.GPR, %struct.GPR* %6274, i32 0, i32 15
  %6276 = getelementptr inbounds %struct.Reg, %struct.Reg* %6275, i32 0, i32 0
  %RBP.i531 = bitcast %union.anon* %6276 to i64*
  %6277 = load i64, i64* %RBP.i531
  %6278 = sub i64 %6277, 12
  %6279 = load i32, i32* %EAX.i530
  %6280 = zext i32 %6279 to i64
  %6281 = load i64, i64* %PC.i529
  %6282 = add i64 %6281, 3
  store i64 %6282, i64* %PC.i529
  %6283 = inttoptr i64 %6278 to i32*
  store i32 %6279, i32* %6283
  store %struct.Memory* %loadMem_400d75, %struct.Memory** %MEMORY
  %loadMem_400d78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6285 = getelementptr inbounds %struct.GPR, %struct.GPR* %6284, i32 0, i32 33
  %6286 = getelementptr inbounds %struct.Reg, %struct.Reg* %6285, i32 0, i32 0
  %PC.i528 = bitcast %union.anon* %6286 to i64*
  %6287 = load i64, i64* %PC.i528
  %6288 = add i64 %6287, -52
  %6289 = load i64, i64* %PC.i528
  %6290 = add i64 %6289, 5
  store i64 %6290, i64* %PC.i528
  %6291 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6288, i64* %6291, align 8
  store %struct.Memory* %loadMem_400d78, %struct.Memory** %MEMORY
  br label %block_.L_400d44

block_.L_400d7d:                                  ; preds = %block_.L_400d44
  %loadMem_400d7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6293 = getelementptr inbounds %struct.GPR, %struct.GPR* %6292, i32 0, i32 33
  %6294 = getelementptr inbounds %struct.Reg, %struct.Reg* %6293, i32 0, i32 0
  %PC.i527 = bitcast %union.anon* %6294 to i64*
  %6295 = load i64, i64* %PC.i527
  %6296 = add i64 %6295, 5
  %6297 = load i64, i64* %PC.i527
  %6298 = add i64 %6297, 5
  store i64 %6298, i64* %PC.i527
  %6299 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6296, i64* %6299, align 8
  store %struct.Memory* %loadMem_400d7d, %struct.Memory** %MEMORY
  br label %block_.L_400d82

block_.L_400d82:                                  ; preds = %block_.L_400d7d
  %loadMem_400d82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6301 = getelementptr inbounds %struct.GPR, %struct.GPR* %6300, i32 0, i32 33
  %6302 = getelementptr inbounds %struct.Reg, %struct.Reg* %6301, i32 0, i32 0
  %PC.i524 = bitcast %union.anon* %6302 to i64*
  %6303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6304 = getelementptr inbounds %struct.GPR, %struct.GPR* %6303, i32 0, i32 1
  %6305 = getelementptr inbounds %struct.Reg, %struct.Reg* %6304, i32 0, i32 0
  %RAX.i525 = bitcast %union.anon* %6305 to i64*
  %6306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6307 = getelementptr inbounds %struct.GPR, %struct.GPR* %6306, i32 0, i32 15
  %6308 = getelementptr inbounds %struct.Reg, %struct.Reg* %6307, i32 0, i32 0
  %RBP.i526 = bitcast %union.anon* %6308 to i64*
  %6309 = load i64, i64* %RBP.i526
  %6310 = sub i64 %6309, 8
  %6311 = load i64, i64* %PC.i524
  %6312 = add i64 %6311, 3
  store i64 %6312, i64* %PC.i524
  %6313 = inttoptr i64 %6310 to i32*
  %6314 = load i32, i32* %6313
  %6315 = zext i32 %6314 to i64
  store i64 %6315, i64* %RAX.i525, align 8
  store %struct.Memory* %loadMem_400d82, %struct.Memory** %MEMORY
  %loadMem_400d85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6317 = getelementptr inbounds %struct.GPR, %struct.GPR* %6316, i32 0, i32 33
  %6318 = getelementptr inbounds %struct.Reg, %struct.Reg* %6317, i32 0, i32 0
  %PC.i522 = bitcast %union.anon* %6318 to i64*
  %6319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6320 = getelementptr inbounds %struct.GPR, %struct.GPR* %6319, i32 0, i32 1
  %6321 = getelementptr inbounds %struct.Reg, %struct.Reg* %6320, i32 0, i32 0
  %RAX.i523 = bitcast %union.anon* %6321 to i64*
  %6322 = load i64, i64* %RAX.i523
  %6323 = load i64, i64* %PC.i522
  %6324 = add i64 %6323, 3
  store i64 %6324, i64* %PC.i522
  %6325 = trunc i64 %6322 to i32
  %6326 = add i32 1, %6325
  %6327 = zext i32 %6326 to i64
  store i64 %6327, i64* %RAX.i523, align 8
  %6328 = icmp ult i32 %6326, %6325
  %6329 = icmp ult i32 %6326, 1
  %6330 = or i1 %6328, %6329
  %6331 = zext i1 %6330 to i8
  %6332 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6331, i8* %6332, align 1
  %6333 = and i32 %6326, 255
  %6334 = call i32 @llvm.ctpop.i32(i32 %6333)
  %6335 = trunc i32 %6334 to i8
  %6336 = and i8 %6335, 1
  %6337 = xor i8 %6336, 1
  %6338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6337, i8* %6338, align 1
  %6339 = xor i64 1, %6322
  %6340 = trunc i64 %6339 to i32
  %6341 = xor i32 %6340, %6326
  %6342 = lshr i32 %6341, 4
  %6343 = trunc i32 %6342 to i8
  %6344 = and i8 %6343, 1
  %6345 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6344, i8* %6345, align 1
  %6346 = icmp eq i32 %6326, 0
  %6347 = zext i1 %6346 to i8
  %6348 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6347, i8* %6348, align 1
  %6349 = lshr i32 %6326, 31
  %6350 = trunc i32 %6349 to i8
  %6351 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6350, i8* %6351, align 1
  %6352 = lshr i32 %6325, 31
  %6353 = xor i32 %6349, %6352
  %6354 = add i32 %6353, %6349
  %6355 = icmp eq i32 %6354, 2
  %6356 = zext i1 %6355 to i8
  %6357 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6356, i8* %6357, align 1
  store %struct.Memory* %loadMem_400d85, %struct.Memory** %MEMORY
  %loadMem_400d88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6359 = getelementptr inbounds %struct.GPR, %struct.GPR* %6358, i32 0, i32 33
  %6360 = getelementptr inbounds %struct.Reg, %struct.Reg* %6359, i32 0, i32 0
  %PC.i519 = bitcast %union.anon* %6360 to i64*
  %6361 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6362 = getelementptr inbounds %struct.GPR, %struct.GPR* %6361, i32 0, i32 1
  %6363 = getelementptr inbounds %struct.Reg, %struct.Reg* %6362, i32 0, i32 0
  %EAX.i520 = bitcast %union.anon* %6363 to i32*
  %6364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6365 = getelementptr inbounds %struct.GPR, %struct.GPR* %6364, i32 0, i32 15
  %6366 = getelementptr inbounds %struct.Reg, %struct.Reg* %6365, i32 0, i32 0
  %RBP.i521 = bitcast %union.anon* %6366 to i64*
  %6367 = load i64, i64* %RBP.i521
  %6368 = sub i64 %6367, 8
  %6369 = load i32, i32* %EAX.i520
  %6370 = zext i32 %6369 to i64
  %6371 = load i64, i64* %PC.i519
  %6372 = add i64 %6371, 3
  store i64 %6372, i64* %PC.i519
  %6373 = inttoptr i64 %6368 to i32*
  store i32 %6369, i32* %6373
  store %struct.Memory* %loadMem_400d88, %struct.Memory** %MEMORY
  %loadMem_400d8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6375 = getelementptr inbounds %struct.GPR, %struct.GPR* %6374, i32 0, i32 33
  %6376 = getelementptr inbounds %struct.Reg, %struct.Reg* %6375, i32 0, i32 0
  %PC.i518 = bitcast %union.anon* %6376 to i64*
  %6377 = load i64, i64* %PC.i518
  %6378 = add i64 %6377, -88
  %6379 = load i64, i64* %PC.i518
  %6380 = add i64 %6379, 5
  store i64 %6380, i64* %PC.i518
  %6381 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6378, i64* %6381, align 8
  store %struct.Memory* %loadMem_400d8b, %struct.Memory** %MEMORY
  br label %block_.L_400d33

block_.L_400d90:                                  ; preds = %block_.L_400d33
  %loadMem_400d90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6383 = getelementptr inbounds %struct.GPR, %struct.GPR* %6382, i32 0, i32 33
  %6384 = getelementptr inbounds %struct.Reg, %struct.Reg* %6383, i32 0, i32 0
  %PC.i517 = bitcast %union.anon* %6384 to i64*
  %6385 = load i64, i64* %PC.i517
  %6386 = add i64 %6385, 5
  %6387 = load i64, i64* %PC.i517
  %6388 = add i64 %6387, 5
  store i64 %6388, i64* %PC.i517
  %6389 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6386, i64* %6389, align 8
  store %struct.Memory* %loadMem_400d90, %struct.Memory** %MEMORY
  br label %block_.L_400d95

block_.L_400d95:                                  ; preds = %block_.L_400d90
  %loadMem_400d95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6391 = getelementptr inbounds %struct.GPR, %struct.GPR* %6390, i32 0, i32 33
  %6392 = getelementptr inbounds %struct.Reg, %struct.Reg* %6391, i32 0, i32 0
  %PC.i514 = bitcast %union.anon* %6392 to i64*
  %6393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6394 = getelementptr inbounds %struct.GPR, %struct.GPR* %6393, i32 0, i32 1
  %6395 = getelementptr inbounds %struct.Reg, %struct.Reg* %6394, i32 0, i32 0
  %RAX.i515 = bitcast %union.anon* %6395 to i64*
  %6396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6397 = getelementptr inbounds %struct.GPR, %struct.GPR* %6396, i32 0, i32 15
  %6398 = getelementptr inbounds %struct.Reg, %struct.Reg* %6397, i32 0, i32 0
  %RBP.i516 = bitcast %union.anon* %6398 to i64*
  %6399 = load i64, i64* %RBP.i516
  %6400 = sub i64 %6399, 4
  %6401 = load i64, i64* %PC.i514
  %6402 = add i64 %6401, 3
  store i64 %6402, i64* %PC.i514
  %6403 = inttoptr i64 %6400 to i32*
  %6404 = load i32, i32* %6403
  %6405 = zext i32 %6404 to i64
  store i64 %6405, i64* %RAX.i515, align 8
  store %struct.Memory* %loadMem_400d95, %struct.Memory** %MEMORY
  %loadMem_400d98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6407 = getelementptr inbounds %struct.GPR, %struct.GPR* %6406, i32 0, i32 33
  %6408 = getelementptr inbounds %struct.Reg, %struct.Reg* %6407, i32 0, i32 0
  %PC.i512 = bitcast %union.anon* %6408 to i64*
  %6409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6410 = getelementptr inbounds %struct.GPR, %struct.GPR* %6409, i32 0, i32 1
  %6411 = getelementptr inbounds %struct.Reg, %struct.Reg* %6410, i32 0, i32 0
  %RAX.i513 = bitcast %union.anon* %6411 to i64*
  %6412 = load i64, i64* %RAX.i513
  %6413 = load i64, i64* %PC.i512
  %6414 = add i64 %6413, 3
  store i64 %6414, i64* %PC.i512
  %6415 = trunc i64 %6412 to i32
  %6416 = add i32 1, %6415
  %6417 = zext i32 %6416 to i64
  store i64 %6417, i64* %RAX.i513, align 8
  %6418 = icmp ult i32 %6416, %6415
  %6419 = icmp ult i32 %6416, 1
  %6420 = or i1 %6418, %6419
  %6421 = zext i1 %6420 to i8
  %6422 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6421, i8* %6422, align 1
  %6423 = and i32 %6416, 255
  %6424 = call i32 @llvm.ctpop.i32(i32 %6423)
  %6425 = trunc i32 %6424 to i8
  %6426 = and i8 %6425, 1
  %6427 = xor i8 %6426, 1
  %6428 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6427, i8* %6428, align 1
  %6429 = xor i64 1, %6412
  %6430 = trunc i64 %6429 to i32
  %6431 = xor i32 %6430, %6416
  %6432 = lshr i32 %6431, 4
  %6433 = trunc i32 %6432 to i8
  %6434 = and i8 %6433, 1
  %6435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6434, i8* %6435, align 1
  %6436 = icmp eq i32 %6416, 0
  %6437 = zext i1 %6436 to i8
  %6438 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6437, i8* %6438, align 1
  %6439 = lshr i32 %6416, 31
  %6440 = trunc i32 %6439 to i8
  %6441 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6440, i8* %6441, align 1
  %6442 = lshr i32 %6415, 31
  %6443 = xor i32 %6439, %6442
  %6444 = add i32 %6443, %6439
  %6445 = icmp eq i32 %6444, 2
  %6446 = zext i1 %6445 to i8
  %6447 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6446, i8* %6447, align 1
  store %struct.Memory* %loadMem_400d98, %struct.Memory** %MEMORY
  %loadMem_400d9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6449 = getelementptr inbounds %struct.GPR, %struct.GPR* %6448, i32 0, i32 33
  %6450 = getelementptr inbounds %struct.Reg, %struct.Reg* %6449, i32 0, i32 0
  %PC.i509 = bitcast %union.anon* %6450 to i64*
  %6451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6452 = getelementptr inbounds %struct.GPR, %struct.GPR* %6451, i32 0, i32 1
  %6453 = getelementptr inbounds %struct.Reg, %struct.Reg* %6452, i32 0, i32 0
  %EAX.i510 = bitcast %union.anon* %6453 to i32*
  %6454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6455 = getelementptr inbounds %struct.GPR, %struct.GPR* %6454, i32 0, i32 15
  %6456 = getelementptr inbounds %struct.Reg, %struct.Reg* %6455, i32 0, i32 0
  %RBP.i511 = bitcast %union.anon* %6456 to i64*
  %6457 = load i64, i64* %RBP.i511
  %6458 = sub i64 %6457, 4
  %6459 = load i32, i32* %EAX.i510
  %6460 = zext i32 %6459 to i64
  %6461 = load i64, i64* %PC.i509
  %6462 = add i64 %6461, 3
  store i64 %6462, i64* %PC.i509
  %6463 = inttoptr i64 %6458 to i32*
  store i32 %6459, i32* %6463
  store %struct.Memory* %loadMem_400d9b, %struct.Memory** %MEMORY
  %loadMem_400d9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6465 = getelementptr inbounds %struct.GPR, %struct.GPR* %6464, i32 0, i32 33
  %6466 = getelementptr inbounds %struct.Reg, %struct.Reg* %6465, i32 0, i32 0
  %PC.i508 = bitcast %union.anon* %6466 to i64*
  %6467 = load i64, i64* %PC.i508
  %6468 = add i64 %6467, -124
  %6469 = load i64, i64* %PC.i508
  %6470 = add i64 %6469, 5
  store i64 %6470, i64* %PC.i508
  %6471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6468, i64* %6471, align 8
  store %struct.Memory* %loadMem_400d9e, %struct.Memory** %MEMORY
  br label %block_.L_400d22

block_.L_400da3:                                  ; preds = %block_.L_400d22
  %loadMem_400da3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6473 = getelementptr inbounds %struct.GPR, %struct.GPR* %6472, i32 0, i32 33
  %6474 = getelementptr inbounds %struct.Reg, %struct.Reg* %6473, i32 0, i32 0
  %PC.i507 = bitcast %union.anon* %6474 to i64*
  %6475 = load i64, i64* %PC.i507
  %6476 = add i64 %6475, 11
  store i64 %6476, i64* %PC.i507
  store i32 1, i32* bitcast (%G_0x619208_type* @G_0x619208 to i32*)
  store %struct.Memory* %loadMem_400da3, %struct.Memory** %MEMORY
  %loadMem_400dae = load %struct.Memory*, %struct.Memory** %MEMORY
  %6477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6478 = getelementptr inbounds %struct.GPR, %struct.GPR* %6477, i32 0, i32 33
  %6479 = getelementptr inbounds %struct.Reg, %struct.Reg* %6478, i32 0, i32 0
  %PC.i506 = bitcast %union.anon* %6479 to i64*
  %6480 = load i64, i64* %PC.i506
  %6481 = add i64 %6480, 11
  store i64 %6481, i64* %PC.i506
  store i32 2, i32* bitcast (%G_0x610268_type* @G_0x610268 to i32*)
  store %struct.Memory* %loadMem_400dae, %struct.Memory** %MEMORY
  %loadMem_400db9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6483 = getelementptr inbounds %struct.GPR, %struct.GPR* %6482, i32 0, i32 33
  %6484 = getelementptr inbounds %struct.Reg, %struct.Reg* %6483, i32 0, i32 0
  %PC.i504 = bitcast %union.anon* %6484 to i64*
  %6485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6486 = getelementptr inbounds %struct.GPR, %struct.GPR* %6485, i32 0, i32 15
  %6487 = getelementptr inbounds %struct.Reg, %struct.Reg* %6486, i32 0, i32 0
  %RBP.i505 = bitcast %union.anon* %6487 to i64*
  %6488 = load i64, i64* %RBP.i505
  %6489 = sub i64 %6488, 4
  %6490 = load i64, i64* %PC.i504
  %6491 = add i64 %6490, 7
  store i64 %6491, i64* %PC.i504
  %6492 = inttoptr i64 %6489 to i32*
  store i32 0, i32* %6492
  store %struct.Memory* %loadMem_400db9, %struct.Memory** %MEMORY
  br label %block_.L_400dc0

block_.L_400dc0:                                  ; preds = %block_.L_400e33, %block_.L_400da3
  %loadMem_400dc0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6494 = getelementptr inbounds %struct.GPR, %struct.GPR* %6493, i32 0, i32 33
  %6495 = getelementptr inbounds %struct.Reg, %struct.Reg* %6494, i32 0, i32 0
  %PC.i502 = bitcast %union.anon* %6495 to i64*
  %6496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6497 = getelementptr inbounds %struct.GPR, %struct.GPR* %6496, i32 0, i32 15
  %6498 = getelementptr inbounds %struct.Reg, %struct.Reg* %6497, i32 0, i32 0
  %RBP.i503 = bitcast %union.anon* %6498 to i64*
  %6499 = load i64, i64* %RBP.i503
  %6500 = sub i64 %6499, 4
  %6501 = load i64, i64* %PC.i502
  %6502 = add i64 %6501, 4
  store i64 %6502, i64* %PC.i502
  %6503 = inttoptr i64 %6500 to i32*
  %6504 = load i32, i32* %6503
  %6505 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6505, align 1
  %6506 = and i32 %6504, 255
  %6507 = call i32 @llvm.ctpop.i32(i32 %6506)
  %6508 = trunc i32 %6507 to i8
  %6509 = and i8 %6508, 1
  %6510 = xor i8 %6509, 1
  %6511 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6510, i8* %6511, align 1
  %6512 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6512, align 1
  %6513 = icmp eq i32 %6504, 0
  %6514 = zext i1 %6513 to i8
  %6515 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6514, i8* %6515, align 1
  %6516 = lshr i32 %6504, 31
  %6517 = trunc i32 %6516 to i8
  %6518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6517, i8* %6518, align 1
  %6519 = lshr i32 %6504, 31
  %6520 = xor i32 %6516, %6519
  %6521 = add i32 %6520, %6519
  %6522 = icmp eq i32 %6521, 2
  %6523 = zext i1 %6522 to i8
  %6524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6523, i8* %6524, align 1
  store %struct.Memory* %loadMem_400dc0, %struct.Memory** %MEMORY
  %loadMem_400dc4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6526 = getelementptr inbounds %struct.GPR, %struct.GPR* %6525, i32 0, i32 33
  %6527 = getelementptr inbounds %struct.Reg, %struct.Reg* %6526, i32 0, i32 0
  %PC.i501 = bitcast %union.anon* %6527 to i64*
  %6528 = load i64, i64* %PC.i501
  %6529 = add i64 %6528, 125
  %6530 = load i64, i64* %PC.i501
  %6531 = add i64 %6530, 6
  %6532 = load i64, i64* %PC.i501
  %6533 = add i64 %6532, 6
  store i64 %6533, i64* %PC.i501
  %6534 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6535 = load i8, i8* %6534, align 1
  %6536 = icmp eq i8 %6535, 0
  %6537 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6538 = load i8, i8* %6537, align 1
  %6539 = icmp ne i8 %6538, 0
  %6540 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %6541 = load i8, i8* %6540, align 1
  %6542 = icmp ne i8 %6541, 0
  %6543 = xor i1 %6539, %6542
  %6544 = xor i1 %6543, true
  %6545 = and i1 %6536, %6544
  %6546 = zext i1 %6545 to i8
  store i8 %6546, i8* %BRANCH_TAKEN, align 1
  %6547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6548 = select i1 %6545, i64 %6529, i64 %6531
  store i64 %6548, i64* %6547, align 8
  store %struct.Memory* %loadMem_400dc4, %struct.Memory** %MEMORY
  %loadBr_400dc4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400dc4 = icmp eq i8 %loadBr_400dc4, 1
  br i1 %cmpBr_400dc4, label %block_.L_400e41, label %block_400dca

block_400dca:                                     ; preds = %block_.L_400dc0
  %loadMem_400dca = load %struct.Memory*, %struct.Memory** %MEMORY
  %6549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6550 = getelementptr inbounds %struct.GPR, %struct.GPR* %6549, i32 0, i32 33
  %6551 = getelementptr inbounds %struct.Reg, %struct.Reg* %6550, i32 0, i32 0
  %PC.i499 = bitcast %union.anon* %6551 to i64*
  %6552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6553 = getelementptr inbounds %struct.GPR, %struct.GPR* %6552, i32 0, i32 15
  %6554 = getelementptr inbounds %struct.Reg, %struct.Reg* %6553, i32 0, i32 0
  %RBP.i500 = bitcast %union.anon* %6554 to i64*
  %6555 = load i64, i64* %RBP.i500
  %6556 = sub i64 %6555, 8
  %6557 = load i64, i64* %PC.i499
  %6558 = add i64 %6557, 7
  store i64 %6558, i64* %PC.i499
  %6559 = inttoptr i64 %6556 to i32*
  store i32 0, i32* %6559
  store %struct.Memory* %loadMem_400dca, %struct.Memory** %MEMORY
  br label %block_.L_400dd1

block_.L_400dd1:                                  ; preds = %block_.L_400e20, %block_400dca
  %loadMem_400dd1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6561 = getelementptr inbounds %struct.GPR, %struct.GPR* %6560, i32 0, i32 33
  %6562 = getelementptr inbounds %struct.Reg, %struct.Reg* %6561, i32 0, i32 0
  %PC.i497 = bitcast %union.anon* %6562 to i64*
  %6563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6564 = getelementptr inbounds %struct.GPR, %struct.GPR* %6563, i32 0, i32 15
  %6565 = getelementptr inbounds %struct.Reg, %struct.Reg* %6564, i32 0, i32 0
  %RBP.i498 = bitcast %union.anon* %6565 to i64*
  %6566 = load i64, i64* %RBP.i498
  %6567 = sub i64 %6566, 8
  %6568 = load i64, i64* %PC.i497
  %6569 = add i64 %6568, 4
  store i64 %6569, i64* %PC.i497
  %6570 = inttoptr i64 %6567 to i32*
  %6571 = load i32, i32* %6570
  %6572 = sub i32 %6571, 2
  %6573 = icmp ult i32 %6571, 2
  %6574 = zext i1 %6573 to i8
  %6575 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6574, i8* %6575, align 1
  %6576 = and i32 %6572, 255
  %6577 = call i32 @llvm.ctpop.i32(i32 %6576)
  %6578 = trunc i32 %6577 to i8
  %6579 = and i8 %6578, 1
  %6580 = xor i8 %6579, 1
  %6581 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6580, i8* %6581, align 1
  %6582 = xor i32 %6571, 2
  %6583 = xor i32 %6582, %6572
  %6584 = lshr i32 %6583, 4
  %6585 = trunc i32 %6584 to i8
  %6586 = and i8 %6585, 1
  %6587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6586, i8* %6587, align 1
  %6588 = icmp eq i32 %6572, 0
  %6589 = zext i1 %6588 to i8
  %6590 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6589, i8* %6590, align 1
  %6591 = lshr i32 %6572, 31
  %6592 = trunc i32 %6591 to i8
  %6593 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6592, i8* %6593, align 1
  %6594 = lshr i32 %6571, 31
  %6595 = xor i32 %6591, %6594
  %6596 = add i32 %6595, %6594
  %6597 = icmp eq i32 %6596, 2
  %6598 = zext i1 %6597 to i8
  %6599 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6598, i8* %6599, align 1
  store %struct.Memory* %loadMem_400dd1, %struct.Memory** %MEMORY
  %loadMem_400dd5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6601 = getelementptr inbounds %struct.GPR, %struct.GPR* %6600, i32 0, i32 33
  %6602 = getelementptr inbounds %struct.Reg, %struct.Reg* %6601, i32 0, i32 0
  %PC.i496 = bitcast %union.anon* %6602 to i64*
  %6603 = load i64, i64* %PC.i496
  %6604 = add i64 %6603, 89
  %6605 = load i64, i64* %PC.i496
  %6606 = add i64 %6605, 6
  %6607 = load i64, i64* %PC.i496
  %6608 = add i64 %6607, 6
  store i64 %6608, i64* %PC.i496
  %6609 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6610 = load i8, i8* %6609, align 1
  %6611 = icmp eq i8 %6610, 0
  %6612 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6613 = load i8, i8* %6612, align 1
  %6614 = icmp ne i8 %6613, 0
  %6615 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %6616 = load i8, i8* %6615, align 1
  %6617 = icmp ne i8 %6616, 0
  %6618 = xor i1 %6614, %6617
  %6619 = xor i1 %6618, true
  %6620 = and i1 %6611, %6619
  %6621 = zext i1 %6620 to i8
  store i8 %6621, i8* %BRANCH_TAKEN, align 1
  %6622 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6623 = select i1 %6620, i64 %6604, i64 %6606
  store i64 %6623, i64* %6622, align 8
  store %struct.Memory* %loadMem_400dd5, %struct.Memory** %MEMORY
  %loadBr_400dd5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400dd5 = icmp eq i8 %loadBr_400dd5, 1
  br i1 %cmpBr_400dd5, label %block_.L_400e2e, label %block_400ddb

block_400ddb:                                     ; preds = %block_.L_400dd1
  %loadMem_400ddb = load %struct.Memory*, %struct.Memory** %MEMORY
  %6624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6625 = getelementptr inbounds %struct.GPR, %struct.GPR* %6624, i32 0, i32 33
  %6626 = getelementptr inbounds %struct.Reg, %struct.Reg* %6625, i32 0, i32 0
  %PC.i494 = bitcast %union.anon* %6626 to i64*
  %6627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6628 = getelementptr inbounds %struct.GPR, %struct.GPR* %6627, i32 0, i32 15
  %6629 = getelementptr inbounds %struct.Reg, %struct.Reg* %6628, i32 0, i32 0
  %RBP.i495 = bitcast %union.anon* %6629 to i64*
  %6630 = load i64, i64* %RBP.i495
  %6631 = sub i64 %6630, 12
  %6632 = load i64, i64* %PC.i494
  %6633 = add i64 %6632, 7
  store i64 %6633, i64* %PC.i494
  %6634 = inttoptr i64 %6631 to i32*
  store i32 0, i32* %6634
  store %struct.Memory* %loadMem_400ddb, %struct.Memory** %MEMORY
  br label %block_.L_400de2

block_.L_400de2:                                  ; preds = %block_400dec, %block_400ddb
  %loadMem_400de2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6636 = getelementptr inbounds %struct.GPR, %struct.GPR* %6635, i32 0, i32 33
  %6637 = getelementptr inbounds %struct.Reg, %struct.Reg* %6636, i32 0, i32 0
  %PC.i492 = bitcast %union.anon* %6637 to i64*
  %6638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6639 = getelementptr inbounds %struct.GPR, %struct.GPR* %6638, i32 0, i32 15
  %6640 = getelementptr inbounds %struct.Reg, %struct.Reg* %6639, i32 0, i32 0
  %RBP.i493 = bitcast %union.anon* %6640 to i64*
  %6641 = load i64, i64* %RBP.i493
  %6642 = sub i64 %6641, 12
  %6643 = load i64, i64* %PC.i492
  %6644 = add i64 %6643, 4
  store i64 %6644, i64* %PC.i492
  %6645 = inttoptr i64 %6642 to i32*
  %6646 = load i32, i32* %6645
  %6647 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6647, align 1
  %6648 = and i32 %6646, 255
  %6649 = call i32 @llvm.ctpop.i32(i32 %6648)
  %6650 = trunc i32 %6649 to i8
  %6651 = and i8 %6650, 1
  %6652 = xor i8 %6651, 1
  %6653 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6652, i8* %6653, align 1
  %6654 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6654, align 1
  %6655 = icmp eq i32 %6646, 0
  %6656 = zext i1 %6655 to i8
  %6657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6656, i8* %6657, align 1
  %6658 = lshr i32 %6646, 31
  %6659 = trunc i32 %6658 to i8
  %6660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6659, i8* %6660, align 1
  %6661 = lshr i32 %6646, 31
  %6662 = xor i32 %6658, %6661
  %6663 = add i32 %6662, %6661
  %6664 = icmp eq i32 %6663, 2
  %6665 = zext i1 %6664 to i8
  %6666 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6665, i8* %6666, align 1
  store %struct.Memory* %loadMem_400de2, %struct.Memory** %MEMORY
  %loadMem_400de6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6668 = getelementptr inbounds %struct.GPR, %struct.GPR* %6667, i32 0, i32 33
  %6669 = getelementptr inbounds %struct.Reg, %struct.Reg* %6668, i32 0, i32 0
  %PC.i491 = bitcast %union.anon* %6669 to i64*
  %6670 = load i64, i64* %PC.i491
  %6671 = add i64 %6670, 53
  %6672 = load i64, i64* %PC.i491
  %6673 = add i64 %6672, 6
  %6674 = load i64, i64* %PC.i491
  %6675 = add i64 %6674, 6
  store i64 %6675, i64* %PC.i491
  %6676 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6677 = load i8, i8* %6676, align 1
  %6678 = icmp eq i8 %6677, 0
  %6679 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6680 = load i8, i8* %6679, align 1
  %6681 = icmp ne i8 %6680, 0
  %6682 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %6683 = load i8, i8* %6682, align 1
  %6684 = icmp ne i8 %6683, 0
  %6685 = xor i1 %6681, %6684
  %6686 = xor i1 %6685, true
  %6687 = and i1 %6678, %6686
  %6688 = zext i1 %6687 to i8
  store i8 %6688, i8* %BRANCH_TAKEN, align 1
  %6689 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6690 = select i1 %6687, i64 %6671, i64 %6673
  store i64 %6690, i64* %6689, align 8
  store %struct.Memory* %loadMem_400de6, %struct.Memory** %MEMORY
  %loadBr_400de6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400de6 = icmp eq i8 %loadBr_400de6, 1
  br i1 %cmpBr_400de6, label %block_.L_400e1b, label %block_400dec

block_400dec:                                     ; preds = %block_.L_400de2
  %loadMem_400dec = load %struct.Memory*, %struct.Memory** %MEMORY
  %6691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6692 = getelementptr inbounds %struct.GPR, %struct.GPR* %6691, i32 0, i32 33
  %6693 = getelementptr inbounds %struct.Reg, %struct.Reg* %6692, i32 0, i32 0
  %PC.i488 = bitcast %union.anon* %6693 to i64*
  %6694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6695 = getelementptr inbounds %struct.GPR, %struct.GPR* %6694, i32 0, i32 1
  %6696 = getelementptr inbounds %struct.Reg, %struct.Reg* %6695, i32 0, i32 0
  %RAX.i489 = bitcast %union.anon* %6696 to i64*
  %6697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6698 = getelementptr inbounds %struct.GPR, %struct.GPR* %6697, i32 0, i32 15
  %6699 = getelementptr inbounds %struct.Reg, %struct.Reg* %6698, i32 0, i32 0
  %RBP.i490 = bitcast %union.anon* %6699 to i64*
  %6700 = load i64, i64* %RBP.i490
  %6701 = sub i64 %6700, 4
  %6702 = load i64, i64* %PC.i488
  %6703 = add i64 %6702, 3
  store i64 %6703, i64* %PC.i488
  %6704 = inttoptr i64 %6701 to i32*
  %6705 = load i32, i32* %6704
  %6706 = zext i32 %6705 to i64
  store i64 %6706, i64* %RAX.i489, align 8
  store %struct.Memory* %loadMem_400dec, %struct.Memory** %MEMORY
  %loadMem_400def = load %struct.Memory*, %struct.Memory** %MEMORY
  %6707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6708 = getelementptr inbounds %struct.GPR, %struct.GPR* %6707, i32 0, i32 33
  %6709 = getelementptr inbounds %struct.Reg, %struct.Reg* %6708, i32 0, i32 0
  %PC.i485 = bitcast %union.anon* %6709 to i64*
  %6710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6711 = getelementptr inbounds %struct.GPR, %struct.GPR* %6710, i32 0, i32 5
  %6712 = getelementptr inbounds %struct.Reg, %struct.Reg* %6711, i32 0, i32 0
  %RCX.i486 = bitcast %union.anon* %6712 to i64*
  %6713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6714 = getelementptr inbounds %struct.GPR, %struct.GPR* %6713, i32 0, i32 15
  %6715 = getelementptr inbounds %struct.Reg, %struct.Reg* %6714, i32 0, i32 0
  %RBP.i487 = bitcast %union.anon* %6715 to i64*
  %6716 = load i64, i64* %RBP.i487
  %6717 = sub i64 %6716, 8
  %6718 = load i64, i64* %PC.i485
  %6719 = add i64 %6718, 3
  store i64 %6719, i64* %PC.i485
  %6720 = inttoptr i64 %6717 to i32*
  %6721 = load i32, i32* %6720
  %6722 = zext i32 %6721 to i64
  store i64 %6722, i64* %RCX.i486, align 8
  store %struct.Memory* %loadMem_400def, %struct.Memory** %MEMORY
  %loadMem_400df2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6724 = getelementptr inbounds %struct.GPR, %struct.GPR* %6723, i32 0, i32 33
  %6725 = getelementptr inbounds %struct.Reg, %struct.Reg* %6724, i32 0, i32 0
  %PC.i482 = bitcast %union.anon* %6725 to i64*
  %6726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6727 = getelementptr inbounds %struct.GPR, %struct.GPR* %6726, i32 0, i32 7
  %6728 = getelementptr inbounds %struct.Reg, %struct.Reg* %6727, i32 0, i32 0
  %RDX.i483 = bitcast %union.anon* %6728 to i64*
  %6729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6730 = getelementptr inbounds %struct.GPR, %struct.GPR* %6729, i32 0, i32 15
  %6731 = getelementptr inbounds %struct.Reg, %struct.Reg* %6730, i32 0, i32 0
  %RBP.i484 = bitcast %union.anon* %6731 to i64*
  %6732 = load i64, i64* %RBP.i484
  %6733 = sub i64 %6732, 12
  %6734 = load i64, i64* %PC.i482
  %6735 = add i64 %6734, 3
  store i64 %6735, i64* %PC.i482
  %6736 = inttoptr i64 %6733 to i32*
  %6737 = load i32, i32* %6736
  %6738 = zext i32 %6737 to i64
  store i64 %6738, i64* %RDX.i483, align 8
  store %struct.Memory* %loadMem_400df2, %struct.Memory** %MEMORY
  %loadMem_400df5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6740 = getelementptr inbounds %struct.GPR, %struct.GPR* %6739, i32 0, i32 33
  %6741 = getelementptr inbounds %struct.Reg, %struct.Reg* %6740, i32 0, i32 0
  %PC.i480 = bitcast %union.anon* %6741 to i64*
  %6742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6743 = getelementptr inbounds %struct.GPR, %struct.GPR* %6742, i32 0, i32 7
  %6744 = getelementptr inbounds %struct.Reg, %struct.Reg* %6743, i32 0, i32 0
  %RDX.i481 = bitcast %union.anon* %6744 to i64*
  %6745 = load i64, i64* %RDX.i481
  %6746 = load i64, i64* %PC.i480
  %6747 = add i64 %6746, 3
  store i64 %6747, i64* %PC.i480
  %6748 = and i64 %6745, 4294967295
  %6749 = shl i64 %6748, 2
  %6750 = trunc i64 %6749 to i32
  %6751 = icmp slt i32 %6750, 0
  %6752 = shl i32 %6750, 1
  %6753 = zext i32 %6752 to i64
  store i64 %6753, i64* %RDX.i481, align 8
  %6754 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %6755 = zext i1 %6751 to i8
  store i8 %6755, i8* %6754, align 1
  %6756 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6757 = and i32 %6752, 254
  %6758 = call i32 @llvm.ctpop.i32(i32 %6757)
  %6759 = trunc i32 %6758 to i8
  %6760 = and i8 %6759, 1
  %6761 = xor i8 %6760, 1
  store i8 %6761, i8* %6756, align 1
  %6762 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6762, align 1
  %6763 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6764 = icmp eq i32 %6752, 0
  %6765 = zext i1 %6764 to i8
  store i8 %6765, i8* %6763, align 1
  %6766 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6767 = lshr i32 %6752, 31
  %6768 = trunc i32 %6767 to i8
  store i8 %6768, i8* %6766, align 1
  %6769 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6769, align 1
  store %struct.Memory* %loadMem_400df5, %struct.Memory** %MEMORY
  %loadMem_400df8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6771 = getelementptr inbounds %struct.GPR, %struct.GPR* %6770, i32 0, i32 33
  %6772 = getelementptr inbounds %struct.Reg, %struct.Reg* %6771, i32 0, i32 0
  %PC.i477 = bitcast %union.anon* %6772 to i64*
  %6773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6774 = getelementptr inbounds %struct.GPR, %struct.GPR* %6773, i32 0, i32 7
  %6775 = getelementptr inbounds %struct.Reg, %struct.Reg* %6774, i32 0, i32 0
  %EDX.i478 = bitcast %union.anon* %6775 to i32*
  %6776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6777 = getelementptr inbounds %struct.GPR, %struct.GPR* %6776, i32 0, i32 5
  %6778 = getelementptr inbounds %struct.Reg, %struct.Reg* %6777, i32 0, i32 0
  %RCX.i479 = bitcast %union.anon* %6778 to i64*
  %6779 = load i64, i64* %RCX.i479
  %6780 = load i32, i32* %EDX.i478
  %6781 = zext i32 %6780 to i64
  %6782 = load i64, i64* %PC.i477
  %6783 = add i64 %6782, 2
  store i64 %6783, i64* %PC.i477
  %6784 = trunc i64 %6779 to i32
  %6785 = add i32 %6780, %6784
  %6786 = zext i32 %6785 to i64
  store i64 %6786, i64* %RCX.i479, align 8
  %6787 = icmp ult i32 %6785, %6784
  %6788 = icmp ult i32 %6785, %6780
  %6789 = or i1 %6787, %6788
  %6790 = zext i1 %6789 to i8
  %6791 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6790, i8* %6791, align 1
  %6792 = and i32 %6785, 255
  %6793 = call i32 @llvm.ctpop.i32(i32 %6792)
  %6794 = trunc i32 %6793 to i8
  %6795 = and i8 %6794, 1
  %6796 = xor i8 %6795, 1
  %6797 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6796, i8* %6797, align 1
  %6798 = xor i64 %6781, %6779
  %6799 = trunc i64 %6798 to i32
  %6800 = xor i32 %6799, %6785
  %6801 = lshr i32 %6800, 4
  %6802 = trunc i32 %6801 to i8
  %6803 = and i8 %6802, 1
  %6804 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6803, i8* %6804, align 1
  %6805 = icmp eq i32 %6785, 0
  %6806 = zext i1 %6805 to i8
  %6807 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6806, i8* %6807, align 1
  %6808 = lshr i32 %6785, 31
  %6809 = trunc i32 %6808 to i8
  %6810 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6809, i8* %6810, align 1
  %6811 = lshr i32 %6784, 31
  %6812 = lshr i32 %6780, 31
  %6813 = xor i32 %6808, %6811
  %6814 = xor i32 %6808, %6812
  %6815 = add i32 %6813, %6814
  %6816 = icmp eq i32 %6815, 2
  %6817 = zext i1 %6816 to i8
  %6818 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6817, i8* %6818, align 1
  store %struct.Memory* %loadMem_400df8, %struct.Memory** %MEMORY
  %loadMem_400dfa = load %struct.Memory*, %struct.Memory** %MEMORY
  %6819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6820 = getelementptr inbounds %struct.GPR, %struct.GPR* %6819, i32 0, i32 33
  %6821 = getelementptr inbounds %struct.Reg, %struct.Reg* %6820, i32 0, i32 0
  %PC.i475 = bitcast %union.anon* %6821 to i64*
  %6822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6823 = getelementptr inbounds %struct.GPR, %struct.GPR* %6822, i32 0, i32 5
  %6824 = getelementptr inbounds %struct.Reg, %struct.Reg* %6823, i32 0, i32 0
  %RCX.i476 = bitcast %union.anon* %6824 to i64*
  %6825 = load i64, i64* %RCX.i476
  %6826 = load i64, i64* %PC.i475
  %6827 = add i64 %6826, 3
  store i64 %6827, i64* %PC.i475
  %6828 = and i64 %6825, 4294967295
  %6829 = shl i64 %6828, 2
  %6830 = trunc i64 %6829 to i32
  %6831 = icmp slt i32 %6830, 0
  %6832 = shl i32 %6830, 1
  %6833 = zext i32 %6832 to i64
  store i64 %6833, i64* %RCX.i476, align 8
  %6834 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %6835 = zext i1 %6831 to i8
  store i8 %6835, i8* %6834, align 1
  %6836 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6837 = and i32 %6832, 254
  %6838 = call i32 @llvm.ctpop.i32(i32 %6837)
  %6839 = trunc i32 %6838 to i8
  %6840 = and i8 %6839, 1
  %6841 = xor i8 %6840, 1
  store i8 %6841, i8* %6836, align 1
  %6842 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6842, align 1
  %6843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6844 = icmp eq i32 %6832, 0
  %6845 = zext i1 %6844 to i8
  store i8 %6845, i8* %6843, align 1
  %6846 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6847 = lshr i32 %6832, 31
  %6848 = trunc i32 %6847 to i8
  store i8 %6848, i8* %6846, align 1
  %6849 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6849, align 1
  store %struct.Memory* %loadMem_400dfa, %struct.Memory** %MEMORY
  %loadMem_400dfd = load %struct.Memory*, %struct.Memory** %MEMORY
  %6850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6851 = getelementptr inbounds %struct.GPR, %struct.GPR* %6850, i32 0, i32 33
  %6852 = getelementptr inbounds %struct.Reg, %struct.Reg* %6851, i32 0, i32 0
  %PC.i472 = bitcast %union.anon* %6852 to i64*
  %6853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6854 = getelementptr inbounds %struct.GPR, %struct.GPR* %6853, i32 0, i32 5
  %6855 = getelementptr inbounds %struct.Reg, %struct.Reg* %6854, i32 0, i32 0
  %ECX.i473 = bitcast %union.anon* %6855 to i32*
  %6856 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6857 = getelementptr inbounds %struct.GPR, %struct.GPR* %6856, i32 0, i32 1
  %6858 = getelementptr inbounds %struct.Reg, %struct.Reg* %6857, i32 0, i32 0
  %RAX.i474 = bitcast %union.anon* %6858 to i64*
  %6859 = load i64, i64* %RAX.i474
  %6860 = load i32, i32* %ECX.i473
  %6861 = zext i32 %6860 to i64
  %6862 = load i64, i64* %PC.i472
  %6863 = add i64 %6862, 2
  store i64 %6863, i64* %PC.i472
  %6864 = trunc i64 %6859 to i32
  %6865 = add i32 %6860, %6864
  %6866 = zext i32 %6865 to i64
  store i64 %6866, i64* %RAX.i474, align 8
  %6867 = icmp ult i32 %6865, %6864
  %6868 = icmp ult i32 %6865, %6860
  %6869 = or i1 %6867, %6868
  %6870 = zext i1 %6869 to i8
  %6871 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6870, i8* %6871, align 1
  %6872 = and i32 %6865, 255
  %6873 = call i32 @llvm.ctpop.i32(i32 %6872)
  %6874 = trunc i32 %6873 to i8
  %6875 = and i8 %6874, 1
  %6876 = xor i8 %6875, 1
  %6877 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6876, i8* %6877, align 1
  %6878 = xor i64 %6861, %6859
  %6879 = trunc i64 %6878 to i32
  %6880 = xor i32 %6879, %6865
  %6881 = lshr i32 %6880, 4
  %6882 = trunc i32 %6881 to i8
  %6883 = and i8 %6882, 1
  %6884 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6883, i8* %6884, align 1
  %6885 = icmp eq i32 %6865, 0
  %6886 = zext i1 %6885 to i8
  %6887 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6886, i8* %6887, align 1
  %6888 = lshr i32 %6865, 31
  %6889 = trunc i32 %6888 to i8
  %6890 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6889, i8* %6890, align 1
  %6891 = lshr i32 %6864, 31
  %6892 = lshr i32 %6860, 31
  %6893 = xor i32 %6888, %6891
  %6894 = xor i32 %6888, %6892
  %6895 = add i32 %6893, %6894
  %6896 = icmp eq i32 %6895, 2
  %6897 = zext i1 %6896 to i8
  %6898 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6897, i8* %6898, align 1
  store %struct.Memory* %loadMem_400dfd, %struct.Memory** %MEMORY
  %loadMem_400dff = load %struct.Memory*, %struct.Memory** %MEMORY
  %6899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6900 = getelementptr inbounds %struct.GPR, %struct.GPR* %6899, i32 0, i32 33
  %6901 = getelementptr inbounds %struct.Reg, %struct.Reg* %6900, i32 0, i32 0
  %PC.i469 = bitcast %union.anon* %6901 to i64*
  %6902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6903 = getelementptr inbounds %struct.GPR, %struct.GPR* %6902, i32 0, i32 1
  %6904 = getelementptr inbounds %struct.Reg, %struct.Reg* %6903, i32 0, i32 0
  %EAX.i470 = bitcast %union.anon* %6904 to i32*
  %6905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6906 = getelementptr inbounds %struct.GPR, %struct.GPR* %6905, i32 0, i32 9
  %6907 = getelementptr inbounds %struct.Reg, %struct.Reg* %6906, i32 0, i32 0
  %RSI.i471 = bitcast %union.anon* %6907 to i64*
  %6908 = load i32, i32* %EAX.i470
  %6909 = zext i32 %6908 to i64
  %6910 = load i64, i64* %PC.i469
  %6911 = add i64 %6910, 3
  store i64 %6911, i64* %PC.i469
  %6912 = shl i64 %6909, 32
  %6913 = ashr exact i64 %6912, 32
  store i64 %6913, i64* %RSI.i471, align 8
  store %struct.Memory* %loadMem_400dff, %struct.Memory** %MEMORY
  %loadMem_400e02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6915 = getelementptr inbounds %struct.GPR, %struct.GPR* %6914, i32 0, i32 33
  %6916 = getelementptr inbounds %struct.Reg, %struct.Reg* %6915, i32 0, i32 0
  %PC.i467 = bitcast %union.anon* %6916 to i64*
  %6917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6918 = getelementptr inbounds %struct.GPR, %struct.GPR* %6917, i32 0, i32 9
  %6919 = getelementptr inbounds %struct.Reg, %struct.Reg* %6918, i32 0, i32 0
  %RSI.i468 = bitcast %union.anon* %6919 to i64*
  %6920 = load i64, i64* %RSI.i468
  %6921 = mul i64 %6920, 4
  %6922 = add i64 %6921, ptrtoint (%G_0x6072a0___rsi_4__type* @G_0x6072a0___rsi_4_ to i64)
  %6923 = load i64, i64* %PC.i467
  %6924 = add i64 %6923, 11
  store i64 %6924, i64* %PC.i467
  %6925 = inttoptr i64 %6922 to i32*
  store i32 1, i32* %6925
  store %struct.Memory* %loadMem_400e02, %struct.Memory** %MEMORY
  %loadMem_400e0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6927 = getelementptr inbounds %struct.GPR, %struct.GPR* %6926, i32 0, i32 33
  %6928 = getelementptr inbounds %struct.Reg, %struct.Reg* %6927, i32 0, i32 0
  %PC.i464 = bitcast %union.anon* %6928 to i64*
  %6929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6930 = getelementptr inbounds %struct.GPR, %struct.GPR* %6929, i32 0, i32 1
  %6931 = getelementptr inbounds %struct.Reg, %struct.Reg* %6930, i32 0, i32 0
  %RAX.i465 = bitcast %union.anon* %6931 to i64*
  %6932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6933 = getelementptr inbounds %struct.GPR, %struct.GPR* %6932, i32 0, i32 15
  %6934 = getelementptr inbounds %struct.Reg, %struct.Reg* %6933, i32 0, i32 0
  %RBP.i466 = bitcast %union.anon* %6934 to i64*
  %6935 = load i64, i64* %RBP.i466
  %6936 = sub i64 %6935, 12
  %6937 = load i64, i64* %PC.i464
  %6938 = add i64 %6937, 3
  store i64 %6938, i64* %PC.i464
  %6939 = inttoptr i64 %6936 to i32*
  %6940 = load i32, i32* %6939
  %6941 = zext i32 %6940 to i64
  store i64 %6941, i64* %RAX.i465, align 8
  store %struct.Memory* %loadMem_400e0d, %struct.Memory** %MEMORY
  %loadMem_400e10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6943 = getelementptr inbounds %struct.GPR, %struct.GPR* %6942, i32 0, i32 33
  %6944 = getelementptr inbounds %struct.Reg, %struct.Reg* %6943, i32 0, i32 0
  %PC.i462 = bitcast %union.anon* %6944 to i64*
  %6945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6946 = getelementptr inbounds %struct.GPR, %struct.GPR* %6945, i32 0, i32 1
  %6947 = getelementptr inbounds %struct.Reg, %struct.Reg* %6946, i32 0, i32 0
  %RAX.i463 = bitcast %union.anon* %6947 to i64*
  %6948 = load i64, i64* %RAX.i463
  %6949 = load i64, i64* %PC.i462
  %6950 = add i64 %6949, 3
  store i64 %6950, i64* %PC.i462
  %6951 = trunc i64 %6948 to i32
  %6952 = add i32 1, %6951
  %6953 = zext i32 %6952 to i64
  store i64 %6953, i64* %RAX.i463, align 8
  %6954 = icmp ult i32 %6952, %6951
  %6955 = icmp ult i32 %6952, 1
  %6956 = or i1 %6954, %6955
  %6957 = zext i1 %6956 to i8
  %6958 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6957, i8* %6958, align 1
  %6959 = and i32 %6952, 255
  %6960 = call i32 @llvm.ctpop.i32(i32 %6959)
  %6961 = trunc i32 %6960 to i8
  %6962 = and i8 %6961, 1
  %6963 = xor i8 %6962, 1
  %6964 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6963, i8* %6964, align 1
  %6965 = xor i64 1, %6948
  %6966 = trunc i64 %6965 to i32
  %6967 = xor i32 %6966, %6952
  %6968 = lshr i32 %6967, 4
  %6969 = trunc i32 %6968 to i8
  %6970 = and i8 %6969, 1
  %6971 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6970, i8* %6971, align 1
  %6972 = icmp eq i32 %6952, 0
  %6973 = zext i1 %6972 to i8
  %6974 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6973, i8* %6974, align 1
  %6975 = lshr i32 %6952, 31
  %6976 = trunc i32 %6975 to i8
  %6977 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6976, i8* %6977, align 1
  %6978 = lshr i32 %6951, 31
  %6979 = xor i32 %6975, %6978
  %6980 = add i32 %6979, %6975
  %6981 = icmp eq i32 %6980, 2
  %6982 = zext i1 %6981 to i8
  %6983 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6982, i8* %6983, align 1
  store %struct.Memory* %loadMem_400e10, %struct.Memory** %MEMORY
  %loadMem_400e13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6985 = getelementptr inbounds %struct.GPR, %struct.GPR* %6984, i32 0, i32 33
  %6986 = getelementptr inbounds %struct.Reg, %struct.Reg* %6985, i32 0, i32 0
  %PC.i459 = bitcast %union.anon* %6986 to i64*
  %6987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6988 = getelementptr inbounds %struct.GPR, %struct.GPR* %6987, i32 0, i32 1
  %6989 = getelementptr inbounds %struct.Reg, %struct.Reg* %6988, i32 0, i32 0
  %EAX.i460 = bitcast %union.anon* %6989 to i32*
  %6990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6991 = getelementptr inbounds %struct.GPR, %struct.GPR* %6990, i32 0, i32 15
  %6992 = getelementptr inbounds %struct.Reg, %struct.Reg* %6991, i32 0, i32 0
  %RBP.i461 = bitcast %union.anon* %6992 to i64*
  %6993 = load i64, i64* %RBP.i461
  %6994 = sub i64 %6993, 12
  %6995 = load i32, i32* %EAX.i460
  %6996 = zext i32 %6995 to i64
  %6997 = load i64, i64* %PC.i459
  %6998 = add i64 %6997, 3
  store i64 %6998, i64* %PC.i459
  %6999 = inttoptr i64 %6994 to i32*
  store i32 %6995, i32* %6999
  store %struct.Memory* %loadMem_400e13, %struct.Memory** %MEMORY
  %loadMem_400e16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7001 = getelementptr inbounds %struct.GPR, %struct.GPR* %7000, i32 0, i32 33
  %7002 = getelementptr inbounds %struct.Reg, %struct.Reg* %7001, i32 0, i32 0
  %PC.i458 = bitcast %union.anon* %7002 to i64*
  %7003 = load i64, i64* %PC.i458
  %7004 = add i64 %7003, -52
  %7005 = load i64, i64* %PC.i458
  %7006 = add i64 %7005, 5
  store i64 %7006, i64* %PC.i458
  %7007 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7004, i64* %7007, align 8
  store %struct.Memory* %loadMem_400e16, %struct.Memory** %MEMORY
  br label %block_.L_400de2

block_.L_400e1b:                                  ; preds = %block_.L_400de2
  %loadMem_400e1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7009 = getelementptr inbounds %struct.GPR, %struct.GPR* %7008, i32 0, i32 33
  %7010 = getelementptr inbounds %struct.Reg, %struct.Reg* %7009, i32 0, i32 0
  %PC.i457 = bitcast %union.anon* %7010 to i64*
  %7011 = load i64, i64* %PC.i457
  %7012 = add i64 %7011, 5
  %7013 = load i64, i64* %PC.i457
  %7014 = add i64 %7013, 5
  store i64 %7014, i64* %PC.i457
  %7015 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7012, i64* %7015, align 8
  store %struct.Memory* %loadMem_400e1b, %struct.Memory** %MEMORY
  br label %block_.L_400e20

block_.L_400e20:                                  ; preds = %block_.L_400e1b
  %loadMem_400e20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7017 = getelementptr inbounds %struct.GPR, %struct.GPR* %7016, i32 0, i32 33
  %7018 = getelementptr inbounds %struct.Reg, %struct.Reg* %7017, i32 0, i32 0
  %PC.i454 = bitcast %union.anon* %7018 to i64*
  %7019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7020 = getelementptr inbounds %struct.GPR, %struct.GPR* %7019, i32 0, i32 1
  %7021 = getelementptr inbounds %struct.Reg, %struct.Reg* %7020, i32 0, i32 0
  %RAX.i455 = bitcast %union.anon* %7021 to i64*
  %7022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7023 = getelementptr inbounds %struct.GPR, %struct.GPR* %7022, i32 0, i32 15
  %7024 = getelementptr inbounds %struct.Reg, %struct.Reg* %7023, i32 0, i32 0
  %RBP.i456 = bitcast %union.anon* %7024 to i64*
  %7025 = load i64, i64* %RBP.i456
  %7026 = sub i64 %7025, 8
  %7027 = load i64, i64* %PC.i454
  %7028 = add i64 %7027, 3
  store i64 %7028, i64* %PC.i454
  %7029 = inttoptr i64 %7026 to i32*
  %7030 = load i32, i32* %7029
  %7031 = zext i32 %7030 to i64
  store i64 %7031, i64* %RAX.i455, align 8
  store %struct.Memory* %loadMem_400e20, %struct.Memory** %MEMORY
  %loadMem_400e23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7033 = getelementptr inbounds %struct.GPR, %struct.GPR* %7032, i32 0, i32 33
  %7034 = getelementptr inbounds %struct.Reg, %struct.Reg* %7033, i32 0, i32 0
  %PC.i452 = bitcast %union.anon* %7034 to i64*
  %7035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7036 = getelementptr inbounds %struct.GPR, %struct.GPR* %7035, i32 0, i32 1
  %7037 = getelementptr inbounds %struct.Reg, %struct.Reg* %7036, i32 0, i32 0
  %RAX.i453 = bitcast %union.anon* %7037 to i64*
  %7038 = load i64, i64* %RAX.i453
  %7039 = load i64, i64* %PC.i452
  %7040 = add i64 %7039, 3
  store i64 %7040, i64* %PC.i452
  %7041 = trunc i64 %7038 to i32
  %7042 = add i32 1, %7041
  %7043 = zext i32 %7042 to i64
  store i64 %7043, i64* %RAX.i453, align 8
  %7044 = icmp ult i32 %7042, %7041
  %7045 = icmp ult i32 %7042, 1
  %7046 = or i1 %7044, %7045
  %7047 = zext i1 %7046 to i8
  %7048 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7047, i8* %7048, align 1
  %7049 = and i32 %7042, 255
  %7050 = call i32 @llvm.ctpop.i32(i32 %7049)
  %7051 = trunc i32 %7050 to i8
  %7052 = and i8 %7051, 1
  %7053 = xor i8 %7052, 1
  %7054 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7053, i8* %7054, align 1
  %7055 = xor i64 1, %7038
  %7056 = trunc i64 %7055 to i32
  %7057 = xor i32 %7056, %7042
  %7058 = lshr i32 %7057, 4
  %7059 = trunc i32 %7058 to i8
  %7060 = and i8 %7059, 1
  %7061 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7060, i8* %7061, align 1
  %7062 = icmp eq i32 %7042, 0
  %7063 = zext i1 %7062 to i8
  %7064 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7063, i8* %7064, align 1
  %7065 = lshr i32 %7042, 31
  %7066 = trunc i32 %7065 to i8
  %7067 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7066, i8* %7067, align 1
  %7068 = lshr i32 %7041, 31
  %7069 = xor i32 %7065, %7068
  %7070 = add i32 %7069, %7065
  %7071 = icmp eq i32 %7070, 2
  %7072 = zext i1 %7071 to i8
  %7073 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7072, i8* %7073, align 1
  store %struct.Memory* %loadMem_400e23, %struct.Memory** %MEMORY
  %loadMem_400e26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7075 = getelementptr inbounds %struct.GPR, %struct.GPR* %7074, i32 0, i32 33
  %7076 = getelementptr inbounds %struct.Reg, %struct.Reg* %7075, i32 0, i32 0
  %PC.i449 = bitcast %union.anon* %7076 to i64*
  %7077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7078 = getelementptr inbounds %struct.GPR, %struct.GPR* %7077, i32 0, i32 1
  %7079 = getelementptr inbounds %struct.Reg, %struct.Reg* %7078, i32 0, i32 0
  %EAX.i450 = bitcast %union.anon* %7079 to i32*
  %7080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7081 = getelementptr inbounds %struct.GPR, %struct.GPR* %7080, i32 0, i32 15
  %7082 = getelementptr inbounds %struct.Reg, %struct.Reg* %7081, i32 0, i32 0
  %RBP.i451 = bitcast %union.anon* %7082 to i64*
  %7083 = load i64, i64* %RBP.i451
  %7084 = sub i64 %7083, 8
  %7085 = load i32, i32* %EAX.i450
  %7086 = zext i32 %7085 to i64
  %7087 = load i64, i64* %PC.i449
  %7088 = add i64 %7087, 3
  store i64 %7088, i64* %PC.i449
  %7089 = inttoptr i64 %7084 to i32*
  store i32 %7085, i32* %7089
  store %struct.Memory* %loadMem_400e26, %struct.Memory** %MEMORY
  %loadMem_400e29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7091 = getelementptr inbounds %struct.GPR, %struct.GPR* %7090, i32 0, i32 33
  %7092 = getelementptr inbounds %struct.Reg, %struct.Reg* %7091, i32 0, i32 0
  %PC.i448 = bitcast %union.anon* %7092 to i64*
  %7093 = load i64, i64* %PC.i448
  %7094 = add i64 %7093, -88
  %7095 = load i64, i64* %PC.i448
  %7096 = add i64 %7095, 5
  store i64 %7096, i64* %PC.i448
  %7097 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7094, i64* %7097, align 8
  store %struct.Memory* %loadMem_400e29, %struct.Memory** %MEMORY
  br label %block_.L_400dd1

block_.L_400e2e:                                  ; preds = %block_.L_400dd1
  %loadMem_400e2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7099 = getelementptr inbounds %struct.GPR, %struct.GPR* %7098, i32 0, i32 33
  %7100 = getelementptr inbounds %struct.Reg, %struct.Reg* %7099, i32 0, i32 0
  %PC.i447 = bitcast %union.anon* %7100 to i64*
  %7101 = load i64, i64* %PC.i447
  %7102 = add i64 %7101, 5
  %7103 = load i64, i64* %PC.i447
  %7104 = add i64 %7103, 5
  store i64 %7104, i64* %PC.i447
  %7105 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7102, i64* %7105, align 8
  store %struct.Memory* %loadMem_400e2e, %struct.Memory** %MEMORY
  br label %block_.L_400e33

block_.L_400e33:                                  ; preds = %block_.L_400e2e
  %loadMem_400e33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7107 = getelementptr inbounds %struct.GPR, %struct.GPR* %7106, i32 0, i32 33
  %7108 = getelementptr inbounds %struct.Reg, %struct.Reg* %7107, i32 0, i32 0
  %PC.i444 = bitcast %union.anon* %7108 to i64*
  %7109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7110 = getelementptr inbounds %struct.GPR, %struct.GPR* %7109, i32 0, i32 1
  %7111 = getelementptr inbounds %struct.Reg, %struct.Reg* %7110, i32 0, i32 0
  %RAX.i445 = bitcast %union.anon* %7111 to i64*
  %7112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7113 = getelementptr inbounds %struct.GPR, %struct.GPR* %7112, i32 0, i32 15
  %7114 = getelementptr inbounds %struct.Reg, %struct.Reg* %7113, i32 0, i32 0
  %RBP.i446 = bitcast %union.anon* %7114 to i64*
  %7115 = load i64, i64* %RBP.i446
  %7116 = sub i64 %7115, 4
  %7117 = load i64, i64* %PC.i444
  %7118 = add i64 %7117, 3
  store i64 %7118, i64* %PC.i444
  %7119 = inttoptr i64 %7116 to i32*
  %7120 = load i32, i32* %7119
  %7121 = zext i32 %7120 to i64
  store i64 %7121, i64* %RAX.i445, align 8
  store %struct.Memory* %loadMem_400e33, %struct.Memory** %MEMORY
  %loadMem_400e36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7123 = getelementptr inbounds %struct.GPR, %struct.GPR* %7122, i32 0, i32 33
  %7124 = getelementptr inbounds %struct.Reg, %struct.Reg* %7123, i32 0, i32 0
  %PC.i442 = bitcast %union.anon* %7124 to i64*
  %7125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7126 = getelementptr inbounds %struct.GPR, %struct.GPR* %7125, i32 0, i32 1
  %7127 = getelementptr inbounds %struct.Reg, %struct.Reg* %7126, i32 0, i32 0
  %RAX.i443 = bitcast %union.anon* %7127 to i64*
  %7128 = load i64, i64* %RAX.i443
  %7129 = load i64, i64* %PC.i442
  %7130 = add i64 %7129, 3
  store i64 %7130, i64* %PC.i442
  %7131 = trunc i64 %7128 to i32
  %7132 = add i32 1, %7131
  %7133 = zext i32 %7132 to i64
  store i64 %7133, i64* %RAX.i443, align 8
  %7134 = icmp ult i32 %7132, %7131
  %7135 = icmp ult i32 %7132, 1
  %7136 = or i1 %7134, %7135
  %7137 = zext i1 %7136 to i8
  %7138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7137, i8* %7138, align 1
  %7139 = and i32 %7132, 255
  %7140 = call i32 @llvm.ctpop.i32(i32 %7139)
  %7141 = trunc i32 %7140 to i8
  %7142 = and i8 %7141, 1
  %7143 = xor i8 %7142, 1
  %7144 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7143, i8* %7144, align 1
  %7145 = xor i64 1, %7128
  %7146 = trunc i64 %7145 to i32
  %7147 = xor i32 %7146, %7132
  %7148 = lshr i32 %7147, 4
  %7149 = trunc i32 %7148 to i8
  %7150 = and i8 %7149, 1
  %7151 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7150, i8* %7151, align 1
  %7152 = icmp eq i32 %7132, 0
  %7153 = zext i1 %7152 to i8
  %7154 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7153, i8* %7154, align 1
  %7155 = lshr i32 %7132, 31
  %7156 = trunc i32 %7155 to i8
  %7157 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7156, i8* %7157, align 1
  %7158 = lshr i32 %7131, 31
  %7159 = xor i32 %7155, %7158
  %7160 = add i32 %7159, %7155
  %7161 = icmp eq i32 %7160, 2
  %7162 = zext i1 %7161 to i8
  %7163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7162, i8* %7163, align 1
  store %struct.Memory* %loadMem_400e36, %struct.Memory** %MEMORY
  %loadMem_400e39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7165 = getelementptr inbounds %struct.GPR, %struct.GPR* %7164, i32 0, i32 33
  %7166 = getelementptr inbounds %struct.Reg, %struct.Reg* %7165, i32 0, i32 0
  %PC.i439 = bitcast %union.anon* %7166 to i64*
  %7167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7168 = getelementptr inbounds %struct.GPR, %struct.GPR* %7167, i32 0, i32 1
  %7169 = getelementptr inbounds %struct.Reg, %struct.Reg* %7168, i32 0, i32 0
  %EAX.i440 = bitcast %union.anon* %7169 to i32*
  %7170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7171 = getelementptr inbounds %struct.GPR, %struct.GPR* %7170, i32 0, i32 15
  %7172 = getelementptr inbounds %struct.Reg, %struct.Reg* %7171, i32 0, i32 0
  %RBP.i441 = bitcast %union.anon* %7172 to i64*
  %7173 = load i64, i64* %RBP.i441
  %7174 = sub i64 %7173, 4
  %7175 = load i32, i32* %EAX.i440
  %7176 = zext i32 %7175 to i64
  %7177 = load i64, i64* %PC.i439
  %7178 = add i64 %7177, 3
  store i64 %7178, i64* %PC.i439
  %7179 = inttoptr i64 %7174 to i32*
  store i32 %7175, i32* %7179
  store %struct.Memory* %loadMem_400e39, %struct.Memory** %MEMORY
  %loadMem_400e3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7181 = getelementptr inbounds %struct.GPR, %struct.GPR* %7180, i32 0, i32 33
  %7182 = getelementptr inbounds %struct.Reg, %struct.Reg* %7181, i32 0, i32 0
  %PC.i438 = bitcast %union.anon* %7182 to i64*
  %7183 = load i64, i64* %PC.i438
  %7184 = add i64 %7183, -124
  %7185 = load i64, i64* %PC.i438
  %7186 = add i64 %7185, 5
  store i64 %7186, i64* %PC.i438
  %7187 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7184, i64* %7187, align 8
  store %struct.Memory* %loadMem_400e3c, %struct.Memory** %MEMORY
  br label %block_.L_400dc0

block_.L_400e41:                                  ; preds = %block_.L_400dc0
  %loadMem_400e41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7189 = getelementptr inbounds %struct.GPR, %struct.GPR* %7188, i32 0, i32 33
  %7190 = getelementptr inbounds %struct.Reg, %struct.Reg* %7189, i32 0, i32 0
  %PC.i437 = bitcast %union.anon* %7190 to i64*
  %7191 = load i64, i64* %PC.i437
  %7192 = add i64 %7191, 11
  store i64 %7192, i64* %PC.i437
  store i32 1, i32* bitcast (%G_0x61920c_type* @G_0x61920c to i32*)
  store %struct.Memory* %loadMem_400e41, %struct.Memory** %MEMORY
  %loadMem_400e4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7194 = getelementptr inbounds %struct.GPR, %struct.GPR* %7193, i32 0, i32 33
  %7195 = getelementptr inbounds %struct.Reg, %struct.Reg* %7194, i32 0, i32 0
  %PC.i436 = bitcast %union.anon* %7195 to i64*
  %7196 = load i64, i64* %PC.i436
  %7197 = add i64 %7196, 11
  store i64 %7197, i64* %PC.i436
  store i32 16, i32* bitcast (%G_0x61026c_type* @G_0x61026c to i32*)
  store %struct.Memory* %loadMem_400e4c, %struct.Memory** %MEMORY
  %loadMem_400e57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7199 = getelementptr inbounds %struct.GPR, %struct.GPR* %7198, i32 0, i32 33
  %7200 = getelementptr inbounds %struct.Reg, %struct.Reg* %7199, i32 0, i32 0
  %PC.i434 = bitcast %union.anon* %7200 to i64*
  %7201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7202 = getelementptr inbounds %struct.GPR, %struct.GPR* %7201, i32 0, i32 15
  %7203 = getelementptr inbounds %struct.Reg, %struct.Reg* %7202, i32 0, i32 0
  %RBP.i435 = bitcast %union.anon* %7203 to i64*
  %7204 = load i64, i64* %RBP.i435
  %7205 = sub i64 %7204, 4
  %7206 = load i64, i64* %PC.i434
  %7207 = add i64 %7206, 7
  store i64 %7207, i64* %PC.i434
  %7208 = inttoptr i64 %7205 to i32*
  store i32 0, i32* %7208
  store %struct.Memory* %loadMem_400e57, %struct.Memory** %MEMORY
  br label %block_.L_400e5e

block_.L_400e5e:                                  ; preds = %block_.L_400ed1, %block_.L_400e41
  %loadMem_400e5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7210 = getelementptr inbounds %struct.GPR, %struct.GPR* %7209, i32 0, i32 33
  %7211 = getelementptr inbounds %struct.Reg, %struct.Reg* %7210, i32 0, i32 0
  %PC.i432 = bitcast %union.anon* %7211 to i64*
  %7212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7213 = getelementptr inbounds %struct.GPR, %struct.GPR* %7212, i32 0, i32 15
  %7214 = getelementptr inbounds %struct.Reg, %struct.Reg* %7213, i32 0, i32 0
  %RBP.i433 = bitcast %union.anon* %7214 to i64*
  %7215 = load i64, i64* %RBP.i433
  %7216 = sub i64 %7215, 4
  %7217 = load i64, i64* %PC.i432
  %7218 = add i64 %7217, 4
  store i64 %7218, i64* %PC.i432
  %7219 = inttoptr i64 %7216 to i32*
  %7220 = load i32, i32* %7219
  %7221 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7221, align 1
  %7222 = and i32 %7220, 255
  %7223 = call i32 @llvm.ctpop.i32(i32 %7222)
  %7224 = trunc i32 %7223 to i8
  %7225 = and i8 %7224, 1
  %7226 = xor i8 %7225, 1
  %7227 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7226, i8* %7227, align 1
  %7228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7228, align 1
  %7229 = icmp eq i32 %7220, 0
  %7230 = zext i1 %7229 to i8
  %7231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7230, i8* %7231, align 1
  %7232 = lshr i32 %7220, 31
  %7233 = trunc i32 %7232 to i8
  %7234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7233, i8* %7234, align 1
  %7235 = lshr i32 %7220, 31
  %7236 = xor i32 %7232, %7235
  %7237 = add i32 %7236, %7235
  %7238 = icmp eq i32 %7237, 2
  %7239 = zext i1 %7238 to i8
  %7240 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7239, i8* %7240, align 1
  store %struct.Memory* %loadMem_400e5e, %struct.Memory** %MEMORY
  %loadMem_400e62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7242 = getelementptr inbounds %struct.GPR, %struct.GPR* %7241, i32 0, i32 33
  %7243 = getelementptr inbounds %struct.Reg, %struct.Reg* %7242, i32 0, i32 0
  %PC.i431 = bitcast %union.anon* %7243 to i64*
  %7244 = load i64, i64* %PC.i431
  %7245 = add i64 %7244, 125
  %7246 = load i64, i64* %PC.i431
  %7247 = add i64 %7246, 6
  %7248 = load i64, i64* %PC.i431
  %7249 = add i64 %7248, 6
  store i64 %7249, i64* %PC.i431
  %7250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7251 = load i8, i8* %7250, align 1
  %7252 = icmp eq i8 %7251, 0
  %7253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7254 = load i8, i8* %7253, align 1
  %7255 = icmp ne i8 %7254, 0
  %7256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %7257 = load i8, i8* %7256, align 1
  %7258 = icmp ne i8 %7257, 0
  %7259 = xor i1 %7255, %7258
  %7260 = xor i1 %7259, true
  %7261 = and i1 %7252, %7260
  %7262 = zext i1 %7261 to i8
  store i8 %7262, i8* %BRANCH_TAKEN, align 1
  %7263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7264 = select i1 %7261, i64 %7245, i64 %7247
  store i64 %7264, i64* %7263, align 8
  store %struct.Memory* %loadMem_400e62, %struct.Memory** %MEMORY
  %loadBr_400e62 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400e62 = icmp eq i8 %loadBr_400e62, 1
  br i1 %cmpBr_400e62, label %block_.L_400edf, label %block_400e68

block_400e68:                                     ; preds = %block_.L_400e5e
  %loadMem_400e68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7266 = getelementptr inbounds %struct.GPR, %struct.GPR* %7265, i32 0, i32 33
  %7267 = getelementptr inbounds %struct.Reg, %struct.Reg* %7266, i32 0, i32 0
  %PC.i429 = bitcast %union.anon* %7267 to i64*
  %7268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7269 = getelementptr inbounds %struct.GPR, %struct.GPR* %7268, i32 0, i32 15
  %7270 = getelementptr inbounds %struct.Reg, %struct.Reg* %7269, i32 0, i32 0
  %RBP.i430 = bitcast %union.anon* %7270 to i64*
  %7271 = load i64, i64* %RBP.i430
  %7272 = sub i64 %7271, 8
  %7273 = load i64, i64* %PC.i429
  %7274 = add i64 %7273, 7
  store i64 %7274, i64* %PC.i429
  %7275 = inttoptr i64 %7272 to i32*
  store i32 0, i32* %7275
  store %struct.Memory* %loadMem_400e68, %struct.Memory** %MEMORY
  br label %block_.L_400e6f

block_.L_400e6f:                                  ; preds = %block_.L_400ebe, %block_400e68
  %loadMem_400e6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7277 = getelementptr inbounds %struct.GPR, %struct.GPR* %7276, i32 0, i32 33
  %7278 = getelementptr inbounds %struct.Reg, %struct.Reg* %7277, i32 0, i32 0
  %PC.i427 = bitcast %union.anon* %7278 to i64*
  %7279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7280 = getelementptr inbounds %struct.GPR, %struct.GPR* %7279, i32 0, i32 15
  %7281 = getelementptr inbounds %struct.Reg, %struct.Reg* %7280, i32 0, i32 0
  %RBP.i428 = bitcast %union.anon* %7281 to i64*
  %7282 = load i64, i64* %RBP.i428
  %7283 = sub i64 %7282, 8
  %7284 = load i64, i64* %PC.i427
  %7285 = add i64 %7284, 4
  store i64 %7285, i64* %PC.i427
  %7286 = inttoptr i64 %7283 to i32*
  %7287 = load i32, i32* %7286
  %7288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7288, align 1
  %7289 = and i32 %7287, 255
  %7290 = call i32 @llvm.ctpop.i32(i32 %7289)
  %7291 = trunc i32 %7290 to i8
  %7292 = and i8 %7291, 1
  %7293 = xor i8 %7292, 1
  %7294 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7293, i8* %7294, align 1
  %7295 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7295, align 1
  %7296 = icmp eq i32 %7287, 0
  %7297 = zext i1 %7296 to i8
  %7298 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7297, i8* %7298, align 1
  %7299 = lshr i32 %7287, 31
  %7300 = trunc i32 %7299 to i8
  %7301 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7300, i8* %7301, align 1
  %7302 = lshr i32 %7287, 31
  %7303 = xor i32 %7299, %7302
  %7304 = add i32 %7303, %7302
  %7305 = icmp eq i32 %7304, 2
  %7306 = zext i1 %7305 to i8
  %7307 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7306, i8* %7307, align 1
  store %struct.Memory* %loadMem_400e6f, %struct.Memory** %MEMORY
  %loadMem_400e73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7309 = getelementptr inbounds %struct.GPR, %struct.GPR* %7308, i32 0, i32 33
  %7310 = getelementptr inbounds %struct.Reg, %struct.Reg* %7309, i32 0, i32 0
  %PC.i426 = bitcast %union.anon* %7310 to i64*
  %7311 = load i64, i64* %PC.i426
  %7312 = add i64 %7311, 89
  %7313 = load i64, i64* %PC.i426
  %7314 = add i64 %7313, 6
  %7315 = load i64, i64* %PC.i426
  %7316 = add i64 %7315, 6
  store i64 %7316, i64* %PC.i426
  %7317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7318 = load i8, i8* %7317, align 1
  %7319 = icmp eq i8 %7318, 0
  %7320 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7321 = load i8, i8* %7320, align 1
  %7322 = icmp ne i8 %7321, 0
  %7323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %7324 = load i8, i8* %7323, align 1
  %7325 = icmp ne i8 %7324, 0
  %7326 = xor i1 %7322, %7325
  %7327 = xor i1 %7326, true
  %7328 = and i1 %7319, %7327
  %7329 = zext i1 %7328 to i8
  store i8 %7329, i8* %BRANCH_TAKEN, align 1
  %7330 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7331 = select i1 %7328, i64 %7312, i64 %7314
  store i64 %7331, i64* %7330, align 8
  store %struct.Memory* %loadMem_400e73, %struct.Memory** %MEMORY
  %loadBr_400e73 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400e73 = icmp eq i8 %loadBr_400e73, 1
  br i1 %cmpBr_400e73, label %block_.L_400ecc, label %block_400e79

block_400e79:                                     ; preds = %block_.L_400e6f
  %loadMem_400e79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7333 = getelementptr inbounds %struct.GPR, %struct.GPR* %7332, i32 0, i32 33
  %7334 = getelementptr inbounds %struct.Reg, %struct.Reg* %7333, i32 0, i32 0
  %PC.i424 = bitcast %union.anon* %7334 to i64*
  %7335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7336 = getelementptr inbounds %struct.GPR, %struct.GPR* %7335, i32 0, i32 15
  %7337 = getelementptr inbounds %struct.Reg, %struct.Reg* %7336, i32 0, i32 0
  %RBP.i425 = bitcast %union.anon* %7337 to i64*
  %7338 = load i64, i64* %RBP.i425
  %7339 = sub i64 %7338, 12
  %7340 = load i64, i64* %PC.i424
  %7341 = add i64 %7340, 7
  store i64 %7341, i64* %PC.i424
  %7342 = inttoptr i64 %7339 to i32*
  store i32 0, i32* %7342
  store %struct.Memory* %loadMem_400e79, %struct.Memory** %MEMORY
  br label %block_.L_400e80

block_.L_400e80:                                  ; preds = %block_400e8a, %block_400e79
  %loadMem_400e80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7344 = getelementptr inbounds %struct.GPR, %struct.GPR* %7343, i32 0, i32 33
  %7345 = getelementptr inbounds %struct.Reg, %struct.Reg* %7344, i32 0, i32 0
  %PC.i422 = bitcast %union.anon* %7345 to i64*
  %7346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7347 = getelementptr inbounds %struct.GPR, %struct.GPR* %7346, i32 0, i32 15
  %7348 = getelementptr inbounds %struct.Reg, %struct.Reg* %7347, i32 0, i32 0
  %RBP.i423 = bitcast %union.anon* %7348 to i64*
  %7349 = load i64, i64* %RBP.i423
  %7350 = sub i64 %7349, 12
  %7351 = load i64, i64* %PC.i422
  %7352 = add i64 %7351, 4
  store i64 %7352, i64* %PC.i422
  %7353 = inttoptr i64 %7350 to i32*
  %7354 = load i32, i32* %7353
  %7355 = sub i32 %7354, 2
  %7356 = icmp ult i32 %7354, 2
  %7357 = zext i1 %7356 to i8
  %7358 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7357, i8* %7358, align 1
  %7359 = and i32 %7355, 255
  %7360 = call i32 @llvm.ctpop.i32(i32 %7359)
  %7361 = trunc i32 %7360 to i8
  %7362 = and i8 %7361, 1
  %7363 = xor i8 %7362, 1
  %7364 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7363, i8* %7364, align 1
  %7365 = xor i32 %7354, 2
  %7366 = xor i32 %7365, %7355
  %7367 = lshr i32 %7366, 4
  %7368 = trunc i32 %7367 to i8
  %7369 = and i8 %7368, 1
  %7370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7369, i8* %7370, align 1
  %7371 = icmp eq i32 %7355, 0
  %7372 = zext i1 %7371 to i8
  %7373 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7372, i8* %7373, align 1
  %7374 = lshr i32 %7355, 31
  %7375 = trunc i32 %7374 to i8
  %7376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7375, i8* %7376, align 1
  %7377 = lshr i32 %7354, 31
  %7378 = xor i32 %7374, %7377
  %7379 = add i32 %7378, %7377
  %7380 = icmp eq i32 %7379, 2
  %7381 = zext i1 %7380 to i8
  %7382 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7381, i8* %7382, align 1
  store %struct.Memory* %loadMem_400e80, %struct.Memory** %MEMORY
  %loadMem_400e84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7384 = getelementptr inbounds %struct.GPR, %struct.GPR* %7383, i32 0, i32 33
  %7385 = getelementptr inbounds %struct.Reg, %struct.Reg* %7384, i32 0, i32 0
  %PC.i421 = bitcast %union.anon* %7385 to i64*
  %7386 = load i64, i64* %PC.i421
  %7387 = add i64 %7386, 53
  %7388 = load i64, i64* %PC.i421
  %7389 = add i64 %7388, 6
  %7390 = load i64, i64* %PC.i421
  %7391 = add i64 %7390, 6
  store i64 %7391, i64* %PC.i421
  %7392 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7393 = load i8, i8* %7392, align 1
  %7394 = icmp eq i8 %7393, 0
  %7395 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7396 = load i8, i8* %7395, align 1
  %7397 = icmp ne i8 %7396, 0
  %7398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %7399 = load i8, i8* %7398, align 1
  %7400 = icmp ne i8 %7399, 0
  %7401 = xor i1 %7397, %7400
  %7402 = xor i1 %7401, true
  %7403 = and i1 %7394, %7402
  %7404 = zext i1 %7403 to i8
  store i8 %7404, i8* %BRANCH_TAKEN, align 1
  %7405 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7406 = select i1 %7403, i64 %7387, i64 %7389
  store i64 %7406, i64* %7405, align 8
  store %struct.Memory* %loadMem_400e84, %struct.Memory** %MEMORY
  %loadBr_400e84 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400e84 = icmp eq i8 %loadBr_400e84, 1
  br i1 %cmpBr_400e84, label %block_.L_400eb9, label %block_400e8a

block_400e8a:                                     ; preds = %block_.L_400e80
  %loadMem_400e8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7408 = getelementptr inbounds %struct.GPR, %struct.GPR* %7407, i32 0, i32 33
  %7409 = getelementptr inbounds %struct.Reg, %struct.Reg* %7408, i32 0, i32 0
  %PC.i418 = bitcast %union.anon* %7409 to i64*
  %7410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7411 = getelementptr inbounds %struct.GPR, %struct.GPR* %7410, i32 0, i32 1
  %7412 = getelementptr inbounds %struct.Reg, %struct.Reg* %7411, i32 0, i32 0
  %RAX.i419 = bitcast %union.anon* %7412 to i64*
  %7413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7414 = getelementptr inbounds %struct.GPR, %struct.GPR* %7413, i32 0, i32 15
  %7415 = getelementptr inbounds %struct.Reg, %struct.Reg* %7414, i32 0, i32 0
  %RBP.i420 = bitcast %union.anon* %7415 to i64*
  %7416 = load i64, i64* %RBP.i420
  %7417 = sub i64 %7416, 4
  %7418 = load i64, i64* %PC.i418
  %7419 = add i64 %7418, 3
  store i64 %7419, i64* %PC.i418
  %7420 = inttoptr i64 %7417 to i32*
  %7421 = load i32, i32* %7420
  %7422 = zext i32 %7421 to i64
  store i64 %7422, i64* %RAX.i419, align 8
  store %struct.Memory* %loadMem_400e8a, %struct.Memory** %MEMORY
  %loadMem_400e8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7424 = getelementptr inbounds %struct.GPR, %struct.GPR* %7423, i32 0, i32 33
  %7425 = getelementptr inbounds %struct.Reg, %struct.Reg* %7424, i32 0, i32 0
  %PC.i415 = bitcast %union.anon* %7425 to i64*
  %7426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7427 = getelementptr inbounds %struct.GPR, %struct.GPR* %7426, i32 0, i32 5
  %7428 = getelementptr inbounds %struct.Reg, %struct.Reg* %7427, i32 0, i32 0
  %RCX.i416 = bitcast %union.anon* %7428 to i64*
  %7429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7430 = getelementptr inbounds %struct.GPR, %struct.GPR* %7429, i32 0, i32 15
  %7431 = getelementptr inbounds %struct.Reg, %struct.Reg* %7430, i32 0, i32 0
  %RBP.i417 = bitcast %union.anon* %7431 to i64*
  %7432 = load i64, i64* %RBP.i417
  %7433 = sub i64 %7432, 8
  %7434 = load i64, i64* %PC.i415
  %7435 = add i64 %7434, 3
  store i64 %7435, i64* %PC.i415
  %7436 = inttoptr i64 %7433 to i32*
  %7437 = load i32, i32* %7436
  %7438 = zext i32 %7437 to i64
  store i64 %7438, i64* %RCX.i416, align 8
  store %struct.Memory* %loadMem_400e8d, %struct.Memory** %MEMORY
  %loadMem_400e90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7440 = getelementptr inbounds %struct.GPR, %struct.GPR* %7439, i32 0, i32 33
  %7441 = getelementptr inbounds %struct.Reg, %struct.Reg* %7440, i32 0, i32 0
  %PC.i412 = bitcast %union.anon* %7441 to i64*
  %7442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7443 = getelementptr inbounds %struct.GPR, %struct.GPR* %7442, i32 0, i32 7
  %7444 = getelementptr inbounds %struct.Reg, %struct.Reg* %7443, i32 0, i32 0
  %RDX.i413 = bitcast %union.anon* %7444 to i64*
  %7445 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7446 = getelementptr inbounds %struct.GPR, %struct.GPR* %7445, i32 0, i32 15
  %7447 = getelementptr inbounds %struct.Reg, %struct.Reg* %7446, i32 0, i32 0
  %RBP.i414 = bitcast %union.anon* %7447 to i64*
  %7448 = load i64, i64* %RBP.i414
  %7449 = sub i64 %7448, 12
  %7450 = load i64, i64* %PC.i412
  %7451 = add i64 %7450, 3
  store i64 %7451, i64* %PC.i412
  %7452 = inttoptr i64 %7449 to i32*
  %7453 = load i32, i32* %7452
  %7454 = zext i32 %7453 to i64
  store i64 %7454, i64* %RDX.i413, align 8
  store %struct.Memory* %loadMem_400e90, %struct.Memory** %MEMORY
  %loadMem_400e93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7456 = getelementptr inbounds %struct.GPR, %struct.GPR* %7455, i32 0, i32 33
  %7457 = getelementptr inbounds %struct.Reg, %struct.Reg* %7456, i32 0, i32 0
  %PC.i410 = bitcast %union.anon* %7457 to i64*
  %7458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7459 = getelementptr inbounds %struct.GPR, %struct.GPR* %7458, i32 0, i32 7
  %7460 = getelementptr inbounds %struct.Reg, %struct.Reg* %7459, i32 0, i32 0
  %RDX.i411 = bitcast %union.anon* %7460 to i64*
  %7461 = load i64, i64* %RDX.i411
  %7462 = load i64, i64* %PC.i410
  %7463 = add i64 %7462, 3
  store i64 %7463, i64* %PC.i410
  %7464 = and i64 %7461, 4294967295
  %7465 = shl i64 %7464, 2
  %7466 = trunc i64 %7465 to i32
  %7467 = icmp slt i32 %7466, 0
  %7468 = shl i32 %7466, 1
  %7469 = zext i32 %7468 to i64
  store i64 %7469, i64* %RDX.i411, align 8
  %7470 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %7471 = zext i1 %7467 to i8
  store i8 %7471, i8* %7470, align 1
  %7472 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %7473 = and i32 %7468, 254
  %7474 = call i32 @llvm.ctpop.i32(i32 %7473)
  %7475 = trunc i32 %7474 to i8
  %7476 = and i8 %7475, 1
  %7477 = xor i8 %7476, 1
  store i8 %7477, i8* %7472, align 1
  %7478 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7478, align 1
  %7479 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7480 = icmp eq i32 %7468, 0
  %7481 = zext i1 %7480 to i8
  store i8 %7481, i8* %7479, align 1
  %7482 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7483 = lshr i32 %7468, 31
  %7484 = trunc i32 %7483 to i8
  store i8 %7484, i8* %7482, align 1
  %7485 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7485, align 1
  store %struct.Memory* %loadMem_400e93, %struct.Memory** %MEMORY
  %loadMem_400e96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7487 = getelementptr inbounds %struct.GPR, %struct.GPR* %7486, i32 0, i32 33
  %7488 = getelementptr inbounds %struct.Reg, %struct.Reg* %7487, i32 0, i32 0
  %PC.i407 = bitcast %union.anon* %7488 to i64*
  %7489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7490 = getelementptr inbounds %struct.GPR, %struct.GPR* %7489, i32 0, i32 7
  %7491 = getelementptr inbounds %struct.Reg, %struct.Reg* %7490, i32 0, i32 0
  %EDX.i408 = bitcast %union.anon* %7491 to i32*
  %7492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7493 = getelementptr inbounds %struct.GPR, %struct.GPR* %7492, i32 0, i32 5
  %7494 = getelementptr inbounds %struct.Reg, %struct.Reg* %7493, i32 0, i32 0
  %RCX.i409 = bitcast %union.anon* %7494 to i64*
  %7495 = load i64, i64* %RCX.i409
  %7496 = load i32, i32* %EDX.i408
  %7497 = zext i32 %7496 to i64
  %7498 = load i64, i64* %PC.i407
  %7499 = add i64 %7498, 2
  store i64 %7499, i64* %PC.i407
  %7500 = trunc i64 %7495 to i32
  %7501 = add i32 %7496, %7500
  %7502 = zext i32 %7501 to i64
  store i64 %7502, i64* %RCX.i409, align 8
  %7503 = icmp ult i32 %7501, %7500
  %7504 = icmp ult i32 %7501, %7496
  %7505 = or i1 %7503, %7504
  %7506 = zext i1 %7505 to i8
  %7507 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7506, i8* %7507, align 1
  %7508 = and i32 %7501, 255
  %7509 = call i32 @llvm.ctpop.i32(i32 %7508)
  %7510 = trunc i32 %7509 to i8
  %7511 = and i8 %7510, 1
  %7512 = xor i8 %7511, 1
  %7513 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7512, i8* %7513, align 1
  %7514 = xor i64 %7497, %7495
  %7515 = trunc i64 %7514 to i32
  %7516 = xor i32 %7515, %7501
  %7517 = lshr i32 %7516, 4
  %7518 = trunc i32 %7517 to i8
  %7519 = and i8 %7518, 1
  %7520 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7519, i8* %7520, align 1
  %7521 = icmp eq i32 %7501, 0
  %7522 = zext i1 %7521 to i8
  %7523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7522, i8* %7523, align 1
  %7524 = lshr i32 %7501, 31
  %7525 = trunc i32 %7524 to i8
  %7526 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7525, i8* %7526, align 1
  %7527 = lshr i32 %7500, 31
  %7528 = lshr i32 %7496, 31
  %7529 = xor i32 %7524, %7527
  %7530 = xor i32 %7524, %7528
  %7531 = add i32 %7529, %7530
  %7532 = icmp eq i32 %7531, 2
  %7533 = zext i1 %7532 to i8
  %7534 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7533, i8* %7534, align 1
  store %struct.Memory* %loadMem_400e96, %struct.Memory** %MEMORY
  %loadMem_400e98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7536 = getelementptr inbounds %struct.GPR, %struct.GPR* %7535, i32 0, i32 33
  %7537 = getelementptr inbounds %struct.Reg, %struct.Reg* %7536, i32 0, i32 0
  %PC.i405 = bitcast %union.anon* %7537 to i64*
  %7538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7539 = getelementptr inbounds %struct.GPR, %struct.GPR* %7538, i32 0, i32 5
  %7540 = getelementptr inbounds %struct.Reg, %struct.Reg* %7539, i32 0, i32 0
  %RCX.i406 = bitcast %union.anon* %7540 to i64*
  %7541 = load i64, i64* %RCX.i406
  %7542 = load i64, i64* %PC.i405
  %7543 = add i64 %7542, 3
  store i64 %7543, i64* %PC.i405
  %7544 = and i64 %7541, 4294967295
  %7545 = shl i64 %7544, 2
  %7546 = trunc i64 %7545 to i32
  %7547 = icmp slt i32 %7546, 0
  %7548 = shl i32 %7546, 1
  %7549 = zext i32 %7548 to i64
  store i64 %7549, i64* %RCX.i406, align 8
  %7550 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %7551 = zext i1 %7547 to i8
  store i8 %7551, i8* %7550, align 1
  %7552 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %7553 = and i32 %7548, 254
  %7554 = call i32 @llvm.ctpop.i32(i32 %7553)
  %7555 = trunc i32 %7554 to i8
  %7556 = and i8 %7555, 1
  %7557 = xor i8 %7556, 1
  store i8 %7557, i8* %7552, align 1
  %7558 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7558, align 1
  %7559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7560 = icmp eq i32 %7548, 0
  %7561 = zext i1 %7560 to i8
  store i8 %7561, i8* %7559, align 1
  %7562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7563 = lshr i32 %7548, 31
  %7564 = trunc i32 %7563 to i8
  store i8 %7564, i8* %7562, align 1
  %7565 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7565, align 1
  store %struct.Memory* %loadMem_400e98, %struct.Memory** %MEMORY
  %loadMem_400e9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7567 = getelementptr inbounds %struct.GPR, %struct.GPR* %7566, i32 0, i32 33
  %7568 = getelementptr inbounds %struct.Reg, %struct.Reg* %7567, i32 0, i32 0
  %PC.i402 = bitcast %union.anon* %7568 to i64*
  %7569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7570 = getelementptr inbounds %struct.GPR, %struct.GPR* %7569, i32 0, i32 5
  %7571 = getelementptr inbounds %struct.Reg, %struct.Reg* %7570, i32 0, i32 0
  %ECX.i403 = bitcast %union.anon* %7571 to i32*
  %7572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7573 = getelementptr inbounds %struct.GPR, %struct.GPR* %7572, i32 0, i32 1
  %7574 = getelementptr inbounds %struct.Reg, %struct.Reg* %7573, i32 0, i32 0
  %RAX.i404 = bitcast %union.anon* %7574 to i64*
  %7575 = load i64, i64* %RAX.i404
  %7576 = load i32, i32* %ECX.i403
  %7577 = zext i32 %7576 to i64
  %7578 = load i64, i64* %PC.i402
  %7579 = add i64 %7578, 2
  store i64 %7579, i64* %PC.i402
  %7580 = trunc i64 %7575 to i32
  %7581 = add i32 %7576, %7580
  %7582 = zext i32 %7581 to i64
  store i64 %7582, i64* %RAX.i404, align 8
  %7583 = icmp ult i32 %7581, %7580
  %7584 = icmp ult i32 %7581, %7576
  %7585 = or i1 %7583, %7584
  %7586 = zext i1 %7585 to i8
  %7587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7586, i8* %7587, align 1
  %7588 = and i32 %7581, 255
  %7589 = call i32 @llvm.ctpop.i32(i32 %7588)
  %7590 = trunc i32 %7589 to i8
  %7591 = and i8 %7590, 1
  %7592 = xor i8 %7591, 1
  %7593 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7592, i8* %7593, align 1
  %7594 = xor i64 %7577, %7575
  %7595 = trunc i64 %7594 to i32
  %7596 = xor i32 %7595, %7581
  %7597 = lshr i32 %7596, 4
  %7598 = trunc i32 %7597 to i8
  %7599 = and i8 %7598, 1
  %7600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7599, i8* %7600, align 1
  %7601 = icmp eq i32 %7581, 0
  %7602 = zext i1 %7601 to i8
  %7603 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7602, i8* %7603, align 1
  %7604 = lshr i32 %7581, 31
  %7605 = trunc i32 %7604 to i8
  %7606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7605, i8* %7606, align 1
  %7607 = lshr i32 %7580, 31
  %7608 = lshr i32 %7576, 31
  %7609 = xor i32 %7604, %7607
  %7610 = xor i32 %7604, %7608
  %7611 = add i32 %7609, %7610
  %7612 = icmp eq i32 %7611, 2
  %7613 = zext i1 %7612 to i8
  %7614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7613, i8* %7614, align 1
  store %struct.Memory* %loadMem_400e9b, %struct.Memory** %MEMORY
  %loadMem_400e9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7616 = getelementptr inbounds %struct.GPR, %struct.GPR* %7615, i32 0, i32 33
  %7617 = getelementptr inbounds %struct.Reg, %struct.Reg* %7616, i32 0, i32 0
  %PC.i399 = bitcast %union.anon* %7617 to i64*
  %7618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7619 = getelementptr inbounds %struct.GPR, %struct.GPR* %7618, i32 0, i32 1
  %7620 = getelementptr inbounds %struct.Reg, %struct.Reg* %7619, i32 0, i32 0
  %EAX.i400 = bitcast %union.anon* %7620 to i32*
  %7621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7622 = getelementptr inbounds %struct.GPR, %struct.GPR* %7621, i32 0, i32 9
  %7623 = getelementptr inbounds %struct.Reg, %struct.Reg* %7622, i32 0, i32 0
  %RSI.i401 = bitcast %union.anon* %7623 to i64*
  %7624 = load i32, i32* %EAX.i400
  %7625 = zext i32 %7624 to i64
  %7626 = load i64, i64* %PC.i399
  %7627 = add i64 %7626, 3
  store i64 %7627, i64* %PC.i399
  %7628 = shl i64 %7625, 32
  %7629 = ashr exact i64 %7628, 32
  store i64 %7629, i64* %RSI.i401, align 8
  store %struct.Memory* %loadMem_400e9d, %struct.Memory** %MEMORY
  %loadMem_400ea0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7631 = getelementptr inbounds %struct.GPR, %struct.GPR* %7630, i32 0, i32 33
  %7632 = getelementptr inbounds %struct.Reg, %struct.Reg* %7631, i32 0, i32 0
  %PC.i397 = bitcast %union.anon* %7632 to i64*
  %7633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7634 = getelementptr inbounds %struct.GPR, %struct.GPR* %7633, i32 0, i32 9
  %7635 = getelementptr inbounds %struct.Reg, %struct.Reg* %7634, i32 0, i32 0
  %RSI.i398 = bitcast %union.anon* %7635 to i64*
  %7636 = load i64, i64* %RSI.i398
  %7637 = mul i64 %7636, 4
  %7638 = add i64 %7637, ptrtoint (%G_0x607aa0___rsi_4__type* @G_0x607aa0___rsi_4_ to i64)
  %7639 = load i64, i64* %PC.i397
  %7640 = add i64 %7639, 11
  store i64 %7640, i64* %PC.i397
  %7641 = inttoptr i64 %7638 to i32*
  store i32 1, i32* %7641
  store %struct.Memory* %loadMem_400ea0, %struct.Memory** %MEMORY
  %loadMem_400eab = load %struct.Memory*, %struct.Memory** %MEMORY
  %7642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7643 = getelementptr inbounds %struct.GPR, %struct.GPR* %7642, i32 0, i32 33
  %7644 = getelementptr inbounds %struct.Reg, %struct.Reg* %7643, i32 0, i32 0
  %PC.i394 = bitcast %union.anon* %7644 to i64*
  %7645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7646 = getelementptr inbounds %struct.GPR, %struct.GPR* %7645, i32 0, i32 1
  %7647 = getelementptr inbounds %struct.Reg, %struct.Reg* %7646, i32 0, i32 0
  %RAX.i395 = bitcast %union.anon* %7647 to i64*
  %7648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7649 = getelementptr inbounds %struct.GPR, %struct.GPR* %7648, i32 0, i32 15
  %7650 = getelementptr inbounds %struct.Reg, %struct.Reg* %7649, i32 0, i32 0
  %RBP.i396 = bitcast %union.anon* %7650 to i64*
  %7651 = load i64, i64* %RBP.i396
  %7652 = sub i64 %7651, 12
  %7653 = load i64, i64* %PC.i394
  %7654 = add i64 %7653, 3
  store i64 %7654, i64* %PC.i394
  %7655 = inttoptr i64 %7652 to i32*
  %7656 = load i32, i32* %7655
  %7657 = zext i32 %7656 to i64
  store i64 %7657, i64* %RAX.i395, align 8
  store %struct.Memory* %loadMem_400eab, %struct.Memory** %MEMORY
  %loadMem_400eae = load %struct.Memory*, %struct.Memory** %MEMORY
  %7658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7659 = getelementptr inbounds %struct.GPR, %struct.GPR* %7658, i32 0, i32 33
  %7660 = getelementptr inbounds %struct.Reg, %struct.Reg* %7659, i32 0, i32 0
  %PC.i392 = bitcast %union.anon* %7660 to i64*
  %7661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7662 = getelementptr inbounds %struct.GPR, %struct.GPR* %7661, i32 0, i32 1
  %7663 = getelementptr inbounds %struct.Reg, %struct.Reg* %7662, i32 0, i32 0
  %RAX.i393 = bitcast %union.anon* %7663 to i64*
  %7664 = load i64, i64* %RAX.i393
  %7665 = load i64, i64* %PC.i392
  %7666 = add i64 %7665, 3
  store i64 %7666, i64* %PC.i392
  %7667 = trunc i64 %7664 to i32
  %7668 = add i32 1, %7667
  %7669 = zext i32 %7668 to i64
  store i64 %7669, i64* %RAX.i393, align 8
  %7670 = icmp ult i32 %7668, %7667
  %7671 = icmp ult i32 %7668, 1
  %7672 = or i1 %7670, %7671
  %7673 = zext i1 %7672 to i8
  %7674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7673, i8* %7674, align 1
  %7675 = and i32 %7668, 255
  %7676 = call i32 @llvm.ctpop.i32(i32 %7675)
  %7677 = trunc i32 %7676 to i8
  %7678 = and i8 %7677, 1
  %7679 = xor i8 %7678, 1
  %7680 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7679, i8* %7680, align 1
  %7681 = xor i64 1, %7664
  %7682 = trunc i64 %7681 to i32
  %7683 = xor i32 %7682, %7668
  %7684 = lshr i32 %7683, 4
  %7685 = trunc i32 %7684 to i8
  %7686 = and i8 %7685, 1
  %7687 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7686, i8* %7687, align 1
  %7688 = icmp eq i32 %7668, 0
  %7689 = zext i1 %7688 to i8
  %7690 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7689, i8* %7690, align 1
  %7691 = lshr i32 %7668, 31
  %7692 = trunc i32 %7691 to i8
  %7693 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7692, i8* %7693, align 1
  %7694 = lshr i32 %7667, 31
  %7695 = xor i32 %7691, %7694
  %7696 = add i32 %7695, %7691
  %7697 = icmp eq i32 %7696, 2
  %7698 = zext i1 %7697 to i8
  %7699 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7698, i8* %7699, align 1
  store %struct.Memory* %loadMem_400eae, %struct.Memory** %MEMORY
  %loadMem_400eb1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7701 = getelementptr inbounds %struct.GPR, %struct.GPR* %7700, i32 0, i32 33
  %7702 = getelementptr inbounds %struct.Reg, %struct.Reg* %7701, i32 0, i32 0
  %PC.i389 = bitcast %union.anon* %7702 to i64*
  %7703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7704 = getelementptr inbounds %struct.GPR, %struct.GPR* %7703, i32 0, i32 1
  %7705 = getelementptr inbounds %struct.Reg, %struct.Reg* %7704, i32 0, i32 0
  %EAX.i390 = bitcast %union.anon* %7705 to i32*
  %7706 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7707 = getelementptr inbounds %struct.GPR, %struct.GPR* %7706, i32 0, i32 15
  %7708 = getelementptr inbounds %struct.Reg, %struct.Reg* %7707, i32 0, i32 0
  %RBP.i391 = bitcast %union.anon* %7708 to i64*
  %7709 = load i64, i64* %RBP.i391
  %7710 = sub i64 %7709, 12
  %7711 = load i32, i32* %EAX.i390
  %7712 = zext i32 %7711 to i64
  %7713 = load i64, i64* %PC.i389
  %7714 = add i64 %7713, 3
  store i64 %7714, i64* %PC.i389
  %7715 = inttoptr i64 %7710 to i32*
  store i32 %7711, i32* %7715
  store %struct.Memory* %loadMem_400eb1, %struct.Memory** %MEMORY
  %loadMem_400eb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7717 = getelementptr inbounds %struct.GPR, %struct.GPR* %7716, i32 0, i32 33
  %7718 = getelementptr inbounds %struct.Reg, %struct.Reg* %7717, i32 0, i32 0
  %PC.i388 = bitcast %union.anon* %7718 to i64*
  %7719 = load i64, i64* %PC.i388
  %7720 = add i64 %7719, -52
  %7721 = load i64, i64* %PC.i388
  %7722 = add i64 %7721, 5
  store i64 %7722, i64* %PC.i388
  %7723 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7720, i64* %7723, align 8
  store %struct.Memory* %loadMem_400eb4, %struct.Memory** %MEMORY
  br label %block_.L_400e80

block_.L_400eb9:                                  ; preds = %block_.L_400e80
  %loadMem_400eb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7725 = getelementptr inbounds %struct.GPR, %struct.GPR* %7724, i32 0, i32 33
  %7726 = getelementptr inbounds %struct.Reg, %struct.Reg* %7725, i32 0, i32 0
  %PC.i387 = bitcast %union.anon* %7726 to i64*
  %7727 = load i64, i64* %PC.i387
  %7728 = add i64 %7727, 5
  %7729 = load i64, i64* %PC.i387
  %7730 = add i64 %7729, 5
  store i64 %7730, i64* %PC.i387
  %7731 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7728, i64* %7731, align 8
  store %struct.Memory* %loadMem_400eb9, %struct.Memory** %MEMORY
  br label %block_.L_400ebe

block_.L_400ebe:                                  ; preds = %block_.L_400eb9
  %loadMem_400ebe = load %struct.Memory*, %struct.Memory** %MEMORY
  %7732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7733 = getelementptr inbounds %struct.GPR, %struct.GPR* %7732, i32 0, i32 33
  %7734 = getelementptr inbounds %struct.Reg, %struct.Reg* %7733, i32 0, i32 0
  %PC.i384 = bitcast %union.anon* %7734 to i64*
  %7735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7736 = getelementptr inbounds %struct.GPR, %struct.GPR* %7735, i32 0, i32 1
  %7737 = getelementptr inbounds %struct.Reg, %struct.Reg* %7736, i32 0, i32 0
  %RAX.i385 = bitcast %union.anon* %7737 to i64*
  %7738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7739 = getelementptr inbounds %struct.GPR, %struct.GPR* %7738, i32 0, i32 15
  %7740 = getelementptr inbounds %struct.Reg, %struct.Reg* %7739, i32 0, i32 0
  %RBP.i386 = bitcast %union.anon* %7740 to i64*
  %7741 = load i64, i64* %RBP.i386
  %7742 = sub i64 %7741, 8
  %7743 = load i64, i64* %PC.i384
  %7744 = add i64 %7743, 3
  store i64 %7744, i64* %PC.i384
  %7745 = inttoptr i64 %7742 to i32*
  %7746 = load i32, i32* %7745
  %7747 = zext i32 %7746 to i64
  store i64 %7747, i64* %RAX.i385, align 8
  store %struct.Memory* %loadMem_400ebe, %struct.Memory** %MEMORY
  %loadMem_400ec1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7748 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7749 = getelementptr inbounds %struct.GPR, %struct.GPR* %7748, i32 0, i32 33
  %7750 = getelementptr inbounds %struct.Reg, %struct.Reg* %7749, i32 0, i32 0
  %PC.i382 = bitcast %union.anon* %7750 to i64*
  %7751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7752 = getelementptr inbounds %struct.GPR, %struct.GPR* %7751, i32 0, i32 1
  %7753 = getelementptr inbounds %struct.Reg, %struct.Reg* %7752, i32 0, i32 0
  %RAX.i383 = bitcast %union.anon* %7753 to i64*
  %7754 = load i64, i64* %RAX.i383
  %7755 = load i64, i64* %PC.i382
  %7756 = add i64 %7755, 3
  store i64 %7756, i64* %PC.i382
  %7757 = trunc i64 %7754 to i32
  %7758 = add i32 1, %7757
  %7759 = zext i32 %7758 to i64
  store i64 %7759, i64* %RAX.i383, align 8
  %7760 = icmp ult i32 %7758, %7757
  %7761 = icmp ult i32 %7758, 1
  %7762 = or i1 %7760, %7761
  %7763 = zext i1 %7762 to i8
  %7764 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7763, i8* %7764, align 1
  %7765 = and i32 %7758, 255
  %7766 = call i32 @llvm.ctpop.i32(i32 %7765)
  %7767 = trunc i32 %7766 to i8
  %7768 = and i8 %7767, 1
  %7769 = xor i8 %7768, 1
  %7770 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7769, i8* %7770, align 1
  %7771 = xor i64 1, %7754
  %7772 = trunc i64 %7771 to i32
  %7773 = xor i32 %7772, %7758
  %7774 = lshr i32 %7773, 4
  %7775 = trunc i32 %7774 to i8
  %7776 = and i8 %7775, 1
  %7777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7776, i8* %7777, align 1
  %7778 = icmp eq i32 %7758, 0
  %7779 = zext i1 %7778 to i8
  %7780 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7779, i8* %7780, align 1
  %7781 = lshr i32 %7758, 31
  %7782 = trunc i32 %7781 to i8
  %7783 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7782, i8* %7783, align 1
  %7784 = lshr i32 %7757, 31
  %7785 = xor i32 %7781, %7784
  %7786 = add i32 %7785, %7781
  %7787 = icmp eq i32 %7786, 2
  %7788 = zext i1 %7787 to i8
  %7789 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7788, i8* %7789, align 1
  store %struct.Memory* %loadMem_400ec1, %struct.Memory** %MEMORY
  %loadMem_400ec4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7790 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7791 = getelementptr inbounds %struct.GPR, %struct.GPR* %7790, i32 0, i32 33
  %7792 = getelementptr inbounds %struct.Reg, %struct.Reg* %7791, i32 0, i32 0
  %PC.i379 = bitcast %union.anon* %7792 to i64*
  %7793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7794 = getelementptr inbounds %struct.GPR, %struct.GPR* %7793, i32 0, i32 1
  %7795 = getelementptr inbounds %struct.Reg, %struct.Reg* %7794, i32 0, i32 0
  %EAX.i380 = bitcast %union.anon* %7795 to i32*
  %7796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7797 = getelementptr inbounds %struct.GPR, %struct.GPR* %7796, i32 0, i32 15
  %7798 = getelementptr inbounds %struct.Reg, %struct.Reg* %7797, i32 0, i32 0
  %RBP.i381 = bitcast %union.anon* %7798 to i64*
  %7799 = load i64, i64* %RBP.i381
  %7800 = sub i64 %7799, 8
  %7801 = load i32, i32* %EAX.i380
  %7802 = zext i32 %7801 to i64
  %7803 = load i64, i64* %PC.i379
  %7804 = add i64 %7803, 3
  store i64 %7804, i64* %PC.i379
  %7805 = inttoptr i64 %7800 to i32*
  store i32 %7801, i32* %7805
  store %struct.Memory* %loadMem_400ec4, %struct.Memory** %MEMORY
  %loadMem_400ec7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7807 = getelementptr inbounds %struct.GPR, %struct.GPR* %7806, i32 0, i32 33
  %7808 = getelementptr inbounds %struct.Reg, %struct.Reg* %7807, i32 0, i32 0
  %PC.i378 = bitcast %union.anon* %7808 to i64*
  %7809 = load i64, i64* %PC.i378
  %7810 = add i64 %7809, -88
  %7811 = load i64, i64* %PC.i378
  %7812 = add i64 %7811, 5
  store i64 %7812, i64* %PC.i378
  %7813 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7810, i64* %7813, align 8
  store %struct.Memory* %loadMem_400ec7, %struct.Memory** %MEMORY
  br label %block_.L_400e6f

block_.L_400ecc:                                  ; preds = %block_.L_400e6f
  %loadMem_400ecc = load %struct.Memory*, %struct.Memory** %MEMORY
  %7814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7815 = getelementptr inbounds %struct.GPR, %struct.GPR* %7814, i32 0, i32 33
  %7816 = getelementptr inbounds %struct.Reg, %struct.Reg* %7815, i32 0, i32 0
  %PC.i377 = bitcast %union.anon* %7816 to i64*
  %7817 = load i64, i64* %PC.i377
  %7818 = add i64 %7817, 5
  %7819 = load i64, i64* %PC.i377
  %7820 = add i64 %7819, 5
  store i64 %7820, i64* %PC.i377
  %7821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7818, i64* %7821, align 8
  store %struct.Memory* %loadMem_400ecc, %struct.Memory** %MEMORY
  br label %block_.L_400ed1

block_.L_400ed1:                                  ; preds = %block_.L_400ecc
  %loadMem_400ed1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7823 = getelementptr inbounds %struct.GPR, %struct.GPR* %7822, i32 0, i32 33
  %7824 = getelementptr inbounds %struct.Reg, %struct.Reg* %7823, i32 0, i32 0
  %PC.i374 = bitcast %union.anon* %7824 to i64*
  %7825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7826 = getelementptr inbounds %struct.GPR, %struct.GPR* %7825, i32 0, i32 1
  %7827 = getelementptr inbounds %struct.Reg, %struct.Reg* %7826, i32 0, i32 0
  %RAX.i375 = bitcast %union.anon* %7827 to i64*
  %7828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7829 = getelementptr inbounds %struct.GPR, %struct.GPR* %7828, i32 0, i32 15
  %7830 = getelementptr inbounds %struct.Reg, %struct.Reg* %7829, i32 0, i32 0
  %RBP.i376 = bitcast %union.anon* %7830 to i64*
  %7831 = load i64, i64* %RBP.i376
  %7832 = sub i64 %7831, 4
  %7833 = load i64, i64* %PC.i374
  %7834 = add i64 %7833, 3
  store i64 %7834, i64* %PC.i374
  %7835 = inttoptr i64 %7832 to i32*
  %7836 = load i32, i32* %7835
  %7837 = zext i32 %7836 to i64
  store i64 %7837, i64* %RAX.i375, align 8
  store %struct.Memory* %loadMem_400ed1, %struct.Memory** %MEMORY
  %loadMem_400ed4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7839 = getelementptr inbounds %struct.GPR, %struct.GPR* %7838, i32 0, i32 33
  %7840 = getelementptr inbounds %struct.Reg, %struct.Reg* %7839, i32 0, i32 0
  %PC.i372 = bitcast %union.anon* %7840 to i64*
  %7841 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7842 = getelementptr inbounds %struct.GPR, %struct.GPR* %7841, i32 0, i32 1
  %7843 = getelementptr inbounds %struct.Reg, %struct.Reg* %7842, i32 0, i32 0
  %RAX.i373 = bitcast %union.anon* %7843 to i64*
  %7844 = load i64, i64* %RAX.i373
  %7845 = load i64, i64* %PC.i372
  %7846 = add i64 %7845, 3
  store i64 %7846, i64* %PC.i372
  %7847 = trunc i64 %7844 to i32
  %7848 = add i32 1, %7847
  %7849 = zext i32 %7848 to i64
  store i64 %7849, i64* %RAX.i373, align 8
  %7850 = icmp ult i32 %7848, %7847
  %7851 = icmp ult i32 %7848, 1
  %7852 = or i1 %7850, %7851
  %7853 = zext i1 %7852 to i8
  %7854 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7853, i8* %7854, align 1
  %7855 = and i32 %7848, 255
  %7856 = call i32 @llvm.ctpop.i32(i32 %7855)
  %7857 = trunc i32 %7856 to i8
  %7858 = and i8 %7857, 1
  %7859 = xor i8 %7858, 1
  %7860 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7859, i8* %7860, align 1
  %7861 = xor i64 1, %7844
  %7862 = trunc i64 %7861 to i32
  %7863 = xor i32 %7862, %7848
  %7864 = lshr i32 %7863, 4
  %7865 = trunc i32 %7864 to i8
  %7866 = and i8 %7865, 1
  %7867 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7866, i8* %7867, align 1
  %7868 = icmp eq i32 %7848, 0
  %7869 = zext i1 %7868 to i8
  %7870 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7869, i8* %7870, align 1
  %7871 = lshr i32 %7848, 31
  %7872 = trunc i32 %7871 to i8
  %7873 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7872, i8* %7873, align 1
  %7874 = lshr i32 %7847, 31
  %7875 = xor i32 %7871, %7874
  %7876 = add i32 %7875, %7871
  %7877 = icmp eq i32 %7876, 2
  %7878 = zext i1 %7877 to i8
  %7879 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7878, i8* %7879, align 1
  store %struct.Memory* %loadMem_400ed4, %struct.Memory** %MEMORY
  %loadMem_400ed7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7881 = getelementptr inbounds %struct.GPR, %struct.GPR* %7880, i32 0, i32 33
  %7882 = getelementptr inbounds %struct.Reg, %struct.Reg* %7881, i32 0, i32 0
  %PC.i369 = bitcast %union.anon* %7882 to i64*
  %7883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7884 = getelementptr inbounds %struct.GPR, %struct.GPR* %7883, i32 0, i32 1
  %7885 = getelementptr inbounds %struct.Reg, %struct.Reg* %7884, i32 0, i32 0
  %EAX.i370 = bitcast %union.anon* %7885 to i32*
  %7886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7887 = getelementptr inbounds %struct.GPR, %struct.GPR* %7886, i32 0, i32 15
  %7888 = getelementptr inbounds %struct.Reg, %struct.Reg* %7887, i32 0, i32 0
  %RBP.i371 = bitcast %union.anon* %7888 to i64*
  %7889 = load i64, i64* %RBP.i371
  %7890 = sub i64 %7889, 4
  %7891 = load i32, i32* %EAX.i370
  %7892 = zext i32 %7891 to i64
  %7893 = load i64, i64* %PC.i369
  %7894 = add i64 %7893, 3
  store i64 %7894, i64* %PC.i369
  %7895 = inttoptr i64 %7890 to i32*
  store i32 %7891, i32* %7895
  store %struct.Memory* %loadMem_400ed7, %struct.Memory** %MEMORY
  %loadMem_400eda = load %struct.Memory*, %struct.Memory** %MEMORY
  %7896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7897 = getelementptr inbounds %struct.GPR, %struct.GPR* %7896, i32 0, i32 33
  %7898 = getelementptr inbounds %struct.Reg, %struct.Reg* %7897, i32 0, i32 0
  %PC.i368 = bitcast %union.anon* %7898 to i64*
  %7899 = load i64, i64* %PC.i368
  %7900 = add i64 %7899, -124
  %7901 = load i64, i64* %PC.i368
  %7902 = add i64 %7901, 5
  store i64 %7902, i64* %PC.i368
  %7903 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7900, i64* %7903, align 8
  store %struct.Memory* %loadMem_400eda, %struct.Memory** %MEMORY
  br label %block_.L_400e5e

block_.L_400edf:                                  ; preds = %block_.L_400e5e
  %loadMem_400edf = load %struct.Memory*, %struct.Memory** %MEMORY
  %7904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7905 = getelementptr inbounds %struct.GPR, %struct.GPR* %7904, i32 0, i32 33
  %7906 = getelementptr inbounds %struct.Reg, %struct.Reg* %7905, i32 0, i32 0
  %PC.i367 = bitcast %union.anon* %7906 to i64*
  %7907 = load i64, i64* %PC.i367
  %7908 = add i64 %7907, 11
  store i64 %7908, i64* %PC.i367
  store i32 1, i32* bitcast (%G_0x619210_type* @G_0x619210 to i32*)
  store %struct.Memory* %loadMem_400edf, %struct.Memory** %MEMORY
  %loadMem_400eea = load %struct.Memory*, %struct.Memory** %MEMORY
  %7909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7910 = getelementptr inbounds %struct.GPR, %struct.GPR* %7909, i32 0, i32 33
  %7911 = getelementptr inbounds %struct.Reg, %struct.Reg* %7910, i32 0, i32 0
  %PC.i366 = bitcast %union.anon* %7911 to i64*
  %7912 = load i64, i64* %PC.i366
  %7913 = add i64 %7912, 11
  store i64 %7913, i64* %PC.i366
  store i32 128, i32* bitcast (%G_0x610270_type* @G_0x610270 to i32*)
  store %struct.Memory* %loadMem_400eea, %struct.Memory** %MEMORY
  %loadMem_400ef5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7915 = getelementptr inbounds %struct.GPR, %struct.GPR* %7914, i32 0, i32 33
  %7916 = getelementptr inbounds %struct.Reg, %struct.Reg* %7915, i32 0, i32 0
  %PC.i364 = bitcast %union.anon* %7916 to i64*
  %7917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7918 = getelementptr inbounds %struct.GPR, %struct.GPR* %7917, i32 0, i32 15
  %7919 = getelementptr inbounds %struct.Reg, %struct.Reg* %7918, i32 0, i32 0
  %RBP.i365 = bitcast %union.anon* %7919 to i64*
  %7920 = load i64, i64* %RBP.i365
  %7921 = sub i64 %7920, 4
  %7922 = load i64, i64* %PC.i364
  %7923 = add i64 %7922, 7
  store i64 %7923, i64* %PC.i364
  %7924 = inttoptr i64 %7921 to i32*
  store i32 0, i32* %7924
  store %struct.Memory* %loadMem_400ef5, %struct.Memory** %MEMORY
  br label %block_.L_400efc

block_.L_400efc:                                  ; preds = %block_.L_400f6f, %block_.L_400edf
  %loadMem_400efc = load %struct.Memory*, %struct.Memory** %MEMORY
  %7925 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7926 = getelementptr inbounds %struct.GPR, %struct.GPR* %7925, i32 0, i32 33
  %7927 = getelementptr inbounds %struct.Reg, %struct.Reg* %7926, i32 0, i32 0
  %PC.i362 = bitcast %union.anon* %7927 to i64*
  %7928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7929 = getelementptr inbounds %struct.GPR, %struct.GPR* %7928, i32 0, i32 15
  %7930 = getelementptr inbounds %struct.Reg, %struct.Reg* %7929, i32 0, i32 0
  %RBP.i363 = bitcast %union.anon* %7930 to i64*
  %7931 = load i64, i64* %RBP.i363
  %7932 = sub i64 %7931, 4
  %7933 = load i64, i64* %PC.i362
  %7934 = add i64 %7933, 4
  store i64 %7934, i64* %PC.i362
  %7935 = inttoptr i64 %7932 to i32*
  %7936 = load i32, i32* %7935
  %7937 = sub i32 %7936, 1
  %7938 = icmp ult i32 %7936, 1
  %7939 = zext i1 %7938 to i8
  %7940 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7939, i8* %7940, align 1
  %7941 = and i32 %7937, 255
  %7942 = call i32 @llvm.ctpop.i32(i32 %7941)
  %7943 = trunc i32 %7942 to i8
  %7944 = and i8 %7943, 1
  %7945 = xor i8 %7944, 1
  %7946 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7945, i8* %7946, align 1
  %7947 = xor i32 %7936, 1
  %7948 = xor i32 %7947, %7937
  %7949 = lshr i32 %7948, 4
  %7950 = trunc i32 %7949 to i8
  %7951 = and i8 %7950, 1
  %7952 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7951, i8* %7952, align 1
  %7953 = icmp eq i32 %7937, 0
  %7954 = zext i1 %7953 to i8
  %7955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7954, i8* %7955, align 1
  %7956 = lshr i32 %7937, 31
  %7957 = trunc i32 %7956 to i8
  %7958 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7957, i8* %7958, align 1
  %7959 = lshr i32 %7936, 31
  %7960 = xor i32 %7956, %7959
  %7961 = add i32 %7960, %7959
  %7962 = icmp eq i32 %7961, 2
  %7963 = zext i1 %7962 to i8
  %7964 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7963, i8* %7964, align 1
  store %struct.Memory* %loadMem_400efc, %struct.Memory** %MEMORY
  %loadMem_400f00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7966 = getelementptr inbounds %struct.GPR, %struct.GPR* %7965, i32 0, i32 33
  %7967 = getelementptr inbounds %struct.Reg, %struct.Reg* %7966, i32 0, i32 0
  %PC.i361 = bitcast %union.anon* %7967 to i64*
  %7968 = load i64, i64* %PC.i361
  %7969 = add i64 %7968, 125
  %7970 = load i64, i64* %PC.i361
  %7971 = add i64 %7970, 6
  %7972 = load i64, i64* %PC.i361
  %7973 = add i64 %7972, 6
  store i64 %7973, i64* %PC.i361
  %7974 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7975 = load i8, i8* %7974, align 1
  %7976 = icmp eq i8 %7975, 0
  %7977 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7978 = load i8, i8* %7977, align 1
  %7979 = icmp ne i8 %7978, 0
  %7980 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %7981 = load i8, i8* %7980, align 1
  %7982 = icmp ne i8 %7981, 0
  %7983 = xor i1 %7979, %7982
  %7984 = xor i1 %7983, true
  %7985 = and i1 %7976, %7984
  %7986 = zext i1 %7985 to i8
  store i8 %7986, i8* %BRANCH_TAKEN, align 1
  %7987 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7988 = select i1 %7985, i64 %7969, i64 %7971
  store i64 %7988, i64* %7987, align 8
  store %struct.Memory* %loadMem_400f00, %struct.Memory** %MEMORY
  %loadBr_400f00 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400f00 = icmp eq i8 %loadBr_400f00, 1
  br i1 %cmpBr_400f00, label %block_.L_400f7d, label %block_400f06

block_400f06:                                     ; preds = %block_.L_400efc
  %loadMem_400f06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7990 = getelementptr inbounds %struct.GPR, %struct.GPR* %7989, i32 0, i32 33
  %7991 = getelementptr inbounds %struct.Reg, %struct.Reg* %7990, i32 0, i32 0
  %PC.i359 = bitcast %union.anon* %7991 to i64*
  %7992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7993 = getelementptr inbounds %struct.GPR, %struct.GPR* %7992, i32 0, i32 15
  %7994 = getelementptr inbounds %struct.Reg, %struct.Reg* %7993, i32 0, i32 0
  %RBP.i360 = bitcast %union.anon* %7994 to i64*
  %7995 = load i64, i64* %RBP.i360
  %7996 = sub i64 %7995, 8
  %7997 = load i64, i64* %PC.i359
  %7998 = add i64 %7997, 7
  store i64 %7998, i64* %PC.i359
  %7999 = inttoptr i64 %7996 to i32*
  store i32 0, i32* %7999
  store %struct.Memory* %loadMem_400f06, %struct.Memory** %MEMORY
  br label %block_.L_400f0d

block_.L_400f0d:                                  ; preds = %block_.L_400f5c, %block_400f06
  %loadMem_400f0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8001 = getelementptr inbounds %struct.GPR, %struct.GPR* %8000, i32 0, i32 33
  %8002 = getelementptr inbounds %struct.Reg, %struct.Reg* %8001, i32 0, i32 0
  %PC.i357 = bitcast %union.anon* %8002 to i64*
  %8003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8004 = getelementptr inbounds %struct.GPR, %struct.GPR* %8003, i32 0, i32 15
  %8005 = getelementptr inbounds %struct.Reg, %struct.Reg* %8004, i32 0, i32 0
  %RBP.i358 = bitcast %union.anon* %8005 to i64*
  %8006 = load i64, i64* %RBP.i358
  %8007 = sub i64 %8006, 8
  %8008 = load i64, i64* %PC.i357
  %8009 = add i64 %8008, 4
  store i64 %8009, i64* %PC.i357
  %8010 = inttoptr i64 %8007 to i32*
  %8011 = load i32, i32* %8010
  %8012 = sub i32 %8011, 1
  %8013 = icmp ult i32 %8011, 1
  %8014 = zext i1 %8013 to i8
  %8015 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8014, i8* %8015, align 1
  %8016 = and i32 %8012, 255
  %8017 = call i32 @llvm.ctpop.i32(i32 %8016)
  %8018 = trunc i32 %8017 to i8
  %8019 = and i8 %8018, 1
  %8020 = xor i8 %8019, 1
  %8021 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8020, i8* %8021, align 1
  %8022 = xor i32 %8011, 1
  %8023 = xor i32 %8022, %8012
  %8024 = lshr i32 %8023, 4
  %8025 = trunc i32 %8024 to i8
  %8026 = and i8 %8025, 1
  %8027 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8026, i8* %8027, align 1
  %8028 = icmp eq i32 %8012, 0
  %8029 = zext i1 %8028 to i8
  %8030 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8029, i8* %8030, align 1
  %8031 = lshr i32 %8012, 31
  %8032 = trunc i32 %8031 to i8
  %8033 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8032, i8* %8033, align 1
  %8034 = lshr i32 %8011, 31
  %8035 = xor i32 %8031, %8034
  %8036 = add i32 %8035, %8034
  %8037 = icmp eq i32 %8036, 2
  %8038 = zext i1 %8037 to i8
  %8039 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8038, i8* %8039, align 1
  store %struct.Memory* %loadMem_400f0d, %struct.Memory** %MEMORY
  %loadMem_400f11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8041 = getelementptr inbounds %struct.GPR, %struct.GPR* %8040, i32 0, i32 33
  %8042 = getelementptr inbounds %struct.Reg, %struct.Reg* %8041, i32 0, i32 0
  %PC.i356 = bitcast %union.anon* %8042 to i64*
  %8043 = load i64, i64* %PC.i356
  %8044 = add i64 %8043, 89
  %8045 = load i64, i64* %PC.i356
  %8046 = add i64 %8045, 6
  %8047 = load i64, i64* %PC.i356
  %8048 = add i64 %8047, 6
  store i64 %8048, i64* %PC.i356
  %8049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8050 = load i8, i8* %8049, align 1
  %8051 = icmp eq i8 %8050, 0
  %8052 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8053 = load i8, i8* %8052, align 1
  %8054 = icmp ne i8 %8053, 0
  %8055 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8056 = load i8, i8* %8055, align 1
  %8057 = icmp ne i8 %8056, 0
  %8058 = xor i1 %8054, %8057
  %8059 = xor i1 %8058, true
  %8060 = and i1 %8051, %8059
  %8061 = zext i1 %8060 to i8
  store i8 %8061, i8* %BRANCH_TAKEN, align 1
  %8062 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8063 = select i1 %8060, i64 %8044, i64 %8046
  store i64 %8063, i64* %8062, align 8
  store %struct.Memory* %loadMem_400f11, %struct.Memory** %MEMORY
  %loadBr_400f11 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400f11 = icmp eq i8 %loadBr_400f11, 1
  br i1 %cmpBr_400f11, label %block_.L_400f6a, label %block_400f17

block_400f17:                                     ; preds = %block_.L_400f0d
  %loadMem_400f17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8065 = getelementptr inbounds %struct.GPR, %struct.GPR* %8064, i32 0, i32 33
  %8066 = getelementptr inbounds %struct.Reg, %struct.Reg* %8065, i32 0, i32 0
  %PC.i354 = bitcast %union.anon* %8066 to i64*
  %8067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8068 = getelementptr inbounds %struct.GPR, %struct.GPR* %8067, i32 0, i32 15
  %8069 = getelementptr inbounds %struct.Reg, %struct.Reg* %8068, i32 0, i32 0
  %RBP.i355 = bitcast %union.anon* %8069 to i64*
  %8070 = load i64, i64* %RBP.i355
  %8071 = sub i64 %8070, 12
  %8072 = load i64, i64* %PC.i354
  %8073 = add i64 %8072, 7
  store i64 %8073, i64* %PC.i354
  %8074 = inttoptr i64 %8071 to i32*
  store i32 0, i32* %8074
  store %struct.Memory* %loadMem_400f17, %struct.Memory** %MEMORY
  br label %block_.L_400f1e

block_.L_400f1e:                                  ; preds = %block_400f28, %block_400f17
  %loadMem_400f1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8076 = getelementptr inbounds %struct.GPR, %struct.GPR* %8075, i32 0, i32 33
  %8077 = getelementptr inbounds %struct.Reg, %struct.Reg* %8076, i32 0, i32 0
  %PC.i352 = bitcast %union.anon* %8077 to i64*
  %8078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8079 = getelementptr inbounds %struct.GPR, %struct.GPR* %8078, i32 0, i32 15
  %8080 = getelementptr inbounds %struct.Reg, %struct.Reg* %8079, i32 0, i32 0
  %RBP.i353 = bitcast %union.anon* %8080 to i64*
  %8081 = load i64, i64* %RBP.i353
  %8082 = sub i64 %8081, 12
  %8083 = load i64, i64* %PC.i352
  %8084 = add i64 %8083, 4
  store i64 %8084, i64* %PC.i352
  %8085 = inttoptr i64 %8082 to i32*
  %8086 = load i32, i32* %8085
  %8087 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8087, align 1
  %8088 = and i32 %8086, 255
  %8089 = call i32 @llvm.ctpop.i32(i32 %8088)
  %8090 = trunc i32 %8089 to i8
  %8091 = and i8 %8090, 1
  %8092 = xor i8 %8091, 1
  %8093 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8092, i8* %8093, align 1
  %8094 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8094, align 1
  %8095 = icmp eq i32 %8086, 0
  %8096 = zext i1 %8095 to i8
  %8097 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8096, i8* %8097, align 1
  %8098 = lshr i32 %8086, 31
  %8099 = trunc i32 %8098 to i8
  %8100 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8099, i8* %8100, align 1
  %8101 = lshr i32 %8086, 31
  %8102 = xor i32 %8098, %8101
  %8103 = add i32 %8102, %8101
  %8104 = icmp eq i32 %8103, 2
  %8105 = zext i1 %8104 to i8
  %8106 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8105, i8* %8106, align 1
  store %struct.Memory* %loadMem_400f1e, %struct.Memory** %MEMORY
  %loadMem_400f22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8108 = getelementptr inbounds %struct.GPR, %struct.GPR* %8107, i32 0, i32 33
  %8109 = getelementptr inbounds %struct.Reg, %struct.Reg* %8108, i32 0, i32 0
  %PC.i351 = bitcast %union.anon* %8109 to i64*
  %8110 = load i64, i64* %PC.i351
  %8111 = add i64 %8110, 53
  %8112 = load i64, i64* %PC.i351
  %8113 = add i64 %8112, 6
  %8114 = load i64, i64* %PC.i351
  %8115 = add i64 %8114, 6
  store i64 %8115, i64* %PC.i351
  %8116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8117 = load i8, i8* %8116, align 1
  %8118 = icmp eq i8 %8117, 0
  %8119 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8120 = load i8, i8* %8119, align 1
  %8121 = icmp ne i8 %8120, 0
  %8122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8123 = load i8, i8* %8122, align 1
  %8124 = icmp ne i8 %8123, 0
  %8125 = xor i1 %8121, %8124
  %8126 = xor i1 %8125, true
  %8127 = and i1 %8118, %8126
  %8128 = zext i1 %8127 to i8
  store i8 %8128, i8* %BRANCH_TAKEN, align 1
  %8129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8130 = select i1 %8127, i64 %8111, i64 %8113
  store i64 %8130, i64* %8129, align 8
  store %struct.Memory* %loadMem_400f22, %struct.Memory** %MEMORY
  %loadBr_400f22 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400f22 = icmp eq i8 %loadBr_400f22, 1
  br i1 %cmpBr_400f22, label %block_.L_400f57, label %block_400f28

block_400f28:                                     ; preds = %block_.L_400f1e
  %loadMem_400f28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8132 = getelementptr inbounds %struct.GPR, %struct.GPR* %8131, i32 0, i32 33
  %8133 = getelementptr inbounds %struct.Reg, %struct.Reg* %8132, i32 0, i32 0
  %PC.i348 = bitcast %union.anon* %8133 to i64*
  %8134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8135 = getelementptr inbounds %struct.GPR, %struct.GPR* %8134, i32 0, i32 1
  %8136 = getelementptr inbounds %struct.Reg, %struct.Reg* %8135, i32 0, i32 0
  %RAX.i349 = bitcast %union.anon* %8136 to i64*
  %8137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8138 = getelementptr inbounds %struct.GPR, %struct.GPR* %8137, i32 0, i32 15
  %8139 = getelementptr inbounds %struct.Reg, %struct.Reg* %8138, i32 0, i32 0
  %RBP.i350 = bitcast %union.anon* %8139 to i64*
  %8140 = load i64, i64* %RBP.i350
  %8141 = sub i64 %8140, 4
  %8142 = load i64, i64* %PC.i348
  %8143 = add i64 %8142, 3
  store i64 %8143, i64* %PC.i348
  %8144 = inttoptr i64 %8141 to i32*
  %8145 = load i32, i32* %8144
  %8146 = zext i32 %8145 to i64
  store i64 %8146, i64* %RAX.i349, align 8
  store %struct.Memory* %loadMem_400f28, %struct.Memory** %MEMORY
  %loadMem_400f2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8148 = getelementptr inbounds %struct.GPR, %struct.GPR* %8147, i32 0, i32 33
  %8149 = getelementptr inbounds %struct.Reg, %struct.Reg* %8148, i32 0, i32 0
  %PC.i345 = bitcast %union.anon* %8149 to i64*
  %8150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8151 = getelementptr inbounds %struct.GPR, %struct.GPR* %8150, i32 0, i32 5
  %8152 = getelementptr inbounds %struct.Reg, %struct.Reg* %8151, i32 0, i32 0
  %RCX.i346 = bitcast %union.anon* %8152 to i64*
  %8153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8154 = getelementptr inbounds %struct.GPR, %struct.GPR* %8153, i32 0, i32 15
  %8155 = getelementptr inbounds %struct.Reg, %struct.Reg* %8154, i32 0, i32 0
  %RBP.i347 = bitcast %union.anon* %8155 to i64*
  %8156 = load i64, i64* %RBP.i347
  %8157 = sub i64 %8156, 8
  %8158 = load i64, i64* %PC.i345
  %8159 = add i64 %8158, 3
  store i64 %8159, i64* %PC.i345
  %8160 = inttoptr i64 %8157 to i32*
  %8161 = load i32, i32* %8160
  %8162 = zext i32 %8161 to i64
  store i64 %8162, i64* %RCX.i346, align 8
  store %struct.Memory* %loadMem_400f2b, %struct.Memory** %MEMORY
  %loadMem_400f2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8164 = getelementptr inbounds %struct.GPR, %struct.GPR* %8163, i32 0, i32 33
  %8165 = getelementptr inbounds %struct.Reg, %struct.Reg* %8164, i32 0, i32 0
  %PC.i342 = bitcast %union.anon* %8165 to i64*
  %8166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8167 = getelementptr inbounds %struct.GPR, %struct.GPR* %8166, i32 0, i32 7
  %8168 = getelementptr inbounds %struct.Reg, %struct.Reg* %8167, i32 0, i32 0
  %RDX.i343 = bitcast %union.anon* %8168 to i64*
  %8169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8170 = getelementptr inbounds %struct.GPR, %struct.GPR* %8169, i32 0, i32 15
  %8171 = getelementptr inbounds %struct.Reg, %struct.Reg* %8170, i32 0, i32 0
  %RBP.i344 = bitcast %union.anon* %8171 to i64*
  %8172 = load i64, i64* %RBP.i344
  %8173 = sub i64 %8172, 12
  %8174 = load i64, i64* %PC.i342
  %8175 = add i64 %8174, 3
  store i64 %8175, i64* %PC.i342
  %8176 = inttoptr i64 %8173 to i32*
  %8177 = load i32, i32* %8176
  %8178 = zext i32 %8177 to i64
  store i64 %8178, i64* %RDX.i343, align 8
  store %struct.Memory* %loadMem_400f2e, %struct.Memory** %MEMORY
  %loadMem_400f31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8180 = getelementptr inbounds %struct.GPR, %struct.GPR* %8179, i32 0, i32 33
  %8181 = getelementptr inbounds %struct.Reg, %struct.Reg* %8180, i32 0, i32 0
  %PC.i340 = bitcast %union.anon* %8181 to i64*
  %8182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8183 = getelementptr inbounds %struct.GPR, %struct.GPR* %8182, i32 0, i32 7
  %8184 = getelementptr inbounds %struct.Reg, %struct.Reg* %8183, i32 0, i32 0
  %RDX.i341 = bitcast %union.anon* %8184 to i64*
  %8185 = load i64, i64* %RDX.i341
  %8186 = load i64, i64* %PC.i340
  %8187 = add i64 %8186, 3
  store i64 %8187, i64* %PC.i340
  %8188 = and i64 %8185, 4294967295
  %8189 = shl i64 %8188, 2
  %8190 = trunc i64 %8189 to i32
  %8191 = icmp slt i32 %8190, 0
  %8192 = shl i32 %8190, 1
  %8193 = zext i32 %8192 to i64
  store i64 %8193, i64* %RDX.i341, align 8
  %8194 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %8195 = zext i1 %8191 to i8
  store i8 %8195, i8* %8194, align 1
  %8196 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %8197 = and i32 %8192, 254
  %8198 = call i32 @llvm.ctpop.i32(i32 %8197)
  %8199 = trunc i32 %8198 to i8
  %8200 = and i8 %8199, 1
  %8201 = xor i8 %8200, 1
  store i8 %8201, i8* %8196, align 1
  %8202 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8202, align 1
  %8203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8204 = icmp eq i32 %8192, 0
  %8205 = zext i1 %8204 to i8
  store i8 %8205, i8* %8203, align 1
  %8206 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8207 = lshr i32 %8192, 31
  %8208 = trunc i32 %8207 to i8
  store i8 %8208, i8* %8206, align 1
  %8209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8209, align 1
  store %struct.Memory* %loadMem_400f31, %struct.Memory** %MEMORY
  %loadMem_400f34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8211 = getelementptr inbounds %struct.GPR, %struct.GPR* %8210, i32 0, i32 33
  %8212 = getelementptr inbounds %struct.Reg, %struct.Reg* %8211, i32 0, i32 0
  %PC.i337 = bitcast %union.anon* %8212 to i64*
  %8213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8214 = getelementptr inbounds %struct.GPR, %struct.GPR* %8213, i32 0, i32 7
  %8215 = getelementptr inbounds %struct.Reg, %struct.Reg* %8214, i32 0, i32 0
  %EDX.i338 = bitcast %union.anon* %8215 to i32*
  %8216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8217 = getelementptr inbounds %struct.GPR, %struct.GPR* %8216, i32 0, i32 5
  %8218 = getelementptr inbounds %struct.Reg, %struct.Reg* %8217, i32 0, i32 0
  %RCX.i339 = bitcast %union.anon* %8218 to i64*
  %8219 = load i64, i64* %RCX.i339
  %8220 = load i32, i32* %EDX.i338
  %8221 = zext i32 %8220 to i64
  %8222 = load i64, i64* %PC.i337
  %8223 = add i64 %8222, 2
  store i64 %8223, i64* %PC.i337
  %8224 = trunc i64 %8219 to i32
  %8225 = add i32 %8220, %8224
  %8226 = zext i32 %8225 to i64
  store i64 %8226, i64* %RCX.i339, align 8
  %8227 = icmp ult i32 %8225, %8224
  %8228 = icmp ult i32 %8225, %8220
  %8229 = or i1 %8227, %8228
  %8230 = zext i1 %8229 to i8
  %8231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8230, i8* %8231, align 1
  %8232 = and i32 %8225, 255
  %8233 = call i32 @llvm.ctpop.i32(i32 %8232)
  %8234 = trunc i32 %8233 to i8
  %8235 = and i8 %8234, 1
  %8236 = xor i8 %8235, 1
  %8237 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8236, i8* %8237, align 1
  %8238 = xor i64 %8221, %8219
  %8239 = trunc i64 %8238 to i32
  %8240 = xor i32 %8239, %8225
  %8241 = lshr i32 %8240, 4
  %8242 = trunc i32 %8241 to i8
  %8243 = and i8 %8242, 1
  %8244 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8243, i8* %8244, align 1
  %8245 = icmp eq i32 %8225, 0
  %8246 = zext i1 %8245 to i8
  %8247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8246, i8* %8247, align 1
  %8248 = lshr i32 %8225, 31
  %8249 = trunc i32 %8248 to i8
  %8250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8249, i8* %8250, align 1
  %8251 = lshr i32 %8224, 31
  %8252 = lshr i32 %8220, 31
  %8253 = xor i32 %8248, %8251
  %8254 = xor i32 %8248, %8252
  %8255 = add i32 %8253, %8254
  %8256 = icmp eq i32 %8255, 2
  %8257 = zext i1 %8256 to i8
  %8258 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8257, i8* %8258, align 1
  store %struct.Memory* %loadMem_400f34, %struct.Memory** %MEMORY
  %loadMem_400f36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8260 = getelementptr inbounds %struct.GPR, %struct.GPR* %8259, i32 0, i32 33
  %8261 = getelementptr inbounds %struct.Reg, %struct.Reg* %8260, i32 0, i32 0
  %PC.i335 = bitcast %union.anon* %8261 to i64*
  %8262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8263 = getelementptr inbounds %struct.GPR, %struct.GPR* %8262, i32 0, i32 5
  %8264 = getelementptr inbounds %struct.Reg, %struct.Reg* %8263, i32 0, i32 0
  %RCX.i336 = bitcast %union.anon* %8264 to i64*
  %8265 = load i64, i64* %RCX.i336
  %8266 = load i64, i64* %PC.i335
  %8267 = add i64 %8266, 3
  store i64 %8267, i64* %PC.i335
  %8268 = and i64 %8265, 4294967295
  %8269 = shl i64 %8268, 2
  %8270 = trunc i64 %8269 to i32
  %8271 = icmp slt i32 %8270, 0
  %8272 = shl i32 %8270, 1
  %8273 = zext i32 %8272 to i64
  store i64 %8273, i64* %RCX.i336, align 8
  %8274 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %8275 = zext i1 %8271 to i8
  store i8 %8275, i8* %8274, align 1
  %8276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %8277 = and i32 %8272, 254
  %8278 = call i32 @llvm.ctpop.i32(i32 %8277)
  %8279 = trunc i32 %8278 to i8
  %8280 = and i8 %8279, 1
  %8281 = xor i8 %8280, 1
  store i8 %8281, i8* %8276, align 1
  %8282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8282, align 1
  %8283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8284 = icmp eq i32 %8272, 0
  %8285 = zext i1 %8284 to i8
  store i8 %8285, i8* %8283, align 1
  %8286 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8287 = lshr i32 %8272, 31
  %8288 = trunc i32 %8287 to i8
  store i8 %8288, i8* %8286, align 1
  %8289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8289, align 1
  store %struct.Memory* %loadMem_400f36, %struct.Memory** %MEMORY
  %loadMem_400f39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8291 = getelementptr inbounds %struct.GPR, %struct.GPR* %8290, i32 0, i32 33
  %8292 = getelementptr inbounds %struct.Reg, %struct.Reg* %8291, i32 0, i32 0
  %PC.i332 = bitcast %union.anon* %8292 to i64*
  %8293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8294 = getelementptr inbounds %struct.GPR, %struct.GPR* %8293, i32 0, i32 5
  %8295 = getelementptr inbounds %struct.Reg, %struct.Reg* %8294, i32 0, i32 0
  %ECX.i333 = bitcast %union.anon* %8295 to i32*
  %8296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8297 = getelementptr inbounds %struct.GPR, %struct.GPR* %8296, i32 0, i32 1
  %8298 = getelementptr inbounds %struct.Reg, %struct.Reg* %8297, i32 0, i32 0
  %RAX.i334 = bitcast %union.anon* %8298 to i64*
  %8299 = load i64, i64* %RAX.i334
  %8300 = load i32, i32* %ECX.i333
  %8301 = zext i32 %8300 to i64
  %8302 = load i64, i64* %PC.i332
  %8303 = add i64 %8302, 2
  store i64 %8303, i64* %PC.i332
  %8304 = trunc i64 %8299 to i32
  %8305 = add i32 %8300, %8304
  %8306 = zext i32 %8305 to i64
  store i64 %8306, i64* %RAX.i334, align 8
  %8307 = icmp ult i32 %8305, %8304
  %8308 = icmp ult i32 %8305, %8300
  %8309 = or i1 %8307, %8308
  %8310 = zext i1 %8309 to i8
  %8311 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8310, i8* %8311, align 1
  %8312 = and i32 %8305, 255
  %8313 = call i32 @llvm.ctpop.i32(i32 %8312)
  %8314 = trunc i32 %8313 to i8
  %8315 = and i8 %8314, 1
  %8316 = xor i8 %8315, 1
  %8317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8316, i8* %8317, align 1
  %8318 = xor i64 %8301, %8299
  %8319 = trunc i64 %8318 to i32
  %8320 = xor i32 %8319, %8305
  %8321 = lshr i32 %8320, 4
  %8322 = trunc i32 %8321 to i8
  %8323 = and i8 %8322, 1
  %8324 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8323, i8* %8324, align 1
  %8325 = icmp eq i32 %8305, 0
  %8326 = zext i1 %8325 to i8
  %8327 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8326, i8* %8327, align 1
  %8328 = lshr i32 %8305, 31
  %8329 = trunc i32 %8328 to i8
  %8330 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8329, i8* %8330, align 1
  %8331 = lshr i32 %8304, 31
  %8332 = lshr i32 %8300, 31
  %8333 = xor i32 %8328, %8331
  %8334 = xor i32 %8328, %8332
  %8335 = add i32 %8333, %8334
  %8336 = icmp eq i32 %8335, 2
  %8337 = zext i1 %8336 to i8
  %8338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8337, i8* %8338, align 1
  store %struct.Memory* %loadMem_400f39, %struct.Memory** %MEMORY
  %loadMem_400f3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8340 = getelementptr inbounds %struct.GPR, %struct.GPR* %8339, i32 0, i32 33
  %8341 = getelementptr inbounds %struct.Reg, %struct.Reg* %8340, i32 0, i32 0
  %PC.i329 = bitcast %union.anon* %8341 to i64*
  %8342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8343 = getelementptr inbounds %struct.GPR, %struct.GPR* %8342, i32 0, i32 1
  %8344 = getelementptr inbounds %struct.Reg, %struct.Reg* %8343, i32 0, i32 0
  %EAX.i330 = bitcast %union.anon* %8344 to i32*
  %8345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8346 = getelementptr inbounds %struct.GPR, %struct.GPR* %8345, i32 0, i32 9
  %8347 = getelementptr inbounds %struct.Reg, %struct.Reg* %8346, i32 0, i32 0
  %RSI.i331 = bitcast %union.anon* %8347 to i64*
  %8348 = load i32, i32* %EAX.i330
  %8349 = zext i32 %8348 to i64
  %8350 = load i64, i64* %PC.i329
  %8351 = add i64 %8350, 3
  store i64 %8351, i64* %PC.i329
  %8352 = shl i64 %8349, 32
  %8353 = ashr exact i64 %8352, 32
  store i64 %8353, i64* %RSI.i331, align 8
  store %struct.Memory* %loadMem_400f3b, %struct.Memory** %MEMORY
  %loadMem_400f3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8355 = getelementptr inbounds %struct.GPR, %struct.GPR* %8354, i32 0, i32 33
  %8356 = getelementptr inbounds %struct.Reg, %struct.Reg* %8355, i32 0, i32 0
  %PC.i327 = bitcast %union.anon* %8356 to i64*
  %8357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8358 = getelementptr inbounds %struct.GPR, %struct.GPR* %8357, i32 0, i32 9
  %8359 = getelementptr inbounds %struct.Reg, %struct.Reg* %8358, i32 0, i32 0
  %RSI.i328 = bitcast %union.anon* %8359 to i64*
  %8360 = load i64, i64* %RSI.i328
  %8361 = mul i64 %8360, 4
  %8362 = add i64 %8361, ptrtoint (%G_0x6082a0___rsi_4__type* @G_0x6082a0___rsi_4_ to i64)
  %8363 = load i64, i64* %PC.i327
  %8364 = add i64 %8363, 11
  store i64 %8364, i64* %PC.i327
  %8365 = inttoptr i64 %8362 to i32*
  store i32 1, i32* %8365
  store %struct.Memory* %loadMem_400f3e, %struct.Memory** %MEMORY
  %loadMem_400f49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8367 = getelementptr inbounds %struct.GPR, %struct.GPR* %8366, i32 0, i32 33
  %8368 = getelementptr inbounds %struct.Reg, %struct.Reg* %8367, i32 0, i32 0
  %PC.i324 = bitcast %union.anon* %8368 to i64*
  %8369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8370 = getelementptr inbounds %struct.GPR, %struct.GPR* %8369, i32 0, i32 1
  %8371 = getelementptr inbounds %struct.Reg, %struct.Reg* %8370, i32 0, i32 0
  %RAX.i325 = bitcast %union.anon* %8371 to i64*
  %8372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8373 = getelementptr inbounds %struct.GPR, %struct.GPR* %8372, i32 0, i32 15
  %8374 = getelementptr inbounds %struct.Reg, %struct.Reg* %8373, i32 0, i32 0
  %RBP.i326 = bitcast %union.anon* %8374 to i64*
  %8375 = load i64, i64* %RBP.i326
  %8376 = sub i64 %8375, 12
  %8377 = load i64, i64* %PC.i324
  %8378 = add i64 %8377, 3
  store i64 %8378, i64* %PC.i324
  %8379 = inttoptr i64 %8376 to i32*
  %8380 = load i32, i32* %8379
  %8381 = zext i32 %8380 to i64
  store i64 %8381, i64* %RAX.i325, align 8
  store %struct.Memory* %loadMem_400f49, %struct.Memory** %MEMORY
  %loadMem_400f4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8383 = getelementptr inbounds %struct.GPR, %struct.GPR* %8382, i32 0, i32 33
  %8384 = getelementptr inbounds %struct.Reg, %struct.Reg* %8383, i32 0, i32 0
  %PC.i322 = bitcast %union.anon* %8384 to i64*
  %8385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8386 = getelementptr inbounds %struct.GPR, %struct.GPR* %8385, i32 0, i32 1
  %8387 = getelementptr inbounds %struct.Reg, %struct.Reg* %8386, i32 0, i32 0
  %RAX.i323 = bitcast %union.anon* %8387 to i64*
  %8388 = load i64, i64* %RAX.i323
  %8389 = load i64, i64* %PC.i322
  %8390 = add i64 %8389, 3
  store i64 %8390, i64* %PC.i322
  %8391 = trunc i64 %8388 to i32
  %8392 = add i32 1, %8391
  %8393 = zext i32 %8392 to i64
  store i64 %8393, i64* %RAX.i323, align 8
  %8394 = icmp ult i32 %8392, %8391
  %8395 = icmp ult i32 %8392, 1
  %8396 = or i1 %8394, %8395
  %8397 = zext i1 %8396 to i8
  %8398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8397, i8* %8398, align 1
  %8399 = and i32 %8392, 255
  %8400 = call i32 @llvm.ctpop.i32(i32 %8399)
  %8401 = trunc i32 %8400 to i8
  %8402 = and i8 %8401, 1
  %8403 = xor i8 %8402, 1
  %8404 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8403, i8* %8404, align 1
  %8405 = xor i64 1, %8388
  %8406 = trunc i64 %8405 to i32
  %8407 = xor i32 %8406, %8392
  %8408 = lshr i32 %8407, 4
  %8409 = trunc i32 %8408 to i8
  %8410 = and i8 %8409, 1
  %8411 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8410, i8* %8411, align 1
  %8412 = icmp eq i32 %8392, 0
  %8413 = zext i1 %8412 to i8
  %8414 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8413, i8* %8414, align 1
  %8415 = lshr i32 %8392, 31
  %8416 = trunc i32 %8415 to i8
  %8417 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8416, i8* %8417, align 1
  %8418 = lshr i32 %8391, 31
  %8419 = xor i32 %8415, %8418
  %8420 = add i32 %8419, %8415
  %8421 = icmp eq i32 %8420, 2
  %8422 = zext i1 %8421 to i8
  %8423 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8422, i8* %8423, align 1
  store %struct.Memory* %loadMem_400f4c, %struct.Memory** %MEMORY
  %loadMem_400f4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8425 = getelementptr inbounds %struct.GPR, %struct.GPR* %8424, i32 0, i32 33
  %8426 = getelementptr inbounds %struct.Reg, %struct.Reg* %8425, i32 0, i32 0
  %PC.i319 = bitcast %union.anon* %8426 to i64*
  %8427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8428 = getelementptr inbounds %struct.GPR, %struct.GPR* %8427, i32 0, i32 1
  %8429 = getelementptr inbounds %struct.Reg, %struct.Reg* %8428, i32 0, i32 0
  %EAX.i320 = bitcast %union.anon* %8429 to i32*
  %8430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8431 = getelementptr inbounds %struct.GPR, %struct.GPR* %8430, i32 0, i32 15
  %8432 = getelementptr inbounds %struct.Reg, %struct.Reg* %8431, i32 0, i32 0
  %RBP.i321 = bitcast %union.anon* %8432 to i64*
  %8433 = load i64, i64* %RBP.i321
  %8434 = sub i64 %8433, 12
  %8435 = load i32, i32* %EAX.i320
  %8436 = zext i32 %8435 to i64
  %8437 = load i64, i64* %PC.i319
  %8438 = add i64 %8437, 3
  store i64 %8438, i64* %PC.i319
  %8439 = inttoptr i64 %8434 to i32*
  store i32 %8435, i32* %8439
  store %struct.Memory* %loadMem_400f4f, %struct.Memory** %MEMORY
  %loadMem_400f52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8441 = getelementptr inbounds %struct.GPR, %struct.GPR* %8440, i32 0, i32 33
  %8442 = getelementptr inbounds %struct.Reg, %struct.Reg* %8441, i32 0, i32 0
  %PC.i318 = bitcast %union.anon* %8442 to i64*
  %8443 = load i64, i64* %PC.i318
  %8444 = add i64 %8443, -52
  %8445 = load i64, i64* %PC.i318
  %8446 = add i64 %8445, 5
  store i64 %8446, i64* %PC.i318
  %8447 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8444, i64* %8447, align 8
  store %struct.Memory* %loadMem_400f52, %struct.Memory** %MEMORY
  br label %block_.L_400f1e

block_.L_400f57:                                  ; preds = %block_.L_400f1e
  %loadMem_400f57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8449 = getelementptr inbounds %struct.GPR, %struct.GPR* %8448, i32 0, i32 33
  %8450 = getelementptr inbounds %struct.Reg, %struct.Reg* %8449, i32 0, i32 0
  %PC.i317 = bitcast %union.anon* %8450 to i64*
  %8451 = load i64, i64* %PC.i317
  %8452 = add i64 %8451, 5
  %8453 = load i64, i64* %PC.i317
  %8454 = add i64 %8453, 5
  store i64 %8454, i64* %PC.i317
  %8455 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8452, i64* %8455, align 8
  store %struct.Memory* %loadMem_400f57, %struct.Memory** %MEMORY
  br label %block_.L_400f5c

block_.L_400f5c:                                  ; preds = %block_.L_400f57
  %loadMem_400f5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8457 = getelementptr inbounds %struct.GPR, %struct.GPR* %8456, i32 0, i32 33
  %8458 = getelementptr inbounds %struct.Reg, %struct.Reg* %8457, i32 0, i32 0
  %PC.i314 = bitcast %union.anon* %8458 to i64*
  %8459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8460 = getelementptr inbounds %struct.GPR, %struct.GPR* %8459, i32 0, i32 1
  %8461 = getelementptr inbounds %struct.Reg, %struct.Reg* %8460, i32 0, i32 0
  %RAX.i315 = bitcast %union.anon* %8461 to i64*
  %8462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8463 = getelementptr inbounds %struct.GPR, %struct.GPR* %8462, i32 0, i32 15
  %8464 = getelementptr inbounds %struct.Reg, %struct.Reg* %8463, i32 0, i32 0
  %RBP.i316 = bitcast %union.anon* %8464 to i64*
  %8465 = load i64, i64* %RBP.i316
  %8466 = sub i64 %8465, 8
  %8467 = load i64, i64* %PC.i314
  %8468 = add i64 %8467, 3
  store i64 %8468, i64* %PC.i314
  %8469 = inttoptr i64 %8466 to i32*
  %8470 = load i32, i32* %8469
  %8471 = zext i32 %8470 to i64
  store i64 %8471, i64* %RAX.i315, align 8
  store %struct.Memory* %loadMem_400f5c, %struct.Memory** %MEMORY
  %loadMem_400f5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8473 = getelementptr inbounds %struct.GPR, %struct.GPR* %8472, i32 0, i32 33
  %8474 = getelementptr inbounds %struct.Reg, %struct.Reg* %8473, i32 0, i32 0
  %PC.i312 = bitcast %union.anon* %8474 to i64*
  %8475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8476 = getelementptr inbounds %struct.GPR, %struct.GPR* %8475, i32 0, i32 1
  %8477 = getelementptr inbounds %struct.Reg, %struct.Reg* %8476, i32 0, i32 0
  %RAX.i313 = bitcast %union.anon* %8477 to i64*
  %8478 = load i64, i64* %RAX.i313
  %8479 = load i64, i64* %PC.i312
  %8480 = add i64 %8479, 3
  store i64 %8480, i64* %PC.i312
  %8481 = trunc i64 %8478 to i32
  %8482 = add i32 1, %8481
  %8483 = zext i32 %8482 to i64
  store i64 %8483, i64* %RAX.i313, align 8
  %8484 = icmp ult i32 %8482, %8481
  %8485 = icmp ult i32 %8482, 1
  %8486 = or i1 %8484, %8485
  %8487 = zext i1 %8486 to i8
  %8488 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8487, i8* %8488, align 1
  %8489 = and i32 %8482, 255
  %8490 = call i32 @llvm.ctpop.i32(i32 %8489)
  %8491 = trunc i32 %8490 to i8
  %8492 = and i8 %8491, 1
  %8493 = xor i8 %8492, 1
  %8494 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8493, i8* %8494, align 1
  %8495 = xor i64 1, %8478
  %8496 = trunc i64 %8495 to i32
  %8497 = xor i32 %8496, %8482
  %8498 = lshr i32 %8497, 4
  %8499 = trunc i32 %8498 to i8
  %8500 = and i8 %8499, 1
  %8501 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8500, i8* %8501, align 1
  %8502 = icmp eq i32 %8482, 0
  %8503 = zext i1 %8502 to i8
  %8504 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8503, i8* %8504, align 1
  %8505 = lshr i32 %8482, 31
  %8506 = trunc i32 %8505 to i8
  %8507 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8506, i8* %8507, align 1
  %8508 = lshr i32 %8481, 31
  %8509 = xor i32 %8505, %8508
  %8510 = add i32 %8509, %8505
  %8511 = icmp eq i32 %8510, 2
  %8512 = zext i1 %8511 to i8
  %8513 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8512, i8* %8513, align 1
  store %struct.Memory* %loadMem_400f5f, %struct.Memory** %MEMORY
  %loadMem_400f62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8515 = getelementptr inbounds %struct.GPR, %struct.GPR* %8514, i32 0, i32 33
  %8516 = getelementptr inbounds %struct.Reg, %struct.Reg* %8515, i32 0, i32 0
  %PC.i309 = bitcast %union.anon* %8516 to i64*
  %8517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8518 = getelementptr inbounds %struct.GPR, %struct.GPR* %8517, i32 0, i32 1
  %8519 = getelementptr inbounds %struct.Reg, %struct.Reg* %8518, i32 0, i32 0
  %EAX.i310 = bitcast %union.anon* %8519 to i32*
  %8520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8521 = getelementptr inbounds %struct.GPR, %struct.GPR* %8520, i32 0, i32 15
  %8522 = getelementptr inbounds %struct.Reg, %struct.Reg* %8521, i32 0, i32 0
  %RBP.i311 = bitcast %union.anon* %8522 to i64*
  %8523 = load i64, i64* %RBP.i311
  %8524 = sub i64 %8523, 8
  %8525 = load i32, i32* %EAX.i310
  %8526 = zext i32 %8525 to i64
  %8527 = load i64, i64* %PC.i309
  %8528 = add i64 %8527, 3
  store i64 %8528, i64* %PC.i309
  %8529 = inttoptr i64 %8524 to i32*
  store i32 %8525, i32* %8529
  store %struct.Memory* %loadMem_400f62, %struct.Memory** %MEMORY
  %loadMem_400f65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8531 = getelementptr inbounds %struct.GPR, %struct.GPR* %8530, i32 0, i32 33
  %8532 = getelementptr inbounds %struct.Reg, %struct.Reg* %8531, i32 0, i32 0
  %PC.i308 = bitcast %union.anon* %8532 to i64*
  %8533 = load i64, i64* %PC.i308
  %8534 = add i64 %8533, -88
  %8535 = load i64, i64* %PC.i308
  %8536 = add i64 %8535, 5
  store i64 %8536, i64* %PC.i308
  %8537 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8534, i64* %8537, align 8
  store %struct.Memory* %loadMem_400f65, %struct.Memory** %MEMORY
  br label %block_.L_400f0d

block_.L_400f6a:                                  ; preds = %block_.L_400f0d
  %loadMem_400f6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8539 = getelementptr inbounds %struct.GPR, %struct.GPR* %8538, i32 0, i32 33
  %8540 = getelementptr inbounds %struct.Reg, %struct.Reg* %8539, i32 0, i32 0
  %PC.i307 = bitcast %union.anon* %8540 to i64*
  %8541 = load i64, i64* %PC.i307
  %8542 = add i64 %8541, 5
  %8543 = load i64, i64* %PC.i307
  %8544 = add i64 %8543, 5
  store i64 %8544, i64* %PC.i307
  %8545 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8542, i64* %8545, align 8
  store %struct.Memory* %loadMem_400f6a, %struct.Memory** %MEMORY
  br label %block_.L_400f6f

block_.L_400f6f:                                  ; preds = %block_.L_400f6a
  %loadMem_400f6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8547 = getelementptr inbounds %struct.GPR, %struct.GPR* %8546, i32 0, i32 33
  %8548 = getelementptr inbounds %struct.Reg, %struct.Reg* %8547, i32 0, i32 0
  %PC.i304 = bitcast %union.anon* %8548 to i64*
  %8549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8550 = getelementptr inbounds %struct.GPR, %struct.GPR* %8549, i32 0, i32 1
  %8551 = getelementptr inbounds %struct.Reg, %struct.Reg* %8550, i32 0, i32 0
  %RAX.i305 = bitcast %union.anon* %8551 to i64*
  %8552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8553 = getelementptr inbounds %struct.GPR, %struct.GPR* %8552, i32 0, i32 15
  %8554 = getelementptr inbounds %struct.Reg, %struct.Reg* %8553, i32 0, i32 0
  %RBP.i306 = bitcast %union.anon* %8554 to i64*
  %8555 = load i64, i64* %RBP.i306
  %8556 = sub i64 %8555, 4
  %8557 = load i64, i64* %PC.i304
  %8558 = add i64 %8557, 3
  store i64 %8558, i64* %PC.i304
  %8559 = inttoptr i64 %8556 to i32*
  %8560 = load i32, i32* %8559
  %8561 = zext i32 %8560 to i64
  store i64 %8561, i64* %RAX.i305, align 8
  store %struct.Memory* %loadMem_400f6f, %struct.Memory** %MEMORY
  %loadMem_400f72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8563 = getelementptr inbounds %struct.GPR, %struct.GPR* %8562, i32 0, i32 33
  %8564 = getelementptr inbounds %struct.Reg, %struct.Reg* %8563, i32 0, i32 0
  %PC.i302 = bitcast %union.anon* %8564 to i64*
  %8565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8566 = getelementptr inbounds %struct.GPR, %struct.GPR* %8565, i32 0, i32 1
  %8567 = getelementptr inbounds %struct.Reg, %struct.Reg* %8566, i32 0, i32 0
  %RAX.i303 = bitcast %union.anon* %8567 to i64*
  %8568 = load i64, i64* %RAX.i303
  %8569 = load i64, i64* %PC.i302
  %8570 = add i64 %8569, 3
  store i64 %8570, i64* %PC.i302
  %8571 = trunc i64 %8568 to i32
  %8572 = add i32 1, %8571
  %8573 = zext i32 %8572 to i64
  store i64 %8573, i64* %RAX.i303, align 8
  %8574 = icmp ult i32 %8572, %8571
  %8575 = icmp ult i32 %8572, 1
  %8576 = or i1 %8574, %8575
  %8577 = zext i1 %8576 to i8
  %8578 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8577, i8* %8578, align 1
  %8579 = and i32 %8572, 255
  %8580 = call i32 @llvm.ctpop.i32(i32 %8579)
  %8581 = trunc i32 %8580 to i8
  %8582 = and i8 %8581, 1
  %8583 = xor i8 %8582, 1
  %8584 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8583, i8* %8584, align 1
  %8585 = xor i64 1, %8568
  %8586 = trunc i64 %8585 to i32
  %8587 = xor i32 %8586, %8572
  %8588 = lshr i32 %8587, 4
  %8589 = trunc i32 %8588 to i8
  %8590 = and i8 %8589, 1
  %8591 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8590, i8* %8591, align 1
  %8592 = icmp eq i32 %8572, 0
  %8593 = zext i1 %8592 to i8
  %8594 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8593, i8* %8594, align 1
  %8595 = lshr i32 %8572, 31
  %8596 = trunc i32 %8595 to i8
  %8597 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8596, i8* %8597, align 1
  %8598 = lshr i32 %8571, 31
  %8599 = xor i32 %8595, %8598
  %8600 = add i32 %8599, %8595
  %8601 = icmp eq i32 %8600, 2
  %8602 = zext i1 %8601 to i8
  %8603 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8602, i8* %8603, align 1
  store %struct.Memory* %loadMem_400f72, %struct.Memory** %MEMORY
  %loadMem_400f75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8605 = getelementptr inbounds %struct.GPR, %struct.GPR* %8604, i32 0, i32 33
  %8606 = getelementptr inbounds %struct.Reg, %struct.Reg* %8605, i32 0, i32 0
  %PC.i299 = bitcast %union.anon* %8606 to i64*
  %8607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8608 = getelementptr inbounds %struct.GPR, %struct.GPR* %8607, i32 0, i32 1
  %8609 = getelementptr inbounds %struct.Reg, %struct.Reg* %8608, i32 0, i32 0
  %EAX.i300 = bitcast %union.anon* %8609 to i32*
  %8610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8611 = getelementptr inbounds %struct.GPR, %struct.GPR* %8610, i32 0, i32 15
  %8612 = getelementptr inbounds %struct.Reg, %struct.Reg* %8611, i32 0, i32 0
  %RBP.i301 = bitcast %union.anon* %8612 to i64*
  %8613 = load i64, i64* %RBP.i301
  %8614 = sub i64 %8613, 4
  %8615 = load i32, i32* %EAX.i300
  %8616 = zext i32 %8615 to i64
  %8617 = load i64, i64* %PC.i299
  %8618 = add i64 %8617, 3
  store i64 %8618, i64* %PC.i299
  %8619 = inttoptr i64 %8614 to i32*
  store i32 %8615, i32* %8619
  store %struct.Memory* %loadMem_400f75, %struct.Memory** %MEMORY
  %loadMem_400f78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8621 = getelementptr inbounds %struct.GPR, %struct.GPR* %8620, i32 0, i32 33
  %8622 = getelementptr inbounds %struct.Reg, %struct.Reg* %8621, i32 0, i32 0
  %PC.i298 = bitcast %union.anon* %8622 to i64*
  %8623 = load i64, i64* %PC.i298
  %8624 = add i64 %8623, -124
  %8625 = load i64, i64* %PC.i298
  %8626 = add i64 %8625, 5
  store i64 %8626, i64* %PC.i298
  %8627 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8624, i64* %8627, align 8
  store %struct.Memory* %loadMem_400f78, %struct.Memory** %MEMORY
  br label %block_.L_400efc

block_.L_400f7d:                                  ; preds = %block_.L_400efc
  %loadMem_400f7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8629 = getelementptr inbounds %struct.GPR, %struct.GPR* %8628, i32 0, i32 33
  %8630 = getelementptr inbounds %struct.Reg, %struct.Reg* %8629, i32 0, i32 0
  %PC.i297 = bitcast %union.anon* %8630 to i64*
  %8631 = load i64, i64* %PC.i297
  %8632 = add i64 %8631, 11
  store i64 %8632, i64* %PC.i297
  store i32 2, i32* bitcast (%G_0x619214_type* @G_0x619214 to i32*)
  store %struct.Memory* %loadMem_400f7d, %struct.Memory** %MEMORY
  %loadMem_400f88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8634 = getelementptr inbounds %struct.GPR, %struct.GPR* %8633, i32 0, i32 33
  %8635 = getelementptr inbounds %struct.Reg, %struct.Reg* %8634, i32 0, i32 0
  %PC.i296 = bitcast %union.anon* %8635 to i64*
  %8636 = load i64, i64* %PC.i296
  %8637 = add i64 %8636, 11
  store i64 %8637, i64* %PC.i296
  store i32 9, i32* bitcast (%G_0x610274_type* @G_0x610274 to i32*)
  store %struct.Memory* %loadMem_400f88, %struct.Memory** %MEMORY
  %loadMem_400f93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8639 = getelementptr inbounds %struct.GPR, %struct.GPR* %8638, i32 0, i32 33
  %8640 = getelementptr inbounds %struct.Reg, %struct.Reg* %8639, i32 0, i32 0
  %PC.i294 = bitcast %union.anon* %8640 to i64*
  %8641 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8642 = getelementptr inbounds %struct.GPR, %struct.GPR* %8641, i32 0, i32 15
  %8643 = getelementptr inbounds %struct.Reg, %struct.Reg* %8642, i32 0, i32 0
  %RBP.i295 = bitcast %union.anon* %8643 to i64*
  %8644 = load i64, i64* %RBP.i295
  %8645 = sub i64 %8644, 4
  %8646 = load i64, i64* %PC.i294
  %8647 = add i64 %8646, 7
  store i64 %8647, i64* %PC.i294
  %8648 = inttoptr i64 %8645 to i32*
  store i32 0, i32* %8648
  store %struct.Memory* %loadMem_400f93, %struct.Memory** %MEMORY
  br label %block_.L_400f9a

block_.L_400f9a:                                  ; preds = %block_.L_40100d, %block_.L_400f7d
  %loadMem_400f9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8650 = getelementptr inbounds %struct.GPR, %struct.GPR* %8649, i32 0, i32 33
  %8651 = getelementptr inbounds %struct.Reg, %struct.Reg* %8650, i32 0, i32 0
  %PC.i292 = bitcast %union.anon* %8651 to i64*
  %8652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8653 = getelementptr inbounds %struct.GPR, %struct.GPR* %8652, i32 0, i32 15
  %8654 = getelementptr inbounds %struct.Reg, %struct.Reg* %8653, i32 0, i32 0
  %RBP.i293 = bitcast %union.anon* %8654 to i64*
  %8655 = load i64, i64* %RBP.i293
  %8656 = sub i64 %8655, 4
  %8657 = load i64, i64* %PC.i292
  %8658 = add i64 %8657, 4
  store i64 %8658, i64* %PC.i292
  %8659 = inttoptr i64 %8656 to i32*
  %8660 = load i32, i32* %8659
  %8661 = sub i32 %8660, 1
  %8662 = icmp ult i32 %8660, 1
  %8663 = zext i1 %8662 to i8
  %8664 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8663, i8* %8664, align 1
  %8665 = and i32 %8661, 255
  %8666 = call i32 @llvm.ctpop.i32(i32 %8665)
  %8667 = trunc i32 %8666 to i8
  %8668 = and i8 %8667, 1
  %8669 = xor i8 %8668, 1
  %8670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8669, i8* %8670, align 1
  %8671 = xor i32 %8660, 1
  %8672 = xor i32 %8671, %8661
  %8673 = lshr i32 %8672, 4
  %8674 = trunc i32 %8673 to i8
  %8675 = and i8 %8674, 1
  %8676 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8675, i8* %8676, align 1
  %8677 = icmp eq i32 %8661, 0
  %8678 = zext i1 %8677 to i8
  %8679 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8678, i8* %8679, align 1
  %8680 = lshr i32 %8661, 31
  %8681 = trunc i32 %8680 to i8
  %8682 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8681, i8* %8682, align 1
  %8683 = lshr i32 %8660, 31
  %8684 = xor i32 %8680, %8683
  %8685 = add i32 %8684, %8683
  %8686 = icmp eq i32 %8685, 2
  %8687 = zext i1 %8686 to i8
  %8688 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8687, i8* %8688, align 1
  store %struct.Memory* %loadMem_400f9a, %struct.Memory** %MEMORY
  %loadMem_400f9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8690 = getelementptr inbounds %struct.GPR, %struct.GPR* %8689, i32 0, i32 33
  %8691 = getelementptr inbounds %struct.Reg, %struct.Reg* %8690, i32 0, i32 0
  %PC.i291 = bitcast %union.anon* %8691 to i64*
  %8692 = load i64, i64* %PC.i291
  %8693 = add i64 %8692, 125
  %8694 = load i64, i64* %PC.i291
  %8695 = add i64 %8694, 6
  %8696 = load i64, i64* %PC.i291
  %8697 = add i64 %8696, 6
  store i64 %8697, i64* %PC.i291
  %8698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8699 = load i8, i8* %8698, align 1
  %8700 = icmp eq i8 %8699, 0
  %8701 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8702 = load i8, i8* %8701, align 1
  %8703 = icmp ne i8 %8702, 0
  %8704 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8705 = load i8, i8* %8704, align 1
  %8706 = icmp ne i8 %8705, 0
  %8707 = xor i1 %8703, %8706
  %8708 = xor i1 %8707, true
  %8709 = and i1 %8700, %8708
  %8710 = zext i1 %8709 to i8
  store i8 %8710, i8* %BRANCH_TAKEN, align 1
  %8711 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8712 = select i1 %8709, i64 %8693, i64 %8695
  store i64 %8712, i64* %8711, align 8
  store %struct.Memory* %loadMem_400f9e, %struct.Memory** %MEMORY
  %loadBr_400f9e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400f9e = icmp eq i8 %loadBr_400f9e, 1
  br i1 %cmpBr_400f9e, label %block_.L_40101b, label %block_400fa4

block_400fa4:                                     ; preds = %block_.L_400f9a
  %loadMem_400fa4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8714 = getelementptr inbounds %struct.GPR, %struct.GPR* %8713, i32 0, i32 33
  %8715 = getelementptr inbounds %struct.Reg, %struct.Reg* %8714, i32 0, i32 0
  %PC.i289 = bitcast %union.anon* %8715 to i64*
  %8716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8717 = getelementptr inbounds %struct.GPR, %struct.GPR* %8716, i32 0, i32 15
  %8718 = getelementptr inbounds %struct.Reg, %struct.Reg* %8717, i32 0, i32 0
  %RBP.i290 = bitcast %union.anon* %8718 to i64*
  %8719 = load i64, i64* %RBP.i290
  %8720 = sub i64 %8719, 8
  %8721 = load i64, i64* %PC.i289
  %8722 = add i64 %8721, 7
  store i64 %8722, i64* %PC.i289
  %8723 = inttoptr i64 %8720 to i32*
  store i32 0, i32* %8723
  store %struct.Memory* %loadMem_400fa4, %struct.Memory** %MEMORY
  br label %block_.L_400fab

block_.L_400fab:                                  ; preds = %block_.L_400ffa, %block_400fa4
  %loadMem_400fab = load %struct.Memory*, %struct.Memory** %MEMORY
  %8724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8725 = getelementptr inbounds %struct.GPR, %struct.GPR* %8724, i32 0, i32 33
  %8726 = getelementptr inbounds %struct.Reg, %struct.Reg* %8725, i32 0, i32 0
  %PC.i287 = bitcast %union.anon* %8726 to i64*
  %8727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8728 = getelementptr inbounds %struct.GPR, %struct.GPR* %8727, i32 0, i32 15
  %8729 = getelementptr inbounds %struct.Reg, %struct.Reg* %8728, i32 0, i32 0
  %RBP.i288 = bitcast %union.anon* %8729 to i64*
  %8730 = load i64, i64* %RBP.i288
  %8731 = sub i64 %8730, 8
  %8732 = load i64, i64* %PC.i287
  %8733 = add i64 %8732, 4
  store i64 %8733, i64* %PC.i287
  %8734 = inttoptr i64 %8731 to i32*
  %8735 = load i32, i32* %8734
  %8736 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8736, align 1
  %8737 = and i32 %8735, 255
  %8738 = call i32 @llvm.ctpop.i32(i32 %8737)
  %8739 = trunc i32 %8738 to i8
  %8740 = and i8 %8739, 1
  %8741 = xor i8 %8740, 1
  %8742 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8741, i8* %8742, align 1
  %8743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8743, align 1
  %8744 = icmp eq i32 %8735, 0
  %8745 = zext i1 %8744 to i8
  %8746 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8745, i8* %8746, align 1
  %8747 = lshr i32 %8735, 31
  %8748 = trunc i32 %8747 to i8
  %8749 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8748, i8* %8749, align 1
  %8750 = lshr i32 %8735, 31
  %8751 = xor i32 %8747, %8750
  %8752 = add i32 %8751, %8750
  %8753 = icmp eq i32 %8752, 2
  %8754 = zext i1 %8753 to i8
  %8755 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8754, i8* %8755, align 1
  store %struct.Memory* %loadMem_400fab, %struct.Memory** %MEMORY
  %loadMem_400faf = load %struct.Memory*, %struct.Memory** %MEMORY
  %8756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8757 = getelementptr inbounds %struct.GPR, %struct.GPR* %8756, i32 0, i32 33
  %8758 = getelementptr inbounds %struct.Reg, %struct.Reg* %8757, i32 0, i32 0
  %PC.i286 = bitcast %union.anon* %8758 to i64*
  %8759 = load i64, i64* %PC.i286
  %8760 = add i64 %8759, 89
  %8761 = load i64, i64* %PC.i286
  %8762 = add i64 %8761, 6
  %8763 = load i64, i64* %PC.i286
  %8764 = add i64 %8763, 6
  store i64 %8764, i64* %PC.i286
  %8765 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8766 = load i8, i8* %8765, align 1
  %8767 = icmp eq i8 %8766, 0
  %8768 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8769 = load i8, i8* %8768, align 1
  %8770 = icmp ne i8 %8769, 0
  %8771 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8772 = load i8, i8* %8771, align 1
  %8773 = icmp ne i8 %8772, 0
  %8774 = xor i1 %8770, %8773
  %8775 = xor i1 %8774, true
  %8776 = and i1 %8767, %8775
  %8777 = zext i1 %8776 to i8
  store i8 %8777, i8* %BRANCH_TAKEN, align 1
  %8778 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8779 = select i1 %8776, i64 %8760, i64 %8762
  store i64 %8779, i64* %8778, align 8
  store %struct.Memory* %loadMem_400faf, %struct.Memory** %MEMORY
  %loadBr_400faf = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400faf = icmp eq i8 %loadBr_400faf, 1
  br i1 %cmpBr_400faf, label %block_.L_401008, label %block_400fb5

block_400fb5:                                     ; preds = %block_.L_400fab
  %loadMem_400fb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8781 = getelementptr inbounds %struct.GPR, %struct.GPR* %8780, i32 0, i32 33
  %8782 = getelementptr inbounds %struct.Reg, %struct.Reg* %8781, i32 0, i32 0
  %PC.i284 = bitcast %union.anon* %8782 to i64*
  %8783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8784 = getelementptr inbounds %struct.GPR, %struct.GPR* %8783, i32 0, i32 15
  %8785 = getelementptr inbounds %struct.Reg, %struct.Reg* %8784, i32 0, i32 0
  %RBP.i285 = bitcast %union.anon* %8785 to i64*
  %8786 = load i64, i64* %RBP.i285
  %8787 = sub i64 %8786, 12
  %8788 = load i64, i64* %PC.i284
  %8789 = add i64 %8788, 7
  store i64 %8789, i64* %PC.i284
  %8790 = inttoptr i64 %8787 to i32*
  store i32 0, i32* %8790
  store %struct.Memory* %loadMem_400fb5, %struct.Memory** %MEMORY
  br label %block_.L_400fbc

block_.L_400fbc:                                  ; preds = %block_400fc6, %block_400fb5
  %loadMem_400fbc = load %struct.Memory*, %struct.Memory** %MEMORY
  %8791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8792 = getelementptr inbounds %struct.GPR, %struct.GPR* %8791, i32 0, i32 33
  %8793 = getelementptr inbounds %struct.Reg, %struct.Reg* %8792, i32 0, i32 0
  %PC.i282 = bitcast %union.anon* %8793 to i64*
  %8794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8795 = getelementptr inbounds %struct.GPR, %struct.GPR* %8794, i32 0, i32 15
  %8796 = getelementptr inbounds %struct.Reg, %struct.Reg* %8795, i32 0, i32 0
  %RBP.i283 = bitcast %union.anon* %8796 to i64*
  %8797 = load i64, i64* %RBP.i283
  %8798 = sub i64 %8797, 12
  %8799 = load i64, i64* %PC.i282
  %8800 = add i64 %8799, 4
  store i64 %8800, i64* %PC.i282
  %8801 = inttoptr i64 %8798 to i32*
  %8802 = load i32, i32* %8801
  %8803 = sub i32 %8802, 1
  %8804 = icmp ult i32 %8802, 1
  %8805 = zext i1 %8804 to i8
  %8806 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8805, i8* %8806, align 1
  %8807 = and i32 %8803, 255
  %8808 = call i32 @llvm.ctpop.i32(i32 %8807)
  %8809 = trunc i32 %8808 to i8
  %8810 = and i8 %8809, 1
  %8811 = xor i8 %8810, 1
  %8812 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8811, i8* %8812, align 1
  %8813 = xor i32 %8802, 1
  %8814 = xor i32 %8813, %8803
  %8815 = lshr i32 %8814, 4
  %8816 = trunc i32 %8815 to i8
  %8817 = and i8 %8816, 1
  %8818 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8817, i8* %8818, align 1
  %8819 = icmp eq i32 %8803, 0
  %8820 = zext i1 %8819 to i8
  %8821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8820, i8* %8821, align 1
  %8822 = lshr i32 %8803, 31
  %8823 = trunc i32 %8822 to i8
  %8824 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8823, i8* %8824, align 1
  %8825 = lshr i32 %8802, 31
  %8826 = xor i32 %8822, %8825
  %8827 = add i32 %8826, %8825
  %8828 = icmp eq i32 %8827, 2
  %8829 = zext i1 %8828 to i8
  %8830 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8829, i8* %8830, align 1
  store %struct.Memory* %loadMem_400fbc, %struct.Memory** %MEMORY
  %loadMem_400fc0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8832 = getelementptr inbounds %struct.GPR, %struct.GPR* %8831, i32 0, i32 33
  %8833 = getelementptr inbounds %struct.Reg, %struct.Reg* %8832, i32 0, i32 0
  %PC.i281 = bitcast %union.anon* %8833 to i64*
  %8834 = load i64, i64* %PC.i281
  %8835 = add i64 %8834, 53
  %8836 = load i64, i64* %PC.i281
  %8837 = add i64 %8836, 6
  %8838 = load i64, i64* %PC.i281
  %8839 = add i64 %8838, 6
  store i64 %8839, i64* %PC.i281
  %8840 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8841 = load i8, i8* %8840, align 1
  %8842 = icmp eq i8 %8841, 0
  %8843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8844 = load i8, i8* %8843, align 1
  %8845 = icmp ne i8 %8844, 0
  %8846 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8847 = load i8, i8* %8846, align 1
  %8848 = icmp ne i8 %8847, 0
  %8849 = xor i1 %8845, %8848
  %8850 = xor i1 %8849, true
  %8851 = and i1 %8842, %8850
  %8852 = zext i1 %8851 to i8
  store i8 %8852, i8* %BRANCH_TAKEN, align 1
  %8853 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8854 = select i1 %8851, i64 %8835, i64 %8837
  store i64 %8854, i64* %8853, align 8
  store %struct.Memory* %loadMem_400fc0, %struct.Memory** %MEMORY
  %loadBr_400fc0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400fc0 = icmp eq i8 %loadBr_400fc0, 1
  br i1 %cmpBr_400fc0, label %block_.L_400ff5, label %block_400fc6

block_400fc6:                                     ; preds = %block_.L_400fbc
  %loadMem_400fc6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8856 = getelementptr inbounds %struct.GPR, %struct.GPR* %8855, i32 0, i32 33
  %8857 = getelementptr inbounds %struct.Reg, %struct.Reg* %8856, i32 0, i32 0
  %PC.i278 = bitcast %union.anon* %8857 to i64*
  %8858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8859 = getelementptr inbounds %struct.GPR, %struct.GPR* %8858, i32 0, i32 1
  %8860 = getelementptr inbounds %struct.Reg, %struct.Reg* %8859, i32 0, i32 0
  %RAX.i279 = bitcast %union.anon* %8860 to i64*
  %8861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8862 = getelementptr inbounds %struct.GPR, %struct.GPR* %8861, i32 0, i32 15
  %8863 = getelementptr inbounds %struct.Reg, %struct.Reg* %8862, i32 0, i32 0
  %RBP.i280 = bitcast %union.anon* %8863 to i64*
  %8864 = load i64, i64* %RBP.i280
  %8865 = sub i64 %8864, 4
  %8866 = load i64, i64* %PC.i278
  %8867 = add i64 %8866, 3
  store i64 %8867, i64* %PC.i278
  %8868 = inttoptr i64 %8865 to i32*
  %8869 = load i32, i32* %8868
  %8870 = zext i32 %8869 to i64
  store i64 %8870, i64* %RAX.i279, align 8
  store %struct.Memory* %loadMem_400fc6, %struct.Memory** %MEMORY
  %loadMem_400fc9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8872 = getelementptr inbounds %struct.GPR, %struct.GPR* %8871, i32 0, i32 33
  %8873 = getelementptr inbounds %struct.Reg, %struct.Reg* %8872, i32 0, i32 0
  %PC.i275 = bitcast %union.anon* %8873 to i64*
  %8874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8875 = getelementptr inbounds %struct.GPR, %struct.GPR* %8874, i32 0, i32 5
  %8876 = getelementptr inbounds %struct.Reg, %struct.Reg* %8875, i32 0, i32 0
  %RCX.i276 = bitcast %union.anon* %8876 to i64*
  %8877 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8878 = getelementptr inbounds %struct.GPR, %struct.GPR* %8877, i32 0, i32 15
  %8879 = getelementptr inbounds %struct.Reg, %struct.Reg* %8878, i32 0, i32 0
  %RBP.i277 = bitcast %union.anon* %8879 to i64*
  %8880 = load i64, i64* %RBP.i277
  %8881 = sub i64 %8880, 8
  %8882 = load i64, i64* %PC.i275
  %8883 = add i64 %8882, 3
  store i64 %8883, i64* %PC.i275
  %8884 = inttoptr i64 %8881 to i32*
  %8885 = load i32, i32* %8884
  %8886 = zext i32 %8885 to i64
  store i64 %8886, i64* %RCX.i276, align 8
  store %struct.Memory* %loadMem_400fc9, %struct.Memory** %MEMORY
  %loadMem_400fcc = load %struct.Memory*, %struct.Memory** %MEMORY
  %8887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8888 = getelementptr inbounds %struct.GPR, %struct.GPR* %8887, i32 0, i32 33
  %8889 = getelementptr inbounds %struct.Reg, %struct.Reg* %8888, i32 0, i32 0
  %PC.i272 = bitcast %union.anon* %8889 to i64*
  %8890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8891 = getelementptr inbounds %struct.GPR, %struct.GPR* %8890, i32 0, i32 7
  %8892 = getelementptr inbounds %struct.Reg, %struct.Reg* %8891, i32 0, i32 0
  %RDX.i273 = bitcast %union.anon* %8892 to i64*
  %8893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8894 = getelementptr inbounds %struct.GPR, %struct.GPR* %8893, i32 0, i32 15
  %8895 = getelementptr inbounds %struct.Reg, %struct.Reg* %8894, i32 0, i32 0
  %RBP.i274 = bitcast %union.anon* %8895 to i64*
  %8896 = load i64, i64* %RBP.i274
  %8897 = sub i64 %8896, 12
  %8898 = load i64, i64* %PC.i272
  %8899 = add i64 %8898, 3
  store i64 %8899, i64* %PC.i272
  %8900 = inttoptr i64 %8897 to i32*
  %8901 = load i32, i32* %8900
  %8902 = zext i32 %8901 to i64
  store i64 %8902, i64* %RDX.i273, align 8
  store %struct.Memory* %loadMem_400fcc, %struct.Memory** %MEMORY
  %loadMem_400fcf = load %struct.Memory*, %struct.Memory** %MEMORY
  %8903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8904 = getelementptr inbounds %struct.GPR, %struct.GPR* %8903, i32 0, i32 33
  %8905 = getelementptr inbounds %struct.Reg, %struct.Reg* %8904, i32 0, i32 0
  %PC.i270 = bitcast %union.anon* %8905 to i64*
  %8906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8907 = getelementptr inbounds %struct.GPR, %struct.GPR* %8906, i32 0, i32 7
  %8908 = getelementptr inbounds %struct.Reg, %struct.Reg* %8907, i32 0, i32 0
  %RDX.i271 = bitcast %union.anon* %8908 to i64*
  %8909 = load i64, i64* %RDX.i271
  %8910 = load i64, i64* %PC.i270
  %8911 = add i64 %8910, 3
  store i64 %8911, i64* %PC.i270
  %8912 = and i64 %8909, 4294967295
  %8913 = shl i64 %8912, 2
  %8914 = trunc i64 %8913 to i32
  %8915 = icmp slt i32 %8914, 0
  %8916 = shl i32 %8914, 1
  %8917 = zext i32 %8916 to i64
  store i64 %8917, i64* %RDX.i271, align 8
  %8918 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %8919 = zext i1 %8915 to i8
  store i8 %8919, i8* %8918, align 1
  %8920 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %8921 = and i32 %8916, 254
  %8922 = call i32 @llvm.ctpop.i32(i32 %8921)
  %8923 = trunc i32 %8922 to i8
  %8924 = and i8 %8923, 1
  %8925 = xor i8 %8924, 1
  store i8 %8925, i8* %8920, align 1
  %8926 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8926, align 1
  %8927 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8928 = icmp eq i32 %8916, 0
  %8929 = zext i1 %8928 to i8
  store i8 %8929, i8* %8927, align 1
  %8930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8931 = lshr i32 %8916, 31
  %8932 = trunc i32 %8931 to i8
  store i8 %8932, i8* %8930, align 1
  %8933 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8933, align 1
  store %struct.Memory* %loadMem_400fcf, %struct.Memory** %MEMORY
  %loadMem_400fd2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8935 = getelementptr inbounds %struct.GPR, %struct.GPR* %8934, i32 0, i32 33
  %8936 = getelementptr inbounds %struct.Reg, %struct.Reg* %8935, i32 0, i32 0
  %PC.i267 = bitcast %union.anon* %8936 to i64*
  %8937 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8938 = getelementptr inbounds %struct.GPR, %struct.GPR* %8937, i32 0, i32 7
  %8939 = getelementptr inbounds %struct.Reg, %struct.Reg* %8938, i32 0, i32 0
  %EDX.i268 = bitcast %union.anon* %8939 to i32*
  %8940 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8941 = getelementptr inbounds %struct.GPR, %struct.GPR* %8940, i32 0, i32 5
  %8942 = getelementptr inbounds %struct.Reg, %struct.Reg* %8941, i32 0, i32 0
  %RCX.i269 = bitcast %union.anon* %8942 to i64*
  %8943 = load i64, i64* %RCX.i269
  %8944 = load i32, i32* %EDX.i268
  %8945 = zext i32 %8944 to i64
  %8946 = load i64, i64* %PC.i267
  %8947 = add i64 %8946, 2
  store i64 %8947, i64* %PC.i267
  %8948 = trunc i64 %8943 to i32
  %8949 = add i32 %8944, %8948
  %8950 = zext i32 %8949 to i64
  store i64 %8950, i64* %RCX.i269, align 8
  %8951 = icmp ult i32 %8949, %8948
  %8952 = icmp ult i32 %8949, %8944
  %8953 = or i1 %8951, %8952
  %8954 = zext i1 %8953 to i8
  %8955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8954, i8* %8955, align 1
  %8956 = and i32 %8949, 255
  %8957 = call i32 @llvm.ctpop.i32(i32 %8956)
  %8958 = trunc i32 %8957 to i8
  %8959 = and i8 %8958, 1
  %8960 = xor i8 %8959, 1
  %8961 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8960, i8* %8961, align 1
  %8962 = xor i64 %8945, %8943
  %8963 = trunc i64 %8962 to i32
  %8964 = xor i32 %8963, %8949
  %8965 = lshr i32 %8964, 4
  %8966 = trunc i32 %8965 to i8
  %8967 = and i8 %8966, 1
  %8968 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8967, i8* %8968, align 1
  %8969 = icmp eq i32 %8949, 0
  %8970 = zext i1 %8969 to i8
  %8971 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8970, i8* %8971, align 1
  %8972 = lshr i32 %8949, 31
  %8973 = trunc i32 %8972 to i8
  %8974 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8973, i8* %8974, align 1
  %8975 = lshr i32 %8948, 31
  %8976 = lshr i32 %8944, 31
  %8977 = xor i32 %8972, %8975
  %8978 = xor i32 %8972, %8976
  %8979 = add i32 %8977, %8978
  %8980 = icmp eq i32 %8979, 2
  %8981 = zext i1 %8980 to i8
  %8982 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8981, i8* %8982, align 1
  store %struct.Memory* %loadMem_400fd2, %struct.Memory** %MEMORY
  %loadMem_400fd4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8984 = getelementptr inbounds %struct.GPR, %struct.GPR* %8983, i32 0, i32 33
  %8985 = getelementptr inbounds %struct.Reg, %struct.Reg* %8984, i32 0, i32 0
  %PC.i265 = bitcast %union.anon* %8985 to i64*
  %8986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8987 = getelementptr inbounds %struct.GPR, %struct.GPR* %8986, i32 0, i32 5
  %8988 = getelementptr inbounds %struct.Reg, %struct.Reg* %8987, i32 0, i32 0
  %RCX.i266 = bitcast %union.anon* %8988 to i64*
  %8989 = load i64, i64* %RCX.i266
  %8990 = load i64, i64* %PC.i265
  %8991 = add i64 %8990, 3
  store i64 %8991, i64* %PC.i265
  %8992 = and i64 %8989, 4294967295
  %8993 = shl i64 %8992, 2
  %8994 = trunc i64 %8993 to i32
  %8995 = icmp slt i32 %8994, 0
  %8996 = shl i32 %8994, 1
  %8997 = zext i32 %8996 to i64
  store i64 %8997, i64* %RCX.i266, align 8
  %8998 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %8999 = zext i1 %8995 to i8
  store i8 %8999, i8* %8998, align 1
  %9000 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %9001 = and i32 %8996, 254
  %9002 = call i32 @llvm.ctpop.i32(i32 %9001)
  %9003 = trunc i32 %9002 to i8
  %9004 = and i8 %9003, 1
  %9005 = xor i8 %9004, 1
  store i8 %9005, i8* %9000, align 1
  %9006 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9006, align 1
  %9007 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9008 = icmp eq i32 %8996, 0
  %9009 = zext i1 %9008 to i8
  store i8 %9009, i8* %9007, align 1
  %9010 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9011 = lshr i32 %8996, 31
  %9012 = trunc i32 %9011 to i8
  store i8 %9012, i8* %9010, align 1
  %9013 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9013, align 1
  store %struct.Memory* %loadMem_400fd4, %struct.Memory** %MEMORY
  %loadMem_400fd7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9015 = getelementptr inbounds %struct.GPR, %struct.GPR* %9014, i32 0, i32 33
  %9016 = getelementptr inbounds %struct.Reg, %struct.Reg* %9015, i32 0, i32 0
  %PC.i262 = bitcast %union.anon* %9016 to i64*
  %9017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9018 = getelementptr inbounds %struct.GPR, %struct.GPR* %9017, i32 0, i32 5
  %9019 = getelementptr inbounds %struct.Reg, %struct.Reg* %9018, i32 0, i32 0
  %ECX.i263 = bitcast %union.anon* %9019 to i32*
  %9020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9021 = getelementptr inbounds %struct.GPR, %struct.GPR* %9020, i32 0, i32 1
  %9022 = getelementptr inbounds %struct.Reg, %struct.Reg* %9021, i32 0, i32 0
  %RAX.i264 = bitcast %union.anon* %9022 to i64*
  %9023 = load i64, i64* %RAX.i264
  %9024 = load i32, i32* %ECX.i263
  %9025 = zext i32 %9024 to i64
  %9026 = load i64, i64* %PC.i262
  %9027 = add i64 %9026, 2
  store i64 %9027, i64* %PC.i262
  %9028 = trunc i64 %9023 to i32
  %9029 = add i32 %9024, %9028
  %9030 = zext i32 %9029 to i64
  store i64 %9030, i64* %RAX.i264, align 8
  %9031 = icmp ult i32 %9029, %9028
  %9032 = icmp ult i32 %9029, %9024
  %9033 = or i1 %9031, %9032
  %9034 = zext i1 %9033 to i8
  %9035 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9034, i8* %9035, align 1
  %9036 = and i32 %9029, 255
  %9037 = call i32 @llvm.ctpop.i32(i32 %9036)
  %9038 = trunc i32 %9037 to i8
  %9039 = and i8 %9038, 1
  %9040 = xor i8 %9039, 1
  %9041 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9040, i8* %9041, align 1
  %9042 = xor i64 %9025, %9023
  %9043 = trunc i64 %9042 to i32
  %9044 = xor i32 %9043, %9029
  %9045 = lshr i32 %9044, 4
  %9046 = trunc i32 %9045 to i8
  %9047 = and i8 %9046, 1
  %9048 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9047, i8* %9048, align 1
  %9049 = icmp eq i32 %9029, 0
  %9050 = zext i1 %9049 to i8
  %9051 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9050, i8* %9051, align 1
  %9052 = lshr i32 %9029, 31
  %9053 = trunc i32 %9052 to i8
  %9054 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9053, i8* %9054, align 1
  %9055 = lshr i32 %9028, 31
  %9056 = lshr i32 %9024, 31
  %9057 = xor i32 %9052, %9055
  %9058 = xor i32 %9052, %9056
  %9059 = add i32 %9057, %9058
  %9060 = icmp eq i32 %9059, 2
  %9061 = zext i1 %9060 to i8
  %9062 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9061, i8* %9062, align 1
  store %struct.Memory* %loadMem_400fd7, %struct.Memory** %MEMORY
  %loadMem_400fd9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9064 = getelementptr inbounds %struct.GPR, %struct.GPR* %9063, i32 0, i32 33
  %9065 = getelementptr inbounds %struct.Reg, %struct.Reg* %9064, i32 0, i32 0
  %PC.i259 = bitcast %union.anon* %9065 to i64*
  %9066 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9067 = getelementptr inbounds %struct.GPR, %struct.GPR* %9066, i32 0, i32 1
  %9068 = getelementptr inbounds %struct.Reg, %struct.Reg* %9067, i32 0, i32 0
  %EAX.i260 = bitcast %union.anon* %9068 to i32*
  %9069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9070 = getelementptr inbounds %struct.GPR, %struct.GPR* %9069, i32 0, i32 9
  %9071 = getelementptr inbounds %struct.Reg, %struct.Reg* %9070, i32 0, i32 0
  %RSI.i261 = bitcast %union.anon* %9071 to i64*
  %9072 = load i32, i32* %EAX.i260
  %9073 = zext i32 %9072 to i64
  %9074 = load i64, i64* %PC.i259
  %9075 = add i64 %9074, 3
  store i64 %9075, i64* %PC.i259
  %9076 = shl i64 %9073, 32
  %9077 = ashr exact i64 %9076, 32
  store i64 %9077, i64* %RSI.i261, align 8
  store %struct.Memory* %loadMem_400fd9, %struct.Memory** %MEMORY
  %loadMem_400fdc = load %struct.Memory*, %struct.Memory** %MEMORY
  %9078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9079 = getelementptr inbounds %struct.GPR, %struct.GPR* %9078, i32 0, i32 33
  %9080 = getelementptr inbounds %struct.Reg, %struct.Reg* %9079, i32 0, i32 0
  %PC.i257 = bitcast %union.anon* %9080 to i64*
  %9081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9082 = getelementptr inbounds %struct.GPR, %struct.GPR* %9081, i32 0, i32 9
  %9083 = getelementptr inbounds %struct.Reg, %struct.Reg* %9082, i32 0, i32 0
  %RSI.i258 = bitcast %union.anon* %9083 to i64*
  %9084 = load i64, i64* %RSI.i258
  %9085 = mul i64 %9084, 4
  %9086 = add i64 %9085, ptrtoint (%G_0x608aa0___rsi_4__type* @G_0x608aa0___rsi_4_ to i64)
  %9087 = load i64, i64* %PC.i257
  %9088 = add i64 %9087, 11
  store i64 %9088, i64* %PC.i257
  %9089 = inttoptr i64 %9086 to i32*
  store i32 1, i32* %9089
  store %struct.Memory* %loadMem_400fdc, %struct.Memory** %MEMORY
  %loadMem_400fe7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9091 = getelementptr inbounds %struct.GPR, %struct.GPR* %9090, i32 0, i32 33
  %9092 = getelementptr inbounds %struct.Reg, %struct.Reg* %9091, i32 0, i32 0
  %PC.i254 = bitcast %union.anon* %9092 to i64*
  %9093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9094 = getelementptr inbounds %struct.GPR, %struct.GPR* %9093, i32 0, i32 1
  %9095 = getelementptr inbounds %struct.Reg, %struct.Reg* %9094, i32 0, i32 0
  %RAX.i255 = bitcast %union.anon* %9095 to i64*
  %9096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9097 = getelementptr inbounds %struct.GPR, %struct.GPR* %9096, i32 0, i32 15
  %9098 = getelementptr inbounds %struct.Reg, %struct.Reg* %9097, i32 0, i32 0
  %RBP.i256 = bitcast %union.anon* %9098 to i64*
  %9099 = load i64, i64* %RBP.i256
  %9100 = sub i64 %9099, 12
  %9101 = load i64, i64* %PC.i254
  %9102 = add i64 %9101, 3
  store i64 %9102, i64* %PC.i254
  %9103 = inttoptr i64 %9100 to i32*
  %9104 = load i32, i32* %9103
  %9105 = zext i32 %9104 to i64
  store i64 %9105, i64* %RAX.i255, align 8
  store %struct.Memory* %loadMem_400fe7, %struct.Memory** %MEMORY
  %loadMem_400fea = load %struct.Memory*, %struct.Memory** %MEMORY
  %9106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9107 = getelementptr inbounds %struct.GPR, %struct.GPR* %9106, i32 0, i32 33
  %9108 = getelementptr inbounds %struct.Reg, %struct.Reg* %9107, i32 0, i32 0
  %PC.i252 = bitcast %union.anon* %9108 to i64*
  %9109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9110 = getelementptr inbounds %struct.GPR, %struct.GPR* %9109, i32 0, i32 1
  %9111 = getelementptr inbounds %struct.Reg, %struct.Reg* %9110, i32 0, i32 0
  %RAX.i253 = bitcast %union.anon* %9111 to i64*
  %9112 = load i64, i64* %RAX.i253
  %9113 = load i64, i64* %PC.i252
  %9114 = add i64 %9113, 3
  store i64 %9114, i64* %PC.i252
  %9115 = trunc i64 %9112 to i32
  %9116 = add i32 1, %9115
  %9117 = zext i32 %9116 to i64
  store i64 %9117, i64* %RAX.i253, align 8
  %9118 = icmp ult i32 %9116, %9115
  %9119 = icmp ult i32 %9116, 1
  %9120 = or i1 %9118, %9119
  %9121 = zext i1 %9120 to i8
  %9122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9121, i8* %9122, align 1
  %9123 = and i32 %9116, 255
  %9124 = call i32 @llvm.ctpop.i32(i32 %9123)
  %9125 = trunc i32 %9124 to i8
  %9126 = and i8 %9125, 1
  %9127 = xor i8 %9126, 1
  %9128 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9127, i8* %9128, align 1
  %9129 = xor i64 1, %9112
  %9130 = trunc i64 %9129 to i32
  %9131 = xor i32 %9130, %9116
  %9132 = lshr i32 %9131, 4
  %9133 = trunc i32 %9132 to i8
  %9134 = and i8 %9133, 1
  %9135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9134, i8* %9135, align 1
  %9136 = icmp eq i32 %9116, 0
  %9137 = zext i1 %9136 to i8
  %9138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9137, i8* %9138, align 1
  %9139 = lshr i32 %9116, 31
  %9140 = trunc i32 %9139 to i8
  %9141 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9140, i8* %9141, align 1
  %9142 = lshr i32 %9115, 31
  %9143 = xor i32 %9139, %9142
  %9144 = add i32 %9143, %9139
  %9145 = icmp eq i32 %9144, 2
  %9146 = zext i1 %9145 to i8
  %9147 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9146, i8* %9147, align 1
  store %struct.Memory* %loadMem_400fea, %struct.Memory** %MEMORY
  %loadMem_400fed = load %struct.Memory*, %struct.Memory** %MEMORY
  %9148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9149 = getelementptr inbounds %struct.GPR, %struct.GPR* %9148, i32 0, i32 33
  %9150 = getelementptr inbounds %struct.Reg, %struct.Reg* %9149, i32 0, i32 0
  %PC.i249 = bitcast %union.anon* %9150 to i64*
  %9151 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9152 = getelementptr inbounds %struct.GPR, %struct.GPR* %9151, i32 0, i32 1
  %9153 = getelementptr inbounds %struct.Reg, %struct.Reg* %9152, i32 0, i32 0
  %EAX.i250 = bitcast %union.anon* %9153 to i32*
  %9154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9155 = getelementptr inbounds %struct.GPR, %struct.GPR* %9154, i32 0, i32 15
  %9156 = getelementptr inbounds %struct.Reg, %struct.Reg* %9155, i32 0, i32 0
  %RBP.i251 = bitcast %union.anon* %9156 to i64*
  %9157 = load i64, i64* %RBP.i251
  %9158 = sub i64 %9157, 12
  %9159 = load i32, i32* %EAX.i250
  %9160 = zext i32 %9159 to i64
  %9161 = load i64, i64* %PC.i249
  %9162 = add i64 %9161, 3
  store i64 %9162, i64* %PC.i249
  %9163 = inttoptr i64 %9158 to i32*
  store i32 %9159, i32* %9163
  store %struct.Memory* %loadMem_400fed, %struct.Memory** %MEMORY
  %loadMem_400ff0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9165 = getelementptr inbounds %struct.GPR, %struct.GPR* %9164, i32 0, i32 33
  %9166 = getelementptr inbounds %struct.Reg, %struct.Reg* %9165, i32 0, i32 0
  %PC.i248 = bitcast %union.anon* %9166 to i64*
  %9167 = load i64, i64* %PC.i248
  %9168 = add i64 %9167, -52
  %9169 = load i64, i64* %PC.i248
  %9170 = add i64 %9169, 5
  store i64 %9170, i64* %PC.i248
  %9171 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9168, i64* %9171, align 8
  store %struct.Memory* %loadMem_400ff0, %struct.Memory** %MEMORY
  br label %block_.L_400fbc

block_.L_400ff5:                                  ; preds = %block_.L_400fbc
  %loadMem_400ff5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9173 = getelementptr inbounds %struct.GPR, %struct.GPR* %9172, i32 0, i32 33
  %9174 = getelementptr inbounds %struct.Reg, %struct.Reg* %9173, i32 0, i32 0
  %PC.i247 = bitcast %union.anon* %9174 to i64*
  %9175 = load i64, i64* %PC.i247
  %9176 = add i64 %9175, 5
  %9177 = load i64, i64* %PC.i247
  %9178 = add i64 %9177, 5
  store i64 %9178, i64* %PC.i247
  %9179 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9176, i64* %9179, align 8
  store %struct.Memory* %loadMem_400ff5, %struct.Memory** %MEMORY
  br label %block_.L_400ffa

block_.L_400ffa:                                  ; preds = %block_.L_400ff5
  %loadMem_400ffa = load %struct.Memory*, %struct.Memory** %MEMORY
  %9180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9181 = getelementptr inbounds %struct.GPR, %struct.GPR* %9180, i32 0, i32 33
  %9182 = getelementptr inbounds %struct.Reg, %struct.Reg* %9181, i32 0, i32 0
  %PC.i244 = bitcast %union.anon* %9182 to i64*
  %9183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9184 = getelementptr inbounds %struct.GPR, %struct.GPR* %9183, i32 0, i32 1
  %9185 = getelementptr inbounds %struct.Reg, %struct.Reg* %9184, i32 0, i32 0
  %RAX.i245 = bitcast %union.anon* %9185 to i64*
  %9186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9187 = getelementptr inbounds %struct.GPR, %struct.GPR* %9186, i32 0, i32 15
  %9188 = getelementptr inbounds %struct.Reg, %struct.Reg* %9187, i32 0, i32 0
  %RBP.i246 = bitcast %union.anon* %9188 to i64*
  %9189 = load i64, i64* %RBP.i246
  %9190 = sub i64 %9189, 8
  %9191 = load i64, i64* %PC.i244
  %9192 = add i64 %9191, 3
  store i64 %9192, i64* %PC.i244
  %9193 = inttoptr i64 %9190 to i32*
  %9194 = load i32, i32* %9193
  %9195 = zext i32 %9194 to i64
  store i64 %9195, i64* %RAX.i245, align 8
  store %struct.Memory* %loadMem_400ffa, %struct.Memory** %MEMORY
  %loadMem_400ffd = load %struct.Memory*, %struct.Memory** %MEMORY
  %9196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9197 = getelementptr inbounds %struct.GPR, %struct.GPR* %9196, i32 0, i32 33
  %9198 = getelementptr inbounds %struct.Reg, %struct.Reg* %9197, i32 0, i32 0
  %PC.i242 = bitcast %union.anon* %9198 to i64*
  %9199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9200 = getelementptr inbounds %struct.GPR, %struct.GPR* %9199, i32 0, i32 1
  %9201 = getelementptr inbounds %struct.Reg, %struct.Reg* %9200, i32 0, i32 0
  %RAX.i243 = bitcast %union.anon* %9201 to i64*
  %9202 = load i64, i64* %RAX.i243
  %9203 = load i64, i64* %PC.i242
  %9204 = add i64 %9203, 3
  store i64 %9204, i64* %PC.i242
  %9205 = trunc i64 %9202 to i32
  %9206 = add i32 1, %9205
  %9207 = zext i32 %9206 to i64
  store i64 %9207, i64* %RAX.i243, align 8
  %9208 = icmp ult i32 %9206, %9205
  %9209 = icmp ult i32 %9206, 1
  %9210 = or i1 %9208, %9209
  %9211 = zext i1 %9210 to i8
  %9212 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9211, i8* %9212, align 1
  %9213 = and i32 %9206, 255
  %9214 = call i32 @llvm.ctpop.i32(i32 %9213)
  %9215 = trunc i32 %9214 to i8
  %9216 = and i8 %9215, 1
  %9217 = xor i8 %9216, 1
  %9218 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9217, i8* %9218, align 1
  %9219 = xor i64 1, %9202
  %9220 = trunc i64 %9219 to i32
  %9221 = xor i32 %9220, %9206
  %9222 = lshr i32 %9221, 4
  %9223 = trunc i32 %9222 to i8
  %9224 = and i8 %9223, 1
  %9225 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9224, i8* %9225, align 1
  %9226 = icmp eq i32 %9206, 0
  %9227 = zext i1 %9226 to i8
  %9228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9227, i8* %9228, align 1
  %9229 = lshr i32 %9206, 31
  %9230 = trunc i32 %9229 to i8
  %9231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9230, i8* %9231, align 1
  %9232 = lshr i32 %9205, 31
  %9233 = xor i32 %9229, %9232
  %9234 = add i32 %9233, %9229
  %9235 = icmp eq i32 %9234, 2
  %9236 = zext i1 %9235 to i8
  %9237 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9236, i8* %9237, align 1
  store %struct.Memory* %loadMem_400ffd, %struct.Memory** %MEMORY
  %loadMem_401000 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9239 = getelementptr inbounds %struct.GPR, %struct.GPR* %9238, i32 0, i32 33
  %9240 = getelementptr inbounds %struct.Reg, %struct.Reg* %9239, i32 0, i32 0
  %PC.i239 = bitcast %union.anon* %9240 to i64*
  %9241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9242 = getelementptr inbounds %struct.GPR, %struct.GPR* %9241, i32 0, i32 1
  %9243 = getelementptr inbounds %struct.Reg, %struct.Reg* %9242, i32 0, i32 0
  %EAX.i240 = bitcast %union.anon* %9243 to i32*
  %9244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9245 = getelementptr inbounds %struct.GPR, %struct.GPR* %9244, i32 0, i32 15
  %9246 = getelementptr inbounds %struct.Reg, %struct.Reg* %9245, i32 0, i32 0
  %RBP.i241 = bitcast %union.anon* %9246 to i64*
  %9247 = load i64, i64* %RBP.i241
  %9248 = sub i64 %9247, 8
  %9249 = load i32, i32* %EAX.i240
  %9250 = zext i32 %9249 to i64
  %9251 = load i64, i64* %PC.i239
  %9252 = add i64 %9251, 3
  store i64 %9252, i64* %PC.i239
  %9253 = inttoptr i64 %9248 to i32*
  store i32 %9249, i32* %9253
  store %struct.Memory* %loadMem_401000, %struct.Memory** %MEMORY
  %loadMem_401003 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9255 = getelementptr inbounds %struct.GPR, %struct.GPR* %9254, i32 0, i32 33
  %9256 = getelementptr inbounds %struct.Reg, %struct.Reg* %9255, i32 0, i32 0
  %PC.i238 = bitcast %union.anon* %9256 to i64*
  %9257 = load i64, i64* %PC.i238
  %9258 = add i64 %9257, -88
  %9259 = load i64, i64* %PC.i238
  %9260 = add i64 %9259, 5
  store i64 %9260, i64* %PC.i238
  %9261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9258, i64* %9261, align 8
  store %struct.Memory* %loadMem_401003, %struct.Memory** %MEMORY
  br label %block_.L_400fab

block_.L_401008:                                  ; preds = %block_.L_400fab
  %loadMem_401008 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9263 = getelementptr inbounds %struct.GPR, %struct.GPR* %9262, i32 0, i32 33
  %9264 = getelementptr inbounds %struct.Reg, %struct.Reg* %9263, i32 0, i32 0
  %PC.i237 = bitcast %union.anon* %9264 to i64*
  %9265 = load i64, i64* %PC.i237
  %9266 = add i64 %9265, 5
  %9267 = load i64, i64* %PC.i237
  %9268 = add i64 %9267, 5
  store i64 %9268, i64* %PC.i237
  %9269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9266, i64* %9269, align 8
  store %struct.Memory* %loadMem_401008, %struct.Memory** %MEMORY
  br label %block_.L_40100d

block_.L_40100d:                                  ; preds = %block_.L_401008
  %loadMem_40100d = load %struct.Memory*, %struct.Memory** %MEMORY
  %9270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9271 = getelementptr inbounds %struct.GPR, %struct.GPR* %9270, i32 0, i32 33
  %9272 = getelementptr inbounds %struct.Reg, %struct.Reg* %9271, i32 0, i32 0
  %PC.i234 = bitcast %union.anon* %9272 to i64*
  %9273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9274 = getelementptr inbounds %struct.GPR, %struct.GPR* %9273, i32 0, i32 1
  %9275 = getelementptr inbounds %struct.Reg, %struct.Reg* %9274, i32 0, i32 0
  %RAX.i235 = bitcast %union.anon* %9275 to i64*
  %9276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9277 = getelementptr inbounds %struct.GPR, %struct.GPR* %9276, i32 0, i32 15
  %9278 = getelementptr inbounds %struct.Reg, %struct.Reg* %9277, i32 0, i32 0
  %RBP.i236 = bitcast %union.anon* %9278 to i64*
  %9279 = load i64, i64* %RBP.i236
  %9280 = sub i64 %9279, 4
  %9281 = load i64, i64* %PC.i234
  %9282 = add i64 %9281, 3
  store i64 %9282, i64* %PC.i234
  %9283 = inttoptr i64 %9280 to i32*
  %9284 = load i32, i32* %9283
  %9285 = zext i32 %9284 to i64
  store i64 %9285, i64* %RAX.i235, align 8
  store %struct.Memory* %loadMem_40100d, %struct.Memory** %MEMORY
  %loadMem_401010 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9287 = getelementptr inbounds %struct.GPR, %struct.GPR* %9286, i32 0, i32 33
  %9288 = getelementptr inbounds %struct.Reg, %struct.Reg* %9287, i32 0, i32 0
  %PC.i232 = bitcast %union.anon* %9288 to i64*
  %9289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9290 = getelementptr inbounds %struct.GPR, %struct.GPR* %9289, i32 0, i32 1
  %9291 = getelementptr inbounds %struct.Reg, %struct.Reg* %9290, i32 0, i32 0
  %RAX.i233 = bitcast %union.anon* %9291 to i64*
  %9292 = load i64, i64* %RAX.i233
  %9293 = load i64, i64* %PC.i232
  %9294 = add i64 %9293, 3
  store i64 %9294, i64* %PC.i232
  %9295 = trunc i64 %9292 to i32
  %9296 = add i32 1, %9295
  %9297 = zext i32 %9296 to i64
  store i64 %9297, i64* %RAX.i233, align 8
  %9298 = icmp ult i32 %9296, %9295
  %9299 = icmp ult i32 %9296, 1
  %9300 = or i1 %9298, %9299
  %9301 = zext i1 %9300 to i8
  %9302 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9301, i8* %9302, align 1
  %9303 = and i32 %9296, 255
  %9304 = call i32 @llvm.ctpop.i32(i32 %9303)
  %9305 = trunc i32 %9304 to i8
  %9306 = and i8 %9305, 1
  %9307 = xor i8 %9306, 1
  %9308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9307, i8* %9308, align 1
  %9309 = xor i64 1, %9292
  %9310 = trunc i64 %9309 to i32
  %9311 = xor i32 %9310, %9296
  %9312 = lshr i32 %9311, 4
  %9313 = trunc i32 %9312 to i8
  %9314 = and i8 %9313, 1
  %9315 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9314, i8* %9315, align 1
  %9316 = icmp eq i32 %9296, 0
  %9317 = zext i1 %9316 to i8
  %9318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9317, i8* %9318, align 1
  %9319 = lshr i32 %9296, 31
  %9320 = trunc i32 %9319 to i8
  %9321 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9320, i8* %9321, align 1
  %9322 = lshr i32 %9295, 31
  %9323 = xor i32 %9319, %9322
  %9324 = add i32 %9323, %9319
  %9325 = icmp eq i32 %9324, 2
  %9326 = zext i1 %9325 to i8
  %9327 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9326, i8* %9327, align 1
  store %struct.Memory* %loadMem_401010, %struct.Memory** %MEMORY
  %loadMem_401013 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9329 = getelementptr inbounds %struct.GPR, %struct.GPR* %9328, i32 0, i32 33
  %9330 = getelementptr inbounds %struct.Reg, %struct.Reg* %9329, i32 0, i32 0
  %PC.i229 = bitcast %union.anon* %9330 to i64*
  %9331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9332 = getelementptr inbounds %struct.GPR, %struct.GPR* %9331, i32 0, i32 1
  %9333 = getelementptr inbounds %struct.Reg, %struct.Reg* %9332, i32 0, i32 0
  %EAX.i230 = bitcast %union.anon* %9333 to i32*
  %9334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9335 = getelementptr inbounds %struct.GPR, %struct.GPR* %9334, i32 0, i32 15
  %9336 = getelementptr inbounds %struct.Reg, %struct.Reg* %9335, i32 0, i32 0
  %RBP.i231 = bitcast %union.anon* %9336 to i64*
  %9337 = load i64, i64* %RBP.i231
  %9338 = sub i64 %9337, 4
  %9339 = load i32, i32* %EAX.i230
  %9340 = zext i32 %9339 to i64
  %9341 = load i64, i64* %PC.i229
  %9342 = add i64 %9341, 3
  store i64 %9342, i64* %PC.i229
  %9343 = inttoptr i64 %9338 to i32*
  store i32 %9339, i32* %9343
  store %struct.Memory* %loadMem_401013, %struct.Memory** %MEMORY
  %loadMem_401016 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9345 = getelementptr inbounds %struct.GPR, %struct.GPR* %9344, i32 0, i32 33
  %9346 = getelementptr inbounds %struct.Reg, %struct.Reg* %9345, i32 0, i32 0
  %PC.i228 = bitcast %union.anon* %9346 to i64*
  %9347 = load i64, i64* %PC.i228
  %9348 = add i64 %9347, -124
  %9349 = load i64, i64* %PC.i228
  %9350 = add i64 %9349, 5
  store i64 %9350, i64* %PC.i228
  %9351 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9348, i64* %9351, align 8
  store %struct.Memory* %loadMem_401016, %struct.Memory** %MEMORY
  br label %block_.L_400f9a

block_.L_40101b:                                  ; preds = %block_.L_400f9a
  %loadMem_40101b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9353 = getelementptr inbounds %struct.GPR, %struct.GPR* %9352, i32 0, i32 33
  %9354 = getelementptr inbounds %struct.Reg, %struct.Reg* %9353, i32 0, i32 0
  %PC.i227 = bitcast %union.anon* %9354 to i64*
  %9355 = load i64, i64* %PC.i227
  %9356 = add i64 %9355, 11
  store i64 %9356, i64* %PC.i227
  store i32 2, i32* bitcast (%G_0x619218_type* @G_0x619218 to i32*)
  store %struct.Memory* %loadMem_40101b, %struct.Memory** %MEMORY
  %loadMem_401026 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9358 = getelementptr inbounds %struct.GPR, %struct.GPR* %9357, i32 0, i32 33
  %9359 = getelementptr inbounds %struct.Reg, %struct.Reg* %9358, i32 0, i32 0
  %PC.i226 = bitcast %union.anon* %9359 to i64*
  %9360 = load i64, i64* %PC.i226
  %9361 = add i64 %9360, 11
  store i64 %9361, i64* %PC.i226
  store i32 65, i32* bitcast (%G_0x610278_type* @G_0x610278 to i32*)
  store %struct.Memory* %loadMem_401026, %struct.Memory** %MEMORY
  %loadMem_401031 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9363 = getelementptr inbounds %struct.GPR, %struct.GPR* %9362, i32 0, i32 33
  %9364 = getelementptr inbounds %struct.Reg, %struct.Reg* %9363, i32 0, i32 0
  %PC.i224 = bitcast %union.anon* %9364 to i64*
  %9365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9366 = getelementptr inbounds %struct.GPR, %struct.GPR* %9365, i32 0, i32 15
  %9367 = getelementptr inbounds %struct.Reg, %struct.Reg* %9366, i32 0, i32 0
  %RBP.i225 = bitcast %union.anon* %9367 to i64*
  %9368 = load i64, i64* %RBP.i225
  %9369 = sub i64 %9368, 4
  %9370 = load i64, i64* %PC.i224
  %9371 = add i64 %9370, 7
  store i64 %9371, i64* %PC.i224
  %9372 = inttoptr i64 %9369 to i32*
  store i32 0, i32* %9372
  store %struct.Memory* %loadMem_401031, %struct.Memory** %MEMORY
  br label %block_.L_401038

block_.L_401038:                                  ; preds = %block_.L_4010ab, %block_.L_40101b
  %loadMem_401038 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9374 = getelementptr inbounds %struct.GPR, %struct.GPR* %9373, i32 0, i32 33
  %9375 = getelementptr inbounds %struct.Reg, %struct.Reg* %9374, i32 0, i32 0
  %PC.i222 = bitcast %union.anon* %9375 to i64*
  %9376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9377 = getelementptr inbounds %struct.GPR, %struct.GPR* %9376, i32 0, i32 15
  %9378 = getelementptr inbounds %struct.Reg, %struct.Reg* %9377, i32 0, i32 0
  %RBP.i223 = bitcast %union.anon* %9378 to i64*
  %9379 = load i64, i64* %RBP.i223
  %9380 = sub i64 %9379, 4
  %9381 = load i64, i64* %PC.i222
  %9382 = add i64 %9381, 4
  store i64 %9382, i64* %PC.i222
  %9383 = inttoptr i64 %9380 to i32*
  %9384 = load i32, i32* %9383
  %9385 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9385, align 1
  %9386 = and i32 %9384, 255
  %9387 = call i32 @llvm.ctpop.i32(i32 %9386)
  %9388 = trunc i32 %9387 to i8
  %9389 = and i8 %9388, 1
  %9390 = xor i8 %9389, 1
  %9391 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9390, i8* %9391, align 1
  %9392 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9392, align 1
  %9393 = icmp eq i32 %9384, 0
  %9394 = zext i1 %9393 to i8
  %9395 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9394, i8* %9395, align 1
  %9396 = lshr i32 %9384, 31
  %9397 = trunc i32 %9396 to i8
  %9398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9397, i8* %9398, align 1
  %9399 = lshr i32 %9384, 31
  %9400 = xor i32 %9396, %9399
  %9401 = add i32 %9400, %9399
  %9402 = icmp eq i32 %9401, 2
  %9403 = zext i1 %9402 to i8
  %9404 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9403, i8* %9404, align 1
  store %struct.Memory* %loadMem_401038, %struct.Memory** %MEMORY
  %loadMem_40103c = load %struct.Memory*, %struct.Memory** %MEMORY
  %9405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9406 = getelementptr inbounds %struct.GPR, %struct.GPR* %9405, i32 0, i32 33
  %9407 = getelementptr inbounds %struct.Reg, %struct.Reg* %9406, i32 0, i32 0
  %PC.i221 = bitcast %union.anon* %9407 to i64*
  %9408 = load i64, i64* %PC.i221
  %9409 = add i64 %9408, 125
  %9410 = load i64, i64* %PC.i221
  %9411 = add i64 %9410, 6
  %9412 = load i64, i64* %PC.i221
  %9413 = add i64 %9412, 6
  store i64 %9413, i64* %PC.i221
  %9414 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9415 = load i8, i8* %9414, align 1
  %9416 = icmp eq i8 %9415, 0
  %9417 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9418 = load i8, i8* %9417, align 1
  %9419 = icmp ne i8 %9418, 0
  %9420 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %9421 = load i8, i8* %9420, align 1
  %9422 = icmp ne i8 %9421, 0
  %9423 = xor i1 %9419, %9422
  %9424 = xor i1 %9423, true
  %9425 = and i1 %9416, %9424
  %9426 = zext i1 %9425 to i8
  store i8 %9426, i8* %BRANCH_TAKEN, align 1
  %9427 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9428 = select i1 %9425, i64 %9409, i64 %9411
  store i64 %9428, i64* %9427, align 8
  store %struct.Memory* %loadMem_40103c, %struct.Memory** %MEMORY
  %loadBr_40103c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40103c = icmp eq i8 %loadBr_40103c, 1
  br i1 %cmpBr_40103c, label %block_.L_4010b9, label %block_401042

block_401042:                                     ; preds = %block_.L_401038
  %loadMem_401042 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9430 = getelementptr inbounds %struct.GPR, %struct.GPR* %9429, i32 0, i32 33
  %9431 = getelementptr inbounds %struct.Reg, %struct.Reg* %9430, i32 0, i32 0
  %PC.i219 = bitcast %union.anon* %9431 to i64*
  %9432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9433 = getelementptr inbounds %struct.GPR, %struct.GPR* %9432, i32 0, i32 15
  %9434 = getelementptr inbounds %struct.Reg, %struct.Reg* %9433, i32 0, i32 0
  %RBP.i220 = bitcast %union.anon* %9434 to i64*
  %9435 = load i64, i64* %RBP.i220
  %9436 = sub i64 %9435, 8
  %9437 = load i64, i64* %PC.i219
  %9438 = add i64 %9437, 7
  store i64 %9438, i64* %PC.i219
  %9439 = inttoptr i64 %9436 to i32*
  store i32 0, i32* %9439
  store %struct.Memory* %loadMem_401042, %struct.Memory** %MEMORY
  br label %block_.L_401049

block_.L_401049:                                  ; preds = %block_.L_401098, %block_401042
  %loadMem_401049 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9441 = getelementptr inbounds %struct.GPR, %struct.GPR* %9440, i32 0, i32 33
  %9442 = getelementptr inbounds %struct.Reg, %struct.Reg* %9441, i32 0, i32 0
  %PC.i217 = bitcast %union.anon* %9442 to i64*
  %9443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9444 = getelementptr inbounds %struct.GPR, %struct.GPR* %9443, i32 0, i32 15
  %9445 = getelementptr inbounds %struct.Reg, %struct.Reg* %9444, i32 0, i32 0
  %RBP.i218 = bitcast %union.anon* %9445 to i64*
  %9446 = load i64, i64* %RBP.i218
  %9447 = sub i64 %9446, 8
  %9448 = load i64, i64* %PC.i217
  %9449 = add i64 %9448, 4
  store i64 %9449, i64* %PC.i217
  %9450 = inttoptr i64 %9447 to i32*
  %9451 = load i32, i32* %9450
  %9452 = sub i32 %9451, 1
  %9453 = icmp ult i32 %9451, 1
  %9454 = zext i1 %9453 to i8
  %9455 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9454, i8* %9455, align 1
  %9456 = and i32 %9452, 255
  %9457 = call i32 @llvm.ctpop.i32(i32 %9456)
  %9458 = trunc i32 %9457 to i8
  %9459 = and i8 %9458, 1
  %9460 = xor i8 %9459, 1
  %9461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9460, i8* %9461, align 1
  %9462 = xor i32 %9451, 1
  %9463 = xor i32 %9462, %9452
  %9464 = lshr i32 %9463, 4
  %9465 = trunc i32 %9464 to i8
  %9466 = and i8 %9465, 1
  %9467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9466, i8* %9467, align 1
  %9468 = icmp eq i32 %9452, 0
  %9469 = zext i1 %9468 to i8
  %9470 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9469, i8* %9470, align 1
  %9471 = lshr i32 %9452, 31
  %9472 = trunc i32 %9471 to i8
  %9473 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9472, i8* %9473, align 1
  %9474 = lshr i32 %9451, 31
  %9475 = xor i32 %9471, %9474
  %9476 = add i32 %9475, %9474
  %9477 = icmp eq i32 %9476, 2
  %9478 = zext i1 %9477 to i8
  %9479 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9478, i8* %9479, align 1
  store %struct.Memory* %loadMem_401049, %struct.Memory** %MEMORY
  %loadMem_40104d = load %struct.Memory*, %struct.Memory** %MEMORY
  %9480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9481 = getelementptr inbounds %struct.GPR, %struct.GPR* %9480, i32 0, i32 33
  %9482 = getelementptr inbounds %struct.Reg, %struct.Reg* %9481, i32 0, i32 0
  %PC.i216 = bitcast %union.anon* %9482 to i64*
  %9483 = load i64, i64* %PC.i216
  %9484 = add i64 %9483, 89
  %9485 = load i64, i64* %PC.i216
  %9486 = add i64 %9485, 6
  %9487 = load i64, i64* %PC.i216
  %9488 = add i64 %9487, 6
  store i64 %9488, i64* %PC.i216
  %9489 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9490 = load i8, i8* %9489, align 1
  %9491 = icmp eq i8 %9490, 0
  %9492 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9493 = load i8, i8* %9492, align 1
  %9494 = icmp ne i8 %9493, 0
  %9495 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %9496 = load i8, i8* %9495, align 1
  %9497 = icmp ne i8 %9496, 0
  %9498 = xor i1 %9494, %9497
  %9499 = xor i1 %9498, true
  %9500 = and i1 %9491, %9499
  %9501 = zext i1 %9500 to i8
  store i8 %9501, i8* %BRANCH_TAKEN, align 1
  %9502 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9503 = select i1 %9500, i64 %9484, i64 %9486
  store i64 %9503, i64* %9502, align 8
  store %struct.Memory* %loadMem_40104d, %struct.Memory** %MEMORY
  %loadBr_40104d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40104d = icmp eq i8 %loadBr_40104d, 1
  br i1 %cmpBr_40104d, label %block_.L_4010a6, label %block_401053

block_401053:                                     ; preds = %block_.L_401049
  %loadMem_401053 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9505 = getelementptr inbounds %struct.GPR, %struct.GPR* %9504, i32 0, i32 33
  %9506 = getelementptr inbounds %struct.Reg, %struct.Reg* %9505, i32 0, i32 0
  %PC.i214 = bitcast %union.anon* %9506 to i64*
  %9507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9508 = getelementptr inbounds %struct.GPR, %struct.GPR* %9507, i32 0, i32 15
  %9509 = getelementptr inbounds %struct.Reg, %struct.Reg* %9508, i32 0, i32 0
  %RBP.i215 = bitcast %union.anon* %9509 to i64*
  %9510 = load i64, i64* %RBP.i215
  %9511 = sub i64 %9510, 12
  %9512 = load i64, i64* %PC.i214
  %9513 = add i64 %9512, 7
  store i64 %9513, i64* %PC.i214
  %9514 = inttoptr i64 %9511 to i32*
  store i32 0, i32* %9514
  store %struct.Memory* %loadMem_401053, %struct.Memory** %MEMORY
  br label %block_.L_40105a

block_.L_40105a:                                  ; preds = %block_401064, %block_401053
  %loadMem_40105a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9516 = getelementptr inbounds %struct.GPR, %struct.GPR* %9515, i32 0, i32 33
  %9517 = getelementptr inbounds %struct.Reg, %struct.Reg* %9516, i32 0, i32 0
  %PC.i212 = bitcast %union.anon* %9517 to i64*
  %9518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9519 = getelementptr inbounds %struct.GPR, %struct.GPR* %9518, i32 0, i32 15
  %9520 = getelementptr inbounds %struct.Reg, %struct.Reg* %9519, i32 0, i32 0
  %RBP.i213 = bitcast %union.anon* %9520 to i64*
  %9521 = load i64, i64* %RBP.i213
  %9522 = sub i64 %9521, 12
  %9523 = load i64, i64* %PC.i212
  %9524 = add i64 %9523, 4
  store i64 %9524, i64* %PC.i212
  %9525 = inttoptr i64 %9522 to i32*
  %9526 = load i32, i32* %9525
  %9527 = sub i32 %9526, 1
  %9528 = icmp ult i32 %9526, 1
  %9529 = zext i1 %9528 to i8
  %9530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9529, i8* %9530, align 1
  %9531 = and i32 %9527, 255
  %9532 = call i32 @llvm.ctpop.i32(i32 %9531)
  %9533 = trunc i32 %9532 to i8
  %9534 = and i8 %9533, 1
  %9535 = xor i8 %9534, 1
  %9536 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9535, i8* %9536, align 1
  %9537 = xor i32 %9526, 1
  %9538 = xor i32 %9537, %9527
  %9539 = lshr i32 %9538, 4
  %9540 = trunc i32 %9539 to i8
  %9541 = and i8 %9540, 1
  %9542 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9541, i8* %9542, align 1
  %9543 = icmp eq i32 %9527, 0
  %9544 = zext i1 %9543 to i8
  %9545 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9544, i8* %9545, align 1
  %9546 = lshr i32 %9527, 31
  %9547 = trunc i32 %9546 to i8
  %9548 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9547, i8* %9548, align 1
  %9549 = lshr i32 %9526, 31
  %9550 = xor i32 %9546, %9549
  %9551 = add i32 %9550, %9549
  %9552 = icmp eq i32 %9551, 2
  %9553 = zext i1 %9552 to i8
  %9554 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9553, i8* %9554, align 1
  store %struct.Memory* %loadMem_40105a, %struct.Memory** %MEMORY
  %loadMem_40105e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9556 = getelementptr inbounds %struct.GPR, %struct.GPR* %9555, i32 0, i32 33
  %9557 = getelementptr inbounds %struct.Reg, %struct.Reg* %9556, i32 0, i32 0
  %PC.i211 = bitcast %union.anon* %9557 to i64*
  %9558 = load i64, i64* %PC.i211
  %9559 = add i64 %9558, 53
  %9560 = load i64, i64* %PC.i211
  %9561 = add i64 %9560, 6
  %9562 = load i64, i64* %PC.i211
  %9563 = add i64 %9562, 6
  store i64 %9563, i64* %PC.i211
  %9564 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9565 = load i8, i8* %9564, align 1
  %9566 = icmp eq i8 %9565, 0
  %9567 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9568 = load i8, i8* %9567, align 1
  %9569 = icmp ne i8 %9568, 0
  %9570 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %9571 = load i8, i8* %9570, align 1
  %9572 = icmp ne i8 %9571, 0
  %9573 = xor i1 %9569, %9572
  %9574 = xor i1 %9573, true
  %9575 = and i1 %9566, %9574
  %9576 = zext i1 %9575 to i8
  store i8 %9576, i8* %BRANCH_TAKEN, align 1
  %9577 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9578 = select i1 %9575, i64 %9559, i64 %9561
  store i64 %9578, i64* %9577, align 8
  store %struct.Memory* %loadMem_40105e, %struct.Memory** %MEMORY
  %loadBr_40105e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40105e = icmp eq i8 %loadBr_40105e, 1
  br i1 %cmpBr_40105e, label %block_.L_401093, label %block_401064

block_401064:                                     ; preds = %block_.L_40105a
  %loadMem_401064 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9580 = getelementptr inbounds %struct.GPR, %struct.GPR* %9579, i32 0, i32 33
  %9581 = getelementptr inbounds %struct.Reg, %struct.Reg* %9580, i32 0, i32 0
  %PC.i208 = bitcast %union.anon* %9581 to i64*
  %9582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9583 = getelementptr inbounds %struct.GPR, %struct.GPR* %9582, i32 0, i32 1
  %9584 = getelementptr inbounds %struct.Reg, %struct.Reg* %9583, i32 0, i32 0
  %RAX.i209 = bitcast %union.anon* %9584 to i64*
  %9585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9586 = getelementptr inbounds %struct.GPR, %struct.GPR* %9585, i32 0, i32 15
  %9587 = getelementptr inbounds %struct.Reg, %struct.Reg* %9586, i32 0, i32 0
  %RBP.i210 = bitcast %union.anon* %9587 to i64*
  %9588 = load i64, i64* %RBP.i210
  %9589 = sub i64 %9588, 4
  %9590 = load i64, i64* %PC.i208
  %9591 = add i64 %9590, 3
  store i64 %9591, i64* %PC.i208
  %9592 = inttoptr i64 %9589 to i32*
  %9593 = load i32, i32* %9592
  %9594 = zext i32 %9593 to i64
  store i64 %9594, i64* %RAX.i209, align 8
  store %struct.Memory* %loadMem_401064, %struct.Memory** %MEMORY
  %loadMem_401067 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9596 = getelementptr inbounds %struct.GPR, %struct.GPR* %9595, i32 0, i32 33
  %9597 = getelementptr inbounds %struct.Reg, %struct.Reg* %9596, i32 0, i32 0
  %PC.i205 = bitcast %union.anon* %9597 to i64*
  %9598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9599 = getelementptr inbounds %struct.GPR, %struct.GPR* %9598, i32 0, i32 5
  %9600 = getelementptr inbounds %struct.Reg, %struct.Reg* %9599, i32 0, i32 0
  %RCX.i206 = bitcast %union.anon* %9600 to i64*
  %9601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9602 = getelementptr inbounds %struct.GPR, %struct.GPR* %9601, i32 0, i32 15
  %9603 = getelementptr inbounds %struct.Reg, %struct.Reg* %9602, i32 0, i32 0
  %RBP.i207 = bitcast %union.anon* %9603 to i64*
  %9604 = load i64, i64* %RBP.i207
  %9605 = sub i64 %9604, 8
  %9606 = load i64, i64* %PC.i205
  %9607 = add i64 %9606, 3
  store i64 %9607, i64* %PC.i205
  %9608 = inttoptr i64 %9605 to i32*
  %9609 = load i32, i32* %9608
  %9610 = zext i32 %9609 to i64
  store i64 %9610, i64* %RCX.i206, align 8
  store %struct.Memory* %loadMem_401067, %struct.Memory** %MEMORY
  %loadMem_40106a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9612 = getelementptr inbounds %struct.GPR, %struct.GPR* %9611, i32 0, i32 33
  %9613 = getelementptr inbounds %struct.Reg, %struct.Reg* %9612, i32 0, i32 0
  %PC.i202 = bitcast %union.anon* %9613 to i64*
  %9614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9615 = getelementptr inbounds %struct.GPR, %struct.GPR* %9614, i32 0, i32 7
  %9616 = getelementptr inbounds %struct.Reg, %struct.Reg* %9615, i32 0, i32 0
  %RDX.i203 = bitcast %union.anon* %9616 to i64*
  %9617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9618 = getelementptr inbounds %struct.GPR, %struct.GPR* %9617, i32 0, i32 15
  %9619 = getelementptr inbounds %struct.Reg, %struct.Reg* %9618, i32 0, i32 0
  %RBP.i204 = bitcast %union.anon* %9619 to i64*
  %9620 = load i64, i64* %RBP.i204
  %9621 = sub i64 %9620, 12
  %9622 = load i64, i64* %PC.i202
  %9623 = add i64 %9622, 3
  store i64 %9623, i64* %PC.i202
  %9624 = inttoptr i64 %9621 to i32*
  %9625 = load i32, i32* %9624
  %9626 = zext i32 %9625 to i64
  store i64 %9626, i64* %RDX.i203, align 8
  store %struct.Memory* %loadMem_40106a, %struct.Memory** %MEMORY
  %loadMem_40106d = load %struct.Memory*, %struct.Memory** %MEMORY
  %9627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9628 = getelementptr inbounds %struct.GPR, %struct.GPR* %9627, i32 0, i32 33
  %9629 = getelementptr inbounds %struct.Reg, %struct.Reg* %9628, i32 0, i32 0
  %PC.i200 = bitcast %union.anon* %9629 to i64*
  %9630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9631 = getelementptr inbounds %struct.GPR, %struct.GPR* %9630, i32 0, i32 7
  %9632 = getelementptr inbounds %struct.Reg, %struct.Reg* %9631, i32 0, i32 0
  %RDX.i201 = bitcast %union.anon* %9632 to i64*
  %9633 = load i64, i64* %RDX.i201
  %9634 = load i64, i64* %PC.i200
  %9635 = add i64 %9634, 3
  store i64 %9635, i64* %PC.i200
  %9636 = and i64 %9633, 4294967295
  %9637 = shl i64 %9636, 2
  %9638 = trunc i64 %9637 to i32
  %9639 = icmp slt i32 %9638, 0
  %9640 = shl i32 %9638, 1
  %9641 = zext i32 %9640 to i64
  store i64 %9641, i64* %RDX.i201, align 8
  %9642 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %9643 = zext i1 %9639 to i8
  store i8 %9643, i8* %9642, align 1
  %9644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %9645 = and i32 %9640, 254
  %9646 = call i32 @llvm.ctpop.i32(i32 %9645)
  %9647 = trunc i32 %9646 to i8
  %9648 = and i8 %9647, 1
  %9649 = xor i8 %9648, 1
  store i8 %9649, i8* %9644, align 1
  %9650 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9650, align 1
  %9651 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9652 = icmp eq i32 %9640, 0
  %9653 = zext i1 %9652 to i8
  store i8 %9653, i8* %9651, align 1
  %9654 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9655 = lshr i32 %9640, 31
  %9656 = trunc i32 %9655 to i8
  store i8 %9656, i8* %9654, align 1
  %9657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9657, align 1
  store %struct.Memory* %loadMem_40106d, %struct.Memory** %MEMORY
  %loadMem_401070 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9659 = getelementptr inbounds %struct.GPR, %struct.GPR* %9658, i32 0, i32 33
  %9660 = getelementptr inbounds %struct.Reg, %struct.Reg* %9659, i32 0, i32 0
  %PC.i197 = bitcast %union.anon* %9660 to i64*
  %9661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9662 = getelementptr inbounds %struct.GPR, %struct.GPR* %9661, i32 0, i32 7
  %9663 = getelementptr inbounds %struct.Reg, %struct.Reg* %9662, i32 0, i32 0
  %EDX.i198 = bitcast %union.anon* %9663 to i32*
  %9664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9665 = getelementptr inbounds %struct.GPR, %struct.GPR* %9664, i32 0, i32 5
  %9666 = getelementptr inbounds %struct.Reg, %struct.Reg* %9665, i32 0, i32 0
  %RCX.i199 = bitcast %union.anon* %9666 to i64*
  %9667 = load i64, i64* %RCX.i199
  %9668 = load i32, i32* %EDX.i198
  %9669 = zext i32 %9668 to i64
  %9670 = load i64, i64* %PC.i197
  %9671 = add i64 %9670, 2
  store i64 %9671, i64* %PC.i197
  %9672 = trunc i64 %9667 to i32
  %9673 = add i32 %9668, %9672
  %9674 = zext i32 %9673 to i64
  store i64 %9674, i64* %RCX.i199, align 8
  %9675 = icmp ult i32 %9673, %9672
  %9676 = icmp ult i32 %9673, %9668
  %9677 = or i1 %9675, %9676
  %9678 = zext i1 %9677 to i8
  %9679 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9678, i8* %9679, align 1
  %9680 = and i32 %9673, 255
  %9681 = call i32 @llvm.ctpop.i32(i32 %9680)
  %9682 = trunc i32 %9681 to i8
  %9683 = and i8 %9682, 1
  %9684 = xor i8 %9683, 1
  %9685 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9684, i8* %9685, align 1
  %9686 = xor i64 %9669, %9667
  %9687 = trunc i64 %9686 to i32
  %9688 = xor i32 %9687, %9673
  %9689 = lshr i32 %9688, 4
  %9690 = trunc i32 %9689 to i8
  %9691 = and i8 %9690, 1
  %9692 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9691, i8* %9692, align 1
  %9693 = icmp eq i32 %9673, 0
  %9694 = zext i1 %9693 to i8
  %9695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9694, i8* %9695, align 1
  %9696 = lshr i32 %9673, 31
  %9697 = trunc i32 %9696 to i8
  %9698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9697, i8* %9698, align 1
  %9699 = lshr i32 %9672, 31
  %9700 = lshr i32 %9668, 31
  %9701 = xor i32 %9696, %9699
  %9702 = xor i32 %9696, %9700
  %9703 = add i32 %9701, %9702
  %9704 = icmp eq i32 %9703, 2
  %9705 = zext i1 %9704 to i8
  %9706 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9705, i8* %9706, align 1
  store %struct.Memory* %loadMem_401070, %struct.Memory** %MEMORY
  %loadMem_401072 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9708 = getelementptr inbounds %struct.GPR, %struct.GPR* %9707, i32 0, i32 33
  %9709 = getelementptr inbounds %struct.Reg, %struct.Reg* %9708, i32 0, i32 0
  %PC.i195 = bitcast %union.anon* %9709 to i64*
  %9710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9711 = getelementptr inbounds %struct.GPR, %struct.GPR* %9710, i32 0, i32 5
  %9712 = getelementptr inbounds %struct.Reg, %struct.Reg* %9711, i32 0, i32 0
  %RCX.i196 = bitcast %union.anon* %9712 to i64*
  %9713 = load i64, i64* %RCX.i196
  %9714 = load i64, i64* %PC.i195
  %9715 = add i64 %9714, 3
  store i64 %9715, i64* %PC.i195
  %9716 = and i64 %9713, 4294967295
  %9717 = shl i64 %9716, 2
  %9718 = trunc i64 %9717 to i32
  %9719 = icmp slt i32 %9718, 0
  %9720 = shl i32 %9718, 1
  %9721 = zext i32 %9720 to i64
  store i64 %9721, i64* %RCX.i196, align 8
  %9722 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %9723 = zext i1 %9719 to i8
  store i8 %9723, i8* %9722, align 1
  %9724 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %9725 = and i32 %9720, 254
  %9726 = call i32 @llvm.ctpop.i32(i32 %9725)
  %9727 = trunc i32 %9726 to i8
  %9728 = and i8 %9727, 1
  %9729 = xor i8 %9728, 1
  store i8 %9729, i8* %9724, align 1
  %9730 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9730, align 1
  %9731 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9732 = icmp eq i32 %9720, 0
  %9733 = zext i1 %9732 to i8
  store i8 %9733, i8* %9731, align 1
  %9734 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9735 = lshr i32 %9720, 31
  %9736 = trunc i32 %9735 to i8
  store i8 %9736, i8* %9734, align 1
  %9737 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9737, align 1
  store %struct.Memory* %loadMem_401072, %struct.Memory** %MEMORY
  %loadMem_401075 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9739 = getelementptr inbounds %struct.GPR, %struct.GPR* %9738, i32 0, i32 33
  %9740 = getelementptr inbounds %struct.Reg, %struct.Reg* %9739, i32 0, i32 0
  %PC.i192 = bitcast %union.anon* %9740 to i64*
  %9741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9742 = getelementptr inbounds %struct.GPR, %struct.GPR* %9741, i32 0, i32 5
  %9743 = getelementptr inbounds %struct.Reg, %struct.Reg* %9742, i32 0, i32 0
  %ECX.i193 = bitcast %union.anon* %9743 to i32*
  %9744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9745 = getelementptr inbounds %struct.GPR, %struct.GPR* %9744, i32 0, i32 1
  %9746 = getelementptr inbounds %struct.Reg, %struct.Reg* %9745, i32 0, i32 0
  %RAX.i194 = bitcast %union.anon* %9746 to i64*
  %9747 = load i64, i64* %RAX.i194
  %9748 = load i32, i32* %ECX.i193
  %9749 = zext i32 %9748 to i64
  %9750 = load i64, i64* %PC.i192
  %9751 = add i64 %9750, 2
  store i64 %9751, i64* %PC.i192
  %9752 = trunc i64 %9747 to i32
  %9753 = add i32 %9748, %9752
  %9754 = zext i32 %9753 to i64
  store i64 %9754, i64* %RAX.i194, align 8
  %9755 = icmp ult i32 %9753, %9752
  %9756 = icmp ult i32 %9753, %9748
  %9757 = or i1 %9755, %9756
  %9758 = zext i1 %9757 to i8
  %9759 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9758, i8* %9759, align 1
  %9760 = and i32 %9753, 255
  %9761 = call i32 @llvm.ctpop.i32(i32 %9760)
  %9762 = trunc i32 %9761 to i8
  %9763 = and i8 %9762, 1
  %9764 = xor i8 %9763, 1
  %9765 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9764, i8* %9765, align 1
  %9766 = xor i64 %9749, %9747
  %9767 = trunc i64 %9766 to i32
  %9768 = xor i32 %9767, %9753
  %9769 = lshr i32 %9768, 4
  %9770 = trunc i32 %9769 to i8
  %9771 = and i8 %9770, 1
  %9772 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9771, i8* %9772, align 1
  %9773 = icmp eq i32 %9753, 0
  %9774 = zext i1 %9773 to i8
  %9775 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9774, i8* %9775, align 1
  %9776 = lshr i32 %9753, 31
  %9777 = trunc i32 %9776 to i8
  %9778 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9777, i8* %9778, align 1
  %9779 = lshr i32 %9752, 31
  %9780 = lshr i32 %9748, 31
  %9781 = xor i32 %9776, %9779
  %9782 = xor i32 %9776, %9780
  %9783 = add i32 %9781, %9782
  %9784 = icmp eq i32 %9783, 2
  %9785 = zext i1 %9784 to i8
  %9786 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9785, i8* %9786, align 1
  store %struct.Memory* %loadMem_401075, %struct.Memory** %MEMORY
  %loadMem_401077 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9788 = getelementptr inbounds %struct.GPR, %struct.GPR* %9787, i32 0, i32 33
  %9789 = getelementptr inbounds %struct.Reg, %struct.Reg* %9788, i32 0, i32 0
  %PC.i189 = bitcast %union.anon* %9789 to i64*
  %9790 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9791 = getelementptr inbounds %struct.GPR, %struct.GPR* %9790, i32 0, i32 1
  %9792 = getelementptr inbounds %struct.Reg, %struct.Reg* %9791, i32 0, i32 0
  %EAX.i190 = bitcast %union.anon* %9792 to i32*
  %9793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9794 = getelementptr inbounds %struct.GPR, %struct.GPR* %9793, i32 0, i32 9
  %9795 = getelementptr inbounds %struct.Reg, %struct.Reg* %9794, i32 0, i32 0
  %RSI.i191 = bitcast %union.anon* %9795 to i64*
  %9796 = load i32, i32* %EAX.i190
  %9797 = zext i32 %9796 to i64
  %9798 = load i64, i64* %PC.i189
  %9799 = add i64 %9798, 3
  store i64 %9799, i64* %PC.i189
  %9800 = shl i64 %9797, 32
  %9801 = ashr exact i64 %9800, 32
  store i64 %9801, i64* %RSI.i191, align 8
  store %struct.Memory* %loadMem_401077, %struct.Memory** %MEMORY
  %loadMem_40107a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9803 = getelementptr inbounds %struct.GPR, %struct.GPR* %9802, i32 0, i32 33
  %9804 = getelementptr inbounds %struct.Reg, %struct.Reg* %9803, i32 0, i32 0
  %PC.i187 = bitcast %union.anon* %9804 to i64*
  %9805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9806 = getelementptr inbounds %struct.GPR, %struct.GPR* %9805, i32 0, i32 9
  %9807 = getelementptr inbounds %struct.Reg, %struct.Reg* %9806, i32 0, i32 0
  %RSI.i188 = bitcast %union.anon* %9807 to i64*
  %9808 = load i64, i64* %RSI.i188
  %9809 = mul i64 %9808, 4
  %9810 = add i64 %9809, ptrtoint (%G_0x6092a0___rsi_4__type* @G_0x6092a0___rsi_4_ to i64)
  %9811 = load i64, i64* %PC.i187
  %9812 = add i64 %9811, 11
  store i64 %9812, i64* %PC.i187
  %9813 = inttoptr i64 %9810 to i32*
  store i32 1, i32* %9813
  store %struct.Memory* %loadMem_40107a, %struct.Memory** %MEMORY
  %loadMem_401085 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9815 = getelementptr inbounds %struct.GPR, %struct.GPR* %9814, i32 0, i32 33
  %9816 = getelementptr inbounds %struct.Reg, %struct.Reg* %9815, i32 0, i32 0
  %PC.i184 = bitcast %union.anon* %9816 to i64*
  %9817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9818 = getelementptr inbounds %struct.GPR, %struct.GPR* %9817, i32 0, i32 1
  %9819 = getelementptr inbounds %struct.Reg, %struct.Reg* %9818, i32 0, i32 0
  %RAX.i185 = bitcast %union.anon* %9819 to i64*
  %9820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9821 = getelementptr inbounds %struct.GPR, %struct.GPR* %9820, i32 0, i32 15
  %9822 = getelementptr inbounds %struct.Reg, %struct.Reg* %9821, i32 0, i32 0
  %RBP.i186 = bitcast %union.anon* %9822 to i64*
  %9823 = load i64, i64* %RBP.i186
  %9824 = sub i64 %9823, 12
  %9825 = load i64, i64* %PC.i184
  %9826 = add i64 %9825, 3
  store i64 %9826, i64* %PC.i184
  %9827 = inttoptr i64 %9824 to i32*
  %9828 = load i32, i32* %9827
  %9829 = zext i32 %9828 to i64
  store i64 %9829, i64* %RAX.i185, align 8
  store %struct.Memory* %loadMem_401085, %struct.Memory** %MEMORY
  %loadMem_401088 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9831 = getelementptr inbounds %struct.GPR, %struct.GPR* %9830, i32 0, i32 33
  %9832 = getelementptr inbounds %struct.Reg, %struct.Reg* %9831, i32 0, i32 0
  %PC.i182 = bitcast %union.anon* %9832 to i64*
  %9833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9834 = getelementptr inbounds %struct.GPR, %struct.GPR* %9833, i32 0, i32 1
  %9835 = getelementptr inbounds %struct.Reg, %struct.Reg* %9834, i32 0, i32 0
  %RAX.i183 = bitcast %union.anon* %9835 to i64*
  %9836 = load i64, i64* %RAX.i183
  %9837 = load i64, i64* %PC.i182
  %9838 = add i64 %9837, 3
  store i64 %9838, i64* %PC.i182
  %9839 = trunc i64 %9836 to i32
  %9840 = add i32 1, %9839
  %9841 = zext i32 %9840 to i64
  store i64 %9841, i64* %RAX.i183, align 8
  %9842 = icmp ult i32 %9840, %9839
  %9843 = icmp ult i32 %9840, 1
  %9844 = or i1 %9842, %9843
  %9845 = zext i1 %9844 to i8
  %9846 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9845, i8* %9846, align 1
  %9847 = and i32 %9840, 255
  %9848 = call i32 @llvm.ctpop.i32(i32 %9847)
  %9849 = trunc i32 %9848 to i8
  %9850 = and i8 %9849, 1
  %9851 = xor i8 %9850, 1
  %9852 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9851, i8* %9852, align 1
  %9853 = xor i64 1, %9836
  %9854 = trunc i64 %9853 to i32
  %9855 = xor i32 %9854, %9840
  %9856 = lshr i32 %9855, 4
  %9857 = trunc i32 %9856 to i8
  %9858 = and i8 %9857, 1
  %9859 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9858, i8* %9859, align 1
  %9860 = icmp eq i32 %9840, 0
  %9861 = zext i1 %9860 to i8
  %9862 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9861, i8* %9862, align 1
  %9863 = lshr i32 %9840, 31
  %9864 = trunc i32 %9863 to i8
  %9865 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9864, i8* %9865, align 1
  %9866 = lshr i32 %9839, 31
  %9867 = xor i32 %9863, %9866
  %9868 = add i32 %9867, %9863
  %9869 = icmp eq i32 %9868, 2
  %9870 = zext i1 %9869 to i8
  %9871 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9870, i8* %9871, align 1
  store %struct.Memory* %loadMem_401088, %struct.Memory** %MEMORY
  %loadMem_40108b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9873 = getelementptr inbounds %struct.GPR, %struct.GPR* %9872, i32 0, i32 33
  %9874 = getelementptr inbounds %struct.Reg, %struct.Reg* %9873, i32 0, i32 0
  %PC.i179 = bitcast %union.anon* %9874 to i64*
  %9875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9876 = getelementptr inbounds %struct.GPR, %struct.GPR* %9875, i32 0, i32 1
  %9877 = getelementptr inbounds %struct.Reg, %struct.Reg* %9876, i32 0, i32 0
  %EAX.i180 = bitcast %union.anon* %9877 to i32*
  %9878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9879 = getelementptr inbounds %struct.GPR, %struct.GPR* %9878, i32 0, i32 15
  %9880 = getelementptr inbounds %struct.Reg, %struct.Reg* %9879, i32 0, i32 0
  %RBP.i181 = bitcast %union.anon* %9880 to i64*
  %9881 = load i64, i64* %RBP.i181
  %9882 = sub i64 %9881, 12
  %9883 = load i32, i32* %EAX.i180
  %9884 = zext i32 %9883 to i64
  %9885 = load i64, i64* %PC.i179
  %9886 = add i64 %9885, 3
  store i64 %9886, i64* %PC.i179
  %9887 = inttoptr i64 %9882 to i32*
  store i32 %9883, i32* %9887
  store %struct.Memory* %loadMem_40108b, %struct.Memory** %MEMORY
  %loadMem_40108e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9889 = getelementptr inbounds %struct.GPR, %struct.GPR* %9888, i32 0, i32 33
  %9890 = getelementptr inbounds %struct.Reg, %struct.Reg* %9889, i32 0, i32 0
  %PC.i178 = bitcast %union.anon* %9890 to i64*
  %9891 = load i64, i64* %PC.i178
  %9892 = add i64 %9891, -52
  %9893 = load i64, i64* %PC.i178
  %9894 = add i64 %9893, 5
  store i64 %9894, i64* %PC.i178
  %9895 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9892, i64* %9895, align 8
  store %struct.Memory* %loadMem_40108e, %struct.Memory** %MEMORY
  br label %block_.L_40105a

block_.L_401093:                                  ; preds = %block_.L_40105a
  %loadMem_401093 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9897 = getelementptr inbounds %struct.GPR, %struct.GPR* %9896, i32 0, i32 33
  %9898 = getelementptr inbounds %struct.Reg, %struct.Reg* %9897, i32 0, i32 0
  %PC.i177 = bitcast %union.anon* %9898 to i64*
  %9899 = load i64, i64* %PC.i177
  %9900 = add i64 %9899, 5
  %9901 = load i64, i64* %PC.i177
  %9902 = add i64 %9901, 5
  store i64 %9902, i64* %PC.i177
  %9903 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9900, i64* %9903, align 8
  store %struct.Memory* %loadMem_401093, %struct.Memory** %MEMORY
  br label %block_.L_401098

block_.L_401098:                                  ; preds = %block_.L_401093
  %loadMem_401098 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9905 = getelementptr inbounds %struct.GPR, %struct.GPR* %9904, i32 0, i32 33
  %9906 = getelementptr inbounds %struct.Reg, %struct.Reg* %9905, i32 0, i32 0
  %PC.i174 = bitcast %union.anon* %9906 to i64*
  %9907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9908 = getelementptr inbounds %struct.GPR, %struct.GPR* %9907, i32 0, i32 1
  %9909 = getelementptr inbounds %struct.Reg, %struct.Reg* %9908, i32 0, i32 0
  %RAX.i175 = bitcast %union.anon* %9909 to i64*
  %9910 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9911 = getelementptr inbounds %struct.GPR, %struct.GPR* %9910, i32 0, i32 15
  %9912 = getelementptr inbounds %struct.Reg, %struct.Reg* %9911, i32 0, i32 0
  %RBP.i176 = bitcast %union.anon* %9912 to i64*
  %9913 = load i64, i64* %RBP.i176
  %9914 = sub i64 %9913, 8
  %9915 = load i64, i64* %PC.i174
  %9916 = add i64 %9915, 3
  store i64 %9916, i64* %PC.i174
  %9917 = inttoptr i64 %9914 to i32*
  %9918 = load i32, i32* %9917
  %9919 = zext i32 %9918 to i64
  store i64 %9919, i64* %RAX.i175, align 8
  store %struct.Memory* %loadMem_401098, %struct.Memory** %MEMORY
  %loadMem_40109b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9921 = getelementptr inbounds %struct.GPR, %struct.GPR* %9920, i32 0, i32 33
  %9922 = getelementptr inbounds %struct.Reg, %struct.Reg* %9921, i32 0, i32 0
  %PC.i172 = bitcast %union.anon* %9922 to i64*
  %9923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9924 = getelementptr inbounds %struct.GPR, %struct.GPR* %9923, i32 0, i32 1
  %9925 = getelementptr inbounds %struct.Reg, %struct.Reg* %9924, i32 0, i32 0
  %RAX.i173 = bitcast %union.anon* %9925 to i64*
  %9926 = load i64, i64* %RAX.i173
  %9927 = load i64, i64* %PC.i172
  %9928 = add i64 %9927, 3
  store i64 %9928, i64* %PC.i172
  %9929 = trunc i64 %9926 to i32
  %9930 = add i32 1, %9929
  %9931 = zext i32 %9930 to i64
  store i64 %9931, i64* %RAX.i173, align 8
  %9932 = icmp ult i32 %9930, %9929
  %9933 = icmp ult i32 %9930, 1
  %9934 = or i1 %9932, %9933
  %9935 = zext i1 %9934 to i8
  %9936 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9935, i8* %9936, align 1
  %9937 = and i32 %9930, 255
  %9938 = call i32 @llvm.ctpop.i32(i32 %9937)
  %9939 = trunc i32 %9938 to i8
  %9940 = and i8 %9939, 1
  %9941 = xor i8 %9940, 1
  %9942 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9941, i8* %9942, align 1
  %9943 = xor i64 1, %9926
  %9944 = trunc i64 %9943 to i32
  %9945 = xor i32 %9944, %9930
  %9946 = lshr i32 %9945, 4
  %9947 = trunc i32 %9946 to i8
  %9948 = and i8 %9947, 1
  %9949 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9948, i8* %9949, align 1
  %9950 = icmp eq i32 %9930, 0
  %9951 = zext i1 %9950 to i8
  %9952 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9951, i8* %9952, align 1
  %9953 = lshr i32 %9930, 31
  %9954 = trunc i32 %9953 to i8
  %9955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9954, i8* %9955, align 1
  %9956 = lshr i32 %9929, 31
  %9957 = xor i32 %9953, %9956
  %9958 = add i32 %9957, %9953
  %9959 = icmp eq i32 %9958, 2
  %9960 = zext i1 %9959 to i8
  %9961 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9960, i8* %9961, align 1
  store %struct.Memory* %loadMem_40109b, %struct.Memory** %MEMORY
  %loadMem_40109e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9963 = getelementptr inbounds %struct.GPR, %struct.GPR* %9962, i32 0, i32 33
  %9964 = getelementptr inbounds %struct.Reg, %struct.Reg* %9963, i32 0, i32 0
  %PC.i169 = bitcast %union.anon* %9964 to i64*
  %9965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9966 = getelementptr inbounds %struct.GPR, %struct.GPR* %9965, i32 0, i32 1
  %9967 = getelementptr inbounds %struct.Reg, %struct.Reg* %9966, i32 0, i32 0
  %EAX.i170 = bitcast %union.anon* %9967 to i32*
  %9968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9969 = getelementptr inbounds %struct.GPR, %struct.GPR* %9968, i32 0, i32 15
  %9970 = getelementptr inbounds %struct.Reg, %struct.Reg* %9969, i32 0, i32 0
  %RBP.i171 = bitcast %union.anon* %9970 to i64*
  %9971 = load i64, i64* %RBP.i171
  %9972 = sub i64 %9971, 8
  %9973 = load i32, i32* %EAX.i170
  %9974 = zext i32 %9973 to i64
  %9975 = load i64, i64* %PC.i169
  %9976 = add i64 %9975, 3
  store i64 %9976, i64* %PC.i169
  %9977 = inttoptr i64 %9972 to i32*
  store i32 %9973, i32* %9977
  store %struct.Memory* %loadMem_40109e, %struct.Memory** %MEMORY
  %loadMem_4010a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9979 = getelementptr inbounds %struct.GPR, %struct.GPR* %9978, i32 0, i32 33
  %9980 = getelementptr inbounds %struct.Reg, %struct.Reg* %9979, i32 0, i32 0
  %PC.i168 = bitcast %union.anon* %9980 to i64*
  %9981 = load i64, i64* %PC.i168
  %9982 = add i64 %9981, -88
  %9983 = load i64, i64* %PC.i168
  %9984 = add i64 %9983, 5
  store i64 %9984, i64* %PC.i168
  %9985 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9982, i64* %9985, align 8
  store %struct.Memory* %loadMem_4010a1, %struct.Memory** %MEMORY
  br label %block_.L_401049

block_.L_4010a6:                                  ; preds = %block_.L_401049
  %loadMem_4010a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9987 = getelementptr inbounds %struct.GPR, %struct.GPR* %9986, i32 0, i32 33
  %9988 = getelementptr inbounds %struct.Reg, %struct.Reg* %9987, i32 0, i32 0
  %PC.i167 = bitcast %union.anon* %9988 to i64*
  %9989 = load i64, i64* %PC.i167
  %9990 = add i64 %9989, 5
  %9991 = load i64, i64* %PC.i167
  %9992 = add i64 %9991, 5
  store i64 %9992, i64* %PC.i167
  %9993 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9990, i64* %9993, align 8
  store %struct.Memory* %loadMem_4010a6, %struct.Memory** %MEMORY
  br label %block_.L_4010ab

block_.L_4010ab:                                  ; preds = %block_.L_4010a6
  %loadMem_4010ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %9994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9995 = getelementptr inbounds %struct.GPR, %struct.GPR* %9994, i32 0, i32 33
  %9996 = getelementptr inbounds %struct.Reg, %struct.Reg* %9995, i32 0, i32 0
  %PC.i164 = bitcast %union.anon* %9996 to i64*
  %9997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9998 = getelementptr inbounds %struct.GPR, %struct.GPR* %9997, i32 0, i32 1
  %9999 = getelementptr inbounds %struct.Reg, %struct.Reg* %9998, i32 0, i32 0
  %RAX.i165 = bitcast %union.anon* %9999 to i64*
  %10000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10001 = getelementptr inbounds %struct.GPR, %struct.GPR* %10000, i32 0, i32 15
  %10002 = getelementptr inbounds %struct.Reg, %struct.Reg* %10001, i32 0, i32 0
  %RBP.i166 = bitcast %union.anon* %10002 to i64*
  %10003 = load i64, i64* %RBP.i166
  %10004 = sub i64 %10003, 4
  %10005 = load i64, i64* %PC.i164
  %10006 = add i64 %10005, 3
  store i64 %10006, i64* %PC.i164
  %10007 = inttoptr i64 %10004 to i32*
  %10008 = load i32, i32* %10007
  %10009 = zext i32 %10008 to i64
  store i64 %10009, i64* %RAX.i165, align 8
  store %struct.Memory* %loadMem_4010ab, %struct.Memory** %MEMORY
  %loadMem_4010ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %10010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10011 = getelementptr inbounds %struct.GPR, %struct.GPR* %10010, i32 0, i32 33
  %10012 = getelementptr inbounds %struct.Reg, %struct.Reg* %10011, i32 0, i32 0
  %PC.i162 = bitcast %union.anon* %10012 to i64*
  %10013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10014 = getelementptr inbounds %struct.GPR, %struct.GPR* %10013, i32 0, i32 1
  %10015 = getelementptr inbounds %struct.Reg, %struct.Reg* %10014, i32 0, i32 0
  %RAX.i163 = bitcast %union.anon* %10015 to i64*
  %10016 = load i64, i64* %RAX.i163
  %10017 = load i64, i64* %PC.i162
  %10018 = add i64 %10017, 3
  store i64 %10018, i64* %PC.i162
  %10019 = trunc i64 %10016 to i32
  %10020 = add i32 1, %10019
  %10021 = zext i32 %10020 to i64
  store i64 %10021, i64* %RAX.i163, align 8
  %10022 = icmp ult i32 %10020, %10019
  %10023 = icmp ult i32 %10020, 1
  %10024 = or i1 %10022, %10023
  %10025 = zext i1 %10024 to i8
  %10026 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10025, i8* %10026, align 1
  %10027 = and i32 %10020, 255
  %10028 = call i32 @llvm.ctpop.i32(i32 %10027)
  %10029 = trunc i32 %10028 to i8
  %10030 = and i8 %10029, 1
  %10031 = xor i8 %10030, 1
  %10032 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10031, i8* %10032, align 1
  %10033 = xor i64 1, %10016
  %10034 = trunc i64 %10033 to i32
  %10035 = xor i32 %10034, %10020
  %10036 = lshr i32 %10035, 4
  %10037 = trunc i32 %10036 to i8
  %10038 = and i8 %10037, 1
  %10039 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10038, i8* %10039, align 1
  %10040 = icmp eq i32 %10020, 0
  %10041 = zext i1 %10040 to i8
  %10042 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10041, i8* %10042, align 1
  %10043 = lshr i32 %10020, 31
  %10044 = trunc i32 %10043 to i8
  %10045 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10044, i8* %10045, align 1
  %10046 = lshr i32 %10019, 31
  %10047 = xor i32 %10043, %10046
  %10048 = add i32 %10047, %10043
  %10049 = icmp eq i32 %10048, 2
  %10050 = zext i1 %10049 to i8
  %10051 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10050, i8* %10051, align 1
  store %struct.Memory* %loadMem_4010ae, %struct.Memory** %MEMORY
  %loadMem_4010b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10053 = getelementptr inbounds %struct.GPR, %struct.GPR* %10052, i32 0, i32 33
  %10054 = getelementptr inbounds %struct.Reg, %struct.Reg* %10053, i32 0, i32 0
  %PC.i159 = bitcast %union.anon* %10054 to i64*
  %10055 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10056 = getelementptr inbounds %struct.GPR, %struct.GPR* %10055, i32 0, i32 1
  %10057 = getelementptr inbounds %struct.Reg, %struct.Reg* %10056, i32 0, i32 0
  %EAX.i160 = bitcast %union.anon* %10057 to i32*
  %10058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10059 = getelementptr inbounds %struct.GPR, %struct.GPR* %10058, i32 0, i32 15
  %10060 = getelementptr inbounds %struct.Reg, %struct.Reg* %10059, i32 0, i32 0
  %RBP.i161 = bitcast %union.anon* %10060 to i64*
  %10061 = load i64, i64* %RBP.i161
  %10062 = sub i64 %10061, 4
  %10063 = load i32, i32* %EAX.i160
  %10064 = zext i32 %10063 to i64
  %10065 = load i64, i64* %PC.i159
  %10066 = add i64 %10065, 3
  store i64 %10066, i64* %PC.i159
  %10067 = inttoptr i64 %10062 to i32*
  store i32 %10063, i32* %10067
  store %struct.Memory* %loadMem_4010b1, %struct.Memory** %MEMORY
  %loadMem_4010b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10069 = getelementptr inbounds %struct.GPR, %struct.GPR* %10068, i32 0, i32 33
  %10070 = getelementptr inbounds %struct.Reg, %struct.Reg* %10069, i32 0, i32 0
  %PC.i158 = bitcast %union.anon* %10070 to i64*
  %10071 = load i64, i64* %PC.i158
  %10072 = add i64 %10071, -124
  %10073 = load i64, i64* %PC.i158
  %10074 = add i64 %10073, 5
  store i64 %10074, i64* %PC.i158
  %10075 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10072, i64* %10075, align 8
  store %struct.Memory* %loadMem_4010b4, %struct.Memory** %MEMORY
  br label %block_.L_401038

block_.L_4010b9:                                  ; preds = %block_.L_401038
  %loadMem_4010b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10077 = getelementptr inbounds %struct.GPR, %struct.GPR* %10076, i32 0, i32 33
  %10078 = getelementptr inbounds %struct.Reg, %struct.Reg* %10077, i32 0, i32 0
  %PC.i157 = bitcast %union.anon* %10078 to i64*
  %10079 = load i64, i64* %PC.i157
  %10080 = add i64 %10079, 11
  store i64 %10080, i64* %PC.i157
  store i32 2, i32* bitcast (%G_0x61921c_type* @G_0x61921c to i32*)
  store %struct.Memory* %loadMem_4010b9, %struct.Memory** %MEMORY
  %loadMem_4010c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10082 = getelementptr inbounds %struct.GPR, %struct.GPR* %10081, i32 0, i32 33
  %10083 = getelementptr inbounds %struct.Reg, %struct.Reg* %10082, i32 0, i32 0
  %PC.i156 = bitcast %union.anon* %10083 to i64*
  %10084 = load i64, i64* %PC.i156
  %10085 = add i64 %10084, 11
  store i64 %10085, i64* %PC.i156
  store i32 72, i32* bitcast (%G_0x61027c_type* @G_0x61027c to i32*)
  store %struct.Memory* %loadMem_4010c4, %struct.Memory** %MEMORY
  %loadMem_4010cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %10086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10087 = getelementptr inbounds %struct.GPR, %struct.GPR* %10086, i32 0, i32 33
  %10088 = getelementptr inbounds %struct.Reg, %struct.Reg* %10087, i32 0, i32 0
  %PC.i154 = bitcast %union.anon* %10088 to i64*
  %10089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10090 = getelementptr inbounds %struct.GPR, %struct.GPR* %10089, i32 0, i32 15
  %10091 = getelementptr inbounds %struct.Reg, %struct.Reg* %10090, i32 0, i32 0
  %RBP.i155 = bitcast %union.anon* %10091 to i64*
  %10092 = load i64, i64* %RBP.i155
  %10093 = sub i64 %10092, 4
  %10094 = load i64, i64* %PC.i154
  %10095 = add i64 %10094, 7
  store i64 %10095, i64* %PC.i154
  %10096 = inttoptr i64 %10093 to i32*
  store i32 0, i32* %10096
  store %struct.Memory* %loadMem_4010cf, %struct.Memory** %MEMORY
  br label %block_.L_4010d6

block_.L_4010d6:                                  ; preds = %block_.L_401149, %block_.L_4010b9
  %loadMem_4010d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10098 = getelementptr inbounds %struct.GPR, %struct.GPR* %10097, i32 0, i32 33
  %10099 = getelementptr inbounds %struct.Reg, %struct.Reg* %10098, i32 0, i32 0
  %PC.i152 = bitcast %union.anon* %10099 to i64*
  %10100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10101 = getelementptr inbounds %struct.GPR, %struct.GPR* %10100, i32 0, i32 15
  %10102 = getelementptr inbounds %struct.Reg, %struct.Reg* %10101, i32 0, i32 0
  %RBP.i153 = bitcast %union.anon* %10102 to i64*
  %10103 = load i64, i64* %RBP.i153
  %10104 = sub i64 %10103, 4
  %10105 = load i64, i64* %PC.i152
  %10106 = add i64 %10105, 4
  store i64 %10106, i64* %PC.i152
  %10107 = inttoptr i64 %10104 to i32*
  %10108 = load i32, i32* %10107
  %10109 = sub i32 %10108, 1
  %10110 = icmp ult i32 %10108, 1
  %10111 = zext i1 %10110 to i8
  %10112 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10111, i8* %10112, align 1
  %10113 = and i32 %10109, 255
  %10114 = call i32 @llvm.ctpop.i32(i32 %10113)
  %10115 = trunc i32 %10114 to i8
  %10116 = and i8 %10115, 1
  %10117 = xor i8 %10116, 1
  %10118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10117, i8* %10118, align 1
  %10119 = xor i32 %10108, 1
  %10120 = xor i32 %10119, %10109
  %10121 = lshr i32 %10120, 4
  %10122 = trunc i32 %10121 to i8
  %10123 = and i8 %10122, 1
  %10124 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10123, i8* %10124, align 1
  %10125 = icmp eq i32 %10109, 0
  %10126 = zext i1 %10125 to i8
  %10127 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10126, i8* %10127, align 1
  %10128 = lshr i32 %10109, 31
  %10129 = trunc i32 %10128 to i8
  %10130 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10129, i8* %10130, align 1
  %10131 = lshr i32 %10108, 31
  %10132 = xor i32 %10128, %10131
  %10133 = add i32 %10132, %10131
  %10134 = icmp eq i32 %10133, 2
  %10135 = zext i1 %10134 to i8
  %10136 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10135, i8* %10136, align 1
  store %struct.Memory* %loadMem_4010d6, %struct.Memory** %MEMORY
  %loadMem_4010da = load %struct.Memory*, %struct.Memory** %MEMORY
  %10137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10138 = getelementptr inbounds %struct.GPR, %struct.GPR* %10137, i32 0, i32 33
  %10139 = getelementptr inbounds %struct.Reg, %struct.Reg* %10138, i32 0, i32 0
  %PC.i151 = bitcast %union.anon* %10139 to i64*
  %10140 = load i64, i64* %PC.i151
  %10141 = add i64 %10140, 125
  %10142 = load i64, i64* %PC.i151
  %10143 = add i64 %10142, 6
  %10144 = load i64, i64* %PC.i151
  %10145 = add i64 %10144, 6
  store i64 %10145, i64* %PC.i151
  %10146 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10147 = load i8, i8* %10146, align 1
  %10148 = icmp eq i8 %10147, 0
  %10149 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10150 = load i8, i8* %10149, align 1
  %10151 = icmp ne i8 %10150, 0
  %10152 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %10153 = load i8, i8* %10152, align 1
  %10154 = icmp ne i8 %10153, 0
  %10155 = xor i1 %10151, %10154
  %10156 = xor i1 %10155, true
  %10157 = and i1 %10148, %10156
  %10158 = zext i1 %10157 to i8
  store i8 %10158, i8* %BRANCH_TAKEN, align 1
  %10159 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10160 = select i1 %10157, i64 %10141, i64 %10143
  store i64 %10160, i64* %10159, align 8
  store %struct.Memory* %loadMem_4010da, %struct.Memory** %MEMORY
  %loadBr_4010da = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4010da = icmp eq i8 %loadBr_4010da, 1
  br i1 %cmpBr_4010da, label %block_.L_401157, label %block_4010e0

block_4010e0:                                     ; preds = %block_.L_4010d6
  %loadMem_4010e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10162 = getelementptr inbounds %struct.GPR, %struct.GPR* %10161, i32 0, i32 33
  %10163 = getelementptr inbounds %struct.Reg, %struct.Reg* %10162, i32 0, i32 0
  %PC.i149 = bitcast %union.anon* %10163 to i64*
  %10164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10165 = getelementptr inbounds %struct.GPR, %struct.GPR* %10164, i32 0, i32 15
  %10166 = getelementptr inbounds %struct.Reg, %struct.Reg* %10165, i32 0, i32 0
  %RBP.i150 = bitcast %union.anon* %10166 to i64*
  %10167 = load i64, i64* %RBP.i150
  %10168 = sub i64 %10167, 8
  %10169 = load i64, i64* %PC.i149
  %10170 = add i64 %10169, 7
  store i64 %10170, i64* %PC.i149
  %10171 = inttoptr i64 %10168 to i32*
  store i32 0, i32* %10171
  store %struct.Memory* %loadMem_4010e0, %struct.Memory** %MEMORY
  br label %block_.L_4010e7

block_.L_4010e7:                                  ; preds = %block_.L_401136, %block_4010e0
  %loadMem_4010e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10173 = getelementptr inbounds %struct.GPR, %struct.GPR* %10172, i32 0, i32 33
  %10174 = getelementptr inbounds %struct.Reg, %struct.Reg* %10173, i32 0, i32 0
  %PC.i147 = bitcast %union.anon* %10174 to i64*
  %10175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10176 = getelementptr inbounds %struct.GPR, %struct.GPR* %10175, i32 0, i32 15
  %10177 = getelementptr inbounds %struct.Reg, %struct.Reg* %10176, i32 0, i32 0
  %RBP.i148 = bitcast %union.anon* %10177 to i64*
  %10178 = load i64, i64* %RBP.i148
  %10179 = sub i64 %10178, 8
  %10180 = load i64, i64* %PC.i147
  %10181 = add i64 %10180, 4
  store i64 %10181, i64* %PC.i147
  %10182 = inttoptr i64 %10179 to i32*
  %10183 = load i32, i32* %10182
  %10184 = sub i32 %10183, 1
  %10185 = icmp ult i32 %10183, 1
  %10186 = zext i1 %10185 to i8
  %10187 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10186, i8* %10187, align 1
  %10188 = and i32 %10184, 255
  %10189 = call i32 @llvm.ctpop.i32(i32 %10188)
  %10190 = trunc i32 %10189 to i8
  %10191 = and i8 %10190, 1
  %10192 = xor i8 %10191, 1
  %10193 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10192, i8* %10193, align 1
  %10194 = xor i32 %10183, 1
  %10195 = xor i32 %10194, %10184
  %10196 = lshr i32 %10195, 4
  %10197 = trunc i32 %10196 to i8
  %10198 = and i8 %10197, 1
  %10199 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10198, i8* %10199, align 1
  %10200 = icmp eq i32 %10184, 0
  %10201 = zext i1 %10200 to i8
  %10202 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10201, i8* %10202, align 1
  %10203 = lshr i32 %10184, 31
  %10204 = trunc i32 %10203 to i8
  %10205 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10204, i8* %10205, align 1
  %10206 = lshr i32 %10183, 31
  %10207 = xor i32 %10203, %10206
  %10208 = add i32 %10207, %10206
  %10209 = icmp eq i32 %10208, 2
  %10210 = zext i1 %10209 to i8
  %10211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10210, i8* %10211, align 1
  store %struct.Memory* %loadMem_4010e7, %struct.Memory** %MEMORY
  %loadMem_4010eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %10212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10213 = getelementptr inbounds %struct.GPR, %struct.GPR* %10212, i32 0, i32 33
  %10214 = getelementptr inbounds %struct.Reg, %struct.Reg* %10213, i32 0, i32 0
  %PC.i146 = bitcast %union.anon* %10214 to i64*
  %10215 = load i64, i64* %PC.i146
  %10216 = add i64 %10215, 89
  %10217 = load i64, i64* %PC.i146
  %10218 = add i64 %10217, 6
  %10219 = load i64, i64* %PC.i146
  %10220 = add i64 %10219, 6
  store i64 %10220, i64* %PC.i146
  %10221 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10222 = load i8, i8* %10221, align 1
  %10223 = icmp eq i8 %10222, 0
  %10224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10225 = load i8, i8* %10224, align 1
  %10226 = icmp ne i8 %10225, 0
  %10227 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %10228 = load i8, i8* %10227, align 1
  %10229 = icmp ne i8 %10228, 0
  %10230 = xor i1 %10226, %10229
  %10231 = xor i1 %10230, true
  %10232 = and i1 %10223, %10231
  %10233 = zext i1 %10232 to i8
  store i8 %10233, i8* %BRANCH_TAKEN, align 1
  %10234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10235 = select i1 %10232, i64 %10216, i64 %10218
  store i64 %10235, i64* %10234, align 8
  store %struct.Memory* %loadMem_4010eb, %struct.Memory** %MEMORY
  %loadBr_4010eb = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4010eb = icmp eq i8 %loadBr_4010eb, 1
  br i1 %cmpBr_4010eb, label %block_.L_401144, label %block_4010f1

block_4010f1:                                     ; preds = %block_.L_4010e7
  %loadMem_4010f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10237 = getelementptr inbounds %struct.GPR, %struct.GPR* %10236, i32 0, i32 33
  %10238 = getelementptr inbounds %struct.Reg, %struct.Reg* %10237, i32 0, i32 0
  %PC.i144 = bitcast %union.anon* %10238 to i64*
  %10239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10240 = getelementptr inbounds %struct.GPR, %struct.GPR* %10239, i32 0, i32 15
  %10241 = getelementptr inbounds %struct.Reg, %struct.Reg* %10240, i32 0, i32 0
  %RBP.i145 = bitcast %union.anon* %10241 to i64*
  %10242 = load i64, i64* %RBP.i145
  %10243 = sub i64 %10242, 12
  %10244 = load i64, i64* %PC.i144
  %10245 = add i64 %10244, 7
  store i64 %10245, i64* %PC.i144
  %10246 = inttoptr i64 %10243 to i32*
  store i32 0, i32* %10246
  store %struct.Memory* %loadMem_4010f1, %struct.Memory** %MEMORY
  br label %block_.L_4010f8

block_.L_4010f8:                                  ; preds = %block_401102, %block_4010f1
  %loadMem_4010f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10248 = getelementptr inbounds %struct.GPR, %struct.GPR* %10247, i32 0, i32 33
  %10249 = getelementptr inbounds %struct.Reg, %struct.Reg* %10248, i32 0, i32 0
  %PC.i142 = bitcast %union.anon* %10249 to i64*
  %10250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10251 = getelementptr inbounds %struct.GPR, %struct.GPR* %10250, i32 0, i32 15
  %10252 = getelementptr inbounds %struct.Reg, %struct.Reg* %10251, i32 0, i32 0
  %RBP.i143 = bitcast %union.anon* %10252 to i64*
  %10253 = load i64, i64* %RBP.i143
  %10254 = sub i64 %10253, 12
  %10255 = load i64, i64* %PC.i142
  %10256 = add i64 %10255, 4
  store i64 %10256, i64* %PC.i142
  %10257 = inttoptr i64 %10254 to i32*
  %10258 = load i32, i32* %10257
  %10259 = sub i32 %10258, 1
  %10260 = icmp ult i32 %10258, 1
  %10261 = zext i1 %10260 to i8
  %10262 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10261, i8* %10262, align 1
  %10263 = and i32 %10259, 255
  %10264 = call i32 @llvm.ctpop.i32(i32 %10263)
  %10265 = trunc i32 %10264 to i8
  %10266 = and i8 %10265, 1
  %10267 = xor i8 %10266, 1
  %10268 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10267, i8* %10268, align 1
  %10269 = xor i32 %10258, 1
  %10270 = xor i32 %10269, %10259
  %10271 = lshr i32 %10270, 4
  %10272 = trunc i32 %10271 to i8
  %10273 = and i8 %10272, 1
  %10274 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10273, i8* %10274, align 1
  %10275 = icmp eq i32 %10259, 0
  %10276 = zext i1 %10275 to i8
  %10277 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10276, i8* %10277, align 1
  %10278 = lshr i32 %10259, 31
  %10279 = trunc i32 %10278 to i8
  %10280 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10279, i8* %10280, align 1
  %10281 = lshr i32 %10258, 31
  %10282 = xor i32 %10278, %10281
  %10283 = add i32 %10282, %10281
  %10284 = icmp eq i32 %10283, 2
  %10285 = zext i1 %10284 to i8
  %10286 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10285, i8* %10286, align 1
  store %struct.Memory* %loadMem_4010f8, %struct.Memory** %MEMORY
  %loadMem_4010fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %10287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10288 = getelementptr inbounds %struct.GPR, %struct.GPR* %10287, i32 0, i32 33
  %10289 = getelementptr inbounds %struct.Reg, %struct.Reg* %10288, i32 0, i32 0
  %PC.i141 = bitcast %union.anon* %10289 to i64*
  %10290 = load i64, i64* %PC.i141
  %10291 = add i64 %10290, 53
  %10292 = load i64, i64* %PC.i141
  %10293 = add i64 %10292, 6
  %10294 = load i64, i64* %PC.i141
  %10295 = add i64 %10294, 6
  store i64 %10295, i64* %PC.i141
  %10296 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10297 = load i8, i8* %10296, align 1
  %10298 = icmp eq i8 %10297, 0
  %10299 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10300 = load i8, i8* %10299, align 1
  %10301 = icmp ne i8 %10300, 0
  %10302 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %10303 = load i8, i8* %10302, align 1
  %10304 = icmp ne i8 %10303, 0
  %10305 = xor i1 %10301, %10304
  %10306 = xor i1 %10305, true
  %10307 = and i1 %10298, %10306
  %10308 = zext i1 %10307 to i8
  store i8 %10308, i8* %BRANCH_TAKEN, align 1
  %10309 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10310 = select i1 %10307, i64 %10291, i64 %10293
  store i64 %10310, i64* %10309, align 8
  store %struct.Memory* %loadMem_4010fc, %struct.Memory** %MEMORY
  %loadBr_4010fc = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4010fc = icmp eq i8 %loadBr_4010fc, 1
  br i1 %cmpBr_4010fc, label %block_.L_401131, label %block_401102

block_401102:                                     ; preds = %block_.L_4010f8
  %loadMem_401102 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10312 = getelementptr inbounds %struct.GPR, %struct.GPR* %10311, i32 0, i32 33
  %10313 = getelementptr inbounds %struct.Reg, %struct.Reg* %10312, i32 0, i32 0
  %PC.i138 = bitcast %union.anon* %10313 to i64*
  %10314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10315 = getelementptr inbounds %struct.GPR, %struct.GPR* %10314, i32 0, i32 1
  %10316 = getelementptr inbounds %struct.Reg, %struct.Reg* %10315, i32 0, i32 0
  %RAX.i139 = bitcast %union.anon* %10316 to i64*
  %10317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10318 = getelementptr inbounds %struct.GPR, %struct.GPR* %10317, i32 0, i32 15
  %10319 = getelementptr inbounds %struct.Reg, %struct.Reg* %10318, i32 0, i32 0
  %RBP.i140 = bitcast %union.anon* %10319 to i64*
  %10320 = load i64, i64* %RBP.i140
  %10321 = sub i64 %10320, 4
  %10322 = load i64, i64* %PC.i138
  %10323 = add i64 %10322, 3
  store i64 %10323, i64* %PC.i138
  %10324 = inttoptr i64 %10321 to i32*
  %10325 = load i32, i32* %10324
  %10326 = zext i32 %10325 to i64
  store i64 %10326, i64* %RAX.i139, align 8
  store %struct.Memory* %loadMem_401102, %struct.Memory** %MEMORY
  %loadMem_401105 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10328 = getelementptr inbounds %struct.GPR, %struct.GPR* %10327, i32 0, i32 33
  %10329 = getelementptr inbounds %struct.Reg, %struct.Reg* %10328, i32 0, i32 0
  %PC.i135 = bitcast %union.anon* %10329 to i64*
  %10330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10331 = getelementptr inbounds %struct.GPR, %struct.GPR* %10330, i32 0, i32 5
  %10332 = getelementptr inbounds %struct.Reg, %struct.Reg* %10331, i32 0, i32 0
  %RCX.i136 = bitcast %union.anon* %10332 to i64*
  %10333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10334 = getelementptr inbounds %struct.GPR, %struct.GPR* %10333, i32 0, i32 15
  %10335 = getelementptr inbounds %struct.Reg, %struct.Reg* %10334, i32 0, i32 0
  %RBP.i137 = bitcast %union.anon* %10335 to i64*
  %10336 = load i64, i64* %RBP.i137
  %10337 = sub i64 %10336, 8
  %10338 = load i64, i64* %PC.i135
  %10339 = add i64 %10338, 3
  store i64 %10339, i64* %PC.i135
  %10340 = inttoptr i64 %10337 to i32*
  %10341 = load i32, i32* %10340
  %10342 = zext i32 %10341 to i64
  store i64 %10342, i64* %RCX.i136, align 8
  store %struct.Memory* %loadMem_401105, %struct.Memory** %MEMORY
  %loadMem_401108 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10344 = getelementptr inbounds %struct.GPR, %struct.GPR* %10343, i32 0, i32 33
  %10345 = getelementptr inbounds %struct.Reg, %struct.Reg* %10344, i32 0, i32 0
  %PC.i132 = bitcast %union.anon* %10345 to i64*
  %10346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10347 = getelementptr inbounds %struct.GPR, %struct.GPR* %10346, i32 0, i32 7
  %10348 = getelementptr inbounds %struct.Reg, %struct.Reg* %10347, i32 0, i32 0
  %RDX.i133 = bitcast %union.anon* %10348 to i64*
  %10349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10350 = getelementptr inbounds %struct.GPR, %struct.GPR* %10349, i32 0, i32 15
  %10351 = getelementptr inbounds %struct.Reg, %struct.Reg* %10350, i32 0, i32 0
  %RBP.i134 = bitcast %union.anon* %10351 to i64*
  %10352 = load i64, i64* %RBP.i134
  %10353 = sub i64 %10352, 12
  %10354 = load i64, i64* %PC.i132
  %10355 = add i64 %10354, 3
  store i64 %10355, i64* %PC.i132
  %10356 = inttoptr i64 %10353 to i32*
  %10357 = load i32, i32* %10356
  %10358 = zext i32 %10357 to i64
  store i64 %10358, i64* %RDX.i133, align 8
  store %struct.Memory* %loadMem_401108, %struct.Memory** %MEMORY
  %loadMem_40110b = load %struct.Memory*, %struct.Memory** %MEMORY
  %10359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10360 = getelementptr inbounds %struct.GPR, %struct.GPR* %10359, i32 0, i32 33
  %10361 = getelementptr inbounds %struct.Reg, %struct.Reg* %10360, i32 0, i32 0
  %PC.i131 = bitcast %union.anon* %10361 to i64*
  %10362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10363 = getelementptr inbounds %struct.GPR, %struct.GPR* %10362, i32 0, i32 7
  %10364 = getelementptr inbounds %struct.Reg, %struct.Reg* %10363, i32 0, i32 0
  %RDX.i = bitcast %union.anon* %10364 to i64*
  %10365 = load i64, i64* %RDX.i
  %10366 = load i64, i64* %PC.i131
  %10367 = add i64 %10366, 3
  store i64 %10367, i64* %PC.i131
  %10368 = and i64 %10365, 4294967295
  %10369 = shl i64 %10368, 2
  %10370 = trunc i64 %10369 to i32
  %10371 = icmp slt i32 %10370, 0
  %10372 = shl i32 %10370, 1
  %10373 = zext i32 %10372 to i64
  store i64 %10373, i64* %RDX.i, align 8
  %10374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %10375 = zext i1 %10371 to i8
  store i8 %10375, i8* %10374, align 1
  %10376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %10377 = and i32 %10372, 254
  %10378 = call i32 @llvm.ctpop.i32(i32 %10377)
  %10379 = trunc i32 %10378 to i8
  %10380 = and i8 %10379, 1
  %10381 = xor i8 %10380, 1
  store i8 %10381, i8* %10376, align 1
  %10382 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10382, align 1
  %10383 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10384 = icmp eq i32 %10372, 0
  %10385 = zext i1 %10384 to i8
  store i8 %10385, i8* %10383, align 1
  %10386 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10387 = lshr i32 %10372, 31
  %10388 = trunc i32 %10387 to i8
  store i8 %10388, i8* %10386, align 1
  %10389 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10389, align 1
  store %struct.Memory* %loadMem_40110b, %struct.Memory** %MEMORY
  %loadMem_40110e = load %struct.Memory*, %struct.Memory** %MEMORY
  %10390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10391 = getelementptr inbounds %struct.GPR, %struct.GPR* %10390, i32 0, i32 33
  %10392 = getelementptr inbounds %struct.Reg, %struct.Reg* %10391, i32 0, i32 0
  %PC.i129 = bitcast %union.anon* %10392 to i64*
  %10393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10394 = getelementptr inbounds %struct.GPR, %struct.GPR* %10393, i32 0, i32 7
  %10395 = getelementptr inbounds %struct.Reg, %struct.Reg* %10394, i32 0, i32 0
  %EDX.i = bitcast %union.anon* %10395 to i32*
  %10396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10397 = getelementptr inbounds %struct.GPR, %struct.GPR* %10396, i32 0, i32 5
  %10398 = getelementptr inbounds %struct.Reg, %struct.Reg* %10397, i32 0, i32 0
  %RCX.i130 = bitcast %union.anon* %10398 to i64*
  %10399 = load i64, i64* %RCX.i130
  %10400 = load i32, i32* %EDX.i
  %10401 = zext i32 %10400 to i64
  %10402 = load i64, i64* %PC.i129
  %10403 = add i64 %10402, 2
  store i64 %10403, i64* %PC.i129
  %10404 = trunc i64 %10399 to i32
  %10405 = add i32 %10400, %10404
  %10406 = zext i32 %10405 to i64
  store i64 %10406, i64* %RCX.i130, align 8
  %10407 = icmp ult i32 %10405, %10404
  %10408 = icmp ult i32 %10405, %10400
  %10409 = or i1 %10407, %10408
  %10410 = zext i1 %10409 to i8
  %10411 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10410, i8* %10411, align 1
  %10412 = and i32 %10405, 255
  %10413 = call i32 @llvm.ctpop.i32(i32 %10412)
  %10414 = trunc i32 %10413 to i8
  %10415 = and i8 %10414, 1
  %10416 = xor i8 %10415, 1
  %10417 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10416, i8* %10417, align 1
  %10418 = xor i64 %10401, %10399
  %10419 = trunc i64 %10418 to i32
  %10420 = xor i32 %10419, %10405
  %10421 = lshr i32 %10420, 4
  %10422 = trunc i32 %10421 to i8
  %10423 = and i8 %10422, 1
  %10424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10423, i8* %10424, align 1
  %10425 = icmp eq i32 %10405, 0
  %10426 = zext i1 %10425 to i8
  %10427 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10426, i8* %10427, align 1
  %10428 = lshr i32 %10405, 31
  %10429 = trunc i32 %10428 to i8
  %10430 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10429, i8* %10430, align 1
  %10431 = lshr i32 %10404, 31
  %10432 = lshr i32 %10400, 31
  %10433 = xor i32 %10428, %10431
  %10434 = xor i32 %10428, %10432
  %10435 = add i32 %10433, %10434
  %10436 = icmp eq i32 %10435, 2
  %10437 = zext i1 %10436 to i8
  %10438 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10437, i8* %10438, align 1
  store %struct.Memory* %loadMem_40110e, %struct.Memory** %MEMORY
  %loadMem_401110 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10440 = getelementptr inbounds %struct.GPR, %struct.GPR* %10439, i32 0, i32 33
  %10441 = getelementptr inbounds %struct.Reg, %struct.Reg* %10440, i32 0, i32 0
  %PC.i128 = bitcast %union.anon* %10441 to i64*
  %10442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10443 = getelementptr inbounds %struct.GPR, %struct.GPR* %10442, i32 0, i32 5
  %10444 = getelementptr inbounds %struct.Reg, %struct.Reg* %10443, i32 0, i32 0
  %RCX.i = bitcast %union.anon* %10444 to i64*
  %10445 = load i64, i64* %RCX.i
  %10446 = load i64, i64* %PC.i128
  %10447 = add i64 %10446, 3
  store i64 %10447, i64* %PC.i128
  %10448 = and i64 %10445, 4294967295
  %10449 = shl i64 %10448, 2
  %10450 = trunc i64 %10449 to i32
  %10451 = icmp slt i32 %10450, 0
  %10452 = shl i32 %10450, 1
  %10453 = zext i32 %10452 to i64
  store i64 %10453, i64* %RCX.i, align 8
  %10454 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %10455 = zext i1 %10451 to i8
  store i8 %10455, i8* %10454, align 1
  %10456 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %10457 = and i32 %10452, 254
  %10458 = call i32 @llvm.ctpop.i32(i32 %10457)
  %10459 = trunc i32 %10458 to i8
  %10460 = and i8 %10459, 1
  %10461 = xor i8 %10460, 1
  store i8 %10461, i8* %10456, align 1
  %10462 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10462, align 1
  %10463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10464 = icmp eq i32 %10452, 0
  %10465 = zext i1 %10464 to i8
  store i8 %10465, i8* %10463, align 1
  %10466 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10467 = lshr i32 %10452, 31
  %10468 = trunc i32 %10467 to i8
  store i8 %10468, i8* %10466, align 1
  %10469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10469, align 1
  store %struct.Memory* %loadMem_401110, %struct.Memory** %MEMORY
  %loadMem_401113 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10471 = getelementptr inbounds %struct.GPR, %struct.GPR* %10470, i32 0, i32 33
  %10472 = getelementptr inbounds %struct.Reg, %struct.Reg* %10471, i32 0, i32 0
  %PC.i126 = bitcast %union.anon* %10472 to i64*
  %10473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10474 = getelementptr inbounds %struct.GPR, %struct.GPR* %10473, i32 0, i32 5
  %10475 = getelementptr inbounds %struct.Reg, %struct.Reg* %10474, i32 0, i32 0
  %ECX.i = bitcast %union.anon* %10475 to i32*
  %10476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10477 = getelementptr inbounds %struct.GPR, %struct.GPR* %10476, i32 0, i32 1
  %10478 = getelementptr inbounds %struct.Reg, %struct.Reg* %10477, i32 0, i32 0
  %RAX.i127 = bitcast %union.anon* %10478 to i64*
  %10479 = load i64, i64* %RAX.i127
  %10480 = load i32, i32* %ECX.i
  %10481 = zext i32 %10480 to i64
  %10482 = load i64, i64* %PC.i126
  %10483 = add i64 %10482, 2
  store i64 %10483, i64* %PC.i126
  %10484 = trunc i64 %10479 to i32
  %10485 = add i32 %10480, %10484
  %10486 = zext i32 %10485 to i64
  store i64 %10486, i64* %RAX.i127, align 8
  %10487 = icmp ult i32 %10485, %10484
  %10488 = icmp ult i32 %10485, %10480
  %10489 = or i1 %10487, %10488
  %10490 = zext i1 %10489 to i8
  %10491 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10490, i8* %10491, align 1
  %10492 = and i32 %10485, 255
  %10493 = call i32 @llvm.ctpop.i32(i32 %10492)
  %10494 = trunc i32 %10493 to i8
  %10495 = and i8 %10494, 1
  %10496 = xor i8 %10495, 1
  %10497 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10496, i8* %10497, align 1
  %10498 = xor i64 %10481, %10479
  %10499 = trunc i64 %10498 to i32
  %10500 = xor i32 %10499, %10485
  %10501 = lshr i32 %10500, 4
  %10502 = trunc i32 %10501 to i8
  %10503 = and i8 %10502, 1
  %10504 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10503, i8* %10504, align 1
  %10505 = icmp eq i32 %10485, 0
  %10506 = zext i1 %10505 to i8
  %10507 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10506, i8* %10507, align 1
  %10508 = lshr i32 %10485, 31
  %10509 = trunc i32 %10508 to i8
  %10510 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10509, i8* %10510, align 1
  %10511 = lshr i32 %10484, 31
  %10512 = lshr i32 %10480, 31
  %10513 = xor i32 %10508, %10511
  %10514 = xor i32 %10508, %10512
  %10515 = add i32 %10513, %10514
  %10516 = icmp eq i32 %10515, 2
  %10517 = zext i1 %10516 to i8
  %10518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10517, i8* %10518, align 1
  store %struct.Memory* %loadMem_401113, %struct.Memory** %MEMORY
  %loadMem_401115 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10520 = getelementptr inbounds %struct.GPR, %struct.GPR* %10519, i32 0, i32 33
  %10521 = getelementptr inbounds %struct.Reg, %struct.Reg* %10520, i32 0, i32 0
  %PC.i123 = bitcast %union.anon* %10521 to i64*
  %10522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10523 = getelementptr inbounds %struct.GPR, %struct.GPR* %10522, i32 0, i32 1
  %10524 = getelementptr inbounds %struct.Reg, %struct.Reg* %10523, i32 0, i32 0
  %EAX.i124 = bitcast %union.anon* %10524 to i32*
  %10525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10526 = getelementptr inbounds %struct.GPR, %struct.GPR* %10525, i32 0, i32 9
  %10527 = getelementptr inbounds %struct.Reg, %struct.Reg* %10526, i32 0, i32 0
  %RSI.i125 = bitcast %union.anon* %10527 to i64*
  %10528 = load i32, i32* %EAX.i124
  %10529 = zext i32 %10528 to i64
  %10530 = load i64, i64* %PC.i123
  %10531 = add i64 %10530, 3
  store i64 %10531, i64* %PC.i123
  %10532 = shl i64 %10529, 32
  %10533 = ashr exact i64 %10532, 32
  store i64 %10533, i64* %RSI.i125, align 8
  store %struct.Memory* %loadMem_401115, %struct.Memory** %MEMORY
  %loadMem_401118 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10535 = getelementptr inbounds %struct.GPR, %struct.GPR* %10534, i32 0, i32 33
  %10536 = getelementptr inbounds %struct.Reg, %struct.Reg* %10535, i32 0, i32 0
  %PC.i121 = bitcast %union.anon* %10536 to i64*
  %10537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10538 = getelementptr inbounds %struct.GPR, %struct.GPR* %10537, i32 0, i32 9
  %10539 = getelementptr inbounds %struct.Reg, %struct.Reg* %10538, i32 0, i32 0
  %RSI.i122 = bitcast %union.anon* %10539 to i64*
  %10540 = load i64, i64* %RSI.i122
  %10541 = mul i64 %10540, 4
  %10542 = add i64 %10541, ptrtoint (%G_0x609aa0___rsi_4__type* @G_0x609aa0___rsi_4_ to i64)
  %10543 = load i64, i64* %PC.i121
  %10544 = add i64 %10543, 11
  store i64 %10544, i64* %PC.i121
  %10545 = inttoptr i64 %10542 to i32*
  store i32 1, i32* %10545
  store %struct.Memory* %loadMem_401118, %struct.Memory** %MEMORY
  %loadMem_401123 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10547 = getelementptr inbounds %struct.GPR, %struct.GPR* %10546, i32 0, i32 33
  %10548 = getelementptr inbounds %struct.Reg, %struct.Reg* %10547, i32 0, i32 0
  %PC.i118 = bitcast %union.anon* %10548 to i64*
  %10549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10550 = getelementptr inbounds %struct.GPR, %struct.GPR* %10549, i32 0, i32 1
  %10551 = getelementptr inbounds %struct.Reg, %struct.Reg* %10550, i32 0, i32 0
  %RAX.i119 = bitcast %union.anon* %10551 to i64*
  %10552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10553 = getelementptr inbounds %struct.GPR, %struct.GPR* %10552, i32 0, i32 15
  %10554 = getelementptr inbounds %struct.Reg, %struct.Reg* %10553, i32 0, i32 0
  %RBP.i120 = bitcast %union.anon* %10554 to i64*
  %10555 = load i64, i64* %RBP.i120
  %10556 = sub i64 %10555, 12
  %10557 = load i64, i64* %PC.i118
  %10558 = add i64 %10557, 3
  store i64 %10558, i64* %PC.i118
  %10559 = inttoptr i64 %10556 to i32*
  %10560 = load i32, i32* %10559
  %10561 = zext i32 %10560 to i64
  store i64 %10561, i64* %RAX.i119, align 8
  store %struct.Memory* %loadMem_401123, %struct.Memory** %MEMORY
  %loadMem_401126 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10563 = getelementptr inbounds %struct.GPR, %struct.GPR* %10562, i32 0, i32 33
  %10564 = getelementptr inbounds %struct.Reg, %struct.Reg* %10563, i32 0, i32 0
  %PC.i116 = bitcast %union.anon* %10564 to i64*
  %10565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10566 = getelementptr inbounds %struct.GPR, %struct.GPR* %10565, i32 0, i32 1
  %10567 = getelementptr inbounds %struct.Reg, %struct.Reg* %10566, i32 0, i32 0
  %RAX.i117 = bitcast %union.anon* %10567 to i64*
  %10568 = load i64, i64* %RAX.i117
  %10569 = load i64, i64* %PC.i116
  %10570 = add i64 %10569, 3
  store i64 %10570, i64* %PC.i116
  %10571 = trunc i64 %10568 to i32
  %10572 = add i32 1, %10571
  %10573 = zext i32 %10572 to i64
  store i64 %10573, i64* %RAX.i117, align 8
  %10574 = icmp ult i32 %10572, %10571
  %10575 = icmp ult i32 %10572, 1
  %10576 = or i1 %10574, %10575
  %10577 = zext i1 %10576 to i8
  %10578 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10577, i8* %10578, align 1
  %10579 = and i32 %10572, 255
  %10580 = call i32 @llvm.ctpop.i32(i32 %10579)
  %10581 = trunc i32 %10580 to i8
  %10582 = and i8 %10581, 1
  %10583 = xor i8 %10582, 1
  %10584 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10583, i8* %10584, align 1
  %10585 = xor i64 1, %10568
  %10586 = trunc i64 %10585 to i32
  %10587 = xor i32 %10586, %10572
  %10588 = lshr i32 %10587, 4
  %10589 = trunc i32 %10588 to i8
  %10590 = and i8 %10589, 1
  %10591 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10590, i8* %10591, align 1
  %10592 = icmp eq i32 %10572, 0
  %10593 = zext i1 %10592 to i8
  %10594 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10593, i8* %10594, align 1
  %10595 = lshr i32 %10572, 31
  %10596 = trunc i32 %10595 to i8
  %10597 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10596, i8* %10597, align 1
  %10598 = lshr i32 %10571, 31
  %10599 = xor i32 %10595, %10598
  %10600 = add i32 %10599, %10595
  %10601 = icmp eq i32 %10600, 2
  %10602 = zext i1 %10601 to i8
  %10603 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10602, i8* %10603, align 1
  store %struct.Memory* %loadMem_401126, %struct.Memory** %MEMORY
  %loadMem_401129 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10605 = getelementptr inbounds %struct.GPR, %struct.GPR* %10604, i32 0, i32 33
  %10606 = getelementptr inbounds %struct.Reg, %struct.Reg* %10605, i32 0, i32 0
  %PC.i113 = bitcast %union.anon* %10606 to i64*
  %10607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10608 = getelementptr inbounds %struct.GPR, %struct.GPR* %10607, i32 0, i32 1
  %10609 = getelementptr inbounds %struct.Reg, %struct.Reg* %10608, i32 0, i32 0
  %EAX.i114 = bitcast %union.anon* %10609 to i32*
  %10610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10611 = getelementptr inbounds %struct.GPR, %struct.GPR* %10610, i32 0, i32 15
  %10612 = getelementptr inbounds %struct.Reg, %struct.Reg* %10611, i32 0, i32 0
  %RBP.i115 = bitcast %union.anon* %10612 to i64*
  %10613 = load i64, i64* %RBP.i115
  %10614 = sub i64 %10613, 12
  %10615 = load i32, i32* %EAX.i114
  %10616 = zext i32 %10615 to i64
  %10617 = load i64, i64* %PC.i113
  %10618 = add i64 %10617, 3
  store i64 %10618, i64* %PC.i113
  %10619 = inttoptr i64 %10614 to i32*
  store i32 %10615, i32* %10619
  store %struct.Memory* %loadMem_401129, %struct.Memory** %MEMORY
  %loadMem_40112c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10621 = getelementptr inbounds %struct.GPR, %struct.GPR* %10620, i32 0, i32 33
  %10622 = getelementptr inbounds %struct.Reg, %struct.Reg* %10621, i32 0, i32 0
  %PC.i112 = bitcast %union.anon* %10622 to i64*
  %10623 = load i64, i64* %PC.i112
  %10624 = add i64 %10623, -52
  %10625 = load i64, i64* %PC.i112
  %10626 = add i64 %10625, 5
  store i64 %10626, i64* %PC.i112
  %10627 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10624, i64* %10627, align 8
  store %struct.Memory* %loadMem_40112c, %struct.Memory** %MEMORY
  br label %block_.L_4010f8

block_.L_401131:                                  ; preds = %block_.L_4010f8
  %loadMem_401131 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10629 = getelementptr inbounds %struct.GPR, %struct.GPR* %10628, i32 0, i32 33
  %10630 = getelementptr inbounds %struct.Reg, %struct.Reg* %10629, i32 0, i32 0
  %PC.i111 = bitcast %union.anon* %10630 to i64*
  %10631 = load i64, i64* %PC.i111
  %10632 = add i64 %10631, 5
  %10633 = load i64, i64* %PC.i111
  %10634 = add i64 %10633, 5
  store i64 %10634, i64* %PC.i111
  %10635 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10632, i64* %10635, align 8
  store %struct.Memory* %loadMem_401131, %struct.Memory** %MEMORY
  br label %block_.L_401136

block_.L_401136:                                  ; preds = %block_.L_401131
  %loadMem_401136 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10637 = getelementptr inbounds %struct.GPR, %struct.GPR* %10636, i32 0, i32 33
  %10638 = getelementptr inbounds %struct.Reg, %struct.Reg* %10637, i32 0, i32 0
  %PC.i108 = bitcast %union.anon* %10638 to i64*
  %10639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10640 = getelementptr inbounds %struct.GPR, %struct.GPR* %10639, i32 0, i32 1
  %10641 = getelementptr inbounds %struct.Reg, %struct.Reg* %10640, i32 0, i32 0
  %RAX.i109 = bitcast %union.anon* %10641 to i64*
  %10642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10643 = getelementptr inbounds %struct.GPR, %struct.GPR* %10642, i32 0, i32 15
  %10644 = getelementptr inbounds %struct.Reg, %struct.Reg* %10643, i32 0, i32 0
  %RBP.i110 = bitcast %union.anon* %10644 to i64*
  %10645 = load i64, i64* %RBP.i110
  %10646 = sub i64 %10645, 8
  %10647 = load i64, i64* %PC.i108
  %10648 = add i64 %10647, 3
  store i64 %10648, i64* %PC.i108
  %10649 = inttoptr i64 %10646 to i32*
  %10650 = load i32, i32* %10649
  %10651 = zext i32 %10650 to i64
  store i64 %10651, i64* %RAX.i109, align 8
  store %struct.Memory* %loadMem_401136, %struct.Memory** %MEMORY
  %loadMem_401139 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10653 = getelementptr inbounds %struct.GPR, %struct.GPR* %10652, i32 0, i32 33
  %10654 = getelementptr inbounds %struct.Reg, %struct.Reg* %10653, i32 0, i32 0
  %PC.i106 = bitcast %union.anon* %10654 to i64*
  %10655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10656 = getelementptr inbounds %struct.GPR, %struct.GPR* %10655, i32 0, i32 1
  %10657 = getelementptr inbounds %struct.Reg, %struct.Reg* %10656, i32 0, i32 0
  %RAX.i107 = bitcast %union.anon* %10657 to i64*
  %10658 = load i64, i64* %RAX.i107
  %10659 = load i64, i64* %PC.i106
  %10660 = add i64 %10659, 3
  store i64 %10660, i64* %PC.i106
  %10661 = trunc i64 %10658 to i32
  %10662 = add i32 1, %10661
  %10663 = zext i32 %10662 to i64
  store i64 %10663, i64* %RAX.i107, align 8
  %10664 = icmp ult i32 %10662, %10661
  %10665 = icmp ult i32 %10662, 1
  %10666 = or i1 %10664, %10665
  %10667 = zext i1 %10666 to i8
  %10668 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10667, i8* %10668, align 1
  %10669 = and i32 %10662, 255
  %10670 = call i32 @llvm.ctpop.i32(i32 %10669)
  %10671 = trunc i32 %10670 to i8
  %10672 = and i8 %10671, 1
  %10673 = xor i8 %10672, 1
  %10674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10673, i8* %10674, align 1
  %10675 = xor i64 1, %10658
  %10676 = trunc i64 %10675 to i32
  %10677 = xor i32 %10676, %10662
  %10678 = lshr i32 %10677, 4
  %10679 = trunc i32 %10678 to i8
  %10680 = and i8 %10679, 1
  %10681 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10680, i8* %10681, align 1
  %10682 = icmp eq i32 %10662, 0
  %10683 = zext i1 %10682 to i8
  %10684 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10683, i8* %10684, align 1
  %10685 = lshr i32 %10662, 31
  %10686 = trunc i32 %10685 to i8
  %10687 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10686, i8* %10687, align 1
  %10688 = lshr i32 %10661, 31
  %10689 = xor i32 %10685, %10688
  %10690 = add i32 %10689, %10685
  %10691 = icmp eq i32 %10690, 2
  %10692 = zext i1 %10691 to i8
  %10693 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10692, i8* %10693, align 1
  store %struct.Memory* %loadMem_401139, %struct.Memory** %MEMORY
  %loadMem_40113c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10695 = getelementptr inbounds %struct.GPR, %struct.GPR* %10694, i32 0, i32 33
  %10696 = getelementptr inbounds %struct.Reg, %struct.Reg* %10695, i32 0, i32 0
  %PC.i103 = bitcast %union.anon* %10696 to i64*
  %10697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10698 = getelementptr inbounds %struct.GPR, %struct.GPR* %10697, i32 0, i32 1
  %10699 = getelementptr inbounds %struct.Reg, %struct.Reg* %10698, i32 0, i32 0
  %EAX.i104 = bitcast %union.anon* %10699 to i32*
  %10700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10701 = getelementptr inbounds %struct.GPR, %struct.GPR* %10700, i32 0, i32 15
  %10702 = getelementptr inbounds %struct.Reg, %struct.Reg* %10701, i32 0, i32 0
  %RBP.i105 = bitcast %union.anon* %10702 to i64*
  %10703 = load i64, i64* %RBP.i105
  %10704 = sub i64 %10703, 8
  %10705 = load i32, i32* %EAX.i104
  %10706 = zext i32 %10705 to i64
  %10707 = load i64, i64* %PC.i103
  %10708 = add i64 %10707, 3
  store i64 %10708, i64* %PC.i103
  %10709 = inttoptr i64 %10704 to i32*
  store i32 %10705, i32* %10709
  store %struct.Memory* %loadMem_40113c, %struct.Memory** %MEMORY
  %loadMem_40113f = load %struct.Memory*, %struct.Memory** %MEMORY
  %10710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10711 = getelementptr inbounds %struct.GPR, %struct.GPR* %10710, i32 0, i32 33
  %10712 = getelementptr inbounds %struct.Reg, %struct.Reg* %10711, i32 0, i32 0
  %PC.i102 = bitcast %union.anon* %10712 to i64*
  %10713 = load i64, i64* %PC.i102
  %10714 = add i64 %10713, -88
  %10715 = load i64, i64* %PC.i102
  %10716 = add i64 %10715, 5
  store i64 %10716, i64* %PC.i102
  %10717 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10714, i64* %10717, align 8
  store %struct.Memory* %loadMem_40113f, %struct.Memory** %MEMORY
  br label %block_.L_4010e7

block_.L_401144:                                  ; preds = %block_.L_4010e7
  %loadMem_401144 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10719 = getelementptr inbounds %struct.GPR, %struct.GPR* %10718, i32 0, i32 33
  %10720 = getelementptr inbounds %struct.Reg, %struct.Reg* %10719, i32 0, i32 0
  %PC.i101 = bitcast %union.anon* %10720 to i64*
  %10721 = load i64, i64* %PC.i101
  %10722 = add i64 %10721, 5
  %10723 = load i64, i64* %PC.i101
  %10724 = add i64 %10723, 5
  store i64 %10724, i64* %PC.i101
  %10725 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10722, i64* %10725, align 8
  store %struct.Memory* %loadMem_401144, %struct.Memory** %MEMORY
  br label %block_.L_401149

block_.L_401149:                                  ; preds = %block_.L_401144
  %loadMem_401149 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10727 = getelementptr inbounds %struct.GPR, %struct.GPR* %10726, i32 0, i32 33
  %10728 = getelementptr inbounds %struct.Reg, %struct.Reg* %10727, i32 0, i32 0
  %PC.i98 = bitcast %union.anon* %10728 to i64*
  %10729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10730 = getelementptr inbounds %struct.GPR, %struct.GPR* %10729, i32 0, i32 1
  %10731 = getelementptr inbounds %struct.Reg, %struct.Reg* %10730, i32 0, i32 0
  %RAX.i99 = bitcast %union.anon* %10731 to i64*
  %10732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10733 = getelementptr inbounds %struct.GPR, %struct.GPR* %10732, i32 0, i32 15
  %10734 = getelementptr inbounds %struct.Reg, %struct.Reg* %10733, i32 0, i32 0
  %RBP.i100 = bitcast %union.anon* %10734 to i64*
  %10735 = load i64, i64* %RBP.i100
  %10736 = sub i64 %10735, 4
  %10737 = load i64, i64* %PC.i98
  %10738 = add i64 %10737, 3
  store i64 %10738, i64* %PC.i98
  %10739 = inttoptr i64 %10736 to i32*
  %10740 = load i32, i32* %10739
  %10741 = zext i32 %10740 to i64
  store i64 %10741, i64* %RAX.i99, align 8
  store %struct.Memory* %loadMem_401149, %struct.Memory** %MEMORY
  %loadMem_40114c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10743 = getelementptr inbounds %struct.GPR, %struct.GPR* %10742, i32 0, i32 33
  %10744 = getelementptr inbounds %struct.Reg, %struct.Reg* %10743, i32 0, i32 0
  %PC.i97 = bitcast %union.anon* %10744 to i64*
  %10745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10746 = getelementptr inbounds %struct.GPR, %struct.GPR* %10745, i32 0, i32 1
  %10747 = getelementptr inbounds %struct.Reg, %struct.Reg* %10746, i32 0, i32 0
  %RAX.i = bitcast %union.anon* %10747 to i64*
  %10748 = load i64, i64* %RAX.i
  %10749 = load i64, i64* %PC.i97
  %10750 = add i64 %10749, 3
  store i64 %10750, i64* %PC.i97
  %10751 = trunc i64 %10748 to i32
  %10752 = add i32 1, %10751
  %10753 = zext i32 %10752 to i64
  store i64 %10753, i64* %RAX.i, align 8
  %10754 = icmp ult i32 %10752, %10751
  %10755 = icmp ult i32 %10752, 1
  %10756 = or i1 %10754, %10755
  %10757 = zext i1 %10756 to i8
  %10758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10757, i8* %10758, align 1
  %10759 = and i32 %10752, 255
  %10760 = call i32 @llvm.ctpop.i32(i32 %10759)
  %10761 = trunc i32 %10760 to i8
  %10762 = and i8 %10761, 1
  %10763 = xor i8 %10762, 1
  %10764 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10763, i8* %10764, align 1
  %10765 = xor i64 1, %10748
  %10766 = trunc i64 %10765 to i32
  %10767 = xor i32 %10766, %10752
  %10768 = lshr i32 %10767, 4
  %10769 = trunc i32 %10768 to i8
  %10770 = and i8 %10769, 1
  %10771 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10770, i8* %10771, align 1
  %10772 = icmp eq i32 %10752, 0
  %10773 = zext i1 %10772 to i8
  %10774 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10773, i8* %10774, align 1
  %10775 = lshr i32 %10752, 31
  %10776 = trunc i32 %10775 to i8
  %10777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10776, i8* %10777, align 1
  %10778 = lshr i32 %10751, 31
  %10779 = xor i32 %10775, %10778
  %10780 = add i32 %10779, %10775
  %10781 = icmp eq i32 %10780, 2
  %10782 = zext i1 %10781 to i8
  %10783 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10782, i8* %10783, align 1
  store %struct.Memory* %loadMem_40114c, %struct.Memory** %MEMORY
  %loadMem_40114f = load %struct.Memory*, %struct.Memory** %MEMORY
  %10784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10785 = getelementptr inbounds %struct.GPR, %struct.GPR* %10784, i32 0, i32 33
  %10786 = getelementptr inbounds %struct.Reg, %struct.Reg* %10785, i32 0, i32 0
  %PC.i94 = bitcast %union.anon* %10786 to i64*
  %10787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10788 = getelementptr inbounds %struct.GPR, %struct.GPR* %10787, i32 0, i32 1
  %10789 = getelementptr inbounds %struct.Reg, %struct.Reg* %10788, i32 0, i32 0
  %EAX.i95 = bitcast %union.anon* %10789 to i32*
  %10790 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10791 = getelementptr inbounds %struct.GPR, %struct.GPR* %10790, i32 0, i32 15
  %10792 = getelementptr inbounds %struct.Reg, %struct.Reg* %10791, i32 0, i32 0
  %RBP.i96 = bitcast %union.anon* %10792 to i64*
  %10793 = load i64, i64* %RBP.i96
  %10794 = sub i64 %10793, 4
  %10795 = load i32, i32* %EAX.i95
  %10796 = zext i32 %10795 to i64
  %10797 = load i64, i64* %PC.i94
  %10798 = add i64 %10797, 3
  store i64 %10798, i64* %PC.i94
  %10799 = inttoptr i64 %10794 to i32*
  store i32 %10795, i32* %10799
  store %struct.Memory* %loadMem_40114f, %struct.Memory** %MEMORY
  %loadMem_401152 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10801 = getelementptr inbounds %struct.GPR, %struct.GPR* %10800, i32 0, i32 33
  %10802 = getelementptr inbounds %struct.Reg, %struct.Reg* %10801, i32 0, i32 0
  %PC.i93 = bitcast %union.anon* %10802 to i64*
  %10803 = load i64, i64* %PC.i93
  %10804 = add i64 %10803, -124
  %10805 = load i64, i64* %PC.i93
  %10806 = add i64 %10805, 5
  store i64 %10806, i64* %PC.i93
  %10807 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10804, i64* %10807, align 8
  store %struct.Memory* %loadMem_401152, %struct.Memory** %MEMORY
  br label %block_.L_4010d6

block_.L_401157:                                  ; preds = %block_.L_4010d6
  %loadMem_401157 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10809 = getelementptr inbounds %struct.GPR, %struct.GPR* %10808, i32 0, i32 33
  %10810 = getelementptr inbounds %struct.Reg, %struct.Reg* %10809, i32 0, i32 0
  %PC.i90 = bitcast %union.anon* %10810 to i64*
  %10811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10812 = getelementptr inbounds %struct.GPR, %struct.GPR* %10811, i32 0, i32 11
  %10813 = getelementptr inbounds %struct.Reg, %struct.Reg* %10812, i32 0, i32 0
  %EDI.i91 = bitcast %union.anon* %10813 to i32*
  %10814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10815 = getelementptr inbounds %struct.GPR, %struct.GPR* %10814, i32 0, i32 11
  %10816 = getelementptr inbounds %struct.Reg, %struct.Reg* %10815, i32 0, i32 0
  %RDI.i92 = bitcast %union.anon* %10816 to i64*
  %10817 = load i64, i64* %RDI.i92
  %10818 = load i32, i32* %EDI.i91
  %10819 = zext i32 %10818 to i64
  %10820 = load i64, i64* %PC.i90
  %10821 = add i64 %10820, 2
  store i64 %10821, i64* %PC.i90
  %10822 = xor i64 %10819, %10817
  %10823 = trunc i64 %10822 to i32
  %10824 = and i64 %10822, 4294967295
  store i64 %10824, i64* %RDI.i92, align 8
  %10825 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %10825, align 1
  %10826 = and i32 %10823, 255
  %10827 = call i32 @llvm.ctpop.i32(i32 %10826)
  %10828 = trunc i32 %10827 to i8
  %10829 = and i8 %10828, 1
  %10830 = xor i8 %10829, 1
  %10831 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10830, i8* %10831, align 1
  %10832 = icmp eq i32 %10823, 0
  %10833 = zext i1 %10832 to i8
  %10834 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10833, i8* %10834, align 1
  %10835 = lshr i32 %10823, 31
  %10836 = trunc i32 %10835 to i8
  %10837 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10836, i8* %10837, align 1
  %10838 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10838, align 1
  %10839 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10839, align 1
  store %struct.Memory* %loadMem_401157, %struct.Memory** %MEMORY
  %loadMem_401159 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10841 = getelementptr inbounds %struct.GPR, %struct.GPR* %10840, i32 0, i32 33
  %10842 = getelementptr inbounds %struct.Reg, %struct.Reg* %10841, i32 0, i32 0
  %PC.i89 = bitcast %union.anon* %10842 to i64*
  %10843 = load i64, i64* %PC.i89
  %10844 = add i64 %10843, 11
  store i64 %10844, i64* %PC.i89
  store i32 3, i32* bitcast (%G_0x619220_type* @G_0x619220 to i32*)
  store %struct.Memory* %loadMem_401159, %struct.Memory** %MEMORY
  %loadMem_401164 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10846 = getelementptr inbounds %struct.GPR, %struct.GPR* %10845, i32 0, i32 33
  %10847 = getelementptr inbounds %struct.Reg, %struct.Reg* %10846, i32 0, i32 0
  %PC.i88 = bitcast %union.anon* %10847 to i64*
  %10848 = load i64, i64* %PC.i88
  %10849 = add i64 %10848, 11
  store i64 %10849, i64* %PC.i88
  store i32 73, i32* bitcast (%G_0x610280_type* @G_0x610280 to i32*)
  store %struct.Memory* %loadMem_401164, %struct.Memory** %MEMORY
  %loadMem_40116f = load %struct.Memory*, %struct.Memory** %MEMORY
  %10850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10851 = getelementptr inbounds %struct.GPR, %struct.GPR* %10850, i32 0, i32 33
  %10852 = getelementptr inbounds %struct.Reg, %struct.Reg* %10851, i32 0, i32 0
  %PC.i87 = bitcast %union.anon* %10852 to i64*
  %10853 = load i64, i64* %PC.i87
  %10854 = add i64 %10853, 11
  store i64 %10854, i64* %PC.i87
  store i32 13, i32* bitcast (%G_0x6191e0_type* @G_0x6191e0 to i32*)
  store %struct.Memory* %loadMem_40116f, %struct.Memory** %MEMORY
  %loadMem_40117a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10856 = getelementptr inbounds %struct.GPR, %struct.GPR* %10855, i32 0, i32 33
  %10857 = getelementptr inbounds %struct.Reg, %struct.Reg* %10856, i32 0, i32 0
  %PC.i86 = bitcast %union.anon* %10857 to i64*
  %10858 = load i64, i64* %PC.i86
  %10859 = add i64 %10858, 11
  store i64 %10859, i64* %PC.i86
  store i32 3, i32* bitcast (%G_0x6191e4_type* @G_0x6191e4 to i32*)
  store %struct.Memory* %loadMem_40117a, %struct.Memory** %MEMORY
  %loadMem_401185 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10861 = getelementptr inbounds %struct.GPR, %struct.GPR* %10860, i32 0, i32 33
  %10862 = getelementptr inbounds %struct.Reg, %struct.Reg* %10861, i32 0, i32 0
  %PC.i85 = bitcast %union.anon* %10862 to i64*
  %10863 = load i64, i64* %PC.i85
  %10864 = add i64 %10863, 11
  store i64 %10864, i64* %PC.i85
  store i32 1, i32* bitcast (%G_0x6191e8_type* @G_0x6191e8 to i32*)
  store %struct.Memory* %loadMem_401185, %struct.Memory** %MEMORY
  %loadMem_401190 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10866 = getelementptr inbounds %struct.GPR, %struct.GPR* %10865, i32 0, i32 33
  %10867 = getelementptr inbounds %struct.Reg, %struct.Reg* %10866, i32 0, i32 0
  %PC.i84 = bitcast %union.anon* %10867 to i64*
  %10868 = load i64, i64* %PC.i84
  %10869 = add i64 %10868, 11
  store i64 %10869, i64* %PC.i84
  store i32 1, i32* bitcast (%G_0x6191ec_type* @G_0x6191ec to i32*)
  store %struct.Memory* %loadMem_401190, %struct.Memory** %MEMORY
  %loadMem_40119b = load %struct.Memory*, %struct.Memory** %MEMORY
  %10870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10871 = getelementptr inbounds %struct.GPR, %struct.GPR* %10870, i32 0, i32 33
  %10872 = getelementptr inbounds %struct.Reg, %struct.Reg* %10871, i32 0, i32 0
  %PC.i82 = bitcast %union.anon* %10872 to i64*
  %10873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10874 = getelementptr inbounds %struct.GPR, %struct.GPR* %10873, i32 0, i32 15
  %10875 = getelementptr inbounds %struct.Reg, %struct.Reg* %10874, i32 0, i32 0
  %RBP.i83 = bitcast %union.anon* %10875 to i64*
  %10876 = load i64, i64* %RBP.i83
  %10877 = sub i64 %10876, 16
  %10878 = load i64, i64* %PC.i82
  %10879 = add i64 %10878, 7
  store i64 %10879, i64* %PC.i82
  %10880 = inttoptr i64 %10877 to i32*
  store i32 73, i32* %10880
  store %struct.Memory* %loadMem_40119b, %struct.Memory** %MEMORY
  %loadMem_4011a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10882 = getelementptr inbounds %struct.GPR, %struct.GPR* %10881, i32 0, i32 33
  %10883 = getelementptr inbounds %struct.Reg, %struct.Reg* %10882, i32 0, i32 0
  %PC.i81 = bitcast %union.anon* %10883 to i64*
  %10884 = load i64, i64* %PC.i81
  %10885 = add i64 %10884, 11
  store i64 %10885, i64* %PC.i81
  store i32 0, i32* bitcast (%G_0x6191c4_type* @G_0x6191c4 to i32*)
  store %struct.Memory* %loadMem_4011a2, %struct.Memory** %MEMORY
  %loadMem_4011ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %10886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10887 = getelementptr inbounds %struct.GPR, %struct.GPR* %10886, i32 0, i32 33
  %10888 = getelementptr inbounds %struct.Reg, %struct.Reg* %10887, i32 0, i32 0
  %PC.i78 = bitcast %union.anon* %10888 to i64*
  %10889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10890 = getelementptr inbounds %struct.GPR, %struct.GPR* %10889, i32 0, i32 9
  %10891 = getelementptr inbounds %struct.Reg, %struct.Reg* %10890, i32 0, i32 0
  %RSI.i79 = bitcast %union.anon* %10891 to i64*
  %10892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10893 = getelementptr inbounds %struct.GPR, %struct.GPR* %10892, i32 0, i32 15
  %10894 = getelementptr inbounds %struct.Reg, %struct.Reg* %10893, i32 0, i32 0
  %RBP.i80 = bitcast %union.anon* %10894 to i64*
  %10895 = load i64, i64* %RBP.i80
  %10896 = sub i64 %10895, 16
  %10897 = load i64, i64* %PC.i78
  %10898 = add i64 %10897, 3
  store i64 %10898, i64* %PC.i78
  %10899 = inttoptr i64 %10896 to i32*
  %10900 = load i32, i32* %10899
  %10901 = zext i32 %10900 to i64
  store i64 %10901, i64* %RSI.i79, align 8
  store %struct.Memory* %loadMem_4011ad, %struct.Memory** %MEMORY
  %loadMem1_4011b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10903 = getelementptr inbounds %struct.GPR, %struct.GPR* %10902, i32 0, i32 33
  %10904 = getelementptr inbounds %struct.Reg, %struct.Reg* %10903, i32 0, i32 0
  %PC.i77 = bitcast %union.anon* %10904 to i64*
  %10905 = load i64, i64* %PC.i77
  %10906 = add i64 %10905, -3168
  %10907 = load i64, i64* %PC.i77
  %10908 = add i64 %10907, 5
  %10909 = load i64, i64* %PC.i77
  %10910 = add i64 %10909, 5
  store i64 %10910, i64* %PC.i77
  %10911 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10912 = load i64, i64* %10911, align 8
  %10913 = add i64 %10912, -8
  %10914 = inttoptr i64 %10913 to i64*
  store i64 %10908, i64* %10914
  store i64 %10913, i64* %10911, align 8
  %10915 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10906, i64* %10915, align 8
  store %struct.Memory* %loadMem1_4011b0, %struct.Memory** %MEMORY
  %loadMem2_4011b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4011b0 = load i64, i64* %3
  %call2_4011b0 = call %struct.Memory* @sub_400550.Fit(%struct.State* %0, i64 %loadPC_4011b0, %struct.Memory* %loadMem2_4011b0)
  store %struct.Memory* %call2_4011b0, %struct.Memory** %MEMORY
  %loadMem_4011b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10916 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10917 = getelementptr inbounds %struct.GPR, %struct.GPR* %10916, i32 0, i32 33
  %10918 = getelementptr inbounds %struct.Reg, %struct.Reg* %10917, i32 0, i32 0
  %PC.i75 = bitcast %union.anon* %10918 to i64*
  %10919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10920 = getelementptr inbounds %struct.GPR, %struct.GPR* %10919, i32 0, i32 1
  %10921 = getelementptr inbounds %struct.Reg, %struct.Reg* %10920, i32 0, i32 0
  %EAX.i76 = bitcast %union.anon* %10921 to i32*
  %10922 = load i32, i32* %EAX.i76
  %10923 = zext i32 %10922 to i64
  %10924 = load i64, i64* %PC.i75
  %10925 = add i64 %10924, 3
  store i64 %10925, i64* %PC.i75
  %10926 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %10926, align 1
  %10927 = and i32 %10922, 255
  %10928 = call i32 @llvm.ctpop.i32(i32 %10927)
  %10929 = trunc i32 %10928 to i8
  %10930 = and i8 %10929, 1
  %10931 = xor i8 %10930, 1
  %10932 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10931, i8* %10932, align 1
  %10933 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10933, align 1
  %10934 = icmp eq i32 %10922, 0
  %10935 = zext i1 %10934 to i8
  %10936 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10935, i8* %10936, align 1
  %10937 = lshr i32 %10922, 31
  %10938 = trunc i32 %10937 to i8
  %10939 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10938, i8* %10939, align 1
  %10940 = lshr i32 %10922, 31
  %10941 = xor i32 %10937, %10940
  %10942 = add i32 %10941, %10940
  %10943 = icmp eq i32 %10942, 2
  %10944 = zext i1 %10943 to i8
  %10945 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10944, i8* %10945, align 1
  store %struct.Memory* %loadMem_4011b5, %struct.Memory** %MEMORY
  %loadMem_4011b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10947 = getelementptr inbounds %struct.GPR, %struct.GPR* %10946, i32 0, i32 33
  %10948 = getelementptr inbounds %struct.Reg, %struct.Reg* %10947, i32 0, i32 0
  %PC.i74 = bitcast %union.anon* %10948 to i64*
  %10949 = load i64, i64* %PC.i74
  %10950 = add i64 %10949, 28
  %10951 = load i64, i64* %PC.i74
  %10952 = add i64 %10951, 6
  %10953 = load i64, i64* %PC.i74
  %10954 = add i64 %10953, 6
  store i64 %10954, i64* %PC.i74
  %10955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10956 = load i8, i8* %10955, align 1
  store i8 %10956, i8* %BRANCH_TAKEN, align 1
  %10957 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10958 = icmp ne i8 %10956, 0
  %10959 = select i1 %10958, i64 %10950, i64 %10952
  store i64 %10959, i64* %10957, align 8
  store %struct.Memory* %loadMem_4011b8, %struct.Memory** %MEMORY
  %loadBr_4011b8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4011b8 = icmp eq i8 %loadBr_4011b8, 1
  br i1 %cmpBr_4011b8, label %block_.L_4011d4, label %block_4011be

block_4011be:                                     ; preds = %block_.L_401157
  %loadMem_4011be = load %struct.Memory*, %struct.Memory** %MEMORY
  %10960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10961 = getelementptr inbounds %struct.GPR, %struct.GPR* %10960, i32 0, i32 33
  %10962 = getelementptr inbounds %struct.Reg, %struct.Reg* %10961, i32 0, i32 0
  %PC.i72 = bitcast %union.anon* %10962 to i64*
  %10963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10964 = getelementptr inbounds %struct.GPR, %struct.GPR* %10963, i32 0, i32 11
  %10965 = getelementptr inbounds %struct.Reg, %struct.Reg* %10964, i32 0, i32 0
  %EDI.i = bitcast %union.anon* %10965 to i32*
  %10966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10967 = getelementptr inbounds %struct.GPR, %struct.GPR* %10966, i32 0, i32 11
  %10968 = getelementptr inbounds %struct.Reg, %struct.Reg* %10967, i32 0, i32 0
  %RDI.i73 = bitcast %union.anon* %10968 to i64*
  %10969 = load i64, i64* %RDI.i73
  %10970 = load i32, i32* %EDI.i
  %10971 = zext i32 %10970 to i64
  %10972 = load i64, i64* %PC.i72
  %10973 = add i64 %10972, 2
  store i64 %10973, i64* %PC.i72
  %10974 = xor i64 %10971, %10969
  %10975 = trunc i64 %10974 to i32
  %10976 = and i64 %10974, 4294967295
  store i64 %10976, i64* %RDI.i73, align 8
  %10977 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %10977, align 1
  %10978 = and i32 %10975, 255
  %10979 = call i32 @llvm.ctpop.i32(i32 %10978)
  %10980 = trunc i32 %10979 to i8
  %10981 = and i8 %10980, 1
  %10982 = xor i8 %10981, 1
  %10983 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10982, i8* %10983, align 1
  %10984 = icmp eq i32 %10975, 0
  %10985 = zext i1 %10984 to i8
  %10986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10985, i8* %10986, align 1
  %10987 = lshr i32 %10975, 31
  %10988 = trunc i32 %10987 to i8
  %10989 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10988, i8* %10989, align 1
  %10990 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10990, align 1
  %10991 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10991, align 1
  store %struct.Memory* %loadMem_4011be, %struct.Memory** %MEMORY
  %loadMem_4011c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10993 = getelementptr inbounds %struct.GPR, %struct.GPR* %10992, i32 0, i32 33
  %10994 = getelementptr inbounds %struct.Reg, %struct.Reg* %10993, i32 0, i32 0
  %PC.i69 = bitcast %union.anon* %10994 to i64*
  %10995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10996 = getelementptr inbounds %struct.GPR, %struct.GPR* %10995, i32 0, i32 9
  %10997 = getelementptr inbounds %struct.Reg, %struct.Reg* %10996, i32 0, i32 0
  %RSI.i70 = bitcast %union.anon* %10997 to i64*
  %10998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10999 = getelementptr inbounds %struct.GPR, %struct.GPR* %10998, i32 0, i32 15
  %11000 = getelementptr inbounds %struct.Reg, %struct.Reg* %10999, i32 0, i32 0
  %RBP.i71 = bitcast %union.anon* %11000 to i64*
  %11001 = load i64, i64* %RBP.i71
  %11002 = sub i64 %11001, 16
  %11003 = load i64, i64* %PC.i69
  %11004 = add i64 %11003, 3
  store i64 %11004, i64* %PC.i69
  %11005 = inttoptr i64 %11002 to i32*
  %11006 = load i32, i32* %11005
  %11007 = zext i32 %11006 to i64
  store i64 %11007, i64* %RSI.i70, align 8
  store %struct.Memory* %loadMem_4011c0, %struct.Memory** %MEMORY
  %loadMem1_4011c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11009 = getelementptr inbounds %struct.GPR, %struct.GPR* %11008, i32 0, i32 33
  %11010 = getelementptr inbounds %struct.Reg, %struct.Reg* %11009, i32 0, i32 0
  %PC.i68 = bitcast %union.anon* %11010 to i64*
  %11011 = load i64, i64* %PC.i68
  %11012 = add i64 %11011, -3043
  %11013 = load i64, i64* %PC.i68
  %11014 = add i64 %11013, 5
  %11015 = load i64, i64* %PC.i68
  %11016 = add i64 %11015, 5
  store i64 %11016, i64* %PC.i68
  %11017 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %11018 = load i64, i64* %11017, align 8
  %11019 = add i64 %11018, -8
  %11020 = inttoptr i64 %11019 to i64*
  store i64 %11014, i64* %11020
  store i64 %11019, i64* %11017, align 8
  %11021 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11012, i64* %11021, align 8
  store %struct.Memory* %loadMem1_4011c3, %struct.Memory** %MEMORY
  %loadMem2_4011c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4011c3 = load i64, i64* %3
  %call2_4011c3 = call %struct.Memory* @sub_4005e0.Place(%struct.State* %0, i64 %loadPC_4011c3, %struct.Memory* %loadMem2_4011c3)
  store %struct.Memory* %call2_4011c3, %struct.Memory** %MEMORY
  %loadMem_4011c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11023 = getelementptr inbounds %struct.GPR, %struct.GPR* %11022, i32 0, i32 33
  %11024 = getelementptr inbounds %struct.Reg, %struct.Reg* %11023, i32 0, i32 0
  %PC.i66 = bitcast %union.anon* %11024 to i64*
  %11025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11026 = getelementptr inbounds %struct.GPR, %struct.GPR* %11025, i32 0, i32 1
  %11027 = getelementptr inbounds %struct.Reg, %struct.Reg* %11026, i32 0, i32 0
  %EAX.i67 = bitcast %union.anon* %11027 to i32*
  %11028 = load i32, i32* %EAX.i67
  %11029 = zext i32 %11028 to i64
  %11030 = load i64, i64* %PC.i66
  %11031 = add i64 %11030, 7
  store i64 %11031, i64* %PC.i66
  store i32 %11028, i32* bitcast (%G_0x603a94_type* @G_0x603a94 to i32*)
  store %struct.Memory* %loadMem_4011c8, %struct.Memory** %MEMORY
  %loadMem_4011cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %11032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11033 = getelementptr inbounds %struct.GPR, %struct.GPR* %11032, i32 0, i32 33
  %11034 = getelementptr inbounds %struct.Reg, %struct.Reg* %11033, i32 0, i32 0
  %PC.i65 = bitcast %union.anon* %11034 to i64*
  %11035 = load i64, i64* %PC.i65
  %11036 = add i64 %11035, 25
  %11037 = load i64, i64* %PC.i65
  %11038 = add i64 %11037, 5
  store i64 %11038, i64* %PC.i65
  %11039 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11036, i64* %11039, align 8
  store %struct.Memory* %loadMem_4011cf, %struct.Memory** %MEMORY
  br label %block_.L_4011e8

block_.L_4011d4:                                  ; preds = %block_.L_401157
  %loadMem_4011d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11041 = getelementptr inbounds %struct.GPR, %struct.GPR* %11040, i32 0, i32 33
  %11042 = getelementptr inbounds %struct.Reg, %struct.Reg* %11041, i32 0, i32 0
  %PC.i63 = bitcast %union.anon* %11042 to i64*
  %11043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11044 = getelementptr inbounds %struct.GPR, %struct.GPR* %11043, i32 0, i32 11
  %11045 = getelementptr inbounds %struct.Reg, %struct.Reg* %11044, i32 0, i32 0
  %RDI.i64 = bitcast %union.anon* %11045 to i64*
  %11046 = load i64, i64* %PC.i63
  %11047 = add i64 %11046, 10
  store i64 %11047, i64* %PC.i63
  store i64 ptrtoint (%G__0x401344_type* @G__0x401344 to i64), i64* %RDI.i64, align 8
  store %struct.Memory* %loadMem_4011d4, %struct.Memory** %MEMORY
  %loadMem_4011de = load %struct.Memory*, %struct.Memory** %MEMORY
  %11048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11049 = getelementptr inbounds %struct.GPR, %struct.GPR* %11048, i32 0, i32 33
  %11050 = getelementptr inbounds %struct.Reg, %struct.Reg* %11049, i32 0, i32 0
  %PC.i61 = bitcast %union.anon* %11050 to i64*
  %11051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11052 = getelementptr inbounds %struct.GPR, %struct.GPR* %11051, i32 0, i32 1
  %11053 = getelementptr inbounds %struct.Reg, %struct.Reg* %11052, i32 0, i32 0
  %11054 = bitcast %union.anon* %11053 to %struct.anon.2*
  %AL.i62 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %11054, i32 0, i32 0
  %11055 = load i64, i64* %PC.i61
  %11056 = add i64 %11055, 2
  store i64 %11056, i64* %PC.i61
  store i8 0, i8* %AL.i62, align 1
  store %struct.Memory* %loadMem_4011de, %struct.Memory** %MEMORY
  %loadMem1_4011e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11058 = getelementptr inbounds %struct.GPR, %struct.GPR* %11057, i32 0, i32 33
  %11059 = getelementptr inbounds %struct.Reg, %struct.Reg* %11058, i32 0, i32 0
  %PC.i60 = bitcast %union.anon* %11059 to i64*
  %11060 = load i64, i64* %PC.i60
  %11061 = add i64 %11060, -3568
  %11062 = load i64, i64* %PC.i60
  %11063 = add i64 %11062, 5
  %11064 = load i64, i64* %PC.i60
  %11065 = add i64 %11064, 5
  store i64 %11065, i64* %PC.i60
  %11066 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %11067 = load i64, i64* %11066, align 8
  %11068 = add i64 %11067, -8
  %11069 = inttoptr i64 %11068 to i64*
  store i64 %11063, i64* %11069
  store i64 %11068, i64* %11066, align 8
  %11070 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11061, i64* %11070, align 8
  store %struct.Memory* %loadMem1_4011e0, %struct.Memory** %MEMORY
  %loadMem2_4011e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4011e0 = load i64, i64* %3
  %11071 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %loadMem2_4011e0)
  store %struct.Memory* %11071, %struct.Memory** %MEMORY
  %loadMem_4011e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11073 = getelementptr inbounds %struct.GPR, %struct.GPR* %11072, i32 0, i32 33
  %11074 = getelementptr inbounds %struct.Reg, %struct.Reg* %11073, i32 0, i32 0
  %PC.i56 = bitcast %union.anon* %11074 to i64*
  %11075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11076 = getelementptr inbounds %struct.GPR, %struct.GPR* %11075, i32 0, i32 1
  %11077 = getelementptr inbounds %struct.Reg, %struct.Reg* %11076, i32 0, i32 0
  %EAX.i57 = bitcast %union.anon* %11077 to i32*
  %11078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11079 = getelementptr inbounds %struct.GPR, %struct.GPR* %11078, i32 0, i32 15
  %11080 = getelementptr inbounds %struct.Reg, %struct.Reg* %11079, i32 0, i32 0
  %RBP.i58 = bitcast %union.anon* %11080 to i64*
  %11081 = load i64, i64* %RBP.i58
  %11082 = sub i64 %11081, 20
  %11083 = load i32, i32* %EAX.i57
  %11084 = zext i32 %11083 to i64
  %11085 = load i64, i64* %PC.i56
  %11086 = add i64 %11085, 3
  store i64 %11086, i64* %PC.i56
  %11087 = inttoptr i64 %11082 to i32*
  store i32 %11083, i32* %11087
  store %struct.Memory* %loadMem_4011e5, %struct.Memory** %MEMORY
  br label %block_.L_4011e8

block_.L_4011e8:                                  ; preds = %block_.L_4011d4, %block_4011be
  %loadMem_4011e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11089 = getelementptr inbounds %struct.GPR, %struct.GPR* %11088, i32 0, i32 33
  %11090 = getelementptr inbounds %struct.Reg, %struct.Reg* %11089, i32 0, i32 0
  %PC.i54 = bitcast %union.anon* %11090 to i64*
  %11091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11092 = getelementptr inbounds %struct.GPR, %struct.GPR* %11091, i32 0, i32 11
  %11093 = getelementptr inbounds %struct.Reg, %struct.Reg* %11092, i32 0, i32 0
  %RDI.i55 = bitcast %union.anon* %11093 to i64*
  %11094 = load i64, i64* %PC.i54
  %11095 = add i64 %11094, 7
  store i64 %11095, i64* %PC.i54
  %11096 = load i32, i32* bitcast (%G_0x603a94_type* @G_0x603a94 to i32*)
  %11097 = zext i32 %11096 to i64
  store i64 %11097, i64* %RDI.i55, align 8
  store %struct.Memory* %loadMem_4011e8, %struct.Memory** %MEMORY
  %loadMem1_4011ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %11098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11099 = getelementptr inbounds %struct.GPR, %struct.GPR* %11098, i32 0, i32 33
  %11100 = getelementptr inbounds %struct.Reg, %struct.Reg* %11099, i32 0, i32 0
  %PC.i53 = bitcast %union.anon* %11100 to i64*
  %11101 = load i64, i64* %PC.i53
  %11102 = add i64 %11101, -2687
  %11103 = load i64, i64* %PC.i53
  %11104 = add i64 %11103, 5
  %11105 = load i64, i64* %PC.i53
  %11106 = add i64 %11105, 5
  store i64 %11106, i64* %PC.i53
  %11107 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %11108 = load i64, i64* %11107, align 8
  %11109 = add i64 %11108, -8
  %11110 = inttoptr i64 %11109 to i64*
  store i64 %11104, i64* %11110
  store i64 %11109, i64* %11107, align 8
  %11111 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11102, i64* %11111, align 8
  store %struct.Memory* %loadMem1_4011ef, %struct.Memory** %MEMORY
  %loadMem2_4011ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4011ef = load i64, i64* %3
  %call2_4011ef = call %struct.Memory* @sub_400770.Trial(%struct.State* %0, i64 %loadPC_4011ef, %struct.Memory* %loadMem2_4011ef)
  store %struct.Memory* %call2_4011ef, %struct.Memory** %MEMORY
  %loadMem_4011f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11113 = getelementptr inbounds %struct.GPR, %struct.GPR* %11112, i32 0, i32 33
  %11114 = getelementptr inbounds %struct.Reg, %struct.Reg* %11113, i32 0, i32 0
  %PC.i51 = bitcast %union.anon* %11114 to i64*
  %11115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11116 = getelementptr inbounds %struct.GPR, %struct.GPR* %11115, i32 0, i32 1
  %11117 = getelementptr inbounds %struct.Reg, %struct.Reg* %11116, i32 0, i32 0
  %EAX.i52 = bitcast %union.anon* %11117 to i32*
  %11118 = load i32, i32* %EAX.i52
  %11119 = zext i32 %11118 to i64
  %11120 = load i64, i64* %PC.i51
  %11121 = add i64 %11120, 3
  store i64 %11121, i64* %PC.i51
  %11122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %11122, align 1
  %11123 = and i32 %11118, 255
  %11124 = call i32 @llvm.ctpop.i32(i32 %11123)
  %11125 = trunc i32 %11124 to i8
  %11126 = and i8 %11125, 1
  %11127 = xor i8 %11126, 1
  %11128 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11127, i8* %11128, align 1
  %11129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11129, align 1
  %11130 = icmp eq i32 %11118, 0
  %11131 = zext i1 %11130 to i8
  %11132 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11131, i8* %11132, align 1
  %11133 = lshr i32 %11118, 31
  %11134 = trunc i32 %11133 to i8
  %11135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11134, i8* %11135, align 1
  %11136 = lshr i32 %11118, 31
  %11137 = xor i32 %11133, %11136
  %11138 = add i32 %11137, %11136
  %11139 = icmp eq i32 %11138, 2
  %11140 = zext i1 %11139 to i8
  %11141 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11140, i8* %11141, align 1
  store %struct.Memory* %loadMem_4011f4, %struct.Memory** %MEMORY
  %loadMem_4011f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11143 = getelementptr inbounds %struct.GPR, %struct.GPR* %11142, i32 0, i32 33
  %11144 = getelementptr inbounds %struct.Reg, %struct.Reg* %11143, i32 0, i32 0
  %PC.i50 = bitcast %union.anon* %11144 to i64*
  %11145 = load i64, i64* %PC.i50
  %11146 = add i64 %11145, 31
  %11147 = load i64, i64* %PC.i50
  %11148 = add i64 %11147, 6
  %11149 = load i64, i64* %PC.i50
  %11150 = add i64 %11149, 6
  store i64 %11150, i64* %PC.i50
  %11151 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11152 = load i8, i8* %11151, align 1
  %11153 = icmp eq i8 %11152, 0
  %11154 = zext i1 %11153 to i8
  store i8 %11154, i8* %BRANCH_TAKEN, align 1
  %11155 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11156 = select i1 %11153, i64 %11146, i64 %11148
  store i64 %11156, i64* %11155, align 8
  store %struct.Memory* %loadMem_4011f7, %struct.Memory** %MEMORY
  %loadBr_4011f7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4011f7 = icmp eq i8 %loadBr_4011f7, 1
  br i1 %cmpBr_4011f7, label %block_.L_401216, label %block_4011fd

block_4011fd:                                     ; preds = %block_.L_4011e8
  %loadMem_4011fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %11157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11158 = getelementptr inbounds %struct.GPR, %struct.GPR* %11157, i32 0, i32 33
  %11159 = getelementptr inbounds %struct.Reg, %struct.Reg* %11158, i32 0, i32 0
  %PC.i48 = bitcast %union.anon* %11159 to i64*
  %11160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11161 = getelementptr inbounds %struct.GPR, %struct.GPR* %11160, i32 0, i32 11
  %11162 = getelementptr inbounds %struct.Reg, %struct.Reg* %11161, i32 0, i32 0
  %RDI.i49 = bitcast %union.anon* %11162 to i64*
  %11163 = load i64, i64* %PC.i48
  %11164 = add i64 %11163, 10
  store i64 %11164, i64* %PC.i48
  store i64 ptrtoint (%G__0x401356_type* @G__0x401356 to i64), i64* %RDI.i49, align 8
  store %struct.Memory* %loadMem_4011fd, %struct.Memory** %MEMORY
  %loadMem_401207 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11166 = getelementptr inbounds %struct.GPR, %struct.GPR* %11165, i32 0, i32 33
  %11167 = getelementptr inbounds %struct.Reg, %struct.Reg* %11166, i32 0, i32 0
  %PC.i46 = bitcast %union.anon* %11167 to i64*
  %11168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11169 = getelementptr inbounds %struct.GPR, %struct.GPR* %11168, i32 0, i32 1
  %11170 = getelementptr inbounds %struct.Reg, %struct.Reg* %11169, i32 0, i32 0
  %11171 = bitcast %union.anon* %11170 to %struct.anon.2*
  %AL.i47 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %11171, i32 0, i32 0
  %11172 = load i64, i64* %PC.i46
  %11173 = add i64 %11172, 2
  store i64 %11173, i64* %PC.i46
  store i8 0, i8* %AL.i47, align 1
  store %struct.Memory* %loadMem_401207, %struct.Memory** %MEMORY
  %loadMem1_401209 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11175 = getelementptr inbounds %struct.GPR, %struct.GPR* %11174, i32 0, i32 33
  %11176 = getelementptr inbounds %struct.Reg, %struct.Reg* %11175, i32 0, i32 0
  %PC.i45 = bitcast %union.anon* %11176 to i64*
  %11177 = load i64, i64* %PC.i45
  %11178 = add i64 %11177, -3609
  %11179 = load i64, i64* %PC.i45
  %11180 = add i64 %11179, 5
  %11181 = load i64, i64* %PC.i45
  %11182 = add i64 %11181, 5
  store i64 %11182, i64* %PC.i45
  %11183 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %11184 = load i64, i64* %11183, align 8
  %11185 = add i64 %11184, -8
  %11186 = inttoptr i64 %11185 to i64*
  store i64 %11180, i64* %11186
  store i64 %11185, i64* %11183, align 8
  %11187 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11178, i64* %11187, align 8
  store %struct.Memory* %loadMem1_401209, %struct.Memory** %MEMORY
  %loadMem2_401209 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401209 = load i64, i64* %3
  %11188 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %loadMem2_401209)
  store %struct.Memory* %11188, %struct.Memory** %MEMORY
  %loadMem_40120e = load %struct.Memory*, %struct.Memory** %MEMORY
  %11189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11190 = getelementptr inbounds %struct.GPR, %struct.GPR* %11189, i32 0, i32 33
  %11191 = getelementptr inbounds %struct.Reg, %struct.Reg* %11190, i32 0, i32 0
  %PC.i40 = bitcast %union.anon* %11191 to i64*
  %11192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11193 = getelementptr inbounds %struct.GPR, %struct.GPR* %11192, i32 0, i32 1
  %11194 = getelementptr inbounds %struct.Reg, %struct.Reg* %11193, i32 0, i32 0
  %EAX.i41 = bitcast %union.anon* %11194 to i32*
  %11195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11196 = getelementptr inbounds %struct.GPR, %struct.GPR* %11195, i32 0, i32 15
  %11197 = getelementptr inbounds %struct.Reg, %struct.Reg* %11196, i32 0, i32 0
  %RBP.i42 = bitcast %union.anon* %11197 to i64*
  %11198 = load i64, i64* %RBP.i42
  %11199 = sub i64 %11198, 24
  %11200 = load i32, i32* %EAX.i41
  %11201 = zext i32 %11200 to i64
  %11202 = load i64, i64* %PC.i40
  %11203 = add i64 %11202, 3
  store i64 %11203, i64* %PC.i40
  %11204 = inttoptr i64 %11199 to i32*
  store i32 %11200, i32* %11204
  store %struct.Memory* %loadMem_40120e, %struct.Memory** %MEMORY
  %loadMem_401211 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11206 = getelementptr inbounds %struct.GPR, %struct.GPR* %11205, i32 0, i32 33
  %11207 = getelementptr inbounds %struct.Reg, %struct.Reg* %11206, i32 0, i32 0
  %PC.i39 = bitcast %union.anon* %11207 to i64*
  %11208 = load i64, i64* %PC.i39
  %11209 = add i64 %11208, 47
  %11210 = load i64, i64* %PC.i39
  %11211 = add i64 %11210, 5
  store i64 %11211, i64* %PC.i39
  %11212 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11209, i64* %11212, align 8
  store %struct.Memory* %loadMem_401211, %struct.Memory** %MEMORY
  br label %block_.L_401240

block_.L_401216:                                  ; preds = %block_.L_4011e8
  %loadMem_401216 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11214 = getelementptr inbounds %struct.GPR, %struct.GPR* %11213, i32 0, i32 33
  %11215 = getelementptr inbounds %struct.Reg, %struct.Reg* %11214, i32 0, i32 0
  %PC.i38 = bitcast %union.anon* %11215 to i64*
  %11216 = load i64, i64* %PC.i38
  %11217 = add i64 %11216, 11
  store i64 %11217, i64* %PC.i38
  %11218 = load i32, i32* bitcast (%G_0x6191c4_type* @G_0x6191c4 to i32*)
  %11219 = sub i32 %11218, 2005
  %11220 = icmp ult i32 %11218, 2005
  %11221 = zext i1 %11220 to i8
  %11222 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11221, i8* %11222, align 1
  %11223 = and i32 %11219, 255
  %11224 = call i32 @llvm.ctpop.i32(i32 %11223)
  %11225 = trunc i32 %11224 to i8
  %11226 = and i8 %11225, 1
  %11227 = xor i8 %11226, 1
  %11228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11227, i8* %11228, align 1
  %11229 = xor i32 %11218, 2005
  %11230 = xor i32 %11229, %11219
  %11231 = lshr i32 %11230, 4
  %11232 = trunc i32 %11231 to i8
  %11233 = and i8 %11232, 1
  %11234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11233, i8* %11234, align 1
  %11235 = icmp eq i32 %11219, 0
  %11236 = zext i1 %11235 to i8
  %11237 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11236, i8* %11237, align 1
  %11238 = lshr i32 %11219, 31
  %11239 = trunc i32 %11238 to i8
  %11240 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11239, i8* %11240, align 1
  %11241 = lshr i32 %11218, 31
  %11242 = xor i32 %11238, %11241
  %11243 = add i32 %11242, %11241
  %11244 = icmp eq i32 %11243, 2
  %11245 = zext i1 %11244 to i8
  %11246 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11245, i8* %11246, align 1
  store %struct.Memory* %loadMem_401216, %struct.Memory** %MEMORY
  %loadMem_401221 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11248 = getelementptr inbounds %struct.GPR, %struct.GPR* %11247, i32 0, i32 33
  %11249 = getelementptr inbounds %struct.Reg, %struct.Reg* %11248, i32 0, i32 0
  %PC.i37 = bitcast %union.anon* %11249 to i64*
  %11250 = load i64, i64* %PC.i37
  %11251 = add i64 %11250, 26
  %11252 = load i64, i64* %PC.i37
  %11253 = add i64 %11252, 6
  %11254 = load i64, i64* %PC.i37
  %11255 = add i64 %11254, 6
  store i64 %11255, i64* %PC.i37
  %11256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11257 = load i8, i8* %11256, align 1
  store i8 %11257, i8* %BRANCH_TAKEN, align 1
  %11258 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11259 = icmp ne i8 %11257, 0
  %11260 = select i1 %11259, i64 %11251, i64 %11253
  store i64 %11260, i64* %11258, align 8
  store %struct.Memory* %loadMem_401221, %struct.Memory** %MEMORY
  %loadBr_401221 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_401221 = icmp eq i8 %loadBr_401221, 1
  br i1 %cmpBr_401221, label %block_.L_40123b, label %block_401227

block_401227:                                     ; preds = %block_.L_401216
  %loadMem_401227 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11262 = getelementptr inbounds %struct.GPR, %struct.GPR* %11261, i32 0, i32 33
  %11263 = getelementptr inbounds %struct.Reg, %struct.Reg* %11262, i32 0, i32 0
  %PC.i35 = bitcast %union.anon* %11263 to i64*
  %11264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11265 = getelementptr inbounds %struct.GPR, %struct.GPR* %11264, i32 0, i32 11
  %11266 = getelementptr inbounds %struct.Reg, %struct.Reg* %11265, i32 0, i32 0
  %RDI.i36 = bitcast %union.anon* %11266 to i64*
  %11267 = load i64, i64* %PC.i35
  %11268 = add i64 %11267, 10
  store i64 %11268, i64* %PC.i35
  store i64 ptrtoint (%G__0x401369_type* @G__0x401369 to i64), i64* %RDI.i36, align 8
  store %struct.Memory* %loadMem_401227, %struct.Memory** %MEMORY
  %loadMem_401231 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11270 = getelementptr inbounds %struct.GPR, %struct.GPR* %11269, i32 0, i32 33
  %11271 = getelementptr inbounds %struct.Reg, %struct.Reg* %11270, i32 0, i32 0
  %PC.i33 = bitcast %union.anon* %11271 to i64*
  %11272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11273 = getelementptr inbounds %struct.GPR, %struct.GPR* %11272, i32 0, i32 1
  %11274 = getelementptr inbounds %struct.Reg, %struct.Reg* %11273, i32 0, i32 0
  %11275 = bitcast %union.anon* %11274 to %struct.anon.2*
  %AL.i34 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %11275, i32 0, i32 0
  %11276 = load i64, i64* %PC.i33
  %11277 = add i64 %11276, 2
  store i64 %11277, i64* %PC.i33
  store i8 0, i8* %AL.i34, align 1
  store %struct.Memory* %loadMem_401231, %struct.Memory** %MEMORY
  %loadMem1_401233 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11279 = getelementptr inbounds %struct.GPR, %struct.GPR* %11278, i32 0, i32 33
  %11280 = getelementptr inbounds %struct.Reg, %struct.Reg* %11279, i32 0, i32 0
  %PC.i32 = bitcast %union.anon* %11280 to i64*
  %11281 = load i64, i64* %PC.i32
  %11282 = add i64 %11281, -3651
  %11283 = load i64, i64* %PC.i32
  %11284 = add i64 %11283, 5
  %11285 = load i64, i64* %PC.i32
  %11286 = add i64 %11285, 5
  store i64 %11286, i64* %PC.i32
  %11287 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %11288 = load i64, i64* %11287, align 8
  %11289 = add i64 %11288, -8
  %11290 = inttoptr i64 %11289 to i64*
  store i64 %11284, i64* %11290
  store i64 %11289, i64* %11287, align 8
  %11291 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11282, i64* %11291, align 8
  store %struct.Memory* %loadMem1_401233, %struct.Memory** %MEMORY
  %loadMem2_401233 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401233 = load i64, i64* %3
  %11292 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %loadMem2_401233)
  store %struct.Memory* %11292, %struct.Memory** %MEMORY
  %loadMem_401238 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11294 = getelementptr inbounds %struct.GPR, %struct.GPR* %11293, i32 0, i32 33
  %11295 = getelementptr inbounds %struct.Reg, %struct.Reg* %11294, i32 0, i32 0
  %PC.i27 = bitcast %union.anon* %11295 to i64*
  %11296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11297 = getelementptr inbounds %struct.GPR, %struct.GPR* %11296, i32 0, i32 1
  %11298 = getelementptr inbounds %struct.Reg, %struct.Reg* %11297, i32 0, i32 0
  %EAX.i28 = bitcast %union.anon* %11298 to i32*
  %11299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11300 = getelementptr inbounds %struct.GPR, %struct.GPR* %11299, i32 0, i32 15
  %11301 = getelementptr inbounds %struct.Reg, %struct.Reg* %11300, i32 0, i32 0
  %RBP.i29 = bitcast %union.anon* %11301 to i64*
  %11302 = load i64, i64* %RBP.i29
  %11303 = sub i64 %11302, 28
  %11304 = load i32, i32* %EAX.i28
  %11305 = zext i32 %11304 to i64
  %11306 = load i64, i64* %PC.i27
  %11307 = add i64 %11306, 3
  store i64 %11307, i64* %PC.i27
  %11308 = inttoptr i64 %11303 to i32*
  store i32 %11304, i32* %11308
  store %struct.Memory* %loadMem_401238, %struct.Memory** %MEMORY
  br label %block_.L_40123b

block_.L_40123b:                                  ; preds = %block_401227, %block_.L_401216
  %loadMem_40123b = load %struct.Memory*, %struct.Memory** %MEMORY
  %11309 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11310 = getelementptr inbounds %struct.GPR, %struct.GPR* %11309, i32 0, i32 33
  %11311 = getelementptr inbounds %struct.Reg, %struct.Reg* %11310, i32 0, i32 0
  %PC.i26 = bitcast %union.anon* %11311 to i64*
  %11312 = load i64, i64* %PC.i26
  %11313 = add i64 %11312, 5
  %11314 = load i64, i64* %PC.i26
  %11315 = add i64 %11314, 5
  store i64 %11315, i64* %PC.i26
  %11316 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11313, i64* %11316, align 8
  store %struct.Memory* %loadMem_40123b, %struct.Memory** %MEMORY
  br label %block_.L_401240

block_.L_401240:                                  ; preds = %block_.L_40123b, %block_4011fd
  %loadMem_401240 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11318 = getelementptr inbounds %struct.GPR, %struct.GPR* %11317, i32 0, i32 33
  %11319 = getelementptr inbounds %struct.Reg, %struct.Reg* %11318, i32 0, i32 0
  %PC.i24 = bitcast %union.anon* %11319 to i64*
  %11320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11321 = getelementptr inbounds %struct.GPR, %struct.GPR* %11320, i32 0, i32 11
  %11322 = getelementptr inbounds %struct.Reg, %struct.Reg* %11321, i32 0, i32 0
  %RDI.i25 = bitcast %union.anon* %11322 to i64*
  %11323 = load i64, i64* %PC.i24
  %11324 = add i64 %11323, 10
  store i64 %11324, i64* %PC.i24
  store i64 ptrtoint (%G__0x40137c_type* @G__0x40137c to i64), i64* %RDI.i25, align 8
  store %struct.Memory* %loadMem_401240, %struct.Memory** %MEMORY
  %loadMem_40124a = load %struct.Memory*, %struct.Memory** %MEMORY
  %11325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11326 = getelementptr inbounds %struct.GPR, %struct.GPR* %11325, i32 0, i32 33
  %11327 = getelementptr inbounds %struct.Reg, %struct.Reg* %11326, i32 0, i32 0
  %PC.i22 = bitcast %union.anon* %11327 to i64*
  %11328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11329 = getelementptr inbounds %struct.GPR, %struct.GPR* %11328, i32 0, i32 9
  %11330 = getelementptr inbounds %struct.Reg, %struct.Reg* %11329, i32 0, i32 0
  %RSI.i23 = bitcast %union.anon* %11330 to i64*
  %11331 = load i64, i64* %PC.i22
  %11332 = add i64 %11331, 7
  store i64 %11332, i64* %PC.i22
  %11333 = load i32, i32* bitcast (%G_0x603a94_type* @G_0x603a94 to i32*)
  %11334 = zext i32 %11333 to i64
  store i64 %11334, i64* %RSI.i23, align 8
  store %struct.Memory* %loadMem_40124a, %struct.Memory** %MEMORY
  %loadMem_401251 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11336 = getelementptr inbounds %struct.GPR, %struct.GPR* %11335, i32 0, i32 33
  %11337 = getelementptr inbounds %struct.Reg, %struct.Reg* %11336, i32 0, i32 0
  %PC.i20 = bitcast %union.anon* %11337 to i64*
  %11338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11339 = getelementptr inbounds %struct.GPR, %struct.GPR* %11338, i32 0, i32 1
  %11340 = getelementptr inbounds %struct.Reg, %struct.Reg* %11339, i32 0, i32 0
  %11341 = bitcast %union.anon* %11340 to %struct.anon.2*
  %AL.i21 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %11341, i32 0, i32 0
  %11342 = load i64, i64* %PC.i20
  %11343 = add i64 %11342, 2
  store i64 %11343, i64* %PC.i20
  store i8 0, i8* %AL.i21, align 1
  store %struct.Memory* %loadMem_401251, %struct.Memory** %MEMORY
  %loadMem1_401253 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11345 = getelementptr inbounds %struct.GPR, %struct.GPR* %11344, i32 0, i32 33
  %11346 = getelementptr inbounds %struct.Reg, %struct.Reg* %11345, i32 0, i32 0
  %PC.i19 = bitcast %union.anon* %11346 to i64*
  %11347 = load i64, i64* %PC.i19
  %11348 = add i64 %11347, -3683
  %11349 = load i64, i64* %PC.i19
  %11350 = add i64 %11349, 5
  %11351 = load i64, i64* %PC.i19
  %11352 = add i64 %11351, 5
  store i64 %11352, i64* %PC.i19
  %11353 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %11354 = load i64, i64* %11353, align 8
  %11355 = add i64 %11354, -8
  %11356 = inttoptr i64 %11355 to i64*
  store i64 %11350, i64* %11356
  store i64 %11355, i64* %11353, align 8
  %11357 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11348, i64* %11357, align 8
  store %struct.Memory* %loadMem1_401253, %struct.Memory** %MEMORY
  %loadMem2_401253 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401253 = load i64, i64* %3
  %11358 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %loadMem2_401253)
  store %struct.Memory* %11358, %struct.Memory** %MEMORY
  %loadMem_401258 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11360 = getelementptr inbounds %struct.GPR, %struct.GPR* %11359, i32 0, i32 33
  %11361 = getelementptr inbounds %struct.Reg, %struct.Reg* %11360, i32 0, i32 0
  %PC.i16 = bitcast %union.anon* %11361 to i64*
  %11362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11363 = getelementptr inbounds %struct.GPR, %struct.GPR* %11362, i32 0, i32 11
  %11364 = getelementptr inbounds %struct.Reg, %struct.Reg* %11363, i32 0, i32 0
  %RDI.i = bitcast %union.anon* %11364 to i64*
  %11365 = load i64, i64* %PC.i16
  %11366 = add i64 %11365, 10
  store i64 %11366, i64* %PC.i16
  store i64 ptrtoint (%G__0x40137c_type* @G__0x40137c to i64), i64* %RDI.i, align 8
  store %struct.Memory* %loadMem_401258, %struct.Memory** %MEMORY
  %loadMem_401262 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11368 = getelementptr inbounds %struct.GPR, %struct.GPR* %11367, i32 0, i32 33
  %11369 = getelementptr inbounds %struct.Reg, %struct.Reg* %11368, i32 0, i32 0
  %PC.i15 = bitcast %union.anon* %11369 to i64*
  %11370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11371 = getelementptr inbounds %struct.GPR, %struct.GPR* %11370, i32 0, i32 9
  %11372 = getelementptr inbounds %struct.Reg, %struct.Reg* %11371, i32 0, i32 0
  %RSI.i = bitcast %union.anon* %11372 to i64*
  %11373 = load i64, i64* %PC.i15
  %11374 = add i64 %11373, 7
  store i64 %11374, i64* %PC.i15
  %11375 = load i32, i32* bitcast (%G_0x6191c4_type* @G_0x6191c4 to i32*)
  %11376 = zext i32 %11375 to i64
  store i64 %11376, i64* %RSI.i, align 8
  store %struct.Memory* %loadMem_401262, %struct.Memory** %MEMORY
  %loadMem_401269 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11378 = getelementptr inbounds %struct.GPR, %struct.GPR* %11377, i32 0, i32 33
  %11379 = getelementptr inbounds %struct.Reg, %struct.Reg* %11378, i32 0, i32 0
  %PC.i12 = bitcast %union.anon* %11379 to i64*
  %11380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11381 = getelementptr inbounds %struct.GPR, %struct.GPR* %11380, i32 0, i32 1
  %11382 = getelementptr inbounds %struct.Reg, %struct.Reg* %11381, i32 0, i32 0
  %EAX.i13 = bitcast %union.anon* %11382 to i32*
  %11383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11384 = getelementptr inbounds %struct.GPR, %struct.GPR* %11383, i32 0, i32 15
  %11385 = getelementptr inbounds %struct.Reg, %struct.Reg* %11384, i32 0, i32 0
  %RBP.i14 = bitcast %union.anon* %11385 to i64*
  %11386 = load i64, i64* %RBP.i14
  %11387 = sub i64 %11386, 32
  %11388 = load i32, i32* %EAX.i13
  %11389 = zext i32 %11388 to i64
  %11390 = load i64, i64* %PC.i12
  %11391 = add i64 %11390, 3
  store i64 %11391, i64* %PC.i12
  %11392 = inttoptr i64 %11387 to i32*
  store i32 %11388, i32* %11392
  store %struct.Memory* %loadMem_401269, %struct.Memory** %MEMORY
  %loadMem_40126c = load %struct.Memory*, %struct.Memory** %MEMORY
  %11393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11394 = getelementptr inbounds %struct.GPR, %struct.GPR* %11393, i32 0, i32 33
  %11395 = getelementptr inbounds %struct.Reg, %struct.Reg* %11394, i32 0, i32 0
  %PC.i11 = bitcast %union.anon* %11395 to i64*
  %11396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11397 = getelementptr inbounds %struct.GPR, %struct.GPR* %11396, i32 0, i32 1
  %11398 = getelementptr inbounds %struct.Reg, %struct.Reg* %11397, i32 0, i32 0
  %11399 = bitcast %union.anon* %11398 to %struct.anon.2*
  %AL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %11399, i32 0, i32 0
  %11400 = load i64, i64* %PC.i11
  %11401 = add i64 %11400, 2
  store i64 %11401, i64* %PC.i11
  store i8 0, i8* %AL.i, align 1
  store %struct.Memory* %loadMem_40126c, %struct.Memory** %MEMORY
  %loadMem1_40126e = load %struct.Memory*, %struct.Memory** %MEMORY
  %11402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11403 = getelementptr inbounds %struct.GPR, %struct.GPR* %11402, i32 0, i32 33
  %11404 = getelementptr inbounds %struct.Reg, %struct.Reg* %11403, i32 0, i32 0
  %PC.i10 = bitcast %union.anon* %11404 to i64*
  %11405 = load i64, i64* %PC.i10
  %11406 = add i64 %11405, -3710
  %11407 = load i64, i64* %PC.i10
  %11408 = add i64 %11407, 5
  %11409 = load i64, i64* %PC.i10
  %11410 = add i64 %11409, 5
  store i64 %11410, i64* %PC.i10
  %11411 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %11412 = load i64, i64* %11411, align 8
  %11413 = add i64 %11412, -8
  %11414 = inttoptr i64 %11413 to i64*
  store i64 %11408, i64* %11414
  store i64 %11413, i64* %11411, align 8
  %11415 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11406, i64* %11415, align 8
  store %struct.Memory* %loadMem1_40126e, %struct.Memory** %MEMORY
  %loadMem2_40126e = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40126e = load i64, i64* %3
  %11416 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %loadMem2_40126e)
  store %struct.Memory* %11416, %struct.Memory** %MEMORY
  %loadMem_401273 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11418 = getelementptr inbounds %struct.GPR, %struct.GPR* %11417, i32 0, i32 33
  %11419 = getelementptr inbounds %struct.Reg, %struct.Reg* %11418, i32 0, i32 0
  %PC.i5 = bitcast %union.anon* %11419 to i64*
  %11420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11421 = getelementptr inbounds %struct.GPR, %struct.GPR* %11420, i32 0, i32 1
  %11422 = getelementptr inbounds %struct.Reg, %struct.Reg* %11421, i32 0, i32 0
  %EAX.i = bitcast %union.anon* %11422 to i32*
  %11423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11424 = getelementptr inbounds %struct.GPR, %struct.GPR* %11423, i32 0, i32 15
  %11425 = getelementptr inbounds %struct.Reg, %struct.Reg* %11424, i32 0, i32 0
  %RBP.i6 = bitcast %union.anon* %11425 to i64*
  %11426 = load i64, i64* %RBP.i6
  %11427 = sub i64 %11426, 36
  %11428 = load i32, i32* %EAX.i
  %11429 = zext i32 %11428 to i64
  %11430 = load i64, i64* %PC.i5
  %11431 = add i64 %11430, 3
  store i64 %11431, i64* %PC.i5
  %11432 = inttoptr i64 %11427 to i32*
  store i32 %11428, i32* %11432
  store %struct.Memory* %loadMem_401273, %struct.Memory** %MEMORY
  %loadMem_401276 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11434 = getelementptr inbounds %struct.GPR, %struct.GPR* %11433, i32 0, i32 33
  %11435 = getelementptr inbounds %struct.Reg, %struct.Reg* %11434, i32 0, i32 0
  %PC.i4 = bitcast %union.anon* %11435 to i64*
  %11436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11437 = getelementptr inbounds %struct.GPR, %struct.GPR* %11436, i32 0, i32 13
  %11438 = getelementptr inbounds %struct.Reg, %struct.Reg* %11437, i32 0, i32 0
  %RSP.i = bitcast %union.anon* %11438 to i64*
  %11439 = load i64, i64* %RSP.i
  %11440 = load i64, i64* %PC.i4
  %11441 = add i64 %11440, 4
  store i64 %11441, i64* %PC.i4
  %11442 = add i64 48, %11439
  store i64 %11442, i64* %RSP.i, align 8
  %11443 = icmp ult i64 %11442, %11439
  %11444 = icmp ult i64 %11442, 48
  %11445 = or i1 %11443, %11444
  %11446 = zext i1 %11445 to i8
  %11447 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11446, i8* %11447, align 1
  %11448 = trunc i64 %11442 to i32
  %11449 = and i32 %11448, 255
  %11450 = call i32 @llvm.ctpop.i32(i32 %11449)
  %11451 = trunc i32 %11450 to i8
  %11452 = and i8 %11451, 1
  %11453 = xor i8 %11452, 1
  %11454 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11453, i8* %11454, align 1
  %11455 = xor i64 48, %11439
  %11456 = xor i64 %11455, %11442
  %11457 = lshr i64 %11456, 4
  %11458 = trunc i64 %11457 to i8
  %11459 = and i8 %11458, 1
  %11460 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11459, i8* %11460, align 1
  %11461 = icmp eq i64 %11442, 0
  %11462 = zext i1 %11461 to i8
  %11463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11462, i8* %11463, align 1
  %11464 = lshr i64 %11442, 63
  %11465 = trunc i64 %11464 to i8
  %11466 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11465, i8* %11466, align 1
  %11467 = lshr i64 %11439, 63
  %11468 = xor i64 %11464, %11467
  %11469 = add i64 %11468, %11464
  %11470 = icmp eq i64 %11469, 2
  %11471 = zext i1 %11470 to i8
  %11472 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11471, i8* %11472, align 1
  store %struct.Memory* %loadMem_401276, %struct.Memory** %MEMORY
  %loadMem_40127a = load %struct.Memory*, %struct.Memory** %MEMORY
  %11473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11474 = getelementptr inbounds %struct.GPR, %struct.GPR* %11473, i32 0, i32 33
  %11475 = getelementptr inbounds %struct.Reg, %struct.Reg* %11474, i32 0, i32 0
  %PC.i2 = bitcast %union.anon* %11475 to i64*
  %11476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11477 = getelementptr inbounds %struct.GPR, %struct.GPR* %11476, i32 0, i32 15
  %11478 = getelementptr inbounds %struct.Reg, %struct.Reg* %11477, i32 0, i32 0
  %RBP.i3 = bitcast %union.anon* %11478 to i64*
  %11479 = load i64, i64* %PC.i2
  %11480 = add i64 %11479, 1
  store i64 %11480, i64* %PC.i2
  %11481 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %11482 = load i64, i64* %11481, align 8
  %11483 = add i64 %11482, 8
  %11484 = inttoptr i64 %11482 to i64*
  %11485 = load i64, i64* %11484
  store i64 %11485, i64* %RBP.i3, align 8
  store i64 %11483, i64* %11481, align 8
  store %struct.Memory* %loadMem_40127a, %struct.Memory** %MEMORY
  %loadMem_40127b = load %struct.Memory*, %struct.Memory** %MEMORY
  %11486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11487 = getelementptr inbounds %struct.GPR, %struct.GPR* %11486, i32 0, i32 33
  %11488 = getelementptr inbounds %struct.Reg, %struct.Reg* %11487, i32 0, i32 0
  %PC.i1 = bitcast %union.anon* %11488 to i64*
  %11489 = load i64, i64* %PC.i1
  %11490 = add i64 %11489, 1
  store i64 %11490, i64* %PC.i1
  %11491 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11492 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %11493 = load i64, i64* %11492, align 8
  %11494 = inttoptr i64 %11493 to i64*
  %11495 = load i64, i64* %11494
  store i64 %11495, i64* %11491, align 8
  %11496 = add i64 %11493, 8
  store i64 %11496, i64* %11492, align 8
  store %struct.Memory* %loadMem_40127b, %struct.Memory** %MEMORY
  ret %struct.Memory* %loadMem_40127b
}

define %struct.Memory* @routine_pushq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsp___rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RBP, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subq__0x30___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = sub i64 %9, 48
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %9, 48
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14, i8* %15, align 1
  %16 = trunc i64 %12 to i32
  %17 = and i32 %16, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 48, %9
  %24 = xor i64 %23, %12
  %25 = lshr i64 %24, 4
  %26 = trunc i64 %25 to i8
  %27 = and i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27, i8* %28, align 1
  %29 = icmp eq i64 %12, 0
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30, i8* %31, align 1
  %32 = lshr i64 %12, 63
  %33 = trunc i64 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33, i8* %34, align 1
  %35 = lshr i64 %9, 63
  %36 = xor i64 %32, %35
  %37 = add i64 %36, %35
  %38 = icmp eq i64 %37, 2
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %39, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 16
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1ff__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 16
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 511
  %16 = icmp ult i32 %14, 511
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 511
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_400879(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x10__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__0x60df50___rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = mul i64 %9, 4
  %11 = add i64 %10, ptrtoint (%G_0x60df50___rax_4__type* @G_0x60df50___rax_4_ to i64)
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 11
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  store i32 1, i32* %14
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x10__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40084f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__MINUS0x4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 4
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 1, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x5__MINUS0x4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 4
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 5
  %16 = icmp ult i32 %14, 5
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 5
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_400901(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__MINUS0x8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 1, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x5__MINUS0x8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 5
  %16 = icmp ult i32 %14, 5
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 5
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_4008ee(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__MINUS0xc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 1, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x5__MINUS0xc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 5
  %16 = icmp ult i32 %14, 5
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 5
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_4008db(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x4__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xc__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__0x3___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = and i64 %9, 4294967295
  %13 = shl i64 %12, 2
  %14 = trunc i64 %13 to i32
  %15 = icmp slt i32 %14, 0
  %16 = shl i32 %14, 1
  %17 = zext i32 %16 to i64
  store i64 %17, i64* %RDX, align 8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %19 = zext i1 %15 to i8
  store i8 %19, i8* %18, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %21 = and i32 %16, 254
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  store i8 %25, i8* %20, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %28 = icmp eq i32 %16, 0
  %29 = zext i1 %28 to i8
  store i8 %29, i8* %27, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %31 = lshr i32 %16, 31
  %32 = trunc i32 %31 to i8
  store i8 %32, i8* %30, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__edx___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %EDX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = add i32 %13, %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RCX, align 8
  %20 = icmp ult i32 %18, %17
  %21 = icmp ult i32 %18, %13
  %22 = or i1 %20, %21
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %18, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i64 %14, %12
  %32 = trunc i64 %31 to i32
  %33 = xor i32 %32, %18
  %34 = lshr i32 %33, 4
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %36, i8* %37, align 1
  %38 = icmp eq i32 %18, 0
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %18, 31
  %42 = trunc i32 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %42, i8* %43, align 1
  %44 = lshr i32 %17, 31
  %45 = lshr i32 %13, 31
  %46 = xor i32 %41, %44
  %47 = xor i32 %41, %45
  %48 = add i32 %46, %47
  %49 = icmp eq i32 %48, 2
  %50 = zext i1 %49 to i8
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %50, i8* %51, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__0x3___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = and i64 %9, 4294967295
  %13 = shl i64 %12, 2
  %14 = trunc i64 %13 to i32
  %15 = icmp slt i32 %14, 0
  %16 = shl i32 %14, 1
  %17 = zext i32 %16 to i64
  store i64 %17, i64* %RCX, align 8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %19 = zext i1 %15 to i8
  store i8 %19, i8* %18, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %21 = and i32 %16, 254
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  store i8 %25, i8* %20, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %28 = icmp eq i32 %16, 0
  %29 = zext i1 %28 to i8
  store i8 %29, i8* %27, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %31 = lshr i32 %16, 31
  %32 = trunc i32 %31 to i8
  store i8 %32, i8* %30, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__ecx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %ECX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = add i32 %13, %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RAX, align 8
  %20 = icmp ult i32 %18, %17
  %21 = icmp ult i32 %18, %13
  %22 = or i1 %20, %21
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %18, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i64 %14, %12
  %32 = trunc i64 %31 to i32
  %33 = xor i32 %32, %18
  %34 = lshr i32 %33, 4
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %36, i8* %37, align 1
  %38 = icmp eq i32 %18, 0
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %18, 31
  %42 = trunc i32 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %42, i8* %43, align 1
  %44 = lshr i32 %17, 31
  %45 = lshr i32 %13, 31
  %46 = xor i32 %41, %44
  %47 = xor i32 %41, %45
  %48 = add i32 %46, %47
  %49 = icmp eq i32 %48, 2
  %50 = zext i1 %49 to i8
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %50, i8* %51, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__eax___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x60df50___rsi_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = mul i64 %9, 4
  %11 = add i64 %10, ptrtoint (%G_0x60df50___rsi_4__type* @G_0x60df50___rsi_4_ to i64)
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 11
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  store i32 0, i32* %14
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xc__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4008a2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4008e0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400891(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4008f3(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400880(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 4
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0xc__MINUS0x4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 4
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 12
  %16 = icmp ult i32 %14, 12
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 12
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_400967(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_400954(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x603aa0___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x603aa0_type* @G__0x603aa0 to i64), i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x4__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0xb___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 10
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RCX, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rcx___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RAX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x10__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0____rax__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 4
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  store i32 0, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400919(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400959(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400908(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x3__MINUS0x4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 4
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 3
  %16 = icmp ult i32 %14, 3
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 3
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_4009ef(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1__MINUS0x8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 1
  %16 = icmp ult i32 %14, 1
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 1
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_4009dc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0xc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0xc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_4009c9(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__0x603aa0___rsi_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = mul i64 %9, 4
  %11 = add i64 %10, ptrtoint (%G_0x603aa0___rsi_4__type* @G_0x603aa0___rsi_4_ to i64)
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 11
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  store i32 1, i32* %14
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400990(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4009ce(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40097f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4009e1(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40096e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x6191f0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 0, i32* bitcast (%G_0x6191f0_type* @G_0x6191f0 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0xb__0x610250(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 11, i32* bitcast (%G_0x610250_type* @G_0x610250 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1__MINUS0x4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 4
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 1
  %16 = icmp ult i32 %14, 1
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 1
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_400a8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_400a7a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x3__MINUS0xc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 3
  %16 = icmp ult i32 %14, 3
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 3
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_400a67(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__0x6042a0___rsi_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = mul i64 %9, 4
  %11 = add i64 %10, ptrtoint (%G_0x6042a0___rsi_4__type* @G_0x6042a0___rsi_4_ to i64)
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 11
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  store i32 1, i32* %14
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400a2e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400a6c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400a1d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400a7f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400a0c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x6191f4(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 0, i32* bitcast (%G_0x6191f4_type* @G_0x6191f4 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0xc1__0x610254(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 193, i32* bitcast (%G_0x610254_type* @G_0x610254 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 4
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_400b2b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x3__MINUS0x8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 3
  %16 = icmp ult i32 %14, 3
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 3
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_400b18(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1__MINUS0xc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 1
  %16 = icmp ult i32 %14, 1
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 1
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_400b05(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__0x604aa0___rsi_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = mul i64 %9, 4
  %11 = add i64 %10, ptrtoint (%G_0x604aa0___rsi_4__type* @G_0x604aa0___rsi_4_ to i64)
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 11
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  store i32 1, i32* %14
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400acc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400b0a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400abb(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400b1d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400aaa(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x6191f8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 0, i32* bitcast (%G_0x6191f8_type* @G_0x6191f8 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x58__0x610258(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 88, i32* bitcast (%G_0x610258_type* @G_0x610258 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_400bc9(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_400bb6(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_400ba3(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__0x6052a0___rsi_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = mul i64 %9, 4
  %11 = add i64 %10, ptrtoint (%G_0x6052a0___rsi_4__type* @G_0x6052a0___rsi_4_ to i64)
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 11
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  store i32 1, i32* %14
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400b6a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400ba8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400b59(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400bbb(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400b48(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x6191fc(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 0, i32* bitcast (%G_0x6191fc_type* @G_0x6191fc to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x19__0x61025c(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 25, i32* bitcast (%G_0x61025c_type* @G_0x61025c to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_400c67(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_400c54(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_400c41(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__0x605aa0___rsi_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = mul i64 %9, 4
  %11 = add i64 %10, ptrtoint (%G_0x605aa0___rsi_4__type* @G_0x605aa0___rsi_4_ to i64)
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 11
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  store i32 1, i32* %14
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400c08(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400c46(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400bf7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400c59(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400be6(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x619200(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 0, i32* bitcast (%G_0x619200_type* @G_0x619200 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x43__0x610260(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 67, i32* bitcast (%G_0x610260_type* @G_0x610260 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_400d05(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_400cf2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_400cdf(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__0x6062a0___rsi_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = mul i64 %9, 4
  %11 = add i64 %10, ptrtoint (%G_0x6062a0___rsi_4__type* @G_0x6062a0___rsi_4_ to i64)
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 11
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  store i32 1, i32* %14
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400ca6(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400ce4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400c95(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400cf7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400c84(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x619204(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 0, i32* bitcast (%G_0x619204_type* @G_0x619204 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0xc8__0x610264(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 200, i32* bitcast (%G_0x610264_type* @G_0x610264 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x2__MINUS0x4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 4
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 2
  %16 = icmp ult i32 %14, 2
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 2
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_400da3(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_400d90(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_400d7d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__0x606aa0___rsi_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = mul i64 %9, 4
  %11 = add i64 %10, ptrtoint (%G_0x606aa0___rsi_4__type* @G_0x606aa0___rsi_4_ to i64)
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 11
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  store i32 1, i32* %14
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400d44(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400d82(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400d33(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400d95(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400d22(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__0x619208(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 1, i32* bitcast (%G_0x619208_type* @G_0x619208 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x2__0x610268(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 2, i32* bitcast (%G_0x610268_type* @G_0x610268 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_400e41(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x2__MINUS0x8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 2
  %16 = icmp ult i32 %14, 2
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 2
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_400e2e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_400e1b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__0x6072a0___rsi_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = mul i64 %9, 4
  %11 = add i64 %10, ptrtoint (%G_0x6072a0___rsi_4__type* @G_0x6072a0___rsi_4_ to i64)
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 11
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  store i32 1, i32* %14
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400de2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400e20(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400dd1(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400e33(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400dc0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__0x61920c(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 1, i32* bitcast (%G_0x61920c_type* @G_0x61920c to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x10__0x61026c(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 16, i32* bitcast (%G_0x61026c_type* @G_0x61026c to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_400edf(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_400ecc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x2__MINUS0xc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 2
  %16 = icmp ult i32 %14, 2
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 2
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_400eb9(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__0x607aa0___rsi_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = mul i64 %9, 4
  %11 = add i64 %10, ptrtoint (%G_0x607aa0___rsi_4__type* @G_0x607aa0___rsi_4_ to i64)
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 11
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  store i32 1, i32* %14
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400e80(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400ebe(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400e6f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400ed1(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400e5e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__0x619210(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 1, i32* bitcast (%G_0x619210_type* @G_0x619210 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x80__0x610270(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 128, i32* bitcast (%G_0x610270_type* @G_0x610270 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_400f7d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_400f6a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_400f57(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__0x6082a0___rsi_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = mul i64 %9, 4
  %11 = add i64 %10, ptrtoint (%G_0x6082a0___rsi_4__type* @G_0x6082a0___rsi_4_ to i64)
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 11
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  store i32 1, i32* %14
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400f1e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400f5c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400f0d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400f6f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400efc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x2__0x619214(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 2, i32* bitcast (%G_0x619214_type* @G_0x619214 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x9__0x610274(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 9, i32* bitcast (%G_0x610274_type* @G_0x610274 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_40101b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_401008(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_400ff5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__0x608aa0___rsi_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = mul i64 %9, 4
  %11 = add i64 %10, ptrtoint (%G_0x608aa0___rsi_4__type* @G_0x608aa0___rsi_4_ to i64)
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 11
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  store i32 1, i32* %14
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400fbc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400ffa(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400fab(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40100d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400f9a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x2__0x619218(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 2, i32* bitcast (%G_0x619218_type* @G_0x619218 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x41__0x610278(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 65, i32* bitcast (%G_0x610278_type* @G_0x610278 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_4010b9(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_4010a6(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_401093(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__0x6092a0___rsi_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = mul i64 %9, 4
  %11 = add i64 %10, ptrtoint (%G_0x6092a0___rsi_4__type* @G_0x6092a0___rsi_4_ to i64)
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 11
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  store i32 1, i32* %14
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40105a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_401098(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_401049(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4010ab(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_401038(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x2__0x61921c(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 2, i32* bitcast (%G_0x61921c_type* @G_0x61921c to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x48__0x61027c(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 72, i32* bitcast (%G_0x61027c_type* @G_0x61027c to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_401157(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_401144(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_401131(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__0x609aa0___rsi_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = mul i64 %9, 4
  %11 = add i64 %10, ptrtoint (%G_0x609aa0___rsi_4__type* @G_0x609aa0___rsi_4_ to i64)
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 11
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  store i32 1, i32* %14
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4010f8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_401136(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4010e7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_401149(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4010d6(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl__edi___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i32, i32* %EDI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = xor i64 %14, %12
  %18 = trunc i64 %17 to i32
  %19 = and i64 %17, 4294967295
  store i64 %19, i64* %RDI, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20, align 1
  %21 = and i32 %18, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = icmp eq i32 %18, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %18, 31
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x3__0x619220(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 3, i32* bitcast (%G_0x619220_type* @G_0x619220 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x49__0x610280(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 73, i32* bitcast (%G_0x610280_type* @G_0x610280 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0xd__0x6191e0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 13, i32* bitcast (%G_0x6191e0_type* @G_0x6191e0 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x3__0x6191e4(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 3, i32* bitcast (%G_0x6191e4_type* @G_0x6191e4 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__0x6191e8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 1, i32* bitcast (%G_0x6191e8_type* @G_0x6191e8 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__0x6191ec(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 1, i32* bitcast (%G_0x6191ec_type* @G_0x6191ec to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x49__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 16
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 73, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x6191c4(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 0, i32* bitcast (%G_0x6191c4_type* @G_0x6191c4 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x10__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.Fit(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13, align 1
  %14 = and i32 %9, 255
  %15 = call i32 @llvm.ctpop.i32(i32 %14)
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20, align 1
  %21 = icmp eq i32 %9, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = lshr i32 %9, 31
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %9, 31
  %28 = xor i32 %24, %27
  %29 = add i32 %28, %27
  %30 = icmp eq i32 %29, 2
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4011d4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.Place(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x603a94(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x603a94_type* @G_0x603a94 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4011e8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x401344___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x401344_type* @G__0x401344 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__0x0___al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  store i8 0, i8* %AL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.printf_plt(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x14__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x603a94___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x603a94_type* @G_0x603a94 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.Trial(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_401216(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x401356___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x401356_type* @G__0x401356 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_401240(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x7d5__0x6191c4(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  %8 = load i32, i32* bitcast (%G_0x6191c4_type* @G_0x6191c4 to i32*)
  %9 = sub i32 %8, 2005
  %10 = icmp ult i32 %8, 2005
  %11 = zext i1 %10 to i8
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11, i8* %12, align 1
  %13 = and i32 %9, 255
  %14 = call i32 @llvm.ctpop.i32(i32 %13)
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i32 %8, 2005
  %20 = xor i32 %19, %9
  %21 = lshr i32 %20, 4
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23, i8* %24, align 1
  %25 = icmp eq i32 %9, 0
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %26, i8* %27, align 1
  %28 = lshr i32 %9, 31
  %29 = trunc i32 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %8, 31
  %32 = xor i32 %28, %31
  %33 = add i32 %32, %31
  %34 = icmp eq i32 %33, 2
  %35 = zext i1 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %35, i8* %36, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_40123b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x401369___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x401369_type* @G__0x401369 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x1c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x40137c___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x40137c_type* @G__0x40137c to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x603a94___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x603a94_type* @G_0x603a94 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x6191c4___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x6191c4_type* @G_0x6191c4 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x20__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x24__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x30___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = add i64 48, %9
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 48
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 48, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_popq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 8
  %14 = inttoptr i64 %12 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %RBP, align 8
  store i64 %13, i64* %11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_retq(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11
  store i64 %12, i64* %8, align 8
  %13 = add i64 %10, 8
  store i64 %13, i64* %9, align 8
  ret %struct.Memory* %2
}

attributes #0 = { argmemonly nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { alwaysinline }
