[Info]: Check for multiple matches
Multiple matches exist for [0x564d6507b978]:   %123 = tail call fastcc %struct.Memory* @ext_601070_free(%struct.State* nonnull %0, %struct.Memory* %MEMORY.1)
[0x564d65157990]:   %186 = tail call %struct.Memory.32* @__remill_function_call(%struct.State.1* nonnull %0, i64 ptrtoint (i64 (i64)* @free to i64), %struct.Memory.32* %MEMORY.0)
[0x564d65162d60]:   %call2_400925 = tail call %struct.Memory.32* @sub_400870.findDuplicate(%struct.State.1* nonnull %0, i64 %134, %struct.Memory.32* %MEMORY.0)
[0x564d6516c100]:   %call2_4008ff = tail call %struct.Memory.32* @sub_4007f0.createRandomArray(%struct.State.1* nonnull %0, i64 %84, %struct.Memory.32* %MEMORY.0)
Multiple matches exist for [0x564d6507cd78]:   %136 = tail call fastcc %struct.Memory* @ext_601058_printf(%struct.State* nonnull %0, %struct.Memory* %123)
[0x564d65157990]:   %186 = tail call %struct.Memory.32* @__remill_function_call(%struct.State.1* nonnull %0, i64 ptrtoint (i64 (i64)* @free to i64), %struct.Memory.32* %MEMORY.0)
[0x564d65158fb0]:   %199 = tail call %struct.Memory.32* @__remill_function_call(%struct.State.1* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory.32* %186)
[0x564d65162d60]:   %call2_400925 = tail call %struct.Memory.32* @sub_400870.findDuplicate(%struct.State.1* nonnull %0, i64 %134, %struct.Memory.32* %MEMORY.0)
[0x564d6516c100]:   %call2_4008ff = tail call %struct.Memory.32* @sub_4007f0.createRandomArray(%struct.State.1* nonnull %0, i64 %84, %struct.Memory.32* %MEMORY.0)
[0x564d6516f300]:   %call2_4008e4 = tail call %struct.Memory.32* @sub_400650.srand(%struct.State.1* %0, i64 %43, %struct.Memory.32* %2)
Iso Match NOT Found
Reading LLVM: ../binary/test.mcsema.opt.ll
Reading LLVM: mcsema/test.proposed.opt.ll
Extracting function [main] from ../binary/test.mcsema.opt.ll
Extracting function [main] from mcsema/test.proposed.opt.ll
Matcher Done...
5.15user 9.08system 0:14.42elapsed 98%CPU (0avgtext+0avgdata 13176maxresident)k
0inputs+1896outputs (0major+1110minor)pagefaults 0swaps
