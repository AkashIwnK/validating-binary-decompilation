[Info]: Check for multiple matches
Multiple matches exist for [0x55f252441540]:   %66 = lshr i32 %55, 27
[0x55f2525d78e0]:   %64 = lshr i32 %56, 27
[0x55f2525d8670]:   %67 = lshr i32 %56, 27
Multiple matches exist for [0x55f2524415c0]:   %67 = and i32 %66, 1
[0x55f2525d7780]:   %65 = and i32 %64, 1
[0x55f2525da780]:   %68 = and i32 %67, 1
Multiple matches exist for [0x55f2523f6568]:   %132 = tail call fastcc %struct.Memory* @ext_400610_fputs(%struct.State* nonnull %0, %struct.Memory* %78)
[0x55f2525bdfd0]:   %259 = tail call %struct.Memory.31* @__remill_function_call(%struct.State.0* nonnull %0, i64 ptrtoint (i64 (i64)* @free to i64), %struct.Memory.31* %242)
[0x55f2525d2870]:   %242 = tail call %struct.Memory.31* @__remill_function_call(%struct.State.0* nonnull %0, i64 ptrtoint (i64 (i64, i64)* @fputs to i64), %struct.Memory.31* %79)
[0x55f2525d5a40]:   %call2_400fb1 = tail call %struct.Memory.31* @sub_400ff0.print_element(%struct.State.0* nonnull %0, i64 %195, %struct.Memory.31* %79)
[0x55f2525d6f10]:   %79 = tail call %struct.Memory.31* @__remill_function_call(%struct.State.0* %0, i64 ptrtoint (i64 (i64)* @malloc to i64), %struct.Memory.31* %2)
Multiple matches exist for [0x55f252438e08]:   %149 = tail call fastcc %struct.Memory* @ext_4005f0_free(%struct.State* nonnull %0, %struct.Memory* %132)
[0x55f2525bdfd0]:   %259 = tail call %struct.Memory.31* @__remill_function_call(%struct.State.0* nonnull %0, i64 ptrtoint (i64 (i64)* @free to i64), %struct.Memory.31* %242)
[0x55f2525d2870]:   %242 = tail call %struct.Memory.31* @__remill_function_call(%struct.State.0* nonnull %0, i64 ptrtoint (i64 (i64, i64)* @fputs to i64), %struct.Memory.31* %79)
[0x55f2525d5a40]:   %call2_400fb1 = tail call %struct.Memory.31* @sub_400ff0.print_element(%struct.State.0* nonnull %0, i64 %195, %struct.Memory.31* %79)
[0x55f2525d6f10]:   %79 = tail call %struct.Memory.31* @__remill_function_call(%struct.State.0* %0, i64 ptrtoint (i64 (i64)* @malloc to i64), %struct.Memory.31* %2)
Iso Match NOT Found
Reading LLVM: ../binary/test.mcsema.opt.ll
Reading LLVM: mcsema/test.proposed.opt.ll
Extracting function [print_array] from ../binary/test.mcsema.opt.ll
Extracting function [print_array] from mcsema/test.proposed.opt.ll
Matcher Done...
