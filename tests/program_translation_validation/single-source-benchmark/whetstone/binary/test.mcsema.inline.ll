; ModuleID = 'binary/test.mcsema.calls_renamed.ll'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"

%union.anon = type { i64 }
%seg_400648__init_type = type <{ [23 x i8] }>
%seg_400660__plt_type = type <{ [192 x i8] }>
%seg_400720__text_type = type <{ [4482 x i8] }>
%seg_4018a4__fini_type = type <{ [9 x i8] }>
%seg_4018b0__rodata_type = type <{ [72 x i8], [3 x i8], [28 x i8], [44 x i8] }>
%seg_401944__eh_frame_hdr_type = type <{ [92 x i8] }>
%seg_4019a0__eh_frame_type = type <{ [368 x i8] }>
%seg_601df0__init_array_type = type <{ i64, i64 }>
%seg_601ff0__got_type = type <{ i64, i64 }>
%seg_602000__got_plt_type = type <{ [24 x i8], i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }>
%seg_602070__data_type = type <{ [16 x i8] }>
%seg_602080__bss_type = type <{ [8 x i8], [8 x i8] }>
%J_type = type <{ [8 x i8] }>
%T_type = type <{ [8 x i8] }>
%T1_type = type <{ [8 x i8] }>
%L_type = type <{ [4 x i8] }>
%K_type = type <{ [4 x i8] }>
%T2_type = type <{ [16 x i8] }>
%E1_type = type <{ [40 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque
%struct.anon.2 = type { i8, i8 }
%"class.std::bitset" = type { %struct.uint64v4_t }
%struct.uint64v4_t = type { [4 x i64] }

@switch.table = private unnamed_addr constant [4 x i32] [i32 2048, i32 3072, i32 0, i32 1024]
@DR0 = external global i64, align 8
@DR1 = external global i64, align 8
@DR2 = external global i64, align 8
@DR3 = external global i64, align 8
@DR4 = external global i64, align 8
@DR5 = external global i64, align 8
@DR6 = external global i64, align 8
@DR7 = external global i64, align 8
@gCR0 = external global %union.anon, align 1
@gCR1 = external global %union.anon, align 1
@gCR2 = external global %union.anon, align 1
@gCR3 = external global %union.anon, align 1
@gCR4 = external global %union.anon, align 1
@gCR8 = external global %union.anon, align 1
@stderr = external global i64, align 128
@seg_400648__init = internal constant %seg_400648__init_type <{ [23 x i8] c"H\83\EC\08H\8B\05\A5\19 \00H\85\C0t\02\FF\D0H\83\C4\08\C3" }>
@seg_400660__plt = internal constant %seg_400660__plt_type <{ [192 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\FF%\A2\19 \00\00\00\00\00\00\00\00\00\00\00\FF%\9A\19 \00\00\00\00\00\00\00\00\00\00\00\FF%\92\19 \00\00\00\00\00\00\00\00\00\00\00\FF%\8A\19 \00\00\00\00\00\00\00\00\00\00\00\FF%\82\19 \00\00\00\00\00\00\00\00\00\00\00\FF%z\19 \00\00\00\00\00\00\00\00\00\00\00\FF%r\19 \00\00\00\00\00\00\00\00\00\00\00\FF%j\19 \00\00\00\00\00\00\00\00\00\00\00\FF%b\19 \00\00\00\00\00\00\00\00\00\00\00\FF%Z\19 \00\00\00\00\00\00\00\00\00\00\00\FF%R\19 \00\00\00\00\00\00\00\00\00\00\00" }>
@seg_400720__text = internal constant %seg_400720__text_type <{ [4482 x i8] c"1\EDI\89\D1^H\89\E2H\83\E4\F0PTI\C7\C0\A0\18@\00H\C7\C10\18@\00H\C7\C7\10\08@\00\FF\15\A6\18 \00\F4\0F\1FD\00\00\F3\C3f.\0F\1F\84\00\00\00\00\00\0F\1F@\00U\B8\80 `\00H=\80 `\00H\89\E5t\17\B8\00\00\00\00H\85\C0t\0D]\BF\80 `\00\FF\E0\0F\1FD\00\00]\C3f\0F\1FD\00\00\BE\80 `\00UH\81\EE\80 `\00H\89\E5H\C1\FE\03H\89\F0H\C1\E8?H\01\C6H\D1\FEt\15\B8\00\00\00\00H\85\C0t\0B]\BF\80 `\00\FF\E0\0F\1F\00]\C3f\0F\1FD\00\00\80=\B1\18 \00\00u\17UH\89\E5\E8~\FF\FF\FF\C6\05\9F\18 \00\01]\C3\0F\1FD\00\00\F3\C3\0F\1F@\00f.\0F\1F\84\00\00\00\00\00UH\89\E5]\EB\89f\0F\1F\84\00\00\00\00\00UH\89\E5H\81\EC@\01\00\00\C7E\FC\00\00\00\00\89}\F8H\89u\F0H\C7\85H\FF\FF\FF\A0\86\01\00\C7\850\FF\FF\FF\00\00\00\00\C7\85T\FF\FF\FF\01\00\00\00\8B\85T\FF\FF\FF;E\F8\0F\8D\DA\00\00\00H\BE\F8\18@\00\00\00\00\00\B8\02\00\00\00\89\C2H\8BM\F0Hc\BDT\FF\FF\FFH\8B<\F9\E8\F4\FD\FF\FF\83\F8\00\0F\84\1B\00\00\00H\8BE\F0Hc\8DT\FF\FF\FFH\8B\04\C8\0F\BE\10\83\FAc\0F\85\0F\00\00\00\C7\850\FF\FF\FF\01\00\00\00\E9n\00\00\00H\8BE\F0Hc\8DT\FF\FF\FFH\8B<\C8\E8-\FE\FF\FFH\83\F8\00\0F\8E \00\00\00H\8BE\F0Hc\8DT\FF\FF\FFH\8B<\C8\E8\0F\FE\FF\FFH\89\85H\FF\FF\FF\E9+\00\00\00H\BE\FB\18@\00\00\00\00\00H\8B<%\80 `\00\B0\00\E8\CA\FD\FF\FF\C7E\FC\01\00\00\00\89\85,\FF\FF\FF\E9x\0C\00\00\E9\00\00\00\00\8B\85T\FF\FF\FF\83\C0\01\89\85T\FF\FF\FF\E9\17\FF\FF\FF\E9\00\00\00\001\C0\89\C7\E8\A1\FD\FF\FF\F2\0F\10\05q\0F\00\00\F2\0F\10\0Dq\0F\00\00\F2\0F\10\15q\0F\00\00H\89\85@\FF\FF\FF\F2\0F\11\14%\98 `\00\F2\0F\11\0C%\A0 `\00\F2\0F\11\04%\B0 `\00H\8B\85H\FF\FF\FFH\89\85X\FF\FF\FF\C7\85T\FF\FF\FF\01\00\00\00\C7\85P\FF\FF\FF\01\00\00\00\F2\0F\10\05-\0F\00\00\F2\0F\10\0D-\0F\00\00H\C7E\E0\00\00\00\00Hk\85X\FF\FF\FF\0CH\89E\D8Hk\85X\FF\FF\FF\0EH\89E\D0Hi\85X\FF\FF\FFY\01\00\00H\89E\C8Hi\85X\FF\FF\FF\D2\00\00\00H\89E\C0H\8B\85X\FF\FF\FFH\C1\E0\05H\89E\B8Hi\85X\FF\FF\FF\83\03\00\00H\89E\B0Hi\85X\FF\FF\FFh\02\00\00H\89E\A8H\C7E\A0\00\00\00\00Hk\85X\FF\FF\FF]H\89E\98\F2\0F\11M\90\F2\0F\11E\88\F2\0F\11E\80\F2\0F\11\85x\FF\FF\FFH\C7E\E8\01\00\00\00H\8BE\E8H;E\E0\0F\8F\BF\00\00\00H\B8\00\00\00\00\00\00\00\80\F2\0F\10E\90\F2\0FXE\88\F2\0FXE\80\F2\0F\5C\85x\FF\FF\FF\F2\0FY\04%\98 `\00\F2\0F\11E\90\F2\0F\10E\90\F2\0FXE\88\F2\0F\5CE\80\F2\0FX\85x\FF\FF\FF\F2\0FY\04%\98 `\00\F2\0F\11E\88\F2\0F\10E\90\F2\0F\5CE\88\F2\0FXE\80\F2\0FX\85x\FF\FF\FF\F2\0FY\04%\98 `\00\F2\0F\11E\80\F2\0F\10E\90fH\0F~\C1H1\C1fH\0Fn\C1\F2\0FXE\88\F2\0FXE\80\F2\0FX\85x\FF\FF\FF\F2\0FY\04%\98 `\00\F2\0F\11\85x\FF\FF\FFH\8BE\E8H\83\C0\01H\89E\E8\E93\FF\FF\FF\8B\85P\FF\FF\FF;\85T\FF\FF\FF\0F\85(\00\00\00H\8B}\E0H\8Bu\E0H\8BU\E0\F2\0F\10E\90\F2\0F\10M\88\F2\0F\10U\80\F2\0F\10\9Dx\FF\FF\FF\E8P\0A\00\00\F2\0F\10\05x\0D\00\00\F2\0F\10\0Dx\0D\00\00\F2\0F\11\0C%\C8 `\00\F2\0F\11\04%\D0 `\00\F2\0F\11\04%\D8 `\00\F2\0F\11\04%\E0 `\00H\C7E\E8\01\00\00\00H\8BE\E8H;E\D8\0F\8F\00\01\00\00H\B8\00\00\00\00\00\00\00\80\F2\0F\10\04%\C8 `\00\F2\0FX\04%\D0 `\00\F2\0FX\04%\D8 `\00\F2\0F\5C\04%\E0 `\00\F2\0FY\04%\98 `\00\F2\0F\11\04%\C8 `\00\F2\0F\10\04%\C8 `\00\F2\0FX\04%\D0 `\00\F2\0F\5C\04%\D8 `\00\F2\0FX\04%\E0 `\00\F2\0FY\04%\98 `\00\F2\0F\11\04%\D0 `\00\F2\0F\10\04%\C8 `\00\F2\0F\5C\04%\D0 `\00\F2\0FX\04%\D8 `\00\F2\0FX\04%\E0 `\00\F2\0FY\04%\98 `\00\F2\0F\11\04%\D8 `\00\F2\0F\10\04%\C8 `\00fH\0F~\C1H1\C1fH\0Fn\C1\F2\0FX\04%\D0 `\00\F2\0FX\04%\D8 `\00\F2\0FX\04%\E0 `\00\F2\0FY\04%\98 `\00\F2\0F\11\04%\E0 `\00H\8BE\E8H\83\C0\01H\89E\E8\E9\F2\FE\FF\FF\8B\85P\FF\FF\FF;\85T\FF\FF\FF\0F\855\00\00\00H\8B}\D8H\8Bu\D0H\8BU\D8\F2\0F\10\04%\C8 `\00\F2\0F\10\0C%\D0 `\00\F2\0F\10\14%\D8 `\00\F2\0F\10\1C%\E0 `\00\E8\BF\08\00\00H\C7E\E8\01\00\00\00H\8BE\E8H;E\D0\0F\8F \00\00\00H\BF\C0 `\00\00\00\00\00\E8\0A\09\00\00H\8BE\E8H\83\C0\01H\89E\E8\E9\D2\FF\FF\FF\8B\85P\FF\FF\FF;\85T\FF\FF\FF\0F\855\00\00\00H\8B}\D0H\8Bu\D8H\8BU\D8\F2\0F\10\04%\C8 `\00\F2\0F\10\0C%\D0 `\00\F2\0F\10\14%\D8 `\00\F2\0F\10\1C%\E0 `\00\E8B\08\00\00\C7\04%\90 `\00\01\00\00\00H\C7E\E8\01\00\00\00H\8BE\E8H;E\C8\0F\8F\91\00\00\00\83<%\90 `\00\01\0F\85\10\00\00\00\C7\04%\90 `\00\02\00\00\00\E9\0B\00\00\00\C7\04%\90 `\00\03\00\00\00\83<%\90 `\00\02\0F\8E\10\00\00\00\C7\04%\90 `\00\00\00\00\00\E9\0B\00\00\00\C7\04%\90 `\00\01\00\00\00\83<%\90 `\00\01\0F\8D\10\00\00\00\C7\04%\90 `\00\01\00\00\00\E9\0B\00\00\00\C7\04%\90 `\00\00\00\00\00\E9\00\00\00\00H\8BE\E8H\83\C0\01H\89E\E8\E9a\FF\FF\FF\8B\85P\FF\FF\FF;\85T\FF\FF\FF\0F\850\00\00\00H\8B}\C8Hc4%\90 `\00Hc\14%\90 `\00\F2\0F\10E\90\F2\0F\10M\88\F2\0F\10U\80\F2\0F\10\9Dx\FF\FF\FF\E8N\07\00\00\C7\04%\90 `\00\01\00\00\00\C7\04%\AC `\00\02\00\00\00\C7\04%\A8 `\00\03\00\00\00H\C7E\E8\01\00\00\00H\8BE\E8H;E\C0\0F\8F\F5\00\00\00\8B\04%\90 `\00\8B\0C%\AC `\00+\0C%\90 `\00\0F\AF\C1\8B\0C%\A8 `\00+\0C%\AC `\00\0F\AF\C1\89\04%\90 `\00\8B\04%\A8 `\00\0F\AF\04%\AC `\00\8B\0C%\A8 `\00+\0C%\90 `\00\0F\AF\0C%\AC `\00)\C8\89\04%\AC `\00\8B\04%\A8 `\00+\04%\AC `\00\8B\0C%\AC `\00\03\0C%\90 `\00\0F\AF\C1\89\04%\A8 `\00\8B\04%\90 `\00\03\04%\AC `\00\03\04%\A8 `\00\F2\0F*\C0\8B\04%\A8 `\00\83\E8\01Hc\D0\F2\0F\11\04\D5\C0 `\00\8B\04%\90 `\00\0F\AF\04%\AC `\00\0F\AF\04%\A8 `\00\F2\0F*\C0\8B\04%\AC `\00\83\E8\01Hc\D0\F2\0F\11\04\D5\C0 `\00H\8BE\E8H\83\C0\01H\89E\E8\E9\FD\FE\FF\FF\8B\85P\FF\FF\FF;\85T\FF\FF\FF\0F\85=\00\00\00H\8B}\C0Hc4%\90 `\00Hc\14%\AC `\00\F2\0F\10\04%\C8 `\00\F2\0F\10\0C%\D0 `\00\F2\0F\10\14%\D8 `\00\F2\0F\10\1C%\E0 `\00\E8\D3\05\00\00\F2\0F\10\05\0B\09\00\00\F2\0F\11\85p\FF\FF\FF\F2\0F\11\85h\FF\FF\FFH\C7E\E8\01\00\00\00H\8BE\E8H;E\B8\0F\8F\E9\01\00\00\F2\0F\10\05\D5\08\00\00\F2\0F\10\0C%\98 `\00\F2\0F\10\14%\B0 `\00\F2\0F\10\9Dp\FF\FF\FF\F2\0F\11\85 \FF\FF\FF\0F(\C3\F2\0F\11\95\18\FF\FF\FF\F2\0F\11\8D\10\FF\FF\FF\E8\C3\F6\FF\FF\F2\0F\10\8D\18\FF\FF\FF\F2\0FY\C8\F2\0F\10\85p\FF\FF\FF\F2\0F\11\8D\08\FF\FF\FF\E8b\F6\FF\FF\F2\0F\10\8D\08\FF\FF\FF\F2\0FY\C8\F2\0F\10\85p\FF\FF\FF\F2\0FX\85h\FF\FF\FF\F2\0F\11\8D\00\FF\FF\FF\E89\F6\FF\FF\F2\0F\10\8Dp\FF\FF\FF\F2\0F\5C\8Dh\FF\FF\FF\F2\0F\11\85\F8\FE\FF\FF\0F(\C1\E8\19\F6\FF\FF\F2\0F\10\8D\F8\FE\FF\FF\F2\0FX\C8\F2\0F\10\85 \FF\FF\FF\F2\0F\5C\C8\F2\0F\10\95\00\FF\FF\FF\F2\0F^\D1\0F(\C2\E8\BD\F5\FF\FF\F2\0F\10\0D\FD\07\00\00\F2\0F\10\95\10\FF\FF\FF\F2\0FY\D0\F2\0F\11\95p\FF\FF\FF\F2\0F\10\04%\98 `\00\F2\0F\10\14%\B0 `\00\F2\0F\10\9Dh\FF\FF\FF\F2\0F\11\85\F0\FE\FF\FF\0F(\C3\F2\0F\11\8D\E8\FE\FF\FF\F2\0F\11\95\E0\FE\FF\FF\E8\D7\F5\FF\FF\F2\0F\10\8D\E0\FE\FF\FF\F2\0FY\C8\F2\0F\10\85h\FF\FF\FF\F2\0F\11\8D\D8\FE\FF\FF\E8v\F5\FF\FF\F2\0F\10\8D\D8\FE\FF\FF\F2\0FY\C8\F2\0F\10\85p\FF\FF\FF\F2\0FX\85h\FF\FF\FF\F2\0F\11\8D\D0\FE\FF\FF\E8M\F5\FF\FF\F2\0F\10\8Dp\FF\FF\FF\F2\0F\5C\8Dh\FF\FF\FF\F2\0F\11\85\C8\FE\FF\FF\0F(\C1\E8-\F5\FF\FF\F2\0F\10\8D\C8\FE\FF\FF\F2\0FX\C8\F2\0F\10\85\E8\FE\FF\FF\F2\0F\5C\C8\F2\0F\10\95\D0\FE\FF\FF\F2\0F^\D1\0F(\C2\E8\D1\F4\FF\FF\F2\0F\10\8D\F0\FE\FF\FF\F2\0FY\C8\F2\0F\11\8Dh\FF\FF\FFH\8BE\E8H\83\C0\01H\89E\E8\E9\09\FE\FF\FF\8B\85P\FF\FF\FF;\85T\FF\FF\FF\0F\859\00\00\00H\8B}\B8Hc4%\90 `\00Hc\14%\AC `\00\F2\0F\10\85p\FF\FF\FF\F2\0F\10\8Dp\FF\FF\FF\F2\0F\10\95h\FF\FF\FF\F2\0F\10\9Dh\FF\FF\FF\E8q\03\00\00\F2\0F\10\05\A1\06\00\00\F2\0F\11\85p\FF\FF\FF\F2\0F\11\85h\FF\FF\FF\F2\0F\11\85`\FF\FF\FFH\C7E\E8\01\00\00\00H\8BE\E8H;E\B0\0F\8F-\00\00\00H\8D\BD`\FF\FF\FF\F2\0F\10\85p\FF\FF\FF\F2\0F\10\8Dh\FF\FF\FF\E8\BF\04\00\00H\8BE\E8H\83\C0\01H\89E\E8\E9\C5\FF\FF\FF\8B\85P\FF\FF\FF;\85T\FF\FF\FF\0F\859\00\00\00H\8B}\B0Hc4%\90 `\00Hc\14%\AC `\00\F2\0F\10\85p\FF\FF\FF\F2\0F\10\8Dh\FF\FF\FF\F2\0F\10\95`\FF\FF\FF\F2\0F\10\9D`\FF\FF\FF\E8\C3\02\00\00\F2\0F\10\05\03\06\00\00\F2\0F\10\0D\CB\05\00\00\F2\0F\10\15\E3\05\00\00\C7\04%\90 `\00\01\00\00\00\C7\04%\AC `\00\02\00\00\00\C7\04%\A8 `\00\03\00\00\00\F2\0F\11\14%\C8 `\00\F2\0F\11\0C%\D0 `\00\F2\0F\11\04%\D8 `\00H\C7E\E8\01\00\00\00H\8BE\E8H;E\A8\0F\8F\16\00\00\00\E8t\04\00\00H\8BE\E8H\83\C0\01H\89E\E8\E9\DC\FF\FF\FF\8B\85P\FF\FF\FF;\85T\FF\FF\FF\0F\85=\00\00\00H\8B}\A8Hc4%\90 `\00Hc\14%\AC `\00\F2\0F\10\04%\C8 `\00\F2\0F\10\0C%\D0 `\00\F2\0F\10\14%\D8 `\00\F2\0F\10\1C%\E0 `\00\E8\F4\01\00\00\C7\04%\90 `\00\02\00\00\00\C7\04%\AC `\00\03\00\00\00H\C7E\E8\01\00\00\00H\8BE\E8H;E\A0\0F\8Fl\00\00\00\8B\04%\90 `\00\03\04%\AC `\00\89\04%\90 `\00\8B\04%\90 `\00\03\04%\AC `\00\89\04%\AC `\00\8B\04%\AC `\00+\04%\90 `\00\89\04%\90 `\00\8B\04%\AC `\00+\04%\90 `\00+\04%\90 `\00\89\04%\AC `\00H\8BE\E8H\83\C0\01H\89E\E8\E9\86\FF\FF\FF\8B\85P\FF\FF\FF;\85T\FF\FF\FF\0F\850\00\00\00H\8B}\A0Hc4%\90 `\00Hc\14%\AC `\00\F2\0F\10E\90\F2\0F\10M\88\F2\0F\10U\80\F2\0F\10\9Dx\FF\FF\FF\E8\1A\01\00\00\F2\0F\10\05b\04\00\00\F2\0F\11\85p\FF\FF\FFH\C7E\E8\01\00\00\00H\8BE\E8H;E\98\0F\8F9\00\00\00\F2\0F\10\85p\FF\FF\FF\E8\F7\F1\FF\FF\F2\0F^\04%\A0 `\00\E8\B9\F1\FF\FF\E8D\F2\FF\FF\F2\0F\11\85p\FF\FF\FFH\8BE\E8H\83\C0\01H\89E\E8\E9\B9\FF\FF\FF\8B\85P\FF\FF\FF;\85T\FF\FF\FF\0F\859\00\00\00H\8B}\98Hc4%\90 `\00Hc\14%\AC `\00\F2\0F\10\85p\FF\FF\FF\F2\0F\10\8Dp\FF\FF\FF\F2\0F\10\95p\FF\FF\FF\F2\0F\10\9Dp\FF\FF\FF\E8p\00\00\00\8B\85P\FF\FF\FF\83\C0\01\89\85P\FF\FF\FF;\85T\FF\FF\FF\0F\8F\05\00\00\00\E9K\F4\FF\FF1\C0\89\C7\E8\87\F1\FF\FFH\BF\15\19@\00\00\00\00\00H\89\858\FF\FF\FF\B0\00\E8/\F1\FF\FF\83\BD0\FF\FF\FF\00\89\85\C4\FE\FF\FF\0F\84\05\00\00\00\E9\AD\F3\FF\FF\C7E\FC\00\00\00\00\8BE\FCH\81\C4@\01\00\00]\C3\0F\1F@\00UH\89\E5H\83\EC@H\B8\17\19@\00\00\00\00\00H\89}\F8H\89u\F0H\89U\E8\F2\0F\11E\E0\F2\0F\11M\D8\F2\0F\11U\D0\F2\0F\11]\C8H\8Bu\F8H\8BU\F0H\8BM\E8\F2\0F\10E\E0\F2\0F\10M\D8\F2\0F\10U\D0\F2\0F\10]\C8H\89\C7\B0\04\E8\A4\F0\FF\FF\89E\C4H\83\C4@]\C3ff.\0F\1F\84\00\00\00\00\00UH\89\E5H\89}\F8\C7\04%\90 `\00\00\00\00\00H\B8\00\00\00\00\00\00\00\80H\8BM\F8\F2\0F\10A\08H\8BM\F8\F2\0FXA\10H\8BM\F8\F2\0FXA\18H\8BM\F8\F2\0F\5CA \F2\0FY\04%\98 `\00H\8BM\F8\F2\0F\11A\08H\8BM\F8\F2\0F\10A\08H\8BM\F8\F2\0FXA\10H\8BM\F8\F2\0F\5CA\18H\8BM\F8\F2\0FXA \F2\0FY\04%\98 `\00H\8BM\F8\F2\0F\11A\10H\8BM\F8\F2\0F\10A\08H\8BM\F8\F2\0F\5CA\10H\8BM\F8\F2\0FXA\18H\8BM\F8\F2\0FXA \F2\0FY\04%\98 `\00H\8BM\F8\F2\0F\11A\18H\8BM\F8\F2\0F\10A\08fH\0F~\C1H1\C1fH\0Fn\C1H\8BE\F8\F2\0FX@\10H\8BE\F8\F2\0FX@\18H\8BE\F8\F2\0FX@ \F2\0F^\04%\B0 `\00H\8BE\F8\F2\0F\11@ \8B\14%\90 `\00\83\C2\01\89\14%\90 `\00\83<%\90 `\00\06\0F\8D\05\00\00\00\E9\ED\FE\FF\FF]\C3\0F\1F\84\00\00\00\00\00UH\89\E5\F2\0F\11E\F8\F2\0F\11M\F0H\89}\E8\F2\0F\10E\F8\F2\0F\11E\E0\F2\0F\10E\F0\F2\0F\11E\D8\F2\0F\10\04%\98 `\00\F2\0F\10M\E0\F2\0FXM\D8\F2\0FY\C1\F2\0F\11E\E0\F2\0F\10\04%\98 `\00\F2\0F\10M\E0\F2\0FXM\D8\F2\0FY\C1\F2\0F\11E\D8\F2\0F\10E\E0\F2\0FXE\D8\F2\0F^\04%\B0 `\00H\8B}\E8\F2\0F\11\07]\C3\0F\1FD\00\00UH\89\E5Hc\04%\AC `\00\F2\0F\10\04\C5\C0 `\00Hc\04%\90 `\00\F2\0F\11\04\C5\C0 `\00Hc\04%\A8 `\00\F2\0F\10\04\C5\C0 `\00Hc\04%\AC `\00\F2\0F\11\04\C5\C0 `\00Hc\04%\90 `\00\F2\0F\10\04\C5\C0 `\00Hc\04%\A8 `\00\F2\0F\11\04\C5\C0 `\00]\C3\0F\1F@\00AWAVI\89\D7AUATL\8D%\AE\05 \00UH\8D-\AE\05 \00SA\89\FDI\89\F6L)\E5H\83\EC\08H\C1\FD\03\E8\E7\ED\FF\FFH\85\EDt 1\DB\0F\1F\84\00\00\00\00\00L\89\FAL\89\F6D\89\EFA\FF\14\DCH\83\C3\01H9\DDu\EAH\83\C4\08[]A\5CA]A^A_\C3\90f.\0F\1F\84\00\00\00\00\00\F3\C3" }>
@seg_4018a4__fini = internal constant %seg_4018a4__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_4018b0__rodata = internal constant %seg_4018b0__rodata_type <{ [72 x i8] c"\01\00\02\00\00\00\00\00\00\00\00\00\00\00\00@5^\BAI\0C\02\E0?\8FSt$\97\FF\DF?\00\00\00\00\00\00\F0\BF\00\00\00\00\00\00\F0?\00\00\00\00\00\00\E0?\00\00\00\00\00\00\08@\00\00\00\00\00\00\E8?", [3 x i8] c"-c\00", [28 x i8] c"usage: whetdc [-c] [loops]\0A\00", [44 x i8] c"%7ld %7ld %7ld %12.4e %12.4e %12.4e %12.4e\0A\00" }>
@seg_401944__eh_frame_hdr = internal constant %seg_401944__eh_frame_hdr_type <{ [92 x i8] c"\01\1B\03;X\00\00\00\0A\00\00\00\1C\ED\FF\FF\B4\00\00\00\DC\ED\FF\FFt\00\00\00\0C\EE\FF\FF\A0\00\00\00\CC\EE\FF\FF\DC\00\00\00\5C\FC\FF\FF\F8\00\00\00\CC\FC\FF\FF\14\01\00\00\FC\FD\FF\FF0\01\00\00|\FE\FF\FFL\01\00\00\EC\FE\FF\FFl\01\00\00\5C\FF\FF\FF\B4\01\00\00" }>
@seg_4019a0__eh_frame = internal constant %seg_4019a0__eh_frame_type <{ [368 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\00`\ED\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00d\ED\FF\FF\02\00\00\00\00\00\00\00$\00\00\000\00\00\00`\EC\FF\FF\C0\00\00\00\00\0E\10F\0E\18J\0F\0Bw\08\80\00?\1A;*3$\22\00\00\00\00\18\00\00\00X\00\00\00\E8\ED\FF\FF\8C\0D\00\00\00A\0E\10\86\02C\0D\06\00\00\00\18\00\00\00t\00\00\00\5C\FB\FF\FFe\00\00\00\00A\0E\10\86\02C\0D\06\00\00\00\18\00\00\00\90\00\00\00\B0\FB\FF\FF(\01\00\00\00A\0E\10\86\02C\0D\06\00\00\00\18\00\00\00\AC\00\00\00\C4\FC\FF\FF{\00\00\00\00A\0E\10\86\02C\0D\06\00\00\00\1C\00\00\00\C8\00\00\00(\FD\FF\FFl\00\00\00\00A\0E\10\86\02C\0D\06\00\00\00\00\00\00\00D\00\00\00\E8\00\00\00x\FD\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\000\01\00\00\A0\FD\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@seg_601df0__init_array = internal global %seg_601df0__init_array_type <{ i64 ptrtoint (void ()* @callback_sub_400800_frame_dummy to i64), i64 ptrtoint (void ()* @callback_sub_4007d0___do_global_dtors_aux to i64) }>
@seg_601ff0__got = internal global %seg_601ff0__got_type <{ i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64)* @__libc_start_main to i64), i64 ptrtoint (i64 ()* @__gmon_start__ to i64) }>
@seg_602000__got_plt = internal global %seg_602000__got_plt_type <{ [24 x i8] zeroinitializer, i64 ptrtoint (i64 (i64, i64, i64)* @strncmp to i64), i64 ptrtoint (i64 (i64)* @exp to i64), i64 ptrtoint (double (double)* @atan to i64), i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), i64 ptrtoint (i64 (i64)* @log to i64), i64 ptrtoint (double (double)* @cos to i64), i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @fprintf to i64), i64 ptrtoint (i64 (i64)* @time to i64), i64 ptrtoint (i64 (i64)* @atol to i64), i64 ptrtoint (double (double)* @sin to i64), i64 ptrtoint (double (double)* @sqrt to i64) }>
@seg_602070__data = internal global %seg_602070__data_type zeroinitializer
@seg_602080__bss = internal global %seg_602080__bss_type zeroinitializer
@J = global %J_type zeroinitializer
@T = global %T_type zeroinitializer
@T1 = global %T1_type zeroinitializer
@L = global %L_type zeroinitializer
@K = global %K_type zeroinitializer
@T2 = global %T2_type zeroinitializer
@E1 = global %E1_type zeroinitializer
@0 = internal global i1 false
@1 = internal constant %struct.Memory* (%struct.State*, i64, %struct.Memory*)* @callback_sub_400800_frame_dummy_wrapper
@2 = internal constant void ()* @__mcsema_attach_call
@3 = internal constant %struct.Memory* (%struct.State*, i64, %struct.Memory*)* @callback_sub_4007d0___do_global_dtors_aux_wrapper
@4 = internal constant %struct.Memory* (%struct.State*, i64, %struct.Memory*)* @callback_sub_4018a0___libc_csu_fini_wrapper
@5 = internal constant %struct.Memory* (%struct.State*, i64, %struct.Memory*)* @callback_sub_401830___libc_csu_init_wrapper
@6 = internal constant %struct.Memory* (%struct.State*, i64, %struct.Memory*)* @main_wrapper
@7 = internal constant %struct.Memory* (%struct.State*, i64, %struct.Memory*)* @.init_proc_wrapper
@8 = internal constant %struct.Memory* (%struct.State*, i64, %struct.Memory*)* @P0_wrapper
@9 = internal constant %struct.Memory* (%struct.State*, i64, %struct.Memory*)* @PA_wrapper
@10 = internal constant %struct.Memory* (%struct.State*, i64, %struct.Memory*)* @.term_proc_wrapper
@11 = internal constant %struct.Memory* (%struct.State*, i64, %struct.Memory*)* @P3_wrapper
@12 = internal constant %struct.Memory* (%struct.State*, i64, %struct.Memory*)* @POUT_wrapper
@llvm.global_dtors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 101, void ()* @__mcsema_destructor, i8* null }]
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 101, void ()* @__mcsema_constructor, i8* null }]

declare %struct.Memory* @sub_4017c0_P0_renamed_(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_401740_P3_renamed_(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_401610_PA_renamed_(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_400760_deregister_tm_clones_renamed_(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_400648__init_proc_renamed_(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_4015a0_POUT_renamed_(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @__remill_sync_hyper_call(%struct.State* dereferenceable(3376), %struct.Memory*, i32) #0

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #1

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare zeroext i8 @__remill_read_memory_8(%struct.Memory*, i64) #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_write_memory_8(%struct.Memory*, i64, i8 zeroext) #2

; Function Attrs: nounwind readnone
declare i32 @llvm.ctpop.i32(i32) #3

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare zeroext i16 @__remill_read_memory_16(%struct.Memory*, i64) #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_write_memory_16(%struct.Memory*, i64, i16 zeroext) #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare i32 @__remill_read_memory_32(%struct.Memory*, i64) #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_write_memory_32(%struct.Memory*, i64, i32) #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare i64 @__remill_read_memory_64(%struct.Memory*, i64) #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_write_memory_64(%struct.Memory*, i64, i64) #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare float @__remill_read_memory_f32(%struct.Memory*, i64) #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare double @__remill_read_memory_f64(%struct.Memory*, i64) #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare zeroext i8 @__remill_undefined_8() #2

; Function Attrs: noduplicate noinline nounwind optnone
declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*) #4

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #3

; Function Attrs: nounwind readnone
declare i64 @llvm.bswap.i64(i64) #3

; Function Attrs: nounwind readnone
declare i32 @llvm.cttz.i32(i32, i1) #3

; Function Attrs: nounwind readnone
declare i64 @llvm.cttz.i64(i64, i1) #3

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #3

; Function Attrs: nounwind readnone
declare i64 @llvm.ctlz.i64(i64, i1) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #1

; Function Attrs: nounwind readnone
declare double @llvm.nearbyint.f64(double) #3

; Function Attrs: nounwind readnone
declare double @llvm.fabs.f64(double) #3

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.nearbyint.v4f64(<4 x double>) #3

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.fabs.v4f64(<4 x double>) #3

; Function Attrs: nounwind readnone
declare double @llvm.trunc.f64(double) #3

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.trunc.v4f64(<4 x double>) #3

; Function Attrs: nounwind readnone
declare float @llvm.nearbyint.f32(float) #3

; Function Attrs: nounwind readnone
declare float @llvm.fabs.f32(float) #3

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.nearbyint.v4f32(<4 x float>) #3

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.fabs.v4f32(<4 x float>) #3

; Function Attrs: nounwind readnone
declare float @llvm.trunc.f32(float) #3

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.trunc.v4f32(<4 x float>) #3

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_write_memory_f32(%struct.Memory*, i64, float) #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_write_memory_f64(%struct.Memory*, i64, double) #2

; Function Attrs: nounwind readnone
declare zeroext i8 @__remill_read_io_port_8(%struct.Memory*, i64) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare zeroext i16 @__remill_read_io_port_16(%struct.Memory*, i64) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare i32 @__remill_read_io_port_32(%struct.Memory*, i64) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare %struct.Memory* @__remill_write_io_port_8(%struct.Memory*, i64, i8 zeroext) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare %struct.Memory* @__remill_write_io_port_16(%struct.Memory*, i64, i16 zeroext) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare %struct.Memory* @__remill_write_io_port_32(%struct.Memory*, i64, i32) local_unnamed_addr #5

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_barrier_store_load(%struct.Memory*) #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_barrier_store_store(%struct.Memory*) #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_barrier_load_load(%struct.Memory*) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #1

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare i64 @__remill_undefined_64() #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare double @__remill_undefined_f64() #2

declare %struct.Memory* @__remill_compare_exchange_memory_8(%struct.Memory*, i64, i8* dereferenceable(1), i8 zeroext) #0

declare %struct.Memory* @__remill_compare_exchange_memory_16(%struct.Memory*, i64, i16* dereferenceable(2), i16 zeroext) #0

declare %struct.Memory* @__remill_compare_exchange_memory_32(%struct.Memory*, i64, i32* dereferenceable(4), i32) #0

declare %struct.Memory* @__remill_compare_exchange_memory_64(%struct.Memory*, i64, i64* dereferenceable(8), i64) #0

declare %struct.Memory* @__remill_compare_exchange_memory_128(%struct.Memory*, i64, i128* dereferenceable(16), i128* dereferenceable(16)) local_unnamed_addr #0

declare %struct.Memory* @__remill_fetch_and_add_8(%struct.Memory*, i64, i8* dereferenceable(1)) #0

declare %struct.Memory* @__remill_fetch_and_add_16(%struct.Memory*, i64, i16* dereferenceable(2)) #0

declare %struct.Memory* @__remill_fetch_and_add_32(%struct.Memory*, i64, i32* dereferenceable(4)) #0

declare %struct.Memory* @__remill_fetch_and_add_64(%struct.Memory*, i64, i64* dereferenceable(8)) #0

; Function Attrs: nounwind readnone
declare float @sqrtf(float) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare double @sqrt(double) local_unnamed_addr #5

; Function Attrs: nounwind
declare i32 @fesetround(i32) local_unnamed_addr #6

; Function Attrs: nounwind readonly
declare i32 @fegetround() local_unnamed_addr #7

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare double @__remill_read_memory_f80(%struct.Memory*, i64) #2

; Function Attrs: nounwind
declare i32 @fetestexcept(i32) local_unnamed_addr #6

; Function Attrs: nounwind
declare i32 @feraiseexcept(i32) local_unnamed_addr #6

; Function Attrs: nounwind
declare i32 @feclearexcept(i32) local_unnamed_addr #6

; Function Attrs: nounwind readnone
declare i32 @__remill_fpu_exception_test_and_clear(i32, i32) #5

; Function Attrs: nounwind readnone
declare double @cos(double) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare double @sin(double) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare double @tan(double) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare double @atan(double) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare double @exp2(double) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare double @remainder(double, double) local_unnamed_addr #5

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_write_memory_f80(%struct.Memory*, i64, double) #2

; Function Attrs: nounwind readnone
declare double @log2(double) local_unnamed_addr #5

; Function Attrs: noinline nounwind optnone
define %struct.Memory* @__remill_basic_block(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #8 !dbg !1261 {
  %state = alloca %struct.State*, align 8
  %curr_pc = alloca i64, align 8
  %memory = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  %SS_BASE = alloca i64, align 8
  %ES_BASE = alloca i64, align 8
  %DS_BASE = alloca i64, align 8
  %CS_BASE = alloca i64, align 8
  %STATE = alloca %struct.State*, align 8
  %MEMORY = alloca %struct.Memory*, align 8
  %_DR0 = alloca i64*, align 8
  %_DR1 = alloca i64*, align 8
  %_DR2 = alloca i64*, align 8
  %_DR3 = alloca i64*, align 8
  %_DR4 = alloca i64*, align 8
  %_DR5 = alloca i64*, align 8
  %_DR6 = alloca i64*, align 8
  %_DR7 = alloca i64*, align 8
  %CR0 = alloca i64*, align 8
  %CR1 = alloca i64*, align 8
  %CR2 = alloca i64*, align 8
  %CR3 = alloca i64*, align 8
  %CR4 = alloca i64*, align 8
  %CR8 = alloca i64*, align 8
  store %struct.State* %0, %struct.State** %state, align 8
  store i64 %1, i64* %curr_pc, align 8
  store %struct.Memory* %2, %struct.Memory** %memory, align 8
  store i8 0, i8* %BRANCH_TAKEN, align 1, !dbg !1952
  store i64 0, i64* %SS_BASE, align 8, !dbg !1953
  store i64 0, i64* %ES_BASE, align 8, !dbg !1954
  store i64 0, i64* %DS_BASE, align 8, !dbg !1955
  store i64 0, i64* %CS_BASE, align 8, !dbg !1956
  store %struct.State* %0, %struct.State** %STATE, align 8, !dbg !1957
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8, !dbg !1958
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !1959
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33, !dbg !1960
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0, !dbg !1961
  %PC = bitcast %union.anon* %6 to i64*, !dbg !1961
  store i64 %1, i64* %PC, align 8, !dbg !1962
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !1963
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 1, !dbg !1964
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0, !dbg !1965
  %10 = bitcast %union.anon* %9 to %struct.anon.2*, !dbg !1965
  %AH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10, i32 0, i32 1, !dbg !1966
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !1967
  %12 = getelementptr inbounds %struct.GPR, %struct.GPR* %11, i32 0, i32 3, !dbg !1968
  %13 = getelementptr inbounds %struct.Reg, %struct.Reg* %12, i32 0, i32 0, !dbg !1969
  %14 = bitcast %union.anon* %13 to %struct.anon.2*, !dbg !1969
  %BH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %14, i32 0, i32 1, !dbg !1970
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !1971
  %16 = getelementptr inbounds %struct.GPR, %struct.GPR* %15, i32 0, i32 5, !dbg !1972
  %17 = getelementptr inbounds %struct.Reg, %struct.Reg* %16, i32 0, i32 0, !dbg !1973
  %18 = bitcast %union.anon* %17 to %struct.anon.2*, !dbg !1973
  %CH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %18, i32 0, i32 1, !dbg !1974
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !1975
  %20 = getelementptr inbounds %struct.GPR, %struct.GPR* %19, i32 0, i32 7, !dbg !1976
  %21 = getelementptr inbounds %struct.Reg, %struct.Reg* %20, i32 0, i32 0, !dbg !1977
  %22 = bitcast %union.anon* %21 to %struct.anon.2*, !dbg !1977
  %DH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %22, i32 0, i32 1, !dbg !1978
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !1979
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 1, !dbg !1980
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0, !dbg !1981
  %26 = bitcast %union.anon* %25 to %struct.anon.2*, !dbg !1981
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %26, i32 0, i32 0, !dbg !1982
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !1983
  %28 = getelementptr inbounds %struct.GPR, %struct.GPR* %27, i32 0, i32 3, !dbg !1984
  %29 = getelementptr inbounds %struct.Reg, %struct.Reg* %28, i32 0, i32 0, !dbg !1985
  %30 = bitcast %union.anon* %29 to %struct.anon.2*, !dbg !1985
  %BL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %30, i32 0, i32 0, !dbg !1986
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !1987
  %32 = getelementptr inbounds %struct.GPR, %struct.GPR* %31, i32 0, i32 5, !dbg !1988
  %33 = getelementptr inbounds %struct.Reg, %struct.Reg* %32, i32 0, i32 0, !dbg !1989
  %34 = bitcast %union.anon* %33 to %struct.anon.2*, !dbg !1989
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %34, i32 0, i32 0, !dbg !1990
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !1991
  %36 = getelementptr inbounds %struct.GPR, %struct.GPR* %35, i32 0, i32 7, !dbg !1992
  %37 = getelementptr inbounds %struct.Reg, %struct.Reg* %36, i32 0, i32 0, !dbg !1993
  %38 = bitcast %union.anon* %37 to %struct.anon.2*, !dbg !1993
  %DL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %38, i32 0, i32 0, !dbg !1994
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !1995
  %40 = getelementptr inbounds %struct.GPR, %struct.GPR* %39, i32 0, i32 9, !dbg !1996
  %41 = getelementptr inbounds %struct.Reg, %struct.Reg* %40, i32 0, i32 0, !dbg !1997
  %42 = bitcast %union.anon* %41 to %struct.anon.2*, !dbg !1997
  %SIL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %42, i32 0, i32 0, !dbg !1998
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !1999
  %44 = getelementptr inbounds %struct.GPR, %struct.GPR* %43, i32 0, i32 11, !dbg !2000
  %45 = getelementptr inbounds %struct.Reg, %struct.Reg* %44, i32 0, i32 0, !dbg !2001
  %46 = bitcast %union.anon* %45 to %struct.anon.2*, !dbg !2001
  %DIL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %46, i32 0, i32 0, !dbg !2002
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2003
  %48 = getelementptr inbounds %struct.GPR, %struct.GPR* %47, i32 0, i32 13, !dbg !2004
  %49 = getelementptr inbounds %struct.Reg, %struct.Reg* %48, i32 0, i32 0, !dbg !2005
  %50 = bitcast %union.anon* %49 to %struct.anon.2*, !dbg !2005
  %SPL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %50, i32 0, i32 0, !dbg !2006
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2007
  %52 = getelementptr inbounds %struct.GPR, %struct.GPR* %51, i32 0, i32 15, !dbg !2008
  %53 = getelementptr inbounds %struct.Reg, %struct.Reg* %52, i32 0, i32 0, !dbg !2009
  %54 = bitcast %union.anon* %53 to %struct.anon.2*, !dbg !2009
  %BPL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %54, i32 0, i32 0, !dbg !2010
  %55 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2011
  %56 = getelementptr inbounds %struct.GPR, %struct.GPR* %55, i32 0, i32 17, !dbg !2012
  %57 = getelementptr inbounds %struct.Reg, %struct.Reg* %56, i32 0, i32 0, !dbg !2013
  %58 = bitcast %union.anon* %57 to %struct.anon.2*, !dbg !2013
  %R8B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %58, i32 0, i32 0, !dbg !2014
  %59 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2015
  %60 = getelementptr inbounds %struct.GPR, %struct.GPR* %59, i32 0, i32 19, !dbg !2016
  %61 = getelementptr inbounds %struct.Reg, %struct.Reg* %60, i32 0, i32 0, !dbg !2017
  %62 = bitcast %union.anon* %61 to %struct.anon.2*, !dbg !2017
  %R9B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %62, i32 0, i32 0, !dbg !2018
  %63 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2019
  %64 = getelementptr inbounds %struct.GPR, %struct.GPR* %63, i32 0, i32 21, !dbg !2020
  %65 = getelementptr inbounds %struct.Reg, %struct.Reg* %64, i32 0, i32 0, !dbg !2021
  %66 = bitcast %union.anon* %65 to %struct.anon.2*, !dbg !2021
  %R10B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %66, i32 0, i32 0, !dbg !2022
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2023
  %68 = getelementptr inbounds %struct.GPR, %struct.GPR* %67, i32 0, i32 23, !dbg !2024
  %69 = getelementptr inbounds %struct.Reg, %struct.Reg* %68, i32 0, i32 0, !dbg !2025
  %70 = bitcast %union.anon* %69 to %struct.anon.2*, !dbg !2025
  %R11B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %70, i32 0, i32 0, !dbg !2026
  %71 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2027
  %72 = getelementptr inbounds %struct.GPR, %struct.GPR* %71, i32 0, i32 25, !dbg !2028
  %73 = getelementptr inbounds %struct.Reg, %struct.Reg* %72, i32 0, i32 0, !dbg !2029
  %74 = bitcast %union.anon* %73 to %struct.anon.2*, !dbg !2029
  %R12B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %74, i32 0, i32 0, !dbg !2030
  %75 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2031
  %76 = getelementptr inbounds %struct.GPR, %struct.GPR* %75, i32 0, i32 27, !dbg !2032
  %77 = getelementptr inbounds %struct.Reg, %struct.Reg* %76, i32 0, i32 0, !dbg !2033
  %78 = bitcast %union.anon* %77 to %struct.anon.2*, !dbg !2033
  %R13B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %78, i32 0, i32 0, !dbg !2034
  %79 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2035
  %80 = getelementptr inbounds %struct.GPR, %struct.GPR* %79, i32 0, i32 29, !dbg !2036
  %81 = getelementptr inbounds %struct.Reg, %struct.Reg* %80, i32 0, i32 0, !dbg !2037
  %82 = bitcast %union.anon* %81 to %struct.anon.2*, !dbg !2037
  %R14B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %82, i32 0, i32 0, !dbg !2038
  %83 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2039
  %84 = getelementptr inbounds %struct.GPR, %struct.GPR* %83, i32 0, i32 31, !dbg !2040
  %85 = getelementptr inbounds %struct.Reg, %struct.Reg* %84, i32 0, i32 0, !dbg !2041
  %86 = bitcast %union.anon* %85 to %struct.anon.2*, !dbg !2041
  %R15B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %86, i32 0, i32 0, !dbg !2042
  %87 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2043
  %88 = getelementptr inbounds %struct.GPR, %struct.GPR* %87, i32 0, i32 1, !dbg !2044
  %89 = getelementptr inbounds %struct.Reg, %struct.Reg* %88, i32 0, i32 0, !dbg !2045
  %AX = bitcast %union.anon* %89 to i16*, !dbg !2045
  %90 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2046
  %91 = getelementptr inbounds %struct.GPR, %struct.GPR* %90, i32 0, i32 3, !dbg !2047
  %92 = getelementptr inbounds %struct.Reg, %struct.Reg* %91, i32 0, i32 0, !dbg !2048
  %BX = bitcast %union.anon* %92 to i16*, !dbg !2048
  %93 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2049
  %94 = getelementptr inbounds %struct.GPR, %struct.GPR* %93, i32 0, i32 5, !dbg !2050
  %95 = getelementptr inbounds %struct.Reg, %struct.Reg* %94, i32 0, i32 0, !dbg !2051
  %CX = bitcast %union.anon* %95 to i16*, !dbg !2051
  %96 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2052
  %97 = getelementptr inbounds %struct.GPR, %struct.GPR* %96, i32 0, i32 7, !dbg !2053
  %98 = getelementptr inbounds %struct.Reg, %struct.Reg* %97, i32 0, i32 0, !dbg !2054
  %DX = bitcast %union.anon* %98 to i16*, !dbg !2054
  %99 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2055
  %100 = getelementptr inbounds %struct.GPR, %struct.GPR* %99, i32 0, i32 9, !dbg !2056
  %101 = getelementptr inbounds %struct.Reg, %struct.Reg* %100, i32 0, i32 0, !dbg !2057
  %SI = bitcast %union.anon* %101 to i16*, !dbg !2057
  %102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2058
  %103 = getelementptr inbounds %struct.GPR, %struct.GPR* %102, i32 0, i32 11, !dbg !2059
  %104 = getelementptr inbounds %struct.Reg, %struct.Reg* %103, i32 0, i32 0, !dbg !2060
  %DI = bitcast %union.anon* %104 to i16*, !dbg !2060
  %105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2061
  %106 = getelementptr inbounds %struct.GPR, %struct.GPR* %105, i32 0, i32 13, !dbg !2062
  %107 = getelementptr inbounds %struct.Reg, %struct.Reg* %106, i32 0, i32 0, !dbg !2063
  %SP = bitcast %union.anon* %107 to i16*, !dbg !2063
  %108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2064
  %109 = getelementptr inbounds %struct.GPR, %struct.GPR* %108, i32 0, i32 15, !dbg !2065
  %110 = getelementptr inbounds %struct.Reg, %struct.Reg* %109, i32 0, i32 0, !dbg !2066
  %BP = bitcast %union.anon* %110 to i16*, !dbg !2066
  %111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2067
  %112 = getelementptr inbounds %struct.GPR, %struct.GPR* %111, i32 0, i32 17, !dbg !2068
  %113 = getelementptr inbounds %struct.Reg, %struct.Reg* %112, i32 0, i32 0, !dbg !2069
  %R8W = bitcast %union.anon* %113 to i16*, !dbg !2069
  %114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2070
  %115 = getelementptr inbounds %struct.GPR, %struct.GPR* %114, i32 0, i32 19, !dbg !2071
  %116 = getelementptr inbounds %struct.Reg, %struct.Reg* %115, i32 0, i32 0, !dbg !2072
  %R9W = bitcast %union.anon* %116 to i16*, !dbg !2072
  %117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2073
  %118 = getelementptr inbounds %struct.GPR, %struct.GPR* %117, i32 0, i32 21, !dbg !2074
  %119 = getelementptr inbounds %struct.Reg, %struct.Reg* %118, i32 0, i32 0, !dbg !2075
  %R10W = bitcast %union.anon* %119 to i16*, !dbg !2075
  %120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2076
  %121 = getelementptr inbounds %struct.GPR, %struct.GPR* %120, i32 0, i32 23, !dbg !2077
  %122 = getelementptr inbounds %struct.Reg, %struct.Reg* %121, i32 0, i32 0, !dbg !2078
  %R11W = bitcast %union.anon* %122 to i16*, !dbg !2078
  %123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2079
  %124 = getelementptr inbounds %struct.GPR, %struct.GPR* %123, i32 0, i32 25, !dbg !2080
  %125 = getelementptr inbounds %struct.Reg, %struct.Reg* %124, i32 0, i32 0, !dbg !2081
  %R12W = bitcast %union.anon* %125 to i16*, !dbg !2081
  %126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2082
  %127 = getelementptr inbounds %struct.GPR, %struct.GPR* %126, i32 0, i32 27, !dbg !2083
  %128 = getelementptr inbounds %struct.Reg, %struct.Reg* %127, i32 0, i32 0, !dbg !2084
  %R13W = bitcast %union.anon* %128 to i16*, !dbg !2084
  %129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2085
  %130 = getelementptr inbounds %struct.GPR, %struct.GPR* %129, i32 0, i32 29, !dbg !2086
  %131 = getelementptr inbounds %struct.Reg, %struct.Reg* %130, i32 0, i32 0, !dbg !2087
  %R14W = bitcast %union.anon* %131 to i16*, !dbg !2087
  %132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2088
  %133 = getelementptr inbounds %struct.GPR, %struct.GPR* %132, i32 0, i32 31, !dbg !2089
  %134 = getelementptr inbounds %struct.Reg, %struct.Reg* %133, i32 0, i32 0, !dbg !2090
  %R15W = bitcast %union.anon* %134 to i16*, !dbg !2090
  %135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2091
  %136 = getelementptr inbounds %struct.GPR, %struct.GPR* %135, i32 0, i32 33, !dbg !2092
  %137 = getelementptr inbounds %struct.Reg, %struct.Reg* %136, i32 0, i32 0, !dbg !2093
  %IP = bitcast %union.anon* %137 to i16*, !dbg !2093
  %138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2094
  %139 = getelementptr inbounds %struct.GPR, %struct.GPR* %138, i32 0, i32 1, !dbg !2095
  %140 = getelementptr inbounds %struct.Reg, %struct.Reg* %139, i32 0, i32 0, !dbg !2096
  %EAX = bitcast %union.anon* %140 to i32*, !dbg !2096
  %141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2097
  %142 = getelementptr inbounds %struct.GPR, %struct.GPR* %141, i32 0, i32 3, !dbg !2098
  %143 = getelementptr inbounds %struct.Reg, %struct.Reg* %142, i32 0, i32 0, !dbg !2099
  %EBX = bitcast %union.anon* %143 to i32*, !dbg !2099
  %144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2100
  %145 = getelementptr inbounds %struct.GPR, %struct.GPR* %144, i32 0, i32 5, !dbg !2101
  %146 = getelementptr inbounds %struct.Reg, %struct.Reg* %145, i32 0, i32 0, !dbg !2102
  %ECX = bitcast %union.anon* %146 to i32*, !dbg !2102
  %147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2103
  %148 = getelementptr inbounds %struct.GPR, %struct.GPR* %147, i32 0, i32 7, !dbg !2104
  %149 = getelementptr inbounds %struct.Reg, %struct.Reg* %148, i32 0, i32 0, !dbg !2105
  %EDX = bitcast %union.anon* %149 to i32*, !dbg !2105
  %150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2106
  %151 = getelementptr inbounds %struct.GPR, %struct.GPR* %150, i32 0, i32 9, !dbg !2107
  %152 = getelementptr inbounds %struct.Reg, %struct.Reg* %151, i32 0, i32 0, !dbg !2108
  %ESI = bitcast %union.anon* %152 to i32*, !dbg !2108
  %153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2109
  %154 = getelementptr inbounds %struct.GPR, %struct.GPR* %153, i32 0, i32 11, !dbg !2110
  %155 = getelementptr inbounds %struct.Reg, %struct.Reg* %154, i32 0, i32 0, !dbg !2111
  %EDI = bitcast %union.anon* %155 to i32*, !dbg !2111
  %156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2112
  %157 = getelementptr inbounds %struct.GPR, %struct.GPR* %156, i32 0, i32 13, !dbg !2113
  %158 = getelementptr inbounds %struct.Reg, %struct.Reg* %157, i32 0, i32 0, !dbg !2114
  %ESP = bitcast %union.anon* %158 to i32*, !dbg !2114
  %159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2115
  %160 = getelementptr inbounds %struct.GPR, %struct.GPR* %159, i32 0, i32 15, !dbg !2116
  %161 = getelementptr inbounds %struct.Reg, %struct.Reg* %160, i32 0, i32 0, !dbg !2117
  %EBP = bitcast %union.anon* %161 to i32*, !dbg !2117
  %162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2118
  %163 = getelementptr inbounds %struct.GPR, %struct.GPR* %162, i32 0, i32 33, !dbg !2119
  %164 = getelementptr inbounds %struct.Reg, %struct.Reg* %163, i32 0, i32 0, !dbg !2120
  %EIP = bitcast %union.anon* %164 to i32*, !dbg !2120
  %165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2121
  %166 = getelementptr inbounds %struct.GPR, %struct.GPR* %165, i32 0, i32 17, !dbg !2122
  %167 = getelementptr inbounds %struct.Reg, %struct.Reg* %166, i32 0, i32 0, !dbg !2123
  %R8D = bitcast %union.anon* %167 to i32*, !dbg !2123
  %168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2124
  %169 = getelementptr inbounds %struct.GPR, %struct.GPR* %168, i32 0, i32 19, !dbg !2125
  %170 = getelementptr inbounds %struct.Reg, %struct.Reg* %169, i32 0, i32 0, !dbg !2126
  %R9D = bitcast %union.anon* %170 to i32*, !dbg !2126
  %171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2127
  %172 = getelementptr inbounds %struct.GPR, %struct.GPR* %171, i32 0, i32 21, !dbg !2128
  %173 = getelementptr inbounds %struct.Reg, %struct.Reg* %172, i32 0, i32 0, !dbg !2129
  %R10D = bitcast %union.anon* %173 to i32*, !dbg !2129
  %174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2130
  %175 = getelementptr inbounds %struct.GPR, %struct.GPR* %174, i32 0, i32 23, !dbg !2131
  %176 = getelementptr inbounds %struct.Reg, %struct.Reg* %175, i32 0, i32 0, !dbg !2132
  %R11D = bitcast %union.anon* %176 to i32*, !dbg !2132
  %177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2133
  %178 = getelementptr inbounds %struct.GPR, %struct.GPR* %177, i32 0, i32 25, !dbg !2134
  %179 = getelementptr inbounds %struct.Reg, %struct.Reg* %178, i32 0, i32 0, !dbg !2135
  %R12D = bitcast %union.anon* %179 to i32*, !dbg !2135
  %180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2136
  %181 = getelementptr inbounds %struct.GPR, %struct.GPR* %180, i32 0, i32 27, !dbg !2137
  %182 = getelementptr inbounds %struct.Reg, %struct.Reg* %181, i32 0, i32 0, !dbg !2138
  %R13D = bitcast %union.anon* %182 to i32*, !dbg !2138
  %183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2139
  %184 = getelementptr inbounds %struct.GPR, %struct.GPR* %183, i32 0, i32 29, !dbg !2140
  %185 = getelementptr inbounds %struct.Reg, %struct.Reg* %184, i32 0, i32 0, !dbg !2141
  %R14D = bitcast %union.anon* %185 to i32*, !dbg !2141
  %186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2142
  %187 = getelementptr inbounds %struct.GPR, %struct.GPR* %186, i32 0, i32 31, !dbg !2143
  %188 = getelementptr inbounds %struct.Reg, %struct.Reg* %187, i32 0, i32 0, !dbg !2144
  %R15D = bitcast %union.anon* %188 to i32*, !dbg !2144
  %189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2145
  %190 = getelementptr inbounds %struct.GPR, %struct.GPR* %189, i32 0, i32 1, !dbg !2146
  %191 = getelementptr inbounds %struct.Reg, %struct.Reg* %190, i32 0, i32 0, !dbg !2147
  %RAX = bitcast %union.anon* %191 to i64*, !dbg !2147
  %192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2148
  %193 = getelementptr inbounds %struct.GPR, %struct.GPR* %192, i32 0, i32 3, !dbg !2149
  %194 = getelementptr inbounds %struct.Reg, %struct.Reg* %193, i32 0, i32 0, !dbg !2150
  %RBX = bitcast %union.anon* %194 to i64*, !dbg !2150
  %195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2151
  %196 = getelementptr inbounds %struct.GPR, %struct.GPR* %195, i32 0, i32 5, !dbg !2152
  %197 = getelementptr inbounds %struct.Reg, %struct.Reg* %196, i32 0, i32 0, !dbg !2153
  %RCX = bitcast %union.anon* %197 to i64*, !dbg !2153
  %198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2154
  %199 = getelementptr inbounds %struct.GPR, %struct.GPR* %198, i32 0, i32 7, !dbg !2155
  %200 = getelementptr inbounds %struct.Reg, %struct.Reg* %199, i32 0, i32 0, !dbg !2156
  %RDX = bitcast %union.anon* %200 to i64*, !dbg !2156
  %201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2157
  %202 = getelementptr inbounds %struct.GPR, %struct.GPR* %201, i32 0, i32 9, !dbg !2158
  %203 = getelementptr inbounds %struct.Reg, %struct.Reg* %202, i32 0, i32 0, !dbg !2159
  %RSI = bitcast %union.anon* %203 to i64*, !dbg !2159
  %204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2160
  %205 = getelementptr inbounds %struct.GPR, %struct.GPR* %204, i32 0, i32 11, !dbg !2161
  %206 = getelementptr inbounds %struct.Reg, %struct.Reg* %205, i32 0, i32 0, !dbg !2162
  %RDI = bitcast %union.anon* %206 to i64*, !dbg !2162
  %207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2163
  %208 = getelementptr inbounds %struct.GPR, %struct.GPR* %207, i32 0, i32 13, !dbg !2164
  %209 = getelementptr inbounds %struct.Reg, %struct.Reg* %208, i32 0, i32 0, !dbg !2165
  %RSP = bitcast %union.anon* %209 to i64*, !dbg !2165
  %210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2166
  %211 = getelementptr inbounds %struct.GPR, %struct.GPR* %210, i32 0, i32 15, !dbg !2167
  %212 = getelementptr inbounds %struct.Reg, %struct.Reg* %211, i32 0, i32 0, !dbg !2168
  %RBP = bitcast %union.anon* %212 to i64*, !dbg !2168
  %213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2169
  %214 = getelementptr inbounds %struct.GPR, %struct.GPR* %213, i32 0, i32 17, !dbg !2170
  %215 = getelementptr inbounds %struct.Reg, %struct.Reg* %214, i32 0, i32 0, !dbg !2171
  %R8 = bitcast %union.anon* %215 to i64*, !dbg !2171
  %216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2172
  %217 = getelementptr inbounds %struct.GPR, %struct.GPR* %216, i32 0, i32 19, !dbg !2173
  %218 = getelementptr inbounds %struct.Reg, %struct.Reg* %217, i32 0, i32 0, !dbg !2174
  %R9 = bitcast %union.anon* %218 to i64*, !dbg !2174
  %219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2175
  %220 = getelementptr inbounds %struct.GPR, %struct.GPR* %219, i32 0, i32 21, !dbg !2176
  %221 = getelementptr inbounds %struct.Reg, %struct.Reg* %220, i32 0, i32 0, !dbg !2177
  %R10 = bitcast %union.anon* %221 to i64*, !dbg !2177
  %222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2178
  %223 = getelementptr inbounds %struct.GPR, %struct.GPR* %222, i32 0, i32 23, !dbg !2179
  %224 = getelementptr inbounds %struct.Reg, %struct.Reg* %223, i32 0, i32 0, !dbg !2180
  %R11 = bitcast %union.anon* %224 to i64*, !dbg !2180
  %225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2181
  %226 = getelementptr inbounds %struct.GPR, %struct.GPR* %225, i32 0, i32 25, !dbg !2182
  %227 = getelementptr inbounds %struct.Reg, %struct.Reg* %226, i32 0, i32 0, !dbg !2183
  %R12 = bitcast %union.anon* %227 to i64*, !dbg !2183
  %228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2184
  %229 = getelementptr inbounds %struct.GPR, %struct.GPR* %228, i32 0, i32 27, !dbg !2185
  %230 = getelementptr inbounds %struct.Reg, %struct.Reg* %229, i32 0, i32 0, !dbg !2186
  %R13 = bitcast %union.anon* %230 to i64*, !dbg !2186
  %231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2187
  %232 = getelementptr inbounds %struct.GPR, %struct.GPR* %231, i32 0, i32 29, !dbg !2188
  %233 = getelementptr inbounds %struct.Reg, %struct.Reg* %232, i32 0, i32 0, !dbg !2189
  %R14 = bitcast %union.anon* %233 to i64*, !dbg !2189
  %234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2190
  %235 = getelementptr inbounds %struct.GPR, %struct.GPR* %234, i32 0, i32 31, !dbg !2191
  %236 = getelementptr inbounds %struct.Reg, %struct.Reg* %235, i32 0, i32 0, !dbg !2192
  %R15 = bitcast %union.anon* %236 to i64*, !dbg !2192
  %237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2193
  %238 = getelementptr inbounds %struct.GPR, %struct.GPR* %237, i32 0, i32 33, !dbg !2194
  %239 = getelementptr inbounds %struct.Reg, %struct.Reg* %238, i32 0, i32 0, !dbg !2195
  %RIP = bitcast %union.anon* %239 to i64*, !dbg !2195
  %240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4, !dbg !2196
  %241 = getelementptr inbounds %struct.Segments, %struct.Segments* %240, i32 0, i32 1, !dbg !2197
  %SS = bitcast %union.SegmentSelector* %241 to i16*, !dbg !2198
  %242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4, !dbg !2199
  %243 = getelementptr inbounds %struct.Segments, %struct.Segments* %242, i32 0, i32 3, !dbg !2200
  %ES = bitcast %union.SegmentSelector* %243 to i16*, !dbg !2201
  %244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4, !dbg !2202
  %245 = getelementptr inbounds %struct.Segments, %struct.Segments* %244, i32 0, i32 5, !dbg !2203
  %GS = bitcast %union.SegmentSelector* %245 to i16*, !dbg !2204
  %246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4, !dbg !2205
  %247 = getelementptr inbounds %struct.Segments, %struct.Segments* %246, i32 0, i32 7, !dbg !2206
  %FS = bitcast %union.SegmentSelector* %247 to i16*, !dbg !2207
  %248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4, !dbg !2208
  %249 = getelementptr inbounds %struct.Segments, %struct.Segments* %248, i32 0, i32 9, !dbg !2209
  %DS = bitcast %union.SegmentSelector* %249 to i16*, !dbg !2210
  %250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4, !dbg !2211
  %251 = getelementptr inbounds %struct.Segments, %struct.Segments* %250, i32 0, i32 11, !dbg !2212
  %CS = bitcast %union.SegmentSelector* %251 to i16*, !dbg !2213
  %252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5, !dbg !2214
  %253 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %252, i32 0, i32 5, !dbg !2215
  %254 = getelementptr inbounds %struct.Reg, %struct.Reg* %253, i32 0, i32 0, !dbg !2216
  %GS_BASE = bitcast %union.anon* %254 to i64*, !dbg !2216
  %255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5, !dbg !2217
  %256 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %255, i32 0, i32 7, !dbg !2218
  %257 = getelementptr inbounds %struct.Reg, %struct.Reg* %256, i32 0, i32 0, !dbg !2219
  %FS_BASE = bitcast %union.anon* %257 to i64*, !dbg !2219
  %258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2220
  %259 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %258, i64 0, i64 0, !dbg !2221
  %YMM0 = bitcast %union.VectorReg* %259 to %"class.std::bitset"*, !dbg !2222
  %260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2223
  %261 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %260, i64 0, i64 1, !dbg !2224
  %YMM1 = bitcast %union.VectorReg* %261 to %"class.std::bitset"*, !dbg !2225
  %262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2226
  %263 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %262, i64 0, i64 2, !dbg !2227
  %YMM2 = bitcast %union.VectorReg* %263 to %"class.std::bitset"*, !dbg !2228
  %264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2229
  %265 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %264, i64 0, i64 3, !dbg !2230
  %YMM3 = bitcast %union.VectorReg* %265 to %"class.std::bitset"*, !dbg !2231
  %266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2232
  %267 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %266, i64 0, i64 4, !dbg !2233
  %YMM4 = bitcast %union.VectorReg* %267 to %"class.std::bitset"*, !dbg !2234
  %268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2235
  %269 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %268, i64 0, i64 5, !dbg !2236
  %YMM5 = bitcast %union.VectorReg* %269 to %"class.std::bitset"*, !dbg !2237
  %270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2238
  %271 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %270, i64 0, i64 6, !dbg !2239
  %YMM6 = bitcast %union.VectorReg* %271 to %"class.std::bitset"*, !dbg !2240
  %272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2241
  %273 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %272, i64 0, i64 7, !dbg !2242
  %YMM7 = bitcast %union.VectorReg* %273 to %"class.std::bitset"*, !dbg !2243
  %274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2244
  %275 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %274, i64 0, i64 8, !dbg !2245
  %YMM8 = bitcast %union.VectorReg* %275 to %"class.std::bitset"*, !dbg !2246
  %276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2247
  %277 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %276, i64 0, i64 9, !dbg !2248
  %YMM9 = bitcast %union.VectorReg* %277 to %"class.std::bitset"*, !dbg !2249
  %278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2250
  %279 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %278, i64 0, i64 10, !dbg !2251
  %YMM10 = bitcast %union.VectorReg* %279 to %"class.std::bitset"*, !dbg !2252
  %280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2253
  %281 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %280, i64 0, i64 11, !dbg !2254
  %YMM11 = bitcast %union.VectorReg* %281 to %"class.std::bitset"*, !dbg !2255
  %282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2256
  %283 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %282, i64 0, i64 12, !dbg !2257
  %YMM12 = bitcast %union.VectorReg* %283 to %"class.std::bitset"*, !dbg !2258
  %284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2259
  %285 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %284, i64 0, i64 13, !dbg !2260
  %YMM13 = bitcast %union.VectorReg* %285 to %"class.std::bitset"*, !dbg !2261
  %286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2262
  %287 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %286, i64 0, i64 14, !dbg !2263
  %YMM14 = bitcast %union.VectorReg* %287 to %"class.std::bitset"*, !dbg !2264
  %288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2265
  %289 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %288, i64 0, i64 15, !dbg !2266
  %YMM15 = bitcast %union.VectorReg* %289 to %"class.std::bitset"*, !dbg !2267
  %290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2268
  %291 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %290, i64 0, i64 0, !dbg !2269
  %XMM0 = bitcast %union.VectorReg* %291 to %union.vec128_t*, !dbg !2270
  %292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2271
  %293 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %292, i64 0, i64 1, !dbg !2272
  %XMM1 = bitcast %union.VectorReg* %293 to %union.vec128_t*, !dbg !2273
  %294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2274
  %295 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %294, i64 0, i64 2, !dbg !2275
  %XMM2 = bitcast %union.VectorReg* %295 to %union.vec128_t*, !dbg !2276
  %296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2277
  %297 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %296, i64 0, i64 3, !dbg !2278
  %XMM3 = bitcast %union.VectorReg* %297 to %union.vec128_t*, !dbg !2279
  %298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2280
  %299 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %298, i64 0, i64 4, !dbg !2281
  %XMM4 = bitcast %union.VectorReg* %299 to %union.vec128_t*, !dbg !2282
  %300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2283
  %301 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %300, i64 0, i64 5, !dbg !2284
  %XMM5 = bitcast %union.VectorReg* %301 to %union.vec128_t*, !dbg !2285
  %302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2286
  %303 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %302, i64 0, i64 6, !dbg !2287
  %XMM6 = bitcast %union.VectorReg* %303 to %union.vec128_t*, !dbg !2288
  %304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2289
  %305 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %304, i64 0, i64 7, !dbg !2290
  %XMM7 = bitcast %union.VectorReg* %305 to %union.vec128_t*, !dbg !2291
  %306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2292
  %307 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %306, i64 0, i64 8, !dbg !2293
  %XMM8 = bitcast %union.VectorReg* %307 to %union.vec128_t*, !dbg !2294
  %308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2295
  %309 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %308, i64 0, i64 9, !dbg !2296
  %XMM9 = bitcast %union.VectorReg* %309 to %union.vec128_t*, !dbg !2297
  %310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2298
  %311 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %310, i64 0, i64 10, !dbg !2299
  %XMM10 = bitcast %union.VectorReg* %311 to %union.vec128_t*, !dbg !2300
  %312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2301
  %313 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %312, i64 0, i64 11, !dbg !2302
  %XMM11 = bitcast %union.VectorReg* %313 to %union.vec128_t*, !dbg !2303
  %314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2304
  %315 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %314, i64 0, i64 12, !dbg !2305
  %XMM12 = bitcast %union.VectorReg* %315 to %union.vec128_t*, !dbg !2306
  %316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2307
  %317 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %316, i64 0, i64 13, !dbg !2308
  %XMM13 = bitcast %union.VectorReg* %317 to %union.vec128_t*, !dbg !2309
  %318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2310
  %319 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %318, i64 0, i64 14, !dbg !2311
  %XMM14 = bitcast %union.VectorReg* %319 to %union.vec128_t*, !dbg !2312
  %320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2313
  %321 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %320, i64 0, i64 15, !dbg !2314
  %XMM15 = bitcast %union.VectorReg* %321 to %union.vec128_t*, !dbg !2315
  %322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7, !dbg !2316
  %323 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %322, i32 0, i32 0, !dbg !2317
  %324 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %323, i64 0, i64 0, !dbg !2318
  %ST0 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %324, i32 0, i32 1, !dbg !2319
  %325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7, !dbg !2320
  %326 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %325, i32 0, i32 0, !dbg !2321
  %327 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %326, i64 0, i64 1, !dbg !2322
  %ST1 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %327, i32 0, i32 1, !dbg !2323
  %328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7, !dbg !2324
  %329 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %328, i32 0, i32 0, !dbg !2325
  %330 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %329, i64 0, i64 2, !dbg !2326
  %ST2 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %330, i32 0, i32 1, !dbg !2327
  %331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7, !dbg !2328
  %332 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %331, i32 0, i32 0, !dbg !2329
  %333 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %332, i64 0, i64 3, !dbg !2330
  %ST3 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %333, i32 0, i32 1, !dbg !2331
  %334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7, !dbg !2332
  %335 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %334, i32 0, i32 0, !dbg !2333
  %336 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %335, i64 0, i64 4, !dbg !2334
  %ST4 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %336, i32 0, i32 1, !dbg !2335
  %337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7, !dbg !2336
  %338 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %337, i32 0, i32 0, !dbg !2337
  %339 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %338, i64 0, i64 5, !dbg !2338
  %ST5 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %339, i32 0, i32 1, !dbg !2339
  %340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7, !dbg !2340
  %341 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %340, i32 0, i32 0, !dbg !2341
  %342 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %341, i64 0, i64 6, !dbg !2342
  %ST6 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %342, i32 0, i32 1, !dbg !2343
  %343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7, !dbg !2344
  %344 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %343, i32 0, i32 0, !dbg !2345
  %345 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %344, i64 0, i64 7, !dbg !2346
  %ST7 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %345, i32 0, i32 1, !dbg !2347
  %346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8, !dbg !2348
  %347 = getelementptr inbounds %struct.MMX, %struct.MMX* %346, i32 0, i32 0, !dbg !2349
  %348 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %347, i64 0, i64 0, !dbg !2350
  %349 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %348, i32 0, i32 1, !dbg !2351
  %350 = bitcast %union.vec64_t* %349 to %struct.uint64v1_t*, !dbg !2352
  %351 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %350, i32 0, i32 0, !dbg !2353
  %MM0 = getelementptr inbounds [1 x i64], [1 x i64]* %351, i64 0, i64 0, !dbg !2350
  %352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8, !dbg !2354
  %353 = getelementptr inbounds %struct.MMX, %struct.MMX* %352, i32 0, i32 0, !dbg !2355
  %354 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %353, i64 0, i64 1, !dbg !2356
  %355 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %354, i32 0, i32 1, !dbg !2357
  %356 = bitcast %union.vec64_t* %355 to %struct.uint64v1_t*, !dbg !2358
  %357 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %356, i32 0, i32 0, !dbg !2359
  %MM1 = getelementptr inbounds [1 x i64], [1 x i64]* %357, i64 0, i64 0, !dbg !2356
  %358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8, !dbg !2360
  %359 = getelementptr inbounds %struct.MMX, %struct.MMX* %358, i32 0, i32 0, !dbg !2361
  %360 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %359, i64 0, i64 2, !dbg !2362
  %361 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %360, i32 0, i32 1, !dbg !2363
  %362 = bitcast %union.vec64_t* %361 to %struct.uint64v1_t*, !dbg !2364
  %363 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %362, i32 0, i32 0, !dbg !2365
  %MM2 = getelementptr inbounds [1 x i64], [1 x i64]* %363, i64 0, i64 0, !dbg !2362
  %364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8, !dbg !2366
  %365 = getelementptr inbounds %struct.MMX, %struct.MMX* %364, i32 0, i32 0, !dbg !2367
  %366 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %365, i64 0, i64 3, !dbg !2368
  %367 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %366, i32 0, i32 1, !dbg !2369
  %368 = bitcast %union.vec64_t* %367 to %struct.uint64v1_t*, !dbg !2370
  %369 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %368, i32 0, i32 0, !dbg !2371
  %MM3 = getelementptr inbounds [1 x i64], [1 x i64]* %369, i64 0, i64 0, !dbg !2368
  %370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8, !dbg !2372
  %371 = getelementptr inbounds %struct.MMX, %struct.MMX* %370, i32 0, i32 0, !dbg !2373
  %372 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %371, i64 0, i64 4, !dbg !2374
  %373 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %372, i32 0, i32 1, !dbg !2375
  %374 = bitcast %union.vec64_t* %373 to %struct.uint64v1_t*, !dbg !2376
  %375 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %374, i32 0, i32 0, !dbg !2377
  %MM4 = getelementptr inbounds [1 x i64], [1 x i64]* %375, i64 0, i64 0, !dbg !2374
  %376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8, !dbg !2378
  %377 = getelementptr inbounds %struct.MMX, %struct.MMX* %376, i32 0, i32 0, !dbg !2379
  %378 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %377, i64 0, i64 5, !dbg !2380
  %379 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %378, i32 0, i32 1, !dbg !2381
  %380 = bitcast %union.vec64_t* %379 to %struct.uint64v1_t*, !dbg !2382
  %381 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %380, i32 0, i32 0, !dbg !2383
  %MM5 = getelementptr inbounds [1 x i64], [1 x i64]* %381, i64 0, i64 0, !dbg !2380
  %382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8, !dbg !2384
  %383 = getelementptr inbounds %struct.MMX, %struct.MMX* %382, i32 0, i32 0, !dbg !2385
  %384 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %383, i64 0, i64 6, !dbg !2386
  %385 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %384, i32 0, i32 1, !dbg !2387
  %386 = bitcast %union.vec64_t* %385 to %struct.uint64v1_t*, !dbg !2388
  %387 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %386, i32 0, i32 0, !dbg !2389
  %MM6 = getelementptr inbounds [1 x i64], [1 x i64]* %387, i64 0, i64 0, !dbg !2386
  %388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8, !dbg !2390
  %389 = getelementptr inbounds %struct.MMX, %struct.MMX* %388, i32 0, i32 0, !dbg !2391
  %390 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %389, i64 0, i64 7, !dbg !2392
  %391 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %390, i32 0, i32 1, !dbg !2393
  %392 = bitcast %union.vec64_t* %391 to %struct.uint64v1_t*, !dbg !2394
  %393 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %392, i32 0, i32 0, !dbg !2395
  %MM7 = getelementptr inbounds [1 x i64], [1 x i64]* %393, i64 0, i64 0, !dbg !2392
  %394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2, !dbg !2396
  %AF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %394, i32 0, i32 5, !dbg !2397
  %395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2, !dbg !2398
  %CF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %395, i32 0, i32 1, !dbg !2399
  %396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2, !dbg !2400
  %DF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %396, i32 0, i32 11, !dbg !2401
  %397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2, !dbg !2402
  %OF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %397, i32 0, i32 13, !dbg !2403
  %398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2, !dbg !2404
  %PF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %398, i32 0, i32 3, !dbg !2405
  %399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2, !dbg !2406
  %SF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %399, i32 0, i32 9, !dbg !2407
  %400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2, !dbg !2408
  %ZF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %400, i32 0, i32 7, !dbg !2409
  store i64* @DR0, i64** %_DR0, align 8, !dbg !2410
  store i64* @DR1, i64** %_DR1, align 8, !dbg !2411
  store i64* @DR2, i64** %_DR2, align 8, !dbg !2412
  store i64* @DR3, i64** %_DR3, align 8, !dbg !2413
  store i64* @DR4, i64** %_DR4, align 8, !dbg !2414
  store i64* @DR5, i64** %_DR5, align 8, !dbg !2415
  store i64* @DR6, i64** %_DR6, align 8, !dbg !2416
  store i64* @DR7, i64** %_DR7, align 8, !dbg !2417
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0, align 8, !dbg !2418
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1, align 8, !dbg !2419
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2, align 8, !dbg !2420
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3, align 8, !dbg !2421
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4, align 8, !dbg !2422
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8, align 8, !dbg !2423
  ret %struct.Memory* %2, !dbg !2424
}

; Function Attrs: noduplicate noinline nounwind optnone
define void @__remill_intrinsics() #9 !dbg !2425 {
  ret void, !dbg !2427
}

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_barrier_load_store(%struct.Memory*) #10

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_atomic_begin(%struct.Memory*) #10

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_atomic_end(%struct.Memory*) #10

declare %struct.Memory* @__remill_fetch_and_sub_8(%struct.Memory*, i64, i8* dereferenceable(1)) #11

declare %struct.Memory* @__remill_fetch_and_sub_16(%struct.Memory*, i64, i16* dereferenceable(2)) #11

declare %struct.Memory* @__remill_fetch_and_sub_32(%struct.Memory*, i64, i32* dereferenceable(4)) #11

declare %struct.Memory* @__remill_fetch_and_sub_64(%struct.Memory*, i64, i64* dereferenceable(8)) #11

declare %struct.Memory* @__remill_fetch_and_or_8(%struct.Memory*, i64, i8* dereferenceable(1)) #11

declare %struct.Memory* @__remill_fetch_and_or_16(%struct.Memory*, i64, i16* dereferenceable(2)) #11

declare %struct.Memory* @__remill_fetch_and_or_32(%struct.Memory*, i64, i32* dereferenceable(4)) #11

declare %struct.Memory* @__remill_fetch_and_or_64(%struct.Memory*, i64, i64* dereferenceable(8)) #11

declare %struct.Memory* @__remill_fetch_and_and_8(%struct.Memory*, i64, i8* dereferenceable(1)) #11

declare %struct.Memory* @__remill_fetch_and_and_16(%struct.Memory*, i64, i16* dereferenceable(2)) #11

declare %struct.Memory* @__remill_fetch_and_and_32(%struct.Memory*, i64, i32* dereferenceable(4)) #11

declare %struct.Memory* @__remill_fetch_and_and_64(%struct.Memory*, i64, i64* dereferenceable(8)) #11

declare %struct.Memory* @__remill_fetch_and_xor_8(%struct.Memory*, i64, i8* dereferenceable(1)) #11

declare %struct.Memory* @__remill_fetch_and_xor_16(%struct.Memory*, i64, i16* dereferenceable(2)) #11

declare %struct.Memory* @__remill_fetch_and_xor_32(%struct.Memory*, i64, i32* dereferenceable(4)) #11

declare %struct.Memory* @__remill_fetch_and_xor_64(%struct.Memory*, i64, i64* dereferenceable(8)) #11

; Function Attrs: noduplicate noinline nounwind optnone
declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*) #12

; Function Attrs: noduplicate noinline nounwind optnone
declare %struct.Memory* @__remill_function_return(%struct.State* dereferenceable(3376), i64, %struct.Memory*) #12

; Function Attrs: noduplicate noinline nounwind optnone
declare %struct.Memory* @__remill_jump(%struct.State* dereferenceable(3376), i64, %struct.Memory*) #12

; Function Attrs: noduplicate noinline nounwind optnone
declare %struct.Memory* @__remill_missing_block(%struct.State* dereferenceable(3376), i64, %struct.Memory*) #12

; Function Attrs: noduplicate noinline nounwind optnone
declare %struct.Memory* @__remill_async_hyper_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*) #12

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare zeroext i16 @__remill_undefined_16() #10

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare i32 @__remill_undefined_32() #10

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare float @__remill_undefined_f32() #10

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: noinline
declare extern_weak x86_64_sysvcc i64 @strncmp(i64, i64, i64) #13

; Function Attrs: noinline
declare extern_weak x86_64_sysvcc i64 @__gmon_start__() #13

; Function Attrs: noinline
declare extern_weak x86_64_sysvcc i64 @log(i64) #13

; Function Attrs: noinline
declare extern_weak x86_64_sysvcc i64 @printf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #13

; Function Attrs: noinline
declare extern_weak x86_64_sysvcc i64 @__libc_start_main(i64, i64, i64, i64, i64, i64, i64, i64) #13

; Function Attrs: noinline
declare extern_weak x86_64_sysvcc i64 @exp(i64) #13

; Function Attrs: noinline
declare extern_weak x86_64_sysvcc i64 @fprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #13

; Function Attrs: noinline
declare extern_weak x86_64_sysvcc i64 @time(i64) #13

; Function Attrs: noinline
declare extern_weak x86_64_sysvcc i64 @atol(i64) #13

; Function Attrs: noinline
define %struct.Memory* @sub_400720__start(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_400720:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EBP = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 5
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RCX = bitcast %union.anon* %14 to i64*
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16 = getelementptr inbounds %struct.GPR, %struct.GPR* %15, i32 0, i32 7
  %17 = getelementptr inbounds %struct.Reg, %struct.Reg* %16, i32 0, i32 0
  %RDX = bitcast %union.anon* %17 to i64*
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19 = getelementptr inbounds %struct.GPR, %struct.GPR* %18, i32 0, i32 9
  %20 = getelementptr inbounds %struct.Reg, %struct.Reg* %19, i32 0, i32 0
  %RSI = bitcast %union.anon* %20 to i64*
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22 = getelementptr inbounds %struct.GPR, %struct.GPR* %21, i32 0, i32 11
  %23 = getelementptr inbounds %struct.Reg, %struct.Reg* %22, i32 0, i32 0
  %RDI = bitcast %union.anon* %23 to i64*
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25 = getelementptr inbounds %struct.GPR, %struct.GPR* %24, i32 0, i32 13
  %26 = getelementptr inbounds %struct.Reg, %struct.Reg* %25, i32 0, i32 0
  %RSP = bitcast %union.anon* %26 to i64*
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28 = getelementptr inbounds %struct.GPR, %struct.GPR* %27, i32 0, i32 15
  %29 = getelementptr inbounds %struct.Reg, %struct.Reg* %28, i32 0, i32 0
  %RBP = bitcast %union.anon* %29 to i64*
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31 = getelementptr inbounds %struct.GPR, %struct.GPR* %30, i32 0, i32 17
  %32 = getelementptr inbounds %struct.Reg, %struct.Reg* %31, i32 0, i32 0
  %R8 = bitcast %union.anon* %32 to i64*
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34 = getelementptr inbounds %struct.GPR, %struct.GPR* %33, i32 0, i32 19
  %35 = getelementptr inbounds %struct.Reg, %struct.Reg* %34, i32 0, i32 0
  %R9 = bitcast %union.anon* %35 to i64*
  %36 = load i64, i64* %RBP
  %37 = load i32, i32* %EBP
  %38 = zext i32 %37 to i64
  %39 = load i64, i64* %PC
  %40 = add i64 %39, 2
  store i64 %40, i64* %PC
  %41 = xor i64 %38, %36
  %42 = trunc i64 %41 to i32
  %43 = and i64 %41, 4294967295
  store i64 %43, i64* %RBP, align 8, !tbaa !2428
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %44, align 1, !tbaa !2432
  %45 = and i32 %42, 255
  %46 = call i32 @llvm.ctpop.i32(i32 %45) #17
  %47 = trunc i32 %46 to i8
  %48 = and i8 %47, 1
  %49 = xor i8 %48, 1
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %49, i8* %50, align 1, !tbaa !2446
  %51 = icmp eq i32 %42, 0
  %52 = zext i1 %51 to i8
  %53 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %52, i8* %53, align 1, !tbaa !2447
  %54 = lshr i32 %42, 31
  %55 = trunc i32 %54 to i8
  %56 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %55, i8* %56, align 1, !tbaa !2448
  %57 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %57, align 1, !tbaa !2449
  %58 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %58, align 1, !tbaa !2450
  %59 = load i64, i64* %RDX
  %60 = load i64, i64* %PC
  %61 = add i64 %60, 3
  store i64 %61, i64* %PC
  store i64 %59, i64* %R9, align 8, !tbaa !2428
  %62 = load i64, i64* %PC
  %63 = add i64 %62, 1
  store i64 %63, i64* %PC
  %64 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %65 = load i64, i64* %64, align 8, !tbaa !2428
  %66 = add i64 %65, 8
  %67 = inttoptr i64 %65 to i64*
  %68 = load i64, i64* %67
  store i64 %68, i64* %RSI, align 8, !tbaa !2428
  store i64 %66, i64* %64, align 8, !tbaa !2428
  %69 = load i64, i64* %RSP
  %70 = load i64, i64* %PC
  %71 = add i64 %70, 3
  store i64 %71, i64* %PC
  store i64 %69, i64* %RDX, align 8, !tbaa !2428
  %72 = load i64, i64* %RSP
  %73 = load i64, i64* %PC
  %74 = add i64 %73, 4
  store i64 %74, i64* %PC
  %75 = and i64 -16, %72
  store i64 %75, i64* %RSP, align 8, !tbaa !2428
  %76 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %76, align 1, !tbaa !2432
  %77 = trunc i64 %75 to i32
  %78 = and i32 %77, 255
  %79 = call i32 @llvm.ctpop.i32(i32 %78) #17
  %80 = trunc i32 %79 to i8
  %81 = and i8 %80, 1
  %82 = xor i8 %81, 1
  %83 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %82, i8* %83, align 1, !tbaa !2446
  %84 = icmp eq i64 %75, 0
  %85 = zext i1 %84 to i8
  %86 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %85, i8* %86, align 1, !tbaa !2447
  %87 = lshr i64 %75, 63
  %88 = trunc i64 %87 to i8
  %89 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %88, i8* %89, align 1, !tbaa !2448
  %90 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %90, align 1, !tbaa !2449
  %91 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %91, align 1, !tbaa !2450
  %92 = load i64, i64* %RAX
  %93 = load i64, i64* %PC
  %94 = add i64 %93, 1
  store i64 %94, i64* %PC
  %95 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %96 = load i64, i64* %95, align 8, !tbaa !2428
  %97 = add i64 %96, -8
  %98 = inttoptr i64 %97 to i64*
  store i64 %92, i64* %98
  store i64 %97, i64* %95, align 8, !tbaa !2428
  %99 = load i64, i64* %RSP
  %100 = load i64, i64* %PC
  %101 = add i64 %100, 1
  store i64 %101, i64* %PC
  %102 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %103 = load i64, i64* %102, align 8, !tbaa !2428
  %104 = add i64 %103, -8
  %105 = inttoptr i64 %104 to i64*
  store i64 %99, i64* %105
  store i64 %104, i64* %102, align 8, !tbaa !2428
  %106 = load i64, i64* %PC
  %107 = add i64 %106, 7
  store i64 %107, i64* %PC
  store i64 ptrtoint (void ()* @callback_sub_4018a0___libc_csu_fini to i64), i64* %R8, align 8, !tbaa !2428
  %108 = load i64, i64* %PC
  %109 = add i64 %108, 7
  store i64 %109, i64* %PC
  store i64 ptrtoint (void ()* @callback_sub_401830___libc_csu_init to i64), i64* %RCX, align 8, !tbaa !2428
  %110 = load i64, i64* %PC
  %111 = add i64 %110, 7
  store i64 %111, i64* %PC
  store i64 ptrtoint (void ()* @main to i64), i64* %RDI, align 8, !tbaa !2428
  %112 = load i64, i64* %PC
  %113 = add i64 %112, 6
  %114 = load i64, i64* %PC
  %115 = add i64 %114, 6
  store i64 %115, i64* %PC
  %116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %117 = load i64, i64* %116, align 8, !tbaa !2428
  %118 = add i64 %117, -8
  %119 = inttoptr i64 %118 to i64*
  store i64 %113, i64* %119
  store i64 %118, i64* %116, align 8, !tbaa !2428
  %120 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %121 = load i64, i64* getelementptr inbounds (%seg_601ff0__got_type, %seg_601ff0__got_type* @seg_601ff0__got, i32 0, i32 0)
  store i64 %121, i64* %120, align 8, !tbaa !2428
  %122 = load i64, i64* %PC
  %123 = call %struct.Memory* @ext_602178___libc_start_main(%struct.State* %0, i64 %122, %struct.Memory* %2)
  %124 = load i64, i64* %PC
  %125 = add i64 %124, 1
  store i64 %125, i64* %PC
  %126 = load i64, i64* %PC
  %127 = tail call %struct.Memory* @__remill_error(%struct.State* %0, i64 %126, %struct.Memory* %123)
  ret %struct.Memory* %127
}

; Function Attrs: noinline
define %struct.Memory* @sub_4018a0___libc_csu_fini(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_4018a0:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 2
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10 = load i64, i64* %9, align 8, !tbaa !2428
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11
  store i64 %12, i64* %8, align 8, !tbaa !2428
  %13 = add i64 %10, 8
  store i64 %13, i64* %9, align 8, !tbaa !2428
  ret %struct.Memory* %2
}

; Function Attrs: noinline
define %struct.Memory* @sub_400810_main(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_400810:
  %state.i1432 = alloca %struct.State*, align 8
  %curr_pc.i1433 = alloca i64, align 8
  %memory.i1434 = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN.i1435 = alloca i8, align 1
  %SS_BASE.i1436 = alloca i64, align 8
  %ES_BASE.i1437 = alloca i64, align 8
  %DS_BASE.i1438 = alloca i64, align 8
  %CS_BASE.i1439 = alloca i64, align 8
  %STATE.i1440 = alloca %struct.State*, align 8
  %MEMORY.i1441 = alloca %struct.Memory*, align 8
  %_DR0.i1442 = alloca i64*, align 8
  %_DR1.i1443 = alloca i64*, align 8
  %_DR2.i1444 = alloca i64*, align 8
  %_DR3.i1445 = alloca i64*, align 8
  %_DR4.i1446 = alloca i64*, align 8
  %_DR5.i1447 = alloca i64*, align 8
  %_DR6.i1448 = alloca i64*, align 8
  %_DR7.i1449 = alloca i64*, align 8
  %CR0.i1450 = alloca i64*, align 8
  %CR1.i1451 = alloca i64*, align 8
  %CR2.i1452 = alloca i64*, align 8
  %CR3.i1453 = alloca i64*, align 8
  %CR4.i1454 = alloca i64*, align 8
  %CR8.i1455 = alloca i64*, align 8
  %state.i1273 = alloca %struct.State*, align 8
  %curr_pc.i1274 = alloca i64, align 8
  %memory.i1275 = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN.i1276 = alloca i8, align 1
  %SS_BASE.i1277 = alloca i64, align 8
  %ES_BASE.i1278 = alloca i64, align 8
  %DS_BASE.i1279 = alloca i64, align 8
  %CS_BASE.i1280 = alloca i64, align 8
  %STATE.i1281 = alloca %struct.State*, align 8
  %MEMORY.i1282 = alloca %struct.Memory*, align 8
  %_DR0.i1283 = alloca i64*, align 8
  %_DR1.i1284 = alloca i64*, align 8
  %_DR2.i1285 = alloca i64*, align 8
  %_DR3.i1286 = alloca i64*, align 8
  %_DR4.i1287 = alloca i64*, align 8
  %_DR5.i1288 = alloca i64*, align 8
  %_DR6.i1289 = alloca i64*, align 8
  %_DR7.i1290 = alloca i64*, align 8
  %CR0.i1291 = alloca i64*, align 8
  %CR1.i1292 = alloca i64*, align 8
  %CR2.i1293 = alloca i64*, align 8
  %CR3.i1294 = alloca i64*, align 8
  %CR4.i1295 = alloca i64*, align 8
  %CR8.i1296 = alloca i64*, align 8
  %state.i1114 = alloca %struct.State*, align 8
  %curr_pc.i1115 = alloca i64, align 8
  %memory.i1116 = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN.i1117 = alloca i8, align 1
  %SS_BASE.i1118 = alloca i64, align 8
  %ES_BASE.i1119 = alloca i64, align 8
  %DS_BASE.i1120 = alloca i64, align 8
  %CS_BASE.i1121 = alloca i64, align 8
  %STATE.i1122 = alloca %struct.State*, align 8
  %MEMORY.i1123 = alloca %struct.Memory*, align 8
  %_DR0.i1124 = alloca i64*, align 8
  %_DR1.i1125 = alloca i64*, align 8
  %_DR2.i1126 = alloca i64*, align 8
  %_DR3.i1127 = alloca i64*, align 8
  %_DR4.i1128 = alloca i64*, align 8
  %_DR5.i1129 = alloca i64*, align 8
  %_DR6.i1130 = alloca i64*, align 8
  %_DR7.i1131 = alloca i64*, align 8
  %CR0.i1132 = alloca i64*, align 8
  %CR1.i1133 = alloca i64*, align 8
  %CR2.i1134 = alloca i64*, align 8
  %CR3.i1135 = alloca i64*, align 8
  %CR4.i1136 = alloca i64*, align 8
  %CR8.i1137 = alloca i64*, align 8
  %state.i955 = alloca %struct.State*, align 8
  %curr_pc.i956 = alloca i64, align 8
  %memory.i957 = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN.i958 = alloca i8, align 1
  %SS_BASE.i959 = alloca i64, align 8
  %ES_BASE.i960 = alloca i64, align 8
  %DS_BASE.i961 = alloca i64, align 8
  %CS_BASE.i962 = alloca i64, align 8
  %STATE.i963 = alloca %struct.State*, align 8
  %MEMORY.i964 = alloca %struct.Memory*, align 8
  %_DR0.i965 = alloca i64*, align 8
  %_DR1.i966 = alloca i64*, align 8
  %_DR2.i967 = alloca i64*, align 8
  %_DR3.i968 = alloca i64*, align 8
  %_DR4.i969 = alloca i64*, align 8
  %_DR5.i970 = alloca i64*, align 8
  %_DR6.i971 = alloca i64*, align 8
  %_DR7.i972 = alloca i64*, align 8
  %CR0.i973 = alloca i64*, align 8
  %CR1.i974 = alloca i64*, align 8
  %CR2.i975 = alloca i64*, align 8
  %CR3.i976 = alloca i64*, align 8
  %CR4.i977 = alloca i64*, align 8
  %CR8.i978 = alloca i64*, align 8
  %state.i796 = alloca %struct.State*, align 8
  %curr_pc.i797 = alloca i64, align 8
  %memory.i798 = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN.i799 = alloca i8, align 1
  %SS_BASE.i800 = alloca i64, align 8
  %ES_BASE.i801 = alloca i64, align 8
  %DS_BASE.i802 = alloca i64, align 8
  %CS_BASE.i803 = alloca i64, align 8
  %STATE.i804 = alloca %struct.State*, align 8
  %MEMORY.i805 = alloca %struct.Memory*, align 8
  %_DR0.i806 = alloca i64*, align 8
  %_DR1.i807 = alloca i64*, align 8
  %_DR2.i808 = alloca i64*, align 8
  %_DR3.i809 = alloca i64*, align 8
  %_DR4.i810 = alloca i64*, align 8
  %_DR5.i811 = alloca i64*, align 8
  %_DR6.i812 = alloca i64*, align 8
  %_DR7.i813 = alloca i64*, align 8
  %CR0.i814 = alloca i64*, align 8
  %CR1.i815 = alloca i64*, align 8
  %CR2.i816 = alloca i64*, align 8
  %CR3.i817 = alloca i64*, align 8
  %CR4.i818 = alloca i64*, align 8
  %CR8.i819 = alloca i64*, align 8
  %state.i637 = alloca %struct.State*, align 8
  %curr_pc.i638 = alloca i64, align 8
  %memory.i639 = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN.i640 = alloca i8, align 1
  %SS_BASE.i641 = alloca i64, align 8
  %ES_BASE.i642 = alloca i64, align 8
  %DS_BASE.i643 = alloca i64, align 8
  %CS_BASE.i644 = alloca i64, align 8
  %STATE.i645 = alloca %struct.State*, align 8
  %MEMORY.i646 = alloca %struct.Memory*, align 8
  %_DR0.i647 = alloca i64*, align 8
  %_DR1.i648 = alloca i64*, align 8
  %_DR2.i649 = alloca i64*, align 8
  %_DR3.i650 = alloca i64*, align 8
  %_DR4.i651 = alloca i64*, align 8
  %_DR5.i652 = alloca i64*, align 8
  %_DR6.i653 = alloca i64*, align 8
  %_DR7.i654 = alloca i64*, align 8
  %CR0.i655 = alloca i64*, align 8
  %CR1.i656 = alloca i64*, align 8
  %CR2.i657 = alloca i64*, align 8
  %CR3.i658 = alloca i64*, align 8
  %CR4.i659 = alloca i64*, align 8
  %CR8.i660 = alloca i64*, align 8
  %state.i478 = alloca %struct.State*, align 8
  %curr_pc.i479 = alloca i64, align 8
  %memory.i480 = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN.i481 = alloca i8, align 1
  %SS_BASE.i482 = alloca i64, align 8
  %ES_BASE.i483 = alloca i64, align 8
  %DS_BASE.i484 = alloca i64, align 8
  %CS_BASE.i485 = alloca i64, align 8
  %STATE.i486 = alloca %struct.State*, align 8
  %MEMORY.i487 = alloca %struct.Memory*, align 8
  %_DR0.i488 = alloca i64*, align 8
  %_DR1.i489 = alloca i64*, align 8
  %_DR2.i490 = alloca i64*, align 8
  %_DR3.i491 = alloca i64*, align 8
  %_DR4.i492 = alloca i64*, align 8
  %_DR5.i493 = alloca i64*, align 8
  %_DR6.i494 = alloca i64*, align 8
  %_DR7.i495 = alloca i64*, align 8
  %CR0.i496 = alloca i64*, align 8
  %CR1.i497 = alloca i64*, align 8
  %CR2.i498 = alloca i64*, align 8
  %CR3.i499 = alloca i64*, align 8
  %CR4.i500 = alloca i64*, align 8
  %CR8.i501 = alloca i64*, align 8
  %state.i319 = alloca %struct.State*, align 8
  %curr_pc.i320 = alloca i64, align 8
  %memory.i321 = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN.i322 = alloca i8, align 1
  %SS_BASE.i323 = alloca i64, align 8
  %ES_BASE.i324 = alloca i64, align 8
  %DS_BASE.i325 = alloca i64, align 8
  %CS_BASE.i326 = alloca i64, align 8
  %STATE.i327 = alloca %struct.State*, align 8
  %MEMORY.i328 = alloca %struct.Memory*, align 8
  %_DR0.i329 = alloca i64*, align 8
  %_DR1.i330 = alloca i64*, align 8
  %_DR2.i331 = alloca i64*, align 8
  %_DR3.i332 = alloca i64*, align 8
  %_DR4.i333 = alloca i64*, align 8
  %_DR5.i334 = alloca i64*, align 8
  %_DR6.i335 = alloca i64*, align 8
  %_DR7.i336 = alloca i64*, align 8
  %CR0.i337 = alloca i64*, align 8
  %CR1.i338 = alloca i64*, align 8
  %CR2.i339 = alloca i64*, align 8
  %CR3.i340 = alloca i64*, align 8
  %CR4.i341 = alloca i64*, align 8
  %CR8.i342 = alloca i64*, align 8
  %state.i160 = alloca %struct.State*, align 8
  %curr_pc.i161 = alloca i64, align 8
  %memory.i162 = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN.i163 = alloca i8, align 1
  %SS_BASE.i164 = alloca i64, align 8
  %ES_BASE.i165 = alloca i64, align 8
  %DS_BASE.i166 = alloca i64, align 8
  %CS_BASE.i167 = alloca i64, align 8
  %STATE.i168 = alloca %struct.State*, align 8
  %MEMORY.i169 = alloca %struct.Memory*, align 8
  %_DR0.i170 = alloca i64*, align 8
  %_DR1.i171 = alloca i64*, align 8
  %_DR2.i172 = alloca i64*, align 8
  %_DR3.i173 = alloca i64*, align 8
  %_DR4.i174 = alloca i64*, align 8
  %_DR5.i175 = alloca i64*, align 8
  %_DR6.i176 = alloca i64*, align 8
  %_DR7.i177 = alloca i64*, align 8
  %CR0.i178 = alloca i64*, align 8
  %CR1.i179 = alloca i64*, align 8
  %CR2.i180 = alloca i64*, align 8
  %CR3.i181 = alloca i64*, align 8
  %CR4.i182 = alloca i64*, align 8
  %CR8.i183 = alloca i64*, align 8
  %state.i1 = alloca %struct.State*, align 8
  %curr_pc.i2 = alloca i64, align 8
  %memory.i3 = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN.i4 = alloca i8, align 1
  %SS_BASE.i5 = alloca i64, align 8
  %ES_BASE.i6 = alloca i64, align 8
  %DS_BASE.i7 = alloca i64, align 8
  %CS_BASE.i8 = alloca i64, align 8
  %STATE.i9 = alloca %struct.State*, align 8
  %MEMORY.i10 = alloca %struct.Memory*, align 8
  %_DR0.i11 = alloca i64*, align 8
  %_DR1.i12 = alloca i64*, align 8
  %_DR2.i13 = alloca i64*, align 8
  %_DR3.i14 = alloca i64*, align 8
  %_DR4.i15 = alloca i64*, align 8
  %_DR5.i16 = alloca i64*, align 8
  %_DR6.i17 = alloca i64*, align 8
  %_DR7.i18 = alloca i64*, align 8
  %CR0.i19 = alloca i64*, align 8
  %CR1.i20 = alloca i64*, align 8
  %CR2.i21 = alloca i64*, align 8
  %CR3.i22 = alloca i64*, align 8
  %CR4.i23 = alloca i64*, align 8
  %CR8.i24 = alloca i64*, align 8
  %state.i = alloca %struct.State*, align 8
  %curr_pc.i = alloca i64, align 8
  %memory.i = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN.i = alloca i8, align 1
  %SS_BASE.i = alloca i64, align 8
  %ES_BASE.i = alloca i64, align 8
  %DS_BASE.i = alloca i64, align 8
  %CS_BASE.i = alloca i64, align 8
  %STATE.i = alloca %struct.State*, align 8
  %MEMORY.i = alloca %struct.Memory*, align 8
  %_DR0.i = alloca i64*, align 8
  %_DR1.i = alloca i64*, align 8
  %_DR2.i = alloca i64*, align 8
  %_DR3.i = alloca i64*, align 8
  %_DR4.i = alloca i64*, align 8
  %_DR5.i = alloca i64*, align 8
  %_DR6.i = alloca i64*, align 8
  %_DR7.i = alloca i64*, align 8
  %CR0.i = alloca i64*, align 8
  %CR1.i = alloca i64*, align 8
  %CR2.i = alloca i64*, align 8
  %CR3.i = alloca i64*, align 8
  %CR4.i = alloca i64*, align 8
  %CR8.i = alloca i64*, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 1
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %EAX = bitcast %union.anon* %12 to i32*
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14 = getelementptr inbounds %struct.GPR, %struct.GPR* %13, i32 0, i32 5
  %15 = getelementptr inbounds %struct.Reg, %struct.Reg* %14, i32 0, i32 0
  %ECX = bitcast %union.anon* %15 to i32*
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17 = getelementptr inbounds %struct.GPR, %struct.GPR* %16, i32 0, i32 7
  %18 = getelementptr inbounds %struct.Reg, %struct.Reg* %17, i32 0, i32 0
  %EDX = bitcast %union.anon* %18 to i32*
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20 = getelementptr inbounds %struct.GPR, %struct.GPR* %19, i32 0, i32 11
  %21 = getelementptr inbounds %struct.Reg, %struct.Reg* %20, i32 0, i32 0
  %EDI = bitcast %union.anon* %21 to i32*
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23 = getelementptr inbounds %struct.GPR, %struct.GPR* %22, i32 0, i32 1
  %24 = getelementptr inbounds %struct.Reg, %struct.Reg* %23, i32 0, i32 0
  %RAX = bitcast %union.anon* %24 to i64*
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26 = getelementptr inbounds %struct.GPR, %struct.GPR* %25, i32 0, i32 5
  %27 = getelementptr inbounds %struct.Reg, %struct.Reg* %26, i32 0, i32 0
  %RCX = bitcast %union.anon* %27 to i64*
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29 = getelementptr inbounds %struct.GPR, %struct.GPR* %28, i32 0, i32 7
  %30 = getelementptr inbounds %struct.Reg, %struct.Reg* %29, i32 0, i32 0
  %RDX = bitcast %union.anon* %30 to i64*
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32 = getelementptr inbounds %struct.GPR, %struct.GPR* %31, i32 0, i32 9
  %33 = getelementptr inbounds %struct.Reg, %struct.Reg* %32, i32 0, i32 0
  %RSI = bitcast %union.anon* %33 to i64*
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35 = getelementptr inbounds %struct.GPR, %struct.GPR* %34, i32 0, i32 11
  %36 = getelementptr inbounds %struct.Reg, %struct.Reg* %35, i32 0, i32 0
  %RDI = bitcast %union.anon* %36 to i64*
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %38 = getelementptr inbounds %struct.GPR, %struct.GPR* %37, i32 0, i32 13
  %39 = getelementptr inbounds %struct.Reg, %struct.Reg* %38, i32 0, i32 0
  %RSP = bitcast %union.anon* %39 to i64*
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %41 = getelementptr inbounds %struct.GPR, %struct.GPR* %40, i32 0, i32 15
  %42 = getelementptr inbounds %struct.Reg, %struct.Reg* %41, i32 0, i32 0
  %RBP = bitcast %union.anon* %42 to i64*
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %44 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %43, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %44 to %"class.std::bitset"*
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %46 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %45, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %46 to %"class.std::bitset"*
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %48 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %47, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %48 to %"class.std::bitset"*
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %50 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %49, i64 0, i64 3
  %YMM3 = bitcast %union.VectorReg* %50 to %"class.std::bitset"*
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %52 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %51, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %52 to %union.vec128_t*
  %53 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %54 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %53, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %54 to %union.vec128_t*
  %55 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %56 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %55, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %56 to %union.vec128_t*
  %57 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %58 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %57, i64 0, i64 3
  %XMM3 = bitcast %union.VectorReg* %58 to %union.vec128_t*
  %59 = load i64, i64* %RBP
  %60 = load i64, i64* %PC
  %61 = add i64 %60, 1
  store i64 %61, i64* %PC
  %62 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %63 = load i64, i64* %62, align 8, !tbaa !2428
  %64 = add i64 %63, -8
  %65 = inttoptr i64 %64 to i64*
  store i64 %59, i64* %65
  store i64 %64, i64* %62, align 8, !tbaa !2428
  %66 = load i64, i64* %RSP
  %67 = load i64, i64* %PC
  %68 = add i64 %67, 3
  store i64 %68, i64* %PC
  store i64 %66, i64* %RBP, align 8, !tbaa !2428
  %69 = load i64, i64* %RSP
  %70 = load i64, i64* %PC
  %71 = add i64 %70, 7
  store i64 %71, i64* %PC
  %72 = sub i64 %69, 320
  store i64 %72, i64* %RSP, align 8, !tbaa !2428
  %73 = icmp ult i64 %69, 320
  %74 = zext i1 %73 to i8
  %75 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %74, i8* %75, align 1, !tbaa !2432
  %76 = trunc i64 %72 to i32
  %77 = and i32 %76, 255
  %78 = call i32 @llvm.ctpop.i32(i32 %77) #17
  %79 = trunc i32 %78 to i8
  %80 = and i8 %79, 1
  %81 = xor i8 %80, 1
  %82 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %81, i8* %82, align 1, !tbaa !2446
  %83 = xor i64 320, %69
  %84 = xor i64 %83, %72
  %85 = lshr i64 %84, 4
  %86 = trunc i64 %85 to i8
  %87 = and i8 %86, 1
  %88 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %87, i8* %88, align 1, !tbaa !2450
  %89 = icmp eq i64 %72, 0
  %90 = zext i1 %89 to i8
  %91 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %90, i8* %91, align 1, !tbaa !2447
  %92 = lshr i64 %72, 63
  %93 = trunc i64 %92 to i8
  %94 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %93, i8* %94, align 1, !tbaa !2448
  %95 = lshr i64 %69, 63
  %96 = xor i64 %92, %95
  %97 = add nuw nsw i64 %96, %95
  %98 = icmp eq i64 %97, 2
  %99 = zext i1 %98 to i8
  %100 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %99, i8* %100, align 1, !tbaa !2449
  %101 = load i64, i64* %RBP
  %102 = sub i64 %101, 4
  %103 = load i64, i64* %PC
  %104 = add i64 %103, 7
  store i64 %104, i64* %PC
  %105 = inttoptr i64 %102 to i32*
  store i32 0, i32* %105
  %106 = load i64, i64* %RBP
  %107 = sub i64 %106, 8
  %108 = load i32, i32* %EDI
  %109 = zext i32 %108 to i64
  %110 = load i64, i64* %PC
  %111 = add i64 %110, 3
  store i64 %111, i64* %PC
  %112 = inttoptr i64 %107 to i32*
  store i32 %108, i32* %112
  %113 = load i64, i64* %RBP
  %114 = sub i64 %113, 16
  %115 = load i64, i64* %RSI
  %116 = load i64, i64* %PC
  %117 = add i64 %116, 4
  store i64 %117, i64* %PC
  %118 = inttoptr i64 %114 to i64*
  store i64 %115, i64* %118
  %119 = load i64, i64* %RBP
  %120 = sub i64 %119, 184
  %121 = load i64, i64* %PC
  %122 = add i64 %121, 11
  store i64 %122, i64* %PC
  %123 = inttoptr i64 %120 to i64*
  store i64 100000, i64* %123
  %124 = load i64, i64* %RBP
  %125 = sub i64 %124, 208
  %126 = load i64, i64* %PC
  %127 = add i64 %126, 10
  store i64 %127, i64* %PC
  %128 = inttoptr i64 %125 to i32*
  store i32 0, i32* %128
  %129 = load i64, i64* %RBP
  %130 = sub i64 %129, 172
  %131 = load i64, i64* %PC
  %132 = add i64 %131, 10
  store i64 %132, i64* %PC
  %133 = inttoptr i64 %130 to i32*
  store i32 1, i32* %133
  br label %block_400848

block_4014f7:                                     ; preds = %block_4014e5
  %134 = load i64, i64* %RBP
  %135 = sub i64 %134, 104
  %136 = load i64, i64* %PC
  %137 = add i64 %136, 4
  store i64 %137, i64* %PC
  %138 = inttoptr i64 %135 to i64*
  %139 = load i64, i64* %138
  store i64 %139, i64* %RDI, align 8, !tbaa !2428
  %140 = load i64, i64* %PC
  %141 = add i64 %140, 8
  store i64 %141, i64* %PC
  %142 = load i32, i32* bitcast (%J_type* @J to i32*)
  %143 = sext i32 %142 to i64
  store i64 %143, i64* %RSI, align 8, !tbaa !2428
  %144 = load i64, i64* %PC
  %145 = add i64 %144, 8
  store i64 %145, i64* %PC
  %146 = load i32, i32* bitcast (%K_type* @K to i32*)
  %147 = sext i32 %146 to i64
  store i64 %147, i64* %RDX, align 8, !tbaa !2428
  %148 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %149 = load i64, i64* %RBP
  %150 = sub i64 %149, 144
  %151 = load i64, i64* %PC
  %152 = add i64 %151, 8
  store i64 %152, i64* %PC
  %153 = inttoptr i64 %150 to double*
  %154 = load double, double* %153
  %155 = bitcast i8* %148 to double*
  store double %154, double* %155, align 1, !tbaa !2451
  %156 = getelementptr inbounds i8, i8* %148, i64 8
  %157 = bitcast i8* %156 to double*
  store double 0.000000e+00, double* %157, align 1, !tbaa !2451
  %158 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %159 = load i64, i64* %RBP
  %160 = sub i64 %159, 144
  %161 = load i64, i64* %PC
  %162 = add i64 %161, 8
  store i64 %162, i64* %PC
  %163 = inttoptr i64 %160 to double*
  %164 = load double, double* %163
  %165 = bitcast i8* %158 to double*
  store double %164, double* %165, align 1, !tbaa !2451
  %166 = getelementptr inbounds i8, i8* %158, i64 8
  %167 = bitcast i8* %166 to double*
  store double 0.000000e+00, double* %167, align 1, !tbaa !2451
  %168 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %169 = load i64, i64* %RBP
  %170 = sub i64 %169, 144
  %171 = load i64, i64* %PC
  %172 = add i64 %171, 8
  store i64 %172, i64* %PC
  %173 = inttoptr i64 %170 to double*
  %174 = load double, double* %173
  %175 = bitcast i8* %168 to double*
  store double %174, double* %175, align 1, !tbaa !2451
  %176 = getelementptr inbounds i8, i8* %168, i64 8
  %177 = bitcast i8* %176 to double*
  store double 0.000000e+00, double* %177, align 1, !tbaa !2451
  %178 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %179 = load i64, i64* %RBP
  %180 = sub i64 %179, 144
  %181 = load i64, i64* %PC
  %182 = add i64 %181, 8
  store i64 %182, i64* %PC
  %183 = inttoptr i64 %180 to double*
  %184 = load double, double* %183
  %185 = bitcast i8* %178 to double*
  store double %184, double* %185, align 1, !tbaa !2451
  %186 = getelementptr inbounds i8, i8* %178, i64 8
  %187 = bitcast i8* %186 to double*
  store double 0.000000e+00, double* %187, align 1, !tbaa !2451
  %188 = load i64, i64* %PC
  %189 = add i64 %188, 117
  %190 = load i64, i64* %PC
  %191 = add i64 %190, 5
  %192 = load i64, i64* %PC
  %193 = add i64 %192, 5
  store i64 %193, i64* %PC
  %194 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %195 = load i64, i64* %194, align 8, !tbaa !2428
  %196 = add i64 %195, -8
  %197 = inttoptr i64 %196 to i64*
  store i64 %191, i64* %197
  store i64 %196, i64* %194, align 8, !tbaa !2428
  %198 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %189, i64* %198, align 8, !tbaa !2428
  %199 = load i64, i64* %PC
  %200 = call %struct.Memory* @sub_4015a0_POUT_renamed_(%struct.State* %0, i64 %199, %struct.Memory* %MEMORY.16)
  br label %block_401530

block_4014e5:                                     ; preds = %block_40149e
  %201 = load i64, i64* %RBP
  %202 = sub i64 %201, 176
  %203 = load i64, i64* %PC
  %204 = add i64 %203, 6
  store i64 %204, i64* %PC
  %205 = inttoptr i64 %202 to i32*
  %206 = load i32, i32* %205
  %207 = zext i32 %206 to i64
  store i64 %207, i64* %RAX, align 8, !tbaa !2428
  %208 = load i32, i32* %EAX
  %209 = zext i32 %208 to i64
  %210 = load i64, i64* %RBP
  %211 = sub i64 %210, 172
  %212 = load i64, i64* %PC
  %213 = add i64 %212, 6
  store i64 %213, i64* %PC
  %214 = inttoptr i64 %211 to i32*
  %215 = load i32, i32* %214
  %216 = sub i32 %208, %215
  %217 = icmp ult i32 %208, %215
  %218 = zext i1 %217 to i8
  %219 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %218, i8* %219, align 1, !tbaa !2432
  %220 = and i32 %216, 255
  %221 = call i32 @llvm.ctpop.i32(i32 %220) #17
  %222 = trunc i32 %221 to i8
  %223 = and i8 %222, 1
  %224 = xor i8 %223, 1
  %225 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %224, i8* %225, align 1, !tbaa !2446
  %226 = xor i32 %215, %208
  %227 = xor i32 %226, %216
  %228 = lshr i32 %227, 4
  %229 = trunc i32 %228 to i8
  %230 = and i8 %229, 1
  %231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %230, i8* %231, align 1, !tbaa !2450
  %232 = icmp eq i32 %216, 0
  %233 = zext i1 %232 to i8
  %234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %233, i8* %234, align 1, !tbaa !2447
  %235 = lshr i32 %216, 31
  %236 = trunc i32 %235 to i8
  %237 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %236, i8* %237, align 1, !tbaa !2448
  %238 = lshr i32 %208, 31
  %239 = lshr i32 %215, 31
  %240 = xor i32 %239, %238
  %241 = xor i32 %235, %238
  %242 = add nuw nsw i32 %241, %240
  %243 = icmp eq i32 %242, 2
  %244 = zext i1 %243 to i8
  %245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %244, i8* %245, align 1, !tbaa !2449
  %246 = load i64, i64* %PC
  %247 = add i64 %246, 63
  %248 = load i64, i64* %PC
  %249 = add i64 %248, 6
  %250 = load i64, i64* %PC
  %251 = add i64 %250, 6
  store i64 %251, i64* %PC
  %252 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %253 = load i8, i8* %252, align 1, !tbaa !2447
  %254 = icmp eq i8 %253, 0
  %255 = zext i1 %254 to i8
  store i8 %255, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %257 = select i1 %254, i64 %247, i64 %249
  store i64 %257, i64* %256, align 8, !tbaa !2428
  %258 = load i8, i8* %BRANCH_TAKEN
  %259 = icmp eq i8 %258, 1
  br i1 %259, label %block_401530, label %block_4014f7

block_40136f:                                     ; preds = %block_40135d
  %260 = load i64, i64* %RBP
  %261 = sub i64 %260, 88
  %262 = load i64, i64* %PC
  %263 = add i64 %262, 4
  store i64 %263, i64* %PC
  %264 = inttoptr i64 %261 to i64*
  %265 = load i64, i64* %264
  store i64 %265, i64* %RDI, align 8, !tbaa !2428
  %266 = load i64, i64* %PC
  %267 = add i64 %266, 8
  store i64 %267, i64* %PC
  %268 = load i32, i32* bitcast (%J_type* @J to i32*)
  %269 = sext i32 %268 to i64
  store i64 %269, i64* %RSI, align 8, !tbaa !2428
  %270 = load i64, i64* %PC
  %271 = add i64 %270, 8
  store i64 %271, i64* %PC
  %272 = load i32, i32* bitcast (%K_type* @K to i32*)
  %273 = sext i32 %272 to i64
  store i64 %273, i64* %RDX, align 8, !tbaa !2428
  %274 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %275 = load i64, i64* %PC
  %276 = add i64 %275, 9
  store i64 %276, i64* %PC
  %277 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 8) to double*)
  %278 = bitcast i8* %274 to double*
  store double %277, double* %278, align 1, !tbaa !2451
  %279 = getelementptr inbounds i8, i8* %274, i64 8
  %280 = bitcast i8* %279 to double*
  store double 0.000000e+00, double* %280, align 1, !tbaa !2451
  %281 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %282 = load i64, i64* %PC
  %283 = add i64 %282, 9
  store i64 %283, i64* %PC
  %284 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 16) to double*)
  %285 = bitcast i8* %281 to double*
  store double %284, double* %285, align 1, !tbaa !2451
  %286 = getelementptr inbounds i8, i8* %281, i64 8
  %287 = bitcast i8* %286 to double*
  store double 0.000000e+00, double* %287, align 1, !tbaa !2451
  %288 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %289 = load i64, i64* %PC
  %290 = add i64 %289, 9
  store i64 %290, i64* %PC
  %291 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 24) to double*)
  %292 = bitcast i8* %288 to double*
  store double %291, double* %292, align 1, !tbaa !2451
  %293 = getelementptr inbounds i8, i8* %288, i64 8
  %294 = bitcast i8* %293 to double*
  store double 0.000000e+00, double* %294, align 1, !tbaa !2451
  %295 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %296 = load i64, i64* %PC
  %297 = add i64 %296, 9
  store i64 %297, i64* %PC
  %298 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 32) to double*)
  %299 = bitcast i8* %295 to double*
  store double %298, double* %299, align 1, !tbaa !2451
  %300 = getelementptr inbounds i8, i8* %295, i64 8
  %301 = bitcast i8* %300 to double*
  store double 0.000000e+00, double* %301, align 1, !tbaa !2451
  %302 = load i64, i64* %PC
  %303 = add i64 %302, 505
  %304 = load i64, i64* %PC
  %305 = add i64 %304, 5
  %306 = load i64, i64* %PC
  %307 = add i64 %306, 5
  store i64 %307, i64* %PC
  %308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %309 = load i64, i64* %308, align 8, !tbaa !2428
  %310 = add i64 %309, -8
  %311 = inttoptr i64 %310 to i64*
  store i64 %305, i64* %311
  store i64 %310, i64* %308, align 8, !tbaa !2428
  %312 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %303, i64* %312, align 8, !tbaa !2428
  %313 = load i64, i64* %PC
  %314 = call %struct.Memory* @sub_4015a0_POUT_renamed_(%struct.State* %0, i64 %313, %struct.Memory* %MEMORY.6)
  br label %block_4013ac

block_4011e4:                                     ; preds = %block_400fed
  %315 = load i64, i64* %RBP
  %316 = sub i64 %315, 176
  %317 = load i64, i64* %PC
  %318 = add i64 %317, 6
  store i64 %318, i64* %PC
  %319 = inttoptr i64 %316 to i32*
  %320 = load i32, i32* %319
  %321 = zext i32 %320 to i64
  store i64 %321, i64* %RAX, align 8, !tbaa !2428
  %322 = load i32, i32* %EAX
  %323 = zext i32 %322 to i64
  %324 = load i64, i64* %RBP
  %325 = sub i64 %324, 172
  %326 = load i64, i64* %PC
  %327 = add i64 %326, 6
  store i64 %327, i64* %PC
  %328 = inttoptr i64 %325 to i32*
  %329 = load i32, i32* %328
  %330 = sub i32 %322, %329
  %331 = icmp ult i32 %322, %329
  %332 = zext i1 %331 to i8
  %333 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %332, i8* %333, align 1, !tbaa !2432
  %334 = and i32 %330, 255
  %335 = call i32 @llvm.ctpop.i32(i32 %334) #17
  %336 = trunc i32 %335 to i8
  %337 = and i8 %336, 1
  %338 = xor i8 %337, 1
  %339 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %338, i8* %339, align 1, !tbaa !2446
  %340 = xor i32 %329, %322
  %341 = xor i32 %340, %330
  %342 = lshr i32 %341, 4
  %343 = trunc i32 %342 to i8
  %344 = and i8 %343, 1
  %345 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %344, i8* %345, align 1, !tbaa !2450
  %346 = icmp eq i32 %330, 0
  %347 = zext i1 %346 to i8
  %348 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %347, i8* %348, align 1, !tbaa !2447
  %349 = lshr i32 %330, 31
  %350 = trunc i32 %349 to i8
  %351 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %350, i8* %351, align 1, !tbaa !2448
  %352 = lshr i32 %322, 31
  %353 = lshr i32 %329, 31
  %354 = xor i32 %353, %352
  %355 = xor i32 %349, %352
  %356 = add nuw nsw i32 %355, %354
  %357 = icmp eq i32 %356, 2
  %358 = zext i1 %357 to i8
  %359 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %358, i8* %359, align 1, !tbaa !2449
  %360 = load i64, i64* %PC
  %361 = add i64 %360, 63
  %362 = load i64, i64* %PC
  %363 = add i64 %362, 6
  %364 = load i64, i64* %PC
  %365 = add i64 %364, 6
  store i64 %365, i64* %PC
  %366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %367 = load i8, i8* %366, align 1, !tbaa !2447
  %368 = icmp eq i8 %367, 0
  %369 = zext i1 %368 to i8
  store i8 %369, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %371 = select i1 %368, i64 %361, i64 %363
  store i64 %371, i64* %370, align 8, !tbaa !2428
  %372 = load i8, i8* %BRANCH_TAKEN
  %373 = icmp eq i8 %372, 1
  br i1 %373, label %block_40122f, label %block_4011f6

block_400e10:                                     ; preds = %block_400d71
  %374 = load i64, i64* %RBP
  %375 = sub i64 %374, 176
  %376 = load i64, i64* %PC
  %377 = add i64 %376, 6
  store i64 %377, i64* %PC
  %378 = inttoptr i64 %375 to i32*
  %379 = load i32, i32* %378
  %380 = zext i32 %379 to i64
  store i64 %380, i64* %RAX, align 8, !tbaa !2428
  %381 = load i32, i32* %EAX
  %382 = zext i32 %381 to i64
  %383 = load i64, i64* %RBP
  %384 = sub i64 %383, 172
  %385 = load i64, i64* %PC
  %386 = add i64 %385, 6
  store i64 %386, i64* %PC
  %387 = inttoptr i64 %384 to i32*
  %388 = load i32, i32* %387
  %389 = sub i32 %381, %388
  %390 = icmp ult i32 %381, %388
  %391 = zext i1 %390 to i8
  %392 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %391, i8* %392, align 1, !tbaa !2432
  %393 = and i32 %389, 255
  %394 = call i32 @llvm.ctpop.i32(i32 %393) #17
  %395 = trunc i32 %394 to i8
  %396 = and i8 %395, 1
  %397 = xor i8 %396, 1
  %398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %397, i8* %398, align 1, !tbaa !2446
  %399 = xor i32 %388, %381
  %400 = xor i32 %399, %389
  %401 = lshr i32 %400, 4
  %402 = trunc i32 %401 to i8
  %403 = and i8 %402, 1
  %404 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %403, i8* %404, align 1, !tbaa !2450
  %405 = icmp eq i32 %389, 0
  %406 = zext i1 %405 to i8
  %407 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %406, i8* %407, align 1, !tbaa !2447
  %408 = lshr i32 %389, 31
  %409 = trunc i32 %408 to i8
  %410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %409, i8* %410, align 1, !tbaa !2448
  %411 = lshr i32 %381, 31
  %412 = lshr i32 %388, 31
  %413 = xor i32 %412, %411
  %414 = xor i32 %408, %411
  %415 = add nuw nsw i32 %414, %413
  %416 = icmp eq i32 %415, 2
  %417 = zext i1 %416 to i8
  %418 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %417, i8* %418, align 1, !tbaa !2449
  %419 = load i64, i64* %PC
  %420 = add i64 %419, 54
  %421 = load i64, i64* %PC
  %422 = add i64 %421, 6
  %423 = load i64, i64* %PC
  %424 = add i64 %423, 6
  store i64 %424, i64* %PC
  %425 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %426 = load i8, i8* %425, align 1, !tbaa !2447
  %427 = icmp eq i8 %426, 0
  %428 = zext i1 %427 to i8
  store i8 %428, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %430 = select i1 %427, i64 %420, i64 %422
  store i64 %430, i64* %429, align 8, !tbaa !2428
  %431 = load i8, i8* %BRANCH_TAKEN
  %432 = icmp eq i8 %431, 1
  br i1 %432, label %block_400e52, label %block_400e22

block_401590:                                     ; preds = %block_4008ed, %block_401589
  %MEMORY.0 = phi %struct.Memory* [ %7862, %block_401589 ], [ %9359, %block_4008ed ]
  %433 = load i64, i64* %RBP
  %434 = sub i64 %433, 4
  %435 = load i64, i64* %PC
  %436 = add i64 %435, 3
  store i64 %436, i64* %PC
  %437 = inttoptr i64 %434 to i32*
  %438 = load i32, i32* %437
  %439 = zext i32 %438 to i64
  store i64 %439, i64* %RAX, align 8, !tbaa !2428
  %440 = load i64, i64* %RSP
  %441 = load i64, i64* %PC
  %442 = add i64 %441, 7
  store i64 %442, i64* %PC
  %443 = add i64 320, %440
  store i64 %443, i64* %RSP, align 8, !tbaa !2428
  %444 = icmp ult i64 %443, %440
  %445 = icmp ult i64 %443, 320
  %446 = or i1 %444, %445
  %447 = zext i1 %446 to i8
  %448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %447, i8* %448, align 1, !tbaa !2432
  %449 = trunc i64 %443 to i32
  %450 = and i32 %449, 255
  %451 = call i32 @llvm.ctpop.i32(i32 %450) #17
  %452 = trunc i32 %451 to i8
  %453 = and i8 %452, 1
  %454 = xor i8 %453, 1
  %455 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %454, i8* %455, align 1, !tbaa !2446
  %456 = xor i64 320, %440
  %457 = xor i64 %456, %443
  %458 = lshr i64 %457, 4
  %459 = trunc i64 %458 to i8
  %460 = and i8 %459, 1
  %461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %460, i8* %461, align 1, !tbaa !2450
  %462 = icmp eq i64 %443, 0
  %463 = zext i1 %462 to i8
  %464 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %463, i8* %464, align 1, !tbaa !2447
  %465 = lshr i64 %443, 63
  %466 = trunc i64 %465 to i8
  %467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %466, i8* %467, align 1, !tbaa !2448
  %468 = lshr i64 %440, 63
  %469 = xor i64 %465, %468
  %470 = add nuw nsw i64 %469, %465
  %471 = icmp eq i64 %470, 2
  %472 = zext i1 %471 to i8
  %473 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %472, i8* %473, align 1, !tbaa !2449
  %474 = load i64, i64* %PC
  %475 = add i64 %474, 1
  store i64 %475, i64* %PC
  %476 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %477 = load i64, i64* %476, align 8, !tbaa !2428
  %478 = add i64 %477, 8
  %479 = inttoptr i64 %477 to i64*
  %480 = load i64, i64* %479
  store i64 %480, i64* %RBP, align 8, !tbaa !2428
  store i64 %478, i64* %476, align 8, !tbaa !2428
  %481 = load i64, i64* %PC
  %482 = add i64 %481, 1
  store i64 %482, i64* %PC
  %483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %485 = load i64, i64* %484, align 8, !tbaa !2428
  %486 = inttoptr i64 %485 to i64*
  %487 = load i64, i64* %486
  store i64 %487, i64* %483, align 8, !tbaa !2428
  %488 = add i64 %485, 8
  store i64 %488, i64* %484, align 8, !tbaa !2428
  ret %struct.Memory* %MEMORY.0

block_400d5e:                                     ; preds = %block_400d17, %block_400d29
  %MEMORY.1 = phi %struct.Memory* [ %MEMORY.17, %block_400d17 ], [ %8026, %block_400d29 ]
  %489 = load i64, i64* %PC
  %490 = add i64 %489, 11
  store i64 %490, i64* %PC
  store i32 1, i32* bitcast (%J_type* @J to i32*)
  %491 = load i64, i64* %RBP
  %492 = sub i64 %491, 24
  %493 = load i64, i64* %PC
  %494 = add i64 %493, 8
  store i64 %494, i64* %PC
  %495 = inttoptr i64 %492 to i64*
  store i64 1, i64* %495
  br label %block_400d71

block_4013ac:                                     ; preds = %block_40135d, %block_40136f
  %MEMORY.2 = phi %struct.Memory* [ %MEMORY.6, %block_40135d ], [ %314, %block_40136f ]
  %496 = load i64, i64* %PC
  %497 = add i64 %496, 11
  store i64 %497, i64* %PC
  store i32 2, i32* bitcast (%J_type* @J to i32*)
  %498 = load i64, i64* %PC
  %499 = add i64 %498, 11
  store i64 %499, i64* %PC
  store i32 3, i32* bitcast (%K_type* @K to i32*)
  %500 = load i64, i64* %RBP
  %501 = sub i64 %500, 24
  %502 = load i64, i64* %PC
  %503 = add i64 %502, 8
  store i64 %503, i64* %PC
  %504 = inttoptr i64 %501 to i64*
  store i64 1, i64* %504
  br label %block_4013ca

block_40135d:                                     ; preds = %block_401339
  %505 = load i64, i64* %RBP
  %506 = sub i64 %505, 176
  %507 = load i64, i64* %PC
  %508 = add i64 %507, 6
  store i64 %508, i64* %PC
  %509 = inttoptr i64 %506 to i32*
  %510 = load i32, i32* %509
  %511 = zext i32 %510 to i64
  store i64 %511, i64* %RAX, align 8, !tbaa !2428
  %512 = load i32, i32* %EAX
  %513 = zext i32 %512 to i64
  %514 = load i64, i64* %RBP
  %515 = sub i64 %514, 172
  %516 = load i64, i64* %PC
  %517 = add i64 %516, 6
  store i64 %517, i64* %PC
  %518 = inttoptr i64 %515 to i32*
  %519 = load i32, i32* %518
  %520 = sub i32 %512, %519
  %521 = icmp ult i32 %512, %519
  %522 = zext i1 %521 to i8
  %523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %522, i8* %523, align 1, !tbaa !2432
  %524 = and i32 %520, 255
  %525 = call i32 @llvm.ctpop.i32(i32 %524) #17
  %526 = trunc i32 %525 to i8
  %527 = and i8 %526, 1
  %528 = xor i8 %527, 1
  %529 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %528, i8* %529, align 1, !tbaa !2446
  %530 = xor i32 %519, %512
  %531 = xor i32 %530, %520
  %532 = lshr i32 %531, 4
  %533 = trunc i32 %532 to i8
  %534 = and i8 %533, 1
  %535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %534, i8* %535, align 1, !tbaa !2450
  %536 = icmp eq i32 %520, 0
  %537 = zext i1 %536 to i8
  %538 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %537, i8* %538, align 1, !tbaa !2447
  %539 = lshr i32 %520, 31
  %540 = trunc i32 %539 to i8
  %541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %540, i8* %541, align 1, !tbaa !2448
  %542 = lshr i32 %512, 31
  %543 = lshr i32 %519, 31
  %544 = xor i32 %543, %542
  %545 = xor i32 %539, %542
  %546 = add nuw nsw i32 %545, %544
  %547 = icmp eq i32 %546, 2
  %548 = zext i1 %547 to i8
  %549 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %548, i8* %549, align 1, !tbaa !2449
  %550 = load i64, i64* %PC
  %551 = add i64 %550, 67
  %552 = load i64, i64* %PC
  %553 = add i64 %552, 6
  %554 = load i64, i64* %PC
  %555 = add i64 %554, 6
  store i64 %555, i64* %PC
  %556 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %557 = load i8, i8* %556, align 1, !tbaa !2447
  %558 = icmp eq i8 %557, 0
  %559 = zext i1 %558 to i8
  store i8 %559, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %560 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %561 = select i1 %558, i64 %551, i64 %553
  store i64 %561, i64* %560, align 8, !tbaa !2428
  %562 = load i8, i8* %BRANCH_TAKEN
  %563 = icmp eq i8 %562, 1
  br i1 %563, label %block_4013ac, label %block_40136f

block_400cf7:                                     ; preds = %block_400ce9
  %564 = load i64, i64* %PC
  %565 = add i64 %564, 10
  store i64 %565, i64* %PC
  store i64 ptrtoint (%E1_type* @E1 to i64), i64* %RDI, align 8, !tbaa !2428
  %566 = load i64, i64* %PC
  %567 = add i64 %566, 2319
  %568 = load i64, i64* %PC
  %569 = add i64 %568, 5
  %570 = load i64, i64* %PC
  %571 = add i64 %570, 5
  store i64 %571, i64* %PC
  %572 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %573 = load i64, i64* %572, align 8, !tbaa !2428
  %574 = add i64 %573, -8
  %575 = inttoptr i64 %574 to i64*
  store i64 %569, i64* %575
  store i64 %574, i64* %572, align 8, !tbaa !2428
  %576 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %567, i64* %576, align 8, !tbaa !2428
  %577 = load i64, i64* %PC
  %578 = call %struct.Memory* @sub_401610_PA_renamed_(%struct.State* %0, i64 %577, %struct.Memory* %MEMORY.17)
  %579 = load i64, i64* %RBP
  %580 = sub i64 %579, 24
  %581 = load i64, i64* %PC
  %582 = add i64 %581, 4
  store i64 %582, i64* %PC
  %583 = inttoptr i64 %580 to i64*
  %584 = load i64, i64* %583
  store i64 %584, i64* %RAX, align 8, !tbaa !2428
  %585 = load i64, i64* %RAX
  %586 = load i64, i64* %PC
  %587 = add i64 %586, 4
  store i64 %587, i64* %PC
  %588 = add i64 1, %585
  store i64 %588, i64* %RAX, align 8, !tbaa !2428
  %589 = icmp ult i64 %588, %585
  %590 = icmp ult i64 %588, 1
  %591 = or i1 %589, %590
  %592 = zext i1 %591 to i8
  %593 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %592, i8* %593, align 1, !tbaa !2432
  %594 = trunc i64 %588 to i32
  %595 = and i32 %594, 255
  %596 = call i32 @llvm.ctpop.i32(i32 %595) #17
  %597 = trunc i32 %596 to i8
  %598 = and i8 %597, 1
  %599 = xor i8 %598, 1
  %600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %599, i8* %600, align 1, !tbaa !2446
  %601 = xor i64 1, %585
  %602 = xor i64 %601, %588
  %603 = lshr i64 %602, 4
  %604 = trunc i64 %603 to i8
  %605 = and i8 %604, 1
  %606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %605, i8* %606, align 1, !tbaa !2450
  %607 = icmp eq i64 %588, 0
  %608 = zext i1 %607 to i8
  %609 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %608, i8* %609, align 1, !tbaa !2447
  %610 = lshr i64 %588, 63
  %611 = trunc i64 %610 to i8
  %612 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %611, i8* %612, align 1, !tbaa !2448
  %613 = lshr i64 %585, 63
  %614 = xor i64 %610, %613
  %615 = add nuw nsw i64 %614, %610
  %616 = icmp eq i64 %615, 2
  %617 = zext i1 %616 to i8
  %618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %617, i8* %618, align 1, !tbaa !2449
  %619 = load i64, i64* %RBP
  %620 = sub i64 %619, 24
  %621 = load i64, i64* %RAX
  %622 = load i64, i64* %PC
  %623 = add i64 %622, 4
  store i64 %623, i64* %PC
  %624 = inttoptr i64 %620 to i64*
  store i64 %621, i64* %624
  %625 = load i64, i64* %PC
  %626 = sub i64 %625, 41
  %627 = load i64, i64* %PC
  %628 = add i64 %627, 5
  store i64 %628, i64* %PC
  %629 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %626, i64* %629, align 8, !tbaa !2428
  br label %block_400ce9

block_4013d8:                                     ; preds = %block_4013ca
  %630 = load i64, i64* %PC
  %631 = add i64 %630, 7
  store i64 %631, i64* %PC
  %632 = load i32, i32* bitcast (%J_type* @J to i32*)
  %633 = zext i32 %632 to i64
  store i64 %633, i64* %RAX, align 8, !tbaa !2428
  %634 = load i64, i64* %RAX
  %635 = load i64, i64* %PC
  %636 = add i64 %635, 7
  store i64 %636, i64* %PC
  %637 = trunc i64 %634 to i32
  %638 = load i32, i32* bitcast (%K_type* @K to i32*)
  %639 = add i32 %638, %637
  %640 = zext i32 %639 to i64
  store i64 %640, i64* %RAX, align 8, !tbaa !2428
  %641 = icmp ult i32 %639, %637
  %642 = icmp ult i32 %639, %638
  %643 = or i1 %641, %642
  %644 = zext i1 %643 to i8
  %645 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %644, i8* %645, align 1, !tbaa !2432
  %646 = and i32 %639, 255
  %647 = call i32 @llvm.ctpop.i32(i32 %646) #17
  %648 = trunc i32 %647 to i8
  %649 = and i8 %648, 1
  %650 = xor i8 %649, 1
  %651 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %650, i8* %651, align 1, !tbaa !2446
  %652 = xor i32 %638, %637
  %653 = xor i32 %652, %639
  %654 = lshr i32 %653, 4
  %655 = trunc i32 %654 to i8
  %656 = and i8 %655, 1
  %657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %656, i8* %657, align 1, !tbaa !2450
  %658 = icmp eq i32 %639, 0
  %659 = zext i1 %658 to i8
  %660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %659, i8* %660, align 1, !tbaa !2447
  %661 = lshr i32 %639, 31
  %662 = trunc i32 %661 to i8
  %663 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %662, i8* %663, align 1, !tbaa !2448
  %664 = lshr i32 %637, 31
  %665 = lshr i32 %638, 31
  %666 = xor i32 %661, %664
  %667 = xor i32 %661, %665
  %668 = add nuw nsw i32 %666, %667
  %669 = icmp eq i32 %668, 2
  %670 = zext i1 %669 to i8
  %671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %670, i8* %671, align 1, !tbaa !2449
  %672 = load i32, i32* %EAX
  %673 = zext i32 %672 to i64
  %674 = load i64, i64* %PC
  %675 = add i64 %674, 7
  store i64 %675, i64* %PC
  store i32 %672, i32* bitcast (%J_type* @J to i32*)
  %676 = load i64, i64* %PC
  %677 = add i64 %676, 7
  store i64 %677, i64* %PC
  %678 = load i32, i32* bitcast (%J_type* @J to i32*)
  %679 = zext i32 %678 to i64
  store i64 %679, i64* %RAX, align 8, !tbaa !2428
  %680 = load i64, i64* %RAX
  %681 = load i64, i64* %PC
  %682 = add i64 %681, 7
  store i64 %682, i64* %PC
  %683 = trunc i64 %680 to i32
  %684 = load i32, i32* bitcast (%K_type* @K to i32*)
  %685 = add i32 %684, %683
  %686 = zext i32 %685 to i64
  store i64 %686, i64* %RAX, align 8, !tbaa !2428
  %687 = icmp ult i32 %685, %683
  %688 = icmp ult i32 %685, %684
  %689 = or i1 %687, %688
  %690 = zext i1 %689 to i8
  %691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %690, i8* %691, align 1, !tbaa !2432
  %692 = and i32 %685, 255
  %693 = call i32 @llvm.ctpop.i32(i32 %692) #17
  %694 = trunc i32 %693 to i8
  %695 = and i8 %694, 1
  %696 = xor i8 %695, 1
  %697 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %696, i8* %697, align 1, !tbaa !2446
  %698 = xor i32 %684, %683
  %699 = xor i32 %698, %685
  %700 = lshr i32 %699, 4
  %701 = trunc i32 %700 to i8
  %702 = and i8 %701, 1
  %703 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %702, i8* %703, align 1, !tbaa !2450
  %704 = icmp eq i32 %685, 0
  %705 = zext i1 %704 to i8
  %706 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %705, i8* %706, align 1, !tbaa !2447
  %707 = lshr i32 %685, 31
  %708 = trunc i32 %707 to i8
  %709 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %708, i8* %709, align 1, !tbaa !2448
  %710 = lshr i32 %683, 31
  %711 = lshr i32 %684, 31
  %712 = xor i32 %707, %710
  %713 = xor i32 %707, %711
  %714 = add nuw nsw i32 %712, %713
  %715 = icmp eq i32 %714, 2
  %716 = zext i1 %715 to i8
  %717 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %716, i8* %717, align 1, !tbaa !2449
  %718 = load i32, i32* %EAX
  %719 = zext i32 %718 to i64
  %720 = load i64, i64* %PC
  %721 = add i64 %720, 7
  store i64 %721, i64* %PC
  store i32 %718, i32* bitcast (%K_type* @K to i32*)
  %722 = load i64, i64* %PC
  %723 = add i64 %722, 7
  store i64 %723, i64* %PC
  %724 = load i32, i32* bitcast (%K_type* @K to i32*)
  %725 = zext i32 %724 to i64
  store i64 %725, i64* %RAX, align 8, !tbaa !2428
  %726 = load i64, i64* %RAX
  %727 = load i64, i64* %PC
  %728 = add i64 %727, 7
  store i64 %728, i64* %PC
  %729 = trunc i64 %726 to i32
  %730 = load i32, i32* bitcast (%J_type* @J to i32*)
  %731 = sub i32 %729, %730
  %732 = zext i32 %731 to i64
  store i64 %732, i64* %RAX, align 8, !tbaa !2428
  %733 = icmp ult i32 %729, %730
  %734 = zext i1 %733 to i8
  %735 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %734, i8* %735, align 1, !tbaa !2432
  %736 = and i32 %731, 255
  %737 = call i32 @llvm.ctpop.i32(i32 %736) #17
  %738 = trunc i32 %737 to i8
  %739 = and i8 %738, 1
  %740 = xor i8 %739, 1
  %741 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %740, i8* %741, align 1, !tbaa !2446
  %742 = xor i32 %730, %729
  %743 = xor i32 %742, %731
  %744 = lshr i32 %743, 4
  %745 = trunc i32 %744 to i8
  %746 = and i8 %745, 1
  %747 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %746, i8* %747, align 1, !tbaa !2450
  %748 = icmp eq i32 %731, 0
  %749 = zext i1 %748 to i8
  %750 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %749, i8* %750, align 1, !tbaa !2447
  %751 = lshr i32 %731, 31
  %752 = trunc i32 %751 to i8
  %753 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %752, i8* %753, align 1, !tbaa !2448
  %754 = lshr i32 %729, 31
  %755 = lshr i32 %730, 31
  %756 = xor i32 %755, %754
  %757 = xor i32 %751, %754
  %758 = add nuw nsw i32 %757, %756
  %759 = icmp eq i32 %758, 2
  %760 = zext i1 %759 to i8
  %761 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %760, i8* %761, align 1, !tbaa !2449
  %762 = load i32, i32* %EAX
  %763 = zext i32 %762 to i64
  %764 = load i64, i64* %PC
  %765 = add i64 %764, 7
  store i64 %765, i64* %PC
  store i32 %762, i32* bitcast (%J_type* @J to i32*)
  %766 = load i64, i64* %PC
  %767 = add i64 %766, 7
  store i64 %767, i64* %PC
  %768 = load i32, i32* bitcast (%K_type* @K to i32*)
  %769 = zext i32 %768 to i64
  store i64 %769, i64* %RAX, align 8, !tbaa !2428
  %770 = load i64, i64* %RAX
  %771 = load i64, i64* %PC
  %772 = add i64 %771, 7
  store i64 %772, i64* %PC
  %773 = trunc i64 %770 to i32
  %774 = load i32, i32* bitcast (%J_type* @J to i32*)
  %775 = sub i32 %773, %774
  %776 = zext i32 %775 to i64
  store i64 %776, i64* %RAX, align 8, !tbaa !2428
  %777 = icmp ult i32 %773, %774
  %778 = zext i1 %777 to i8
  %779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %778, i8* %779, align 1, !tbaa !2432
  %780 = and i32 %775, 255
  %781 = call i32 @llvm.ctpop.i32(i32 %780) #17
  %782 = trunc i32 %781 to i8
  %783 = and i8 %782, 1
  %784 = xor i8 %783, 1
  %785 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %784, i8* %785, align 1, !tbaa !2446
  %786 = xor i32 %774, %773
  %787 = xor i32 %786, %775
  %788 = lshr i32 %787, 4
  %789 = trunc i32 %788 to i8
  %790 = and i8 %789, 1
  %791 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %790, i8* %791, align 1, !tbaa !2450
  %792 = icmp eq i32 %775, 0
  %793 = zext i1 %792 to i8
  %794 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %793, i8* %794, align 1, !tbaa !2447
  %795 = lshr i32 %775, 31
  %796 = trunc i32 %795 to i8
  %797 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %796, i8* %797, align 1, !tbaa !2448
  %798 = lshr i32 %773, 31
  %799 = lshr i32 %774, 31
  %800 = xor i32 %799, %798
  %801 = xor i32 %795, %798
  %802 = add nuw nsw i32 %801, %800
  %803 = icmp eq i32 %802, 2
  %804 = zext i1 %803 to i8
  %805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %804, i8* %805, align 1, !tbaa !2449
  %806 = load i64, i64* %RAX
  %807 = load i64, i64* %PC
  %808 = add i64 %807, 7
  store i64 %808, i64* %PC
  %809 = trunc i64 %806 to i32
  %810 = load i32, i32* bitcast (%J_type* @J to i32*)
  %811 = sub i32 %809, %810
  %812 = zext i32 %811 to i64
  store i64 %812, i64* %RAX, align 8, !tbaa !2428
  %813 = icmp ult i32 %809, %810
  %814 = zext i1 %813 to i8
  %815 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %814, i8* %815, align 1, !tbaa !2432
  %816 = and i32 %811, 255
  %817 = call i32 @llvm.ctpop.i32(i32 %816) #17
  %818 = trunc i32 %817 to i8
  %819 = and i8 %818, 1
  %820 = xor i8 %819, 1
  %821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %820, i8* %821, align 1, !tbaa !2446
  %822 = xor i32 %810, %809
  %823 = xor i32 %822, %811
  %824 = lshr i32 %823, 4
  %825 = trunc i32 %824 to i8
  %826 = and i8 %825, 1
  %827 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %826, i8* %827, align 1, !tbaa !2450
  %828 = icmp eq i32 %811, 0
  %829 = zext i1 %828 to i8
  %830 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %829, i8* %830, align 1, !tbaa !2447
  %831 = lshr i32 %811, 31
  %832 = trunc i32 %831 to i8
  %833 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %832, i8* %833, align 1, !tbaa !2448
  %834 = lshr i32 %809, 31
  %835 = lshr i32 %810, 31
  %836 = xor i32 %835, %834
  %837 = xor i32 %831, %834
  %838 = add nuw nsw i32 %837, %836
  %839 = icmp eq i32 %838, 2
  %840 = zext i1 %839 to i8
  %841 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %840, i8* %841, align 1, !tbaa !2449
  %842 = load i32, i32* %EAX
  %843 = zext i32 %842 to i64
  %844 = load i64, i64* %PC
  %845 = add i64 %844, 7
  store i64 %845, i64* %PC
  store i32 %842, i32* bitcast (%K_type* @K to i32*)
  %846 = load i64, i64* %RBP
  %847 = sub i64 %846, 24
  %848 = load i64, i64* %PC
  %849 = add i64 %848, 4
  store i64 %849, i64* %PC
  %850 = inttoptr i64 %847 to i64*
  %851 = load i64, i64* %850
  store i64 %851, i64* %RAX, align 8, !tbaa !2428
  %852 = load i64, i64* %RAX
  %853 = load i64, i64* %PC
  %854 = add i64 %853, 4
  store i64 %854, i64* %PC
  %855 = add i64 1, %852
  store i64 %855, i64* %RAX, align 8, !tbaa !2428
  %856 = icmp ult i64 %855, %852
  %857 = icmp ult i64 %855, 1
  %858 = or i1 %856, %857
  %859 = zext i1 %858 to i8
  %860 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %859, i8* %860, align 1, !tbaa !2432
  %861 = trunc i64 %855 to i32
  %862 = and i32 %861, 255
  %863 = call i32 @llvm.ctpop.i32(i32 %862) #17
  %864 = trunc i32 %863 to i8
  %865 = and i8 %864, 1
  %866 = xor i8 %865, 1
  %867 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %866, i8* %867, align 1, !tbaa !2446
  %868 = xor i64 1, %852
  %869 = xor i64 %868, %855
  %870 = lshr i64 %869, 4
  %871 = trunc i64 %870 to i8
  %872 = and i8 %871, 1
  %873 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %872, i8* %873, align 1, !tbaa !2450
  %874 = icmp eq i64 %855, 0
  %875 = zext i1 %874 to i8
  %876 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %875, i8* %876, align 1, !tbaa !2447
  %877 = lshr i64 %855, 63
  %878 = trunc i64 %877 to i8
  %879 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %878, i8* %879, align 1, !tbaa !2448
  %880 = lshr i64 %852, 63
  %881 = xor i64 %877, %880
  %882 = add nuw nsw i64 %881, %877
  %883 = icmp eq i64 %882, 2
  %884 = zext i1 %883 to i8
  %885 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %884, i8* %885, align 1, !tbaa !2449
  %886 = load i64, i64* %RBP
  %887 = sub i64 %886, 24
  %888 = load i64, i64* %RAX
  %889 = load i64, i64* %PC
  %890 = add i64 %889, 4
  store i64 %890, i64* %PC
  %891 = inttoptr i64 %887 to i64*
  store i64 %888, i64* %891
  %892 = load i64, i64* %PC
  %893 = sub i64 %892, 117
  %894 = load i64, i64* %PC
  %895 = add i64 %894, 5
  store i64 %895, i64* %PC
  %896 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %893, i64* %896, align 8, !tbaa !2428
  br label %block_4013ca

block_401456:                                     ; preds = %block_401444
  %897 = load i64, i64* %RBP
  %898 = sub i64 %897, 96
  %899 = load i64, i64* %PC
  %900 = add i64 %899, 4
  store i64 %900, i64* %PC
  %901 = inttoptr i64 %898 to i64*
  %902 = load i64, i64* %901
  store i64 %902, i64* %RDI, align 8, !tbaa !2428
  %903 = load i64, i64* %PC
  %904 = add i64 %903, 8
  store i64 %904, i64* %PC
  %905 = load i32, i32* bitcast (%J_type* @J to i32*)
  %906 = sext i32 %905 to i64
  store i64 %906, i64* %RSI, align 8, !tbaa !2428
  %907 = load i64, i64* %PC
  %908 = add i64 %907, 8
  store i64 %908, i64* %PC
  %909 = load i32, i32* bitcast (%K_type* @K to i32*)
  %910 = sext i32 %909 to i64
  store i64 %910, i64* %RDX, align 8, !tbaa !2428
  %911 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %912 = load i64, i64* %RBP
  %913 = sub i64 %912, 112
  %914 = load i64, i64* %PC
  %915 = add i64 %914, 5
  store i64 %915, i64* %PC
  %916 = inttoptr i64 %913 to double*
  %917 = load double, double* %916
  %918 = bitcast i8* %911 to double*
  store double %917, double* %918, align 1, !tbaa !2451
  %919 = getelementptr inbounds i8, i8* %911, i64 8
  %920 = bitcast i8* %919 to double*
  store double 0.000000e+00, double* %920, align 1, !tbaa !2451
  %921 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %922 = load i64, i64* %RBP
  %923 = sub i64 %922, 120
  %924 = load i64, i64* %PC
  %925 = add i64 %924, 5
  store i64 %925, i64* %PC
  %926 = inttoptr i64 %923 to double*
  %927 = load double, double* %926
  %928 = bitcast i8* %921 to double*
  store double %927, double* %928, align 1, !tbaa !2451
  %929 = getelementptr inbounds i8, i8* %921, i64 8
  %930 = bitcast i8* %929 to double*
  store double 0.000000e+00, double* %930, align 1, !tbaa !2451
  %931 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %932 = load i64, i64* %RBP
  %933 = sub i64 %932, 128
  %934 = load i64, i64* %PC
  %935 = add i64 %934, 5
  store i64 %935, i64* %PC
  %936 = inttoptr i64 %933 to double*
  %937 = load double, double* %936
  %938 = bitcast i8* %931 to double*
  store double %937, double* %938, align 1, !tbaa !2451
  %939 = getelementptr inbounds i8, i8* %931, i64 8
  %940 = bitcast i8* %939 to double*
  store double 0.000000e+00, double* %940, align 1, !tbaa !2451
  %941 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %942 = load i64, i64* %RBP
  %943 = sub i64 %942, 136
  %944 = load i64, i64* %PC
  %945 = add i64 %944, 8
  store i64 %945, i64* %PC
  %946 = inttoptr i64 %943 to double*
  %947 = load double, double* %946
  %948 = bitcast i8* %941 to double*
  store double %947, double* %948, align 1, !tbaa !2451
  %949 = getelementptr inbounds i8, i8* %941, i64 8
  %950 = bitcast i8* %949 to double*
  store double 0.000000e+00, double* %950, align 1, !tbaa !2451
  %951 = load i64, i64* %PC
  %952 = add i64 %951, 287
  %953 = load i64, i64* %PC
  %954 = add i64 %953, 5
  %955 = load i64, i64* %PC
  %956 = add i64 %955, 5
  store i64 %956, i64* %PC
  %957 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %958 = load i64, i64* %957, align 8, !tbaa !2428
  %959 = add i64 %958, -8
  %960 = inttoptr i64 %959 to i64*
  store i64 %954, i64* %960
  store i64 %959, i64* %957, align 8, !tbaa !2428
  %961 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %952, i64* %961, align 8, !tbaa !2428
  %962 = load i64, i64* %PC
  %963 = call %struct.Memory* @sub_4015a0_POUT_renamed_(%struct.State* %0, i64 %962, %struct.Memory* %MEMORY.26)
  br label %block_401486

block_4014ac:                                     ; preds = %block_40149e
  %964 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %965 = load i64, i64* %RBP
  %966 = sub i64 %965, 144
  %967 = load i64, i64* %PC
  %968 = add i64 %967, 8
  store i64 %968, i64* %PC
  %969 = inttoptr i64 %966 to double*
  %970 = load double, double* %969
  %971 = bitcast i8* %964 to double*
  store double %970, double* %971, align 1, !tbaa !2451
  %972 = getelementptr inbounds i8, i8* %964, i64 8
  %973 = bitcast i8* %972 to double*
  store double 0.000000e+00, double* %973, align 1, !tbaa !2451
  %974 = load i64, i64* %PC
  %975 = sub i64 %974, 3588
  %976 = load i64, i64* %PC
  %977 = add i64 %976, 5
  %978 = load i64, i64* %PC
  %979 = add i64 %978, 5
  store i64 %979, i64* %PC
  %980 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %981 = load i64, i64* %980, align 8, !tbaa !2428
  %982 = add i64 %981, -8
  %983 = inttoptr i64 %982 to i64*
  store i64 %977, i64* %983
  store i64 %982, i64* %980, align 8, !tbaa !2428
  %984 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %975, i64* %984, align 8, !tbaa !2428
  %985 = load i64, i64* %PC
  %986 = call %struct.Memory* @ext_602168_log(%struct.State* %0, i64 %985, %struct.Memory* %MEMORY.16)
  %987 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %988 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %989 = load i64, i64* %PC
  %990 = add i64 %989, 9
  store i64 %990, i64* %PC
  %991 = bitcast i8* %988 to double*
  %992 = load double, double* %991, align 1
  %993 = getelementptr inbounds i8, i8* %988, i64 8
  %994 = bitcast i8* %993 to i64*
  %995 = load i64, i64* %994, align 1
  %996 = load double, double* bitcast (%T1_type* @T1 to double*)
  %997 = fdiv double %992, %996
  %998 = bitcast i8* %987 to double*
  store double %997, double* %998, align 1, !tbaa !2451
  %999 = getelementptr inbounds i8, i8* %987, i64 8
  %1000 = bitcast i8* %999 to i64*
  store i64 %995, i64* %1000, align 1, !tbaa !2451
  %1001 = load i64, i64* %PC
  %1002 = sub i64 %1001, 3650
  %1003 = load i64, i64* %PC
  %1004 = add i64 %1003, 5
  %1005 = load i64, i64* %PC
  %1006 = add i64 %1005, 5
  store i64 %1006, i64* %PC
  %1007 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %1008 = load i64, i64* %1007, align 8, !tbaa !2428
  %1009 = add i64 %1008, -8
  %1010 = inttoptr i64 %1009 to i64*
  store i64 %1004, i64* %1010
  store i64 %1009, i64* %1007, align 8, !tbaa !2428
  %1011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1002, i64* %1011, align 8, !tbaa !2428
  %1012 = load i64, i64* %PC
  %1013 = call %struct.Memory* @ext_6020f0_exp(%struct.State* %0, i64 %1012, %struct.Memory* %986)
  %1014 = load i64, i64* %PC
  %1015 = sub i64 %1014, 3511
  %1016 = load i64, i64* %PC
  %1017 = add i64 %1016, 5
  %1018 = load i64, i64* %PC
  %1019 = add i64 %1018, 5
  store i64 %1019, i64* %PC
  %1020 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %1021 = load i64, i64* %1020, align 8, !tbaa !2428
  %1022 = add i64 %1021, -8
  %1023 = inttoptr i64 %1022 to i64*
  store i64 %1017, i64* %1023
  store i64 %1022, i64* %1020, align 8, !tbaa !2428
  %1024 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1015, i64* %1024, align 8, !tbaa !2428
  %1025 = load i64, i64* %PC
  %1026 = bitcast %struct.State** %state.i1432 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1026)
  %1027 = bitcast i64* %curr_pc.i1433 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1027)
  %1028 = bitcast %struct.Memory** %memory.i1434 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1028)
  call void @llvm.lifetime.start(i64 1, i8* %BRANCH_TAKEN.i1435)
  %1029 = bitcast i64* %SS_BASE.i1436 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1029)
  %1030 = bitcast i64* %ES_BASE.i1437 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1030)
  %1031 = bitcast i64* %DS_BASE.i1438 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1031)
  %1032 = bitcast i64* %CS_BASE.i1439 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1032)
  %1033 = bitcast %struct.State** %STATE.i1440 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1033)
  %1034 = bitcast %struct.Memory** %MEMORY.i1441 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1034)
  %1035 = bitcast i64** %_DR0.i1442 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1035)
  %1036 = bitcast i64** %_DR1.i1443 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1036)
  %1037 = bitcast i64** %_DR2.i1444 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1037)
  %1038 = bitcast i64** %_DR3.i1445 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1038)
  %1039 = bitcast i64** %_DR4.i1446 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1039)
  %1040 = bitcast i64** %_DR5.i1447 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1040)
  %1041 = bitcast i64** %_DR6.i1448 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1041)
  %1042 = bitcast i64** %_DR7.i1449 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1042)
  %1043 = bitcast i64** %CR0.i1450 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1043)
  %1044 = bitcast i64** %CR1.i1451 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1044)
  %1045 = bitcast i64** %CR2.i1452 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1045)
  %1046 = bitcast i64** %CR3.i1453 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1046)
  %1047 = bitcast i64** %CR4.i1454 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1047)
  %1048 = bitcast i64** %CR8.i1455 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1048)
  store %struct.State* %0, %struct.State** %state.i1432, align 8, !noalias !2454
  store i64 %1025, i64* %curr_pc.i1433, align 8, !noalias !2454
  store %struct.Memory* %1013, %struct.Memory** %memory.i1434, align 8, !noalias !2454
  store i8 0, i8* %BRANCH_TAKEN.i1435, align 1, !noalias !2454
  store i64 0, i64* %SS_BASE.i1436, align 8, !noalias !2454
  store i64 0, i64* %ES_BASE.i1437, align 8, !noalias !2454
  store i64 0, i64* %DS_BASE.i1438, align 8, !noalias !2454
  store i64 0, i64* %CS_BASE.i1439, align 8, !noalias !2454
  store %struct.State* %0, %struct.State** %STATE.i1440, align 8, !noalias !2454
  store %struct.Memory* %1013, %struct.Memory** %MEMORY.i1441, align 8, !noalias !2454
  %1049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1050 = getelementptr inbounds %struct.GPR, %struct.GPR* %1049, i32 0, i32 33
  %1051 = getelementptr inbounds %struct.Reg, %struct.Reg* %1050, i32 0, i32 0
  %PC.i1456 = bitcast %union.anon* %1051 to i64*
  store i64 %1025, i64* %PC.i1456, align 8, !alias.scope !2458, !noalias !2459
  %1052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1053 = getelementptr inbounds %struct.GPR, %struct.GPR* %1052, i32 0, i32 1
  %1054 = getelementptr inbounds %struct.Reg, %struct.Reg* %1053, i32 0, i32 0
  %1055 = bitcast %union.anon* %1054 to %struct.anon.2*
  %AH.i1457 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1055, i32 0, i32 1
  %1056 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1057 = getelementptr inbounds %struct.GPR, %struct.GPR* %1056, i32 0, i32 3
  %1058 = getelementptr inbounds %struct.Reg, %struct.Reg* %1057, i32 0, i32 0
  %1059 = bitcast %union.anon* %1058 to %struct.anon.2*
  %BH.i1458 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1059, i32 0, i32 1
  %1060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1061 = getelementptr inbounds %struct.GPR, %struct.GPR* %1060, i32 0, i32 5
  %1062 = getelementptr inbounds %struct.Reg, %struct.Reg* %1061, i32 0, i32 0
  %1063 = bitcast %union.anon* %1062 to %struct.anon.2*
  %CH.i1459 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1063, i32 0, i32 1
  %1064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1065 = getelementptr inbounds %struct.GPR, %struct.GPR* %1064, i32 0, i32 7
  %1066 = getelementptr inbounds %struct.Reg, %struct.Reg* %1065, i32 0, i32 0
  %1067 = bitcast %union.anon* %1066 to %struct.anon.2*
  %DH.i1460 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1067, i32 0, i32 1
  %1068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1069 = getelementptr inbounds %struct.GPR, %struct.GPR* %1068, i32 0, i32 1
  %1070 = getelementptr inbounds %struct.Reg, %struct.Reg* %1069, i32 0, i32 0
  %1071 = bitcast %union.anon* %1070 to %struct.anon.2*
  %AL.i1461 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1071, i32 0, i32 0
  %1072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1073 = getelementptr inbounds %struct.GPR, %struct.GPR* %1072, i32 0, i32 3
  %1074 = getelementptr inbounds %struct.Reg, %struct.Reg* %1073, i32 0, i32 0
  %1075 = bitcast %union.anon* %1074 to %struct.anon.2*
  %BL.i1462 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1075, i32 0, i32 0
  %1076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1077 = getelementptr inbounds %struct.GPR, %struct.GPR* %1076, i32 0, i32 5
  %1078 = getelementptr inbounds %struct.Reg, %struct.Reg* %1077, i32 0, i32 0
  %1079 = bitcast %union.anon* %1078 to %struct.anon.2*
  %CL.i1463 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1079, i32 0, i32 0
  %1080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1081 = getelementptr inbounds %struct.GPR, %struct.GPR* %1080, i32 0, i32 7
  %1082 = getelementptr inbounds %struct.Reg, %struct.Reg* %1081, i32 0, i32 0
  %1083 = bitcast %union.anon* %1082 to %struct.anon.2*
  %DL.i1464 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1083, i32 0, i32 0
  %1084 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1085 = getelementptr inbounds %struct.GPR, %struct.GPR* %1084, i32 0, i32 9
  %1086 = getelementptr inbounds %struct.Reg, %struct.Reg* %1085, i32 0, i32 0
  %1087 = bitcast %union.anon* %1086 to %struct.anon.2*
  %SIL.i1465 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1087, i32 0, i32 0
  %1088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1089 = getelementptr inbounds %struct.GPR, %struct.GPR* %1088, i32 0, i32 11
  %1090 = getelementptr inbounds %struct.Reg, %struct.Reg* %1089, i32 0, i32 0
  %1091 = bitcast %union.anon* %1090 to %struct.anon.2*
  %DIL.i1466 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1091, i32 0, i32 0
  %1092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1093 = getelementptr inbounds %struct.GPR, %struct.GPR* %1092, i32 0, i32 13
  %1094 = getelementptr inbounds %struct.Reg, %struct.Reg* %1093, i32 0, i32 0
  %1095 = bitcast %union.anon* %1094 to %struct.anon.2*
  %SPL.i1467 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1095, i32 0, i32 0
  %1096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1097 = getelementptr inbounds %struct.GPR, %struct.GPR* %1096, i32 0, i32 15
  %1098 = getelementptr inbounds %struct.Reg, %struct.Reg* %1097, i32 0, i32 0
  %1099 = bitcast %union.anon* %1098 to %struct.anon.2*
  %BPL.i1468 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1099, i32 0, i32 0
  %1100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1101 = getelementptr inbounds %struct.GPR, %struct.GPR* %1100, i32 0, i32 17
  %1102 = getelementptr inbounds %struct.Reg, %struct.Reg* %1101, i32 0, i32 0
  %1103 = bitcast %union.anon* %1102 to %struct.anon.2*
  %R8B.i1469 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1103, i32 0, i32 0
  %1104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1105 = getelementptr inbounds %struct.GPR, %struct.GPR* %1104, i32 0, i32 19
  %1106 = getelementptr inbounds %struct.Reg, %struct.Reg* %1105, i32 0, i32 0
  %1107 = bitcast %union.anon* %1106 to %struct.anon.2*
  %R9B.i1470 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1107, i32 0, i32 0
  %1108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1109 = getelementptr inbounds %struct.GPR, %struct.GPR* %1108, i32 0, i32 21
  %1110 = getelementptr inbounds %struct.Reg, %struct.Reg* %1109, i32 0, i32 0
  %1111 = bitcast %union.anon* %1110 to %struct.anon.2*
  %R10B.i1471 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1111, i32 0, i32 0
  %1112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1113 = getelementptr inbounds %struct.GPR, %struct.GPR* %1112, i32 0, i32 23
  %1114 = getelementptr inbounds %struct.Reg, %struct.Reg* %1113, i32 0, i32 0
  %1115 = bitcast %union.anon* %1114 to %struct.anon.2*
  %R11B.i1472 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1115, i32 0, i32 0
  %1116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1117 = getelementptr inbounds %struct.GPR, %struct.GPR* %1116, i32 0, i32 25
  %1118 = getelementptr inbounds %struct.Reg, %struct.Reg* %1117, i32 0, i32 0
  %1119 = bitcast %union.anon* %1118 to %struct.anon.2*
  %R12B.i1473 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1119, i32 0, i32 0
  %1120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1121 = getelementptr inbounds %struct.GPR, %struct.GPR* %1120, i32 0, i32 27
  %1122 = getelementptr inbounds %struct.Reg, %struct.Reg* %1121, i32 0, i32 0
  %1123 = bitcast %union.anon* %1122 to %struct.anon.2*
  %R13B.i1474 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1123, i32 0, i32 0
  %1124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1125 = getelementptr inbounds %struct.GPR, %struct.GPR* %1124, i32 0, i32 29
  %1126 = getelementptr inbounds %struct.Reg, %struct.Reg* %1125, i32 0, i32 0
  %1127 = bitcast %union.anon* %1126 to %struct.anon.2*
  %R14B.i1475 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1127, i32 0, i32 0
  %1128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1129 = getelementptr inbounds %struct.GPR, %struct.GPR* %1128, i32 0, i32 31
  %1130 = getelementptr inbounds %struct.Reg, %struct.Reg* %1129, i32 0, i32 0
  %1131 = bitcast %union.anon* %1130 to %struct.anon.2*
  %R15B.i1476 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1131, i32 0, i32 0
  %1132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1133 = getelementptr inbounds %struct.GPR, %struct.GPR* %1132, i32 0, i32 1
  %1134 = getelementptr inbounds %struct.Reg, %struct.Reg* %1133, i32 0, i32 0
  %AX.i1477 = bitcast %union.anon* %1134 to i16*
  %1135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1136 = getelementptr inbounds %struct.GPR, %struct.GPR* %1135, i32 0, i32 3
  %1137 = getelementptr inbounds %struct.Reg, %struct.Reg* %1136, i32 0, i32 0
  %BX.i1478 = bitcast %union.anon* %1137 to i16*
  %1138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1139 = getelementptr inbounds %struct.GPR, %struct.GPR* %1138, i32 0, i32 5
  %1140 = getelementptr inbounds %struct.Reg, %struct.Reg* %1139, i32 0, i32 0
  %CX.i1479 = bitcast %union.anon* %1140 to i16*
  %1141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1142 = getelementptr inbounds %struct.GPR, %struct.GPR* %1141, i32 0, i32 7
  %1143 = getelementptr inbounds %struct.Reg, %struct.Reg* %1142, i32 0, i32 0
  %DX.i1480 = bitcast %union.anon* %1143 to i16*
  %1144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1145 = getelementptr inbounds %struct.GPR, %struct.GPR* %1144, i32 0, i32 9
  %1146 = getelementptr inbounds %struct.Reg, %struct.Reg* %1145, i32 0, i32 0
  %SI.i1481 = bitcast %union.anon* %1146 to i16*
  %1147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1148 = getelementptr inbounds %struct.GPR, %struct.GPR* %1147, i32 0, i32 11
  %1149 = getelementptr inbounds %struct.Reg, %struct.Reg* %1148, i32 0, i32 0
  %DI.i1482 = bitcast %union.anon* %1149 to i16*
  %1150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1151 = getelementptr inbounds %struct.GPR, %struct.GPR* %1150, i32 0, i32 13
  %1152 = getelementptr inbounds %struct.Reg, %struct.Reg* %1151, i32 0, i32 0
  %SP.i1483 = bitcast %union.anon* %1152 to i16*
  %1153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1154 = getelementptr inbounds %struct.GPR, %struct.GPR* %1153, i32 0, i32 15
  %1155 = getelementptr inbounds %struct.Reg, %struct.Reg* %1154, i32 0, i32 0
  %BP.i1484 = bitcast %union.anon* %1155 to i16*
  %1156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1157 = getelementptr inbounds %struct.GPR, %struct.GPR* %1156, i32 0, i32 17
  %1158 = getelementptr inbounds %struct.Reg, %struct.Reg* %1157, i32 0, i32 0
  %R8W.i1485 = bitcast %union.anon* %1158 to i16*
  %1159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1160 = getelementptr inbounds %struct.GPR, %struct.GPR* %1159, i32 0, i32 19
  %1161 = getelementptr inbounds %struct.Reg, %struct.Reg* %1160, i32 0, i32 0
  %R9W.i1486 = bitcast %union.anon* %1161 to i16*
  %1162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1163 = getelementptr inbounds %struct.GPR, %struct.GPR* %1162, i32 0, i32 21
  %1164 = getelementptr inbounds %struct.Reg, %struct.Reg* %1163, i32 0, i32 0
  %R10W.i1487 = bitcast %union.anon* %1164 to i16*
  %1165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1166 = getelementptr inbounds %struct.GPR, %struct.GPR* %1165, i32 0, i32 23
  %1167 = getelementptr inbounds %struct.Reg, %struct.Reg* %1166, i32 0, i32 0
  %R11W.i1488 = bitcast %union.anon* %1167 to i16*
  %1168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1169 = getelementptr inbounds %struct.GPR, %struct.GPR* %1168, i32 0, i32 25
  %1170 = getelementptr inbounds %struct.Reg, %struct.Reg* %1169, i32 0, i32 0
  %R12W.i1489 = bitcast %union.anon* %1170 to i16*
  %1171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1172 = getelementptr inbounds %struct.GPR, %struct.GPR* %1171, i32 0, i32 27
  %1173 = getelementptr inbounds %struct.Reg, %struct.Reg* %1172, i32 0, i32 0
  %R13W.i1490 = bitcast %union.anon* %1173 to i16*
  %1174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1175 = getelementptr inbounds %struct.GPR, %struct.GPR* %1174, i32 0, i32 29
  %1176 = getelementptr inbounds %struct.Reg, %struct.Reg* %1175, i32 0, i32 0
  %R14W.i1491 = bitcast %union.anon* %1176 to i16*
  %1177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1178 = getelementptr inbounds %struct.GPR, %struct.GPR* %1177, i32 0, i32 31
  %1179 = getelementptr inbounds %struct.Reg, %struct.Reg* %1178, i32 0, i32 0
  %R15W.i1492 = bitcast %union.anon* %1179 to i16*
  %1180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1181 = getelementptr inbounds %struct.GPR, %struct.GPR* %1180, i32 0, i32 33
  %1182 = getelementptr inbounds %struct.Reg, %struct.Reg* %1181, i32 0, i32 0
  %IP.i1493 = bitcast %union.anon* %1182 to i16*
  %1183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1184 = getelementptr inbounds %struct.GPR, %struct.GPR* %1183, i32 0, i32 1
  %1185 = getelementptr inbounds %struct.Reg, %struct.Reg* %1184, i32 0, i32 0
  %EAX.i1494 = bitcast %union.anon* %1185 to i32*
  %1186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1187 = getelementptr inbounds %struct.GPR, %struct.GPR* %1186, i32 0, i32 3
  %1188 = getelementptr inbounds %struct.Reg, %struct.Reg* %1187, i32 0, i32 0
  %EBX.i1495 = bitcast %union.anon* %1188 to i32*
  %1189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1190 = getelementptr inbounds %struct.GPR, %struct.GPR* %1189, i32 0, i32 5
  %1191 = getelementptr inbounds %struct.Reg, %struct.Reg* %1190, i32 0, i32 0
  %ECX.i1496 = bitcast %union.anon* %1191 to i32*
  %1192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1193 = getelementptr inbounds %struct.GPR, %struct.GPR* %1192, i32 0, i32 7
  %1194 = getelementptr inbounds %struct.Reg, %struct.Reg* %1193, i32 0, i32 0
  %EDX.i1497 = bitcast %union.anon* %1194 to i32*
  %1195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1196 = getelementptr inbounds %struct.GPR, %struct.GPR* %1195, i32 0, i32 9
  %1197 = getelementptr inbounds %struct.Reg, %struct.Reg* %1196, i32 0, i32 0
  %ESI.i1498 = bitcast %union.anon* %1197 to i32*
  %1198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1199 = getelementptr inbounds %struct.GPR, %struct.GPR* %1198, i32 0, i32 11
  %1200 = getelementptr inbounds %struct.Reg, %struct.Reg* %1199, i32 0, i32 0
  %EDI.i1499 = bitcast %union.anon* %1200 to i32*
  %1201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1202 = getelementptr inbounds %struct.GPR, %struct.GPR* %1201, i32 0, i32 13
  %1203 = getelementptr inbounds %struct.Reg, %struct.Reg* %1202, i32 0, i32 0
  %ESP.i1500 = bitcast %union.anon* %1203 to i32*
  %1204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1205 = getelementptr inbounds %struct.GPR, %struct.GPR* %1204, i32 0, i32 15
  %1206 = getelementptr inbounds %struct.Reg, %struct.Reg* %1205, i32 0, i32 0
  %EBP.i1501 = bitcast %union.anon* %1206 to i32*
  %1207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1208 = getelementptr inbounds %struct.GPR, %struct.GPR* %1207, i32 0, i32 33
  %1209 = getelementptr inbounds %struct.Reg, %struct.Reg* %1208, i32 0, i32 0
  %EIP.i1502 = bitcast %union.anon* %1209 to i32*
  %1210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1211 = getelementptr inbounds %struct.GPR, %struct.GPR* %1210, i32 0, i32 17
  %1212 = getelementptr inbounds %struct.Reg, %struct.Reg* %1211, i32 0, i32 0
  %R8D.i1503 = bitcast %union.anon* %1212 to i32*
  %1213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1214 = getelementptr inbounds %struct.GPR, %struct.GPR* %1213, i32 0, i32 19
  %1215 = getelementptr inbounds %struct.Reg, %struct.Reg* %1214, i32 0, i32 0
  %R9D.i1504 = bitcast %union.anon* %1215 to i32*
  %1216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1217 = getelementptr inbounds %struct.GPR, %struct.GPR* %1216, i32 0, i32 21
  %1218 = getelementptr inbounds %struct.Reg, %struct.Reg* %1217, i32 0, i32 0
  %R10D.i1505 = bitcast %union.anon* %1218 to i32*
  %1219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1220 = getelementptr inbounds %struct.GPR, %struct.GPR* %1219, i32 0, i32 23
  %1221 = getelementptr inbounds %struct.Reg, %struct.Reg* %1220, i32 0, i32 0
  %R11D.i1506 = bitcast %union.anon* %1221 to i32*
  %1222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1223 = getelementptr inbounds %struct.GPR, %struct.GPR* %1222, i32 0, i32 25
  %1224 = getelementptr inbounds %struct.Reg, %struct.Reg* %1223, i32 0, i32 0
  %R12D.i1507 = bitcast %union.anon* %1224 to i32*
  %1225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1226 = getelementptr inbounds %struct.GPR, %struct.GPR* %1225, i32 0, i32 27
  %1227 = getelementptr inbounds %struct.Reg, %struct.Reg* %1226, i32 0, i32 0
  %R13D.i1508 = bitcast %union.anon* %1227 to i32*
  %1228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1229 = getelementptr inbounds %struct.GPR, %struct.GPR* %1228, i32 0, i32 29
  %1230 = getelementptr inbounds %struct.Reg, %struct.Reg* %1229, i32 0, i32 0
  %R14D.i1509 = bitcast %union.anon* %1230 to i32*
  %1231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1232 = getelementptr inbounds %struct.GPR, %struct.GPR* %1231, i32 0, i32 31
  %1233 = getelementptr inbounds %struct.Reg, %struct.Reg* %1232, i32 0, i32 0
  %R15D.i1510 = bitcast %union.anon* %1233 to i32*
  %1234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1235 = getelementptr inbounds %struct.GPR, %struct.GPR* %1234, i32 0, i32 1
  %1236 = getelementptr inbounds %struct.Reg, %struct.Reg* %1235, i32 0, i32 0
  %RAX.i1511 = bitcast %union.anon* %1236 to i64*
  %1237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1238 = getelementptr inbounds %struct.GPR, %struct.GPR* %1237, i32 0, i32 3
  %1239 = getelementptr inbounds %struct.Reg, %struct.Reg* %1238, i32 0, i32 0
  %RBX.i1512 = bitcast %union.anon* %1239 to i64*
  %1240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1241 = getelementptr inbounds %struct.GPR, %struct.GPR* %1240, i32 0, i32 5
  %1242 = getelementptr inbounds %struct.Reg, %struct.Reg* %1241, i32 0, i32 0
  %RCX.i1513 = bitcast %union.anon* %1242 to i64*
  %1243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1244 = getelementptr inbounds %struct.GPR, %struct.GPR* %1243, i32 0, i32 7
  %1245 = getelementptr inbounds %struct.Reg, %struct.Reg* %1244, i32 0, i32 0
  %RDX.i1514 = bitcast %union.anon* %1245 to i64*
  %1246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1247 = getelementptr inbounds %struct.GPR, %struct.GPR* %1246, i32 0, i32 9
  %1248 = getelementptr inbounds %struct.Reg, %struct.Reg* %1247, i32 0, i32 0
  %RSI.i1515 = bitcast %union.anon* %1248 to i64*
  %1249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1250 = getelementptr inbounds %struct.GPR, %struct.GPR* %1249, i32 0, i32 11
  %1251 = getelementptr inbounds %struct.Reg, %struct.Reg* %1250, i32 0, i32 0
  %RDI.i1516 = bitcast %union.anon* %1251 to i64*
  %1252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1253 = getelementptr inbounds %struct.GPR, %struct.GPR* %1252, i32 0, i32 13
  %1254 = getelementptr inbounds %struct.Reg, %struct.Reg* %1253, i32 0, i32 0
  %RSP.i1517 = bitcast %union.anon* %1254 to i64*
  %1255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1256 = getelementptr inbounds %struct.GPR, %struct.GPR* %1255, i32 0, i32 15
  %1257 = getelementptr inbounds %struct.Reg, %struct.Reg* %1256, i32 0, i32 0
  %RBP.i1518 = bitcast %union.anon* %1257 to i64*
  %1258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1259 = getelementptr inbounds %struct.GPR, %struct.GPR* %1258, i32 0, i32 17
  %1260 = getelementptr inbounds %struct.Reg, %struct.Reg* %1259, i32 0, i32 0
  %R8.i1519 = bitcast %union.anon* %1260 to i64*
  %1261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1262 = getelementptr inbounds %struct.GPR, %struct.GPR* %1261, i32 0, i32 19
  %1263 = getelementptr inbounds %struct.Reg, %struct.Reg* %1262, i32 0, i32 0
  %R9.i1520 = bitcast %union.anon* %1263 to i64*
  %1264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1265 = getelementptr inbounds %struct.GPR, %struct.GPR* %1264, i32 0, i32 21
  %1266 = getelementptr inbounds %struct.Reg, %struct.Reg* %1265, i32 0, i32 0
  %R10.i1521 = bitcast %union.anon* %1266 to i64*
  %1267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1268 = getelementptr inbounds %struct.GPR, %struct.GPR* %1267, i32 0, i32 23
  %1269 = getelementptr inbounds %struct.Reg, %struct.Reg* %1268, i32 0, i32 0
  %R11.i1522 = bitcast %union.anon* %1269 to i64*
  %1270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1271 = getelementptr inbounds %struct.GPR, %struct.GPR* %1270, i32 0, i32 25
  %1272 = getelementptr inbounds %struct.Reg, %struct.Reg* %1271, i32 0, i32 0
  %R12.i1523 = bitcast %union.anon* %1272 to i64*
  %1273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1274 = getelementptr inbounds %struct.GPR, %struct.GPR* %1273, i32 0, i32 27
  %1275 = getelementptr inbounds %struct.Reg, %struct.Reg* %1274, i32 0, i32 0
  %R13.i1524 = bitcast %union.anon* %1275 to i64*
  %1276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1277 = getelementptr inbounds %struct.GPR, %struct.GPR* %1276, i32 0, i32 29
  %1278 = getelementptr inbounds %struct.Reg, %struct.Reg* %1277, i32 0, i32 0
  %R14.i1525 = bitcast %union.anon* %1278 to i64*
  %1279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1280 = getelementptr inbounds %struct.GPR, %struct.GPR* %1279, i32 0, i32 31
  %1281 = getelementptr inbounds %struct.Reg, %struct.Reg* %1280, i32 0, i32 0
  %R15.i1526 = bitcast %union.anon* %1281 to i64*
  %1282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1283 = getelementptr inbounds %struct.GPR, %struct.GPR* %1282, i32 0, i32 33
  %1284 = getelementptr inbounds %struct.Reg, %struct.Reg* %1283, i32 0, i32 0
  %RIP.i1527 = bitcast %union.anon* %1284 to i64*
  %1285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %1286 = getelementptr inbounds %struct.Segments, %struct.Segments* %1285, i32 0, i32 1
  %SS.i1528 = bitcast %union.SegmentSelector* %1286 to i16*
  %1287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %1288 = getelementptr inbounds %struct.Segments, %struct.Segments* %1287, i32 0, i32 3
  %ES.i1529 = bitcast %union.SegmentSelector* %1288 to i16*
  %1289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %1290 = getelementptr inbounds %struct.Segments, %struct.Segments* %1289, i32 0, i32 5
  %GS.i1530 = bitcast %union.SegmentSelector* %1290 to i16*
  %1291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %1292 = getelementptr inbounds %struct.Segments, %struct.Segments* %1291, i32 0, i32 7
  %FS.i1531 = bitcast %union.SegmentSelector* %1292 to i16*
  %1293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %1294 = getelementptr inbounds %struct.Segments, %struct.Segments* %1293, i32 0, i32 9
  %DS.i1532 = bitcast %union.SegmentSelector* %1294 to i16*
  %1295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %1296 = getelementptr inbounds %struct.Segments, %struct.Segments* %1295, i32 0, i32 11
  %CS.i1533 = bitcast %union.SegmentSelector* %1296 to i16*
  %1297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %1298 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %1297, i32 0, i32 5
  %1299 = getelementptr inbounds %struct.Reg, %struct.Reg* %1298, i32 0, i32 0
  %GS_BASE.i1534 = bitcast %union.anon* %1299 to i64*
  %1300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %1301 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %1300, i32 0, i32 7
  %1302 = getelementptr inbounds %struct.Reg, %struct.Reg* %1301, i32 0, i32 0
  %FS_BASE.i1535 = bitcast %union.anon* %1302 to i64*
  %1303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1304 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1303, i64 0, i64 0
  %YMM0.i1536 = bitcast %union.VectorReg* %1304 to %"class.std::bitset"*
  %1305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1306 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1305, i64 0, i64 1
  %YMM1.i1537 = bitcast %union.VectorReg* %1306 to %"class.std::bitset"*
  %1307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1308 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1307, i64 0, i64 2
  %YMM2.i1538 = bitcast %union.VectorReg* %1308 to %"class.std::bitset"*
  %1309 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1310 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1309, i64 0, i64 3
  %YMM3.i1539 = bitcast %union.VectorReg* %1310 to %"class.std::bitset"*
  %1311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1312 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1311, i64 0, i64 4
  %YMM4.i1540 = bitcast %union.VectorReg* %1312 to %"class.std::bitset"*
  %1313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1314 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1313, i64 0, i64 5
  %YMM5.i1541 = bitcast %union.VectorReg* %1314 to %"class.std::bitset"*
  %1315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1316 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1315, i64 0, i64 6
  %YMM6.i1542 = bitcast %union.VectorReg* %1316 to %"class.std::bitset"*
  %1317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1318 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1317, i64 0, i64 7
  %YMM7.i1543 = bitcast %union.VectorReg* %1318 to %"class.std::bitset"*
  %1319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1320 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1319, i64 0, i64 8
  %YMM8.i1544 = bitcast %union.VectorReg* %1320 to %"class.std::bitset"*
  %1321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1322 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1321, i64 0, i64 9
  %YMM9.i1545 = bitcast %union.VectorReg* %1322 to %"class.std::bitset"*
  %1323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1324 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1323, i64 0, i64 10
  %YMM10.i1546 = bitcast %union.VectorReg* %1324 to %"class.std::bitset"*
  %1325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1326 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1325, i64 0, i64 11
  %YMM11.i1547 = bitcast %union.VectorReg* %1326 to %"class.std::bitset"*
  %1327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1328 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1327, i64 0, i64 12
  %YMM12.i1548 = bitcast %union.VectorReg* %1328 to %"class.std::bitset"*
  %1329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1330 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1329, i64 0, i64 13
  %YMM13.i1549 = bitcast %union.VectorReg* %1330 to %"class.std::bitset"*
  %1331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1332 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1331, i64 0, i64 14
  %YMM14.i1550 = bitcast %union.VectorReg* %1332 to %"class.std::bitset"*
  %1333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1334 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1333, i64 0, i64 15
  %YMM15.i1551 = bitcast %union.VectorReg* %1334 to %"class.std::bitset"*
  %1335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1336 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1335, i64 0, i64 0
  %XMM0.i1552 = bitcast %union.VectorReg* %1336 to %union.vec128_t*
  %1337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1338 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1337, i64 0, i64 1
  %XMM1.i1553 = bitcast %union.VectorReg* %1338 to %union.vec128_t*
  %1339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1340 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1339, i64 0, i64 2
  %XMM2.i1554 = bitcast %union.VectorReg* %1340 to %union.vec128_t*
  %1341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1342 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1341, i64 0, i64 3
  %XMM3.i1555 = bitcast %union.VectorReg* %1342 to %union.vec128_t*
  %1343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1344 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1343, i64 0, i64 4
  %XMM4.i1556 = bitcast %union.VectorReg* %1344 to %union.vec128_t*
  %1345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1346 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1345, i64 0, i64 5
  %XMM5.i1557 = bitcast %union.VectorReg* %1346 to %union.vec128_t*
  %1347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1348 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1347, i64 0, i64 6
  %XMM6.i1558 = bitcast %union.VectorReg* %1348 to %union.vec128_t*
  %1349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1350 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1349, i64 0, i64 7
  %XMM7.i1559 = bitcast %union.VectorReg* %1350 to %union.vec128_t*
  %1351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1352 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1351, i64 0, i64 8
  %XMM8.i1560 = bitcast %union.VectorReg* %1352 to %union.vec128_t*
  %1353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1354 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1353, i64 0, i64 9
  %XMM9.i1561 = bitcast %union.VectorReg* %1354 to %union.vec128_t*
  %1355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1356 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1355, i64 0, i64 10
  %XMM10.i1562 = bitcast %union.VectorReg* %1356 to %union.vec128_t*
  %1357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1358 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1357, i64 0, i64 11
  %XMM11.i1563 = bitcast %union.VectorReg* %1358 to %union.vec128_t*
  %1359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1360 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1359, i64 0, i64 12
  %XMM12.i1564 = bitcast %union.VectorReg* %1360 to %union.vec128_t*
  %1361 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1362 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1361, i64 0, i64 13
  %XMM13.i1565 = bitcast %union.VectorReg* %1362 to %union.vec128_t*
  %1363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1364 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1363, i64 0, i64 14
  %XMM14.i1566 = bitcast %union.VectorReg* %1364 to %union.vec128_t*
  %1365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1366 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1365, i64 0, i64 15
  %XMM15.i1567 = bitcast %union.VectorReg* %1366 to %union.vec128_t*
  %1367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1368 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1367, i32 0, i32 0
  %1369 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1368, i64 0, i64 0
  %ST0.i1568 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1369, i32 0, i32 1
  %1370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1371 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1370, i32 0, i32 0
  %1372 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1371, i64 0, i64 1
  %ST1.i1569 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1372, i32 0, i32 1
  %1373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1374 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1373, i32 0, i32 0
  %1375 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1374, i64 0, i64 2
  %ST2.i1570 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1375, i32 0, i32 1
  %1376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1377 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1376, i32 0, i32 0
  %1378 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1377, i64 0, i64 3
  %ST3.i1571 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1378, i32 0, i32 1
  %1379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1380 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1379, i32 0, i32 0
  %1381 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1380, i64 0, i64 4
  %ST4.i1572 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1381, i32 0, i32 1
  %1382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1383 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1382, i32 0, i32 0
  %1384 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1383, i64 0, i64 5
  %ST5.i1573 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1384, i32 0, i32 1
  %1385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1386 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1385, i32 0, i32 0
  %1387 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1386, i64 0, i64 6
  %ST6.i1574 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1387, i32 0, i32 1
  %1388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1389 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1388, i32 0, i32 0
  %1390 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1389, i64 0, i64 7
  %ST7.i1575 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1390, i32 0, i32 1
  %1391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1392 = getelementptr inbounds %struct.MMX, %struct.MMX* %1391, i32 0, i32 0
  %1393 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1392, i64 0, i64 0
  %1394 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1393, i32 0, i32 1
  %1395 = bitcast %union.vec64_t* %1394 to %struct.uint64v1_t*
  %1396 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1395, i32 0, i32 0
  %MM0.i1576 = getelementptr inbounds [1 x i64], [1 x i64]* %1396, i64 0, i64 0
  %1397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1398 = getelementptr inbounds %struct.MMX, %struct.MMX* %1397, i32 0, i32 0
  %1399 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1398, i64 0, i64 1
  %1400 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1399, i32 0, i32 1
  %1401 = bitcast %union.vec64_t* %1400 to %struct.uint64v1_t*
  %1402 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1401, i32 0, i32 0
  %MM1.i1577 = getelementptr inbounds [1 x i64], [1 x i64]* %1402, i64 0, i64 0
  %1403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1404 = getelementptr inbounds %struct.MMX, %struct.MMX* %1403, i32 0, i32 0
  %1405 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1404, i64 0, i64 2
  %1406 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1405, i32 0, i32 1
  %1407 = bitcast %union.vec64_t* %1406 to %struct.uint64v1_t*
  %1408 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1407, i32 0, i32 0
  %MM2.i1578 = getelementptr inbounds [1 x i64], [1 x i64]* %1408, i64 0, i64 0
  %1409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1410 = getelementptr inbounds %struct.MMX, %struct.MMX* %1409, i32 0, i32 0
  %1411 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1410, i64 0, i64 3
  %1412 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1411, i32 0, i32 1
  %1413 = bitcast %union.vec64_t* %1412 to %struct.uint64v1_t*
  %1414 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1413, i32 0, i32 0
  %MM3.i1579 = getelementptr inbounds [1 x i64], [1 x i64]* %1414, i64 0, i64 0
  %1415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1416 = getelementptr inbounds %struct.MMX, %struct.MMX* %1415, i32 0, i32 0
  %1417 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1416, i64 0, i64 4
  %1418 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1417, i32 0, i32 1
  %1419 = bitcast %union.vec64_t* %1418 to %struct.uint64v1_t*
  %1420 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1419, i32 0, i32 0
  %MM4.i1580 = getelementptr inbounds [1 x i64], [1 x i64]* %1420, i64 0, i64 0
  %1421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1422 = getelementptr inbounds %struct.MMX, %struct.MMX* %1421, i32 0, i32 0
  %1423 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1422, i64 0, i64 5
  %1424 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1423, i32 0, i32 1
  %1425 = bitcast %union.vec64_t* %1424 to %struct.uint64v1_t*
  %1426 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1425, i32 0, i32 0
  %MM5.i1581 = getelementptr inbounds [1 x i64], [1 x i64]* %1426, i64 0, i64 0
  %1427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1428 = getelementptr inbounds %struct.MMX, %struct.MMX* %1427, i32 0, i32 0
  %1429 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1428, i64 0, i64 6
  %1430 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1429, i32 0, i32 1
  %1431 = bitcast %union.vec64_t* %1430 to %struct.uint64v1_t*
  %1432 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1431, i32 0, i32 0
  %MM6.i1582 = getelementptr inbounds [1 x i64], [1 x i64]* %1432, i64 0, i64 0
  %1433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1434 = getelementptr inbounds %struct.MMX, %struct.MMX* %1433, i32 0, i32 0
  %1435 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1434, i64 0, i64 7
  %1436 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1435, i32 0, i32 1
  %1437 = bitcast %union.vec64_t* %1436 to %struct.uint64v1_t*
  %1438 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1437, i32 0, i32 0
  %MM7.i1583 = getelementptr inbounds [1 x i64], [1 x i64]* %1438, i64 0, i64 0
  %1439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF.i1584 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1439, i32 0, i32 5
  %1440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF.i1585 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1440, i32 0, i32 1
  %1441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF.i1586 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1441, i32 0, i32 11
  %1442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF.i1587 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1442, i32 0, i32 13
  %1443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF.i1588 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1443, i32 0, i32 3
  %1444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF.i1589 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1444, i32 0, i32 9
  %1445 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF.i1590 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1445, i32 0, i32 7
  store i64* @DR0, i64** %_DR0.i1442, align 8, !noalias !2454
  store i64* @DR1, i64** %_DR1.i1443, align 8, !noalias !2454
  store i64* @DR2, i64** %_DR2.i1444, align 8, !noalias !2454
  store i64* @DR3, i64** %_DR3.i1445, align 8, !noalias !2454
  store i64* @DR4, i64** %_DR4.i1446, align 8, !noalias !2454
  store i64* @DR5, i64** %_DR5.i1447, align 8, !noalias !2454
  store i64* @DR6, i64** %_DR6.i1448, align 8, !noalias !2454
  store i64* @DR7, i64** %_DR7.i1449, align 8, !noalias !2454
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0.i1450, align 8, !noalias !2454
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1.i1451, align 8, !noalias !2454
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2.i1452, align 8, !noalias !2454
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3.i1453, align 8, !noalias !2454
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4.i1454, align 8, !noalias !2454
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8.i1455, align 8, !noalias !2454
  %1446 = bitcast %"class.std::bitset"* %YMM0.i1536 to double*
  %1447 = load double, double* %1446, !alias.scope !2458, !noalias !2459
  %1448 = load i64, i64* %RSP.i1517, !alias.scope !2458, !noalias !2459
  %1449 = load %struct.Memory*, %struct.Memory** %MEMORY.i1441, !noalias !2454
  %1450 = inttoptr i64 %1448 to i64*
  %1451 = load i64, i64* %1450
  store i64 %1451, i64* %PC.i1456, !alias.scope !2458, !noalias !2459
  %1452 = add i64 %1448, 8
  store i64 %1452, i64* %RSP.i1517, !alias.scope !2458, !noalias !2459
  %1453 = call double @sqrt(double %1447)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0.i1536, !alias.scope !2458, !noalias !2459
  %1454 = bitcast %"class.std::bitset"* %YMM0.i1536 to double*
  store double %1453, double* %1454, !alias.scope !2458, !noalias !2459
  %1455 = load %struct.Memory*, %struct.Memory** %MEMORY.i1441, !noalias !2454
  %1456 = bitcast %struct.State** %state.i1432 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1456)
  %1457 = bitcast i64* %curr_pc.i1433 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1457)
  %1458 = bitcast %struct.Memory** %memory.i1434 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1458)
  call void @llvm.lifetime.end(i64 1, i8* %BRANCH_TAKEN.i1435)
  %1459 = bitcast i64* %SS_BASE.i1436 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1459)
  %1460 = bitcast i64* %ES_BASE.i1437 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1460)
  %1461 = bitcast i64* %DS_BASE.i1438 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1461)
  %1462 = bitcast i64* %CS_BASE.i1439 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1462)
  %1463 = bitcast %struct.State** %STATE.i1440 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1463)
  %1464 = bitcast %struct.Memory** %MEMORY.i1441 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1464)
  %1465 = bitcast i64** %_DR0.i1442 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1465)
  %1466 = bitcast i64** %_DR1.i1443 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1466)
  %1467 = bitcast i64** %_DR2.i1444 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1467)
  %1468 = bitcast i64** %_DR3.i1445 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1468)
  %1469 = bitcast i64** %_DR4.i1446 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1469)
  %1470 = bitcast i64** %_DR5.i1447 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1470)
  %1471 = bitcast i64** %_DR6.i1448 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1471)
  %1472 = bitcast i64** %_DR7.i1449 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1472)
  %1473 = bitcast i64** %CR0.i1450 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1473)
  %1474 = bitcast i64** %CR1.i1451 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1474)
  %1475 = bitcast i64** %CR2.i1452 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1475)
  %1476 = bitcast i64** %CR3.i1453 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1476)
  %1477 = bitcast i64** %CR4.i1454 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1477)
  %1478 = bitcast i64** %CR8.i1455 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1478)
  %1479 = load i64, i64* %RBP
  %1480 = sub i64 %1479, 144
  %1481 = bitcast %union.vec128_t* %XMM0 to i8*
  %1482 = load i64, i64* %PC
  %1483 = add i64 %1482, 8
  store i64 %1483, i64* %PC
  %1484 = bitcast i8* %1481 to double*
  %1485 = load double, double* %1484, align 1
  %1486 = inttoptr i64 %1480 to double*
  store double %1485, double* %1486
  %1487 = load i64, i64* %RBP
  %1488 = sub i64 %1487, 24
  %1489 = load i64, i64* %PC
  %1490 = add i64 %1489, 4
  store i64 %1490, i64* %PC
  %1491 = inttoptr i64 %1488 to i64*
  %1492 = load i64, i64* %1491
  store i64 %1492, i64* %RAX, align 8, !tbaa !2428
  %1493 = load i64, i64* %RAX
  %1494 = load i64, i64* %PC
  %1495 = add i64 %1494, 4
  store i64 %1495, i64* %PC
  %1496 = add i64 1, %1493
  store i64 %1496, i64* %RAX, align 8, !tbaa !2428
  %1497 = icmp ult i64 %1496, %1493
  %1498 = icmp ult i64 %1496, 1
  %1499 = or i1 %1497, %1498
  %1500 = zext i1 %1499 to i8
  %1501 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1500, i8* %1501, align 1, !tbaa !2432
  %1502 = trunc i64 %1496 to i32
  %1503 = and i32 %1502, 255
  %1504 = call i32 @llvm.ctpop.i32(i32 %1503) #17
  %1505 = trunc i32 %1504 to i8
  %1506 = and i8 %1505, 1
  %1507 = xor i8 %1506, 1
  %1508 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1507, i8* %1508, align 1, !tbaa !2446
  %1509 = xor i64 1, %1493
  %1510 = xor i64 %1509, %1496
  %1511 = lshr i64 %1510, 4
  %1512 = trunc i64 %1511 to i8
  %1513 = and i8 %1512, 1
  %1514 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1513, i8* %1514, align 1, !tbaa !2450
  %1515 = icmp eq i64 %1496, 0
  %1516 = zext i1 %1515 to i8
  %1517 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1516, i8* %1517, align 1, !tbaa !2447
  %1518 = lshr i64 %1496, 63
  %1519 = trunc i64 %1518 to i8
  %1520 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1519, i8* %1520, align 1, !tbaa !2448
  %1521 = lshr i64 %1493, 63
  %1522 = xor i64 %1518, %1521
  %1523 = add nuw nsw i64 %1522, %1518
  %1524 = icmp eq i64 %1523, 2
  %1525 = zext i1 %1524 to i8
  %1526 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1525, i8* %1526, align 1, !tbaa !2449
  %1527 = load i64, i64* %RBP
  %1528 = sub i64 %1527, 24
  %1529 = load i64, i64* %RAX
  %1530 = load i64, i64* %PC
  %1531 = add i64 %1530, 4
  store i64 %1531, i64* %PC
  %1532 = inttoptr i64 %1528 to i64*
  store i64 %1529, i64* %1532
  %1533 = load i64, i64* %PC
  %1534 = sub i64 %1533, 66
  %1535 = load i64, i64* %PC
  %1536 = add i64 %1535, 5
  store i64 %1536, i64* %PC
  %1537 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1534, i64* %1537, align 8, !tbaa !2428
  br label %block_40149e

block_400dd1:                                     ; preds = %block_400db6, %block_400dc6
  %MEMORY.3 = phi %struct.Memory* [ %MEMORY.11, %block_400dc6 ], [ %MEMORY.11, %block_400db6 ]
  %1538 = load i64, i64* %PC
  %1539 = add i64 %1538, 8
  store i64 %1539, i64* %PC
  %1540 = load i32, i32* bitcast (%J_type* @J to i32*)
  %1541 = sub i32 %1540, 1
  %1542 = icmp ult i32 %1540, 1
  %1543 = zext i1 %1542 to i8
  %1544 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1543, i8* %1544, align 1, !tbaa !2432
  %1545 = and i32 %1541, 255
  %1546 = call i32 @llvm.ctpop.i32(i32 %1545) #17
  %1547 = trunc i32 %1546 to i8
  %1548 = and i8 %1547, 1
  %1549 = xor i8 %1548, 1
  %1550 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1549, i8* %1550, align 1, !tbaa !2446
  %1551 = xor i32 %1540, 1
  %1552 = xor i32 %1551, %1541
  %1553 = lshr i32 %1552, 4
  %1554 = trunc i32 %1553 to i8
  %1555 = and i8 %1554, 1
  %1556 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1555, i8* %1556, align 1, !tbaa !2450
  %1557 = icmp eq i32 %1541, 0
  %1558 = zext i1 %1557 to i8
  %1559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1558, i8* %1559, align 1, !tbaa !2447
  %1560 = lshr i32 %1541, 31
  %1561 = trunc i32 %1560 to i8
  %1562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1561, i8* %1562, align 1, !tbaa !2448
  %1563 = lshr i32 %1540, 31
  %1564 = xor i32 %1560, %1563
  %1565 = add nuw nsw i32 %1564, %1563
  %1566 = icmp eq i32 %1565, 2
  %1567 = zext i1 %1566 to i8
  %1568 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1567, i8* %1568, align 1, !tbaa !2449
  %1569 = load i64, i64* %PC
  %1570 = add i64 %1569, 22
  %1571 = load i64, i64* %PC
  %1572 = add i64 %1571, 6
  %1573 = load i64, i64* %PC
  %1574 = add i64 %1573, 6
  store i64 %1574, i64* %PC
  %1575 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1576 = load i8, i8* %1575, align 1, !tbaa !2448
  %1577 = icmp ne i8 %1576, 0
  %1578 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1579 = load i8, i8* %1578, align 1, !tbaa !2449
  %1580 = icmp ne i8 %1579, 0
  %1581 = xor i1 %1577, %1580
  %1582 = xor i1 %1581, true
  %1583 = zext i1 %1582 to i8
  store i8 %1583, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %1584 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1585 = select i1 %1581, i64 %1572, i64 %1570
  store i64 %1585, i64* %1584, align 8, !tbaa !2428
  %1586 = load i8, i8* %BRANCH_TAKEN
  %1587 = icmp eq i8 %1586, 1
  %1588 = load i64, i64* %PC
  %1589 = add i64 %1588, 11
  store i64 %1589, i64* %PC
  br i1 %1587, label %block_400def, label %block_400ddf

block_4008cd:                                     ; preds = %block_4008af
  %1590 = load i64, i64* %RBP
  %1591 = sub i64 %1590, 16
  %1592 = load i64, i64* %PC
  %1593 = add i64 %1592, 4
  store i64 %1593, i64* %PC
  %1594 = inttoptr i64 %1591 to i64*
  %1595 = load i64, i64* %1594
  store i64 %1595, i64* %RAX, align 8, !tbaa !2428
  %1596 = load i64, i64* %RBP
  %1597 = sub i64 %1596, 172
  %1598 = load i64, i64* %PC
  %1599 = add i64 %1598, 7
  store i64 %1599, i64* %PC
  %1600 = inttoptr i64 %1597 to i32*
  %1601 = load i32, i32* %1600
  %1602 = sext i32 %1601 to i64
  store i64 %1602, i64* %RCX, align 8, !tbaa !2428
  %1603 = load i64, i64* %RAX
  %1604 = load i64, i64* %RCX
  %1605 = mul i64 %1604, 8
  %1606 = add i64 %1605, %1603
  %1607 = load i64, i64* %PC
  %1608 = add i64 %1607, 4
  store i64 %1608, i64* %PC
  %1609 = inttoptr i64 %1606 to i64*
  %1610 = load i64, i64* %1609
  store i64 %1610, i64* %RDI, align 8, !tbaa !2428
  %1611 = load i64, i64* %PC
  %1612 = sub i64 %1611, 492
  %1613 = load i64, i64* %PC
  %1614 = add i64 %1613, 5
  %1615 = load i64, i64* %PC
  %1616 = add i64 %1615, 5
  store i64 %1616, i64* %PC
  %1617 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %1618 = load i64, i64* %1617, align 8, !tbaa !2428
  %1619 = add i64 %1618, -8
  %1620 = inttoptr i64 %1619 to i64*
  store i64 %1614, i64* %1620
  store i64 %1619, i64* %1617, align 8, !tbaa !2428
  %1621 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1612, i64* %1621, align 8, !tbaa !2428
  %1622 = load i64, i64* %PC
  %1623 = call %struct.Memory* @ext_602190_atol(%struct.State* %0, i64 %1622, %struct.Memory* %1673)
  %1624 = load i64, i64* %RBP
  %1625 = sub i64 %1624, 184
  %1626 = load i64, i64* %RAX
  %1627 = load i64, i64* %PC
  %1628 = add i64 %1627, 7
  store i64 %1628, i64* %PC
  %1629 = inttoptr i64 %1625 to i64*
  store i64 %1626, i64* %1629
  %1630 = load i64, i64* %PC
  %1631 = add i64 %1630, 48
  %1632 = load i64, i64* %PC
  %1633 = add i64 %1632, 5
  store i64 %1633, i64* %PC
  %1634 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1631, i64* %1634, align 8, !tbaa !2428
  %1635 = load i64, i64* %PC
  %1636 = add i64 %1635, 5
  %1637 = load i64, i64* %PC
  %1638 = add i64 %1637, 5
  store i64 %1638, i64* %PC
  %1639 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1636, i64* %1639, align 8, !tbaa !2428
  br label %block_40091d

block_4008af:                                     ; preds = %block_400885
  %1640 = load i64, i64* %RBP
  %1641 = sub i64 %1640, 16
  %1642 = load i64, i64* %PC
  %1643 = add i64 %1642, 4
  store i64 %1643, i64* %PC
  %1644 = inttoptr i64 %1641 to i64*
  %1645 = load i64, i64* %1644
  store i64 %1645, i64* %RAX, align 8, !tbaa !2428
  %1646 = load i64, i64* %RBP
  %1647 = sub i64 %1646, 172
  %1648 = load i64, i64* %PC
  %1649 = add i64 %1648, 7
  store i64 %1649, i64* %PC
  %1650 = inttoptr i64 %1647 to i32*
  %1651 = load i32, i32* %1650
  %1652 = sext i32 %1651 to i64
  store i64 %1652, i64* %RCX, align 8, !tbaa !2428
  %1653 = load i64, i64* %RAX
  %1654 = load i64, i64* %RCX
  %1655 = mul i64 %1654, 8
  %1656 = add i64 %1655, %1653
  %1657 = load i64, i64* %PC
  %1658 = add i64 %1657, 4
  store i64 %1658, i64* %PC
  %1659 = inttoptr i64 %1656 to i64*
  %1660 = load i64, i64* %1659
  store i64 %1660, i64* %RDI, align 8, !tbaa !2428
  %1661 = load i64, i64* %PC
  %1662 = sub i64 %1661, 462
  %1663 = load i64, i64* %PC
  %1664 = add i64 %1663, 5
  %1665 = load i64, i64* %PC
  %1666 = add i64 %1665, 5
  store i64 %1666, i64* %PC
  %1667 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %1668 = load i64, i64* %1667, align 8, !tbaa !2428
  %1669 = add i64 %1668, -8
  %1670 = inttoptr i64 %1669 to i64*
  store i64 %1664, i64* %1670
  store i64 %1669, i64* %1667, align 8, !tbaa !2428
  %1671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1662, i64* %1671, align 8, !tbaa !2428
  %1672 = load i64, i64* %PC
  %1673 = call %struct.Memory* @ext_602190_atol(%struct.State* %0, i64 %1672, %struct.Memory* %8660)
  %1674 = load i64, i64* %RAX
  %1675 = load i64, i64* %PC
  %1676 = add i64 %1675, 4
  store i64 %1676, i64* %PC
  %1677 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1677, align 1, !tbaa !2432
  %1678 = trunc i64 %1674 to i32
  %1679 = and i32 %1678, 255
  %1680 = call i32 @llvm.ctpop.i32(i32 %1679) #17
  %1681 = trunc i32 %1680 to i8
  %1682 = and i8 %1681, 1
  %1683 = xor i8 %1682, 1
  %1684 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1683, i8* %1684, align 1, !tbaa !2446
  %1685 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1685, align 1, !tbaa !2450
  %1686 = icmp eq i64 %1674, 0
  %1687 = zext i1 %1686 to i8
  %1688 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1687, i8* %1688, align 1, !tbaa !2447
  %1689 = lshr i64 %1674, 63
  %1690 = trunc i64 %1689 to i8
  %1691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1690, i8* %1691, align 1, !tbaa !2448
  %1692 = lshr i64 %1674, 63
  %1693 = xor i64 %1689, %1692
  %1694 = add nuw nsw i64 %1693, %1692
  %1695 = icmp eq i64 %1694, 2
  %1696 = zext i1 %1695 to i8
  %1697 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1696, i8* %1697, align 1, !tbaa !2449
  %1698 = load i64, i64* %PC
  %1699 = add i64 %1698, 38
  %1700 = load i64, i64* %PC
  %1701 = add i64 %1700, 6
  %1702 = load i64, i64* %PC
  %1703 = add i64 %1702, 6
  store i64 %1703, i64* %PC
  %1704 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1705 = load i8, i8* %1704, align 1, !tbaa !2447
  %1706 = icmp ne i8 %1705, 0
  %1707 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1708 = load i8, i8* %1707, align 1, !tbaa !2448
  %1709 = icmp ne i8 %1708, 0
  %1710 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1711 = load i8, i8* %1710, align 1, !tbaa !2449
  %1712 = icmp ne i8 %1711, 0
  %1713 = xor i1 %1709, %1712
  %1714 = or i1 %1706, %1713
  %1715 = zext i1 %1714 to i8
  store i8 %1715, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %1716 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1717 = select i1 %1714, i64 %1699, i64 %1701
  store i64 %1717, i64* %1716, align 8, !tbaa !2428
  %1718 = load i8, i8* %BRANCH_TAKEN
  %1719 = icmp eq i8 %1718, 1
  br i1 %1719, label %block_4008ed, label %block_4008cd

block_40154b:                                     ; preds = %block_401530
  %1720 = load i64, i64* %PC
  %1721 = sub i64 %1720, 2992
  %1722 = load i64, i64* %PC
  %1723 = add i64 %1722, 5
  store i64 %1723, i64* %PC
  %1724 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1721, i64* %1724, align 8, !tbaa !2428
  br label %block_40099b

block_400a49:                                     ; preds = %block_40099b, %block_400a57
  %MEMORY.4 = phi %struct.Memory* [ %MEMORY.27, %block_40099b ], [ %MEMORY.4, %block_400a57 ]
  %1725 = load i64, i64* %RBP
  %1726 = sub i64 %1725, 24
  %1727 = load i64, i64* %PC
  %1728 = add i64 %1727, 4
  store i64 %1728, i64* %PC
  %1729 = inttoptr i64 %1726 to i64*
  %1730 = load i64, i64* %1729
  store i64 %1730, i64* %RAX, align 8, !tbaa !2428
  %1731 = load i64, i64* %RAX
  %1732 = load i64, i64* %RBP
  %1733 = sub i64 %1732, 32
  %1734 = load i64, i64* %PC
  %1735 = add i64 %1734, 4
  store i64 %1735, i64* %PC
  %1736 = inttoptr i64 %1733 to i64*
  %1737 = load i64, i64* %1736
  %1738 = sub i64 %1731, %1737
  %1739 = icmp ugt i64 %1737, %1731
  %1740 = zext i1 %1739 to i8
  %1741 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1740, i8* %1741, align 1, !tbaa !2432
  %1742 = trunc i64 %1738 to i32
  %1743 = and i32 %1742, 255
  %1744 = call i32 @llvm.ctpop.i32(i32 %1743) #17
  %1745 = trunc i32 %1744 to i8
  %1746 = and i8 %1745, 1
  %1747 = xor i8 %1746, 1
  %1748 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1747, i8* %1748, align 1, !tbaa !2446
  %1749 = xor i64 %1737, %1731
  %1750 = xor i64 %1749, %1738
  %1751 = lshr i64 %1750, 4
  %1752 = trunc i64 %1751 to i8
  %1753 = and i8 %1752, 1
  %1754 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1753, i8* %1754, align 1, !tbaa !2450
  %1755 = icmp eq i64 %1738, 0
  %1756 = zext i1 %1755 to i8
  %1757 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1756, i8* %1757, align 1, !tbaa !2447
  %1758 = lshr i64 %1738, 63
  %1759 = trunc i64 %1758 to i8
  %1760 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1759, i8* %1760, align 1, !tbaa !2448
  %1761 = lshr i64 %1731, 63
  %1762 = lshr i64 %1737, 63
  %1763 = xor i64 %1762, %1761
  %1764 = xor i64 %1758, %1761
  %1765 = add nuw nsw i64 %1764, %1763
  %1766 = icmp eq i64 %1765, 2
  %1767 = zext i1 %1766 to i8
  %1768 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1767, i8* %1768, align 1, !tbaa !2449
  %1769 = load i64, i64* %PC
  %1770 = add i64 %1769, 197
  %1771 = load i64, i64* %PC
  %1772 = add i64 %1771, 6
  %1773 = load i64, i64* %PC
  %1774 = add i64 %1773, 6
  store i64 %1774, i64* %PC
  %1775 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1776 = load i8, i8* %1775, align 1, !tbaa !2447
  %1777 = icmp eq i8 %1776, 0
  %1778 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1779 = load i8, i8* %1778, align 1, !tbaa !2448
  %1780 = icmp ne i8 %1779, 0
  %1781 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1782 = load i8, i8* %1781, align 1, !tbaa !2449
  %1783 = icmp ne i8 %1782, 0
  %1784 = xor i1 %1780, %1783
  %1785 = xor i1 %1784, true
  %1786 = and i1 %1777, %1785
  %1787 = zext i1 %1786 to i8
  store i8 %1787, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %1788 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1789 = select i1 %1786, i64 %1770, i64 %1772
  store i64 %1789, i64* %1788, align 8, !tbaa !2428
  %1790 = load i8, i8* %BRANCH_TAKEN
  %1791 = icmp eq i8 %1790, 1
  br i1 %1791, label %block_400b16, label %block_400a57

block_400dc6:                                     ; preds = %block_400da8
  store i32 1, i32* bitcast (%J_type* @J to i32*)
  br label %block_400dd1

block_401444:                                     ; preds = %block_4013ca
  %1792 = load i64, i64* %RBP
  %1793 = sub i64 %1792, 176
  %1794 = load i64, i64* %PC
  %1795 = add i64 %1794, 6
  store i64 %1795, i64* %PC
  %1796 = inttoptr i64 %1793 to i32*
  %1797 = load i32, i32* %1796
  %1798 = zext i32 %1797 to i64
  store i64 %1798, i64* %RAX, align 8, !tbaa !2428
  %1799 = load i32, i32* %EAX
  %1800 = zext i32 %1799 to i64
  %1801 = load i64, i64* %RBP
  %1802 = sub i64 %1801, 172
  %1803 = load i64, i64* %PC
  %1804 = add i64 %1803, 6
  store i64 %1804, i64* %PC
  %1805 = inttoptr i64 %1802 to i32*
  %1806 = load i32, i32* %1805
  %1807 = sub i32 %1799, %1806
  %1808 = icmp ult i32 %1799, %1806
  %1809 = zext i1 %1808 to i8
  %1810 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1809, i8* %1810, align 1, !tbaa !2432
  %1811 = and i32 %1807, 255
  %1812 = call i32 @llvm.ctpop.i32(i32 %1811) #17
  %1813 = trunc i32 %1812 to i8
  %1814 = and i8 %1813, 1
  %1815 = xor i8 %1814, 1
  %1816 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1815, i8* %1816, align 1, !tbaa !2446
  %1817 = xor i32 %1806, %1799
  %1818 = xor i32 %1817, %1807
  %1819 = lshr i32 %1818, 4
  %1820 = trunc i32 %1819 to i8
  %1821 = and i8 %1820, 1
  %1822 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1821, i8* %1822, align 1, !tbaa !2450
  %1823 = icmp eq i32 %1807, 0
  %1824 = zext i1 %1823 to i8
  %1825 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1824, i8* %1825, align 1, !tbaa !2447
  %1826 = lshr i32 %1807, 31
  %1827 = trunc i32 %1826 to i8
  %1828 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1827, i8* %1828, align 1, !tbaa !2448
  %1829 = lshr i32 %1799, 31
  %1830 = lshr i32 %1806, 31
  %1831 = xor i32 %1830, %1829
  %1832 = xor i32 %1826, %1829
  %1833 = add nuw nsw i32 %1832, %1831
  %1834 = icmp eq i32 %1833, 2
  %1835 = zext i1 %1834 to i8
  %1836 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1835, i8* %1836, align 1, !tbaa !2449
  %1837 = load i64, i64* %PC
  %1838 = add i64 %1837, 54
  %1839 = load i64, i64* %PC
  %1840 = add i64 %1839, 6
  %1841 = load i64, i64* %PC
  %1842 = add i64 %1841, 6
  store i64 %1842, i64* %PC
  %1843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1844 = load i8, i8* %1843, align 1, !tbaa !2447
  %1845 = icmp eq i8 %1844, 0
  %1846 = zext i1 %1845 to i8
  store i8 %1846, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %1847 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1848 = select i1 %1845, i64 %1838, i64 %1840
  store i64 %1848, i64* %1847, align 8, !tbaa !2428
  %1849 = load i8, i8* %BRANCH_TAKEN
  %1850 = icmp eq i8 %1849, 1
  br i1 %1850, label %block_401486, label %block_401456

block_400d9d:                                     ; preds = %block_400d7f
  store i32 3, i32* bitcast (%J_type* @J to i32*)
  br label %block_400da8

block_400dfa:                                     ; preds = %block_400ddf, %block_400def
  %MEMORY.5 = phi %struct.Memory* [ %MEMORY.3, %block_400def ], [ %MEMORY.3, %block_400ddf ]
  %1851 = load i64, i64* %PC
  %1852 = add i64 %1851, 5
  %1853 = load i64, i64* %PC
  %1854 = add i64 %1853, 5
  store i64 %1854, i64* %PC
  %1855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1852, i64* %1855, align 8, !tbaa !2428
  %1856 = load i64, i64* %RBP
  %1857 = sub i64 %1856, 24
  %1858 = load i64, i64* %PC
  %1859 = add i64 %1858, 4
  store i64 %1859, i64* %PC
  %1860 = inttoptr i64 %1857 to i64*
  %1861 = load i64, i64* %1860
  store i64 %1861, i64* %RAX, align 8, !tbaa !2428
  %1862 = load i64, i64* %RAX
  %1863 = load i64, i64* %PC
  %1864 = add i64 %1863, 4
  store i64 %1864, i64* %PC
  %1865 = add i64 1, %1862
  store i64 %1865, i64* %RAX, align 8, !tbaa !2428
  %1866 = icmp ult i64 %1865, %1862
  %1867 = icmp ult i64 %1865, 1
  %1868 = or i1 %1866, %1867
  %1869 = zext i1 %1868 to i8
  %1870 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1869, i8* %1870, align 1, !tbaa !2432
  %1871 = trunc i64 %1865 to i32
  %1872 = and i32 %1871, 255
  %1873 = call i32 @llvm.ctpop.i32(i32 %1872) #17
  %1874 = trunc i32 %1873 to i8
  %1875 = and i8 %1874, 1
  %1876 = xor i8 %1875, 1
  %1877 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1876, i8* %1877, align 1, !tbaa !2446
  %1878 = xor i64 1, %1862
  %1879 = xor i64 %1878, %1865
  %1880 = lshr i64 %1879, 4
  %1881 = trunc i64 %1880 to i8
  %1882 = and i8 %1881, 1
  %1883 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1882, i8* %1883, align 1, !tbaa !2450
  %1884 = icmp eq i64 %1865, 0
  %1885 = zext i1 %1884 to i8
  %1886 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1885, i8* %1886, align 1, !tbaa !2447
  %1887 = lshr i64 %1865, 63
  %1888 = trunc i64 %1887 to i8
  %1889 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1888, i8* %1889, align 1, !tbaa !2448
  %1890 = lshr i64 %1862, 63
  %1891 = xor i64 %1887, %1890
  %1892 = add nuw nsw i64 %1891, %1887
  %1893 = icmp eq i64 %1892, 2
  %1894 = zext i1 %1893 to i8
  %1895 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1894, i8* %1895, align 1, !tbaa !2449
  %1896 = load i64, i64* %RBP
  %1897 = sub i64 %1896, 24
  %1898 = load i64, i64* %RAX
  %1899 = load i64, i64* %PC
  %1900 = add i64 %1899, 4
  store i64 %1900, i64* %PC
  %1901 = inttoptr i64 %1897 to i64*
  store i64 %1898, i64* %1901
  %1902 = load i64, i64* %PC
  %1903 = sub i64 %1902, 154
  %1904 = load i64, i64* %PC
  %1905 = add i64 %1904, 5
  store i64 %1905, i64* %PC
  %1906 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1903, i64* %1906, align 8, !tbaa !2428
  br label %block_400d71

block_401339:                                     ; preds = %block_4012dd, %block_401347
  %MEMORY.6 = phi %struct.Memory* [ %MEMORY.28, %block_4012dd ], [ %9068, %block_401347 ]
  %1907 = load i64, i64* %RBP
  %1908 = sub i64 %1907, 24
  %1909 = load i64, i64* %PC
  %1910 = add i64 %1909, 4
  store i64 %1910, i64* %PC
  %1911 = inttoptr i64 %1908 to i64*
  %1912 = load i64, i64* %1911
  store i64 %1912, i64* %RAX, align 8, !tbaa !2428
  %1913 = load i64, i64* %RAX
  %1914 = load i64, i64* %RBP
  %1915 = sub i64 %1914, 88
  %1916 = load i64, i64* %PC
  %1917 = add i64 %1916, 4
  store i64 %1917, i64* %PC
  %1918 = inttoptr i64 %1915 to i64*
  %1919 = load i64, i64* %1918
  %1920 = sub i64 %1913, %1919
  %1921 = icmp ugt i64 %1919, %1913
  %1922 = zext i1 %1921 to i8
  %1923 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1922, i8* %1923, align 1, !tbaa !2432
  %1924 = trunc i64 %1920 to i32
  %1925 = and i32 %1924, 255
  %1926 = call i32 @llvm.ctpop.i32(i32 %1925) #17
  %1927 = trunc i32 %1926 to i8
  %1928 = and i8 %1927, 1
  %1929 = xor i8 %1928, 1
  %1930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1929, i8* %1930, align 1, !tbaa !2446
  %1931 = xor i64 %1919, %1913
  %1932 = xor i64 %1931, %1920
  %1933 = lshr i64 %1932, 4
  %1934 = trunc i64 %1933 to i8
  %1935 = and i8 %1934, 1
  %1936 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1935, i8* %1936, align 1, !tbaa !2450
  %1937 = icmp eq i64 %1920, 0
  %1938 = zext i1 %1937 to i8
  %1939 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1938, i8* %1939, align 1, !tbaa !2447
  %1940 = lshr i64 %1920, 63
  %1941 = trunc i64 %1940 to i8
  %1942 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1941, i8* %1942, align 1, !tbaa !2448
  %1943 = lshr i64 %1913, 63
  %1944 = lshr i64 %1919, 63
  %1945 = xor i64 %1944, %1943
  %1946 = xor i64 %1940, %1943
  %1947 = add nuw nsw i64 %1946, %1945
  %1948 = icmp eq i64 %1947, 2
  %1949 = zext i1 %1948 to i8
  %1950 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1949, i8* %1950, align 1, !tbaa !2449
  %1951 = load i64, i64* %PC
  %1952 = add i64 %1951, 28
  %1953 = load i64, i64* %PC
  %1954 = add i64 %1953, 6
  %1955 = load i64, i64* %PC
  %1956 = add i64 %1955, 6
  store i64 %1956, i64* %PC
  %1957 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1958 = load i8, i8* %1957, align 1, !tbaa !2447
  %1959 = icmp eq i8 %1958, 0
  %1960 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1961 = load i8, i8* %1960, align 1, !tbaa !2448
  %1962 = icmp ne i8 %1961, 0
  %1963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1964 = load i8, i8* %1963, align 1, !tbaa !2449
  %1965 = icmp ne i8 %1964, 0
  %1966 = xor i1 %1962, %1965
  %1967 = xor i1 %1966, true
  %1968 = and i1 %1959, %1967
  %1969 = zext i1 %1968 to i8
  store i8 %1969, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %1970 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1971 = select i1 %1968, i64 %1952, i64 %1954
  store i64 %1971, i64* %1970, align 8, !tbaa !2428
  %1972 = load i8, i8* %BRANCH_TAKEN
  %1973 = icmp eq i8 %1972, 1
  br i1 %1973, label %block_40135d, label %block_401347

block_400936:                                     ; preds = %block_401584, %block_400931
  %MEMORY.7 = phi %struct.Memory* [ %MEMORY.18, %block_400931 ], [ %7862, %block_401584 ]
  %1974 = load i64, i64* %RAX
  %1975 = load i32, i32* %EAX
  %1976 = zext i32 %1975 to i64
  %1977 = load i64, i64* %PC
  %1978 = add i64 %1977, 2
  store i64 %1978, i64* %PC
  %1979 = xor i64 %1976, %1974
  %1980 = trunc i64 %1979 to i32
  %1981 = and i64 %1979, 4294967295
  store i64 %1981, i64* %RAX, align 8, !tbaa !2428
  %1982 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1982, align 1, !tbaa !2432
  %1983 = and i32 %1980, 255
  %1984 = call i32 @llvm.ctpop.i32(i32 %1983) #17
  %1985 = trunc i32 %1984 to i8
  %1986 = and i8 %1985, 1
  %1987 = xor i8 %1986, 1
  %1988 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1987, i8* %1988, align 1, !tbaa !2446
  %1989 = icmp eq i32 %1980, 0
  %1990 = zext i1 %1989 to i8
  %1991 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1990, i8* %1991, align 1, !tbaa !2447
  %1992 = lshr i32 %1980, 31
  %1993 = trunc i32 %1992 to i8
  %1994 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1993, i8* %1994, align 1, !tbaa !2448
  %1995 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1995, align 1, !tbaa !2449
  %1996 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1996, align 1, !tbaa !2450
  %1997 = load i32, i32* %EAX
  %1998 = zext i32 %1997 to i64
  %1999 = load i64, i64* %PC
  %2000 = add i64 %1999, 2
  store i64 %2000, i64* %PC
  %2001 = and i64 %1998, 4294967295
  store i64 %2001, i64* %RDI, align 8, !tbaa !2428
  %2002 = load i64, i64* %PC
  %2003 = sub i64 %2002, 602
  %2004 = load i64, i64* %PC
  %2005 = add i64 %2004, 5
  %2006 = load i64, i64* %PC
  %2007 = add i64 %2006, 5
  store i64 %2007, i64* %PC
  %2008 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %2009 = load i64, i64* %2008, align 8, !tbaa !2428
  %2010 = add i64 %2009, -8
  %2011 = inttoptr i64 %2010 to i64*
  store i64 %2005, i64* %2011
  store i64 %2010, i64* %2008, align 8, !tbaa !2428
  %2012 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2003, i64* %2012, align 8, !tbaa !2428
  %2013 = load i64, i64* %PC
  %2014 = call %struct.Memory* @ext_4006e0_time(%struct.State* %0, i64 %2013, %struct.Memory* %MEMORY.7)
  %2015 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2016 = load i64, i64* %PC
  %2017 = add i64 %2016, 8
  store i64 %2017, i64* %PC
  %2018 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4018b0__rodata_type* @seg_4018b0__rodata to i64), i64 8) to double*)
  %2019 = bitcast i8* %2015 to double*
  store double %2018, double* %2019, align 1, !tbaa !2451
  %2020 = getelementptr inbounds i8, i8* %2015, i64 8
  %2021 = bitcast i8* %2020 to double*
  store double 0.000000e+00, double* %2021, align 1, !tbaa !2451
  %2022 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %2023 = load i64, i64* %PC
  %2024 = add i64 %2023, 8
  store i64 %2024, i64* %PC
  %2025 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4018b0__rodata_type* @seg_4018b0__rodata to i64), i64 16) to double*)
  %2026 = bitcast i8* %2022 to double*
  store double %2025, double* %2026, align 1, !tbaa !2451
  %2027 = getelementptr inbounds i8, i8* %2022, i64 8
  %2028 = bitcast i8* %2027 to double*
  store double 0.000000e+00, double* %2028, align 1, !tbaa !2451
  %2029 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %2030 = load i64, i64* %PC
  %2031 = add i64 %2030, 8
  store i64 %2031, i64* %PC
  %2032 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4018b0__rodata_type* @seg_4018b0__rodata to i64), i64 24) to double*)
  %2033 = bitcast i8* %2029 to double*
  store double %2032, double* %2033, align 1, !tbaa !2451
  %2034 = getelementptr inbounds i8, i8* %2029, i64 8
  %2035 = bitcast i8* %2034 to double*
  store double 0.000000e+00, double* %2035, align 1, !tbaa !2451
  %2036 = load i64, i64* %RBP
  %2037 = sub i64 %2036, 192
  %2038 = load i64, i64* %RAX
  %2039 = load i64, i64* %PC
  %2040 = add i64 %2039, 7
  store i64 %2040, i64* %PC
  %2041 = inttoptr i64 %2037 to i64*
  store i64 %2038, i64* %2041
  %2042 = bitcast %union.vec128_t* %XMM2 to i8*
  %2043 = load i64, i64* %PC
  %2044 = add i64 %2043, 9
  store i64 %2044, i64* %PC
  %2045 = bitcast i8* %2042 to double*
  %2046 = load double, double* %2045, align 1
  store double %2046, double* bitcast (%T_type* @T to double*)
  %2047 = bitcast %union.vec128_t* %XMM1 to i8*
  %2048 = load i64, i64* %PC
  %2049 = add i64 %2048, 9
  store i64 %2049, i64* %PC
  %2050 = bitcast i8* %2047 to double*
  %2051 = load double, double* %2050, align 1
  store double %2051, double* bitcast (%T1_type* @T1 to double*)
  %2052 = bitcast %union.vec128_t* %XMM0 to i8*
  %2053 = load i64, i64* %PC
  %2054 = add i64 %2053, 9
  store i64 %2054, i64* %PC
  %2055 = bitcast i8* %2052 to double*
  %2056 = load double, double* %2055, align 1
  store double %2056, double* bitcast (%T2_type* @T2 to double*)
  %2057 = load i64, i64* %RBP
  %2058 = sub i64 %2057, 184
  %2059 = load i64, i64* %PC
  %2060 = add i64 %2059, 7
  store i64 %2060, i64* %PC
  %2061 = inttoptr i64 %2058 to i64*
  %2062 = load i64, i64* %2061
  store i64 %2062, i64* %RAX, align 8, !tbaa !2428
  %2063 = load i64, i64* %RBP
  %2064 = sub i64 %2063, 168
  %2065 = load i64, i64* %RAX
  %2066 = load i64, i64* %PC
  %2067 = add i64 %2066, 7
  store i64 %2067, i64* %PC
  %2068 = inttoptr i64 %2064 to i64*
  store i64 %2065, i64* %2068
  %2069 = load i64, i64* %RBP
  %2070 = sub i64 %2069, 172
  %2071 = load i64, i64* %PC
  %2072 = add i64 %2071, 10
  store i64 %2072, i64* %PC
  %2073 = inttoptr i64 %2070 to i32*
  store i32 1, i32* %2073
  %2074 = load i64, i64* %RBP
  %2075 = sub i64 %2074, 176
  %2076 = load i64, i64* %PC
  %2077 = add i64 %2076, 10
  store i64 %2077, i64* %PC
  %2078 = inttoptr i64 %2075 to i32*
  store i32 1, i32* %2078
  br label %block_40099b

block_40091d:                                     ; preds = %block_4008a0, %block_4008cd
  %MEMORY.8 = phi %struct.Memory* [ %MEMORY.15, %block_4008a0 ], [ %1623, %block_4008cd ]
  %2079 = load i64, i64* %RBP
  %2080 = sub i64 %2079, 172
  %2081 = load i64, i64* %PC
  %2082 = add i64 %2081, 6
  store i64 %2082, i64* %PC
  %2083 = inttoptr i64 %2080 to i32*
  %2084 = load i32, i32* %2083
  %2085 = zext i32 %2084 to i64
  store i64 %2085, i64* %RAX, align 8, !tbaa !2428
  %2086 = load i64, i64* %RAX
  %2087 = load i64, i64* %PC
  %2088 = add i64 %2087, 3
  store i64 %2088, i64* %PC
  %2089 = trunc i64 %2086 to i32
  %2090 = add i32 1, %2089
  %2091 = zext i32 %2090 to i64
  store i64 %2091, i64* %RAX, align 8, !tbaa !2428
  %2092 = icmp ult i32 %2090, %2089
  %2093 = icmp ult i32 %2090, 1
  %2094 = or i1 %2092, %2093
  %2095 = zext i1 %2094 to i8
  %2096 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2095, i8* %2096, align 1, !tbaa !2432
  %2097 = and i32 %2090, 255
  %2098 = call i32 @llvm.ctpop.i32(i32 %2097) #17
  %2099 = trunc i32 %2098 to i8
  %2100 = and i8 %2099, 1
  %2101 = xor i8 %2100, 1
  %2102 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2101, i8* %2102, align 1, !tbaa !2446
  %2103 = xor i64 1, %2086
  %2104 = trunc i64 %2103 to i32
  %2105 = xor i32 %2104, %2090
  %2106 = lshr i32 %2105, 4
  %2107 = trunc i32 %2106 to i8
  %2108 = and i8 %2107, 1
  %2109 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2108, i8* %2109, align 1, !tbaa !2450
  %2110 = icmp eq i32 %2090, 0
  %2111 = zext i1 %2110 to i8
  %2112 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2111, i8* %2112, align 1, !tbaa !2447
  %2113 = lshr i32 %2090, 31
  %2114 = trunc i32 %2113 to i8
  %2115 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2114, i8* %2115, align 1, !tbaa !2448
  %2116 = lshr i32 %2089, 31
  %2117 = xor i32 %2113, %2116
  %2118 = add nuw nsw i32 %2117, %2113
  %2119 = icmp eq i32 %2118, 2
  %2120 = zext i1 %2119 to i8
  %2121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2120, i8* %2121, align 1, !tbaa !2449
  %2122 = load i64, i64* %RBP
  %2123 = sub i64 %2122, 172
  %2124 = load i32, i32* %EAX
  %2125 = zext i32 %2124 to i64
  %2126 = load i64, i64* %PC
  %2127 = add i64 %2126, 6
  store i64 %2127, i64* %PC
  %2128 = inttoptr i64 %2123 to i32*
  store i32 %2124, i32* %2128
  %2129 = load i64, i64* %PC
  %2130 = sub i64 %2129, 228
  %2131 = load i64, i64* %PC
  %2132 = add i64 %2131, 5
  store i64 %2132, i64* %PC
  %2133 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2130, i64* %2133, align 8, !tbaa !2428
  br label %block_400848

block_400ffb:                                     ; preds = %block_400fed
  %2134 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2135 = load i64, i64* %PC
  %2136 = add i64 %2135, 8
  store i64 %2136, i64* %PC
  %2137 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4018b0__rodata_type* @seg_4018b0__rodata to i64), i64 40) to double*)
  %2138 = bitcast i8* %2134 to double*
  store double %2137, double* %2138, align 1, !tbaa !2451
  %2139 = getelementptr inbounds i8, i8* %2134, i64 8
  %2140 = bitcast i8* %2139 to double*
  store double 0.000000e+00, double* %2140, align 1, !tbaa !2451
  %2141 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %2142 = load i64, i64* %PC
  %2143 = add i64 %2142, 9
  store i64 %2143, i64* %PC
  %2144 = load double, double* bitcast (%T_type* @T to double*)
  %2145 = bitcast i8* %2141 to double*
  store double %2144, double* %2145, align 1, !tbaa !2451
  %2146 = getelementptr inbounds i8, i8* %2141, i64 8
  %2147 = bitcast i8* %2146 to double*
  store double 0.000000e+00, double* %2147, align 1, !tbaa !2451
  %2148 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %2149 = load i64, i64* %PC
  %2150 = add i64 %2149, 9
  store i64 %2150, i64* %PC
  %2151 = load double, double* bitcast (%T2_type* @T2 to double*)
  %2152 = bitcast i8* %2148 to double*
  store double %2151, double* %2152, align 1, !tbaa !2451
  %2153 = getelementptr inbounds i8, i8* %2148, i64 8
  %2154 = bitcast i8* %2153 to double*
  store double 0.000000e+00, double* %2154, align 1, !tbaa !2451
  %2155 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %2156 = load i64, i64* %RBP
  %2157 = sub i64 %2156, 144
  %2158 = load i64, i64* %PC
  %2159 = add i64 %2158, 8
  store i64 %2159, i64* %PC
  %2160 = inttoptr i64 %2157 to double*
  %2161 = load double, double* %2160
  %2162 = bitcast i8* %2155 to double*
  store double %2161, double* %2162, align 1, !tbaa !2451
  %2163 = getelementptr inbounds i8, i8* %2155, i64 8
  %2164 = bitcast i8* %2163 to double*
  store double 0.000000e+00, double* %2164, align 1, !tbaa !2451
  %2165 = load i64, i64* %RBP
  %2166 = sub i64 %2165, 224
  %2167 = bitcast %union.vec128_t* %XMM0 to i8*
  %2168 = load i64, i64* %PC
  %2169 = add i64 %2168, 8
  store i64 %2169, i64* %PC
  %2170 = bitcast i8* %2167 to double*
  %2171 = load double, double* %2170, align 1
  %2172 = inttoptr i64 %2166 to double*
  store double %2171, double* %2172
  %2173 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2174 = bitcast %union.vec128_t* %XMM3 to i8*
  %2175 = load i64, i64* %PC
  %2176 = add i64 %2175, 3
  store i64 %2176, i64* %PC
  %2177 = bitcast i8* %2174 to <2 x i32>*
  %2178 = load <2 x i32>, <2 x i32>* %2177, align 1
  %2179 = getelementptr inbounds i8, i8* %2174, i64 8
  %2180 = bitcast i8* %2179 to <2 x i32>*
  %2181 = load <2 x i32>, <2 x i32>* %2180, align 1
  %2182 = extractelement <2 x i32> %2178, i32 0
  %2183 = bitcast i8* %2173 to i32*
  store i32 %2182, i32* %2183, align 1, !tbaa !2460
  %2184 = extractelement <2 x i32> %2178, i32 1
  %2185 = getelementptr inbounds i8, i8* %2173, i64 4
  %2186 = bitcast i8* %2185 to i32*
  store i32 %2184, i32* %2186, align 1, !tbaa !2460
  %2187 = extractelement <2 x i32> %2181, i32 0
  %2188 = getelementptr inbounds i8, i8* %2173, i64 8
  %2189 = bitcast i8* %2188 to i32*
  store i32 %2187, i32* %2189, align 1, !tbaa !2460
  %2190 = extractelement <2 x i32> %2181, i32 1
  %2191 = getelementptr inbounds i8, i8* %2173, i64 12
  %2192 = bitcast i8* %2191 to i32*
  store i32 %2190, i32* %2192, align 1, !tbaa !2460
  %2193 = load i64, i64* %RBP
  %2194 = sub i64 %2193, 232
  %2195 = bitcast %union.vec128_t* %XMM2 to i8*
  %2196 = load i64, i64* %PC
  %2197 = add i64 %2196, 8
  store i64 %2197, i64* %PC
  %2198 = bitcast i8* %2195 to double*
  %2199 = load double, double* %2198, align 1
  %2200 = inttoptr i64 %2194 to double*
  store double %2199, double* %2200
  %2201 = load i64, i64* %RBP
  %2202 = sub i64 %2201, 240
  %2203 = bitcast %union.vec128_t* %XMM1 to i8*
  %2204 = load i64, i64* %PC
  %2205 = add i64 %2204, 8
  store i64 %2205, i64* %PC
  %2206 = bitcast i8* %2203 to double*
  %2207 = load double, double* %2206, align 1
  %2208 = inttoptr i64 %2202 to double*
  store double %2207, double* %2208
  %2209 = load i64, i64* %PC
  %2210 = sub i64 %2209, 2360
  %2211 = load i64, i64* %PC
  %2212 = add i64 %2211, 5
  %2213 = load i64, i64* %PC
  %2214 = add i64 %2213, 5
  store i64 %2214, i64* %PC
  %2215 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %2216 = load i64, i64* %2215, align 8, !tbaa !2428
  %2217 = add i64 %2216, -8
  %2218 = inttoptr i64 %2217 to i64*
  store i64 %2212, i64* %2218
  store i64 %2217, i64* %2215, align 8, !tbaa !2428
  %2219 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2210, i64* %2219, align 8, !tbaa !2428
  %2220 = load i64, i64* %PC
  %2221 = bitcast %struct.State** %state.i1273 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2221)
  %2222 = bitcast i64* %curr_pc.i1274 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2222)
  %2223 = bitcast %struct.Memory** %memory.i1275 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2223)
  call void @llvm.lifetime.start(i64 1, i8* %BRANCH_TAKEN.i1276)
  %2224 = bitcast i64* %SS_BASE.i1277 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2224)
  %2225 = bitcast i64* %ES_BASE.i1278 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2225)
  %2226 = bitcast i64* %DS_BASE.i1279 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2226)
  %2227 = bitcast i64* %CS_BASE.i1280 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2227)
  %2228 = bitcast %struct.State** %STATE.i1281 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2228)
  %2229 = bitcast %struct.Memory** %MEMORY.i1282 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2229)
  %2230 = bitcast i64** %_DR0.i1283 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2230)
  %2231 = bitcast i64** %_DR1.i1284 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2231)
  %2232 = bitcast i64** %_DR2.i1285 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2232)
  %2233 = bitcast i64** %_DR3.i1286 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2233)
  %2234 = bitcast i64** %_DR4.i1287 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2234)
  %2235 = bitcast i64** %_DR5.i1288 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2235)
  %2236 = bitcast i64** %_DR6.i1289 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2236)
  %2237 = bitcast i64** %_DR7.i1290 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2237)
  %2238 = bitcast i64** %CR0.i1291 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2238)
  %2239 = bitcast i64** %CR1.i1292 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2239)
  %2240 = bitcast i64** %CR2.i1293 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2240)
  %2241 = bitcast i64** %CR3.i1294 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2241)
  %2242 = bitcast i64** %CR4.i1295 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2242)
  %2243 = bitcast i64** %CR8.i1296 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2243)
  store %struct.State* %0, %struct.State** %state.i1273, align 8, !noalias !2462
  store i64 %2220, i64* %curr_pc.i1274, align 8, !noalias !2462
  store %struct.Memory* %MEMORY.25, %struct.Memory** %memory.i1275, align 8, !noalias !2462
  store i8 0, i8* %BRANCH_TAKEN.i1276, align 1, !noalias !2462
  store i64 0, i64* %SS_BASE.i1277, align 8, !noalias !2462
  store i64 0, i64* %ES_BASE.i1278, align 8, !noalias !2462
  store i64 0, i64* %DS_BASE.i1279, align 8, !noalias !2462
  store i64 0, i64* %CS_BASE.i1280, align 8, !noalias !2462
  store %struct.State* %0, %struct.State** %STATE.i1281, align 8, !noalias !2462
  store %struct.Memory* %MEMORY.25, %struct.Memory** %MEMORY.i1282, align 8, !noalias !2462
  %2244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2245 = getelementptr inbounds %struct.GPR, %struct.GPR* %2244, i32 0, i32 33
  %2246 = getelementptr inbounds %struct.Reg, %struct.Reg* %2245, i32 0, i32 0
  %PC.i1297 = bitcast %union.anon* %2246 to i64*
  store i64 %2220, i64* %PC.i1297, align 8, !alias.scope !2466, !noalias !2467
  %2247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2248 = getelementptr inbounds %struct.GPR, %struct.GPR* %2247, i32 0, i32 1
  %2249 = getelementptr inbounds %struct.Reg, %struct.Reg* %2248, i32 0, i32 0
  %2250 = bitcast %union.anon* %2249 to %struct.anon.2*
  %AH.i1298 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2250, i32 0, i32 1
  %2251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2252 = getelementptr inbounds %struct.GPR, %struct.GPR* %2251, i32 0, i32 3
  %2253 = getelementptr inbounds %struct.Reg, %struct.Reg* %2252, i32 0, i32 0
  %2254 = bitcast %union.anon* %2253 to %struct.anon.2*
  %BH.i1299 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2254, i32 0, i32 1
  %2255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2256 = getelementptr inbounds %struct.GPR, %struct.GPR* %2255, i32 0, i32 5
  %2257 = getelementptr inbounds %struct.Reg, %struct.Reg* %2256, i32 0, i32 0
  %2258 = bitcast %union.anon* %2257 to %struct.anon.2*
  %CH.i1300 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2258, i32 0, i32 1
  %2259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2260 = getelementptr inbounds %struct.GPR, %struct.GPR* %2259, i32 0, i32 7
  %2261 = getelementptr inbounds %struct.Reg, %struct.Reg* %2260, i32 0, i32 0
  %2262 = bitcast %union.anon* %2261 to %struct.anon.2*
  %DH.i1301 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2262, i32 0, i32 1
  %2263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2264 = getelementptr inbounds %struct.GPR, %struct.GPR* %2263, i32 0, i32 1
  %2265 = getelementptr inbounds %struct.Reg, %struct.Reg* %2264, i32 0, i32 0
  %2266 = bitcast %union.anon* %2265 to %struct.anon.2*
  %AL.i1302 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2266, i32 0, i32 0
  %2267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2268 = getelementptr inbounds %struct.GPR, %struct.GPR* %2267, i32 0, i32 3
  %2269 = getelementptr inbounds %struct.Reg, %struct.Reg* %2268, i32 0, i32 0
  %2270 = bitcast %union.anon* %2269 to %struct.anon.2*
  %BL.i1303 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2270, i32 0, i32 0
  %2271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2272 = getelementptr inbounds %struct.GPR, %struct.GPR* %2271, i32 0, i32 5
  %2273 = getelementptr inbounds %struct.Reg, %struct.Reg* %2272, i32 0, i32 0
  %2274 = bitcast %union.anon* %2273 to %struct.anon.2*
  %CL.i1304 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2274, i32 0, i32 0
  %2275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2276 = getelementptr inbounds %struct.GPR, %struct.GPR* %2275, i32 0, i32 7
  %2277 = getelementptr inbounds %struct.Reg, %struct.Reg* %2276, i32 0, i32 0
  %2278 = bitcast %union.anon* %2277 to %struct.anon.2*
  %DL.i1305 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2278, i32 0, i32 0
  %2279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2280 = getelementptr inbounds %struct.GPR, %struct.GPR* %2279, i32 0, i32 9
  %2281 = getelementptr inbounds %struct.Reg, %struct.Reg* %2280, i32 0, i32 0
  %2282 = bitcast %union.anon* %2281 to %struct.anon.2*
  %SIL.i1306 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2282, i32 0, i32 0
  %2283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2284 = getelementptr inbounds %struct.GPR, %struct.GPR* %2283, i32 0, i32 11
  %2285 = getelementptr inbounds %struct.Reg, %struct.Reg* %2284, i32 0, i32 0
  %2286 = bitcast %union.anon* %2285 to %struct.anon.2*
  %DIL.i1307 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2286, i32 0, i32 0
  %2287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2288 = getelementptr inbounds %struct.GPR, %struct.GPR* %2287, i32 0, i32 13
  %2289 = getelementptr inbounds %struct.Reg, %struct.Reg* %2288, i32 0, i32 0
  %2290 = bitcast %union.anon* %2289 to %struct.anon.2*
  %SPL.i1308 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2290, i32 0, i32 0
  %2291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2292 = getelementptr inbounds %struct.GPR, %struct.GPR* %2291, i32 0, i32 15
  %2293 = getelementptr inbounds %struct.Reg, %struct.Reg* %2292, i32 0, i32 0
  %2294 = bitcast %union.anon* %2293 to %struct.anon.2*
  %BPL.i1309 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2294, i32 0, i32 0
  %2295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2296 = getelementptr inbounds %struct.GPR, %struct.GPR* %2295, i32 0, i32 17
  %2297 = getelementptr inbounds %struct.Reg, %struct.Reg* %2296, i32 0, i32 0
  %2298 = bitcast %union.anon* %2297 to %struct.anon.2*
  %R8B.i1310 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2298, i32 0, i32 0
  %2299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2300 = getelementptr inbounds %struct.GPR, %struct.GPR* %2299, i32 0, i32 19
  %2301 = getelementptr inbounds %struct.Reg, %struct.Reg* %2300, i32 0, i32 0
  %2302 = bitcast %union.anon* %2301 to %struct.anon.2*
  %R9B.i1311 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2302, i32 0, i32 0
  %2303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2304 = getelementptr inbounds %struct.GPR, %struct.GPR* %2303, i32 0, i32 21
  %2305 = getelementptr inbounds %struct.Reg, %struct.Reg* %2304, i32 0, i32 0
  %2306 = bitcast %union.anon* %2305 to %struct.anon.2*
  %R10B.i1312 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2306, i32 0, i32 0
  %2307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2308 = getelementptr inbounds %struct.GPR, %struct.GPR* %2307, i32 0, i32 23
  %2309 = getelementptr inbounds %struct.Reg, %struct.Reg* %2308, i32 0, i32 0
  %2310 = bitcast %union.anon* %2309 to %struct.anon.2*
  %R11B.i1313 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2310, i32 0, i32 0
  %2311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2312 = getelementptr inbounds %struct.GPR, %struct.GPR* %2311, i32 0, i32 25
  %2313 = getelementptr inbounds %struct.Reg, %struct.Reg* %2312, i32 0, i32 0
  %2314 = bitcast %union.anon* %2313 to %struct.anon.2*
  %R12B.i1314 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2314, i32 0, i32 0
  %2315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2316 = getelementptr inbounds %struct.GPR, %struct.GPR* %2315, i32 0, i32 27
  %2317 = getelementptr inbounds %struct.Reg, %struct.Reg* %2316, i32 0, i32 0
  %2318 = bitcast %union.anon* %2317 to %struct.anon.2*
  %R13B.i1315 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2318, i32 0, i32 0
  %2319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2320 = getelementptr inbounds %struct.GPR, %struct.GPR* %2319, i32 0, i32 29
  %2321 = getelementptr inbounds %struct.Reg, %struct.Reg* %2320, i32 0, i32 0
  %2322 = bitcast %union.anon* %2321 to %struct.anon.2*
  %R14B.i1316 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2322, i32 0, i32 0
  %2323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2324 = getelementptr inbounds %struct.GPR, %struct.GPR* %2323, i32 0, i32 31
  %2325 = getelementptr inbounds %struct.Reg, %struct.Reg* %2324, i32 0, i32 0
  %2326 = bitcast %union.anon* %2325 to %struct.anon.2*
  %R15B.i1317 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2326, i32 0, i32 0
  %2327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2328 = getelementptr inbounds %struct.GPR, %struct.GPR* %2327, i32 0, i32 1
  %2329 = getelementptr inbounds %struct.Reg, %struct.Reg* %2328, i32 0, i32 0
  %AX.i1318 = bitcast %union.anon* %2329 to i16*
  %2330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2331 = getelementptr inbounds %struct.GPR, %struct.GPR* %2330, i32 0, i32 3
  %2332 = getelementptr inbounds %struct.Reg, %struct.Reg* %2331, i32 0, i32 0
  %BX.i1319 = bitcast %union.anon* %2332 to i16*
  %2333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2334 = getelementptr inbounds %struct.GPR, %struct.GPR* %2333, i32 0, i32 5
  %2335 = getelementptr inbounds %struct.Reg, %struct.Reg* %2334, i32 0, i32 0
  %CX.i1320 = bitcast %union.anon* %2335 to i16*
  %2336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2337 = getelementptr inbounds %struct.GPR, %struct.GPR* %2336, i32 0, i32 7
  %2338 = getelementptr inbounds %struct.Reg, %struct.Reg* %2337, i32 0, i32 0
  %DX.i1321 = bitcast %union.anon* %2338 to i16*
  %2339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2340 = getelementptr inbounds %struct.GPR, %struct.GPR* %2339, i32 0, i32 9
  %2341 = getelementptr inbounds %struct.Reg, %struct.Reg* %2340, i32 0, i32 0
  %SI.i1322 = bitcast %union.anon* %2341 to i16*
  %2342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2343 = getelementptr inbounds %struct.GPR, %struct.GPR* %2342, i32 0, i32 11
  %2344 = getelementptr inbounds %struct.Reg, %struct.Reg* %2343, i32 0, i32 0
  %DI.i1323 = bitcast %union.anon* %2344 to i16*
  %2345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2346 = getelementptr inbounds %struct.GPR, %struct.GPR* %2345, i32 0, i32 13
  %2347 = getelementptr inbounds %struct.Reg, %struct.Reg* %2346, i32 0, i32 0
  %SP.i1324 = bitcast %union.anon* %2347 to i16*
  %2348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2349 = getelementptr inbounds %struct.GPR, %struct.GPR* %2348, i32 0, i32 15
  %2350 = getelementptr inbounds %struct.Reg, %struct.Reg* %2349, i32 0, i32 0
  %BP.i1325 = bitcast %union.anon* %2350 to i16*
  %2351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2352 = getelementptr inbounds %struct.GPR, %struct.GPR* %2351, i32 0, i32 17
  %2353 = getelementptr inbounds %struct.Reg, %struct.Reg* %2352, i32 0, i32 0
  %R8W.i1326 = bitcast %union.anon* %2353 to i16*
  %2354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2355 = getelementptr inbounds %struct.GPR, %struct.GPR* %2354, i32 0, i32 19
  %2356 = getelementptr inbounds %struct.Reg, %struct.Reg* %2355, i32 0, i32 0
  %R9W.i1327 = bitcast %union.anon* %2356 to i16*
  %2357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2358 = getelementptr inbounds %struct.GPR, %struct.GPR* %2357, i32 0, i32 21
  %2359 = getelementptr inbounds %struct.Reg, %struct.Reg* %2358, i32 0, i32 0
  %R10W.i1328 = bitcast %union.anon* %2359 to i16*
  %2360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2361 = getelementptr inbounds %struct.GPR, %struct.GPR* %2360, i32 0, i32 23
  %2362 = getelementptr inbounds %struct.Reg, %struct.Reg* %2361, i32 0, i32 0
  %R11W.i1329 = bitcast %union.anon* %2362 to i16*
  %2363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2364 = getelementptr inbounds %struct.GPR, %struct.GPR* %2363, i32 0, i32 25
  %2365 = getelementptr inbounds %struct.Reg, %struct.Reg* %2364, i32 0, i32 0
  %R12W.i1330 = bitcast %union.anon* %2365 to i16*
  %2366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2367 = getelementptr inbounds %struct.GPR, %struct.GPR* %2366, i32 0, i32 27
  %2368 = getelementptr inbounds %struct.Reg, %struct.Reg* %2367, i32 0, i32 0
  %R13W.i1331 = bitcast %union.anon* %2368 to i16*
  %2369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2370 = getelementptr inbounds %struct.GPR, %struct.GPR* %2369, i32 0, i32 29
  %2371 = getelementptr inbounds %struct.Reg, %struct.Reg* %2370, i32 0, i32 0
  %R14W.i1332 = bitcast %union.anon* %2371 to i16*
  %2372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2373 = getelementptr inbounds %struct.GPR, %struct.GPR* %2372, i32 0, i32 31
  %2374 = getelementptr inbounds %struct.Reg, %struct.Reg* %2373, i32 0, i32 0
  %R15W.i1333 = bitcast %union.anon* %2374 to i16*
  %2375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2376 = getelementptr inbounds %struct.GPR, %struct.GPR* %2375, i32 0, i32 33
  %2377 = getelementptr inbounds %struct.Reg, %struct.Reg* %2376, i32 0, i32 0
  %IP.i1334 = bitcast %union.anon* %2377 to i16*
  %2378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2379 = getelementptr inbounds %struct.GPR, %struct.GPR* %2378, i32 0, i32 1
  %2380 = getelementptr inbounds %struct.Reg, %struct.Reg* %2379, i32 0, i32 0
  %EAX.i1335 = bitcast %union.anon* %2380 to i32*
  %2381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2382 = getelementptr inbounds %struct.GPR, %struct.GPR* %2381, i32 0, i32 3
  %2383 = getelementptr inbounds %struct.Reg, %struct.Reg* %2382, i32 0, i32 0
  %EBX.i1336 = bitcast %union.anon* %2383 to i32*
  %2384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2385 = getelementptr inbounds %struct.GPR, %struct.GPR* %2384, i32 0, i32 5
  %2386 = getelementptr inbounds %struct.Reg, %struct.Reg* %2385, i32 0, i32 0
  %ECX.i1337 = bitcast %union.anon* %2386 to i32*
  %2387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2388 = getelementptr inbounds %struct.GPR, %struct.GPR* %2387, i32 0, i32 7
  %2389 = getelementptr inbounds %struct.Reg, %struct.Reg* %2388, i32 0, i32 0
  %EDX.i1338 = bitcast %union.anon* %2389 to i32*
  %2390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2391 = getelementptr inbounds %struct.GPR, %struct.GPR* %2390, i32 0, i32 9
  %2392 = getelementptr inbounds %struct.Reg, %struct.Reg* %2391, i32 0, i32 0
  %ESI.i1339 = bitcast %union.anon* %2392 to i32*
  %2393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2394 = getelementptr inbounds %struct.GPR, %struct.GPR* %2393, i32 0, i32 11
  %2395 = getelementptr inbounds %struct.Reg, %struct.Reg* %2394, i32 0, i32 0
  %EDI.i1340 = bitcast %union.anon* %2395 to i32*
  %2396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2397 = getelementptr inbounds %struct.GPR, %struct.GPR* %2396, i32 0, i32 13
  %2398 = getelementptr inbounds %struct.Reg, %struct.Reg* %2397, i32 0, i32 0
  %ESP.i1341 = bitcast %union.anon* %2398 to i32*
  %2399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2400 = getelementptr inbounds %struct.GPR, %struct.GPR* %2399, i32 0, i32 15
  %2401 = getelementptr inbounds %struct.Reg, %struct.Reg* %2400, i32 0, i32 0
  %EBP.i1342 = bitcast %union.anon* %2401 to i32*
  %2402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2403 = getelementptr inbounds %struct.GPR, %struct.GPR* %2402, i32 0, i32 33
  %2404 = getelementptr inbounds %struct.Reg, %struct.Reg* %2403, i32 0, i32 0
  %EIP.i1343 = bitcast %union.anon* %2404 to i32*
  %2405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2406 = getelementptr inbounds %struct.GPR, %struct.GPR* %2405, i32 0, i32 17
  %2407 = getelementptr inbounds %struct.Reg, %struct.Reg* %2406, i32 0, i32 0
  %R8D.i1344 = bitcast %union.anon* %2407 to i32*
  %2408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2409 = getelementptr inbounds %struct.GPR, %struct.GPR* %2408, i32 0, i32 19
  %2410 = getelementptr inbounds %struct.Reg, %struct.Reg* %2409, i32 0, i32 0
  %R9D.i1345 = bitcast %union.anon* %2410 to i32*
  %2411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2412 = getelementptr inbounds %struct.GPR, %struct.GPR* %2411, i32 0, i32 21
  %2413 = getelementptr inbounds %struct.Reg, %struct.Reg* %2412, i32 0, i32 0
  %R10D.i1346 = bitcast %union.anon* %2413 to i32*
  %2414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2415 = getelementptr inbounds %struct.GPR, %struct.GPR* %2414, i32 0, i32 23
  %2416 = getelementptr inbounds %struct.Reg, %struct.Reg* %2415, i32 0, i32 0
  %R11D.i1347 = bitcast %union.anon* %2416 to i32*
  %2417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2418 = getelementptr inbounds %struct.GPR, %struct.GPR* %2417, i32 0, i32 25
  %2419 = getelementptr inbounds %struct.Reg, %struct.Reg* %2418, i32 0, i32 0
  %R12D.i1348 = bitcast %union.anon* %2419 to i32*
  %2420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2421 = getelementptr inbounds %struct.GPR, %struct.GPR* %2420, i32 0, i32 27
  %2422 = getelementptr inbounds %struct.Reg, %struct.Reg* %2421, i32 0, i32 0
  %R13D.i1349 = bitcast %union.anon* %2422 to i32*
  %2423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2424 = getelementptr inbounds %struct.GPR, %struct.GPR* %2423, i32 0, i32 29
  %2425 = getelementptr inbounds %struct.Reg, %struct.Reg* %2424, i32 0, i32 0
  %R14D.i1350 = bitcast %union.anon* %2425 to i32*
  %2426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2427 = getelementptr inbounds %struct.GPR, %struct.GPR* %2426, i32 0, i32 31
  %2428 = getelementptr inbounds %struct.Reg, %struct.Reg* %2427, i32 0, i32 0
  %R15D.i1351 = bitcast %union.anon* %2428 to i32*
  %2429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2430 = getelementptr inbounds %struct.GPR, %struct.GPR* %2429, i32 0, i32 1
  %2431 = getelementptr inbounds %struct.Reg, %struct.Reg* %2430, i32 0, i32 0
  %RAX.i1352 = bitcast %union.anon* %2431 to i64*
  %2432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2433 = getelementptr inbounds %struct.GPR, %struct.GPR* %2432, i32 0, i32 3
  %2434 = getelementptr inbounds %struct.Reg, %struct.Reg* %2433, i32 0, i32 0
  %RBX.i1353 = bitcast %union.anon* %2434 to i64*
  %2435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2436 = getelementptr inbounds %struct.GPR, %struct.GPR* %2435, i32 0, i32 5
  %2437 = getelementptr inbounds %struct.Reg, %struct.Reg* %2436, i32 0, i32 0
  %RCX.i1354 = bitcast %union.anon* %2437 to i64*
  %2438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2439 = getelementptr inbounds %struct.GPR, %struct.GPR* %2438, i32 0, i32 7
  %2440 = getelementptr inbounds %struct.Reg, %struct.Reg* %2439, i32 0, i32 0
  %RDX.i1355 = bitcast %union.anon* %2440 to i64*
  %2441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2442 = getelementptr inbounds %struct.GPR, %struct.GPR* %2441, i32 0, i32 9
  %2443 = getelementptr inbounds %struct.Reg, %struct.Reg* %2442, i32 0, i32 0
  %RSI.i1356 = bitcast %union.anon* %2443 to i64*
  %2444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2445 = getelementptr inbounds %struct.GPR, %struct.GPR* %2444, i32 0, i32 11
  %2446 = getelementptr inbounds %struct.Reg, %struct.Reg* %2445, i32 0, i32 0
  %RDI.i1357 = bitcast %union.anon* %2446 to i64*
  %2447 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2448 = getelementptr inbounds %struct.GPR, %struct.GPR* %2447, i32 0, i32 13
  %2449 = getelementptr inbounds %struct.Reg, %struct.Reg* %2448, i32 0, i32 0
  %RSP.i1358 = bitcast %union.anon* %2449 to i64*
  %2450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2451 = getelementptr inbounds %struct.GPR, %struct.GPR* %2450, i32 0, i32 15
  %2452 = getelementptr inbounds %struct.Reg, %struct.Reg* %2451, i32 0, i32 0
  %RBP.i1359 = bitcast %union.anon* %2452 to i64*
  %2453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2454 = getelementptr inbounds %struct.GPR, %struct.GPR* %2453, i32 0, i32 17
  %2455 = getelementptr inbounds %struct.Reg, %struct.Reg* %2454, i32 0, i32 0
  %R8.i1360 = bitcast %union.anon* %2455 to i64*
  %2456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2457 = getelementptr inbounds %struct.GPR, %struct.GPR* %2456, i32 0, i32 19
  %2458 = getelementptr inbounds %struct.Reg, %struct.Reg* %2457, i32 0, i32 0
  %R9.i1361 = bitcast %union.anon* %2458 to i64*
  %2459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2460 = getelementptr inbounds %struct.GPR, %struct.GPR* %2459, i32 0, i32 21
  %2461 = getelementptr inbounds %struct.Reg, %struct.Reg* %2460, i32 0, i32 0
  %R10.i1362 = bitcast %union.anon* %2461 to i64*
  %2462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2463 = getelementptr inbounds %struct.GPR, %struct.GPR* %2462, i32 0, i32 23
  %2464 = getelementptr inbounds %struct.Reg, %struct.Reg* %2463, i32 0, i32 0
  %R11.i1363 = bitcast %union.anon* %2464 to i64*
  %2465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2466 = getelementptr inbounds %struct.GPR, %struct.GPR* %2465, i32 0, i32 25
  %2467 = getelementptr inbounds %struct.Reg, %struct.Reg* %2466, i32 0, i32 0
  %R12.i1364 = bitcast %union.anon* %2467 to i64*
  %2468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2469 = getelementptr inbounds %struct.GPR, %struct.GPR* %2468, i32 0, i32 27
  %2470 = getelementptr inbounds %struct.Reg, %struct.Reg* %2469, i32 0, i32 0
  %R13.i1365 = bitcast %union.anon* %2470 to i64*
  %2471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2472 = getelementptr inbounds %struct.GPR, %struct.GPR* %2471, i32 0, i32 29
  %2473 = getelementptr inbounds %struct.Reg, %struct.Reg* %2472, i32 0, i32 0
  %R14.i1366 = bitcast %union.anon* %2473 to i64*
  %2474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2475 = getelementptr inbounds %struct.GPR, %struct.GPR* %2474, i32 0, i32 31
  %2476 = getelementptr inbounds %struct.Reg, %struct.Reg* %2475, i32 0, i32 0
  %R15.i1367 = bitcast %union.anon* %2476 to i64*
  %2477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2478 = getelementptr inbounds %struct.GPR, %struct.GPR* %2477, i32 0, i32 33
  %2479 = getelementptr inbounds %struct.Reg, %struct.Reg* %2478, i32 0, i32 0
  %RIP.i1368 = bitcast %union.anon* %2479 to i64*
  %2480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %2481 = getelementptr inbounds %struct.Segments, %struct.Segments* %2480, i32 0, i32 1
  %SS.i1369 = bitcast %union.SegmentSelector* %2481 to i16*
  %2482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %2483 = getelementptr inbounds %struct.Segments, %struct.Segments* %2482, i32 0, i32 3
  %ES.i1370 = bitcast %union.SegmentSelector* %2483 to i16*
  %2484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %2485 = getelementptr inbounds %struct.Segments, %struct.Segments* %2484, i32 0, i32 5
  %GS.i1371 = bitcast %union.SegmentSelector* %2485 to i16*
  %2486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %2487 = getelementptr inbounds %struct.Segments, %struct.Segments* %2486, i32 0, i32 7
  %FS.i1372 = bitcast %union.SegmentSelector* %2487 to i16*
  %2488 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %2489 = getelementptr inbounds %struct.Segments, %struct.Segments* %2488, i32 0, i32 9
  %DS.i1373 = bitcast %union.SegmentSelector* %2489 to i16*
  %2490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %2491 = getelementptr inbounds %struct.Segments, %struct.Segments* %2490, i32 0, i32 11
  %CS.i1374 = bitcast %union.SegmentSelector* %2491 to i16*
  %2492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %2493 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %2492, i32 0, i32 5
  %2494 = getelementptr inbounds %struct.Reg, %struct.Reg* %2493, i32 0, i32 0
  %GS_BASE.i1375 = bitcast %union.anon* %2494 to i64*
  %2495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %2496 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %2495, i32 0, i32 7
  %2497 = getelementptr inbounds %struct.Reg, %struct.Reg* %2496, i32 0, i32 0
  %FS_BASE.i1376 = bitcast %union.anon* %2497 to i64*
  %2498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2499 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2498, i64 0, i64 0
  %YMM0.i1377 = bitcast %union.VectorReg* %2499 to %"class.std::bitset"*
  %2500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2501 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2500, i64 0, i64 1
  %YMM1.i1378 = bitcast %union.VectorReg* %2501 to %"class.std::bitset"*
  %2502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2503 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2502, i64 0, i64 2
  %YMM2.i1379 = bitcast %union.VectorReg* %2503 to %"class.std::bitset"*
  %2504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2505 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2504, i64 0, i64 3
  %YMM3.i1380 = bitcast %union.VectorReg* %2505 to %"class.std::bitset"*
  %2506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2507 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2506, i64 0, i64 4
  %YMM4.i1381 = bitcast %union.VectorReg* %2507 to %"class.std::bitset"*
  %2508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2509 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2508, i64 0, i64 5
  %YMM5.i1382 = bitcast %union.VectorReg* %2509 to %"class.std::bitset"*
  %2510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2511 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2510, i64 0, i64 6
  %YMM6.i1383 = bitcast %union.VectorReg* %2511 to %"class.std::bitset"*
  %2512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2513 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2512, i64 0, i64 7
  %YMM7.i1384 = bitcast %union.VectorReg* %2513 to %"class.std::bitset"*
  %2514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2515 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2514, i64 0, i64 8
  %YMM8.i1385 = bitcast %union.VectorReg* %2515 to %"class.std::bitset"*
  %2516 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2517 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2516, i64 0, i64 9
  %YMM9.i1386 = bitcast %union.VectorReg* %2517 to %"class.std::bitset"*
  %2518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2519 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2518, i64 0, i64 10
  %YMM10.i1387 = bitcast %union.VectorReg* %2519 to %"class.std::bitset"*
  %2520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2521 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2520, i64 0, i64 11
  %YMM11.i1388 = bitcast %union.VectorReg* %2521 to %"class.std::bitset"*
  %2522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2523 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2522, i64 0, i64 12
  %YMM12.i1389 = bitcast %union.VectorReg* %2523 to %"class.std::bitset"*
  %2524 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2525 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2524, i64 0, i64 13
  %YMM13.i1390 = bitcast %union.VectorReg* %2525 to %"class.std::bitset"*
  %2526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2527 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2526, i64 0, i64 14
  %YMM14.i1391 = bitcast %union.VectorReg* %2527 to %"class.std::bitset"*
  %2528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2529 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2528, i64 0, i64 15
  %YMM15.i1392 = bitcast %union.VectorReg* %2529 to %"class.std::bitset"*
  %2530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2531 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2530, i64 0, i64 0
  %XMM0.i1393 = bitcast %union.VectorReg* %2531 to %union.vec128_t*
  %2532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2533 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2532, i64 0, i64 1
  %XMM1.i1394 = bitcast %union.VectorReg* %2533 to %union.vec128_t*
  %2534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2535 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2534, i64 0, i64 2
  %XMM2.i1395 = bitcast %union.VectorReg* %2535 to %union.vec128_t*
  %2536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2537 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2536, i64 0, i64 3
  %XMM3.i1396 = bitcast %union.VectorReg* %2537 to %union.vec128_t*
  %2538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2539 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2538, i64 0, i64 4
  %XMM4.i1397 = bitcast %union.VectorReg* %2539 to %union.vec128_t*
  %2540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2541 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2540, i64 0, i64 5
  %XMM5.i1398 = bitcast %union.VectorReg* %2541 to %union.vec128_t*
  %2542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2543 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2542, i64 0, i64 6
  %XMM6.i1399 = bitcast %union.VectorReg* %2543 to %union.vec128_t*
  %2544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2545 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2544, i64 0, i64 7
  %XMM7.i1400 = bitcast %union.VectorReg* %2545 to %union.vec128_t*
  %2546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2547 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2546, i64 0, i64 8
  %XMM8.i1401 = bitcast %union.VectorReg* %2547 to %union.vec128_t*
  %2548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2549 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2548, i64 0, i64 9
  %XMM9.i1402 = bitcast %union.VectorReg* %2549 to %union.vec128_t*
  %2550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2551 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2550, i64 0, i64 10
  %XMM10.i1403 = bitcast %union.VectorReg* %2551 to %union.vec128_t*
  %2552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2553 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2552, i64 0, i64 11
  %XMM11.i1404 = bitcast %union.VectorReg* %2553 to %union.vec128_t*
  %2554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2555 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2554, i64 0, i64 12
  %XMM12.i1405 = bitcast %union.VectorReg* %2555 to %union.vec128_t*
  %2556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2557 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2556, i64 0, i64 13
  %XMM13.i1406 = bitcast %union.VectorReg* %2557 to %union.vec128_t*
  %2558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2559 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2558, i64 0, i64 14
  %XMM14.i1407 = bitcast %union.VectorReg* %2559 to %union.vec128_t*
  %2560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2561 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2560, i64 0, i64 15
  %XMM15.i1408 = bitcast %union.VectorReg* %2561 to %union.vec128_t*
  %2562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %2563 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %2562, i32 0, i32 0
  %2564 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %2563, i64 0, i64 0
  %ST0.i1409 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %2564, i32 0, i32 1
  %2565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %2566 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %2565, i32 0, i32 0
  %2567 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %2566, i64 0, i64 1
  %ST1.i1410 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %2567, i32 0, i32 1
  %2568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %2569 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %2568, i32 0, i32 0
  %2570 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %2569, i64 0, i64 2
  %ST2.i1411 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %2570, i32 0, i32 1
  %2571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %2572 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %2571, i32 0, i32 0
  %2573 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %2572, i64 0, i64 3
  %ST3.i1412 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %2573, i32 0, i32 1
  %2574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %2575 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %2574, i32 0, i32 0
  %2576 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %2575, i64 0, i64 4
  %ST4.i1413 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %2576, i32 0, i32 1
  %2577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %2578 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %2577, i32 0, i32 0
  %2579 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %2578, i64 0, i64 5
  %ST5.i1414 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %2579, i32 0, i32 1
  %2580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %2581 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %2580, i32 0, i32 0
  %2582 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %2581, i64 0, i64 6
  %ST6.i1415 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %2582, i32 0, i32 1
  %2583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %2584 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %2583, i32 0, i32 0
  %2585 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %2584, i64 0, i64 7
  %ST7.i1416 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %2585, i32 0, i32 1
  %2586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %2587 = getelementptr inbounds %struct.MMX, %struct.MMX* %2586, i32 0, i32 0
  %2588 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %2587, i64 0, i64 0
  %2589 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %2588, i32 0, i32 1
  %2590 = bitcast %union.vec64_t* %2589 to %struct.uint64v1_t*
  %2591 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %2590, i32 0, i32 0
  %MM0.i1417 = getelementptr inbounds [1 x i64], [1 x i64]* %2591, i64 0, i64 0
  %2592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %2593 = getelementptr inbounds %struct.MMX, %struct.MMX* %2592, i32 0, i32 0
  %2594 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %2593, i64 0, i64 1
  %2595 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %2594, i32 0, i32 1
  %2596 = bitcast %union.vec64_t* %2595 to %struct.uint64v1_t*
  %2597 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %2596, i32 0, i32 0
  %MM1.i1418 = getelementptr inbounds [1 x i64], [1 x i64]* %2597, i64 0, i64 0
  %2598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %2599 = getelementptr inbounds %struct.MMX, %struct.MMX* %2598, i32 0, i32 0
  %2600 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %2599, i64 0, i64 2
  %2601 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %2600, i32 0, i32 1
  %2602 = bitcast %union.vec64_t* %2601 to %struct.uint64v1_t*
  %2603 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %2602, i32 0, i32 0
  %MM2.i1419 = getelementptr inbounds [1 x i64], [1 x i64]* %2603, i64 0, i64 0
  %2604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %2605 = getelementptr inbounds %struct.MMX, %struct.MMX* %2604, i32 0, i32 0
  %2606 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %2605, i64 0, i64 3
  %2607 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %2606, i32 0, i32 1
  %2608 = bitcast %union.vec64_t* %2607 to %struct.uint64v1_t*
  %2609 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %2608, i32 0, i32 0
  %MM3.i1420 = getelementptr inbounds [1 x i64], [1 x i64]* %2609, i64 0, i64 0
  %2610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %2611 = getelementptr inbounds %struct.MMX, %struct.MMX* %2610, i32 0, i32 0
  %2612 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %2611, i64 0, i64 4
  %2613 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %2612, i32 0, i32 1
  %2614 = bitcast %union.vec64_t* %2613 to %struct.uint64v1_t*
  %2615 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %2614, i32 0, i32 0
  %MM4.i1421 = getelementptr inbounds [1 x i64], [1 x i64]* %2615, i64 0, i64 0
  %2616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %2617 = getelementptr inbounds %struct.MMX, %struct.MMX* %2616, i32 0, i32 0
  %2618 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %2617, i64 0, i64 5
  %2619 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %2618, i32 0, i32 1
  %2620 = bitcast %union.vec64_t* %2619 to %struct.uint64v1_t*
  %2621 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %2620, i32 0, i32 0
  %MM5.i1422 = getelementptr inbounds [1 x i64], [1 x i64]* %2621, i64 0, i64 0
  %2622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %2623 = getelementptr inbounds %struct.MMX, %struct.MMX* %2622, i32 0, i32 0
  %2624 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %2623, i64 0, i64 6
  %2625 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %2624, i32 0, i32 1
  %2626 = bitcast %union.vec64_t* %2625 to %struct.uint64v1_t*
  %2627 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %2626, i32 0, i32 0
  %MM6.i1423 = getelementptr inbounds [1 x i64], [1 x i64]* %2627, i64 0, i64 0
  %2628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %2629 = getelementptr inbounds %struct.MMX, %struct.MMX* %2628, i32 0, i32 0
  %2630 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %2629, i64 0, i64 7
  %2631 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %2630, i32 0, i32 1
  %2632 = bitcast %union.vec64_t* %2631 to %struct.uint64v1_t*
  %2633 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %2632, i32 0, i32 0
  %MM7.i1424 = getelementptr inbounds [1 x i64], [1 x i64]* %2633, i64 0, i64 0
  %2634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF.i1425 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %2634, i32 0, i32 5
  %2635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF.i1426 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %2635, i32 0, i32 1
  %2636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF.i1427 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %2636, i32 0, i32 11
  %2637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF.i1428 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %2637, i32 0, i32 13
  %2638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF.i1429 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %2638, i32 0, i32 3
  %2639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF.i1430 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %2639, i32 0, i32 9
  %2640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF.i1431 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %2640, i32 0, i32 7
  store i64* @DR0, i64** %_DR0.i1283, align 8, !noalias !2462
  store i64* @DR1, i64** %_DR1.i1284, align 8, !noalias !2462
  store i64* @DR2, i64** %_DR2.i1285, align 8, !noalias !2462
  store i64* @DR3, i64** %_DR3.i1286, align 8, !noalias !2462
  store i64* @DR4, i64** %_DR4.i1287, align 8, !noalias !2462
  store i64* @DR5, i64** %_DR5.i1288, align 8, !noalias !2462
  store i64* @DR6, i64** %_DR6.i1289, align 8, !noalias !2462
  store i64* @DR7, i64** %_DR7.i1290, align 8, !noalias !2462
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0.i1291, align 8, !noalias !2462
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1.i1292, align 8, !noalias !2462
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2.i1293, align 8, !noalias !2462
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3.i1294, align 8, !noalias !2462
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4.i1295, align 8, !noalias !2462
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8.i1296, align 8, !noalias !2462
  %2641 = bitcast %"class.std::bitset"* %YMM0.i1377 to double*
  %2642 = load double, double* %2641, !alias.scope !2466, !noalias !2467
  %2643 = load i64, i64* %RSP.i1358, !alias.scope !2466, !noalias !2467
  %2644 = load %struct.Memory*, %struct.Memory** %MEMORY.i1282, !noalias !2462
  %2645 = inttoptr i64 %2643 to i64*
  %2646 = load i64, i64* %2645
  store i64 %2646, i64* %PC.i1297, !alias.scope !2466, !noalias !2467
  %2647 = add i64 %2643, 8
  store i64 %2647, i64* %RSP.i1358, !alias.scope !2466, !noalias !2467
  %2648 = call double @sin(double %2642)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0.i1377, !alias.scope !2466, !noalias !2467
  %2649 = bitcast %"class.std::bitset"* %YMM0.i1377 to double*
  store double %2648, double* %2649, !alias.scope !2466, !noalias !2467
  %2650 = load %struct.Memory*, %struct.Memory** %MEMORY.i1282, !noalias !2462
  %2651 = bitcast %struct.State** %state.i1273 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2651)
  %2652 = bitcast i64* %curr_pc.i1274 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2652)
  %2653 = bitcast %struct.Memory** %memory.i1275 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2653)
  call void @llvm.lifetime.end(i64 1, i8* %BRANCH_TAKEN.i1276)
  %2654 = bitcast i64* %SS_BASE.i1277 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2654)
  %2655 = bitcast i64* %ES_BASE.i1278 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2655)
  %2656 = bitcast i64* %DS_BASE.i1279 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2656)
  %2657 = bitcast i64* %CS_BASE.i1280 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2657)
  %2658 = bitcast %struct.State** %STATE.i1281 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2658)
  %2659 = bitcast %struct.Memory** %MEMORY.i1282 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2659)
  %2660 = bitcast i64** %_DR0.i1283 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2660)
  %2661 = bitcast i64** %_DR1.i1284 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2661)
  %2662 = bitcast i64** %_DR2.i1285 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2662)
  %2663 = bitcast i64** %_DR3.i1286 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2663)
  %2664 = bitcast i64** %_DR4.i1287 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2664)
  %2665 = bitcast i64** %_DR5.i1288 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2665)
  %2666 = bitcast i64** %_DR6.i1289 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2666)
  %2667 = bitcast i64** %_DR7.i1290 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2667)
  %2668 = bitcast i64** %CR0.i1291 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2668)
  %2669 = bitcast i64** %CR1.i1292 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2669)
  %2670 = bitcast i64** %CR2.i1293 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2670)
  %2671 = bitcast i64** %CR3.i1294 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2671)
  %2672 = bitcast i64** %CR4.i1295 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2672)
  %2673 = bitcast i64** %CR8.i1296 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2673)
  %2674 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %2675 = load i64, i64* %RBP
  %2676 = sub i64 %2675, 232
  %2677 = load i64, i64* %PC
  %2678 = add i64 %2677, 8
  store i64 %2678, i64* %PC
  %2679 = inttoptr i64 %2676 to double*
  %2680 = load double, double* %2679
  %2681 = bitcast i8* %2674 to double*
  store double %2680, double* %2681, align 1, !tbaa !2451
  %2682 = getelementptr inbounds i8, i8* %2674, i64 8
  %2683 = bitcast i8* %2682 to double*
  store double 0.000000e+00, double* %2683, align 1, !tbaa !2451
  %2684 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %2685 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %2686 = bitcast %union.vec128_t* %XMM0 to i8*
  %2687 = load i64, i64* %PC
  %2688 = add i64 %2687, 4
  store i64 %2688, i64* %PC
  %2689 = bitcast i8* %2685 to double*
  %2690 = load double, double* %2689, align 1
  %2691 = getelementptr inbounds i8, i8* %2685, i64 8
  %2692 = bitcast i8* %2691 to i64*
  %2693 = load i64, i64* %2692, align 1
  %2694 = bitcast i8* %2686 to double*
  %2695 = load double, double* %2694, align 1
  %2696 = fmul double %2690, %2695
  %2697 = bitcast i8* %2684 to double*
  store double %2696, double* %2697, align 1, !tbaa !2451
  %2698 = getelementptr inbounds i8, i8* %2684, i64 8
  %2699 = bitcast i8* %2698 to i64*
  store i64 %2693, i64* %2699, align 1, !tbaa !2451
  %2700 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2701 = load i64, i64* %RBP
  %2702 = sub i64 %2701, 144
  %2703 = load i64, i64* %PC
  %2704 = add i64 %2703, 8
  store i64 %2704, i64* %PC
  %2705 = inttoptr i64 %2702 to double*
  %2706 = load double, double* %2705
  %2707 = bitcast i8* %2700 to double*
  store double %2706, double* %2707, align 1, !tbaa !2451
  %2708 = getelementptr inbounds i8, i8* %2700, i64 8
  %2709 = bitcast i8* %2708 to double*
  store double 0.000000e+00, double* %2709, align 1, !tbaa !2451
  %2710 = load i64, i64* %RBP
  %2711 = sub i64 %2710, 248
  %2712 = bitcast %union.vec128_t* %XMM1 to i8*
  %2713 = load i64, i64* %PC
  %2714 = add i64 %2713, 8
  store i64 %2714, i64* %PC
  %2715 = bitcast i8* %2712 to double*
  %2716 = load double, double* %2715, align 1
  %2717 = inttoptr i64 %2711 to double*
  store double %2716, double* %2717
  %2718 = load i64, i64* %PC
  %2719 = sub i64 %2718, 2457
  %2720 = load i64, i64* %PC
  %2721 = add i64 %2720, 5
  %2722 = load i64, i64* %PC
  %2723 = add i64 %2722, 5
  store i64 %2723, i64* %PC
  %2724 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %2725 = load i64, i64* %2724, align 8, !tbaa !2428
  %2726 = add i64 %2725, -8
  %2727 = inttoptr i64 %2726 to i64*
  store i64 %2721, i64* %2727
  store i64 %2726, i64* %2724, align 8, !tbaa !2428
  %2728 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2719, i64* %2728, align 8, !tbaa !2428
  %2729 = load i64, i64* %PC
  %2730 = bitcast %struct.State** %state.i1114 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2730)
  %2731 = bitcast i64* %curr_pc.i1115 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2731)
  %2732 = bitcast %struct.Memory** %memory.i1116 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2732)
  call void @llvm.lifetime.start(i64 1, i8* %BRANCH_TAKEN.i1117)
  %2733 = bitcast i64* %SS_BASE.i1118 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2733)
  %2734 = bitcast i64* %ES_BASE.i1119 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2734)
  %2735 = bitcast i64* %DS_BASE.i1120 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2735)
  %2736 = bitcast i64* %CS_BASE.i1121 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2736)
  %2737 = bitcast %struct.State** %STATE.i1122 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2737)
  %2738 = bitcast %struct.Memory** %MEMORY.i1123 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2738)
  %2739 = bitcast i64** %_DR0.i1124 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2739)
  %2740 = bitcast i64** %_DR1.i1125 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2740)
  %2741 = bitcast i64** %_DR2.i1126 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2741)
  %2742 = bitcast i64** %_DR3.i1127 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2742)
  %2743 = bitcast i64** %_DR4.i1128 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2743)
  %2744 = bitcast i64** %_DR5.i1129 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2744)
  %2745 = bitcast i64** %_DR6.i1130 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2745)
  %2746 = bitcast i64** %_DR7.i1131 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2746)
  %2747 = bitcast i64** %CR0.i1132 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2747)
  %2748 = bitcast i64** %CR1.i1133 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2748)
  %2749 = bitcast i64** %CR2.i1134 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2749)
  %2750 = bitcast i64** %CR3.i1135 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2750)
  %2751 = bitcast i64** %CR4.i1136 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2751)
  %2752 = bitcast i64** %CR8.i1137 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2752)
  store %struct.State* %0, %struct.State** %state.i1114, align 8, !noalias !2468
  store i64 %2729, i64* %curr_pc.i1115, align 8, !noalias !2468
  store %struct.Memory* %2650, %struct.Memory** %memory.i1116, align 8, !noalias !2468
  store i8 0, i8* %BRANCH_TAKEN.i1117, align 1, !noalias !2468
  store i64 0, i64* %SS_BASE.i1118, align 8, !noalias !2468
  store i64 0, i64* %ES_BASE.i1119, align 8, !noalias !2468
  store i64 0, i64* %DS_BASE.i1120, align 8, !noalias !2468
  store i64 0, i64* %CS_BASE.i1121, align 8, !noalias !2468
  store %struct.State* %0, %struct.State** %STATE.i1122, align 8, !noalias !2468
  store %struct.Memory* %2650, %struct.Memory** %MEMORY.i1123, align 8, !noalias !2468
  %2753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2754 = getelementptr inbounds %struct.GPR, %struct.GPR* %2753, i32 0, i32 33
  %2755 = getelementptr inbounds %struct.Reg, %struct.Reg* %2754, i32 0, i32 0
  %PC.i1138 = bitcast %union.anon* %2755 to i64*
  store i64 %2729, i64* %PC.i1138, align 8, !alias.scope !2472, !noalias !2473
  %2756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2757 = getelementptr inbounds %struct.GPR, %struct.GPR* %2756, i32 0, i32 1
  %2758 = getelementptr inbounds %struct.Reg, %struct.Reg* %2757, i32 0, i32 0
  %2759 = bitcast %union.anon* %2758 to %struct.anon.2*
  %AH.i1139 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2759, i32 0, i32 1
  %2760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2761 = getelementptr inbounds %struct.GPR, %struct.GPR* %2760, i32 0, i32 3
  %2762 = getelementptr inbounds %struct.Reg, %struct.Reg* %2761, i32 0, i32 0
  %2763 = bitcast %union.anon* %2762 to %struct.anon.2*
  %BH.i1140 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2763, i32 0, i32 1
  %2764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2765 = getelementptr inbounds %struct.GPR, %struct.GPR* %2764, i32 0, i32 5
  %2766 = getelementptr inbounds %struct.Reg, %struct.Reg* %2765, i32 0, i32 0
  %2767 = bitcast %union.anon* %2766 to %struct.anon.2*
  %CH.i1141 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2767, i32 0, i32 1
  %2768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2769 = getelementptr inbounds %struct.GPR, %struct.GPR* %2768, i32 0, i32 7
  %2770 = getelementptr inbounds %struct.Reg, %struct.Reg* %2769, i32 0, i32 0
  %2771 = bitcast %union.anon* %2770 to %struct.anon.2*
  %DH.i1142 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2771, i32 0, i32 1
  %2772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2773 = getelementptr inbounds %struct.GPR, %struct.GPR* %2772, i32 0, i32 1
  %2774 = getelementptr inbounds %struct.Reg, %struct.Reg* %2773, i32 0, i32 0
  %2775 = bitcast %union.anon* %2774 to %struct.anon.2*
  %AL.i1143 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2775, i32 0, i32 0
  %2776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2777 = getelementptr inbounds %struct.GPR, %struct.GPR* %2776, i32 0, i32 3
  %2778 = getelementptr inbounds %struct.Reg, %struct.Reg* %2777, i32 0, i32 0
  %2779 = bitcast %union.anon* %2778 to %struct.anon.2*
  %BL.i1144 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2779, i32 0, i32 0
  %2780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2781 = getelementptr inbounds %struct.GPR, %struct.GPR* %2780, i32 0, i32 5
  %2782 = getelementptr inbounds %struct.Reg, %struct.Reg* %2781, i32 0, i32 0
  %2783 = bitcast %union.anon* %2782 to %struct.anon.2*
  %CL.i1145 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2783, i32 0, i32 0
  %2784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2785 = getelementptr inbounds %struct.GPR, %struct.GPR* %2784, i32 0, i32 7
  %2786 = getelementptr inbounds %struct.Reg, %struct.Reg* %2785, i32 0, i32 0
  %2787 = bitcast %union.anon* %2786 to %struct.anon.2*
  %DL.i1146 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2787, i32 0, i32 0
  %2788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2789 = getelementptr inbounds %struct.GPR, %struct.GPR* %2788, i32 0, i32 9
  %2790 = getelementptr inbounds %struct.Reg, %struct.Reg* %2789, i32 0, i32 0
  %2791 = bitcast %union.anon* %2790 to %struct.anon.2*
  %SIL.i1147 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2791, i32 0, i32 0
  %2792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2793 = getelementptr inbounds %struct.GPR, %struct.GPR* %2792, i32 0, i32 11
  %2794 = getelementptr inbounds %struct.Reg, %struct.Reg* %2793, i32 0, i32 0
  %2795 = bitcast %union.anon* %2794 to %struct.anon.2*
  %DIL.i1148 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2795, i32 0, i32 0
  %2796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2797 = getelementptr inbounds %struct.GPR, %struct.GPR* %2796, i32 0, i32 13
  %2798 = getelementptr inbounds %struct.Reg, %struct.Reg* %2797, i32 0, i32 0
  %2799 = bitcast %union.anon* %2798 to %struct.anon.2*
  %SPL.i1149 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2799, i32 0, i32 0
  %2800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2801 = getelementptr inbounds %struct.GPR, %struct.GPR* %2800, i32 0, i32 15
  %2802 = getelementptr inbounds %struct.Reg, %struct.Reg* %2801, i32 0, i32 0
  %2803 = bitcast %union.anon* %2802 to %struct.anon.2*
  %BPL.i1150 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2803, i32 0, i32 0
  %2804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2805 = getelementptr inbounds %struct.GPR, %struct.GPR* %2804, i32 0, i32 17
  %2806 = getelementptr inbounds %struct.Reg, %struct.Reg* %2805, i32 0, i32 0
  %2807 = bitcast %union.anon* %2806 to %struct.anon.2*
  %R8B.i1151 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2807, i32 0, i32 0
  %2808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2809 = getelementptr inbounds %struct.GPR, %struct.GPR* %2808, i32 0, i32 19
  %2810 = getelementptr inbounds %struct.Reg, %struct.Reg* %2809, i32 0, i32 0
  %2811 = bitcast %union.anon* %2810 to %struct.anon.2*
  %R9B.i1152 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2811, i32 0, i32 0
  %2812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2813 = getelementptr inbounds %struct.GPR, %struct.GPR* %2812, i32 0, i32 21
  %2814 = getelementptr inbounds %struct.Reg, %struct.Reg* %2813, i32 0, i32 0
  %2815 = bitcast %union.anon* %2814 to %struct.anon.2*
  %R10B.i1153 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2815, i32 0, i32 0
  %2816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2817 = getelementptr inbounds %struct.GPR, %struct.GPR* %2816, i32 0, i32 23
  %2818 = getelementptr inbounds %struct.Reg, %struct.Reg* %2817, i32 0, i32 0
  %2819 = bitcast %union.anon* %2818 to %struct.anon.2*
  %R11B.i1154 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2819, i32 0, i32 0
  %2820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2821 = getelementptr inbounds %struct.GPR, %struct.GPR* %2820, i32 0, i32 25
  %2822 = getelementptr inbounds %struct.Reg, %struct.Reg* %2821, i32 0, i32 0
  %2823 = bitcast %union.anon* %2822 to %struct.anon.2*
  %R12B.i1155 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2823, i32 0, i32 0
  %2824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2825 = getelementptr inbounds %struct.GPR, %struct.GPR* %2824, i32 0, i32 27
  %2826 = getelementptr inbounds %struct.Reg, %struct.Reg* %2825, i32 0, i32 0
  %2827 = bitcast %union.anon* %2826 to %struct.anon.2*
  %R13B.i1156 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2827, i32 0, i32 0
  %2828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2829 = getelementptr inbounds %struct.GPR, %struct.GPR* %2828, i32 0, i32 29
  %2830 = getelementptr inbounds %struct.Reg, %struct.Reg* %2829, i32 0, i32 0
  %2831 = bitcast %union.anon* %2830 to %struct.anon.2*
  %R14B.i1157 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2831, i32 0, i32 0
  %2832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2833 = getelementptr inbounds %struct.GPR, %struct.GPR* %2832, i32 0, i32 31
  %2834 = getelementptr inbounds %struct.Reg, %struct.Reg* %2833, i32 0, i32 0
  %2835 = bitcast %union.anon* %2834 to %struct.anon.2*
  %R15B.i1158 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2835, i32 0, i32 0
  %2836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2837 = getelementptr inbounds %struct.GPR, %struct.GPR* %2836, i32 0, i32 1
  %2838 = getelementptr inbounds %struct.Reg, %struct.Reg* %2837, i32 0, i32 0
  %AX.i1159 = bitcast %union.anon* %2838 to i16*
  %2839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2840 = getelementptr inbounds %struct.GPR, %struct.GPR* %2839, i32 0, i32 3
  %2841 = getelementptr inbounds %struct.Reg, %struct.Reg* %2840, i32 0, i32 0
  %BX.i1160 = bitcast %union.anon* %2841 to i16*
  %2842 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2843 = getelementptr inbounds %struct.GPR, %struct.GPR* %2842, i32 0, i32 5
  %2844 = getelementptr inbounds %struct.Reg, %struct.Reg* %2843, i32 0, i32 0
  %CX.i1161 = bitcast %union.anon* %2844 to i16*
  %2845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2846 = getelementptr inbounds %struct.GPR, %struct.GPR* %2845, i32 0, i32 7
  %2847 = getelementptr inbounds %struct.Reg, %struct.Reg* %2846, i32 0, i32 0
  %DX.i1162 = bitcast %union.anon* %2847 to i16*
  %2848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2849 = getelementptr inbounds %struct.GPR, %struct.GPR* %2848, i32 0, i32 9
  %2850 = getelementptr inbounds %struct.Reg, %struct.Reg* %2849, i32 0, i32 0
  %SI.i1163 = bitcast %union.anon* %2850 to i16*
  %2851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2852 = getelementptr inbounds %struct.GPR, %struct.GPR* %2851, i32 0, i32 11
  %2853 = getelementptr inbounds %struct.Reg, %struct.Reg* %2852, i32 0, i32 0
  %DI.i1164 = bitcast %union.anon* %2853 to i16*
  %2854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2855 = getelementptr inbounds %struct.GPR, %struct.GPR* %2854, i32 0, i32 13
  %2856 = getelementptr inbounds %struct.Reg, %struct.Reg* %2855, i32 0, i32 0
  %SP.i1165 = bitcast %union.anon* %2856 to i16*
  %2857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2858 = getelementptr inbounds %struct.GPR, %struct.GPR* %2857, i32 0, i32 15
  %2859 = getelementptr inbounds %struct.Reg, %struct.Reg* %2858, i32 0, i32 0
  %BP.i1166 = bitcast %union.anon* %2859 to i16*
  %2860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2861 = getelementptr inbounds %struct.GPR, %struct.GPR* %2860, i32 0, i32 17
  %2862 = getelementptr inbounds %struct.Reg, %struct.Reg* %2861, i32 0, i32 0
  %R8W.i1167 = bitcast %union.anon* %2862 to i16*
  %2863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2864 = getelementptr inbounds %struct.GPR, %struct.GPR* %2863, i32 0, i32 19
  %2865 = getelementptr inbounds %struct.Reg, %struct.Reg* %2864, i32 0, i32 0
  %R9W.i1168 = bitcast %union.anon* %2865 to i16*
  %2866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2867 = getelementptr inbounds %struct.GPR, %struct.GPR* %2866, i32 0, i32 21
  %2868 = getelementptr inbounds %struct.Reg, %struct.Reg* %2867, i32 0, i32 0
  %R10W.i1169 = bitcast %union.anon* %2868 to i16*
  %2869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2870 = getelementptr inbounds %struct.GPR, %struct.GPR* %2869, i32 0, i32 23
  %2871 = getelementptr inbounds %struct.Reg, %struct.Reg* %2870, i32 0, i32 0
  %R11W.i1170 = bitcast %union.anon* %2871 to i16*
  %2872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2873 = getelementptr inbounds %struct.GPR, %struct.GPR* %2872, i32 0, i32 25
  %2874 = getelementptr inbounds %struct.Reg, %struct.Reg* %2873, i32 0, i32 0
  %R12W.i1171 = bitcast %union.anon* %2874 to i16*
  %2875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2876 = getelementptr inbounds %struct.GPR, %struct.GPR* %2875, i32 0, i32 27
  %2877 = getelementptr inbounds %struct.Reg, %struct.Reg* %2876, i32 0, i32 0
  %R13W.i1172 = bitcast %union.anon* %2877 to i16*
  %2878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2879 = getelementptr inbounds %struct.GPR, %struct.GPR* %2878, i32 0, i32 29
  %2880 = getelementptr inbounds %struct.Reg, %struct.Reg* %2879, i32 0, i32 0
  %R14W.i1173 = bitcast %union.anon* %2880 to i16*
  %2881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2882 = getelementptr inbounds %struct.GPR, %struct.GPR* %2881, i32 0, i32 31
  %2883 = getelementptr inbounds %struct.Reg, %struct.Reg* %2882, i32 0, i32 0
  %R15W.i1174 = bitcast %union.anon* %2883 to i16*
  %2884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2885 = getelementptr inbounds %struct.GPR, %struct.GPR* %2884, i32 0, i32 33
  %2886 = getelementptr inbounds %struct.Reg, %struct.Reg* %2885, i32 0, i32 0
  %IP.i1175 = bitcast %union.anon* %2886 to i16*
  %2887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2888 = getelementptr inbounds %struct.GPR, %struct.GPR* %2887, i32 0, i32 1
  %2889 = getelementptr inbounds %struct.Reg, %struct.Reg* %2888, i32 0, i32 0
  %EAX.i1176 = bitcast %union.anon* %2889 to i32*
  %2890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2891 = getelementptr inbounds %struct.GPR, %struct.GPR* %2890, i32 0, i32 3
  %2892 = getelementptr inbounds %struct.Reg, %struct.Reg* %2891, i32 0, i32 0
  %EBX.i1177 = bitcast %union.anon* %2892 to i32*
  %2893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2894 = getelementptr inbounds %struct.GPR, %struct.GPR* %2893, i32 0, i32 5
  %2895 = getelementptr inbounds %struct.Reg, %struct.Reg* %2894, i32 0, i32 0
  %ECX.i1178 = bitcast %union.anon* %2895 to i32*
  %2896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2897 = getelementptr inbounds %struct.GPR, %struct.GPR* %2896, i32 0, i32 7
  %2898 = getelementptr inbounds %struct.Reg, %struct.Reg* %2897, i32 0, i32 0
  %EDX.i1179 = bitcast %union.anon* %2898 to i32*
  %2899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2900 = getelementptr inbounds %struct.GPR, %struct.GPR* %2899, i32 0, i32 9
  %2901 = getelementptr inbounds %struct.Reg, %struct.Reg* %2900, i32 0, i32 0
  %ESI.i1180 = bitcast %union.anon* %2901 to i32*
  %2902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2903 = getelementptr inbounds %struct.GPR, %struct.GPR* %2902, i32 0, i32 11
  %2904 = getelementptr inbounds %struct.Reg, %struct.Reg* %2903, i32 0, i32 0
  %EDI.i1181 = bitcast %union.anon* %2904 to i32*
  %2905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2906 = getelementptr inbounds %struct.GPR, %struct.GPR* %2905, i32 0, i32 13
  %2907 = getelementptr inbounds %struct.Reg, %struct.Reg* %2906, i32 0, i32 0
  %ESP.i1182 = bitcast %union.anon* %2907 to i32*
  %2908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2909 = getelementptr inbounds %struct.GPR, %struct.GPR* %2908, i32 0, i32 15
  %2910 = getelementptr inbounds %struct.Reg, %struct.Reg* %2909, i32 0, i32 0
  %EBP.i1183 = bitcast %union.anon* %2910 to i32*
  %2911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2912 = getelementptr inbounds %struct.GPR, %struct.GPR* %2911, i32 0, i32 33
  %2913 = getelementptr inbounds %struct.Reg, %struct.Reg* %2912, i32 0, i32 0
  %EIP.i1184 = bitcast %union.anon* %2913 to i32*
  %2914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2915 = getelementptr inbounds %struct.GPR, %struct.GPR* %2914, i32 0, i32 17
  %2916 = getelementptr inbounds %struct.Reg, %struct.Reg* %2915, i32 0, i32 0
  %R8D.i1185 = bitcast %union.anon* %2916 to i32*
  %2917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2918 = getelementptr inbounds %struct.GPR, %struct.GPR* %2917, i32 0, i32 19
  %2919 = getelementptr inbounds %struct.Reg, %struct.Reg* %2918, i32 0, i32 0
  %R9D.i1186 = bitcast %union.anon* %2919 to i32*
  %2920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2921 = getelementptr inbounds %struct.GPR, %struct.GPR* %2920, i32 0, i32 21
  %2922 = getelementptr inbounds %struct.Reg, %struct.Reg* %2921, i32 0, i32 0
  %R10D.i1187 = bitcast %union.anon* %2922 to i32*
  %2923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2924 = getelementptr inbounds %struct.GPR, %struct.GPR* %2923, i32 0, i32 23
  %2925 = getelementptr inbounds %struct.Reg, %struct.Reg* %2924, i32 0, i32 0
  %R11D.i1188 = bitcast %union.anon* %2925 to i32*
  %2926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2927 = getelementptr inbounds %struct.GPR, %struct.GPR* %2926, i32 0, i32 25
  %2928 = getelementptr inbounds %struct.Reg, %struct.Reg* %2927, i32 0, i32 0
  %R12D.i1189 = bitcast %union.anon* %2928 to i32*
  %2929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2930 = getelementptr inbounds %struct.GPR, %struct.GPR* %2929, i32 0, i32 27
  %2931 = getelementptr inbounds %struct.Reg, %struct.Reg* %2930, i32 0, i32 0
  %R13D.i1190 = bitcast %union.anon* %2931 to i32*
  %2932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2933 = getelementptr inbounds %struct.GPR, %struct.GPR* %2932, i32 0, i32 29
  %2934 = getelementptr inbounds %struct.Reg, %struct.Reg* %2933, i32 0, i32 0
  %R14D.i1191 = bitcast %union.anon* %2934 to i32*
  %2935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2936 = getelementptr inbounds %struct.GPR, %struct.GPR* %2935, i32 0, i32 31
  %2937 = getelementptr inbounds %struct.Reg, %struct.Reg* %2936, i32 0, i32 0
  %R15D.i1192 = bitcast %union.anon* %2937 to i32*
  %2938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2939 = getelementptr inbounds %struct.GPR, %struct.GPR* %2938, i32 0, i32 1
  %2940 = getelementptr inbounds %struct.Reg, %struct.Reg* %2939, i32 0, i32 0
  %RAX.i1193 = bitcast %union.anon* %2940 to i64*
  %2941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2942 = getelementptr inbounds %struct.GPR, %struct.GPR* %2941, i32 0, i32 3
  %2943 = getelementptr inbounds %struct.Reg, %struct.Reg* %2942, i32 0, i32 0
  %RBX.i1194 = bitcast %union.anon* %2943 to i64*
  %2944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2945 = getelementptr inbounds %struct.GPR, %struct.GPR* %2944, i32 0, i32 5
  %2946 = getelementptr inbounds %struct.Reg, %struct.Reg* %2945, i32 0, i32 0
  %RCX.i1195 = bitcast %union.anon* %2946 to i64*
  %2947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2948 = getelementptr inbounds %struct.GPR, %struct.GPR* %2947, i32 0, i32 7
  %2949 = getelementptr inbounds %struct.Reg, %struct.Reg* %2948, i32 0, i32 0
  %RDX.i1196 = bitcast %union.anon* %2949 to i64*
  %2950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2951 = getelementptr inbounds %struct.GPR, %struct.GPR* %2950, i32 0, i32 9
  %2952 = getelementptr inbounds %struct.Reg, %struct.Reg* %2951, i32 0, i32 0
  %RSI.i1197 = bitcast %union.anon* %2952 to i64*
  %2953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2954 = getelementptr inbounds %struct.GPR, %struct.GPR* %2953, i32 0, i32 11
  %2955 = getelementptr inbounds %struct.Reg, %struct.Reg* %2954, i32 0, i32 0
  %RDI.i1198 = bitcast %union.anon* %2955 to i64*
  %2956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2957 = getelementptr inbounds %struct.GPR, %struct.GPR* %2956, i32 0, i32 13
  %2958 = getelementptr inbounds %struct.Reg, %struct.Reg* %2957, i32 0, i32 0
  %RSP.i1199 = bitcast %union.anon* %2958 to i64*
  %2959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2960 = getelementptr inbounds %struct.GPR, %struct.GPR* %2959, i32 0, i32 15
  %2961 = getelementptr inbounds %struct.Reg, %struct.Reg* %2960, i32 0, i32 0
  %RBP.i1200 = bitcast %union.anon* %2961 to i64*
  %2962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2963 = getelementptr inbounds %struct.GPR, %struct.GPR* %2962, i32 0, i32 17
  %2964 = getelementptr inbounds %struct.Reg, %struct.Reg* %2963, i32 0, i32 0
  %R8.i1201 = bitcast %union.anon* %2964 to i64*
  %2965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2966 = getelementptr inbounds %struct.GPR, %struct.GPR* %2965, i32 0, i32 19
  %2967 = getelementptr inbounds %struct.Reg, %struct.Reg* %2966, i32 0, i32 0
  %R9.i1202 = bitcast %union.anon* %2967 to i64*
  %2968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2969 = getelementptr inbounds %struct.GPR, %struct.GPR* %2968, i32 0, i32 21
  %2970 = getelementptr inbounds %struct.Reg, %struct.Reg* %2969, i32 0, i32 0
  %R10.i1203 = bitcast %union.anon* %2970 to i64*
  %2971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2972 = getelementptr inbounds %struct.GPR, %struct.GPR* %2971, i32 0, i32 23
  %2973 = getelementptr inbounds %struct.Reg, %struct.Reg* %2972, i32 0, i32 0
  %R11.i1204 = bitcast %union.anon* %2973 to i64*
  %2974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2975 = getelementptr inbounds %struct.GPR, %struct.GPR* %2974, i32 0, i32 25
  %2976 = getelementptr inbounds %struct.Reg, %struct.Reg* %2975, i32 0, i32 0
  %R12.i1205 = bitcast %union.anon* %2976 to i64*
  %2977 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2978 = getelementptr inbounds %struct.GPR, %struct.GPR* %2977, i32 0, i32 27
  %2979 = getelementptr inbounds %struct.Reg, %struct.Reg* %2978, i32 0, i32 0
  %R13.i1206 = bitcast %union.anon* %2979 to i64*
  %2980 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2981 = getelementptr inbounds %struct.GPR, %struct.GPR* %2980, i32 0, i32 29
  %2982 = getelementptr inbounds %struct.Reg, %struct.Reg* %2981, i32 0, i32 0
  %R14.i1207 = bitcast %union.anon* %2982 to i64*
  %2983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2984 = getelementptr inbounds %struct.GPR, %struct.GPR* %2983, i32 0, i32 31
  %2985 = getelementptr inbounds %struct.Reg, %struct.Reg* %2984, i32 0, i32 0
  %R15.i1208 = bitcast %union.anon* %2985 to i64*
  %2986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2987 = getelementptr inbounds %struct.GPR, %struct.GPR* %2986, i32 0, i32 33
  %2988 = getelementptr inbounds %struct.Reg, %struct.Reg* %2987, i32 0, i32 0
  %RIP.i1209 = bitcast %union.anon* %2988 to i64*
  %2989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %2990 = getelementptr inbounds %struct.Segments, %struct.Segments* %2989, i32 0, i32 1
  %SS.i1210 = bitcast %union.SegmentSelector* %2990 to i16*
  %2991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %2992 = getelementptr inbounds %struct.Segments, %struct.Segments* %2991, i32 0, i32 3
  %ES.i1211 = bitcast %union.SegmentSelector* %2992 to i16*
  %2993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %2994 = getelementptr inbounds %struct.Segments, %struct.Segments* %2993, i32 0, i32 5
  %GS.i1212 = bitcast %union.SegmentSelector* %2994 to i16*
  %2995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %2996 = getelementptr inbounds %struct.Segments, %struct.Segments* %2995, i32 0, i32 7
  %FS.i1213 = bitcast %union.SegmentSelector* %2996 to i16*
  %2997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %2998 = getelementptr inbounds %struct.Segments, %struct.Segments* %2997, i32 0, i32 9
  %DS.i1214 = bitcast %union.SegmentSelector* %2998 to i16*
  %2999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %3000 = getelementptr inbounds %struct.Segments, %struct.Segments* %2999, i32 0, i32 11
  %CS.i1215 = bitcast %union.SegmentSelector* %3000 to i16*
  %3001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %3002 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %3001, i32 0, i32 5
  %3003 = getelementptr inbounds %struct.Reg, %struct.Reg* %3002, i32 0, i32 0
  %GS_BASE.i1216 = bitcast %union.anon* %3003 to i64*
  %3004 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %3005 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %3004, i32 0, i32 7
  %3006 = getelementptr inbounds %struct.Reg, %struct.Reg* %3005, i32 0, i32 0
  %FS_BASE.i1217 = bitcast %union.anon* %3006 to i64*
  %3007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3008 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3007, i64 0, i64 0
  %YMM0.i1218 = bitcast %union.VectorReg* %3008 to %"class.std::bitset"*
  %3009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3010 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3009, i64 0, i64 1
  %YMM1.i1219 = bitcast %union.VectorReg* %3010 to %"class.std::bitset"*
  %3011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3012 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3011, i64 0, i64 2
  %YMM2.i1220 = bitcast %union.VectorReg* %3012 to %"class.std::bitset"*
  %3013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3014 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3013, i64 0, i64 3
  %YMM3.i1221 = bitcast %union.VectorReg* %3014 to %"class.std::bitset"*
  %3015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3016 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3015, i64 0, i64 4
  %YMM4.i1222 = bitcast %union.VectorReg* %3016 to %"class.std::bitset"*
  %3017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3018 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3017, i64 0, i64 5
  %YMM5.i1223 = bitcast %union.VectorReg* %3018 to %"class.std::bitset"*
  %3019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3020 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3019, i64 0, i64 6
  %YMM6.i1224 = bitcast %union.VectorReg* %3020 to %"class.std::bitset"*
  %3021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3022 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3021, i64 0, i64 7
  %YMM7.i1225 = bitcast %union.VectorReg* %3022 to %"class.std::bitset"*
  %3023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3024 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3023, i64 0, i64 8
  %YMM8.i1226 = bitcast %union.VectorReg* %3024 to %"class.std::bitset"*
  %3025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3026 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3025, i64 0, i64 9
  %YMM9.i1227 = bitcast %union.VectorReg* %3026 to %"class.std::bitset"*
  %3027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3028 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3027, i64 0, i64 10
  %YMM10.i1228 = bitcast %union.VectorReg* %3028 to %"class.std::bitset"*
  %3029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3030 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3029, i64 0, i64 11
  %YMM11.i1229 = bitcast %union.VectorReg* %3030 to %"class.std::bitset"*
  %3031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3032 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3031, i64 0, i64 12
  %YMM12.i1230 = bitcast %union.VectorReg* %3032 to %"class.std::bitset"*
  %3033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3034 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3033, i64 0, i64 13
  %YMM13.i1231 = bitcast %union.VectorReg* %3034 to %"class.std::bitset"*
  %3035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3036 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3035, i64 0, i64 14
  %YMM14.i1232 = bitcast %union.VectorReg* %3036 to %"class.std::bitset"*
  %3037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3038 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3037, i64 0, i64 15
  %YMM15.i1233 = bitcast %union.VectorReg* %3038 to %"class.std::bitset"*
  %3039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3040 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3039, i64 0, i64 0
  %XMM0.i1234 = bitcast %union.VectorReg* %3040 to %union.vec128_t*
  %3041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3042 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3041, i64 0, i64 1
  %XMM1.i1235 = bitcast %union.VectorReg* %3042 to %union.vec128_t*
  %3043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3044 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3043, i64 0, i64 2
  %XMM2.i1236 = bitcast %union.VectorReg* %3044 to %union.vec128_t*
  %3045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3046 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3045, i64 0, i64 3
  %XMM3.i1237 = bitcast %union.VectorReg* %3046 to %union.vec128_t*
  %3047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3048 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3047, i64 0, i64 4
  %XMM4.i1238 = bitcast %union.VectorReg* %3048 to %union.vec128_t*
  %3049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3050 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3049, i64 0, i64 5
  %XMM5.i1239 = bitcast %union.VectorReg* %3050 to %union.vec128_t*
  %3051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3052 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3051, i64 0, i64 6
  %XMM6.i1240 = bitcast %union.VectorReg* %3052 to %union.vec128_t*
  %3053 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3054 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3053, i64 0, i64 7
  %XMM7.i1241 = bitcast %union.VectorReg* %3054 to %union.vec128_t*
  %3055 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3056 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3055, i64 0, i64 8
  %XMM8.i1242 = bitcast %union.VectorReg* %3056 to %union.vec128_t*
  %3057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3058 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3057, i64 0, i64 9
  %XMM9.i1243 = bitcast %union.VectorReg* %3058 to %union.vec128_t*
  %3059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3060 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3059, i64 0, i64 10
  %XMM10.i1244 = bitcast %union.VectorReg* %3060 to %union.vec128_t*
  %3061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3062 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3061, i64 0, i64 11
  %XMM11.i1245 = bitcast %union.VectorReg* %3062 to %union.vec128_t*
  %3063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3064 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3063, i64 0, i64 12
  %XMM12.i1246 = bitcast %union.VectorReg* %3064 to %union.vec128_t*
  %3065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3066 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3065, i64 0, i64 13
  %XMM13.i1247 = bitcast %union.VectorReg* %3066 to %union.vec128_t*
  %3067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3068 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3067, i64 0, i64 14
  %XMM14.i1248 = bitcast %union.VectorReg* %3068 to %union.vec128_t*
  %3069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3070 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3069, i64 0, i64 15
  %XMM15.i1249 = bitcast %union.VectorReg* %3070 to %union.vec128_t*
  %3071 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %3072 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %3071, i32 0, i32 0
  %3073 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %3072, i64 0, i64 0
  %ST0.i1250 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %3073, i32 0, i32 1
  %3074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %3075 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %3074, i32 0, i32 0
  %3076 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %3075, i64 0, i64 1
  %ST1.i1251 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %3076, i32 0, i32 1
  %3077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %3078 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %3077, i32 0, i32 0
  %3079 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %3078, i64 0, i64 2
  %ST2.i1252 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %3079, i32 0, i32 1
  %3080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %3081 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %3080, i32 0, i32 0
  %3082 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %3081, i64 0, i64 3
  %ST3.i1253 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %3082, i32 0, i32 1
  %3083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %3084 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %3083, i32 0, i32 0
  %3085 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %3084, i64 0, i64 4
  %ST4.i1254 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %3085, i32 0, i32 1
  %3086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %3087 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %3086, i32 0, i32 0
  %3088 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %3087, i64 0, i64 5
  %ST5.i1255 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %3088, i32 0, i32 1
  %3089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %3090 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %3089, i32 0, i32 0
  %3091 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %3090, i64 0, i64 6
  %ST6.i1256 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %3091, i32 0, i32 1
  %3092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %3093 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %3092, i32 0, i32 0
  %3094 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %3093, i64 0, i64 7
  %ST7.i1257 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %3094, i32 0, i32 1
  %3095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %3096 = getelementptr inbounds %struct.MMX, %struct.MMX* %3095, i32 0, i32 0
  %3097 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %3096, i64 0, i64 0
  %3098 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %3097, i32 0, i32 1
  %3099 = bitcast %union.vec64_t* %3098 to %struct.uint64v1_t*
  %3100 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %3099, i32 0, i32 0
  %MM0.i1258 = getelementptr inbounds [1 x i64], [1 x i64]* %3100, i64 0, i64 0
  %3101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %3102 = getelementptr inbounds %struct.MMX, %struct.MMX* %3101, i32 0, i32 0
  %3103 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %3102, i64 0, i64 1
  %3104 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %3103, i32 0, i32 1
  %3105 = bitcast %union.vec64_t* %3104 to %struct.uint64v1_t*
  %3106 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %3105, i32 0, i32 0
  %MM1.i1259 = getelementptr inbounds [1 x i64], [1 x i64]* %3106, i64 0, i64 0
  %3107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %3108 = getelementptr inbounds %struct.MMX, %struct.MMX* %3107, i32 0, i32 0
  %3109 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %3108, i64 0, i64 2
  %3110 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %3109, i32 0, i32 1
  %3111 = bitcast %union.vec64_t* %3110 to %struct.uint64v1_t*
  %3112 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %3111, i32 0, i32 0
  %MM2.i1260 = getelementptr inbounds [1 x i64], [1 x i64]* %3112, i64 0, i64 0
  %3113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %3114 = getelementptr inbounds %struct.MMX, %struct.MMX* %3113, i32 0, i32 0
  %3115 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %3114, i64 0, i64 3
  %3116 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %3115, i32 0, i32 1
  %3117 = bitcast %union.vec64_t* %3116 to %struct.uint64v1_t*
  %3118 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %3117, i32 0, i32 0
  %MM3.i1261 = getelementptr inbounds [1 x i64], [1 x i64]* %3118, i64 0, i64 0
  %3119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %3120 = getelementptr inbounds %struct.MMX, %struct.MMX* %3119, i32 0, i32 0
  %3121 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %3120, i64 0, i64 4
  %3122 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %3121, i32 0, i32 1
  %3123 = bitcast %union.vec64_t* %3122 to %struct.uint64v1_t*
  %3124 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %3123, i32 0, i32 0
  %MM4.i1262 = getelementptr inbounds [1 x i64], [1 x i64]* %3124, i64 0, i64 0
  %3125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %3126 = getelementptr inbounds %struct.MMX, %struct.MMX* %3125, i32 0, i32 0
  %3127 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %3126, i64 0, i64 5
  %3128 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %3127, i32 0, i32 1
  %3129 = bitcast %union.vec64_t* %3128 to %struct.uint64v1_t*
  %3130 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %3129, i32 0, i32 0
  %MM5.i1263 = getelementptr inbounds [1 x i64], [1 x i64]* %3130, i64 0, i64 0
  %3131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %3132 = getelementptr inbounds %struct.MMX, %struct.MMX* %3131, i32 0, i32 0
  %3133 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %3132, i64 0, i64 6
  %3134 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %3133, i32 0, i32 1
  %3135 = bitcast %union.vec64_t* %3134 to %struct.uint64v1_t*
  %3136 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %3135, i32 0, i32 0
  %MM6.i1264 = getelementptr inbounds [1 x i64], [1 x i64]* %3136, i64 0, i64 0
  %3137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %3138 = getelementptr inbounds %struct.MMX, %struct.MMX* %3137, i32 0, i32 0
  %3139 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %3138, i64 0, i64 7
  %3140 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %3139, i32 0, i32 1
  %3141 = bitcast %union.vec64_t* %3140 to %struct.uint64v1_t*
  %3142 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %3141, i32 0, i32 0
  %MM7.i1265 = getelementptr inbounds [1 x i64], [1 x i64]* %3142, i64 0, i64 0
  %3143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF.i1266 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %3143, i32 0, i32 5
  %3144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF.i1267 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %3144, i32 0, i32 1
  %3145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF.i1268 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %3145, i32 0, i32 11
  %3146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF.i1269 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %3146, i32 0, i32 13
  %3147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF.i1270 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %3147, i32 0, i32 3
  %3148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF.i1271 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %3148, i32 0, i32 9
  %3149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF.i1272 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %3149, i32 0, i32 7
  store i64* @DR0, i64** %_DR0.i1124, align 8, !noalias !2468
  store i64* @DR1, i64** %_DR1.i1125, align 8, !noalias !2468
  store i64* @DR2, i64** %_DR2.i1126, align 8, !noalias !2468
  store i64* @DR3, i64** %_DR3.i1127, align 8, !noalias !2468
  store i64* @DR4, i64** %_DR4.i1128, align 8, !noalias !2468
  store i64* @DR5, i64** %_DR5.i1129, align 8, !noalias !2468
  store i64* @DR6, i64** %_DR6.i1130, align 8, !noalias !2468
  store i64* @DR7, i64** %_DR7.i1131, align 8, !noalias !2468
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0.i1132, align 8, !noalias !2468
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1.i1133, align 8, !noalias !2468
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2.i1134, align 8, !noalias !2468
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3.i1135, align 8, !noalias !2468
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4.i1136, align 8, !noalias !2468
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8.i1137, align 8, !noalias !2468
  %3150 = bitcast %"class.std::bitset"* %YMM0.i1218 to double*
  %3151 = load double, double* %3150, !alias.scope !2472, !noalias !2473
  %3152 = load i64, i64* %RSP.i1199, !alias.scope !2472, !noalias !2473
  %3153 = load %struct.Memory*, %struct.Memory** %MEMORY.i1123, !noalias !2468
  %3154 = inttoptr i64 %3152 to i64*
  %3155 = load i64, i64* %3154
  store i64 %3155, i64* %PC.i1138, !alias.scope !2472, !noalias !2473
  %3156 = add i64 %3152, 8
  store i64 %3156, i64* %RSP.i1199, !alias.scope !2472, !noalias !2473
  %3157 = call double @cos(double %3151)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0.i1218, !alias.scope !2472, !noalias !2473
  %3158 = bitcast %"class.std::bitset"* %YMM0.i1218 to double*
  store double %3157, double* %3158, !alias.scope !2472, !noalias !2473
  %3159 = load %struct.Memory*, %struct.Memory** %MEMORY.i1123, !noalias !2468
  %3160 = bitcast %struct.State** %state.i1114 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3160)
  %3161 = bitcast i64* %curr_pc.i1115 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3161)
  %3162 = bitcast %struct.Memory** %memory.i1116 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3162)
  call void @llvm.lifetime.end(i64 1, i8* %BRANCH_TAKEN.i1117)
  %3163 = bitcast i64* %SS_BASE.i1118 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3163)
  %3164 = bitcast i64* %ES_BASE.i1119 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3164)
  %3165 = bitcast i64* %DS_BASE.i1120 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3165)
  %3166 = bitcast i64* %CS_BASE.i1121 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3166)
  %3167 = bitcast %struct.State** %STATE.i1122 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3167)
  %3168 = bitcast %struct.Memory** %MEMORY.i1123 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3168)
  %3169 = bitcast i64** %_DR0.i1124 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3169)
  %3170 = bitcast i64** %_DR1.i1125 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3170)
  %3171 = bitcast i64** %_DR2.i1126 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3171)
  %3172 = bitcast i64** %_DR3.i1127 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3172)
  %3173 = bitcast i64** %_DR4.i1128 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3173)
  %3174 = bitcast i64** %_DR5.i1129 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3174)
  %3175 = bitcast i64** %_DR6.i1130 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3175)
  %3176 = bitcast i64** %_DR7.i1131 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3176)
  %3177 = bitcast i64** %CR0.i1132 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3177)
  %3178 = bitcast i64** %CR1.i1133 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3178)
  %3179 = bitcast i64** %CR2.i1134 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3179)
  %3180 = bitcast i64** %CR3.i1135 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3180)
  %3181 = bitcast i64** %CR4.i1136 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3181)
  %3182 = bitcast i64** %CR8.i1137 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3182)
  %3183 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %3184 = load i64, i64* %RBP
  %3185 = sub i64 %3184, 248
  %3186 = load i64, i64* %PC
  %3187 = add i64 %3186, 8
  store i64 %3187, i64* %PC
  %3188 = inttoptr i64 %3185 to double*
  %3189 = load double, double* %3188
  %3190 = bitcast i8* %3183 to double*
  store double %3189, double* %3190, align 1, !tbaa !2451
  %3191 = getelementptr inbounds i8, i8* %3183, i64 8
  %3192 = bitcast i8* %3191 to double*
  store double 0.000000e+00, double* %3192, align 1, !tbaa !2451
  %3193 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %3194 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %3195 = bitcast %union.vec128_t* %XMM0 to i8*
  %3196 = load i64, i64* %PC
  %3197 = add i64 %3196, 4
  store i64 %3197, i64* %PC
  %3198 = bitcast i8* %3194 to double*
  %3199 = load double, double* %3198, align 1
  %3200 = getelementptr inbounds i8, i8* %3194, i64 8
  %3201 = bitcast i8* %3200 to i64*
  %3202 = load i64, i64* %3201, align 1
  %3203 = bitcast i8* %3195 to double*
  %3204 = load double, double* %3203, align 1
  %3205 = fmul double %3199, %3204
  %3206 = bitcast i8* %3193 to double*
  store double %3205, double* %3206, align 1, !tbaa !2451
  %3207 = getelementptr inbounds i8, i8* %3193, i64 8
  %3208 = bitcast i8* %3207 to i64*
  store i64 %3202, i64* %3208, align 1, !tbaa !2451
  %3209 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %3210 = load i64, i64* %RBP
  %3211 = sub i64 %3210, 144
  %3212 = load i64, i64* %PC
  %3213 = add i64 %3212, 8
  store i64 %3213, i64* %PC
  %3214 = inttoptr i64 %3211 to double*
  %3215 = load double, double* %3214
  %3216 = bitcast i8* %3209 to double*
  store double %3215, double* %3216, align 1, !tbaa !2451
  %3217 = getelementptr inbounds i8, i8* %3209, i64 8
  %3218 = bitcast i8* %3217 to double*
  store double 0.000000e+00, double* %3218, align 1, !tbaa !2451
  %3219 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %3220 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %3221 = load i64, i64* %RBP
  %3222 = sub i64 %3221, 152
  %3223 = load i64, i64* %PC
  %3224 = add i64 %3223, 8
  store i64 %3224, i64* %PC
  %3225 = bitcast i8* %3220 to double*
  %3226 = load double, double* %3225, align 1
  %3227 = getelementptr inbounds i8, i8* %3220, i64 8
  %3228 = bitcast i8* %3227 to i64*
  %3229 = load i64, i64* %3228, align 1
  %3230 = inttoptr i64 %3222 to double*
  %3231 = load double, double* %3230
  %3232 = fadd double %3226, %3231
  %3233 = bitcast i8* %3219 to double*
  store double %3232, double* %3233, align 1, !tbaa !2451
  %3234 = getelementptr inbounds i8, i8* %3219, i64 8
  %3235 = bitcast i8* %3234 to i64*
  store i64 %3229, i64* %3235, align 1, !tbaa !2451
  %3236 = load i64, i64* %RBP
  %3237 = sub i64 %3236, 256
  %3238 = bitcast %union.vec128_t* %XMM1 to i8*
  %3239 = load i64, i64* %PC
  %3240 = add i64 %3239, 8
  store i64 %3240, i64* %PC
  %3241 = bitcast i8* %3238 to double*
  %3242 = load double, double* %3241, align 1
  %3243 = inttoptr i64 %3237 to double*
  store double %3242, double* %3243
  %3244 = load i64, i64* %PC
  %3245 = sub i64 %3244, 2498
  %3246 = load i64, i64* %PC
  %3247 = add i64 %3246, 5
  %3248 = load i64, i64* %PC
  %3249 = add i64 %3248, 5
  store i64 %3249, i64* %PC
  %3250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3251 = load i64, i64* %3250, align 8, !tbaa !2428
  %3252 = add i64 %3251, -8
  %3253 = inttoptr i64 %3252 to i64*
  store i64 %3247, i64* %3253
  store i64 %3252, i64* %3250, align 8, !tbaa !2428
  %3254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3245, i64* %3254, align 8, !tbaa !2428
  %3255 = load i64, i64* %PC
  %3256 = bitcast %struct.State** %state.i955 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3256)
  %3257 = bitcast i64* %curr_pc.i956 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3257)
  %3258 = bitcast %struct.Memory** %memory.i957 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3258)
  call void @llvm.lifetime.start(i64 1, i8* %BRANCH_TAKEN.i958)
  %3259 = bitcast i64* %SS_BASE.i959 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3259)
  %3260 = bitcast i64* %ES_BASE.i960 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3260)
  %3261 = bitcast i64* %DS_BASE.i961 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3261)
  %3262 = bitcast i64* %CS_BASE.i962 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3262)
  %3263 = bitcast %struct.State** %STATE.i963 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3263)
  %3264 = bitcast %struct.Memory** %MEMORY.i964 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3264)
  %3265 = bitcast i64** %_DR0.i965 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3265)
  %3266 = bitcast i64** %_DR1.i966 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3266)
  %3267 = bitcast i64** %_DR2.i967 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3267)
  %3268 = bitcast i64** %_DR3.i968 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3268)
  %3269 = bitcast i64** %_DR4.i969 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3269)
  %3270 = bitcast i64** %_DR5.i970 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3270)
  %3271 = bitcast i64** %_DR6.i971 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3271)
  %3272 = bitcast i64** %_DR7.i972 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3272)
  %3273 = bitcast i64** %CR0.i973 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3273)
  %3274 = bitcast i64** %CR1.i974 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3274)
  %3275 = bitcast i64** %CR2.i975 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3275)
  %3276 = bitcast i64** %CR3.i976 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3276)
  %3277 = bitcast i64** %CR4.i977 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3277)
  %3278 = bitcast i64** %CR8.i978 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3278)
  store %struct.State* %0, %struct.State** %state.i955, align 8, !noalias !2474
  store i64 %3255, i64* %curr_pc.i956, align 8, !noalias !2474
  store %struct.Memory* %3159, %struct.Memory** %memory.i957, align 8, !noalias !2474
  store i8 0, i8* %BRANCH_TAKEN.i958, align 1, !noalias !2474
  store i64 0, i64* %SS_BASE.i959, align 8, !noalias !2474
  store i64 0, i64* %ES_BASE.i960, align 8, !noalias !2474
  store i64 0, i64* %DS_BASE.i961, align 8, !noalias !2474
  store i64 0, i64* %CS_BASE.i962, align 8, !noalias !2474
  store %struct.State* %0, %struct.State** %STATE.i963, align 8, !noalias !2474
  store %struct.Memory* %3159, %struct.Memory** %MEMORY.i964, align 8, !noalias !2474
  %3279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3280 = getelementptr inbounds %struct.GPR, %struct.GPR* %3279, i32 0, i32 33
  %3281 = getelementptr inbounds %struct.Reg, %struct.Reg* %3280, i32 0, i32 0
  %PC.i979 = bitcast %union.anon* %3281 to i64*
  store i64 %3255, i64* %PC.i979, align 8, !alias.scope !2478, !noalias !2479
  %3282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3283 = getelementptr inbounds %struct.GPR, %struct.GPR* %3282, i32 0, i32 1
  %3284 = getelementptr inbounds %struct.Reg, %struct.Reg* %3283, i32 0, i32 0
  %3285 = bitcast %union.anon* %3284 to %struct.anon.2*
  %AH.i980 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3285, i32 0, i32 1
  %3286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3287 = getelementptr inbounds %struct.GPR, %struct.GPR* %3286, i32 0, i32 3
  %3288 = getelementptr inbounds %struct.Reg, %struct.Reg* %3287, i32 0, i32 0
  %3289 = bitcast %union.anon* %3288 to %struct.anon.2*
  %BH.i981 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3289, i32 0, i32 1
  %3290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3291 = getelementptr inbounds %struct.GPR, %struct.GPR* %3290, i32 0, i32 5
  %3292 = getelementptr inbounds %struct.Reg, %struct.Reg* %3291, i32 0, i32 0
  %3293 = bitcast %union.anon* %3292 to %struct.anon.2*
  %CH.i982 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3293, i32 0, i32 1
  %3294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3295 = getelementptr inbounds %struct.GPR, %struct.GPR* %3294, i32 0, i32 7
  %3296 = getelementptr inbounds %struct.Reg, %struct.Reg* %3295, i32 0, i32 0
  %3297 = bitcast %union.anon* %3296 to %struct.anon.2*
  %DH.i983 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3297, i32 0, i32 1
  %3298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3299 = getelementptr inbounds %struct.GPR, %struct.GPR* %3298, i32 0, i32 1
  %3300 = getelementptr inbounds %struct.Reg, %struct.Reg* %3299, i32 0, i32 0
  %3301 = bitcast %union.anon* %3300 to %struct.anon.2*
  %AL.i984 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3301, i32 0, i32 0
  %3302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3303 = getelementptr inbounds %struct.GPR, %struct.GPR* %3302, i32 0, i32 3
  %3304 = getelementptr inbounds %struct.Reg, %struct.Reg* %3303, i32 0, i32 0
  %3305 = bitcast %union.anon* %3304 to %struct.anon.2*
  %BL.i985 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3305, i32 0, i32 0
  %3306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3307 = getelementptr inbounds %struct.GPR, %struct.GPR* %3306, i32 0, i32 5
  %3308 = getelementptr inbounds %struct.Reg, %struct.Reg* %3307, i32 0, i32 0
  %3309 = bitcast %union.anon* %3308 to %struct.anon.2*
  %CL.i986 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3309, i32 0, i32 0
  %3310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3311 = getelementptr inbounds %struct.GPR, %struct.GPR* %3310, i32 0, i32 7
  %3312 = getelementptr inbounds %struct.Reg, %struct.Reg* %3311, i32 0, i32 0
  %3313 = bitcast %union.anon* %3312 to %struct.anon.2*
  %DL.i987 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3313, i32 0, i32 0
  %3314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3315 = getelementptr inbounds %struct.GPR, %struct.GPR* %3314, i32 0, i32 9
  %3316 = getelementptr inbounds %struct.Reg, %struct.Reg* %3315, i32 0, i32 0
  %3317 = bitcast %union.anon* %3316 to %struct.anon.2*
  %SIL.i988 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3317, i32 0, i32 0
  %3318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3319 = getelementptr inbounds %struct.GPR, %struct.GPR* %3318, i32 0, i32 11
  %3320 = getelementptr inbounds %struct.Reg, %struct.Reg* %3319, i32 0, i32 0
  %3321 = bitcast %union.anon* %3320 to %struct.anon.2*
  %DIL.i989 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3321, i32 0, i32 0
  %3322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3323 = getelementptr inbounds %struct.GPR, %struct.GPR* %3322, i32 0, i32 13
  %3324 = getelementptr inbounds %struct.Reg, %struct.Reg* %3323, i32 0, i32 0
  %3325 = bitcast %union.anon* %3324 to %struct.anon.2*
  %SPL.i990 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3325, i32 0, i32 0
  %3326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3327 = getelementptr inbounds %struct.GPR, %struct.GPR* %3326, i32 0, i32 15
  %3328 = getelementptr inbounds %struct.Reg, %struct.Reg* %3327, i32 0, i32 0
  %3329 = bitcast %union.anon* %3328 to %struct.anon.2*
  %BPL.i991 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3329, i32 0, i32 0
  %3330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3331 = getelementptr inbounds %struct.GPR, %struct.GPR* %3330, i32 0, i32 17
  %3332 = getelementptr inbounds %struct.Reg, %struct.Reg* %3331, i32 0, i32 0
  %3333 = bitcast %union.anon* %3332 to %struct.anon.2*
  %R8B.i992 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3333, i32 0, i32 0
  %3334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3335 = getelementptr inbounds %struct.GPR, %struct.GPR* %3334, i32 0, i32 19
  %3336 = getelementptr inbounds %struct.Reg, %struct.Reg* %3335, i32 0, i32 0
  %3337 = bitcast %union.anon* %3336 to %struct.anon.2*
  %R9B.i993 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3337, i32 0, i32 0
  %3338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3339 = getelementptr inbounds %struct.GPR, %struct.GPR* %3338, i32 0, i32 21
  %3340 = getelementptr inbounds %struct.Reg, %struct.Reg* %3339, i32 0, i32 0
  %3341 = bitcast %union.anon* %3340 to %struct.anon.2*
  %R10B.i994 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3341, i32 0, i32 0
  %3342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3343 = getelementptr inbounds %struct.GPR, %struct.GPR* %3342, i32 0, i32 23
  %3344 = getelementptr inbounds %struct.Reg, %struct.Reg* %3343, i32 0, i32 0
  %3345 = bitcast %union.anon* %3344 to %struct.anon.2*
  %R11B.i995 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3345, i32 0, i32 0
  %3346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3347 = getelementptr inbounds %struct.GPR, %struct.GPR* %3346, i32 0, i32 25
  %3348 = getelementptr inbounds %struct.Reg, %struct.Reg* %3347, i32 0, i32 0
  %3349 = bitcast %union.anon* %3348 to %struct.anon.2*
  %R12B.i996 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3349, i32 0, i32 0
  %3350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3351 = getelementptr inbounds %struct.GPR, %struct.GPR* %3350, i32 0, i32 27
  %3352 = getelementptr inbounds %struct.Reg, %struct.Reg* %3351, i32 0, i32 0
  %3353 = bitcast %union.anon* %3352 to %struct.anon.2*
  %R13B.i997 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3353, i32 0, i32 0
  %3354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3355 = getelementptr inbounds %struct.GPR, %struct.GPR* %3354, i32 0, i32 29
  %3356 = getelementptr inbounds %struct.Reg, %struct.Reg* %3355, i32 0, i32 0
  %3357 = bitcast %union.anon* %3356 to %struct.anon.2*
  %R14B.i998 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3357, i32 0, i32 0
  %3358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3359 = getelementptr inbounds %struct.GPR, %struct.GPR* %3358, i32 0, i32 31
  %3360 = getelementptr inbounds %struct.Reg, %struct.Reg* %3359, i32 0, i32 0
  %3361 = bitcast %union.anon* %3360 to %struct.anon.2*
  %R15B.i999 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3361, i32 0, i32 0
  %3362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3363 = getelementptr inbounds %struct.GPR, %struct.GPR* %3362, i32 0, i32 1
  %3364 = getelementptr inbounds %struct.Reg, %struct.Reg* %3363, i32 0, i32 0
  %AX.i1000 = bitcast %union.anon* %3364 to i16*
  %3365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3366 = getelementptr inbounds %struct.GPR, %struct.GPR* %3365, i32 0, i32 3
  %3367 = getelementptr inbounds %struct.Reg, %struct.Reg* %3366, i32 0, i32 0
  %BX.i1001 = bitcast %union.anon* %3367 to i16*
  %3368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3369 = getelementptr inbounds %struct.GPR, %struct.GPR* %3368, i32 0, i32 5
  %3370 = getelementptr inbounds %struct.Reg, %struct.Reg* %3369, i32 0, i32 0
  %CX.i1002 = bitcast %union.anon* %3370 to i16*
  %3371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3372 = getelementptr inbounds %struct.GPR, %struct.GPR* %3371, i32 0, i32 7
  %3373 = getelementptr inbounds %struct.Reg, %struct.Reg* %3372, i32 0, i32 0
  %DX.i1003 = bitcast %union.anon* %3373 to i16*
  %3374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3375 = getelementptr inbounds %struct.GPR, %struct.GPR* %3374, i32 0, i32 9
  %3376 = getelementptr inbounds %struct.Reg, %struct.Reg* %3375, i32 0, i32 0
  %SI.i1004 = bitcast %union.anon* %3376 to i16*
  %3377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3378 = getelementptr inbounds %struct.GPR, %struct.GPR* %3377, i32 0, i32 11
  %3379 = getelementptr inbounds %struct.Reg, %struct.Reg* %3378, i32 0, i32 0
  %DI.i1005 = bitcast %union.anon* %3379 to i16*
  %3380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3381 = getelementptr inbounds %struct.GPR, %struct.GPR* %3380, i32 0, i32 13
  %3382 = getelementptr inbounds %struct.Reg, %struct.Reg* %3381, i32 0, i32 0
  %SP.i1006 = bitcast %union.anon* %3382 to i16*
  %3383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3384 = getelementptr inbounds %struct.GPR, %struct.GPR* %3383, i32 0, i32 15
  %3385 = getelementptr inbounds %struct.Reg, %struct.Reg* %3384, i32 0, i32 0
  %BP.i1007 = bitcast %union.anon* %3385 to i16*
  %3386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3387 = getelementptr inbounds %struct.GPR, %struct.GPR* %3386, i32 0, i32 17
  %3388 = getelementptr inbounds %struct.Reg, %struct.Reg* %3387, i32 0, i32 0
  %R8W.i1008 = bitcast %union.anon* %3388 to i16*
  %3389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3390 = getelementptr inbounds %struct.GPR, %struct.GPR* %3389, i32 0, i32 19
  %3391 = getelementptr inbounds %struct.Reg, %struct.Reg* %3390, i32 0, i32 0
  %R9W.i1009 = bitcast %union.anon* %3391 to i16*
  %3392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3393 = getelementptr inbounds %struct.GPR, %struct.GPR* %3392, i32 0, i32 21
  %3394 = getelementptr inbounds %struct.Reg, %struct.Reg* %3393, i32 0, i32 0
  %R10W.i1010 = bitcast %union.anon* %3394 to i16*
  %3395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3396 = getelementptr inbounds %struct.GPR, %struct.GPR* %3395, i32 0, i32 23
  %3397 = getelementptr inbounds %struct.Reg, %struct.Reg* %3396, i32 0, i32 0
  %R11W.i1011 = bitcast %union.anon* %3397 to i16*
  %3398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3399 = getelementptr inbounds %struct.GPR, %struct.GPR* %3398, i32 0, i32 25
  %3400 = getelementptr inbounds %struct.Reg, %struct.Reg* %3399, i32 0, i32 0
  %R12W.i1012 = bitcast %union.anon* %3400 to i16*
  %3401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3402 = getelementptr inbounds %struct.GPR, %struct.GPR* %3401, i32 0, i32 27
  %3403 = getelementptr inbounds %struct.Reg, %struct.Reg* %3402, i32 0, i32 0
  %R13W.i1013 = bitcast %union.anon* %3403 to i16*
  %3404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3405 = getelementptr inbounds %struct.GPR, %struct.GPR* %3404, i32 0, i32 29
  %3406 = getelementptr inbounds %struct.Reg, %struct.Reg* %3405, i32 0, i32 0
  %R14W.i1014 = bitcast %union.anon* %3406 to i16*
  %3407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3408 = getelementptr inbounds %struct.GPR, %struct.GPR* %3407, i32 0, i32 31
  %3409 = getelementptr inbounds %struct.Reg, %struct.Reg* %3408, i32 0, i32 0
  %R15W.i1015 = bitcast %union.anon* %3409 to i16*
  %3410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3411 = getelementptr inbounds %struct.GPR, %struct.GPR* %3410, i32 0, i32 33
  %3412 = getelementptr inbounds %struct.Reg, %struct.Reg* %3411, i32 0, i32 0
  %IP.i1016 = bitcast %union.anon* %3412 to i16*
  %3413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3414 = getelementptr inbounds %struct.GPR, %struct.GPR* %3413, i32 0, i32 1
  %3415 = getelementptr inbounds %struct.Reg, %struct.Reg* %3414, i32 0, i32 0
  %EAX.i1017 = bitcast %union.anon* %3415 to i32*
  %3416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3417 = getelementptr inbounds %struct.GPR, %struct.GPR* %3416, i32 0, i32 3
  %3418 = getelementptr inbounds %struct.Reg, %struct.Reg* %3417, i32 0, i32 0
  %EBX.i1018 = bitcast %union.anon* %3418 to i32*
  %3419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3420 = getelementptr inbounds %struct.GPR, %struct.GPR* %3419, i32 0, i32 5
  %3421 = getelementptr inbounds %struct.Reg, %struct.Reg* %3420, i32 0, i32 0
  %ECX.i1019 = bitcast %union.anon* %3421 to i32*
  %3422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3423 = getelementptr inbounds %struct.GPR, %struct.GPR* %3422, i32 0, i32 7
  %3424 = getelementptr inbounds %struct.Reg, %struct.Reg* %3423, i32 0, i32 0
  %EDX.i1020 = bitcast %union.anon* %3424 to i32*
  %3425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3426 = getelementptr inbounds %struct.GPR, %struct.GPR* %3425, i32 0, i32 9
  %3427 = getelementptr inbounds %struct.Reg, %struct.Reg* %3426, i32 0, i32 0
  %ESI.i1021 = bitcast %union.anon* %3427 to i32*
  %3428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3429 = getelementptr inbounds %struct.GPR, %struct.GPR* %3428, i32 0, i32 11
  %3430 = getelementptr inbounds %struct.Reg, %struct.Reg* %3429, i32 0, i32 0
  %EDI.i1022 = bitcast %union.anon* %3430 to i32*
  %3431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3432 = getelementptr inbounds %struct.GPR, %struct.GPR* %3431, i32 0, i32 13
  %3433 = getelementptr inbounds %struct.Reg, %struct.Reg* %3432, i32 0, i32 0
  %ESP.i1023 = bitcast %union.anon* %3433 to i32*
  %3434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3435 = getelementptr inbounds %struct.GPR, %struct.GPR* %3434, i32 0, i32 15
  %3436 = getelementptr inbounds %struct.Reg, %struct.Reg* %3435, i32 0, i32 0
  %EBP.i1024 = bitcast %union.anon* %3436 to i32*
  %3437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3438 = getelementptr inbounds %struct.GPR, %struct.GPR* %3437, i32 0, i32 33
  %3439 = getelementptr inbounds %struct.Reg, %struct.Reg* %3438, i32 0, i32 0
  %EIP.i1025 = bitcast %union.anon* %3439 to i32*
  %3440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3441 = getelementptr inbounds %struct.GPR, %struct.GPR* %3440, i32 0, i32 17
  %3442 = getelementptr inbounds %struct.Reg, %struct.Reg* %3441, i32 0, i32 0
  %R8D.i1026 = bitcast %union.anon* %3442 to i32*
  %3443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3444 = getelementptr inbounds %struct.GPR, %struct.GPR* %3443, i32 0, i32 19
  %3445 = getelementptr inbounds %struct.Reg, %struct.Reg* %3444, i32 0, i32 0
  %R9D.i1027 = bitcast %union.anon* %3445 to i32*
  %3446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3447 = getelementptr inbounds %struct.GPR, %struct.GPR* %3446, i32 0, i32 21
  %3448 = getelementptr inbounds %struct.Reg, %struct.Reg* %3447, i32 0, i32 0
  %R10D.i1028 = bitcast %union.anon* %3448 to i32*
  %3449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3450 = getelementptr inbounds %struct.GPR, %struct.GPR* %3449, i32 0, i32 23
  %3451 = getelementptr inbounds %struct.Reg, %struct.Reg* %3450, i32 0, i32 0
  %R11D.i1029 = bitcast %union.anon* %3451 to i32*
  %3452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3453 = getelementptr inbounds %struct.GPR, %struct.GPR* %3452, i32 0, i32 25
  %3454 = getelementptr inbounds %struct.Reg, %struct.Reg* %3453, i32 0, i32 0
  %R12D.i1030 = bitcast %union.anon* %3454 to i32*
  %3455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3456 = getelementptr inbounds %struct.GPR, %struct.GPR* %3455, i32 0, i32 27
  %3457 = getelementptr inbounds %struct.Reg, %struct.Reg* %3456, i32 0, i32 0
  %R13D.i1031 = bitcast %union.anon* %3457 to i32*
  %3458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3459 = getelementptr inbounds %struct.GPR, %struct.GPR* %3458, i32 0, i32 29
  %3460 = getelementptr inbounds %struct.Reg, %struct.Reg* %3459, i32 0, i32 0
  %R14D.i1032 = bitcast %union.anon* %3460 to i32*
  %3461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3462 = getelementptr inbounds %struct.GPR, %struct.GPR* %3461, i32 0, i32 31
  %3463 = getelementptr inbounds %struct.Reg, %struct.Reg* %3462, i32 0, i32 0
  %R15D.i1033 = bitcast %union.anon* %3463 to i32*
  %3464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3465 = getelementptr inbounds %struct.GPR, %struct.GPR* %3464, i32 0, i32 1
  %3466 = getelementptr inbounds %struct.Reg, %struct.Reg* %3465, i32 0, i32 0
  %RAX.i1034 = bitcast %union.anon* %3466 to i64*
  %3467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3468 = getelementptr inbounds %struct.GPR, %struct.GPR* %3467, i32 0, i32 3
  %3469 = getelementptr inbounds %struct.Reg, %struct.Reg* %3468, i32 0, i32 0
  %RBX.i1035 = bitcast %union.anon* %3469 to i64*
  %3470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3471 = getelementptr inbounds %struct.GPR, %struct.GPR* %3470, i32 0, i32 5
  %3472 = getelementptr inbounds %struct.Reg, %struct.Reg* %3471, i32 0, i32 0
  %RCX.i1036 = bitcast %union.anon* %3472 to i64*
  %3473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3474 = getelementptr inbounds %struct.GPR, %struct.GPR* %3473, i32 0, i32 7
  %3475 = getelementptr inbounds %struct.Reg, %struct.Reg* %3474, i32 0, i32 0
  %RDX.i1037 = bitcast %union.anon* %3475 to i64*
  %3476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3477 = getelementptr inbounds %struct.GPR, %struct.GPR* %3476, i32 0, i32 9
  %3478 = getelementptr inbounds %struct.Reg, %struct.Reg* %3477, i32 0, i32 0
  %RSI.i1038 = bitcast %union.anon* %3478 to i64*
  %3479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3480 = getelementptr inbounds %struct.GPR, %struct.GPR* %3479, i32 0, i32 11
  %3481 = getelementptr inbounds %struct.Reg, %struct.Reg* %3480, i32 0, i32 0
  %RDI.i1039 = bitcast %union.anon* %3481 to i64*
  %3482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3483 = getelementptr inbounds %struct.GPR, %struct.GPR* %3482, i32 0, i32 13
  %3484 = getelementptr inbounds %struct.Reg, %struct.Reg* %3483, i32 0, i32 0
  %RSP.i1040 = bitcast %union.anon* %3484 to i64*
  %3485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3486 = getelementptr inbounds %struct.GPR, %struct.GPR* %3485, i32 0, i32 15
  %3487 = getelementptr inbounds %struct.Reg, %struct.Reg* %3486, i32 0, i32 0
  %RBP.i1041 = bitcast %union.anon* %3487 to i64*
  %3488 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3489 = getelementptr inbounds %struct.GPR, %struct.GPR* %3488, i32 0, i32 17
  %3490 = getelementptr inbounds %struct.Reg, %struct.Reg* %3489, i32 0, i32 0
  %R8.i1042 = bitcast %union.anon* %3490 to i64*
  %3491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3492 = getelementptr inbounds %struct.GPR, %struct.GPR* %3491, i32 0, i32 19
  %3493 = getelementptr inbounds %struct.Reg, %struct.Reg* %3492, i32 0, i32 0
  %R9.i1043 = bitcast %union.anon* %3493 to i64*
  %3494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3495 = getelementptr inbounds %struct.GPR, %struct.GPR* %3494, i32 0, i32 21
  %3496 = getelementptr inbounds %struct.Reg, %struct.Reg* %3495, i32 0, i32 0
  %R10.i1044 = bitcast %union.anon* %3496 to i64*
  %3497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3498 = getelementptr inbounds %struct.GPR, %struct.GPR* %3497, i32 0, i32 23
  %3499 = getelementptr inbounds %struct.Reg, %struct.Reg* %3498, i32 0, i32 0
  %R11.i1045 = bitcast %union.anon* %3499 to i64*
  %3500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3501 = getelementptr inbounds %struct.GPR, %struct.GPR* %3500, i32 0, i32 25
  %3502 = getelementptr inbounds %struct.Reg, %struct.Reg* %3501, i32 0, i32 0
  %R12.i1046 = bitcast %union.anon* %3502 to i64*
  %3503 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3504 = getelementptr inbounds %struct.GPR, %struct.GPR* %3503, i32 0, i32 27
  %3505 = getelementptr inbounds %struct.Reg, %struct.Reg* %3504, i32 0, i32 0
  %R13.i1047 = bitcast %union.anon* %3505 to i64*
  %3506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3507 = getelementptr inbounds %struct.GPR, %struct.GPR* %3506, i32 0, i32 29
  %3508 = getelementptr inbounds %struct.Reg, %struct.Reg* %3507, i32 0, i32 0
  %R14.i1048 = bitcast %union.anon* %3508 to i64*
  %3509 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3510 = getelementptr inbounds %struct.GPR, %struct.GPR* %3509, i32 0, i32 31
  %3511 = getelementptr inbounds %struct.Reg, %struct.Reg* %3510, i32 0, i32 0
  %R15.i1049 = bitcast %union.anon* %3511 to i64*
  %3512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3513 = getelementptr inbounds %struct.GPR, %struct.GPR* %3512, i32 0, i32 33
  %3514 = getelementptr inbounds %struct.Reg, %struct.Reg* %3513, i32 0, i32 0
  %RIP.i1050 = bitcast %union.anon* %3514 to i64*
  %3515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %3516 = getelementptr inbounds %struct.Segments, %struct.Segments* %3515, i32 0, i32 1
  %SS.i1051 = bitcast %union.SegmentSelector* %3516 to i16*
  %3517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %3518 = getelementptr inbounds %struct.Segments, %struct.Segments* %3517, i32 0, i32 3
  %ES.i1052 = bitcast %union.SegmentSelector* %3518 to i16*
  %3519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %3520 = getelementptr inbounds %struct.Segments, %struct.Segments* %3519, i32 0, i32 5
  %GS.i1053 = bitcast %union.SegmentSelector* %3520 to i16*
  %3521 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %3522 = getelementptr inbounds %struct.Segments, %struct.Segments* %3521, i32 0, i32 7
  %FS.i1054 = bitcast %union.SegmentSelector* %3522 to i16*
  %3523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %3524 = getelementptr inbounds %struct.Segments, %struct.Segments* %3523, i32 0, i32 9
  %DS.i1055 = bitcast %union.SegmentSelector* %3524 to i16*
  %3525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %3526 = getelementptr inbounds %struct.Segments, %struct.Segments* %3525, i32 0, i32 11
  %CS.i1056 = bitcast %union.SegmentSelector* %3526 to i16*
  %3527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %3528 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %3527, i32 0, i32 5
  %3529 = getelementptr inbounds %struct.Reg, %struct.Reg* %3528, i32 0, i32 0
  %GS_BASE.i1057 = bitcast %union.anon* %3529 to i64*
  %3530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %3531 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %3530, i32 0, i32 7
  %3532 = getelementptr inbounds %struct.Reg, %struct.Reg* %3531, i32 0, i32 0
  %FS_BASE.i1058 = bitcast %union.anon* %3532 to i64*
  %3533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3534 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3533, i64 0, i64 0
  %YMM0.i1059 = bitcast %union.VectorReg* %3534 to %"class.std::bitset"*
  %3535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3536 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3535, i64 0, i64 1
  %YMM1.i1060 = bitcast %union.VectorReg* %3536 to %"class.std::bitset"*
  %3537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3538 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3537, i64 0, i64 2
  %YMM2.i1061 = bitcast %union.VectorReg* %3538 to %"class.std::bitset"*
  %3539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3540 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3539, i64 0, i64 3
  %YMM3.i1062 = bitcast %union.VectorReg* %3540 to %"class.std::bitset"*
  %3541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3542 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3541, i64 0, i64 4
  %YMM4.i1063 = bitcast %union.VectorReg* %3542 to %"class.std::bitset"*
  %3543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3544 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3543, i64 0, i64 5
  %YMM5.i1064 = bitcast %union.VectorReg* %3544 to %"class.std::bitset"*
  %3545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3546 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3545, i64 0, i64 6
  %YMM6.i1065 = bitcast %union.VectorReg* %3546 to %"class.std::bitset"*
  %3547 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3548 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3547, i64 0, i64 7
  %YMM7.i1066 = bitcast %union.VectorReg* %3548 to %"class.std::bitset"*
  %3549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3550 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3549, i64 0, i64 8
  %YMM8.i1067 = bitcast %union.VectorReg* %3550 to %"class.std::bitset"*
  %3551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3552 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3551, i64 0, i64 9
  %YMM9.i1068 = bitcast %union.VectorReg* %3552 to %"class.std::bitset"*
  %3553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3554 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3553, i64 0, i64 10
  %YMM10.i1069 = bitcast %union.VectorReg* %3554 to %"class.std::bitset"*
  %3555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3556 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3555, i64 0, i64 11
  %YMM11.i1070 = bitcast %union.VectorReg* %3556 to %"class.std::bitset"*
  %3557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3558 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3557, i64 0, i64 12
  %YMM12.i1071 = bitcast %union.VectorReg* %3558 to %"class.std::bitset"*
  %3559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3560 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3559, i64 0, i64 13
  %YMM13.i1072 = bitcast %union.VectorReg* %3560 to %"class.std::bitset"*
  %3561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3562 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3561, i64 0, i64 14
  %YMM14.i1073 = bitcast %union.VectorReg* %3562 to %"class.std::bitset"*
  %3563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3564 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3563, i64 0, i64 15
  %YMM15.i1074 = bitcast %union.VectorReg* %3564 to %"class.std::bitset"*
  %3565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3566 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3565, i64 0, i64 0
  %XMM0.i1075 = bitcast %union.VectorReg* %3566 to %union.vec128_t*
  %3567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3568 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3567, i64 0, i64 1
  %XMM1.i1076 = bitcast %union.VectorReg* %3568 to %union.vec128_t*
  %3569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3570 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3569, i64 0, i64 2
  %XMM2.i1077 = bitcast %union.VectorReg* %3570 to %union.vec128_t*
  %3571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3572 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3571, i64 0, i64 3
  %XMM3.i1078 = bitcast %union.VectorReg* %3572 to %union.vec128_t*
  %3573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3574 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3573, i64 0, i64 4
  %XMM4.i1079 = bitcast %union.VectorReg* %3574 to %union.vec128_t*
  %3575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3576 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3575, i64 0, i64 5
  %XMM5.i1080 = bitcast %union.VectorReg* %3576 to %union.vec128_t*
  %3577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3578 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3577, i64 0, i64 6
  %XMM6.i1081 = bitcast %union.VectorReg* %3578 to %union.vec128_t*
  %3579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3580 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3579, i64 0, i64 7
  %XMM7.i1082 = bitcast %union.VectorReg* %3580 to %union.vec128_t*
  %3581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3582 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3581, i64 0, i64 8
  %XMM8.i1083 = bitcast %union.VectorReg* %3582 to %union.vec128_t*
  %3583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3584 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3583, i64 0, i64 9
  %XMM9.i1084 = bitcast %union.VectorReg* %3584 to %union.vec128_t*
  %3585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3586 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3585, i64 0, i64 10
  %XMM10.i1085 = bitcast %union.VectorReg* %3586 to %union.vec128_t*
  %3587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3588 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3587, i64 0, i64 11
  %XMM11.i1086 = bitcast %union.VectorReg* %3588 to %union.vec128_t*
  %3589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3590 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3589, i64 0, i64 12
  %XMM12.i1087 = bitcast %union.VectorReg* %3590 to %union.vec128_t*
  %3591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3592 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3591, i64 0, i64 13
  %XMM13.i1088 = bitcast %union.VectorReg* %3592 to %union.vec128_t*
  %3593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3594 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3593, i64 0, i64 14
  %XMM14.i1089 = bitcast %union.VectorReg* %3594 to %union.vec128_t*
  %3595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3596 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3595, i64 0, i64 15
  %XMM15.i1090 = bitcast %union.VectorReg* %3596 to %union.vec128_t*
  %3597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %3598 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %3597, i32 0, i32 0
  %3599 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %3598, i64 0, i64 0
  %ST0.i1091 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %3599, i32 0, i32 1
  %3600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %3601 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %3600, i32 0, i32 0
  %3602 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %3601, i64 0, i64 1
  %ST1.i1092 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %3602, i32 0, i32 1
  %3603 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %3604 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %3603, i32 0, i32 0
  %3605 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %3604, i64 0, i64 2
  %ST2.i1093 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %3605, i32 0, i32 1
  %3606 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %3607 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %3606, i32 0, i32 0
  %3608 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %3607, i64 0, i64 3
  %ST3.i1094 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %3608, i32 0, i32 1
  %3609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %3610 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %3609, i32 0, i32 0
  %3611 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %3610, i64 0, i64 4
  %ST4.i1095 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %3611, i32 0, i32 1
  %3612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %3613 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %3612, i32 0, i32 0
  %3614 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %3613, i64 0, i64 5
  %ST5.i1096 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %3614, i32 0, i32 1
  %3615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %3616 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %3615, i32 0, i32 0
  %3617 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %3616, i64 0, i64 6
  %ST6.i1097 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %3617, i32 0, i32 1
  %3618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %3619 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %3618, i32 0, i32 0
  %3620 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %3619, i64 0, i64 7
  %ST7.i1098 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %3620, i32 0, i32 1
  %3621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %3622 = getelementptr inbounds %struct.MMX, %struct.MMX* %3621, i32 0, i32 0
  %3623 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %3622, i64 0, i64 0
  %3624 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %3623, i32 0, i32 1
  %3625 = bitcast %union.vec64_t* %3624 to %struct.uint64v1_t*
  %3626 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %3625, i32 0, i32 0
  %MM0.i1099 = getelementptr inbounds [1 x i64], [1 x i64]* %3626, i64 0, i64 0
  %3627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %3628 = getelementptr inbounds %struct.MMX, %struct.MMX* %3627, i32 0, i32 0
  %3629 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %3628, i64 0, i64 1
  %3630 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %3629, i32 0, i32 1
  %3631 = bitcast %union.vec64_t* %3630 to %struct.uint64v1_t*
  %3632 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %3631, i32 0, i32 0
  %MM1.i1100 = getelementptr inbounds [1 x i64], [1 x i64]* %3632, i64 0, i64 0
  %3633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %3634 = getelementptr inbounds %struct.MMX, %struct.MMX* %3633, i32 0, i32 0
  %3635 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %3634, i64 0, i64 2
  %3636 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %3635, i32 0, i32 1
  %3637 = bitcast %union.vec64_t* %3636 to %struct.uint64v1_t*
  %3638 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %3637, i32 0, i32 0
  %MM2.i1101 = getelementptr inbounds [1 x i64], [1 x i64]* %3638, i64 0, i64 0
  %3639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %3640 = getelementptr inbounds %struct.MMX, %struct.MMX* %3639, i32 0, i32 0
  %3641 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %3640, i64 0, i64 3
  %3642 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %3641, i32 0, i32 1
  %3643 = bitcast %union.vec64_t* %3642 to %struct.uint64v1_t*
  %3644 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %3643, i32 0, i32 0
  %MM3.i1102 = getelementptr inbounds [1 x i64], [1 x i64]* %3644, i64 0, i64 0
  %3645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %3646 = getelementptr inbounds %struct.MMX, %struct.MMX* %3645, i32 0, i32 0
  %3647 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %3646, i64 0, i64 4
  %3648 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %3647, i32 0, i32 1
  %3649 = bitcast %union.vec64_t* %3648 to %struct.uint64v1_t*
  %3650 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %3649, i32 0, i32 0
  %MM4.i1103 = getelementptr inbounds [1 x i64], [1 x i64]* %3650, i64 0, i64 0
  %3651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %3652 = getelementptr inbounds %struct.MMX, %struct.MMX* %3651, i32 0, i32 0
  %3653 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %3652, i64 0, i64 5
  %3654 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %3653, i32 0, i32 1
  %3655 = bitcast %union.vec64_t* %3654 to %struct.uint64v1_t*
  %3656 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %3655, i32 0, i32 0
  %MM5.i1104 = getelementptr inbounds [1 x i64], [1 x i64]* %3656, i64 0, i64 0
  %3657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %3658 = getelementptr inbounds %struct.MMX, %struct.MMX* %3657, i32 0, i32 0
  %3659 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %3658, i64 0, i64 6
  %3660 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %3659, i32 0, i32 1
  %3661 = bitcast %union.vec64_t* %3660 to %struct.uint64v1_t*
  %3662 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %3661, i32 0, i32 0
  %MM6.i1105 = getelementptr inbounds [1 x i64], [1 x i64]* %3662, i64 0, i64 0
  %3663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %3664 = getelementptr inbounds %struct.MMX, %struct.MMX* %3663, i32 0, i32 0
  %3665 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %3664, i64 0, i64 7
  %3666 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %3665, i32 0, i32 1
  %3667 = bitcast %union.vec64_t* %3666 to %struct.uint64v1_t*
  %3668 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %3667, i32 0, i32 0
  %MM7.i1106 = getelementptr inbounds [1 x i64], [1 x i64]* %3668, i64 0, i64 0
  %3669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF.i1107 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %3669, i32 0, i32 5
  %3670 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF.i1108 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %3670, i32 0, i32 1
  %3671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF.i1109 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %3671, i32 0, i32 11
  %3672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF.i1110 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %3672, i32 0, i32 13
  %3673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF.i1111 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %3673, i32 0, i32 3
  %3674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF.i1112 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %3674, i32 0, i32 9
  %3675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF.i1113 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %3675, i32 0, i32 7
  store i64* @DR0, i64** %_DR0.i965, align 8, !noalias !2474
  store i64* @DR1, i64** %_DR1.i966, align 8, !noalias !2474
  store i64* @DR2, i64** %_DR2.i967, align 8, !noalias !2474
  store i64* @DR3, i64** %_DR3.i968, align 8, !noalias !2474
  store i64* @DR4, i64** %_DR4.i969, align 8, !noalias !2474
  store i64* @DR5, i64** %_DR5.i970, align 8, !noalias !2474
  store i64* @DR6, i64** %_DR6.i971, align 8, !noalias !2474
  store i64* @DR7, i64** %_DR7.i972, align 8, !noalias !2474
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0.i973, align 8, !noalias !2474
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1.i974, align 8, !noalias !2474
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2.i975, align 8, !noalias !2474
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3.i976, align 8, !noalias !2474
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4.i977, align 8, !noalias !2474
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8.i978, align 8, !noalias !2474
  %3676 = bitcast %"class.std::bitset"* %YMM0.i1059 to double*
  %3677 = load double, double* %3676, !alias.scope !2478, !noalias !2479
  %3678 = load i64, i64* %RSP.i1040, !alias.scope !2478, !noalias !2479
  %3679 = load %struct.Memory*, %struct.Memory** %MEMORY.i964, !noalias !2474
  %3680 = inttoptr i64 %3678 to i64*
  %3681 = load i64, i64* %3680
  store i64 %3681, i64* %PC.i979, !alias.scope !2478, !noalias !2479
  %3682 = add i64 %3678, 8
  store i64 %3682, i64* %RSP.i1040, !alias.scope !2478, !noalias !2479
  %3683 = call double @cos(double %3677)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0.i1059, !alias.scope !2478, !noalias !2479
  %3684 = bitcast %"class.std::bitset"* %YMM0.i1059 to double*
  store double %3683, double* %3684, !alias.scope !2478, !noalias !2479
  %3685 = load %struct.Memory*, %struct.Memory** %MEMORY.i964, !noalias !2474
  %3686 = bitcast %struct.State** %state.i955 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3686)
  %3687 = bitcast i64* %curr_pc.i956 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3687)
  %3688 = bitcast %struct.Memory** %memory.i957 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3688)
  call void @llvm.lifetime.end(i64 1, i8* %BRANCH_TAKEN.i958)
  %3689 = bitcast i64* %SS_BASE.i959 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3689)
  %3690 = bitcast i64* %ES_BASE.i960 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3690)
  %3691 = bitcast i64* %DS_BASE.i961 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3691)
  %3692 = bitcast i64* %CS_BASE.i962 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3692)
  %3693 = bitcast %struct.State** %STATE.i963 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3693)
  %3694 = bitcast %struct.Memory** %MEMORY.i964 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3694)
  %3695 = bitcast i64** %_DR0.i965 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3695)
  %3696 = bitcast i64** %_DR1.i966 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3696)
  %3697 = bitcast i64** %_DR2.i967 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3697)
  %3698 = bitcast i64** %_DR3.i968 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3698)
  %3699 = bitcast i64** %_DR4.i969 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3699)
  %3700 = bitcast i64** %_DR5.i970 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3700)
  %3701 = bitcast i64** %_DR6.i971 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3701)
  %3702 = bitcast i64** %_DR7.i972 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3702)
  %3703 = bitcast i64** %CR0.i973 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3703)
  %3704 = bitcast i64** %CR1.i974 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3704)
  %3705 = bitcast i64** %CR2.i975 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3705)
  %3706 = bitcast i64** %CR3.i976 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3706)
  %3707 = bitcast i64** %CR4.i977 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3707)
  %3708 = bitcast i64** %CR8.i978 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3708)
  %3709 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %3710 = load i64, i64* %RBP
  %3711 = sub i64 %3710, 144
  %3712 = load i64, i64* %PC
  %3713 = add i64 %3712, 8
  store i64 %3713, i64* %PC
  %3714 = inttoptr i64 %3711 to double*
  %3715 = load double, double* %3714
  %3716 = bitcast i8* %3709 to double*
  store double %3715, double* %3716, align 1, !tbaa !2451
  %3717 = getelementptr inbounds i8, i8* %3709, i64 8
  %3718 = bitcast i8* %3717 to double*
  store double 0.000000e+00, double* %3718, align 1, !tbaa !2451
  %3719 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %3720 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %3721 = load i64, i64* %RBP
  %3722 = sub i64 %3721, 152
  %3723 = load i64, i64* %PC
  %3724 = add i64 %3723, 8
  store i64 %3724, i64* %PC
  %3725 = bitcast i8* %3720 to double*
  %3726 = load double, double* %3725, align 1
  %3727 = getelementptr inbounds i8, i8* %3720, i64 8
  %3728 = bitcast i8* %3727 to i64*
  %3729 = load i64, i64* %3728, align 1
  %3730 = inttoptr i64 %3722 to double*
  %3731 = load double, double* %3730
  %3732 = fsub double %3726, %3731
  %3733 = bitcast i8* %3719 to double*
  store double %3732, double* %3733, align 1, !tbaa !2451
  %3734 = getelementptr inbounds i8, i8* %3719, i64 8
  %3735 = bitcast i8* %3734 to i64*
  store i64 %3729, i64* %3735, align 1, !tbaa !2451
  %3736 = load i64, i64* %RBP
  %3737 = sub i64 %3736, 264
  %3738 = bitcast %union.vec128_t* %XMM0 to i8*
  %3739 = load i64, i64* %PC
  %3740 = add i64 %3739, 8
  store i64 %3740, i64* %PC
  %3741 = bitcast i8* %3738 to double*
  %3742 = load double, double* %3741, align 1
  %3743 = inttoptr i64 %3737 to double*
  store double %3742, double* %3743
  %3744 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %3745 = bitcast %union.vec128_t* %XMM1 to i8*
  %3746 = load i64, i64* %PC
  %3747 = add i64 %3746, 3
  store i64 %3747, i64* %PC
  %3748 = bitcast i8* %3745 to <2 x i32>*
  %3749 = load <2 x i32>, <2 x i32>* %3748, align 1
  %3750 = getelementptr inbounds i8, i8* %3745, i64 8
  %3751 = bitcast i8* %3750 to <2 x i32>*
  %3752 = load <2 x i32>, <2 x i32>* %3751, align 1
  %3753 = extractelement <2 x i32> %3749, i32 0
  %3754 = bitcast i8* %3744 to i32*
  store i32 %3753, i32* %3754, align 1, !tbaa !2460
  %3755 = extractelement <2 x i32> %3749, i32 1
  %3756 = getelementptr inbounds i8, i8* %3744, i64 4
  %3757 = bitcast i8* %3756 to i32*
  store i32 %3755, i32* %3757, align 1, !tbaa !2460
  %3758 = extractelement <2 x i32> %3752, i32 0
  %3759 = getelementptr inbounds i8, i8* %3744, i64 8
  %3760 = bitcast i8* %3759 to i32*
  store i32 %3758, i32* %3760, align 1, !tbaa !2460
  %3761 = extractelement <2 x i32> %3752, i32 1
  %3762 = getelementptr inbounds i8, i8* %3744, i64 12
  %3763 = bitcast i8* %3762 to i32*
  store i32 %3761, i32* %3763, align 1, !tbaa !2460
  %3764 = load i64, i64* %PC
  %3765 = sub i64 %3764, 2530
  %3766 = load i64, i64* %PC
  %3767 = add i64 %3766, 5
  %3768 = load i64, i64* %PC
  %3769 = add i64 %3768, 5
  store i64 %3769, i64* %PC
  %3770 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3771 = load i64, i64* %3770, align 8, !tbaa !2428
  %3772 = add i64 %3771, -8
  %3773 = inttoptr i64 %3772 to i64*
  store i64 %3767, i64* %3773
  store i64 %3772, i64* %3770, align 8, !tbaa !2428
  %3774 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3765, i64* %3774, align 8, !tbaa !2428
  %3775 = load i64, i64* %PC
  %3776 = bitcast %struct.State** %state.i796 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3776)
  %3777 = bitcast i64* %curr_pc.i797 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3777)
  %3778 = bitcast %struct.Memory** %memory.i798 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3778)
  call void @llvm.lifetime.start(i64 1, i8* %BRANCH_TAKEN.i799)
  %3779 = bitcast i64* %SS_BASE.i800 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3779)
  %3780 = bitcast i64* %ES_BASE.i801 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3780)
  %3781 = bitcast i64* %DS_BASE.i802 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3781)
  %3782 = bitcast i64* %CS_BASE.i803 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3782)
  %3783 = bitcast %struct.State** %STATE.i804 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3783)
  %3784 = bitcast %struct.Memory** %MEMORY.i805 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3784)
  %3785 = bitcast i64** %_DR0.i806 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3785)
  %3786 = bitcast i64** %_DR1.i807 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3786)
  %3787 = bitcast i64** %_DR2.i808 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3787)
  %3788 = bitcast i64** %_DR3.i809 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3788)
  %3789 = bitcast i64** %_DR4.i810 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3789)
  %3790 = bitcast i64** %_DR5.i811 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3790)
  %3791 = bitcast i64** %_DR6.i812 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3791)
  %3792 = bitcast i64** %_DR7.i813 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3792)
  %3793 = bitcast i64** %CR0.i814 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3793)
  %3794 = bitcast i64** %CR1.i815 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3794)
  %3795 = bitcast i64** %CR2.i816 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3795)
  %3796 = bitcast i64** %CR3.i817 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3796)
  %3797 = bitcast i64** %CR4.i818 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3797)
  %3798 = bitcast i64** %CR8.i819 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3798)
  store %struct.State* %0, %struct.State** %state.i796, align 8, !noalias !2480
  store i64 %3775, i64* %curr_pc.i797, align 8, !noalias !2480
  store %struct.Memory* %3685, %struct.Memory** %memory.i798, align 8, !noalias !2480
  store i8 0, i8* %BRANCH_TAKEN.i799, align 1, !noalias !2480
  store i64 0, i64* %SS_BASE.i800, align 8, !noalias !2480
  store i64 0, i64* %ES_BASE.i801, align 8, !noalias !2480
  store i64 0, i64* %DS_BASE.i802, align 8, !noalias !2480
  store i64 0, i64* %CS_BASE.i803, align 8, !noalias !2480
  store %struct.State* %0, %struct.State** %STATE.i804, align 8, !noalias !2480
  store %struct.Memory* %3685, %struct.Memory** %MEMORY.i805, align 8, !noalias !2480
  %3799 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3800 = getelementptr inbounds %struct.GPR, %struct.GPR* %3799, i32 0, i32 33
  %3801 = getelementptr inbounds %struct.Reg, %struct.Reg* %3800, i32 0, i32 0
  %PC.i820 = bitcast %union.anon* %3801 to i64*
  store i64 %3775, i64* %PC.i820, align 8, !alias.scope !2484, !noalias !2485
  %3802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3803 = getelementptr inbounds %struct.GPR, %struct.GPR* %3802, i32 0, i32 1
  %3804 = getelementptr inbounds %struct.Reg, %struct.Reg* %3803, i32 0, i32 0
  %3805 = bitcast %union.anon* %3804 to %struct.anon.2*
  %AH.i821 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3805, i32 0, i32 1
  %3806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3807 = getelementptr inbounds %struct.GPR, %struct.GPR* %3806, i32 0, i32 3
  %3808 = getelementptr inbounds %struct.Reg, %struct.Reg* %3807, i32 0, i32 0
  %3809 = bitcast %union.anon* %3808 to %struct.anon.2*
  %BH.i822 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3809, i32 0, i32 1
  %3810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3811 = getelementptr inbounds %struct.GPR, %struct.GPR* %3810, i32 0, i32 5
  %3812 = getelementptr inbounds %struct.Reg, %struct.Reg* %3811, i32 0, i32 0
  %3813 = bitcast %union.anon* %3812 to %struct.anon.2*
  %CH.i823 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3813, i32 0, i32 1
  %3814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3815 = getelementptr inbounds %struct.GPR, %struct.GPR* %3814, i32 0, i32 7
  %3816 = getelementptr inbounds %struct.Reg, %struct.Reg* %3815, i32 0, i32 0
  %3817 = bitcast %union.anon* %3816 to %struct.anon.2*
  %DH.i824 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3817, i32 0, i32 1
  %3818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3819 = getelementptr inbounds %struct.GPR, %struct.GPR* %3818, i32 0, i32 1
  %3820 = getelementptr inbounds %struct.Reg, %struct.Reg* %3819, i32 0, i32 0
  %3821 = bitcast %union.anon* %3820 to %struct.anon.2*
  %AL.i825 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3821, i32 0, i32 0
  %3822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3823 = getelementptr inbounds %struct.GPR, %struct.GPR* %3822, i32 0, i32 3
  %3824 = getelementptr inbounds %struct.Reg, %struct.Reg* %3823, i32 0, i32 0
  %3825 = bitcast %union.anon* %3824 to %struct.anon.2*
  %BL.i826 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3825, i32 0, i32 0
  %3826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3827 = getelementptr inbounds %struct.GPR, %struct.GPR* %3826, i32 0, i32 5
  %3828 = getelementptr inbounds %struct.Reg, %struct.Reg* %3827, i32 0, i32 0
  %3829 = bitcast %union.anon* %3828 to %struct.anon.2*
  %CL.i827 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3829, i32 0, i32 0
  %3830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3831 = getelementptr inbounds %struct.GPR, %struct.GPR* %3830, i32 0, i32 7
  %3832 = getelementptr inbounds %struct.Reg, %struct.Reg* %3831, i32 0, i32 0
  %3833 = bitcast %union.anon* %3832 to %struct.anon.2*
  %DL.i828 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3833, i32 0, i32 0
  %3834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3835 = getelementptr inbounds %struct.GPR, %struct.GPR* %3834, i32 0, i32 9
  %3836 = getelementptr inbounds %struct.Reg, %struct.Reg* %3835, i32 0, i32 0
  %3837 = bitcast %union.anon* %3836 to %struct.anon.2*
  %SIL.i829 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3837, i32 0, i32 0
  %3838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3839 = getelementptr inbounds %struct.GPR, %struct.GPR* %3838, i32 0, i32 11
  %3840 = getelementptr inbounds %struct.Reg, %struct.Reg* %3839, i32 0, i32 0
  %3841 = bitcast %union.anon* %3840 to %struct.anon.2*
  %DIL.i830 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3841, i32 0, i32 0
  %3842 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3843 = getelementptr inbounds %struct.GPR, %struct.GPR* %3842, i32 0, i32 13
  %3844 = getelementptr inbounds %struct.Reg, %struct.Reg* %3843, i32 0, i32 0
  %3845 = bitcast %union.anon* %3844 to %struct.anon.2*
  %SPL.i831 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3845, i32 0, i32 0
  %3846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3847 = getelementptr inbounds %struct.GPR, %struct.GPR* %3846, i32 0, i32 15
  %3848 = getelementptr inbounds %struct.Reg, %struct.Reg* %3847, i32 0, i32 0
  %3849 = bitcast %union.anon* %3848 to %struct.anon.2*
  %BPL.i832 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3849, i32 0, i32 0
  %3850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3851 = getelementptr inbounds %struct.GPR, %struct.GPR* %3850, i32 0, i32 17
  %3852 = getelementptr inbounds %struct.Reg, %struct.Reg* %3851, i32 0, i32 0
  %3853 = bitcast %union.anon* %3852 to %struct.anon.2*
  %R8B.i833 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3853, i32 0, i32 0
  %3854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3855 = getelementptr inbounds %struct.GPR, %struct.GPR* %3854, i32 0, i32 19
  %3856 = getelementptr inbounds %struct.Reg, %struct.Reg* %3855, i32 0, i32 0
  %3857 = bitcast %union.anon* %3856 to %struct.anon.2*
  %R9B.i834 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3857, i32 0, i32 0
  %3858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3859 = getelementptr inbounds %struct.GPR, %struct.GPR* %3858, i32 0, i32 21
  %3860 = getelementptr inbounds %struct.Reg, %struct.Reg* %3859, i32 0, i32 0
  %3861 = bitcast %union.anon* %3860 to %struct.anon.2*
  %R10B.i835 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3861, i32 0, i32 0
  %3862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3863 = getelementptr inbounds %struct.GPR, %struct.GPR* %3862, i32 0, i32 23
  %3864 = getelementptr inbounds %struct.Reg, %struct.Reg* %3863, i32 0, i32 0
  %3865 = bitcast %union.anon* %3864 to %struct.anon.2*
  %R11B.i836 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3865, i32 0, i32 0
  %3866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3867 = getelementptr inbounds %struct.GPR, %struct.GPR* %3866, i32 0, i32 25
  %3868 = getelementptr inbounds %struct.Reg, %struct.Reg* %3867, i32 0, i32 0
  %3869 = bitcast %union.anon* %3868 to %struct.anon.2*
  %R12B.i837 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3869, i32 0, i32 0
  %3870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3871 = getelementptr inbounds %struct.GPR, %struct.GPR* %3870, i32 0, i32 27
  %3872 = getelementptr inbounds %struct.Reg, %struct.Reg* %3871, i32 0, i32 0
  %3873 = bitcast %union.anon* %3872 to %struct.anon.2*
  %R13B.i838 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3873, i32 0, i32 0
  %3874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3875 = getelementptr inbounds %struct.GPR, %struct.GPR* %3874, i32 0, i32 29
  %3876 = getelementptr inbounds %struct.Reg, %struct.Reg* %3875, i32 0, i32 0
  %3877 = bitcast %union.anon* %3876 to %struct.anon.2*
  %R14B.i839 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3877, i32 0, i32 0
  %3878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3879 = getelementptr inbounds %struct.GPR, %struct.GPR* %3878, i32 0, i32 31
  %3880 = getelementptr inbounds %struct.Reg, %struct.Reg* %3879, i32 0, i32 0
  %3881 = bitcast %union.anon* %3880 to %struct.anon.2*
  %R15B.i840 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3881, i32 0, i32 0
  %3882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3883 = getelementptr inbounds %struct.GPR, %struct.GPR* %3882, i32 0, i32 1
  %3884 = getelementptr inbounds %struct.Reg, %struct.Reg* %3883, i32 0, i32 0
  %AX.i841 = bitcast %union.anon* %3884 to i16*
  %3885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3886 = getelementptr inbounds %struct.GPR, %struct.GPR* %3885, i32 0, i32 3
  %3887 = getelementptr inbounds %struct.Reg, %struct.Reg* %3886, i32 0, i32 0
  %BX.i842 = bitcast %union.anon* %3887 to i16*
  %3888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3889 = getelementptr inbounds %struct.GPR, %struct.GPR* %3888, i32 0, i32 5
  %3890 = getelementptr inbounds %struct.Reg, %struct.Reg* %3889, i32 0, i32 0
  %CX.i843 = bitcast %union.anon* %3890 to i16*
  %3891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3892 = getelementptr inbounds %struct.GPR, %struct.GPR* %3891, i32 0, i32 7
  %3893 = getelementptr inbounds %struct.Reg, %struct.Reg* %3892, i32 0, i32 0
  %DX.i844 = bitcast %union.anon* %3893 to i16*
  %3894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3895 = getelementptr inbounds %struct.GPR, %struct.GPR* %3894, i32 0, i32 9
  %3896 = getelementptr inbounds %struct.Reg, %struct.Reg* %3895, i32 0, i32 0
  %SI.i845 = bitcast %union.anon* %3896 to i16*
  %3897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3898 = getelementptr inbounds %struct.GPR, %struct.GPR* %3897, i32 0, i32 11
  %3899 = getelementptr inbounds %struct.Reg, %struct.Reg* %3898, i32 0, i32 0
  %DI.i846 = bitcast %union.anon* %3899 to i16*
  %3900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3901 = getelementptr inbounds %struct.GPR, %struct.GPR* %3900, i32 0, i32 13
  %3902 = getelementptr inbounds %struct.Reg, %struct.Reg* %3901, i32 0, i32 0
  %SP.i847 = bitcast %union.anon* %3902 to i16*
  %3903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3904 = getelementptr inbounds %struct.GPR, %struct.GPR* %3903, i32 0, i32 15
  %3905 = getelementptr inbounds %struct.Reg, %struct.Reg* %3904, i32 0, i32 0
  %BP.i848 = bitcast %union.anon* %3905 to i16*
  %3906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3907 = getelementptr inbounds %struct.GPR, %struct.GPR* %3906, i32 0, i32 17
  %3908 = getelementptr inbounds %struct.Reg, %struct.Reg* %3907, i32 0, i32 0
  %R8W.i849 = bitcast %union.anon* %3908 to i16*
  %3909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3910 = getelementptr inbounds %struct.GPR, %struct.GPR* %3909, i32 0, i32 19
  %3911 = getelementptr inbounds %struct.Reg, %struct.Reg* %3910, i32 0, i32 0
  %R9W.i850 = bitcast %union.anon* %3911 to i16*
  %3912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3913 = getelementptr inbounds %struct.GPR, %struct.GPR* %3912, i32 0, i32 21
  %3914 = getelementptr inbounds %struct.Reg, %struct.Reg* %3913, i32 0, i32 0
  %R10W.i851 = bitcast %union.anon* %3914 to i16*
  %3915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3916 = getelementptr inbounds %struct.GPR, %struct.GPR* %3915, i32 0, i32 23
  %3917 = getelementptr inbounds %struct.Reg, %struct.Reg* %3916, i32 0, i32 0
  %R11W.i852 = bitcast %union.anon* %3917 to i16*
  %3918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3919 = getelementptr inbounds %struct.GPR, %struct.GPR* %3918, i32 0, i32 25
  %3920 = getelementptr inbounds %struct.Reg, %struct.Reg* %3919, i32 0, i32 0
  %R12W.i853 = bitcast %union.anon* %3920 to i16*
  %3921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3922 = getelementptr inbounds %struct.GPR, %struct.GPR* %3921, i32 0, i32 27
  %3923 = getelementptr inbounds %struct.Reg, %struct.Reg* %3922, i32 0, i32 0
  %R13W.i854 = bitcast %union.anon* %3923 to i16*
  %3924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3925 = getelementptr inbounds %struct.GPR, %struct.GPR* %3924, i32 0, i32 29
  %3926 = getelementptr inbounds %struct.Reg, %struct.Reg* %3925, i32 0, i32 0
  %R14W.i855 = bitcast %union.anon* %3926 to i16*
  %3927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3928 = getelementptr inbounds %struct.GPR, %struct.GPR* %3927, i32 0, i32 31
  %3929 = getelementptr inbounds %struct.Reg, %struct.Reg* %3928, i32 0, i32 0
  %R15W.i856 = bitcast %union.anon* %3929 to i16*
  %3930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3931 = getelementptr inbounds %struct.GPR, %struct.GPR* %3930, i32 0, i32 33
  %3932 = getelementptr inbounds %struct.Reg, %struct.Reg* %3931, i32 0, i32 0
  %IP.i857 = bitcast %union.anon* %3932 to i16*
  %3933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3934 = getelementptr inbounds %struct.GPR, %struct.GPR* %3933, i32 0, i32 1
  %3935 = getelementptr inbounds %struct.Reg, %struct.Reg* %3934, i32 0, i32 0
  %EAX.i858 = bitcast %union.anon* %3935 to i32*
  %3936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3937 = getelementptr inbounds %struct.GPR, %struct.GPR* %3936, i32 0, i32 3
  %3938 = getelementptr inbounds %struct.Reg, %struct.Reg* %3937, i32 0, i32 0
  %EBX.i859 = bitcast %union.anon* %3938 to i32*
  %3939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3940 = getelementptr inbounds %struct.GPR, %struct.GPR* %3939, i32 0, i32 5
  %3941 = getelementptr inbounds %struct.Reg, %struct.Reg* %3940, i32 0, i32 0
  %ECX.i860 = bitcast %union.anon* %3941 to i32*
  %3942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3943 = getelementptr inbounds %struct.GPR, %struct.GPR* %3942, i32 0, i32 7
  %3944 = getelementptr inbounds %struct.Reg, %struct.Reg* %3943, i32 0, i32 0
  %EDX.i861 = bitcast %union.anon* %3944 to i32*
  %3945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3946 = getelementptr inbounds %struct.GPR, %struct.GPR* %3945, i32 0, i32 9
  %3947 = getelementptr inbounds %struct.Reg, %struct.Reg* %3946, i32 0, i32 0
  %ESI.i862 = bitcast %union.anon* %3947 to i32*
  %3948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3949 = getelementptr inbounds %struct.GPR, %struct.GPR* %3948, i32 0, i32 11
  %3950 = getelementptr inbounds %struct.Reg, %struct.Reg* %3949, i32 0, i32 0
  %EDI.i863 = bitcast %union.anon* %3950 to i32*
  %3951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3952 = getelementptr inbounds %struct.GPR, %struct.GPR* %3951, i32 0, i32 13
  %3953 = getelementptr inbounds %struct.Reg, %struct.Reg* %3952, i32 0, i32 0
  %ESP.i864 = bitcast %union.anon* %3953 to i32*
  %3954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3955 = getelementptr inbounds %struct.GPR, %struct.GPR* %3954, i32 0, i32 15
  %3956 = getelementptr inbounds %struct.Reg, %struct.Reg* %3955, i32 0, i32 0
  %EBP.i865 = bitcast %union.anon* %3956 to i32*
  %3957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3958 = getelementptr inbounds %struct.GPR, %struct.GPR* %3957, i32 0, i32 33
  %3959 = getelementptr inbounds %struct.Reg, %struct.Reg* %3958, i32 0, i32 0
  %EIP.i866 = bitcast %union.anon* %3959 to i32*
  %3960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3961 = getelementptr inbounds %struct.GPR, %struct.GPR* %3960, i32 0, i32 17
  %3962 = getelementptr inbounds %struct.Reg, %struct.Reg* %3961, i32 0, i32 0
  %R8D.i867 = bitcast %union.anon* %3962 to i32*
  %3963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3964 = getelementptr inbounds %struct.GPR, %struct.GPR* %3963, i32 0, i32 19
  %3965 = getelementptr inbounds %struct.Reg, %struct.Reg* %3964, i32 0, i32 0
  %R9D.i868 = bitcast %union.anon* %3965 to i32*
  %3966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3967 = getelementptr inbounds %struct.GPR, %struct.GPR* %3966, i32 0, i32 21
  %3968 = getelementptr inbounds %struct.Reg, %struct.Reg* %3967, i32 0, i32 0
  %R10D.i869 = bitcast %union.anon* %3968 to i32*
  %3969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3970 = getelementptr inbounds %struct.GPR, %struct.GPR* %3969, i32 0, i32 23
  %3971 = getelementptr inbounds %struct.Reg, %struct.Reg* %3970, i32 0, i32 0
  %R11D.i870 = bitcast %union.anon* %3971 to i32*
  %3972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3973 = getelementptr inbounds %struct.GPR, %struct.GPR* %3972, i32 0, i32 25
  %3974 = getelementptr inbounds %struct.Reg, %struct.Reg* %3973, i32 0, i32 0
  %R12D.i871 = bitcast %union.anon* %3974 to i32*
  %3975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3976 = getelementptr inbounds %struct.GPR, %struct.GPR* %3975, i32 0, i32 27
  %3977 = getelementptr inbounds %struct.Reg, %struct.Reg* %3976, i32 0, i32 0
  %R13D.i872 = bitcast %union.anon* %3977 to i32*
  %3978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3979 = getelementptr inbounds %struct.GPR, %struct.GPR* %3978, i32 0, i32 29
  %3980 = getelementptr inbounds %struct.Reg, %struct.Reg* %3979, i32 0, i32 0
  %R14D.i873 = bitcast %union.anon* %3980 to i32*
  %3981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3982 = getelementptr inbounds %struct.GPR, %struct.GPR* %3981, i32 0, i32 31
  %3983 = getelementptr inbounds %struct.Reg, %struct.Reg* %3982, i32 0, i32 0
  %R15D.i874 = bitcast %union.anon* %3983 to i32*
  %3984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3985 = getelementptr inbounds %struct.GPR, %struct.GPR* %3984, i32 0, i32 1
  %3986 = getelementptr inbounds %struct.Reg, %struct.Reg* %3985, i32 0, i32 0
  %RAX.i875 = bitcast %union.anon* %3986 to i64*
  %3987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3988 = getelementptr inbounds %struct.GPR, %struct.GPR* %3987, i32 0, i32 3
  %3989 = getelementptr inbounds %struct.Reg, %struct.Reg* %3988, i32 0, i32 0
  %RBX.i876 = bitcast %union.anon* %3989 to i64*
  %3990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3991 = getelementptr inbounds %struct.GPR, %struct.GPR* %3990, i32 0, i32 5
  %3992 = getelementptr inbounds %struct.Reg, %struct.Reg* %3991, i32 0, i32 0
  %RCX.i877 = bitcast %union.anon* %3992 to i64*
  %3993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3994 = getelementptr inbounds %struct.GPR, %struct.GPR* %3993, i32 0, i32 7
  %3995 = getelementptr inbounds %struct.Reg, %struct.Reg* %3994, i32 0, i32 0
  %RDX.i878 = bitcast %union.anon* %3995 to i64*
  %3996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3997 = getelementptr inbounds %struct.GPR, %struct.GPR* %3996, i32 0, i32 9
  %3998 = getelementptr inbounds %struct.Reg, %struct.Reg* %3997, i32 0, i32 0
  %RSI.i879 = bitcast %union.anon* %3998 to i64*
  %3999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4000 = getelementptr inbounds %struct.GPR, %struct.GPR* %3999, i32 0, i32 11
  %4001 = getelementptr inbounds %struct.Reg, %struct.Reg* %4000, i32 0, i32 0
  %RDI.i880 = bitcast %union.anon* %4001 to i64*
  %4002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4003 = getelementptr inbounds %struct.GPR, %struct.GPR* %4002, i32 0, i32 13
  %4004 = getelementptr inbounds %struct.Reg, %struct.Reg* %4003, i32 0, i32 0
  %RSP.i881 = bitcast %union.anon* %4004 to i64*
  %4005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4006 = getelementptr inbounds %struct.GPR, %struct.GPR* %4005, i32 0, i32 15
  %4007 = getelementptr inbounds %struct.Reg, %struct.Reg* %4006, i32 0, i32 0
  %RBP.i882 = bitcast %union.anon* %4007 to i64*
  %4008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4009 = getelementptr inbounds %struct.GPR, %struct.GPR* %4008, i32 0, i32 17
  %4010 = getelementptr inbounds %struct.Reg, %struct.Reg* %4009, i32 0, i32 0
  %R8.i883 = bitcast %union.anon* %4010 to i64*
  %4011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4012 = getelementptr inbounds %struct.GPR, %struct.GPR* %4011, i32 0, i32 19
  %4013 = getelementptr inbounds %struct.Reg, %struct.Reg* %4012, i32 0, i32 0
  %R9.i884 = bitcast %union.anon* %4013 to i64*
  %4014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4015 = getelementptr inbounds %struct.GPR, %struct.GPR* %4014, i32 0, i32 21
  %4016 = getelementptr inbounds %struct.Reg, %struct.Reg* %4015, i32 0, i32 0
  %R10.i885 = bitcast %union.anon* %4016 to i64*
  %4017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4018 = getelementptr inbounds %struct.GPR, %struct.GPR* %4017, i32 0, i32 23
  %4019 = getelementptr inbounds %struct.Reg, %struct.Reg* %4018, i32 0, i32 0
  %R11.i886 = bitcast %union.anon* %4019 to i64*
  %4020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4021 = getelementptr inbounds %struct.GPR, %struct.GPR* %4020, i32 0, i32 25
  %4022 = getelementptr inbounds %struct.Reg, %struct.Reg* %4021, i32 0, i32 0
  %R12.i887 = bitcast %union.anon* %4022 to i64*
  %4023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4024 = getelementptr inbounds %struct.GPR, %struct.GPR* %4023, i32 0, i32 27
  %4025 = getelementptr inbounds %struct.Reg, %struct.Reg* %4024, i32 0, i32 0
  %R13.i888 = bitcast %union.anon* %4025 to i64*
  %4026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4027 = getelementptr inbounds %struct.GPR, %struct.GPR* %4026, i32 0, i32 29
  %4028 = getelementptr inbounds %struct.Reg, %struct.Reg* %4027, i32 0, i32 0
  %R14.i889 = bitcast %union.anon* %4028 to i64*
  %4029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4030 = getelementptr inbounds %struct.GPR, %struct.GPR* %4029, i32 0, i32 31
  %4031 = getelementptr inbounds %struct.Reg, %struct.Reg* %4030, i32 0, i32 0
  %R15.i890 = bitcast %union.anon* %4031 to i64*
  %4032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4033 = getelementptr inbounds %struct.GPR, %struct.GPR* %4032, i32 0, i32 33
  %4034 = getelementptr inbounds %struct.Reg, %struct.Reg* %4033, i32 0, i32 0
  %RIP.i891 = bitcast %union.anon* %4034 to i64*
  %4035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %4036 = getelementptr inbounds %struct.Segments, %struct.Segments* %4035, i32 0, i32 1
  %SS.i892 = bitcast %union.SegmentSelector* %4036 to i16*
  %4037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %4038 = getelementptr inbounds %struct.Segments, %struct.Segments* %4037, i32 0, i32 3
  %ES.i893 = bitcast %union.SegmentSelector* %4038 to i16*
  %4039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %4040 = getelementptr inbounds %struct.Segments, %struct.Segments* %4039, i32 0, i32 5
  %GS.i894 = bitcast %union.SegmentSelector* %4040 to i16*
  %4041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %4042 = getelementptr inbounds %struct.Segments, %struct.Segments* %4041, i32 0, i32 7
  %FS.i895 = bitcast %union.SegmentSelector* %4042 to i16*
  %4043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %4044 = getelementptr inbounds %struct.Segments, %struct.Segments* %4043, i32 0, i32 9
  %DS.i896 = bitcast %union.SegmentSelector* %4044 to i16*
  %4045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %4046 = getelementptr inbounds %struct.Segments, %struct.Segments* %4045, i32 0, i32 11
  %CS.i897 = bitcast %union.SegmentSelector* %4046 to i16*
  %4047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %4048 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %4047, i32 0, i32 5
  %4049 = getelementptr inbounds %struct.Reg, %struct.Reg* %4048, i32 0, i32 0
  %GS_BASE.i898 = bitcast %union.anon* %4049 to i64*
  %4050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %4051 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %4050, i32 0, i32 7
  %4052 = getelementptr inbounds %struct.Reg, %struct.Reg* %4051, i32 0, i32 0
  %FS_BASE.i899 = bitcast %union.anon* %4052 to i64*
  %4053 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4054 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4053, i64 0, i64 0
  %YMM0.i900 = bitcast %union.VectorReg* %4054 to %"class.std::bitset"*
  %4055 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4056 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4055, i64 0, i64 1
  %YMM1.i901 = bitcast %union.VectorReg* %4056 to %"class.std::bitset"*
  %4057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4058 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4057, i64 0, i64 2
  %YMM2.i902 = bitcast %union.VectorReg* %4058 to %"class.std::bitset"*
  %4059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4060 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4059, i64 0, i64 3
  %YMM3.i903 = bitcast %union.VectorReg* %4060 to %"class.std::bitset"*
  %4061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4062 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4061, i64 0, i64 4
  %YMM4.i904 = bitcast %union.VectorReg* %4062 to %"class.std::bitset"*
  %4063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4064 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4063, i64 0, i64 5
  %YMM5.i905 = bitcast %union.VectorReg* %4064 to %"class.std::bitset"*
  %4065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4066 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4065, i64 0, i64 6
  %YMM6.i906 = bitcast %union.VectorReg* %4066 to %"class.std::bitset"*
  %4067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4068 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4067, i64 0, i64 7
  %YMM7.i907 = bitcast %union.VectorReg* %4068 to %"class.std::bitset"*
  %4069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4070 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4069, i64 0, i64 8
  %YMM8.i908 = bitcast %union.VectorReg* %4070 to %"class.std::bitset"*
  %4071 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4072 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4071, i64 0, i64 9
  %YMM9.i909 = bitcast %union.VectorReg* %4072 to %"class.std::bitset"*
  %4073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4074 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4073, i64 0, i64 10
  %YMM10.i910 = bitcast %union.VectorReg* %4074 to %"class.std::bitset"*
  %4075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4076 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4075, i64 0, i64 11
  %YMM11.i911 = bitcast %union.VectorReg* %4076 to %"class.std::bitset"*
  %4077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4078 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4077, i64 0, i64 12
  %YMM12.i912 = bitcast %union.VectorReg* %4078 to %"class.std::bitset"*
  %4079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4080 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4079, i64 0, i64 13
  %YMM13.i913 = bitcast %union.VectorReg* %4080 to %"class.std::bitset"*
  %4081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4082 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4081, i64 0, i64 14
  %YMM14.i914 = bitcast %union.VectorReg* %4082 to %"class.std::bitset"*
  %4083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4084 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4083, i64 0, i64 15
  %YMM15.i915 = bitcast %union.VectorReg* %4084 to %"class.std::bitset"*
  %4085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4086 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4085, i64 0, i64 0
  %XMM0.i916 = bitcast %union.VectorReg* %4086 to %union.vec128_t*
  %4087 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4088 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4087, i64 0, i64 1
  %XMM1.i917 = bitcast %union.VectorReg* %4088 to %union.vec128_t*
  %4089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4090 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4089, i64 0, i64 2
  %XMM2.i918 = bitcast %union.VectorReg* %4090 to %union.vec128_t*
  %4091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4092 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4091, i64 0, i64 3
  %XMM3.i919 = bitcast %union.VectorReg* %4092 to %union.vec128_t*
  %4093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4094 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4093, i64 0, i64 4
  %XMM4.i920 = bitcast %union.VectorReg* %4094 to %union.vec128_t*
  %4095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4096 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4095, i64 0, i64 5
  %XMM5.i921 = bitcast %union.VectorReg* %4096 to %union.vec128_t*
  %4097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4098 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4097, i64 0, i64 6
  %XMM6.i922 = bitcast %union.VectorReg* %4098 to %union.vec128_t*
  %4099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4100 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4099, i64 0, i64 7
  %XMM7.i923 = bitcast %union.VectorReg* %4100 to %union.vec128_t*
  %4101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4102 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4101, i64 0, i64 8
  %XMM8.i924 = bitcast %union.VectorReg* %4102 to %union.vec128_t*
  %4103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4104 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4103, i64 0, i64 9
  %XMM9.i925 = bitcast %union.VectorReg* %4104 to %union.vec128_t*
  %4105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4106 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4105, i64 0, i64 10
  %XMM10.i926 = bitcast %union.VectorReg* %4106 to %union.vec128_t*
  %4107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4108 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4107, i64 0, i64 11
  %XMM11.i927 = bitcast %union.VectorReg* %4108 to %union.vec128_t*
  %4109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4110 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4109, i64 0, i64 12
  %XMM12.i928 = bitcast %union.VectorReg* %4110 to %union.vec128_t*
  %4111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4112 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4111, i64 0, i64 13
  %XMM13.i929 = bitcast %union.VectorReg* %4112 to %union.vec128_t*
  %4113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4114 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4113, i64 0, i64 14
  %XMM14.i930 = bitcast %union.VectorReg* %4114 to %union.vec128_t*
  %4115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4116 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4115, i64 0, i64 15
  %XMM15.i931 = bitcast %union.VectorReg* %4116 to %union.vec128_t*
  %4117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %4118 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %4117, i32 0, i32 0
  %4119 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %4118, i64 0, i64 0
  %ST0.i932 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %4119, i32 0, i32 1
  %4120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %4121 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %4120, i32 0, i32 0
  %4122 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %4121, i64 0, i64 1
  %ST1.i933 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %4122, i32 0, i32 1
  %4123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %4124 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %4123, i32 0, i32 0
  %4125 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %4124, i64 0, i64 2
  %ST2.i934 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %4125, i32 0, i32 1
  %4126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %4127 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %4126, i32 0, i32 0
  %4128 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %4127, i64 0, i64 3
  %ST3.i935 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %4128, i32 0, i32 1
  %4129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %4130 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %4129, i32 0, i32 0
  %4131 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %4130, i64 0, i64 4
  %ST4.i936 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %4131, i32 0, i32 1
  %4132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %4133 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %4132, i32 0, i32 0
  %4134 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %4133, i64 0, i64 5
  %ST5.i937 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %4134, i32 0, i32 1
  %4135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %4136 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %4135, i32 0, i32 0
  %4137 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %4136, i64 0, i64 6
  %ST6.i938 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %4137, i32 0, i32 1
  %4138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %4139 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %4138, i32 0, i32 0
  %4140 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %4139, i64 0, i64 7
  %ST7.i939 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %4140, i32 0, i32 1
  %4141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %4142 = getelementptr inbounds %struct.MMX, %struct.MMX* %4141, i32 0, i32 0
  %4143 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %4142, i64 0, i64 0
  %4144 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %4143, i32 0, i32 1
  %4145 = bitcast %union.vec64_t* %4144 to %struct.uint64v1_t*
  %4146 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %4145, i32 0, i32 0
  %MM0.i940 = getelementptr inbounds [1 x i64], [1 x i64]* %4146, i64 0, i64 0
  %4147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %4148 = getelementptr inbounds %struct.MMX, %struct.MMX* %4147, i32 0, i32 0
  %4149 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %4148, i64 0, i64 1
  %4150 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %4149, i32 0, i32 1
  %4151 = bitcast %union.vec64_t* %4150 to %struct.uint64v1_t*
  %4152 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %4151, i32 0, i32 0
  %MM1.i941 = getelementptr inbounds [1 x i64], [1 x i64]* %4152, i64 0, i64 0
  %4153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %4154 = getelementptr inbounds %struct.MMX, %struct.MMX* %4153, i32 0, i32 0
  %4155 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %4154, i64 0, i64 2
  %4156 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %4155, i32 0, i32 1
  %4157 = bitcast %union.vec64_t* %4156 to %struct.uint64v1_t*
  %4158 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %4157, i32 0, i32 0
  %MM2.i942 = getelementptr inbounds [1 x i64], [1 x i64]* %4158, i64 0, i64 0
  %4159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %4160 = getelementptr inbounds %struct.MMX, %struct.MMX* %4159, i32 0, i32 0
  %4161 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %4160, i64 0, i64 3
  %4162 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %4161, i32 0, i32 1
  %4163 = bitcast %union.vec64_t* %4162 to %struct.uint64v1_t*
  %4164 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %4163, i32 0, i32 0
  %MM3.i943 = getelementptr inbounds [1 x i64], [1 x i64]* %4164, i64 0, i64 0
  %4165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %4166 = getelementptr inbounds %struct.MMX, %struct.MMX* %4165, i32 0, i32 0
  %4167 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %4166, i64 0, i64 4
  %4168 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %4167, i32 0, i32 1
  %4169 = bitcast %union.vec64_t* %4168 to %struct.uint64v1_t*
  %4170 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %4169, i32 0, i32 0
  %MM4.i944 = getelementptr inbounds [1 x i64], [1 x i64]* %4170, i64 0, i64 0
  %4171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %4172 = getelementptr inbounds %struct.MMX, %struct.MMX* %4171, i32 0, i32 0
  %4173 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %4172, i64 0, i64 5
  %4174 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %4173, i32 0, i32 1
  %4175 = bitcast %union.vec64_t* %4174 to %struct.uint64v1_t*
  %4176 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %4175, i32 0, i32 0
  %MM5.i945 = getelementptr inbounds [1 x i64], [1 x i64]* %4176, i64 0, i64 0
  %4177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %4178 = getelementptr inbounds %struct.MMX, %struct.MMX* %4177, i32 0, i32 0
  %4179 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %4178, i64 0, i64 6
  %4180 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %4179, i32 0, i32 1
  %4181 = bitcast %union.vec64_t* %4180 to %struct.uint64v1_t*
  %4182 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %4181, i32 0, i32 0
  %MM6.i946 = getelementptr inbounds [1 x i64], [1 x i64]* %4182, i64 0, i64 0
  %4183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %4184 = getelementptr inbounds %struct.MMX, %struct.MMX* %4183, i32 0, i32 0
  %4185 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %4184, i64 0, i64 7
  %4186 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %4185, i32 0, i32 1
  %4187 = bitcast %union.vec64_t* %4186 to %struct.uint64v1_t*
  %4188 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %4187, i32 0, i32 0
  %MM7.i947 = getelementptr inbounds [1 x i64], [1 x i64]* %4188, i64 0, i64 0
  %4189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF.i948 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %4189, i32 0, i32 5
  %4190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF.i949 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %4190, i32 0, i32 1
  %4191 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF.i950 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %4191, i32 0, i32 11
  %4192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF.i951 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %4192, i32 0, i32 13
  %4193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF.i952 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %4193, i32 0, i32 3
  %4194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF.i953 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %4194, i32 0, i32 9
  %4195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF.i954 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %4195, i32 0, i32 7
  store i64* @DR0, i64** %_DR0.i806, align 8, !noalias !2480
  store i64* @DR1, i64** %_DR1.i807, align 8, !noalias !2480
  store i64* @DR2, i64** %_DR2.i808, align 8, !noalias !2480
  store i64* @DR3, i64** %_DR3.i809, align 8, !noalias !2480
  store i64* @DR4, i64** %_DR4.i810, align 8, !noalias !2480
  store i64* @DR5, i64** %_DR5.i811, align 8, !noalias !2480
  store i64* @DR6, i64** %_DR6.i812, align 8, !noalias !2480
  store i64* @DR7, i64** %_DR7.i813, align 8, !noalias !2480
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0.i814, align 8, !noalias !2480
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1.i815, align 8, !noalias !2480
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2.i816, align 8, !noalias !2480
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3.i817, align 8, !noalias !2480
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4.i818, align 8, !noalias !2480
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8.i819, align 8, !noalias !2480
  %4196 = bitcast %"class.std::bitset"* %YMM0.i900 to double*
  %4197 = load double, double* %4196, !alias.scope !2484, !noalias !2485
  %4198 = load i64, i64* %RSP.i881, !alias.scope !2484, !noalias !2485
  %4199 = load %struct.Memory*, %struct.Memory** %MEMORY.i805, !noalias !2480
  %4200 = inttoptr i64 %4198 to i64*
  %4201 = load i64, i64* %4200
  store i64 %4201, i64* %PC.i820, !alias.scope !2484, !noalias !2485
  %4202 = add i64 %4198, 8
  store i64 %4202, i64* %RSP.i881, !alias.scope !2484, !noalias !2485
  %4203 = call double @cos(double %4197)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0.i900, !alias.scope !2484, !noalias !2485
  %4204 = bitcast %"class.std::bitset"* %YMM0.i900 to double*
  store double %4203, double* %4204, !alias.scope !2484, !noalias !2485
  %4205 = load %struct.Memory*, %struct.Memory** %MEMORY.i805, !noalias !2480
  %4206 = bitcast %struct.State** %state.i796 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4206)
  %4207 = bitcast i64* %curr_pc.i797 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4207)
  %4208 = bitcast %struct.Memory** %memory.i798 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4208)
  call void @llvm.lifetime.end(i64 1, i8* %BRANCH_TAKEN.i799)
  %4209 = bitcast i64* %SS_BASE.i800 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4209)
  %4210 = bitcast i64* %ES_BASE.i801 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4210)
  %4211 = bitcast i64* %DS_BASE.i802 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4211)
  %4212 = bitcast i64* %CS_BASE.i803 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4212)
  %4213 = bitcast %struct.State** %STATE.i804 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4213)
  %4214 = bitcast %struct.Memory** %MEMORY.i805 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4214)
  %4215 = bitcast i64** %_DR0.i806 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4215)
  %4216 = bitcast i64** %_DR1.i807 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4216)
  %4217 = bitcast i64** %_DR2.i808 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4217)
  %4218 = bitcast i64** %_DR3.i809 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4218)
  %4219 = bitcast i64** %_DR4.i810 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4219)
  %4220 = bitcast i64** %_DR5.i811 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4220)
  %4221 = bitcast i64** %_DR6.i812 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4221)
  %4222 = bitcast i64** %_DR7.i813 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4222)
  %4223 = bitcast i64** %CR0.i814 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4223)
  %4224 = bitcast i64** %CR1.i815 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4224)
  %4225 = bitcast i64** %CR2.i816 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4225)
  %4226 = bitcast i64** %CR3.i817 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4226)
  %4227 = bitcast i64** %CR4.i818 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4227)
  %4228 = bitcast i64** %CR8.i819 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4228)
  %4229 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %4230 = load i64, i64* %RBP
  %4231 = sub i64 %4230, 264
  %4232 = load i64, i64* %PC
  %4233 = add i64 %4232, 8
  store i64 %4233, i64* %PC
  %4234 = inttoptr i64 %4231 to double*
  %4235 = load double, double* %4234
  %4236 = bitcast i8* %4229 to double*
  store double %4235, double* %4236, align 1, !tbaa !2451
  %4237 = getelementptr inbounds i8, i8* %4229, i64 8
  %4238 = bitcast i8* %4237 to double*
  store double 0.000000e+00, double* %4238, align 1, !tbaa !2451
  %4239 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %4240 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %4241 = bitcast %union.vec128_t* %XMM0 to i8*
  %4242 = load i64, i64* %PC
  %4243 = add i64 %4242, 4
  store i64 %4243, i64* %PC
  %4244 = bitcast i8* %4240 to double*
  %4245 = load double, double* %4244, align 1
  %4246 = getelementptr inbounds i8, i8* %4240, i64 8
  %4247 = bitcast i8* %4246 to i64*
  %4248 = load i64, i64* %4247, align 1
  %4249 = bitcast i8* %4241 to double*
  %4250 = load double, double* %4249, align 1
  %4251 = fadd double %4245, %4250
  %4252 = bitcast i8* %4239 to double*
  store double %4251, double* %4252, align 1, !tbaa !2451
  %4253 = getelementptr inbounds i8, i8* %4239, i64 8
  %4254 = bitcast i8* %4253 to i64*
  store i64 %4248, i64* %4254, align 1, !tbaa !2451
  %4255 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4256 = load i64, i64* %RBP
  %4257 = sub i64 %4256, 224
  %4258 = load i64, i64* %PC
  %4259 = add i64 %4258, 8
  store i64 %4259, i64* %PC
  %4260 = inttoptr i64 %4257 to double*
  %4261 = load double, double* %4260
  %4262 = bitcast i8* %4255 to double*
  store double %4261, double* %4262, align 1, !tbaa !2451
  %4263 = getelementptr inbounds i8, i8* %4255, i64 8
  %4264 = bitcast i8* %4263 to double*
  store double 0.000000e+00, double* %4264, align 1, !tbaa !2451
  %4265 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %4266 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %4267 = bitcast %union.vec128_t* %XMM0 to i8*
  %4268 = load i64, i64* %PC
  %4269 = add i64 %4268, 4
  store i64 %4269, i64* %PC
  %4270 = bitcast i8* %4266 to double*
  %4271 = load double, double* %4270, align 1
  %4272 = getelementptr inbounds i8, i8* %4266, i64 8
  %4273 = bitcast i8* %4272 to i64*
  %4274 = load i64, i64* %4273, align 1
  %4275 = bitcast i8* %4267 to double*
  %4276 = load double, double* %4275, align 1
  %4277 = fsub double %4271, %4276
  %4278 = bitcast i8* %4265 to double*
  store double %4277, double* %4278, align 1, !tbaa !2451
  %4279 = getelementptr inbounds i8, i8* %4265, i64 8
  %4280 = bitcast i8* %4279 to i64*
  store i64 %4274, i64* %4280, align 1, !tbaa !2451
  %4281 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %4282 = load i64, i64* %RBP
  %4283 = sub i64 %4282, 256
  %4284 = load i64, i64* %PC
  %4285 = add i64 %4284, 8
  store i64 %4285, i64* %PC
  %4286 = inttoptr i64 %4283 to double*
  %4287 = load double, double* %4286
  %4288 = bitcast i8* %4281 to double*
  store double %4287, double* %4288, align 1, !tbaa !2451
  %4289 = getelementptr inbounds i8, i8* %4281, i64 8
  %4290 = bitcast i8* %4289 to double*
  store double 0.000000e+00, double* %4290, align 1, !tbaa !2451
  %4291 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %4292 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %4293 = bitcast %union.vec128_t* %XMM1 to i8*
  %4294 = load i64, i64* %PC
  %4295 = add i64 %4294, 4
  store i64 %4295, i64* %PC
  %4296 = bitcast i8* %4292 to double*
  %4297 = load double, double* %4296, align 1
  %4298 = getelementptr inbounds i8, i8* %4292, i64 8
  %4299 = bitcast i8* %4298 to i64*
  %4300 = load i64, i64* %4299, align 1
  %4301 = bitcast i8* %4293 to double*
  %4302 = load double, double* %4301, align 1
  %4303 = fdiv double %4297, %4302
  %4304 = bitcast i8* %4291 to double*
  store double %4303, double* %4304, align 1, !tbaa !2451
  %4305 = getelementptr inbounds i8, i8* %4291, i64 8
  %4306 = bitcast i8* %4305 to i64*
  store i64 %4300, i64* %4306, align 1, !tbaa !2451
  %4307 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4308 = bitcast %union.vec128_t* %XMM2 to i8*
  %4309 = load i64, i64* %PC
  %4310 = add i64 %4309, 3
  store i64 %4310, i64* %PC
  %4311 = bitcast i8* %4308 to <2 x i32>*
  %4312 = load <2 x i32>, <2 x i32>* %4311, align 1
  %4313 = getelementptr inbounds i8, i8* %4308, i64 8
  %4314 = bitcast i8* %4313 to <2 x i32>*
  %4315 = load <2 x i32>, <2 x i32>* %4314, align 1
  %4316 = extractelement <2 x i32> %4312, i32 0
  %4317 = bitcast i8* %4307 to i32*
  store i32 %4316, i32* %4317, align 1, !tbaa !2460
  %4318 = extractelement <2 x i32> %4312, i32 1
  %4319 = getelementptr inbounds i8, i8* %4307, i64 4
  %4320 = bitcast i8* %4319 to i32*
  store i32 %4318, i32* %4320, align 1, !tbaa !2460
  %4321 = extractelement <2 x i32> %4315, i32 0
  %4322 = getelementptr inbounds i8, i8* %4307, i64 8
  %4323 = bitcast i8* %4322 to i32*
  store i32 %4321, i32* %4323, align 1, !tbaa !2460
  %4324 = extractelement <2 x i32> %4315, i32 1
  %4325 = getelementptr inbounds i8, i8* %4307, i64 12
  %4326 = bitcast i8* %4325 to i32*
  store i32 %4324, i32* %4326, align 1, !tbaa !2460
  %4327 = load i64, i64* %PC
  %4328 = sub i64 %4327, 2622
  %4329 = load i64, i64* %PC
  %4330 = add i64 %4329, 5
  %4331 = load i64, i64* %PC
  %4332 = add i64 %4331, 5
  store i64 %4332, i64* %PC
  %4333 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4334 = load i64, i64* %4333, align 8, !tbaa !2428
  %4335 = add i64 %4334, -8
  %4336 = inttoptr i64 %4335 to i64*
  store i64 %4330, i64* %4336
  store i64 %4335, i64* %4333, align 8, !tbaa !2428
  %4337 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4328, i64* %4337, align 8, !tbaa !2428
  %4338 = load i64, i64* %PC
  %4339 = bitcast %struct.State** %state.i637 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4339)
  %4340 = bitcast i64* %curr_pc.i638 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4340)
  %4341 = bitcast %struct.Memory** %memory.i639 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4341)
  call void @llvm.lifetime.start(i64 1, i8* %BRANCH_TAKEN.i640)
  %4342 = bitcast i64* %SS_BASE.i641 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4342)
  %4343 = bitcast i64* %ES_BASE.i642 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4343)
  %4344 = bitcast i64* %DS_BASE.i643 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4344)
  %4345 = bitcast i64* %CS_BASE.i644 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4345)
  %4346 = bitcast %struct.State** %STATE.i645 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4346)
  %4347 = bitcast %struct.Memory** %MEMORY.i646 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4347)
  %4348 = bitcast i64** %_DR0.i647 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4348)
  %4349 = bitcast i64** %_DR1.i648 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4349)
  %4350 = bitcast i64** %_DR2.i649 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4350)
  %4351 = bitcast i64** %_DR3.i650 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4351)
  %4352 = bitcast i64** %_DR4.i651 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4352)
  %4353 = bitcast i64** %_DR5.i652 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4353)
  %4354 = bitcast i64** %_DR6.i653 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4354)
  %4355 = bitcast i64** %_DR7.i654 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4355)
  %4356 = bitcast i64** %CR0.i655 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4356)
  %4357 = bitcast i64** %CR1.i656 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4357)
  %4358 = bitcast i64** %CR2.i657 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4358)
  %4359 = bitcast i64** %CR3.i658 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4359)
  %4360 = bitcast i64** %CR4.i659 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4360)
  %4361 = bitcast i64** %CR8.i660 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4361)
  store %struct.State* %0, %struct.State** %state.i637, align 8, !noalias !2486
  store i64 %4338, i64* %curr_pc.i638, align 8, !noalias !2486
  store %struct.Memory* %4205, %struct.Memory** %memory.i639, align 8, !noalias !2486
  store i8 0, i8* %BRANCH_TAKEN.i640, align 1, !noalias !2486
  store i64 0, i64* %SS_BASE.i641, align 8, !noalias !2486
  store i64 0, i64* %ES_BASE.i642, align 8, !noalias !2486
  store i64 0, i64* %DS_BASE.i643, align 8, !noalias !2486
  store i64 0, i64* %CS_BASE.i644, align 8, !noalias !2486
  store %struct.State* %0, %struct.State** %STATE.i645, align 8, !noalias !2486
  store %struct.Memory* %4205, %struct.Memory** %MEMORY.i646, align 8, !noalias !2486
  %4362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4363 = getelementptr inbounds %struct.GPR, %struct.GPR* %4362, i32 0, i32 33
  %4364 = getelementptr inbounds %struct.Reg, %struct.Reg* %4363, i32 0, i32 0
  %PC.i661 = bitcast %union.anon* %4364 to i64*
  store i64 %4338, i64* %PC.i661, align 8, !alias.scope !2490, !noalias !2491
  %4365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4366 = getelementptr inbounds %struct.GPR, %struct.GPR* %4365, i32 0, i32 1
  %4367 = getelementptr inbounds %struct.Reg, %struct.Reg* %4366, i32 0, i32 0
  %4368 = bitcast %union.anon* %4367 to %struct.anon.2*
  %AH.i662 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4368, i32 0, i32 1
  %4369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4370 = getelementptr inbounds %struct.GPR, %struct.GPR* %4369, i32 0, i32 3
  %4371 = getelementptr inbounds %struct.Reg, %struct.Reg* %4370, i32 0, i32 0
  %4372 = bitcast %union.anon* %4371 to %struct.anon.2*
  %BH.i663 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4372, i32 0, i32 1
  %4373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4374 = getelementptr inbounds %struct.GPR, %struct.GPR* %4373, i32 0, i32 5
  %4375 = getelementptr inbounds %struct.Reg, %struct.Reg* %4374, i32 0, i32 0
  %4376 = bitcast %union.anon* %4375 to %struct.anon.2*
  %CH.i664 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4376, i32 0, i32 1
  %4377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4378 = getelementptr inbounds %struct.GPR, %struct.GPR* %4377, i32 0, i32 7
  %4379 = getelementptr inbounds %struct.Reg, %struct.Reg* %4378, i32 0, i32 0
  %4380 = bitcast %union.anon* %4379 to %struct.anon.2*
  %DH.i665 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4380, i32 0, i32 1
  %4381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4382 = getelementptr inbounds %struct.GPR, %struct.GPR* %4381, i32 0, i32 1
  %4383 = getelementptr inbounds %struct.Reg, %struct.Reg* %4382, i32 0, i32 0
  %4384 = bitcast %union.anon* %4383 to %struct.anon.2*
  %AL.i666 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4384, i32 0, i32 0
  %4385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4386 = getelementptr inbounds %struct.GPR, %struct.GPR* %4385, i32 0, i32 3
  %4387 = getelementptr inbounds %struct.Reg, %struct.Reg* %4386, i32 0, i32 0
  %4388 = bitcast %union.anon* %4387 to %struct.anon.2*
  %BL.i667 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4388, i32 0, i32 0
  %4389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4390 = getelementptr inbounds %struct.GPR, %struct.GPR* %4389, i32 0, i32 5
  %4391 = getelementptr inbounds %struct.Reg, %struct.Reg* %4390, i32 0, i32 0
  %4392 = bitcast %union.anon* %4391 to %struct.anon.2*
  %CL.i668 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4392, i32 0, i32 0
  %4393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4394 = getelementptr inbounds %struct.GPR, %struct.GPR* %4393, i32 0, i32 7
  %4395 = getelementptr inbounds %struct.Reg, %struct.Reg* %4394, i32 0, i32 0
  %4396 = bitcast %union.anon* %4395 to %struct.anon.2*
  %DL.i669 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4396, i32 0, i32 0
  %4397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4398 = getelementptr inbounds %struct.GPR, %struct.GPR* %4397, i32 0, i32 9
  %4399 = getelementptr inbounds %struct.Reg, %struct.Reg* %4398, i32 0, i32 0
  %4400 = bitcast %union.anon* %4399 to %struct.anon.2*
  %SIL.i670 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4400, i32 0, i32 0
  %4401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4402 = getelementptr inbounds %struct.GPR, %struct.GPR* %4401, i32 0, i32 11
  %4403 = getelementptr inbounds %struct.Reg, %struct.Reg* %4402, i32 0, i32 0
  %4404 = bitcast %union.anon* %4403 to %struct.anon.2*
  %DIL.i671 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4404, i32 0, i32 0
  %4405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4406 = getelementptr inbounds %struct.GPR, %struct.GPR* %4405, i32 0, i32 13
  %4407 = getelementptr inbounds %struct.Reg, %struct.Reg* %4406, i32 0, i32 0
  %4408 = bitcast %union.anon* %4407 to %struct.anon.2*
  %SPL.i672 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4408, i32 0, i32 0
  %4409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4410 = getelementptr inbounds %struct.GPR, %struct.GPR* %4409, i32 0, i32 15
  %4411 = getelementptr inbounds %struct.Reg, %struct.Reg* %4410, i32 0, i32 0
  %4412 = bitcast %union.anon* %4411 to %struct.anon.2*
  %BPL.i673 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4412, i32 0, i32 0
  %4413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4414 = getelementptr inbounds %struct.GPR, %struct.GPR* %4413, i32 0, i32 17
  %4415 = getelementptr inbounds %struct.Reg, %struct.Reg* %4414, i32 0, i32 0
  %4416 = bitcast %union.anon* %4415 to %struct.anon.2*
  %R8B.i674 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4416, i32 0, i32 0
  %4417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4418 = getelementptr inbounds %struct.GPR, %struct.GPR* %4417, i32 0, i32 19
  %4419 = getelementptr inbounds %struct.Reg, %struct.Reg* %4418, i32 0, i32 0
  %4420 = bitcast %union.anon* %4419 to %struct.anon.2*
  %R9B.i675 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4420, i32 0, i32 0
  %4421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4422 = getelementptr inbounds %struct.GPR, %struct.GPR* %4421, i32 0, i32 21
  %4423 = getelementptr inbounds %struct.Reg, %struct.Reg* %4422, i32 0, i32 0
  %4424 = bitcast %union.anon* %4423 to %struct.anon.2*
  %R10B.i676 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4424, i32 0, i32 0
  %4425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4426 = getelementptr inbounds %struct.GPR, %struct.GPR* %4425, i32 0, i32 23
  %4427 = getelementptr inbounds %struct.Reg, %struct.Reg* %4426, i32 0, i32 0
  %4428 = bitcast %union.anon* %4427 to %struct.anon.2*
  %R11B.i677 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4428, i32 0, i32 0
  %4429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4430 = getelementptr inbounds %struct.GPR, %struct.GPR* %4429, i32 0, i32 25
  %4431 = getelementptr inbounds %struct.Reg, %struct.Reg* %4430, i32 0, i32 0
  %4432 = bitcast %union.anon* %4431 to %struct.anon.2*
  %R12B.i678 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4432, i32 0, i32 0
  %4433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4434 = getelementptr inbounds %struct.GPR, %struct.GPR* %4433, i32 0, i32 27
  %4435 = getelementptr inbounds %struct.Reg, %struct.Reg* %4434, i32 0, i32 0
  %4436 = bitcast %union.anon* %4435 to %struct.anon.2*
  %R13B.i679 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4436, i32 0, i32 0
  %4437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4438 = getelementptr inbounds %struct.GPR, %struct.GPR* %4437, i32 0, i32 29
  %4439 = getelementptr inbounds %struct.Reg, %struct.Reg* %4438, i32 0, i32 0
  %4440 = bitcast %union.anon* %4439 to %struct.anon.2*
  %R14B.i680 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4440, i32 0, i32 0
  %4441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4442 = getelementptr inbounds %struct.GPR, %struct.GPR* %4441, i32 0, i32 31
  %4443 = getelementptr inbounds %struct.Reg, %struct.Reg* %4442, i32 0, i32 0
  %4444 = bitcast %union.anon* %4443 to %struct.anon.2*
  %R15B.i681 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4444, i32 0, i32 0
  %4445 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4446 = getelementptr inbounds %struct.GPR, %struct.GPR* %4445, i32 0, i32 1
  %4447 = getelementptr inbounds %struct.Reg, %struct.Reg* %4446, i32 0, i32 0
  %AX.i682 = bitcast %union.anon* %4447 to i16*
  %4448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4449 = getelementptr inbounds %struct.GPR, %struct.GPR* %4448, i32 0, i32 3
  %4450 = getelementptr inbounds %struct.Reg, %struct.Reg* %4449, i32 0, i32 0
  %BX.i683 = bitcast %union.anon* %4450 to i16*
  %4451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4452 = getelementptr inbounds %struct.GPR, %struct.GPR* %4451, i32 0, i32 5
  %4453 = getelementptr inbounds %struct.Reg, %struct.Reg* %4452, i32 0, i32 0
  %CX.i684 = bitcast %union.anon* %4453 to i16*
  %4454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4455 = getelementptr inbounds %struct.GPR, %struct.GPR* %4454, i32 0, i32 7
  %4456 = getelementptr inbounds %struct.Reg, %struct.Reg* %4455, i32 0, i32 0
  %DX.i685 = bitcast %union.anon* %4456 to i16*
  %4457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4458 = getelementptr inbounds %struct.GPR, %struct.GPR* %4457, i32 0, i32 9
  %4459 = getelementptr inbounds %struct.Reg, %struct.Reg* %4458, i32 0, i32 0
  %SI.i686 = bitcast %union.anon* %4459 to i16*
  %4460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4461 = getelementptr inbounds %struct.GPR, %struct.GPR* %4460, i32 0, i32 11
  %4462 = getelementptr inbounds %struct.Reg, %struct.Reg* %4461, i32 0, i32 0
  %DI.i687 = bitcast %union.anon* %4462 to i16*
  %4463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4464 = getelementptr inbounds %struct.GPR, %struct.GPR* %4463, i32 0, i32 13
  %4465 = getelementptr inbounds %struct.Reg, %struct.Reg* %4464, i32 0, i32 0
  %SP.i688 = bitcast %union.anon* %4465 to i16*
  %4466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4467 = getelementptr inbounds %struct.GPR, %struct.GPR* %4466, i32 0, i32 15
  %4468 = getelementptr inbounds %struct.Reg, %struct.Reg* %4467, i32 0, i32 0
  %BP.i689 = bitcast %union.anon* %4468 to i16*
  %4469 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4470 = getelementptr inbounds %struct.GPR, %struct.GPR* %4469, i32 0, i32 17
  %4471 = getelementptr inbounds %struct.Reg, %struct.Reg* %4470, i32 0, i32 0
  %R8W.i690 = bitcast %union.anon* %4471 to i16*
  %4472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4473 = getelementptr inbounds %struct.GPR, %struct.GPR* %4472, i32 0, i32 19
  %4474 = getelementptr inbounds %struct.Reg, %struct.Reg* %4473, i32 0, i32 0
  %R9W.i691 = bitcast %union.anon* %4474 to i16*
  %4475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4476 = getelementptr inbounds %struct.GPR, %struct.GPR* %4475, i32 0, i32 21
  %4477 = getelementptr inbounds %struct.Reg, %struct.Reg* %4476, i32 0, i32 0
  %R10W.i692 = bitcast %union.anon* %4477 to i16*
  %4478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4479 = getelementptr inbounds %struct.GPR, %struct.GPR* %4478, i32 0, i32 23
  %4480 = getelementptr inbounds %struct.Reg, %struct.Reg* %4479, i32 0, i32 0
  %R11W.i693 = bitcast %union.anon* %4480 to i16*
  %4481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4482 = getelementptr inbounds %struct.GPR, %struct.GPR* %4481, i32 0, i32 25
  %4483 = getelementptr inbounds %struct.Reg, %struct.Reg* %4482, i32 0, i32 0
  %R12W.i694 = bitcast %union.anon* %4483 to i16*
  %4484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4485 = getelementptr inbounds %struct.GPR, %struct.GPR* %4484, i32 0, i32 27
  %4486 = getelementptr inbounds %struct.Reg, %struct.Reg* %4485, i32 0, i32 0
  %R13W.i695 = bitcast %union.anon* %4486 to i16*
  %4487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4488 = getelementptr inbounds %struct.GPR, %struct.GPR* %4487, i32 0, i32 29
  %4489 = getelementptr inbounds %struct.Reg, %struct.Reg* %4488, i32 0, i32 0
  %R14W.i696 = bitcast %union.anon* %4489 to i16*
  %4490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4491 = getelementptr inbounds %struct.GPR, %struct.GPR* %4490, i32 0, i32 31
  %4492 = getelementptr inbounds %struct.Reg, %struct.Reg* %4491, i32 0, i32 0
  %R15W.i697 = bitcast %union.anon* %4492 to i16*
  %4493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4494 = getelementptr inbounds %struct.GPR, %struct.GPR* %4493, i32 0, i32 33
  %4495 = getelementptr inbounds %struct.Reg, %struct.Reg* %4494, i32 0, i32 0
  %IP.i698 = bitcast %union.anon* %4495 to i16*
  %4496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4497 = getelementptr inbounds %struct.GPR, %struct.GPR* %4496, i32 0, i32 1
  %4498 = getelementptr inbounds %struct.Reg, %struct.Reg* %4497, i32 0, i32 0
  %EAX.i699 = bitcast %union.anon* %4498 to i32*
  %4499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4500 = getelementptr inbounds %struct.GPR, %struct.GPR* %4499, i32 0, i32 3
  %4501 = getelementptr inbounds %struct.Reg, %struct.Reg* %4500, i32 0, i32 0
  %EBX.i700 = bitcast %union.anon* %4501 to i32*
  %4502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4503 = getelementptr inbounds %struct.GPR, %struct.GPR* %4502, i32 0, i32 5
  %4504 = getelementptr inbounds %struct.Reg, %struct.Reg* %4503, i32 0, i32 0
  %ECX.i701 = bitcast %union.anon* %4504 to i32*
  %4505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4506 = getelementptr inbounds %struct.GPR, %struct.GPR* %4505, i32 0, i32 7
  %4507 = getelementptr inbounds %struct.Reg, %struct.Reg* %4506, i32 0, i32 0
  %EDX.i702 = bitcast %union.anon* %4507 to i32*
  %4508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4509 = getelementptr inbounds %struct.GPR, %struct.GPR* %4508, i32 0, i32 9
  %4510 = getelementptr inbounds %struct.Reg, %struct.Reg* %4509, i32 0, i32 0
  %ESI.i703 = bitcast %union.anon* %4510 to i32*
  %4511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4512 = getelementptr inbounds %struct.GPR, %struct.GPR* %4511, i32 0, i32 11
  %4513 = getelementptr inbounds %struct.Reg, %struct.Reg* %4512, i32 0, i32 0
  %EDI.i704 = bitcast %union.anon* %4513 to i32*
  %4514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4515 = getelementptr inbounds %struct.GPR, %struct.GPR* %4514, i32 0, i32 13
  %4516 = getelementptr inbounds %struct.Reg, %struct.Reg* %4515, i32 0, i32 0
  %ESP.i705 = bitcast %union.anon* %4516 to i32*
  %4517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4518 = getelementptr inbounds %struct.GPR, %struct.GPR* %4517, i32 0, i32 15
  %4519 = getelementptr inbounds %struct.Reg, %struct.Reg* %4518, i32 0, i32 0
  %EBP.i706 = bitcast %union.anon* %4519 to i32*
  %4520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4521 = getelementptr inbounds %struct.GPR, %struct.GPR* %4520, i32 0, i32 33
  %4522 = getelementptr inbounds %struct.Reg, %struct.Reg* %4521, i32 0, i32 0
  %EIP.i707 = bitcast %union.anon* %4522 to i32*
  %4523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4524 = getelementptr inbounds %struct.GPR, %struct.GPR* %4523, i32 0, i32 17
  %4525 = getelementptr inbounds %struct.Reg, %struct.Reg* %4524, i32 0, i32 0
  %R8D.i708 = bitcast %union.anon* %4525 to i32*
  %4526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4527 = getelementptr inbounds %struct.GPR, %struct.GPR* %4526, i32 0, i32 19
  %4528 = getelementptr inbounds %struct.Reg, %struct.Reg* %4527, i32 0, i32 0
  %R9D.i709 = bitcast %union.anon* %4528 to i32*
  %4529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4530 = getelementptr inbounds %struct.GPR, %struct.GPR* %4529, i32 0, i32 21
  %4531 = getelementptr inbounds %struct.Reg, %struct.Reg* %4530, i32 0, i32 0
  %R10D.i710 = bitcast %union.anon* %4531 to i32*
  %4532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4533 = getelementptr inbounds %struct.GPR, %struct.GPR* %4532, i32 0, i32 23
  %4534 = getelementptr inbounds %struct.Reg, %struct.Reg* %4533, i32 0, i32 0
  %R11D.i711 = bitcast %union.anon* %4534 to i32*
  %4535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4536 = getelementptr inbounds %struct.GPR, %struct.GPR* %4535, i32 0, i32 25
  %4537 = getelementptr inbounds %struct.Reg, %struct.Reg* %4536, i32 0, i32 0
  %R12D.i712 = bitcast %union.anon* %4537 to i32*
  %4538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4539 = getelementptr inbounds %struct.GPR, %struct.GPR* %4538, i32 0, i32 27
  %4540 = getelementptr inbounds %struct.Reg, %struct.Reg* %4539, i32 0, i32 0
  %R13D.i713 = bitcast %union.anon* %4540 to i32*
  %4541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4542 = getelementptr inbounds %struct.GPR, %struct.GPR* %4541, i32 0, i32 29
  %4543 = getelementptr inbounds %struct.Reg, %struct.Reg* %4542, i32 0, i32 0
  %R14D.i714 = bitcast %union.anon* %4543 to i32*
  %4544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4545 = getelementptr inbounds %struct.GPR, %struct.GPR* %4544, i32 0, i32 31
  %4546 = getelementptr inbounds %struct.Reg, %struct.Reg* %4545, i32 0, i32 0
  %R15D.i715 = bitcast %union.anon* %4546 to i32*
  %4547 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4548 = getelementptr inbounds %struct.GPR, %struct.GPR* %4547, i32 0, i32 1
  %4549 = getelementptr inbounds %struct.Reg, %struct.Reg* %4548, i32 0, i32 0
  %RAX.i716 = bitcast %union.anon* %4549 to i64*
  %4550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4551 = getelementptr inbounds %struct.GPR, %struct.GPR* %4550, i32 0, i32 3
  %4552 = getelementptr inbounds %struct.Reg, %struct.Reg* %4551, i32 0, i32 0
  %RBX.i717 = bitcast %union.anon* %4552 to i64*
  %4553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4554 = getelementptr inbounds %struct.GPR, %struct.GPR* %4553, i32 0, i32 5
  %4555 = getelementptr inbounds %struct.Reg, %struct.Reg* %4554, i32 0, i32 0
  %RCX.i718 = bitcast %union.anon* %4555 to i64*
  %4556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4557 = getelementptr inbounds %struct.GPR, %struct.GPR* %4556, i32 0, i32 7
  %4558 = getelementptr inbounds %struct.Reg, %struct.Reg* %4557, i32 0, i32 0
  %RDX.i719 = bitcast %union.anon* %4558 to i64*
  %4559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4560 = getelementptr inbounds %struct.GPR, %struct.GPR* %4559, i32 0, i32 9
  %4561 = getelementptr inbounds %struct.Reg, %struct.Reg* %4560, i32 0, i32 0
  %RSI.i720 = bitcast %union.anon* %4561 to i64*
  %4562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4563 = getelementptr inbounds %struct.GPR, %struct.GPR* %4562, i32 0, i32 11
  %4564 = getelementptr inbounds %struct.Reg, %struct.Reg* %4563, i32 0, i32 0
  %RDI.i721 = bitcast %union.anon* %4564 to i64*
  %4565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4566 = getelementptr inbounds %struct.GPR, %struct.GPR* %4565, i32 0, i32 13
  %4567 = getelementptr inbounds %struct.Reg, %struct.Reg* %4566, i32 0, i32 0
  %RSP.i722 = bitcast %union.anon* %4567 to i64*
  %4568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4569 = getelementptr inbounds %struct.GPR, %struct.GPR* %4568, i32 0, i32 15
  %4570 = getelementptr inbounds %struct.Reg, %struct.Reg* %4569, i32 0, i32 0
  %RBP.i723 = bitcast %union.anon* %4570 to i64*
  %4571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4572 = getelementptr inbounds %struct.GPR, %struct.GPR* %4571, i32 0, i32 17
  %4573 = getelementptr inbounds %struct.Reg, %struct.Reg* %4572, i32 0, i32 0
  %R8.i724 = bitcast %union.anon* %4573 to i64*
  %4574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4575 = getelementptr inbounds %struct.GPR, %struct.GPR* %4574, i32 0, i32 19
  %4576 = getelementptr inbounds %struct.Reg, %struct.Reg* %4575, i32 0, i32 0
  %R9.i725 = bitcast %union.anon* %4576 to i64*
  %4577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4578 = getelementptr inbounds %struct.GPR, %struct.GPR* %4577, i32 0, i32 21
  %4579 = getelementptr inbounds %struct.Reg, %struct.Reg* %4578, i32 0, i32 0
  %R10.i726 = bitcast %union.anon* %4579 to i64*
  %4580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4581 = getelementptr inbounds %struct.GPR, %struct.GPR* %4580, i32 0, i32 23
  %4582 = getelementptr inbounds %struct.Reg, %struct.Reg* %4581, i32 0, i32 0
  %R11.i727 = bitcast %union.anon* %4582 to i64*
  %4583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4584 = getelementptr inbounds %struct.GPR, %struct.GPR* %4583, i32 0, i32 25
  %4585 = getelementptr inbounds %struct.Reg, %struct.Reg* %4584, i32 0, i32 0
  %R12.i728 = bitcast %union.anon* %4585 to i64*
  %4586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4587 = getelementptr inbounds %struct.GPR, %struct.GPR* %4586, i32 0, i32 27
  %4588 = getelementptr inbounds %struct.Reg, %struct.Reg* %4587, i32 0, i32 0
  %R13.i729 = bitcast %union.anon* %4588 to i64*
  %4589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4590 = getelementptr inbounds %struct.GPR, %struct.GPR* %4589, i32 0, i32 29
  %4591 = getelementptr inbounds %struct.Reg, %struct.Reg* %4590, i32 0, i32 0
  %R14.i730 = bitcast %union.anon* %4591 to i64*
  %4592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4593 = getelementptr inbounds %struct.GPR, %struct.GPR* %4592, i32 0, i32 31
  %4594 = getelementptr inbounds %struct.Reg, %struct.Reg* %4593, i32 0, i32 0
  %R15.i731 = bitcast %union.anon* %4594 to i64*
  %4595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4596 = getelementptr inbounds %struct.GPR, %struct.GPR* %4595, i32 0, i32 33
  %4597 = getelementptr inbounds %struct.Reg, %struct.Reg* %4596, i32 0, i32 0
  %RIP.i732 = bitcast %union.anon* %4597 to i64*
  %4598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %4599 = getelementptr inbounds %struct.Segments, %struct.Segments* %4598, i32 0, i32 1
  %SS.i733 = bitcast %union.SegmentSelector* %4599 to i16*
  %4600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %4601 = getelementptr inbounds %struct.Segments, %struct.Segments* %4600, i32 0, i32 3
  %ES.i734 = bitcast %union.SegmentSelector* %4601 to i16*
  %4602 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %4603 = getelementptr inbounds %struct.Segments, %struct.Segments* %4602, i32 0, i32 5
  %GS.i735 = bitcast %union.SegmentSelector* %4603 to i16*
  %4604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %4605 = getelementptr inbounds %struct.Segments, %struct.Segments* %4604, i32 0, i32 7
  %FS.i736 = bitcast %union.SegmentSelector* %4605 to i16*
  %4606 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %4607 = getelementptr inbounds %struct.Segments, %struct.Segments* %4606, i32 0, i32 9
  %DS.i737 = bitcast %union.SegmentSelector* %4607 to i16*
  %4608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %4609 = getelementptr inbounds %struct.Segments, %struct.Segments* %4608, i32 0, i32 11
  %CS.i738 = bitcast %union.SegmentSelector* %4609 to i16*
  %4610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %4611 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %4610, i32 0, i32 5
  %4612 = getelementptr inbounds %struct.Reg, %struct.Reg* %4611, i32 0, i32 0
  %GS_BASE.i739 = bitcast %union.anon* %4612 to i64*
  %4613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %4614 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %4613, i32 0, i32 7
  %4615 = getelementptr inbounds %struct.Reg, %struct.Reg* %4614, i32 0, i32 0
  %FS_BASE.i740 = bitcast %union.anon* %4615 to i64*
  %4616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4617 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4616, i64 0, i64 0
  %YMM0.i741 = bitcast %union.VectorReg* %4617 to %"class.std::bitset"*
  %4618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4619 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4618, i64 0, i64 1
  %YMM1.i742 = bitcast %union.VectorReg* %4619 to %"class.std::bitset"*
  %4620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4621 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4620, i64 0, i64 2
  %YMM2.i743 = bitcast %union.VectorReg* %4621 to %"class.std::bitset"*
  %4622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4623 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4622, i64 0, i64 3
  %YMM3.i744 = bitcast %union.VectorReg* %4623 to %"class.std::bitset"*
  %4624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4625 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4624, i64 0, i64 4
  %YMM4.i745 = bitcast %union.VectorReg* %4625 to %"class.std::bitset"*
  %4626 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4627 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4626, i64 0, i64 5
  %YMM5.i746 = bitcast %union.VectorReg* %4627 to %"class.std::bitset"*
  %4628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4629 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4628, i64 0, i64 6
  %YMM6.i747 = bitcast %union.VectorReg* %4629 to %"class.std::bitset"*
  %4630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4631 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4630, i64 0, i64 7
  %YMM7.i748 = bitcast %union.VectorReg* %4631 to %"class.std::bitset"*
  %4632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4633 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4632, i64 0, i64 8
  %YMM8.i749 = bitcast %union.VectorReg* %4633 to %"class.std::bitset"*
  %4634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4635 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4634, i64 0, i64 9
  %YMM9.i750 = bitcast %union.VectorReg* %4635 to %"class.std::bitset"*
  %4636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4637 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4636, i64 0, i64 10
  %YMM10.i751 = bitcast %union.VectorReg* %4637 to %"class.std::bitset"*
  %4638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4639 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4638, i64 0, i64 11
  %YMM11.i752 = bitcast %union.VectorReg* %4639 to %"class.std::bitset"*
  %4640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4641 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4640, i64 0, i64 12
  %YMM12.i753 = bitcast %union.VectorReg* %4641 to %"class.std::bitset"*
  %4642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4643 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4642, i64 0, i64 13
  %YMM13.i754 = bitcast %union.VectorReg* %4643 to %"class.std::bitset"*
  %4644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4645 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4644, i64 0, i64 14
  %YMM14.i755 = bitcast %union.VectorReg* %4645 to %"class.std::bitset"*
  %4646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4647 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4646, i64 0, i64 15
  %YMM15.i756 = bitcast %union.VectorReg* %4647 to %"class.std::bitset"*
  %4648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4649 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4648, i64 0, i64 0
  %XMM0.i757 = bitcast %union.VectorReg* %4649 to %union.vec128_t*
  %4650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4651 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4650, i64 0, i64 1
  %XMM1.i758 = bitcast %union.VectorReg* %4651 to %union.vec128_t*
  %4652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4653 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4652, i64 0, i64 2
  %XMM2.i759 = bitcast %union.VectorReg* %4653 to %union.vec128_t*
  %4654 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4655 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4654, i64 0, i64 3
  %XMM3.i760 = bitcast %union.VectorReg* %4655 to %union.vec128_t*
  %4656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4657 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4656, i64 0, i64 4
  %XMM4.i761 = bitcast %union.VectorReg* %4657 to %union.vec128_t*
  %4658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4659 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4658, i64 0, i64 5
  %XMM5.i762 = bitcast %union.VectorReg* %4659 to %union.vec128_t*
  %4660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4661 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4660, i64 0, i64 6
  %XMM6.i763 = bitcast %union.VectorReg* %4661 to %union.vec128_t*
  %4662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4663 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4662, i64 0, i64 7
  %XMM7.i764 = bitcast %union.VectorReg* %4663 to %union.vec128_t*
  %4664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4665 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4664, i64 0, i64 8
  %XMM8.i765 = bitcast %union.VectorReg* %4665 to %union.vec128_t*
  %4666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4667 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4666, i64 0, i64 9
  %XMM9.i766 = bitcast %union.VectorReg* %4667 to %union.vec128_t*
  %4668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4669 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4668, i64 0, i64 10
  %XMM10.i767 = bitcast %union.VectorReg* %4669 to %union.vec128_t*
  %4670 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4671 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4670, i64 0, i64 11
  %XMM11.i768 = bitcast %union.VectorReg* %4671 to %union.vec128_t*
  %4672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4673 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4672, i64 0, i64 12
  %XMM12.i769 = bitcast %union.VectorReg* %4673 to %union.vec128_t*
  %4674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4675 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4674, i64 0, i64 13
  %XMM13.i770 = bitcast %union.VectorReg* %4675 to %union.vec128_t*
  %4676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4677 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4676, i64 0, i64 14
  %XMM14.i771 = bitcast %union.VectorReg* %4677 to %union.vec128_t*
  %4678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4679 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4678, i64 0, i64 15
  %XMM15.i772 = bitcast %union.VectorReg* %4679 to %union.vec128_t*
  %4680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %4681 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %4680, i32 0, i32 0
  %4682 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %4681, i64 0, i64 0
  %ST0.i773 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %4682, i32 0, i32 1
  %4683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %4684 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %4683, i32 0, i32 0
  %4685 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %4684, i64 0, i64 1
  %ST1.i774 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %4685, i32 0, i32 1
  %4686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %4687 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %4686, i32 0, i32 0
  %4688 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %4687, i64 0, i64 2
  %ST2.i775 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %4688, i32 0, i32 1
  %4689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %4690 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %4689, i32 0, i32 0
  %4691 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %4690, i64 0, i64 3
  %ST3.i776 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %4691, i32 0, i32 1
  %4692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %4693 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %4692, i32 0, i32 0
  %4694 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %4693, i64 0, i64 4
  %ST4.i777 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %4694, i32 0, i32 1
  %4695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %4696 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %4695, i32 0, i32 0
  %4697 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %4696, i64 0, i64 5
  %ST5.i778 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %4697, i32 0, i32 1
  %4698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %4699 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %4698, i32 0, i32 0
  %4700 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %4699, i64 0, i64 6
  %ST6.i779 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %4700, i32 0, i32 1
  %4701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %4702 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %4701, i32 0, i32 0
  %4703 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %4702, i64 0, i64 7
  %ST7.i780 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %4703, i32 0, i32 1
  %4704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %4705 = getelementptr inbounds %struct.MMX, %struct.MMX* %4704, i32 0, i32 0
  %4706 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %4705, i64 0, i64 0
  %4707 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %4706, i32 0, i32 1
  %4708 = bitcast %union.vec64_t* %4707 to %struct.uint64v1_t*
  %4709 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %4708, i32 0, i32 0
  %MM0.i781 = getelementptr inbounds [1 x i64], [1 x i64]* %4709, i64 0, i64 0
  %4710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %4711 = getelementptr inbounds %struct.MMX, %struct.MMX* %4710, i32 0, i32 0
  %4712 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %4711, i64 0, i64 1
  %4713 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %4712, i32 0, i32 1
  %4714 = bitcast %union.vec64_t* %4713 to %struct.uint64v1_t*
  %4715 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %4714, i32 0, i32 0
  %MM1.i782 = getelementptr inbounds [1 x i64], [1 x i64]* %4715, i64 0, i64 0
  %4716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %4717 = getelementptr inbounds %struct.MMX, %struct.MMX* %4716, i32 0, i32 0
  %4718 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %4717, i64 0, i64 2
  %4719 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %4718, i32 0, i32 1
  %4720 = bitcast %union.vec64_t* %4719 to %struct.uint64v1_t*
  %4721 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %4720, i32 0, i32 0
  %MM2.i783 = getelementptr inbounds [1 x i64], [1 x i64]* %4721, i64 0, i64 0
  %4722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %4723 = getelementptr inbounds %struct.MMX, %struct.MMX* %4722, i32 0, i32 0
  %4724 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %4723, i64 0, i64 3
  %4725 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %4724, i32 0, i32 1
  %4726 = bitcast %union.vec64_t* %4725 to %struct.uint64v1_t*
  %4727 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %4726, i32 0, i32 0
  %MM3.i784 = getelementptr inbounds [1 x i64], [1 x i64]* %4727, i64 0, i64 0
  %4728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %4729 = getelementptr inbounds %struct.MMX, %struct.MMX* %4728, i32 0, i32 0
  %4730 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %4729, i64 0, i64 4
  %4731 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %4730, i32 0, i32 1
  %4732 = bitcast %union.vec64_t* %4731 to %struct.uint64v1_t*
  %4733 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %4732, i32 0, i32 0
  %MM4.i785 = getelementptr inbounds [1 x i64], [1 x i64]* %4733, i64 0, i64 0
  %4734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %4735 = getelementptr inbounds %struct.MMX, %struct.MMX* %4734, i32 0, i32 0
  %4736 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %4735, i64 0, i64 5
  %4737 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %4736, i32 0, i32 1
  %4738 = bitcast %union.vec64_t* %4737 to %struct.uint64v1_t*
  %4739 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %4738, i32 0, i32 0
  %MM5.i786 = getelementptr inbounds [1 x i64], [1 x i64]* %4739, i64 0, i64 0
  %4740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %4741 = getelementptr inbounds %struct.MMX, %struct.MMX* %4740, i32 0, i32 0
  %4742 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %4741, i64 0, i64 6
  %4743 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %4742, i32 0, i32 1
  %4744 = bitcast %union.vec64_t* %4743 to %struct.uint64v1_t*
  %4745 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %4744, i32 0, i32 0
  %MM6.i787 = getelementptr inbounds [1 x i64], [1 x i64]* %4745, i64 0, i64 0
  %4746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %4747 = getelementptr inbounds %struct.MMX, %struct.MMX* %4746, i32 0, i32 0
  %4748 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %4747, i64 0, i64 7
  %4749 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %4748, i32 0, i32 1
  %4750 = bitcast %union.vec64_t* %4749 to %struct.uint64v1_t*
  %4751 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %4750, i32 0, i32 0
  %MM7.i788 = getelementptr inbounds [1 x i64], [1 x i64]* %4751, i64 0, i64 0
  %4752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF.i789 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %4752, i32 0, i32 5
  %4753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF.i790 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %4753, i32 0, i32 1
  %4754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF.i791 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %4754, i32 0, i32 11
  %4755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF.i792 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %4755, i32 0, i32 13
  %4756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF.i793 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %4756, i32 0, i32 3
  %4757 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF.i794 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %4757, i32 0, i32 9
  %4758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF.i795 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %4758, i32 0, i32 7
  store i64* @DR0, i64** %_DR0.i647, align 8, !noalias !2486
  store i64* @DR1, i64** %_DR1.i648, align 8, !noalias !2486
  store i64* @DR2, i64** %_DR2.i649, align 8, !noalias !2486
  store i64* @DR3, i64** %_DR3.i650, align 8, !noalias !2486
  store i64* @DR4, i64** %_DR4.i651, align 8, !noalias !2486
  store i64* @DR5, i64** %_DR5.i652, align 8, !noalias !2486
  store i64* @DR6, i64** %_DR6.i653, align 8, !noalias !2486
  store i64* @DR7, i64** %_DR7.i654, align 8, !noalias !2486
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0.i655, align 8, !noalias !2486
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1.i656, align 8, !noalias !2486
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2.i657, align 8, !noalias !2486
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3.i658, align 8, !noalias !2486
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4.i659, align 8, !noalias !2486
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8.i660, align 8, !noalias !2486
  %4759 = bitcast %"class.std::bitset"* %YMM0.i741 to double*
  %4760 = load double, double* %4759, !alias.scope !2490, !noalias !2491
  %4761 = load i64, i64* %RSP.i722, !alias.scope !2490, !noalias !2491
  %4762 = load %struct.Memory*, %struct.Memory** %MEMORY.i646, !noalias !2486
  %4763 = inttoptr i64 %4761 to i64*
  %4764 = load i64, i64* %4763
  store i64 %4764, i64* %PC.i661, !alias.scope !2490, !noalias !2491
  %4765 = add i64 %4761, 8
  store i64 %4765, i64* %RSP.i722, !alias.scope !2490, !noalias !2491
  %4766 = call double @atan(double %4760)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0.i741, !alias.scope !2490, !noalias !2491
  %4767 = bitcast %"class.std::bitset"* %YMM0.i741 to double*
  store double %4766, double* %4767, !alias.scope !2490, !noalias !2491
  %4768 = load %struct.Memory*, %struct.Memory** %MEMORY.i646, !noalias !2486
  %4769 = bitcast %struct.State** %state.i637 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4769)
  %4770 = bitcast i64* %curr_pc.i638 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4770)
  %4771 = bitcast %struct.Memory** %memory.i639 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4771)
  call void @llvm.lifetime.end(i64 1, i8* %BRANCH_TAKEN.i640)
  %4772 = bitcast i64* %SS_BASE.i641 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4772)
  %4773 = bitcast i64* %ES_BASE.i642 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4773)
  %4774 = bitcast i64* %DS_BASE.i643 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4774)
  %4775 = bitcast i64* %CS_BASE.i644 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4775)
  %4776 = bitcast %struct.State** %STATE.i645 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4776)
  %4777 = bitcast %struct.Memory** %MEMORY.i646 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4777)
  %4778 = bitcast i64** %_DR0.i647 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4778)
  %4779 = bitcast i64** %_DR1.i648 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4779)
  %4780 = bitcast i64** %_DR2.i649 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4780)
  %4781 = bitcast i64** %_DR3.i650 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4781)
  %4782 = bitcast i64** %_DR4.i651 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4782)
  %4783 = bitcast i64** %_DR5.i652 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4783)
  %4784 = bitcast i64** %_DR6.i653 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4784)
  %4785 = bitcast i64** %_DR7.i654 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4785)
  %4786 = bitcast i64** %CR0.i655 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4786)
  %4787 = bitcast i64** %CR1.i656 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4787)
  %4788 = bitcast i64** %CR2.i657 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4788)
  %4789 = bitcast i64** %CR3.i658 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4789)
  %4790 = bitcast i64** %CR4.i659 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4790)
  %4791 = bitcast i64** %CR8.i660 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4791)
  %4792 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %4793 = load i64, i64* %PC
  %4794 = add i64 %4793, 8
  store i64 %4794, i64* %PC
  %4795 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4018b0__rodata_type* @seg_4018b0__rodata to i64), i64 40) to double*)
  %4796 = bitcast i8* %4792 to double*
  store double %4795, double* %4796, align 1, !tbaa !2451
  %4797 = getelementptr inbounds i8, i8* %4792, i64 8
  %4798 = bitcast i8* %4797 to double*
  store double 0.000000e+00, double* %4798, align 1, !tbaa !2451
  %4799 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %4800 = load i64, i64* %RBP
  %4801 = sub i64 %4800, 240
  %4802 = load i64, i64* %PC
  %4803 = add i64 %4802, 8
  store i64 %4803, i64* %PC
  %4804 = inttoptr i64 %4801 to double*
  %4805 = load double, double* %4804
  %4806 = bitcast i8* %4799 to double*
  store double %4805, double* %4806, align 1, !tbaa !2451
  %4807 = getelementptr inbounds i8, i8* %4799, i64 8
  %4808 = bitcast i8* %4807 to double*
  store double 0.000000e+00, double* %4808, align 1, !tbaa !2451
  %4809 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %4810 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %4811 = bitcast %union.vec128_t* %XMM0 to i8*
  %4812 = load i64, i64* %PC
  %4813 = add i64 %4812, 4
  store i64 %4813, i64* %PC
  %4814 = bitcast i8* %4810 to double*
  %4815 = load double, double* %4814, align 1
  %4816 = getelementptr inbounds i8, i8* %4810, i64 8
  %4817 = bitcast i8* %4816 to i64*
  %4818 = load i64, i64* %4817, align 1
  %4819 = bitcast i8* %4811 to double*
  %4820 = load double, double* %4819, align 1
  %4821 = fmul double %4815, %4820
  %4822 = bitcast i8* %4809 to double*
  store double %4821, double* %4822, align 1, !tbaa !2451
  %4823 = getelementptr inbounds i8, i8* %4809, i64 8
  %4824 = bitcast i8* %4823 to i64*
  store i64 %4818, i64* %4824, align 1, !tbaa !2451
  %4825 = load i64, i64* %RBP
  %4826 = sub i64 %4825, 144
  %4827 = bitcast %union.vec128_t* %XMM2 to i8*
  %4828 = load i64, i64* %PC
  %4829 = add i64 %4828, 8
  store i64 %4829, i64* %PC
  %4830 = bitcast i8* %4827 to double*
  %4831 = load double, double* %4830, align 1
  %4832 = inttoptr i64 %4826 to double*
  store double %4831, double* %4832
  %4833 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4834 = load i64, i64* %PC
  %4835 = add i64 %4834, 9
  store i64 %4835, i64* %PC
  %4836 = load double, double* bitcast (%T_type* @T to double*)
  %4837 = bitcast i8* %4833 to double*
  store double %4836, double* %4837, align 1, !tbaa !2451
  %4838 = getelementptr inbounds i8, i8* %4833, i64 8
  %4839 = bitcast i8* %4838 to double*
  store double 0.000000e+00, double* %4839, align 1, !tbaa !2451
  %4840 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %4841 = load i64, i64* %PC
  %4842 = add i64 %4841, 9
  store i64 %4842, i64* %PC
  %4843 = load double, double* bitcast (%T2_type* @T2 to double*)
  %4844 = bitcast i8* %4840 to double*
  store double %4843, double* %4844, align 1, !tbaa !2451
  %4845 = getelementptr inbounds i8, i8* %4840, i64 8
  %4846 = bitcast i8* %4845 to double*
  store double 0.000000e+00, double* %4846, align 1, !tbaa !2451
  %4847 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %4848 = load i64, i64* %RBP
  %4849 = sub i64 %4848, 152
  %4850 = load i64, i64* %PC
  %4851 = add i64 %4850, 8
  store i64 %4851, i64* %PC
  %4852 = inttoptr i64 %4849 to double*
  %4853 = load double, double* %4852
  %4854 = bitcast i8* %4847 to double*
  store double %4853, double* %4854, align 1, !tbaa !2451
  %4855 = getelementptr inbounds i8, i8* %4847, i64 8
  %4856 = bitcast i8* %4855 to double*
  store double 0.000000e+00, double* %4856, align 1, !tbaa !2451
  %4857 = load i64, i64* %RBP
  %4858 = sub i64 %4857, 272
  %4859 = bitcast %union.vec128_t* %XMM0 to i8*
  %4860 = load i64, i64* %PC
  %4861 = add i64 %4860, 8
  store i64 %4861, i64* %PC
  %4862 = bitcast i8* %4859 to double*
  %4863 = load double, double* %4862, align 1
  %4864 = inttoptr i64 %4858 to double*
  store double %4863, double* %4864
  %4865 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4866 = bitcast %union.vec128_t* %XMM3 to i8*
  %4867 = load i64, i64* %PC
  %4868 = add i64 %4867, 3
  store i64 %4868, i64* %PC
  %4869 = bitcast i8* %4866 to <2 x i32>*
  %4870 = load <2 x i32>, <2 x i32>* %4869, align 1
  %4871 = getelementptr inbounds i8, i8* %4866, i64 8
  %4872 = bitcast i8* %4871 to <2 x i32>*
  %4873 = load <2 x i32>, <2 x i32>* %4872, align 1
  %4874 = extractelement <2 x i32> %4870, i32 0
  %4875 = bitcast i8* %4865 to i32*
  store i32 %4874, i32* %4875, align 1, !tbaa !2460
  %4876 = extractelement <2 x i32> %4870, i32 1
  %4877 = getelementptr inbounds i8, i8* %4865, i64 4
  %4878 = bitcast i8* %4877 to i32*
  store i32 %4876, i32* %4878, align 1, !tbaa !2460
  %4879 = extractelement <2 x i32> %4873, i32 0
  %4880 = getelementptr inbounds i8, i8* %4865, i64 8
  %4881 = bitcast i8* %4880 to i32*
  store i32 %4879, i32* %4881, align 1, !tbaa !2460
  %4882 = extractelement <2 x i32> %4873, i32 1
  %4883 = getelementptr inbounds i8, i8* %4865, i64 12
  %4884 = bitcast i8* %4883 to i32*
  store i32 %4882, i32* %4884, align 1, !tbaa !2460
  %4885 = load i64, i64* %RBP
  %4886 = sub i64 %4885, 280
  %4887 = bitcast %union.vec128_t* %XMM1 to i8*
  %4888 = load i64, i64* %PC
  %4889 = add i64 %4888, 8
  store i64 %4889, i64* %PC
  %4890 = bitcast i8* %4887 to double*
  %4891 = load double, double* %4890, align 1
  %4892 = inttoptr i64 %4886 to double*
  store double %4891, double* %4892
  %4893 = load i64, i64* %RBP
  %4894 = sub i64 %4893, 288
  %4895 = bitcast %union.vec128_t* %XMM2 to i8*
  %4896 = load i64, i64* %PC
  %4897 = add i64 %4896, 8
  store i64 %4897, i64* %PC
  %4898 = bitcast i8* %4895 to double*
  %4899 = load double, double* %4898, align 1
  %4900 = inttoptr i64 %4894 to double*
  store double %4899, double* %4900
  %4901 = load i64, i64* %PC
  %4902 = sub i64 %4901, 2596
  %4903 = load i64, i64* %PC
  %4904 = add i64 %4903, 5
  %4905 = load i64, i64* %PC
  %4906 = add i64 %4905, 5
  store i64 %4906, i64* %PC
  %4907 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4908 = load i64, i64* %4907, align 8, !tbaa !2428
  %4909 = add i64 %4908, -8
  %4910 = inttoptr i64 %4909 to i64*
  store i64 %4904, i64* %4910
  store i64 %4909, i64* %4907, align 8, !tbaa !2428
  %4911 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4902, i64* %4911, align 8, !tbaa !2428
  %4912 = load i64, i64* %PC
  %4913 = bitcast %struct.State** %state.i478 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4913)
  %4914 = bitcast i64* %curr_pc.i479 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4914)
  %4915 = bitcast %struct.Memory** %memory.i480 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4915)
  call void @llvm.lifetime.start(i64 1, i8* %BRANCH_TAKEN.i481)
  %4916 = bitcast i64* %SS_BASE.i482 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4916)
  %4917 = bitcast i64* %ES_BASE.i483 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4917)
  %4918 = bitcast i64* %DS_BASE.i484 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4918)
  %4919 = bitcast i64* %CS_BASE.i485 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4919)
  %4920 = bitcast %struct.State** %STATE.i486 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4920)
  %4921 = bitcast %struct.Memory** %MEMORY.i487 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4921)
  %4922 = bitcast i64** %_DR0.i488 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4922)
  %4923 = bitcast i64** %_DR1.i489 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4923)
  %4924 = bitcast i64** %_DR2.i490 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4924)
  %4925 = bitcast i64** %_DR3.i491 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4925)
  %4926 = bitcast i64** %_DR4.i492 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4926)
  %4927 = bitcast i64** %_DR5.i493 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4927)
  %4928 = bitcast i64** %_DR6.i494 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4928)
  %4929 = bitcast i64** %_DR7.i495 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4929)
  %4930 = bitcast i64** %CR0.i496 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4930)
  %4931 = bitcast i64** %CR1.i497 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4931)
  %4932 = bitcast i64** %CR2.i498 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4932)
  %4933 = bitcast i64** %CR3.i499 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4933)
  %4934 = bitcast i64** %CR4.i500 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4934)
  %4935 = bitcast i64** %CR8.i501 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4935)
  store %struct.State* %0, %struct.State** %state.i478, align 8, !noalias !2492
  store i64 %4912, i64* %curr_pc.i479, align 8, !noalias !2492
  store %struct.Memory* %4768, %struct.Memory** %memory.i480, align 8, !noalias !2492
  store i8 0, i8* %BRANCH_TAKEN.i481, align 1, !noalias !2492
  store i64 0, i64* %SS_BASE.i482, align 8, !noalias !2492
  store i64 0, i64* %ES_BASE.i483, align 8, !noalias !2492
  store i64 0, i64* %DS_BASE.i484, align 8, !noalias !2492
  store i64 0, i64* %CS_BASE.i485, align 8, !noalias !2492
  store %struct.State* %0, %struct.State** %STATE.i486, align 8, !noalias !2492
  store %struct.Memory* %4768, %struct.Memory** %MEMORY.i487, align 8, !noalias !2492
  %4936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4937 = getelementptr inbounds %struct.GPR, %struct.GPR* %4936, i32 0, i32 33
  %4938 = getelementptr inbounds %struct.Reg, %struct.Reg* %4937, i32 0, i32 0
  %PC.i502 = bitcast %union.anon* %4938 to i64*
  store i64 %4912, i64* %PC.i502, align 8, !alias.scope !2496, !noalias !2497
  %4939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4940 = getelementptr inbounds %struct.GPR, %struct.GPR* %4939, i32 0, i32 1
  %4941 = getelementptr inbounds %struct.Reg, %struct.Reg* %4940, i32 0, i32 0
  %4942 = bitcast %union.anon* %4941 to %struct.anon.2*
  %AH.i503 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4942, i32 0, i32 1
  %4943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4944 = getelementptr inbounds %struct.GPR, %struct.GPR* %4943, i32 0, i32 3
  %4945 = getelementptr inbounds %struct.Reg, %struct.Reg* %4944, i32 0, i32 0
  %4946 = bitcast %union.anon* %4945 to %struct.anon.2*
  %BH.i504 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4946, i32 0, i32 1
  %4947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4948 = getelementptr inbounds %struct.GPR, %struct.GPR* %4947, i32 0, i32 5
  %4949 = getelementptr inbounds %struct.Reg, %struct.Reg* %4948, i32 0, i32 0
  %4950 = bitcast %union.anon* %4949 to %struct.anon.2*
  %CH.i505 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4950, i32 0, i32 1
  %4951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4952 = getelementptr inbounds %struct.GPR, %struct.GPR* %4951, i32 0, i32 7
  %4953 = getelementptr inbounds %struct.Reg, %struct.Reg* %4952, i32 0, i32 0
  %4954 = bitcast %union.anon* %4953 to %struct.anon.2*
  %DH.i506 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4954, i32 0, i32 1
  %4955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4956 = getelementptr inbounds %struct.GPR, %struct.GPR* %4955, i32 0, i32 1
  %4957 = getelementptr inbounds %struct.Reg, %struct.Reg* %4956, i32 0, i32 0
  %4958 = bitcast %union.anon* %4957 to %struct.anon.2*
  %AL.i507 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4958, i32 0, i32 0
  %4959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4960 = getelementptr inbounds %struct.GPR, %struct.GPR* %4959, i32 0, i32 3
  %4961 = getelementptr inbounds %struct.Reg, %struct.Reg* %4960, i32 0, i32 0
  %4962 = bitcast %union.anon* %4961 to %struct.anon.2*
  %BL.i508 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4962, i32 0, i32 0
  %4963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4964 = getelementptr inbounds %struct.GPR, %struct.GPR* %4963, i32 0, i32 5
  %4965 = getelementptr inbounds %struct.Reg, %struct.Reg* %4964, i32 0, i32 0
  %4966 = bitcast %union.anon* %4965 to %struct.anon.2*
  %CL.i509 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4966, i32 0, i32 0
  %4967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4968 = getelementptr inbounds %struct.GPR, %struct.GPR* %4967, i32 0, i32 7
  %4969 = getelementptr inbounds %struct.Reg, %struct.Reg* %4968, i32 0, i32 0
  %4970 = bitcast %union.anon* %4969 to %struct.anon.2*
  %DL.i510 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4970, i32 0, i32 0
  %4971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4972 = getelementptr inbounds %struct.GPR, %struct.GPR* %4971, i32 0, i32 9
  %4973 = getelementptr inbounds %struct.Reg, %struct.Reg* %4972, i32 0, i32 0
  %4974 = bitcast %union.anon* %4973 to %struct.anon.2*
  %SIL.i511 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4974, i32 0, i32 0
  %4975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4976 = getelementptr inbounds %struct.GPR, %struct.GPR* %4975, i32 0, i32 11
  %4977 = getelementptr inbounds %struct.Reg, %struct.Reg* %4976, i32 0, i32 0
  %4978 = bitcast %union.anon* %4977 to %struct.anon.2*
  %DIL.i512 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4978, i32 0, i32 0
  %4979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4980 = getelementptr inbounds %struct.GPR, %struct.GPR* %4979, i32 0, i32 13
  %4981 = getelementptr inbounds %struct.Reg, %struct.Reg* %4980, i32 0, i32 0
  %4982 = bitcast %union.anon* %4981 to %struct.anon.2*
  %SPL.i513 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4982, i32 0, i32 0
  %4983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4984 = getelementptr inbounds %struct.GPR, %struct.GPR* %4983, i32 0, i32 15
  %4985 = getelementptr inbounds %struct.Reg, %struct.Reg* %4984, i32 0, i32 0
  %4986 = bitcast %union.anon* %4985 to %struct.anon.2*
  %BPL.i514 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4986, i32 0, i32 0
  %4987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4988 = getelementptr inbounds %struct.GPR, %struct.GPR* %4987, i32 0, i32 17
  %4989 = getelementptr inbounds %struct.Reg, %struct.Reg* %4988, i32 0, i32 0
  %4990 = bitcast %union.anon* %4989 to %struct.anon.2*
  %R8B.i515 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4990, i32 0, i32 0
  %4991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4992 = getelementptr inbounds %struct.GPR, %struct.GPR* %4991, i32 0, i32 19
  %4993 = getelementptr inbounds %struct.Reg, %struct.Reg* %4992, i32 0, i32 0
  %4994 = bitcast %union.anon* %4993 to %struct.anon.2*
  %R9B.i516 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4994, i32 0, i32 0
  %4995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4996 = getelementptr inbounds %struct.GPR, %struct.GPR* %4995, i32 0, i32 21
  %4997 = getelementptr inbounds %struct.Reg, %struct.Reg* %4996, i32 0, i32 0
  %4998 = bitcast %union.anon* %4997 to %struct.anon.2*
  %R10B.i517 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4998, i32 0, i32 0
  %4999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5000 = getelementptr inbounds %struct.GPR, %struct.GPR* %4999, i32 0, i32 23
  %5001 = getelementptr inbounds %struct.Reg, %struct.Reg* %5000, i32 0, i32 0
  %5002 = bitcast %union.anon* %5001 to %struct.anon.2*
  %R11B.i518 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5002, i32 0, i32 0
  %5003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5004 = getelementptr inbounds %struct.GPR, %struct.GPR* %5003, i32 0, i32 25
  %5005 = getelementptr inbounds %struct.Reg, %struct.Reg* %5004, i32 0, i32 0
  %5006 = bitcast %union.anon* %5005 to %struct.anon.2*
  %R12B.i519 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5006, i32 0, i32 0
  %5007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5008 = getelementptr inbounds %struct.GPR, %struct.GPR* %5007, i32 0, i32 27
  %5009 = getelementptr inbounds %struct.Reg, %struct.Reg* %5008, i32 0, i32 0
  %5010 = bitcast %union.anon* %5009 to %struct.anon.2*
  %R13B.i520 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5010, i32 0, i32 0
  %5011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5012 = getelementptr inbounds %struct.GPR, %struct.GPR* %5011, i32 0, i32 29
  %5013 = getelementptr inbounds %struct.Reg, %struct.Reg* %5012, i32 0, i32 0
  %5014 = bitcast %union.anon* %5013 to %struct.anon.2*
  %R14B.i521 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5014, i32 0, i32 0
  %5015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5016 = getelementptr inbounds %struct.GPR, %struct.GPR* %5015, i32 0, i32 31
  %5017 = getelementptr inbounds %struct.Reg, %struct.Reg* %5016, i32 0, i32 0
  %5018 = bitcast %union.anon* %5017 to %struct.anon.2*
  %R15B.i522 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5018, i32 0, i32 0
  %5019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5020 = getelementptr inbounds %struct.GPR, %struct.GPR* %5019, i32 0, i32 1
  %5021 = getelementptr inbounds %struct.Reg, %struct.Reg* %5020, i32 0, i32 0
  %AX.i523 = bitcast %union.anon* %5021 to i16*
  %5022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5023 = getelementptr inbounds %struct.GPR, %struct.GPR* %5022, i32 0, i32 3
  %5024 = getelementptr inbounds %struct.Reg, %struct.Reg* %5023, i32 0, i32 0
  %BX.i524 = bitcast %union.anon* %5024 to i16*
  %5025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5026 = getelementptr inbounds %struct.GPR, %struct.GPR* %5025, i32 0, i32 5
  %5027 = getelementptr inbounds %struct.Reg, %struct.Reg* %5026, i32 0, i32 0
  %CX.i525 = bitcast %union.anon* %5027 to i16*
  %5028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5029 = getelementptr inbounds %struct.GPR, %struct.GPR* %5028, i32 0, i32 7
  %5030 = getelementptr inbounds %struct.Reg, %struct.Reg* %5029, i32 0, i32 0
  %DX.i526 = bitcast %union.anon* %5030 to i16*
  %5031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5032 = getelementptr inbounds %struct.GPR, %struct.GPR* %5031, i32 0, i32 9
  %5033 = getelementptr inbounds %struct.Reg, %struct.Reg* %5032, i32 0, i32 0
  %SI.i527 = bitcast %union.anon* %5033 to i16*
  %5034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5035 = getelementptr inbounds %struct.GPR, %struct.GPR* %5034, i32 0, i32 11
  %5036 = getelementptr inbounds %struct.Reg, %struct.Reg* %5035, i32 0, i32 0
  %DI.i528 = bitcast %union.anon* %5036 to i16*
  %5037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5038 = getelementptr inbounds %struct.GPR, %struct.GPR* %5037, i32 0, i32 13
  %5039 = getelementptr inbounds %struct.Reg, %struct.Reg* %5038, i32 0, i32 0
  %SP.i529 = bitcast %union.anon* %5039 to i16*
  %5040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5041 = getelementptr inbounds %struct.GPR, %struct.GPR* %5040, i32 0, i32 15
  %5042 = getelementptr inbounds %struct.Reg, %struct.Reg* %5041, i32 0, i32 0
  %BP.i530 = bitcast %union.anon* %5042 to i16*
  %5043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5044 = getelementptr inbounds %struct.GPR, %struct.GPR* %5043, i32 0, i32 17
  %5045 = getelementptr inbounds %struct.Reg, %struct.Reg* %5044, i32 0, i32 0
  %R8W.i531 = bitcast %union.anon* %5045 to i16*
  %5046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5047 = getelementptr inbounds %struct.GPR, %struct.GPR* %5046, i32 0, i32 19
  %5048 = getelementptr inbounds %struct.Reg, %struct.Reg* %5047, i32 0, i32 0
  %R9W.i532 = bitcast %union.anon* %5048 to i16*
  %5049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5050 = getelementptr inbounds %struct.GPR, %struct.GPR* %5049, i32 0, i32 21
  %5051 = getelementptr inbounds %struct.Reg, %struct.Reg* %5050, i32 0, i32 0
  %R10W.i533 = bitcast %union.anon* %5051 to i16*
  %5052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5053 = getelementptr inbounds %struct.GPR, %struct.GPR* %5052, i32 0, i32 23
  %5054 = getelementptr inbounds %struct.Reg, %struct.Reg* %5053, i32 0, i32 0
  %R11W.i534 = bitcast %union.anon* %5054 to i16*
  %5055 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5056 = getelementptr inbounds %struct.GPR, %struct.GPR* %5055, i32 0, i32 25
  %5057 = getelementptr inbounds %struct.Reg, %struct.Reg* %5056, i32 0, i32 0
  %R12W.i535 = bitcast %union.anon* %5057 to i16*
  %5058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5059 = getelementptr inbounds %struct.GPR, %struct.GPR* %5058, i32 0, i32 27
  %5060 = getelementptr inbounds %struct.Reg, %struct.Reg* %5059, i32 0, i32 0
  %R13W.i536 = bitcast %union.anon* %5060 to i16*
  %5061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5062 = getelementptr inbounds %struct.GPR, %struct.GPR* %5061, i32 0, i32 29
  %5063 = getelementptr inbounds %struct.Reg, %struct.Reg* %5062, i32 0, i32 0
  %R14W.i537 = bitcast %union.anon* %5063 to i16*
  %5064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5065 = getelementptr inbounds %struct.GPR, %struct.GPR* %5064, i32 0, i32 31
  %5066 = getelementptr inbounds %struct.Reg, %struct.Reg* %5065, i32 0, i32 0
  %R15W.i538 = bitcast %union.anon* %5066 to i16*
  %5067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5068 = getelementptr inbounds %struct.GPR, %struct.GPR* %5067, i32 0, i32 33
  %5069 = getelementptr inbounds %struct.Reg, %struct.Reg* %5068, i32 0, i32 0
  %IP.i539 = bitcast %union.anon* %5069 to i16*
  %5070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5071 = getelementptr inbounds %struct.GPR, %struct.GPR* %5070, i32 0, i32 1
  %5072 = getelementptr inbounds %struct.Reg, %struct.Reg* %5071, i32 0, i32 0
  %EAX.i540 = bitcast %union.anon* %5072 to i32*
  %5073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5074 = getelementptr inbounds %struct.GPR, %struct.GPR* %5073, i32 0, i32 3
  %5075 = getelementptr inbounds %struct.Reg, %struct.Reg* %5074, i32 0, i32 0
  %EBX.i541 = bitcast %union.anon* %5075 to i32*
  %5076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5077 = getelementptr inbounds %struct.GPR, %struct.GPR* %5076, i32 0, i32 5
  %5078 = getelementptr inbounds %struct.Reg, %struct.Reg* %5077, i32 0, i32 0
  %ECX.i542 = bitcast %union.anon* %5078 to i32*
  %5079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5080 = getelementptr inbounds %struct.GPR, %struct.GPR* %5079, i32 0, i32 7
  %5081 = getelementptr inbounds %struct.Reg, %struct.Reg* %5080, i32 0, i32 0
  %EDX.i543 = bitcast %union.anon* %5081 to i32*
  %5082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5083 = getelementptr inbounds %struct.GPR, %struct.GPR* %5082, i32 0, i32 9
  %5084 = getelementptr inbounds %struct.Reg, %struct.Reg* %5083, i32 0, i32 0
  %ESI.i544 = bitcast %union.anon* %5084 to i32*
  %5085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5086 = getelementptr inbounds %struct.GPR, %struct.GPR* %5085, i32 0, i32 11
  %5087 = getelementptr inbounds %struct.Reg, %struct.Reg* %5086, i32 0, i32 0
  %EDI.i545 = bitcast %union.anon* %5087 to i32*
  %5088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5089 = getelementptr inbounds %struct.GPR, %struct.GPR* %5088, i32 0, i32 13
  %5090 = getelementptr inbounds %struct.Reg, %struct.Reg* %5089, i32 0, i32 0
  %ESP.i546 = bitcast %union.anon* %5090 to i32*
  %5091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5092 = getelementptr inbounds %struct.GPR, %struct.GPR* %5091, i32 0, i32 15
  %5093 = getelementptr inbounds %struct.Reg, %struct.Reg* %5092, i32 0, i32 0
  %EBP.i547 = bitcast %union.anon* %5093 to i32*
  %5094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5095 = getelementptr inbounds %struct.GPR, %struct.GPR* %5094, i32 0, i32 33
  %5096 = getelementptr inbounds %struct.Reg, %struct.Reg* %5095, i32 0, i32 0
  %EIP.i548 = bitcast %union.anon* %5096 to i32*
  %5097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5098 = getelementptr inbounds %struct.GPR, %struct.GPR* %5097, i32 0, i32 17
  %5099 = getelementptr inbounds %struct.Reg, %struct.Reg* %5098, i32 0, i32 0
  %R8D.i549 = bitcast %union.anon* %5099 to i32*
  %5100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5101 = getelementptr inbounds %struct.GPR, %struct.GPR* %5100, i32 0, i32 19
  %5102 = getelementptr inbounds %struct.Reg, %struct.Reg* %5101, i32 0, i32 0
  %R9D.i550 = bitcast %union.anon* %5102 to i32*
  %5103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5104 = getelementptr inbounds %struct.GPR, %struct.GPR* %5103, i32 0, i32 21
  %5105 = getelementptr inbounds %struct.Reg, %struct.Reg* %5104, i32 0, i32 0
  %R10D.i551 = bitcast %union.anon* %5105 to i32*
  %5106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5107 = getelementptr inbounds %struct.GPR, %struct.GPR* %5106, i32 0, i32 23
  %5108 = getelementptr inbounds %struct.Reg, %struct.Reg* %5107, i32 0, i32 0
  %R11D.i552 = bitcast %union.anon* %5108 to i32*
  %5109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5110 = getelementptr inbounds %struct.GPR, %struct.GPR* %5109, i32 0, i32 25
  %5111 = getelementptr inbounds %struct.Reg, %struct.Reg* %5110, i32 0, i32 0
  %R12D.i553 = bitcast %union.anon* %5111 to i32*
  %5112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5113 = getelementptr inbounds %struct.GPR, %struct.GPR* %5112, i32 0, i32 27
  %5114 = getelementptr inbounds %struct.Reg, %struct.Reg* %5113, i32 0, i32 0
  %R13D.i554 = bitcast %union.anon* %5114 to i32*
  %5115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5116 = getelementptr inbounds %struct.GPR, %struct.GPR* %5115, i32 0, i32 29
  %5117 = getelementptr inbounds %struct.Reg, %struct.Reg* %5116, i32 0, i32 0
  %R14D.i555 = bitcast %union.anon* %5117 to i32*
  %5118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5119 = getelementptr inbounds %struct.GPR, %struct.GPR* %5118, i32 0, i32 31
  %5120 = getelementptr inbounds %struct.Reg, %struct.Reg* %5119, i32 0, i32 0
  %R15D.i556 = bitcast %union.anon* %5120 to i32*
  %5121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5122 = getelementptr inbounds %struct.GPR, %struct.GPR* %5121, i32 0, i32 1
  %5123 = getelementptr inbounds %struct.Reg, %struct.Reg* %5122, i32 0, i32 0
  %RAX.i557 = bitcast %union.anon* %5123 to i64*
  %5124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5125 = getelementptr inbounds %struct.GPR, %struct.GPR* %5124, i32 0, i32 3
  %5126 = getelementptr inbounds %struct.Reg, %struct.Reg* %5125, i32 0, i32 0
  %RBX.i558 = bitcast %union.anon* %5126 to i64*
  %5127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5128 = getelementptr inbounds %struct.GPR, %struct.GPR* %5127, i32 0, i32 5
  %5129 = getelementptr inbounds %struct.Reg, %struct.Reg* %5128, i32 0, i32 0
  %RCX.i559 = bitcast %union.anon* %5129 to i64*
  %5130 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5131 = getelementptr inbounds %struct.GPR, %struct.GPR* %5130, i32 0, i32 7
  %5132 = getelementptr inbounds %struct.Reg, %struct.Reg* %5131, i32 0, i32 0
  %RDX.i560 = bitcast %union.anon* %5132 to i64*
  %5133 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5134 = getelementptr inbounds %struct.GPR, %struct.GPR* %5133, i32 0, i32 9
  %5135 = getelementptr inbounds %struct.Reg, %struct.Reg* %5134, i32 0, i32 0
  %RSI.i561 = bitcast %union.anon* %5135 to i64*
  %5136 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5137 = getelementptr inbounds %struct.GPR, %struct.GPR* %5136, i32 0, i32 11
  %5138 = getelementptr inbounds %struct.Reg, %struct.Reg* %5137, i32 0, i32 0
  %RDI.i562 = bitcast %union.anon* %5138 to i64*
  %5139 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5140 = getelementptr inbounds %struct.GPR, %struct.GPR* %5139, i32 0, i32 13
  %5141 = getelementptr inbounds %struct.Reg, %struct.Reg* %5140, i32 0, i32 0
  %RSP.i563 = bitcast %union.anon* %5141 to i64*
  %5142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5143 = getelementptr inbounds %struct.GPR, %struct.GPR* %5142, i32 0, i32 15
  %5144 = getelementptr inbounds %struct.Reg, %struct.Reg* %5143, i32 0, i32 0
  %RBP.i564 = bitcast %union.anon* %5144 to i64*
  %5145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5146 = getelementptr inbounds %struct.GPR, %struct.GPR* %5145, i32 0, i32 17
  %5147 = getelementptr inbounds %struct.Reg, %struct.Reg* %5146, i32 0, i32 0
  %R8.i565 = bitcast %union.anon* %5147 to i64*
  %5148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5149 = getelementptr inbounds %struct.GPR, %struct.GPR* %5148, i32 0, i32 19
  %5150 = getelementptr inbounds %struct.Reg, %struct.Reg* %5149, i32 0, i32 0
  %R9.i566 = bitcast %union.anon* %5150 to i64*
  %5151 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5152 = getelementptr inbounds %struct.GPR, %struct.GPR* %5151, i32 0, i32 21
  %5153 = getelementptr inbounds %struct.Reg, %struct.Reg* %5152, i32 0, i32 0
  %R10.i567 = bitcast %union.anon* %5153 to i64*
  %5154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5155 = getelementptr inbounds %struct.GPR, %struct.GPR* %5154, i32 0, i32 23
  %5156 = getelementptr inbounds %struct.Reg, %struct.Reg* %5155, i32 0, i32 0
  %R11.i568 = bitcast %union.anon* %5156 to i64*
  %5157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5158 = getelementptr inbounds %struct.GPR, %struct.GPR* %5157, i32 0, i32 25
  %5159 = getelementptr inbounds %struct.Reg, %struct.Reg* %5158, i32 0, i32 0
  %R12.i569 = bitcast %union.anon* %5159 to i64*
  %5160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5161 = getelementptr inbounds %struct.GPR, %struct.GPR* %5160, i32 0, i32 27
  %5162 = getelementptr inbounds %struct.Reg, %struct.Reg* %5161, i32 0, i32 0
  %R13.i570 = bitcast %union.anon* %5162 to i64*
  %5163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5164 = getelementptr inbounds %struct.GPR, %struct.GPR* %5163, i32 0, i32 29
  %5165 = getelementptr inbounds %struct.Reg, %struct.Reg* %5164, i32 0, i32 0
  %R14.i571 = bitcast %union.anon* %5165 to i64*
  %5166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5167 = getelementptr inbounds %struct.GPR, %struct.GPR* %5166, i32 0, i32 31
  %5168 = getelementptr inbounds %struct.Reg, %struct.Reg* %5167, i32 0, i32 0
  %R15.i572 = bitcast %union.anon* %5168 to i64*
  %5169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5170 = getelementptr inbounds %struct.GPR, %struct.GPR* %5169, i32 0, i32 33
  %5171 = getelementptr inbounds %struct.Reg, %struct.Reg* %5170, i32 0, i32 0
  %RIP.i573 = bitcast %union.anon* %5171 to i64*
  %5172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %5173 = getelementptr inbounds %struct.Segments, %struct.Segments* %5172, i32 0, i32 1
  %SS.i574 = bitcast %union.SegmentSelector* %5173 to i16*
  %5174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %5175 = getelementptr inbounds %struct.Segments, %struct.Segments* %5174, i32 0, i32 3
  %ES.i575 = bitcast %union.SegmentSelector* %5175 to i16*
  %5176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %5177 = getelementptr inbounds %struct.Segments, %struct.Segments* %5176, i32 0, i32 5
  %GS.i576 = bitcast %union.SegmentSelector* %5177 to i16*
  %5178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %5179 = getelementptr inbounds %struct.Segments, %struct.Segments* %5178, i32 0, i32 7
  %FS.i577 = bitcast %union.SegmentSelector* %5179 to i16*
  %5180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %5181 = getelementptr inbounds %struct.Segments, %struct.Segments* %5180, i32 0, i32 9
  %DS.i578 = bitcast %union.SegmentSelector* %5181 to i16*
  %5182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %5183 = getelementptr inbounds %struct.Segments, %struct.Segments* %5182, i32 0, i32 11
  %CS.i579 = bitcast %union.SegmentSelector* %5183 to i16*
  %5184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %5185 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %5184, i32 0, i32 5
  %5186 = getelementptr inbounds %struct.Reg, %struct.Reg* %5185, i32 0, i32 0
  %GS_BASE.i580 = bitcast %union.anon* %5186 to i64*
  %5187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %5188 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %5187, i32 0, i32 7
  %5189 = getelementptr inbounds %struct.Reg, %struct.Reg* %5188, i32 0, i32 0
  %FS_BASE.i581 = bitcast %union.anon* %5189 to i64*
  %5190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5191 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5190, i64 0, i64 0
  %YMM0.i582 = bitcast %union.VectorReg* %5191 to %"class.std::bitset"*
  %5192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5193 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5192, i64 0, i64 1
  %YMM1.i583 = bitcast %union.VectorReg* %5193 to %"class.std::bitset"*
  %5194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5195 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5194, i64 0, i64 2
  %YMM2.i584 = bitcast %union.VectorReg* %5195 to %"class.std::bitset"*
  %5196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5197 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5196, i64 0, i64 3
  %YMM3.i585 = bitcast %union.VectorReg* %5197 to %"class.std::bitset"*
  %5198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5199 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5198, i64 0, i64 4
  %YMM4.i586 = bitcast %union.VectorReg* %5199 to %"class.std::bitset"*
  %5200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5201 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5200, i64 0, i64 5
  %YMM5.i587 = bitcast %union.VectorReg* %5201 to %"class.std::bitset"*
  %5202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5203 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5202, i64 0, i64 6
  %YMM6.i588 = bitcast %union.VectorReg* %5203 to %"class.std::bitset"*
  %5204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5205 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5204, i64 0, i64 7
  %YMM7.i589 = bitcast %union.VectorReg* %5205 to %"class.std::bitset"*
  %5206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5207 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5206, i64 0, i64 8
  %YMM8.i590 = bitcast %union.VectorReg* %5207 to %"class.std::bitset"*
  %5208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5209 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5208, i64 0, i64 9
  %YMM9.i591 = bitcast %union.VectorReg* %5209 to %"class.std::bitset"*
  %5210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5211 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5210, i64 0, i64 10
  %YMM10.i592 = bitcast %union.VectorReg* %5211 to %"class.std::bitset"*
  %5212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5213 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5212, i64 0, i64 11
  %YMM11.i593 = bitcast %union.VectorReg* %5213 to %"class.std::bitset"*
  %5214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5215 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5214, i64 0, i64 12
  %YMM12.i594 = bitcast %union.VectorReg* %5215 to %"class.std::bitset"*
  %5216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5217 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5216, i64 0, i64 13
  %YMM13.i595 = bitcast %union.VectorReg* %5217 to %"class.std::bitset"*
  %5218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5219 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5218, i64 0, i64 14
  %YMM14.i596 = bitcast %union.VectorReg* %5219 to %"class.std::bitset"*
  %5220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5221 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5220, i64 0, i64 15
  %YMM15.i597 = bitcast %union.VectorReg* %5221 to %"class.std::bitset"*
  %5222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5223 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5222, i64 0, i64 0
  %XMM0.i598 = bitcast %union.VectorReg* %5223 to %union.vec128_t*
  %5224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5225 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5224, i64 0, i64 1
  %XMM1.i599 = bitcast %union.VectorReg* %5225 to %union.vec128_t*
  %5226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5227 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5226, i64 0, i64 2
  %XMM2.i600 = bitcast %union.VectorReg* %5227 to %union.vec128_t*
  %5228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5229 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5228, i64 0, i64 3
  %XMM3.i601 = bitcast %union.VectorReg* %5229 to %union.vec128_t*
  %5230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5231 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5230, i64 0, i64 4
  %XMM4.i602 = bitcast %union.VectorReg* %5231 to %union.vec128_t*
  %5232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5233 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5232, i64 0, i64 5
  %XMM5.i603 = bitcast %union.VectorReg* %5233 to %union.vec128_t*
  %5234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5235 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5234, i64 0, i64 6
  %XMM6.i604 = bitcast %union.VectorReg* %5235 to %union.vec128_t*
  %5236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5237 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5236, i64 0, i64 7
  %XMM7.i605 = bitcast %union.VectorReg* %5237 to %union.vec128_t*
  %5238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5239 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5238, i64 0, i64 8
  %XMM8.i606 = bitcast %union.VectorReg* %5239 to %union.vec128_t*
  %5240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5241 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5240, i64 0, i64 9
  %XMM9.i607 = bitcast %union.VectorReg* %5241 to %union.vec128_t*
  %5242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5243 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5242, i64 0, i64 10
  %XMM10.i608 = bitcast %union.VectorReg* %5243 to %union.vec128_t*
  %5244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5245 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5244, i64 0, i64 11
  %XMM11.i609 = bitcast %union.VectorReg* %5245 to %union.vec128_t*
  %5246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5247 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5246, i64 0, i64 12
  %XMM12.i610 = bitcast %union.VectorReg* %5247 to %union.vec128_t*
  %5248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5249 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5248, i64 0, i64 13
  %XMM13.i611 = bitcast %union.VectorReg* %5249 to %union.vec128_t*
  %5250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5251 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5250, i64 0, i64 14
  %XMM14.i612 = bitcast %union.VectorReg* %5251 to %union.vec128_t*
  %5252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5253 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5252, i64 0, i64 15
  %XMM15.i613 = bitcast %union.VectorReg* %5253 to %union.vec128_t*
  %5254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %5255 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %5254, i32 0, i32 0
  %5256 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %5255, i64 0, i64 0
  %ST0.i614 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %5256, i32 0, i32 1
  %5257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %5258 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %5257, i32 0, i32 0
  %5259 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %5258, i64 0, i64 1
  %ST1.i615 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %5259, i32 0, i32 1
  %5260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %5261 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %5260, i32 0, i32 0
  %5262 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %5261, i64 0, i64 2
  %ST2.i616 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %5262, i32 0, i32 1
  %5263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %5264 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %5263, i32 0, i32 0
  %5265 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %5264, i64 0, i64 3
  %ST3.i617 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %5265, i32 0, i32 1
  %5266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %5267 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %5266, i32 0, i32 0
  %5268 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %5267, i64 0, i64 4
  %ST4.i618 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %5268, i32 0, i32 1
  %5269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %5270 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %5269, i32 0, i32 0
  %5271 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %5270, i64 0, i64 5
  %ST5.i619 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %5271, i32 0, i32 1
  %5272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %5273 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %5272, i32 0, i32 0
  %5274 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %5273, i64 0, i64 6
  %ST6.i620 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %5274, i32 0, i32 1
  %5275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %5276 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %5275, i32 0, i32 0
  %5277 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %5276, i64 0, i64 7
  %ST7.i621 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %5277, i32 0, i32 1
  %5278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %5279 = getelementptr inbounds %struct.MMX, %struct.MMX* %5278, i32 0, i32 0
  %5280 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %5279, i64 0, i64 0
  %5281 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %5280, i32 0, i32 1
  %5282 = bitcast %union.vec64_t* %5281 to %struct.uint64v1_t*
  %5283 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %5282, i32 0, i32 0
  %MM0.i622 = getelementptr inbounds [1 x i64], [1 x i64]* %5283, i64 0, i64 0
  %5284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %5285 = getelementptr inbounds %struct.MMX, %struct.MMX* %5284, i32 0, i32 0
  %5286 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %5285, i64 0, i64 1
  %5287 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %5286, i32 0, i32 1
  %5288 = bitcast %union.vec64_t* %5287 to %struct.uint64v1_t*
  %5289 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %5288, i32 0, i32 0
  %MM1.i623 = getelementptr inbounds [1 x i64], [1 x i64]* %5289, i64 0, i64 0
  %5290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %5291 = getelementptr inbounds %struct.MMX, %struct.MMX* %5290, i32 0, i32 0
  %5292 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %5291, i64 0, i64 2
  %5293 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %5292, i32 0, i32 1
  %5294 = bitcast %union.vec64_t* %5293 to %struct.uint64v1_t*
  %5295 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %5294, i32 0, i32 0
  %MM2.i624 = getelementptr inbounds [1 x i64], [1 x i64]* %5295, i64 0, i64 0
  %5296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %5297 = getelementptr inbounds %struct.MMX, %struct.MMX* %5296, i32 0, i32 0
  %5298 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %5297, i64 0, i64 3
  %5299 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %5298, i32 0, i32 1
  %5300 = bitcast %union.vec64_t* %5299 to %struct.uint64v1_t*
  %5301 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %5300, i32 0, i32 0
  %MM3.i625 = getelementptr inbounds [1 x i64], [1 x i64]* %5301, i64 0, i64 0
  %5302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %5303 = getelementptr inbounds %struct.MMX, %struct.MMX* %5302, i32 0, i32 0
  %5304 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %5303, i64 0, i64 4
  %5305 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %5304, i32 0, i32 1
  %5306 = bitcast %union.vec64_t* %5305 to %struct.uint64v1_t*
  %5307 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %5306, i32 0, i32 0
  %MM4.i626 = getelementptr inbounds [1 x i64], [1 x i64]* %5307, i64 0, i64 0
  %5308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %5309 = getelementptr inbounds %struct.MMX, %struct.MMX* %5308, i32 0, i32 0
  %5310 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %5309, i64 0, i64 5
  %5311 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %5310, i32 0, i32 1
  %5312 = bitcast %union.vec64_t* %5311 to %struct.uint64v1_t*
  %5313 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %5312, i32 0, i32 0
  %MM5.i627 = getelementptr inbounds [1 x i64], [1 x i64]* %5313, i64 0, i64 0
  %5314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %5315 = getelementptr inbounds %struct.MMX, %struct.MMX* %5314, i32 0, i32 0
  %5316 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %5315, i64 0, i64 6
  %5317 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %5316, i32 0, i32 1
  %5318 = bitcast %union.vec64_t* %5317 to %struct.uint64v1_t*
  %5319 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %5318, i32 0, i32 0
  %MM6.i628 = getelementptr inbounds [1 x i64], [1 x i64]* %5319, i64 0, i64 0
  %5320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %5321 = getelementptr inbounds %struct.MMX, %struct.MMX* %5320, i32 0, i32 0
  %5322 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %5321, i64 0, i64 7
  %5323 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %5322, i32 0, i32 1
  %5324 = bitcast %union.vec64_t* %5323 to %struct.uint64v1_t*
  %5325 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %5324, i32 0, i32 0
  %MM7.i629 = getelementptr inbounds [1 x i64], [1 x i64]* %5325, i64 0, i64 0
  %5326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF.i630 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %5326, i32 0, i32 5
  %5327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF.i631 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %5327, i32 0, i32 1
  %5328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF.i632 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %5328, i32 0, i32 11
  %5329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF.i633 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %5329, i32 0, i32 13
  %5330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF.i634 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %5330, i32 0, i32 3
  %5331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF.i635 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %5331, i32 0, i32 9
  %5332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF.i636 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %5332, i32 0, i32 7
  store i64* @DR0, i64** %_DR0.i488, align 8, !noalias !2492
  store i64* @DR1, i64** %_DR1.i489, align 8, !noalias !2492
  store i64* @DR2, i64** %_DR2.i490, align 8, !noalias !2492
  store i64* @DR3, i64** %_DR3.i491, align 8, !noalias !2492
  store i64* @DR4, i64** %_DR4.i492, align 8, !noalias !2492
  store i64* @DR5, i64** %_DR5.i493, align 8, !noalias !2492
  store i64* @DR6, i64** %_DR6.i494, align 8, !noalias !2492
  store i64* @DR7, i64** %_DR7.i495, align 8, !noalias !2492
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0.i496, align 8, !noalias !2492
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1.i497, align 8, !noalias !2492
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2.i498, align 8, !noalias !2492
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3.i499, align 8, !noalias !2492
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4.i500, align 8, !noalias !2492
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8.i501, align 8, !noalias !2492
  %5333 = bitcast %"class.std::bitset"* %YMM0.i582 to double*
  %5334 = load double, double* %5333, !alias.scope !2496, !noalias !2497
  %5335 = load i64, i64* %RSP.i563, !alias.scope !2496, !noalias !2497
  %5336 = load %struct.Memory*, %struct.Memory** %MEMORY.i487, !noalias !2492
  %5337 = inttoptr i64 %5335 to i64*
  %5338 = load i64, i64* %5337
  store i64 %5338, i64* %PC.i502, !alias.scope !2496, !noalias !2497
  %5339 = add i64 %5335, 8
  store i64 %5339, i64* %RSP.i563, !alias.scope !2496, !noalias !2497
  %5340 = call double @sin(double %5334)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0.i582, !alias.scope !2496, !noalias !2497
  %5341 = bitcast %"class.std::bitset"* %YMM0.i582 to double*
  store double %5340, double* %5341, !alias.scope !2496, !noalias !2497
  %5342 = load %struct.Memory*, %struct.Memory** %MEMORY.i487, !noalias !2492
  %5343 = bitcast %struct.State** %state.i478 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5343)
  %5344 = bitcast i64* %curr_pc.i479 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5344)
  %5345 = bitcast %struct.Memory** %memory.i480 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5345)
  call void @llvm.lifetime.end(i64 1, i8* %BRANCH_TAKEN.i481)
  %5346 = bitcast i64* %SS_BASE.i482 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5346)
  %5347 = bitcast i64* %ES_BASE.i483 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5347)
  %5348 = bitcast i64* %DS_BASE.i484 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5348)
  %5349 = bitcast i64* %CS_BASE.i485 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5349)
  %5350 = bitcast %struct.State** %STATE.i486 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5350)
  %5351 = bitcast %struct.Memory** %MEMORY.i487 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5351)
  %5352 = bitcast i64** %_DR0.i488 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5352)
  %5353 = bitcast i64** %_DR1.i489 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5353)
  %5354 = bitcast i64** %_DR2.i490 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5354)
  %5355 = bitcast i64** %_DR3.i491 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5355)
  %5356 = bitcast i64** %_DR4.i492 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5356)
  %5357 = bitcast i64** %_DR5.i493 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5357)
  %5358 = bitcast i64** %_DR6.i494 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5358)
  %5359 = bitcast i64** %_DR7.i495 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5359)
  %5360 = bitcast i64** %CR0.i496 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5360)
  %5361 = bitcast i64** %CR1.i497 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5361)
  %5362 = bitcast i64** %CR2.i498 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5362)
  %5363 = bitcast i64** %CR3.i499 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5363)
  %5364 = bitcast i64** %CR4.i500 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5364)
  %5365 = bitcast i64** %CR8.i501 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5365)
  %5366 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %5367 = load i64, i64* %RBP
  %5368 = sub i64 %5367, 288
  %5369 = load i64, i64* %PC
  %5370 = add i64 %5369, 8
  store i64 %5370, i64* %PC
  %5371 = inttoptr i64 %5368 to double*
  %5372 = load double, double* %5371
  %5373 = bitcast i8* %5366 to double*
  store double %5372, double* %5373, align 1, !tbaa !2451
  %5374 = getelementptr inbounds i8, i8* %5366, i64 8
  %5375 = bitcast i8* %5374 to double*
  store double 0.000000e+00, double* %5375, align 1, !tbaa !2451
  %5376 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %5377 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %5378 = bitcast %union.vec128_t* %XMM0 to i8*
  %5379 = load i64, i64* %PC
  %5380 = add i64 %5379, 4
  store i64 %5380, i64* %PC
  %5381 = bitcast i8* %5377 to double*
  %5382 = load double, double* %5381, align 1
  %5383 = getelementptr inbounds i8, i8* %5377, i64 8
  %5384 = bitcast i8* %5383 to i64*
  %5385 = load i64, i64* %5384, align 1
  %5386 = bitcast i8* %5378 to double*
  %5387 = load double, double* %5386, align 1
  %5388 = fmul double %5382, %5387
  %5389 = bitcast i8* %5376 to double*
  store double %5388, double* %5389, align 1, !tbaa !2451
  %5390 = getelementptr inbounds i8, i8* %5376, i64 8
  %5391 = bitcast i8* %5390 to i64*
  store i64 %5385, i64* %5391, align 1, !tbaa !2451
  %5392 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %5393 = load i64, i64* %RBP
  %5394 = sub i64 %5393, 152
  %5395 = load i64, i64* %PC
  %5396 = add i64 %5395, 8
  store i64 %5396, i64* %PC
  %5397 = inttoptr i64 %5394 to double*
  %5398 = load double, double* %5397
  %5399 = bitcast i8* %5392 to double*
  store double %5398, double* %5399, align 1, !tbaa !2451
  %5400 = getelementptr inbounds i8, i8* %5392, i64 8
  %5401 = bitcast i8* %5400 to double*
  store double 0.000000e+00, double* %5401, align 1, !tbaa !2451
  %5402 = load i64, i64* %RBP
  %5403 = sub i64 %5402, 296
  %5404 = bitcast %union.vec128_t* %XMM1 to i8*
  %5405 = load i64, i64* %PC
  %5406 = add i64 %5405, 8
  store i64 %5406, i64* %PC
  %5407 = bitcast i8* %5404 to double*
  %5408 = load double, double* %5407, align 1
  %5409 = inttoptr i64 %5403 to double*
  store double %5408, double* %5409
  %5410 = load i64, i64* %PC
  %5411 = sub i64 %5410, 2693
  %5412 = load i64, i64* %PC
  %5413 = add i64 %5412, 5
  %5414 = load i64, i64* %PC
  %5415 = add i64 %5414, 5
  store i64 %5415, i64* %PC
  %5416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %5417 = load i64, i64* %5416, align 8, !tbaa !2428
  %5418 = add i64 %5417, -8
  %5419 = inttoptr i64 %5418 to i64*
  store i64 %5413, i64* %5419
  store i64 %5418, i64* %5416, align 8, !tbaa !2428
  %5420 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5411, i64* %5420, align 8, !tbaa !2428
  %5421 = load i64, i64* %PC
  %5422 = bitcast %struct.State** %state.i319 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5422)
  %5423 = bitcast i64* %curr_pc.i320 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5423)
  %5424 = bitcast %struct.Memory** %memory.i321 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5424)
  call void @llvm.lifetime.start(i64 1, i8* %BRANCH_TAKEN.i322)
  %5425 = bitcast i64* %SS_BASE.i323 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5425)
  %5426 = bitcast i64* %ES_BASE.i324 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5426)
  %5427 = bitcast i64* %DS_BASE.i325 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5427)
  %5428 = bitcast i64* %CS_BASE.i326 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5428)
  %5429 = bitcast %struct.State** %STATE.i327 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5429)
  %5430 = bitcast %struct.Memory** %MEMORY.i328 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5430)
  %5431 = bitcast i64** %_DR0.i329 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5431)
  %5432 = bitcast i64** %_DR1.i330 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5432)
  %5433 = bitcast i64** %_DR2.i331 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5433)
  %5434 = bitcast i64** %_DR3.i332 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5434)
  %5435 = bitcast i64** %_DR4.i333 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5435)
  %5436 = bitcast i64** %_DR5.i334 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5436)
  %5437 = bitcast i64** %_DR6.i335 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5437)
  %5438 = bitcast i64** %_DR7.i336 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5438)
  %5439 = bitcast i64** %CR0.i337 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5439)
  %5440 = bitcast i64** %CR1.i338 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5440)
  %5441 = bitcast i64** %CR2.i339 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5441)
  %5442 = bitcast i64** %CR3.i340 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5442)
  %5443 = bitcast i64** %CR4.i341 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5443)
  %5444 = bitcast i64** %CR8.i342 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5444)
  store %struct.State* %0, %struct.State** %state.i319, align 8, !noalias !2498
  store i64 %5421, i64* %curr_pc.i320, align 8, !noalias !2498
  store %struct.Memory* %5342, %struct.Memory** %memory.i321, align 8, !noalias !2498
  store i8 0, i8* %BRANCH_TAKEN.i322, align 1, !noalias !2498
  store i64 0, i64* %SS_BASE.i323, align 8, !noalias !2498
  store i64 0, i64* %ES_BASE.i324, align 8, !noalias !2498
  store i64 0, i64* %DS_BASE.i325, align 8, !noalias !2498
  store i64 0, i64* %CS_BASE.i326, align 8, !noalias !2498
  store %struct.State* %0, %struct.State** %STATE.i327, align 8, !noalias !2498
  store %struct.Memory* %5342, %struct.Memory** %MEMORY.i328, align 8, !noalias !2498
  %5445 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5446 = getelementptr inbounds %struct.GPR, %struct.GPR* %5445, i32 0, i32 33
  %5447 = getelementptr inbounds %struct.Reg, %struct.Reg* %5446, i32 0, i32 0
  %PC.i343 = bitcast %union.anon* %5447 to i64*
  store i64 %5421, i64* %PC.i343, align 8, !alias.scope !2502, !noalias !2503
  %5448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5449 = getelementptr inbounds %struct.GPR, %struct.GPR* %5448, i32 0, i32 1
  %5450 = getelementptr inbounds %struct.Reg, %struct.Reg* %5449, i32 0, i32 0
  %5451 = bitcast %union.anon* %5450 to %struct.anon.2*
  %AH.i344 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5451, i32 0, i32 1
  %5452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5453 = getelementptr inbounds %struct.GPR, %struct.GPR* %5452, i32 0, i32 3
  %5454 = getelementptr inbounds %struct.Reg, %struct.Reg* %5453, i32 0, i32 0
  %5455 = bitcast %union.anon* %5454 to %struct.anon.2*
  %BH.i345 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5455, i32 0, i32 1
  %5456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5457 = getelementptr inbounds %struct.GPR, %struct.GPR* %5456, i32 0, i32 5
  %5458 = getelementptr inbounds %struct.Reg, %struct.Reg* %5457, i32 0, i32 0
  %5459 = bitcast %union.anon* %5458 to %struct.anon.2*
  %CH.i346 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5459, i32 0, i32 1
  %5460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5461 = getelementptr inbounds %struct.GPR, %struct.GPR* %5460, i32 0, i32 7
  %5462 = getelementptr inbounds %struct.Reg, %struct.Reg* %5461, i32 0, i32 0
  %5463 = bitcast %union.anon* %5462 to %struct.anon.2*
  %DH.i347 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5463, i32 0, i32 1
  %5464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5465 = getelementptr inbounds %struct.GPR, %struct.GPR* %5464, i32 0, i32 1
  %5466 = getelementptr inbounds %struct.Reg, %struct.Reg* %5465, i32 0, i32 0
  %5467 = bitcast %union.anon* %5466 to %struct.anon.2*
  %AL.i348 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5467, i32 0, i32 0
  %5468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5469 = getelementptr inbounds %struct.GPR, %struct.GPR* %5468, i32 0, i32 3
  %5470 = getelementptr inbounds %struct.Reg, %struct.Reg* %5469, i32 0, i32 0
  %5471 = bitcast %union.anon* %5470 to %struct.anon.2*
  %BL.i349 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5471, i32 0, i32 0
  %5472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5473 = getelementptr inbounds %struct.GPR, %struct.GPR* %5472, i32 0, i32 5
  %5474 = getelementptr inbounds %struct.Reg, %struct.Reg* %5473, i32 0, i32 0
  %5475 = bitcast %union.anon* %5474 to %struct.anon.2*
  %CL.i350 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5475, i32 0, i32 0
  %5476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5477 = getelementptr inbounds %struct.GPR, %struct.GPR* %5476, i32 0, i32 7
  %5478 = getelementptr inbounds %struct.Reg, %struct.Reg* %5477, i32 0, i32 0
  %5479 = bitcast %union.anon* %5478 to %struct.anon.2*
  %DL.i351 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5479, i32 0, i32 0
  %5480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5481 = getelementptr inbounds %struct.GPR, %struct.GPR* %5480, i32 0, i32 9
  %5482 = getelementptr inbounds %struct.Reg, %struct.Reg* %5481, i32 0, i32 0
  %5483 = bitcast %union.anon* %5482 to %struct.anon.2*
  %SIL.i352 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5483, i32 0, i32 0
  %5484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5485 = getelementptr inbounds %struct.GPR, %struct.GPR* %5484, i32 0, i32 11
  %5486 = getelementptr inbounds %struct.Reg, %struct.Reg* %5485, i32 0, i32 0
  %5487 = bitcast %union.anon* %5486 to %struct.anon.2*
  %DIL.i353 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5487, i32 0, i32 0
  %5488 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5489 = getelementptr inbounds %struct.GPR, %struct.GPR* %5488, i32 0, i32 13
  %5490 = getelementptr inbounds %struct.Reg, %struct.Reg* %5489, i32 0, i32 0
  %5491 = bitcast %union.anon* %5490 to %struct.anon.2*
  %SPL.i354 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5491, i32 0, i32 0
  %5492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5493 = getelementptr inbounds %struct.GPR, %struct.GPR* %5492, i32 0, i32 15
  %5494 = getelementptr inbounds %struct.Reg, %struct.Reg* %5493, i32 0, i32 0
  %5495 = bitcast %union.anon* %5494 to %struct.anon.2*
  %BPL.i355 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5495, i32 0, i32 0
  %5496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5497 = getelementptr inbounds %struct.GPR, %struct.GPR* %5496, i32 0, i32 17
  %5498 = getelementptr inbounds %struct.Reg, %struct.Reg* %5497, i32 0, i32 0
  %5499 = bitcast %union.anon* %5498 to %struct.anon.2*
  %R8B.i356 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5499, i32 0, i32 0
  %5500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5501 = getelementptr inbounds %struct.GPR, %struct.GPR* %5500, i32 0, i32 19
  %5502 = getelementptr inbounds %struct.Reg, %struct.Reg* %5501, i32 0, i32 0
  %5503 = bitcast %union.anon* %5502 to %struct.anon.2*
  %R9B.i357 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5503, i32 0, i32 0
  %5504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5505 = getelementptr inbounds %struct.GPR, %struct.GPR* %5504, i32 0, i32 21
  %5506 = getelementptr inbounds %struct.Reg, %struct.Reg* %5505, i32 0, i32 0
  %5507 = bitcast %union.anon* %5506 to %struct.anon.2*
  %R10B.i358 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5507, i32 0, i32 0
  %5508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5509 = getelementptr inbounds %struct.GPR, %struct.GPR* %5508, i32 0, i32 23
  %5510 = getelementptr inbounds %struct.Reg, %struct.Reg* %5509, i32 0, i32 0
  %5511 = bitcast %union.anon* %5510 to %struct.anon.2*
  %R11B.i359 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5511, i32 0, i32 0
  %5512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5513 = getelementptr inbounds %struct.GPR, %struct.GPR* %5512, i32 0, i32 25
  %5514 = getelementptr inbounds %struct.Reg, %struct.Reg* %5513, i32 0, i32 0
  %5515 = bitcast %union.anon* %5514 to %struct.anon.2*
  %R12B.i360 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5515, i32 0, i32 0
  %5516 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5517 = getelementptr inbounds %struct.GPR, %struct.GPR* %5516, i32 0, i32 27
  %5518 = getelementptr inbounds %struct.Reg, %struct.Reg* %5517, i32 0, i32 0
  %5519 = bitcast %union.anon* %5518 to %struct.anon.2*
  %R13B.i361 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5519, i32 0, i32 0
  %5520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5521 = getelementptr inbounds %struct.GPR, %struct.GPR* %5520, i32 0, i32 29
  %5522 = getelementptr inbounds %struct.Reg, %struct.Reg* %5521, i32 0, i32 0
  %5523 = bitcast %union.anon* %5522 to %struct.anon.2*
  %R14B.i362 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5523, i32 0, i32 0
  %5524 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5525 = getelementptr inbounds %struct.GPR, %struct.GPR* %5524, i32 0, i32 31
  %5526 = getelementptr inbounds %struct.Reg, %struct.Reg* %5525, i32 0, i32 0
  %5527 = bitcast %union.anon* %5526 to %struct.anon.2*
  %R15B.i363 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5527, i32 0, i32 0
  %5528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5529 = getelementptr inbounds %struct.GPR, %struct.GPR* %5528, i32 0, i32 1
  %5530 = getelementptr inbounds %struct.Reg, %struct.Reg* %5529, i32 0, i32 0
  %AX.i364 = bitcast %union.anon* %5530 to i16*
  %5531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5532 = getelementptr inbounds %struct.GPR, %struct.GPR* %5531, i32 0, i32 3
  %5533 = getelementptr inbounds %struct.Reg, %struct.Reg* %5532, i32 0, i32 0
  %BX.i365 = bitcast %union.anon* %5533 to i16*
  %5534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5535 = getelementptr inbounds %struct.GPR, %struct.GPR* %5534, i32 0, i32 5
  %5536 = getelementptr inbounds %struct.Reg, %struct.Reg* %5535, i32 0, i32 0
  %CX.i366 = bitcast %union.anon* %5536 to i16*
  %5537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5538 = getelementptr inbounds %struct.GPR, %struct.GPR* %5537, i32 0, i32 7
  %5539 = getelementptr inbounds %struct.Reg, %struct.Reg* %5538, i32 0, i32 0
  %DX.i367 = bitcast %union.anon* %5539 to i16*
  %5540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5541 = getelementptr inbounds %struct.GPR, %struct.GPR* %5540, i32 0, i32 9
  %5542 = getelementptr inbounds %struct.Reg, %struct.Reg* %5541, i32 0, i32 0
  %SI.i368 = bitcast %union.anon* %5542 to i16*
  %5543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5544 = getelementptr inbounds %struct.GPR, %struct.GPR* %5543, i32 0, i32 11
  %5545 = getelementptr inbounds %struct.Reg, %struct.Reg* %5544, i32 0, i32 0
  %DI.i369 = bitcast %union.anon* %5545 to i16*
  %5546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5547 = getelementptr inbounds %struct.GPR, %struct.GPR* %5546, i32 0, i32 13
  %5548 = getelementptr inbounds %struct.Reg, %struct.Reg* %5547, i32 0, i32 0
  %SP.i370 = bitcast %union.anon* %5548 to i16*
  %5549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5550 = getelementptr inbounds %struct.GPR, %struct.GPR* %5549, i32 0, i32 15
  %5551 = getelementptr inbounds %struct.Reg, %struct.Reg* %5550, i32 0, i32 0
  %BP.i371 = bitcast %union.anon* %5551 to i16*
  %5552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5553 = getelementptr inbounds %struct.GPR, %struct.GPR* %5552, i32 0, i32 17
  %5554 = getelementptr inbounds %struct.Reg, %struct.Reg* %5553, i32 0, i32 0
  %R8W.i372 = bitcast %union.anon* %5554 to i16*
  %5555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5556 = getelementptr inbounds %struct.GPR, %struct.GPR* %5555, i32 0, i32 19
  %5557 = getelementptr inbounds %struct.Reg, %struct.Reg* %5556, i32 0, i32 0
  %R9W.i373 = bitcast %union.anon* %5557 to i16*
  %5558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5559 = getelementptr inbounds %struct.GPR, %struct.GPR* %5558, i32 0, i32 21
  %5560 = getelementptr inbounds %struct.Reg, %struct.Reg* %5559, i32 0, i32 0
  %R10W.i374 = bitcast %union.anon* %5560 to i16*
  %5561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5562 = getelementptr inbounds %struct.GPR, %struct.GPR* %5561, i32 0, i32 23
  %5563 = getelementptr inbounds %struct.Reg, %struct.Reg* %5562, i32 0, i32 0
  %R11W.i375 = bitcast %union.anon* %5563 to i16*
  %5564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5565 = getelementptr inbounds %struct.GPR, %struct.GPR* %5564, i32 0, i32 25
  %5566 = getelementptr inbounds %struct.Reg, %struct.Reg* %5565, i32 0, i32 0
  %R12W.i376 = bitcast %union.anon* %5566 to i16*
  %5567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5568 = getelementptr inbounds %struct.GPR, %struct.GPR* %5567, i32 0, i32 27
  %5569 = getelementptr inbounds %struct.Reg, %struct.Reg* %5568, i32 0, i32 0
  %R13W.i377 = bitcast %union.anon* %5569 to i16*
  %5570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5571 = getelementptr inbounds %struct.GPR, %struct.GPR* %5570, i32 0, i32 29
  %5572 = getelementptr inbounds %struct.Reg, %struct.Reg* %5571, i32 0, i32 0
  %R14W.i378 = bitcast %union.anon* %5572 to i16*
  %5573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5574 = getelementptr inbounds %struct.GPR, %struct.GPR* %5573, i32 0, i32 31
  %5575 = getelementptr inbounds %struct.Reg, %struct.Reg* %5574, i32 0, i32 0
  %R15W.i379 = bitcast %union.anon* %5575 to i16*
  %5576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5577 = getelementptr inbounds %struct.GPR, %struct.GPR* %5576, i32 0, i32 33
  %5578 = getelementptr inbounds %struct.Reg, %struct.Reg* %5577, i32 0, i32 0
  %IP.i380 = bitcast %union.anon* %5578 to i16*
  %5579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5580 = getelementptr inbounds %struct.GPR, %struct.GPR* %5579, i32 0, i32 1
  %5581 = getelementptr inbounds %struct.Reg, %struct.Reg* %5580, i32 0, i32 0
  %EAX.i381 = bitcast %union.anon* %5581 to i32*
  %5582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5583 = getelementptr inbounds %struct.GPR, %struct.GPR* %5582, i32 0, i32 3
  %5584 = getelementptr inbounds %struct.Reg, %struct.Reg* %5583, i32 0, i32 0
  %EBX.i382 = bitcast %union.anon* %5584 to i32*
  %5585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5586 = getelementptr inbounds %struct.GPR, %struct.GPR* %5585, i32 0, i32 5
  %5587 = getelementptr inbounds %struct.Reg, %struct.Reg* %5586, i32 0, i32 0
  %ECX.i383 = bitcast %union.anon* %5587 to i32*
  %5588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5589 = getelementptr inbounds %struct.GPR, %struct.GPR* %5588, i32 0, i32 7
  %5590 = getelementptr inbounds %struct.Reg, %struct.Reg* %5589, i32 0, i32 0
  %EDX.i384 = bitcast %union.anon* %5590 to i32*
  %5591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5592 = getelementptr inbounds %struct.GPR, %struct.GPR* %5591, i32 0, i32 9
  %5593 = getelementptr inbounds %struct.Reg, %struct.Reg* %5592, i32 0, i32 0
  %ESI.i385 = bitcast %union.anon* %5593 to i32*
  %5594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5595 = getelementptr inbounds %struct.GPR, %struct.GPR* %5594, i32 0, i32 11
  %5596 = getelementptr inbounds %struct.Reg, %struct.Reg* %5595, i32 0, i32 0
  %EDI.i386 = bitcast %union.anon* %5596 to i32*
  %5597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5598 = getelementptr inbounds %struct.GPR, %struct.GPR* %5597, i32 0, i32 13
  %5599 = getelementptr inbounds %struct.Reg, %struct.Reg* %5598, i32 0, i32 0
  %ESP.i387 = bitcast %union.anon* %5599 to i32*
  %5600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5601 = getelementptr inbounds %struct.GPR, %struct.GPR* %5600, i32 0, i32 15
  %5602 = getelementptr inbounds %struct.Reg, %struct.Reg* %5601, i32 0, i32 0
  %EBP.i388 = bitcast %union.anon* %5602 to i32*
  %5603 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5604 = getelementptr inbounds %struct.GPR, %struct.GPR* %5603, i32 0, i32 33
  %5605 = getelementptr inbounds %struct.Reg, %struct.Reg* %5604, i32 0, i32 0
  %EIP.i389 = bitcast %union.anon* %5605 to i32*
  %5606 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5607 = getelementptr inbounds %struct.GPR, %struct.GPR* %5606, i32 0, i32 17
  %5608 = getelementptr inbounds %struct.Reg, %struct.Reg* %5607, i32 0, i32 0
  %R8D.i390 = bitcast %union.anon* %5608 to i32*
  %5609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5610 = getelementptr inbounds %struct.GPR, %struct.GPR* %5609, i32 0, i32 19
  %5611 = getelementptr inbounds %struct.Reg, %struct.Reg* %5610, i32 0, i32 0
  %R9D.i391 = bitcast %union.anon* %5611 to i32*
  %5612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5613 = getelementptr inbounds %struct.GPR, %struct.GPR* %5612, i32 0, i32 21
  %5614 = getelementptr inbounds %struct.Reg, %struct.Reg* %5613, i32 0, i32 0
  %R10D.i392 = bitcast %union.anon* %5614 to i32*
  %5615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5616 = getelementptr inbounds %struct.GPR, %struct.GPR* %5615, i32 0, i32 23
  %5617 = getelementptr inbounds %struct.Reg, %struct.Reg* %5616, i32 0, i32 0
  %R11D.i393 = bitcast %union.anon* %5617 to i32*
  %5618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5619 = getelementptr inbounds %struct.GPR, %struct.GPR* %5618, i32 0, i32 25
  %5620 = getelementptr inbounds %struct.Reg, %struct.Reg* %5619, i32 0, i32 0
  %R12D.i394 = bitcast %union.anon* %5620 to i32*
  %5621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5622 = getelementptr inbounds %struct.GPR, %struct.GPR* %5621, i32 0, i32 27
  %5623 = getelementptr inbounds %struct.Reg, %struct.Reg* %5622, i32 0, i32 0
  %R13D.i395 = bitcast %union.anon* %5623 to i32*
  %5624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5625 = getelementptr inbounds %struct.GPR, %struct.GPR* %5624, i32 0, i32 29
  %5626 = getelementptr inbounds %struct.Reg, %struct.Reg* %5625, i32 0, i32 0
  %R14D.i396 = bitcast %union.anon* %5626 to i32*
  %5627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5628 = getelementptr inbounds %struct.GPR, %struct.GPR* %5627, i32 0, i32 31
  %5629 = getelementptr inbounds %struct.Reg, %struct.Reg* %5628, i32 0, i32 0
  %R15D.i397 = bitcast %union.anon* %5629 to i32*
  %5630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5631 = getelementptr inbounds %struct.GPR, %struct.GPR* %5630, i32 0, i32 1
  %5632 = getelementptr inbounds %struct.Reg, %struct.Reg* %5631, i32 0, i32 0
  %RAX.i398 = bitcast %union.anon* %5632 to i64*
  %5633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5634 = getelementptr inbounds %struct.GPR, %struct.GPR* %5633, i32 0, i32 3
  %5635 = getelementptr inbounds %struct.Reg, %struct.Reg* %5634, i32 0, i32 0
  %RBX.i399 = bitcast %union.anon* %5635 to i64*
  %5636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5637 = getelementptr inbounds %struct.GPR, %struct.GPR* %5636, i32 0, i32 5
  %5638 = getelementptr inbounds %struct.Reg, %struct.Reg* %5637, i32 0, i32 0
  %RCX.i400 = bitcast %union.anon* %5638 to i64*
  %5639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5640 = getelementptr inbounds %struct.GPR, %struct.GPR* %5639, i32 0, i32 7
  %5641 = getelementptr inbounds %struct.Reg, %struct.Reg* %5640, i32 0, i32 0
  %RDX.i401 = bitcast %union.anon* %5641 to i64*
  %5642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5643 = getelementptr inbounds %struct.GPR, %struct.GPR* %5642, i32 0, i32 9
  %5644 = getelementptr inbounds %struct.Reg, %struct.Reg* %5643, i32 0, i32 0
  %RSI.i402 = bitcast %union.anon* %5644 to i64*
  %5645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5646 = getelementptr inbounds %struct.GPR, %struct.GPR* %5645, i32 0, i32 11
  %5647 = getelementptr inbounds %struct.Reg, %struct.Reg* %5646, i32 0, i32 0
  %RDI.i403 = bitcast %union.anon* %5647 to i64*
  %5648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5649 = getelementptr inbounds %struct.GPR, %struct.GPR* %5648, i32 0, i32 13
  %5650 = getelementptr inbounds %struct.Reg, %struct.Reg* %5649, i32 0, i32 0
  %RSP.i404 = bitcast %union.anon* %5650 to i64*
  %5651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5652 = getelementptr inbounds %struct.GPR, %struct.GPR* %5651, i32 0, i32 15
  %5653 = getelementptr inbounds %struct.Reg, %struct.Reg* %5652, i32 0, i32 0
  %RBP.i405 = bitcast %union.anon* %5653 to i64*
  %5654 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5655 = getelementptr inbounds %struct.GPR, %struct.GPR* %5654, i32 0, i32 17
  %5656 = getelementptr inbounds %struct.Reg, %struct.Reg* %5655, i32 0, i32 0
  %R8.i406 = bitcast %union.anon* %5656 to i64*
  %5657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5658 = getelementptr inbounds %struct.GPR, %struct.GPR* %5657, i32 0, i32 19
  %5659 = getelementptr inbounds %struct.Reg, %struct.Reg* %5658, i32 0, i32 0
  %R9.i407 = bitcast %union.anon* %5659 to i64*
  %5660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5661 = getelementptr inbounds %struct.GPR, %struct.GPR* %5660, i32 0, i32 21
  %5662 = getelementptr inbounds %struct.Reg, %struct.Reg* %5661, i32 0, i32 0
  %R10.i408 = bitcast %union.anon* %5662 to i64*
  %5663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5664 = getelementptr inbounds %struct.GPR, %struct.GPR* %5663, i32 0, i32 23
  %5665 = getelementptr inbounds %struct.Reg, %struct.Reg* %5664, i32 0, i32 0
  %R11.i409 = bitcast %union.anon* %5665 to i64*
  %5666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5667 = getelementptr inbounds %struct.GPR, %struct.GPR* %5666, i32 0, i32 25
  %5668 = getelementptr inbounds %struct.Reg, %struct.Reg* %5667, i32 0, i32 0
  %R12.i410 = bitcast %union.anon* %5668 to i64*
  %5669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5670 = getelementptr inbounds %struct.GPR, %struct.GPR* %5669, i32 0, i32 27
  %5671 = getelementptr inbounds %struct.Reg, %struct.Reg* %5670, i32 0, i32 0
  %R13.i411 = bitcast %union.anon* %5671 to i64*
  %5672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5673 = getelementptr inbounds %struct.GPR, %struct.GPR* %5672, i32 0, i32 29
  %5674 = getelementptr inbounds %struct.Reg, %struct.Reg* %5673, i32 0, i32 0
  %R14.i412 = bitcast %union.anon* %5674 to i64*
  %5675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5676 = getelementptr inbounds %struct.GPR, %struct.GPR* %5675, i32 0, i32 31
  %5677 = getelementptr inbounds %struct.Reg, %struct.Reg* %5676, i32 0, i32 0
  %R15.i413 = bitcast %union.anon* %5677 to i64*
  %5678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5679 = getelementptr inbounds %struct.GPR, %struct.GPR* %5678, i32 0, i32 33
  %5680 = getelementptr inbounds %struct.Reg, %struct.Reg* %5679, i32 0, i32 0
  %RIP.i414 = bitcast %union.anon* %5680 to i64*
  %5681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %5682 = getelementptr inbounds %struct.Segments, %struct.Segments* %5681, i32 0, i32 1
  %SS.i415 = bitcast %union.SegmentSelector* %5682 to i16*
  %5683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %5684 = getelementptr inbounds %struct.Segments, %struct.Segments* %5683, i32 0, i32 3
  %ES.i416 = bitcast %union.SegmentSelector* %5684 to i16*
  %5685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %5686 = getelementptr inbounds %struct.Segments, %struct.Segments* %5685, i32 0, i32 5
  %GS.i417 = bitcast %union.SegmentSelector* %5686 to i16*
  %5687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %5688 = getelementptr inbounds %struct.Segments, %struct.Segments* %5687, i32 0, i32 7
  %FS.i418 = bitcast %union.SegmentSelector* %5688 to i16*
  %5689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %5690 = getelementptr inbounds %struct.Segments, %struct.Segments* %5689, i32 0, i32 9
  %DS.i419 = bitcast %union.SegmentSelector* %5690 to i16*
  %5691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %5692 = getelementptr inbounds %struct.Segments, %struct.Segments* %5691, i32 0, i32 11
  %CS.i420 = bitcast %union.SegmentSelector* %5692 to i16*
  %5693 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %5694 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %5693, i32 0, i32 5
  %5695 = getelementptr inbounds %struct.Reg, %struct.Reg* %5694, i32 0, i32 0
  %GS_BASE.i421 = bitcast %union.anon* %5695 to i64*
  %5696 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %5697 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %5696, i32 0, i32 7
  %5698 = getelementptr inbounds %struct.Reg, %struct.Reg* %5697, i32 0, i32 0
  %FS_BASE.i422 = bitcast %union.anon* %5698 to i64*
  %5699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5700 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5699, i64 0, i64 0
  %YMM0.i423 = bitcast %union.VectorReg* %5700 to %"class.std::bitset"*
  %5701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5702 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5701, i64 0, i64 1
  %YMM1.i424 = bitcast %union.VectorReg* %5702 to %"class.std::bitset"*
  %5703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5704 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5703, i64 0, i64 2
  %YMM2.i425 = bitcast %union.VectorReg* %5704 to %"class.std::bitset"*
  %5705 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5706 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5705, i64 0, i64 3
  %YMM3.i426 = bitcast %union.VectorReg* %5706 to %"class.std::bitset"*
  %5707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5708 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5707, i64 0, i64 4
  %YMM4.i427 = bitcast %union.VectorReg* %5708 to %"class.std::bitset"*
  %5709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5710 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5709, i64 0, i64 5
  %YMM5.i428 = bitcast %union.VectorReg* %5710 to %"class.std::bitset"*
  %5711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5712 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5711, i64 0, i64 6
  %YMM6.i429 = bitcast %union.VectorReg* %5712 to %"class.std::bitset"*
  %5713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5714 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5713, i64 0, i64 7
  %YMM7.i430 = bitcast %union.VectorReg* %5714 to %"class.std::bitset"*
  %5715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5716 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5715, i64 0, i64 8
  %YMM8.i431 = bitcast %union.VectorReg* %5716 to %"class.std::bitset"*
  %5717 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5718 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5717, i64 0, i64 9
  %YMM9.i432 = bitcast %union.VectorReg* %5718 to %"class.std::bitset"*
  %5719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5720 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5719, i64 0, i64 10
  %YMM10.i433 = bitcast %union.VectorReg* %5720 to %"class.std::bitset"*
  %5721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5722 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5721, i64 0, i64 11
  %YMM11.i434 = bitcast %union.VectorReg* %5722 to %"class.std::bitset"*
  %5723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5724 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5723, i64 0, i64 12
  %YMM12.i435 = bitcast %union.VectorReg* %5724 to %"class.std::bitset"*
  %5725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5726 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5725, i64 0, i64 13
  %YMM13.i436 = bitcast %union.VectorReg* %5726 to %"class.std::bitset"*
  %5727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5728 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5727, i64 0, i64 14
  %YMM14.i437 = bitcast %union.VectorReg* %5728 to %"class.std::bitset"*
  %5729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5730 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5729, i64 0, i64 15
  %YMM15.i438 = bitcast %union.VectorReg* %5730 to %"class.std::bitset"*
  %5731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5732 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5731, i64 0, i64 0
  %XMM0.i439 = bitcast %union.VectorReg* %5732 to %union.vec128_t*
  %5733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5734 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5733, i64 0, i64 1
  %XMM1.i440 = bitcast %union.VectorReg* %5734 to %union.vec128_t*
  %5735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5736 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5735, i64 0, i64 2
  %XMM2.i441 = bitcast %union.VectorReg* %5736 to %union.vec128_t*
  %5737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5738 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5737, i64 0, i64 3
  %XMM3.i442 = bitcast %union.VectorReg* %5738 to %union.vec128_t*
  %5739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5740 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5739, i64 0, i64 4
  %XMM4.i443 = bitcast %union.VectorReg* %5740 to %union.vec128_t*
  %5741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5742 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5741, i64 0, i64 5
  %XMM5.i444 = bitcast %union.VectorReg* %5742 to %union.vec128_t*
  %5743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5744 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5743, i64 0, i64 6
  %XMM6.i445 = bitcast %union.VectorReg* %5744 to %union.vec128_t*
  %5745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5746 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5745, i64 0, i64 7
  %XMM7.i446 = bitcast %union.VectorReg* %5746 to %union.vec128_t*
  %5747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5748 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5747, i64 0, i64 8
  %XMM8.i447 = bitcast %union.VectorReg* %5748 to %union.vec128_t*
  %5749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5750 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5749, i64 0, i64 9
  %XMM9.i448 = bitcast %union.VectorReg* %5750 to %union.vec128_t*
  %5751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5752 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5751, i64 0, i64 10
  %XMM10.i449 = bitcast %union.VectorReg* %5752 to %union.vec128_t*
  %5753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5754 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5753, i64 0, i64 11
  %XMM11.i450 = bitcast %union.VectorReg* %5754 to %union.vec128_t*
  %5755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5756 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5755, i64 0, i64 12
  %XMM12.i451 = bitcast %union.VectorReg* %5756 to %union.vec128_t*
  %5757 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5758 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5757, i64 0, i64 13
  %XMM13.i452 = bitcast %union.VectorReg* %5758 to %union.vec128_t*
  %5759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5760 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5759, i64 0, i64 14
  %XMM14.i453 = bitcast %union.VectorReg* %5760 to %union.vec128_t*
  %5761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5762 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5761, i64 0, i64 15
  %XMM15.i454 = bitcast %union.VectorReg* %5762 to %union.vec128_t*
  %5763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %5764 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %5763, i32 0, i32 0
  %5765 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %5764, i64 0, i64 0
  %ST0.i455 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %5765, i32 0, i32 1
  %5766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %5767 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %5766, i32 0, i32 0
  %5768 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %5767, i64 0, i64 1
  %ST1.i456 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %5768, i32 0, i32 1
  %5769 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %5770 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %5769, i32 0, i32 0
  %5771 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %5770, i64 0, i64 2
  %ST2.i457 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %5771, i32 0, i32 1
  %5772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %5773 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %5772, i32 0, i32 0
  %5774 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %5773, i64 0, i64 3
  %ST3.i458 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %5774, i32 0, i32 1
  %5775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %5776 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %5775, i32 0, i32 0
  %5777 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %5776, i64 0, i64 4
  %ST4.i459 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %5777, i32 0, i32 1
  %5778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %5779 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %5778, i32 0, i32 0
  %5780 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %5779, i64 0, i64 5
  %ST5.i460 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %5780, i32 0, i32 1
  %5781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %5782 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %5781, i32 0, i32 0
  %5783 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %5782, i64 0, i64 6
  %ST6.i461 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %5783, i32 0, i32 1
  %5784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %5785 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %5784, i32 0, i32 0
  %5786 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %5785, i64 0, i64 7
  %ST7.i462 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %5786, i32 0, i32 1
  %5787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %5788 = getelementptr inbounds %struct.MMX, %struct.MMX* %5787, i32 0, i32 0
  %5789 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %5788, i64 0, i64 0
  %5790 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %5789, i32 0, i32 1
  %5791 = bitcast %union.vec64_t* %5790 to %struct.uint64v1_t*
  %5792 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %5791, i32 0, i32 0
  %MM0.i463 = getelementptr inbounds [1 x i64], [1 x i64]* %5792, i64 0, i64 0
  %5793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %5794 = getelementptr inbounds %struct.MMX, %struct.MMX* %5793, i32 0, i32 0
  %5795 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %5794, i64 0, i64 1
  %5796 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %5795, i32 0, i32 1
  %5797 = bitcast %union.vec64_t* %5796 to %struct.uint64v1_t*
  %5798 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %5797, i32 0, i32 0
  %MM1.i464 = getelementptr inbounds [1 x i64], [1 x i64]* %5798, i64 0, i64 0
  %5799 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %5800 = getelementptr inbounds %struct.MMX, %struct.MMX* %5799, i32 0, i32 0
  %5801 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %5800, i64 0, i64 2
  %5802 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %5801, i32 0, i32 1
  %5803 = bitcast %union.vec64_t* %5802 to %struct.uint64v1_t*
  %5804 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %5803, i32 0, i32 0
  %MM2.i465 = getelementptr inbounds [1 x i64], [1 x i64]* %5804, i64 0, i64 0
  %5805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %5806 = getelementptr inbounds %struct.MMX, %struct.MMX* %5805, i32 0, i32 0
  %5807 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %5806, i64 0, i64 3
  %5808 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %5807, i32 0, i32 1
  %5809 = bitcast %union.vec64_t* %5808 to %struct.uint64v1_t*
  %5810 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %5809, i32 0, i32 0
  %MM3.i466 = getelementptr inbounds [1 x i64], [1 x i64]* %5810, i64 0, i64 0
  %5811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %5812 = getelementptr inbounds %struct.MMX, %struct.MMX* %5811, i32 0, i32 0
  %5813 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %5812, i64 0, i64 4
  %5814 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %5813, i32 0, i32 1
  %5815 = bitcast %union.vec64_t* %5814 to %struct.uint64v1_t*
  %5816 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %5815, i32 0, i32 0
  %MM4.i467 = getelementptr inbounds [1 x i64], [1 x i64]* %5816, i64 0, i64 0
  %5817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %5818 = getelementptr inbounds %struct.MMX, %struct.MMX* %5817, i32 0, i32 0
  %5819 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %5818, i64 0, i64 5
  %5820 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %5819, i32 0, i32 1
  %5821 = bitcast %union.vec64_t* %5820 to %struct.uint64v1_t*
  %5822 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %5821, i32 0, i32 0
  %MM5.i468 = getelementptr inbounds [1 x i64], [1 x i64]* %5822, i64 0, i64 0
  %5823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %5824 = getelementptr inbounds %struct.MMX, %struct.MMX* %5823, i32 0, i32 0
  %5825 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %5824, i64 0, i64 6
  %5826 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %5825, i32 0, i32 1
  %5827 = bitcast %union.vec64_t* %5826 to %struct.uint64v1_t*
  %5828 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %5827, i32 0, i32 0
  %MM6.i469 = getelementptr inbounds [1 x i64], [1 x i64]* %5828, i64 0, i64 0
  %5829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %5830 = getelementptr inbounds %struct.MMX, %struct.MMX* %5829, i32 0, i32 0
  %5831 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %5830, i64 0, i64 7
  %5832 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %5831, i32 0, i32 1
  %5833 = bitcast %union.vec64_t* %5832 to %struct.uint64v1_t*
  %5834 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %5833, i32 0, i32 0
  %MM7.i470 = getelementptr inbounds [1 x i64], [1 x i64]* %5834, i64 0, i64 0
  %5835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF.i471 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %5835, i32 0, i32 5
  %5836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF.i472 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %5836, i32 0, i32 1
  %5837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF.i473 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %5837, i32 0, i32 11
  %5838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF.i474 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %5838, i32 0, i32 13
  %5839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF.i475 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %5839, i32 0, i32 3
  %5840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF.i476 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %5840, i32 0, i32 9
  %5841 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF.i477 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %5841, i32 0, i32 7
  store i64* @DR0, i64** %_DR0.i329, align 8, !noalias !2498
  store i64* @DR1, i64** %_DR1.i330, align 8, !noalias !2498
  store i64* @DR2, i64** %_DR2.i331, align 8, !noalias !2498
  store i64* @DR3, i64** %_DR3.i332, align 8, !noalias !2498
  store i64* @DR4, i64** %_DR4.i333, align 8, !noalias !2498
  store i64* @DR5, i64** %_DR5.i334, align 8, !noalias !2498
  store i64* @DR6, i64** %_DR6.i335, align 8, !noalias !2498
  store i64* @DR7, i64** %_DR7.i336, align 8, !noalias !2498
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0.i337, align 8, !noalias !2498
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1.i338, align 8, !noalias !2498
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2.i339, align 8, !noalias !2498
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3.i340, align 8, !noalias !2498
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4.i341, align 8, !noalias !2498
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8.i342, align 8, !noalias !2498
  %5842 = bitcast %"class.std::bitset"* %YMM0.i423 to double*
  %5843 = load double, double* %5842, !alias.scope !2502, !noalias !2503
  %5844 = load i64, i64* %RSP.i404, !alias.scope !2502, !noalias !2503
  %5845 = load %struct.Memory*, %struct.Memory** %MEMORY.i328, !noalias !2498
  %5846 = inttoptr i64 %5844 to i64*
  %5847 = load i64, i64* %5846
  store i64 %5847, i64* %PC.i343, !alias.scope !2502, !noalias !2503
  %5848 = add i64 %5844, 8
  store i64 %5848, i64* %RSP.i404, !alias.scope !2502, !noalias !2503
  %5849 = call double @cos(double %5843)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0.i423, !alias.scope !2502, !noalias !2503
  %5850 = bitcast %"class.std::bitset"* %YMM0.i423 to double*
  store double %5849, double* %5850, !alias.scope !2502, !noalias !2503
  %5851 = load %struct.Memory*, %struct.Memory** %MEMORY.i328, !noalias !2498
  %5852 = bitcast %struct.State** %state.i319 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5852)
  %5853 = bitcast i64* %curr_pc.i320 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5853)
  %5854 = bitcast %struct.Memory** %memory.i321 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5854)
  call void @llvm.lifetime.end(i64 1, i8* %BRANCH_TAKEN.i322)
  %5855 = bitcast i64* %SS_BASE.i323 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5855)
  %5856 = bitcast i64* %ES_BASE.i324 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5856)
  %5857 = bitcast i64* %DS_BASE.i325 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5857)
  %5858 = bitcast i64* %CS_BASE.i326 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5858)
  %5859 = bitcast %struct.State** %STATE.i327 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5859)
  %5860 = bitcast %struct.Memory** %MEMORY.i328 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5860)
  %5861 = bitcast i64** %_DR0.i329 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5861)
  %5862 = bitcast i64** %_DR1.i330 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5862)
  %5863 = bitcast i64** %_DR2.i331 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5863)
  %5864 = bitcast i64** %_DR3.i332 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5864)
  %5865 = bitcast i64** %_DR4.i333 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5865)
  %5866 = bitcast i64** %_DR5.i334 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5866)
  %5867 = bitcast i64** %_DR6.i335 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5867)
  %5868 = bitcast i64** %_DR7.i336 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5868)
  %5869 = bitcast i64** %CR0.i337 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5869)
  %5870 = bitcast i64** %CR1.i338 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5870)
  %5871 = bitcast i64** %CR2.i339 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5871)
  %5872 = bitcast i64** %CR3.i340 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5872)
  %5873 = bitcast i64** %CR4.i341 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5873)
  %5874 = bitcast i64** %CR8.i342 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5874)
  %5875 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %5876 = load i64, i64* %RBP
  %5877 = sub i64 %5876, 296
  %5878 = load i64, i64* %PC
  %5879 = add i64 %5878, 8
  store i64 %5879, i64* %PC
  %5880 = inttoptr i64 %5877 to double*
  %5881 = load double, double* %5880
  %5882 = bitcast i8* %5875 to double*
  store double %5881, double* %5882, align 1, !tbaa !2451
  %5883 = getelementptr inbounds i8, i8* %5875, i64 8
  %5884 = bitcast i8* %5883 to double*
  store double 0.000000e+00, double* %5884, align 1, !tbaa !2451
  %5885 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %5886 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %5887 = bitcast %union.vec128_t* %XMM0 to i8*
  %5888 = load i64, i64* %PC
  %5889 = add i64 %5888, 4
  store i64 %5889, i64* %PC
  %5890 = bitcast i8* %5886 to double*
  %5891 = load double, double* %5890, align 1
  %5892 = getelementptr inbounds i8, i8* %5886, i64 8
  %5893 = bitcast i8* %5892 to i64*
  %5894 = load i64, i64* %5893, align 1
  %5895 = bitcast i8* %5887 to double*
  %5896 = load double, double* %5895, align 1
  %5897 = fmul double %5891, %5896
  %5898 = bitcast i8* %5885 to double*
  store double %5897, double* %5898, align 1, !tbaa !2451
  %5899 = getelementptr inbounds i8, i8* %5885, i64 8
  %5900 = bitcast i8* %5899 to i64*
  store i64 %5894, i64* %5900, align 1, !tbaa !2451
  %5901 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %5902 = load i64, i64* %RBP
  %5903 = sub i64 %5902, 144
  %5904 = load i64, i64* %PC
  %5905 = add i64 %5904, 8
  store i64 %5905, i64* %PC
  %5906 = inttoptr i64 %5903 to double*
  %5907 = load double, double* %5906
  %5908 = bitcast i8* %5901 to double*
  store double %5907, double* %5908, align 1, !tbaa !2451
  %5909 = getelementptr inbounds i8, i8* %5901, i64 8
  %5910 = bitcast i8* %5909 to double*
  store double 0.000000e+00, double* %5910, align 1, !tbaa !2451
  %5911 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %5912 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %5913 = load i64, i64* %RBP
  %5914 = sub i64 %5913, 152
  %5915 = load i64, i64* %PC
  %5916 = add i64 %5915, 8
  store i64 %5916, i64* %PC
  %5917 = bitcast i8* %5912 to double*
  %5918 = load double, double* %5917, align 1
  %5919 = getelementptr inbounds i8, i8* %5912, i64 8
  %5920 = bitcast i8* %5919 to i64*
  %5921 = load i64, i64* %5920, align 1
  %5922 = inttoptr i64 %5914 to double*
  %5923 = load double, double* %5922
  %5924 = fadd double %5918, %5923
  %5925 = bitcast i8* %5911 to double*
  store double %5924, double* %5925, align 1, !tbaa !2451
  %5926 = getelementptr inbounds i8, i8* %5911, i64 8
  %5927 = bitcast i8* %5926 to i64*
  store i64 %5921, i64* %5927, align 1, !tbaa !2451
  %5928 = load i64, i64* %RBP
  %5929 = sub i64 %5928, 304
  %5930 = bitcast %union.vec128_t* %XMM1 to i8*
  %5931 = load i64, i64* %PC
  %5932 = add i64 %5931, 8
  store i64 %5932, i64* %PC
  %5933 = bitcast i8* %5930 to double*
  %5934 = load double, double* %5933, align 1
  %5935 = inttoptr i64 %5929 to double*
  store double %5934, double* %5935
  %5936 = load i64, i64* %PC
  %5937 = sub i64 %5936, 2734
  %5938 = load i64, i64* %PC
  %5939 = add i64 %5938, 5
  %5940 = load i64, i64* %PC
  %5941 = add i64 %5940, 5
  store i64 %5941, i64* %PC
  %5942 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %5943 = load i64, i64* %5942, align 8, !tbaa !2428
  %5944 = add i64 %5943, -8
  %5945 = inttoptr i64 %5944 to i64*
  store i64 %5939, i64* %5945
  store i64 %5944, i64* %5942, align 8, !tbaa !2428
  %5946 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5937, i64* %5946, align 8, !tbaa !2428
  %5947 = load i64, i64* %PC
  %5948 = bitcast %struct.State** %state.i160 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5948)
  %5949 = bitcast i64* %curr_pc.i161 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5949)
  %5950 = bitcast %struct.Memory** %memory.i162 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5950)
  call void @llvm.lifetime.start(i64 1, i8* %BRANCH_TAKEN.i163)
  %5951 = bitcast i64* %SS_BASE.i164 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5951)
  %5952 = bitcast i64* %ES_BASE.i165 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5952)
  %5953 = bitcast i64* %DS_BASE.i166 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5953)
  %5954 = bitcast i64* %CS_BASE.i167 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5954)
  %5955 = bitcast %struct.State** %STATE.i168 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5955)
  %5956 = bitcast %struct.Memory** %MEMORY.i169 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5956)
  %5957 = bitcast i64** %_DR0.i170 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5957)
  %5958 = bitcast i64** %_DR1.i171 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5958)
  %5959 = bitcast i64** %_DR2.i172 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5959)
  %5960 = bitcast i64** %_DR3.i173 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5960)
  %5961 = bitcast i64** %_DR4.i174 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5961)
  %5962 = bitcast i64** %_DR5.i175 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5962)
  %5963 = bitcast i64** %_DR6.i176 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5963)
  %5964 = bitcast i64** %_DR7.i177 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5964)
  %5965 = bitcast i64** %CR0.i178 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5965)
  %5966 = bitcast i64** %CR1.i179 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5966)
  %5967 = bitcast i64** %CR2.i180 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5967)
  %5968 = bitcast i64** %CR3.i181 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5968)
  %5969 = bitcast i64** %CR4.i182 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5969)
  %5970 = bitcast i64** %CR8.i183 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5970)
  store %struct.State* %0, %struct.State** %state.i160, align 8, !noalias !2504
  store i64 %5947, i64* %curr_pc.i161, align 8, !noalias !2504
  store %struct.Memory* %5851, %struct.Memory** %memory.i162, align 8, !noalias !2504
  store i8 0, i8* %BRANCH_TAKEN.i163, align 1, !noalias !2504
  store i64 0, i64* %SS_BASE.i164, align 8, !noalias !2504
  store i64 0, i64* %ES_BASE.i165, align 8, !noalias !2504
  store i64 0, i64* %DS_BASE.i166, align 8, !noalias !2504
  store i64 0, i64* %CS_BASE.i167, align 8, !noalias !2504
  store %struct.State* %0, %struct.State** %STATE.i168, align 8, !noalias !2504
  store %struct.Memory* %5851, %struct.Memory** %MEMORY.i169, align 8, !noalias !2504
  %5971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5972 = getelementptr inbounds %struct.GPR, %struct.GPR* %5971, i32 0, i32 33
  %5973 = getelementptr inbounds %struct.Reg, %struct.Reg* %5972, i32 0, i32 0
  %PC.i184 = bitcast %union.anon* %5973 to i64*
  store i64 %5947, i64* %PC.i184, align 8, !alias.scope !2508, !noalias !2509
  %5974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5975 = getelementptr inbounds %struct.GPR, %struct.GPR* %5974, i32 0, i32 1
  %5976 = getelementptr inbounds %struct.Reg, %struct.Reg* %5975, i32 0, i32 0
  %5977 = bitcast %union.anon* %5976 to %struct.anon.2*
  %AH.i185 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5977, i32 0, i32 1
  %5978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5979 = getelementptr inbounds %struct.GPR, %struct.GPR* %5978, i32 0, i32 3
  %5980 = getelementptr inbounds %struct.Reg, %struct.Reg* %5979, i32 0, i32 0
  %5981 = bitcast %union.anon* %5980 to %struct.anon.2*
  %BH.i186 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5981, i32 0, i32 1
  %5982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5983 = getelementptr inbounds %struct.GPR, %struct.GPR* %5982, i32 0, i32 5
  %5984 = getelementptr inbounds %struct.Reg, %struct.Reg* %5983, i32 0, i32 0
  %5985 = bitcast %union.anon* %5984 to %struct.anon.2*
  %CH.i187 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5985, i32 0, i32 1
  %5986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5987 = getelementptr inbounds %struct.GPR, %struct.GPR* %5986, i32 0, i32 7
  %5988 = getelementptr inbounds %struct.Reg, %struct.Reg* %5987, i32 0, i32 0
  %5989 = bitcast %union.anon* %5988 to %struct.anon.2*
  %DH.i188 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5989, i32 0, i32 1
  %5990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5991 = getelementptr inbounds %struct.GPR, %struct.GPR* %5990, i32 0, i32 1
  %5992 = getelementptr inbounds %struct.Reg, %struct.Reg* %5991, i32 0, i32 0
  %5993 = bitcast %union.anon* %5992 to %struct.anon.2*
  %AL.i189 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5993, i32 0, i32 0
  %5994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5995 = getelementptr inbounds %struct.GPR, %struct.GPR* %5994, i32 0, i32 3
  %5996 = getelementptr inbounds %struct.Reg, %struct.Reg* %5995, i32 0, i32 0
  %5997 = bitcast %union.anon* %5996 to %struct.anon.2*
  %BL.i190 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5997, i32 0, i32 0
  %5998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5999 = getelementptr inbounds %struct.GPR, %struct.GPR* %5998, i32 0, i32 5
  %6000 = getelementptr inbounds %struct.Reg, %struct.Reg* %5999, i32 0, i32 0
  %6001 = bitcast %union.anon* %6000 to %struct.anon.2*
  %CL.i191 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6001, i32 0, i32 0
  %6002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6003 = getelementptr inbounds %struct.GPR, %struct.GPR* %6002, i32 0, i32 7
  %6004 = getelementptr inbounds %struct.Reg, %struct.Reg* %6003, i32 0, i32 0
  %6005 = bitcast %union.anon* %6004 to %struct.anon.2*
  %DL.i192 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6005, i32 0, i32 0
  %6006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6007 = getelementptr inbounds %struct.GPR, %struct.GPR* %6006, i32 0, i32 9
  %6008 = getelementptr inbounds %struct.Reg, %struct.Reg* %6007, i32 0, i32 0
  %6009 = bitcast %union.anon* %6008 to %struct.anon.2*
  %SIL.i193 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6009, i32 0, i32 0
  %6010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6011 = getelementptr inbounds %struct.GPR, %struct.GPR* %6010, i32 0, i32 11
  %6012 = getelementptr inbounds %struct.Reg, %struct.Reg* %6011, i32 0, i32 0
  %6013 = bitcast %union.anon* %6012 to %struct.anon.2*
  %DIL.i194 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6013, i32 0, i32 0
  %6014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6015 = getelementptr inbounds %struct.GPR, %struct.GPR* %6014, i32 0, i32 13
  %6016 = getelementptr inbounds %struct.Reg, %struct.Reg* %6015, i32 0, i32 0
  %6017 = bitcast %union.anon* %6016 to %struct.anon.2*
  %SPL.i195 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6017, i32 0, i32 0
  %6018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6019 = getelementptr inbounds %struct.GPR, %struct.GPR* %6018, i32 0, i32 15
  %6020 = getelementptr inbounds %struct.Reg, %struct.Reg* %6019, i32 0, i32 0
  %6021 = bitcast %union.anon* %6020 to %struct.anon.2*
  %BPL.i196 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6021, i32 0, i32 0
  %6022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6023 = getelementptr inbounds %struct.GPR, %struct.GPR* %6022, i32 0, i32 17
  %6024 = getelementptr inbounds %struct.Reg, %struct.Reg* %6023, i32 0, i32 0
  %6025 = bitcast %union.anon* %6024 to %struct.anon.2*
  %R8B.i197 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6025, i32 0, i32 0
  %6026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6027 = getelementptr inbounds %struct.GPR, %struct.GPR* %6026, i32 0, i32 19
  %6028 = getelementptr inbounds %struct.Reg, %struct.Reg* %6027, i32 0, i32 0
  %6029 = bitcast %union.anon* %6028 to %struct.anon.2*
  %R9B.i198 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6029, i32 0, i32 0
  %6030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6031 = getelementptr inbounds %struct.GPR, %struct.GPR* %6030, i32 0, i32 21
  %6032 = getelementptr inbounds %struct.Reg, %struct.Reg* %6031, i32 0, i32 0
  %6033 = bitcast %union.anon* %6032 to %struct.anon.2*
  %R10B.i199 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6033, i32 0, i32 0
  %6034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6035 = getelementptr inbounds %struct.GPR, %struct.GPR* %6034, i32 0, i32 23
  %6036 = getelementptr inbounds %struct.Reg, %struct.Reg* %6035, i32 0, i32 0
  %6037 = bitcast %union.anon* %6036 to %struct.anon.2*
  %R11B.i200 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6037, i32 0, i32 0
  %6038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6039 = getelementptr inbounds %struct.GPR, %struct.GPR* %6038, i32 0, i32 25
  %6040 = getelementptr inbounds %struct.Reg, %struct.Reg* %6039, i32 0, i32 0
  %6041 = bitcast %union.anon* %6040 to %struct.anon.2*
  %R12B.i201 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6041, i32 0, i32 0
  %6042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6043 = getelementptr inbounds %struct.GPR, %struct.GPR* %6042, i32 0, i32 27
  %6044 = getelementptr inbounds %struct.Reg, %struct.Reg* %6043, i32 0, i32 0
  %6045 = bitcast %union.anon* %6044 to %struct.anon.2*
  %R13B.i202 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6045, i32 0, i32 0
  %6046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6047 = getelementptr inbounds %struct.GPR, %struct.GPR* %6046, i32 0, i32 29
  %6048 = getelementptr inbounds %struct.Reg, %struct.Reg* %6047, i32 0, i32 0
  %6049 = bitcast %union.anon* %6048 to %struct.anon.2*
  %R14B.i203 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6049, i32 0, i32 0
  %6050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6051 = getelementptr inbounds %struct.GPR, %struct.GPR* %6050, i32 0, i32 31
  %6052 = getelementptr inbounds %struct.Reg, %struct.Reg* %6051, i32 0, i32 0
  %6053 = bitcast %union.anon* %6052 to %struct.anon.2*
  %R15B.i204 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6053, i32 0, i32 0
  %6054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6055 = getelementptr inbounds %struct.GPR, %struct.GPR* %6054, i32 0, i32 1
  %6056 = getelementptr inbounds %struct.Reg, %struct.Reg* %6055, i32 0, i32 0
  %AX.i205 = bitcast %union.anon* %6056 to i16*
  %6057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6058 = getelementptr inbounds %struct.GPR, %struct.GPR* %6057, i32 0, i32 3
  %6059 = getelementptr inbounds %struct.Reg, %struct.Reg* %6058, i32 0, i32 0
  %BX.i206 = bitcast %union.anon* %6059 to i16*
  %6060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6061 = getelementptr inbounds %struct.GPR, %struct.GPR* %6060, i32 0, i32 5
  %6062 = getelementptr inbounds %struct.Reg, %struct.Reg* %6061, i32 0, i32 0
  %CX.i207 = bitcast %union.anon* %6062 to i16*
  %6063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6064 = getelementptr inbounds %struct.GPR, %struct.GPR* %6063, i32 0, i32 7
  %6065 = getelementptr inbounds %struct.Reg, %struct.Reg* %6064, i32 0, i32 0
  %DX.i208 = bitcast %union.anon* %6065 to i16*
  %6066 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6067 = getelementptr inbounds %struct.GPR, %struct.GPR* %6066, i32 0, i32 9
  %6068 = getelementptr inbounds %struct.Reg, %struct.Reg* %6067, i32 0, i32 0
  %SI.i209 = bitcast %union.anon* %6068 to i16*
  %6069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6070 = getelementptr inbounds %struct.GPR, %struct.GPR* %6069, i32 0, i32 11
  %6071 = getelementptr inbounds %struct.Reg, %struct.Reg* %6070, i32 0, i32 0
  %DI.i210 = bitcast %union.anon* %6071 to i16*
  %6072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6073 = getelementptr inbounds %struct.GPR, %struct.GPR* %6072, i32 0, i32 13
  %6074 = getelementptr inbounds %struct.Reg, %struct.Reg* %6073, i32 0, i32 0
  %SP.i211 = bitcast %union.anon* %6074 to i16*
  %6075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6076 = getelementptr inbounds %struct.GPR, %struct.GPR* %6075, i32 0, i32 15
  %6077 = getelementptr inbounds %struct.Reg, %struct.Reg* %6076, i32 0, i32 0
  %BP.i212 = bitcast %union.anon* %6077 to i16*
  %6078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6079 = getelementptr inbounds %struct.GPR, %struct.GPR* %6078, i32 0, i32 17
  %6080 = getelementptr inbounds %struct.Reg, %struct.Reg* %6079, i32 0, i32 0
  %R8W.i213 = bitcast %union.anon* %6080 to i16*
  %6081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6082 = getelementptr inbounds %struct.GPR, %struct.GPR* %6081, i32 0, i32 19
  %6083 = getelementptr inbounds %struct.Reg, %struct.Reg* %6082, i32 0, i32 0
  %R9W.i214 = bitcast %union.anon* %6083 to i16*
  %6084 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6085 = getelementptr inbounds %struct.GPR, %struct.GPR* %6084, i32 0, i32 21
  %6086 = getelementptr inbounds %struct.Reg, %struct.Reg* %6085, i32 0, i32 0
  %R10W.i215 = bitcast %union.anon* %6086 to i16*
  %6087 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6088 = getelementptr inbounds %struct.GPR, %struct.GPR* %6087, i32 0, i32 23
  %6089 = getelementptr inbounds %struct.Reg, %struct.Reg* %6088, i32 0, i32 0
  %R11W.i216 = bitcast %union.anon* %6089 to i16*
  %6090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6091 = getelementptr inbounds %struct.GPR, %struct.GPR* %6090, i32 0, i32 25
  %6092 = getelementptr inbounds %struct.Reg, %struct.Reg* %6091, i32 0, i32 0
  %R12W.i217 = bitcast %union.anon* %6092 to i16*
  %6093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6094 = getelementptr inbounds %struct.GPR, %struct.GPR* %6093, i32 0, i32 27
  %6095 = getelementptr inbounds %struct.Reg, %struct.Reg* %6094, i32 0, i32 0
  %R13W.i218 = bitcast %union.anon* %6095 to i16*
  %6096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6097 = getelementptr inbounds %struct.GPR, %struct.GPR* %6096, i32 0, i32 29
  %6098 = getelementptr inbounds %struct.Reg, %struct.Reg* %6097, i32 0, i32 0
  %R14W.i219 = bitcast %union.anon* %6098 to i16*
  %6099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6100 = getelementptr inbounds %struct.GPR, %struct.GPR* %6099, i32 0, i32 31
  %6101 = getelementptr inbounds %struct.Reg, %struct.Reg* %6100, i32 0, i32 0
  %R15W.i220 = bitcast %union.anon* %6101 to i16*
  %6102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6103 = getelementptr inbounds %struct.GPR, %struct.GPR* %6102, i32 0, i32 33
  %6104 = getelementptr inbounds %struct.Reg, %struct.Reg* %6103, i32 0, i32 0
  %IP.i221 = bitcast %union.anon* %6104 to i16*
  %6105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6106 = getelementptr inbounds %struct.GPR, %struct.GPR* %6105, i32 0, i32 1
  %6107 = getelementptr inbounds %struct.Reg, %struct.Reg* %6106, i32 0, i32 0
  %EAX.i222 = bitcast %union.anon* %6107 to i32*
  %6108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6109 = getelementptr inbounds %struct.GPR, %struct.GPR* %6108, i32 0, i32 3
  %6110 = getelementptr inbounds %struct.Reg, %struct.Reg* %6109, i32 0, i32 0
  %EBX.i223 = bitcast %union.anon* %6110 to i32*
  %6111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6112 = getelementptr inbounds %struct.GPR, %struct.GPR* %6111, i32 0, i32 5
  %6113 = getelementptr inbounds %struct.Reg, %struct.Reg* %6112, i32 0, i32 0
  %ECX.i224 = bitcast %union.anon* %6113 to i32*
  %6114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6115 = getelementptr inbounds %struct.GPR, %struct.GPR* %6114, i32 0, i32 7
  %6116 = getelementptr inbounds %struct.Reg, %struct.Reg* %6115, i32 0, i32 0
  %EDX.i225 = bitcast %union.anon* %6116 to i32*
  %6117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6118 = getelementptr inbounds %struct.GPR, %struct.GPR* %6117, i32 0, i32 9
  %6119 = getelementptr inbounds %struct.Reg, %struct.Reg* %6118, i32 0, i32 0
  %ESI.i226 = bitcast %union.anon* %6119 to i32*
  %6120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6121 = getelementptr inbounds %struct.GPR, %struct.GPR* %6120, i32 0, i32 11
  %6122 = getelementptr inbounds %struct.Reg, %struct.Reg* %6121, i32 0, i32 0
  %EDI.i227 = bitcast %union.anon* %6122 to i32*
  %6123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6124 = getelementptr inbounds %struct.GPR, %struct.GPR* %6123, i32 0, i32 13
  %6125 = getelementptr inbounds %struct.Reg, %struct.Reg* %6124, i32 0, i32 0
  %ESP.i228 = bitcast %union.anon* %6125 to i32*
  %6126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6127 = getelementptr inbounds %struct.GPR, %struct.GPR* %6126, i32 0, i32 15
  %6128 = getelementptr inbounds %struct.Reg, %struct.Reg* %6127, i32 0, i32 0
  %EBP.i229 = bitcast %union.anon* %6128 to i32*
  %6129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6130 = getelementptr inbounds %struct.GPR, %struct.GPR* %6129, i32 0, i32 33
  %6131 = getelementptr inbounds %struct.Reg, %struct.Reg* %6130, i32 0, i32 0
  %EIP.i230 = bitcast %union.anon* %6131 to i32*
  %6132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6133 = getelementptr inbounds %struct.GPR, %struct.GPR* %6132, i32 0, i32 17
  %6134 = getelementptr inbounds %struct.Reg, %struct.Reg* %6133, i32 0, i32 0
  %R8D.i231 = bitcast %union.anon* %6134 to i32*
  %6135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6136 = getelementptr inbounds %struct.GPR, %struct.GPR* %6135, i32 0, i32 19
  %6137 = getelementptr inbounds %struct.Reg, %struct.Reg* %6136, i32 0, i32 0
  %R9D.i232 = bitcast %union.anon* %6137 to i32*
  %6138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6139 = getelementptr inbounds %struct.GPR, %struct.GPR* %6138, i32 0, i32 21
  %6140 = getelementptr inbounds %struct.Reg, %struct.Reg* %6139, i32 0, i32 0
  %R10D.i233 = bitcast %union.anon* %6140 to i32*
  %6141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6142 = getelementptr inbounds %struct.GPR, %struct.GPR* %6141, i32 0, i32 23
  %6143 = getelementptr inbounds %struct.Reg, %struct.Reg* %6142, i32 0, i32 0
  %R11D.i234 = bitcast %union.anon* %6143 to i32*
  %6144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6145 = getelementptr inbounds %struct.GPR, %struct.GPR* %6144, i32 0, i32 25
  %6146 = getelementptr inbounds %struct.Reg, %struct.Reg* %6145, i32 0, i32 0
  %R12D.i235 = bitcast %union.anon* %6146 to i32*
  %6147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6148 = getelementptr inbounds %struct.GPR, %struct.GPR* %6147, i32 0, i32 27
  %6149 = getelementptr inbounds %struct.Reg, %struct.Reg* %6148, i32 0, i32 0
  %R13D.i236 = bitcast %union.anon* %6149 to i32*
  %6150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6151 = getelementptr inbounds %struct.GPR, %struct.GPR* %6150, i32 0, i32 29
  %6152 = getelementptr inbounds %struct.Reg, %struct.Reg* %6151, i32 0, i32 0
  %R14D.i237 = bitcast %union.anon* %6152 to i32*
  %6153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6154 = getelementptr inbounds %struct.GPR, %struct.GPR* %6153, i32 0, i32 31
  %6155 = getelementptr inbounds %struct.Reg, %struct.Reg* %6154, i32 0, i32 0
  %R15D.i238 = bitcast %union.anon* %6155 to i32*
  %6156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6157 = getelementptr inbounds %struct.GPR, %struct.GPR* %6156, i32 0, i32 1
  %6158 = getelementptr inbounds %struct.Reg, %struct.Reg* %6157, i32 0, i32 0
  %RAX.i239 = bitcast %union.anon* %6158 to i64*
  %6159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6160 = getelementptr inbounds %struct.GPR, %struct.GPR* %6159, i32 0, i32 3
  %6161 = getelementptr inbounds %struct.Reg, %struct.Reg* %6160, i32 0, i32 0
  %RBX.i240 = bitcast %union.anon* %6161 to i64*
  %6162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6163 = getelementptr inbounds %struct.GPR, %struct.GPR* %6162, i32 0, i32 5
  %6164 = getelementptr inbounds %struct.Reg, %struct.Reg* %6163, i32 0, i32 0
  %RCX.i241 = bitcast %union.anon* %6164 to i64*
  %6165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6166 = getelementptr inbounds %struct.GPR, %struct.GPR* %6165, i32 0, i32 7
  %6167 = getelementptr inbounds %struct.Reg, %struct.Reg* %6166, i32 0, i32 0
  %RDX.i242 = bitcast %union.anon* %6167 to i64*
  %6168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6169 = getelementptr inbounds %struct.GPR, %struct.GPR* %6168, i32 0, i32 9
  %6170 = getelementptr inbounds %struct.Reg, %struct.Reg* %6169, i32 0, i32 0
  %RSI.i243 = bitcast %union.anon* %6170 to i64*
  %6171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6172 = getelementptr inbounds %struct.GPR, %struct.GPR* %6171, i32 0, i32 11
  %6173 = getelementptr inbounds %struct.Reg, %struct.Reg* %6172, i32 0, i32 0
  %RDI.i244 = bitcast %union.anon* %6173 to i64*
  %6174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6175 = getelementptr inbounds %struct.GPR, %struct.GPR* %6174, i32 0, i32 13
  %6176 = getelementptr inbounds %struct.Reg, %struct.Reg* %6175, i32 0, i32 0
  %RSP.i245 = bitcast %union.anon* %6176 to i64*
  %6177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6178 = getelementptr inbounds %struct.GPR, %struct.GPR* %6177, i32 0, i32 15
  %6179 = getelementptr inbounds %struct.Reg, %struct.Reg* %6178, i32 0, i32 0
  %RBP.i246 = bitcast %union.anon* %6179 to i64*
  %6180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6181 = getelementptr inbounds %struct.GPR, %struct.GPR* %6180, i32 0, i32 17
  %6182 = getelementptr inbounds %struct.Reg, %struct.Reg* %6181, i32 0, i32 0
  %R8.i247 = bitcast %union.anon* %6182 to i64*
  %6183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6184 = getelementptr inbounds %struct.GPR, %struct.GPR* %6183, i32 0, i32 19
  %6185 = getelementptr inbounds %struct.Reg, %struct.Reg* %6184, i32 0, i32 0
  %R9.i248 = bitcast %union.anon* %6185 to i64*
  %6186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6187 = getelementptr inbounds %struct.GPR, %struct.GPR* %6186, i32 0, i32 21
  %6188 = getelementptr inbounds %struct.Reg, %struct.Reg* %6187, i32 0, i32 0
  %R10.i249 = bitcast %union.anon* %6188 to i64*
  %6189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6190 = getelementptr inbounds %struct.GPR, %struct.GPR* %6189, i32 0, i32 23
  %6191 = getelementptr inbounds %struct.Reg, %struct.Reg* %6190, i32 0, i32 0
  %R11.i250 = bitcast %union.anon* %6191 to i64*
  %6192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6193 = getelementptr inbounds %struct.GPR, %struct.GPR* %6192, i32 0, i32 25
  %6194 = getelementptr inbounds %struct.Reg, %struct.Reg* %6193, i32 0, i32 0
  %R12.i251 = bitcast %union.anon* %6194 to i64*
  %6195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6196 = getelementptr inbounds %struct.GPR, %struct.GPR* %6195, i32 0, i32 27
  %6197 = getelementptr inbounds %struct.Reg, %struct.Reg* %6196, i32 0, i32 0
  %R13.i252 = bitcast %union.anon* %6197 to i64*
  %6198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6199 = getelementptr inbounds %struct.GPR, %struct.GPR* %6198, i32 0, i32 29
  %6200 = getelementptr inbounds %struct.Reg, %struct.Reg* %6199, i32 0, i32 0
  %R14.i253 = bitcast %union.anon* %6200 to i64*
  %6201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6202 = getelementptr inbounds %struct.GPR, %struct.GPR* %6201, i32 0, i32 31
  %6203 = getelementptr inbounds %struct.Reg, %struct.Reg* %6202, i32 0, i32 0
  %R15.i254 = bitcast %union.anon* %6203 to i64*
  %6204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6205 = getelementptr inbounds %struct.GPR, %struct.GPR* %6204, i32 0, i32 33
  %6206 = getelementptr inbounds %struct.Reg, %struct.Reg* %6205, i32 0, i32 0
  %RIP.i255 = bitcast %union.anon* %6206 to i64*
  %6207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %6208 = getelementptr inbounds %struct.Segments, %struct.Segments* %6207, i32 0, i32 1
  %SS.i256 = bitcast %union.SegmentSelector* %6208 to i16*
  %6209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %6210 = getelementptr inbounds %struct.Segments, %struct.Segments* %6209, i32 0, i32 3
  %ES.i257 = bitcast %union.SegmentSelector* %6210 to i16*
  %6211 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %6212 = getelementptr inbounds %struct.Segments, %struct.Segments* %6211, i32 0, i32 5
  %GS.i258 = bitcast %union.SegmentSelector* %6212 to i16*
  %6213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %6214 = getelementptr inbounds %struct.Segments, %struct.Segments* %6213, i32 0, i32 7
  %FS.i259 = bitcast %union.SegmentSelector* %6214 to i16*
  %6215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %6216 = getelementptr inbounds %struct.Segments, %struct.Segments* %6215, i32 0, i32 9
  %DS.i260 = bitcast %union.SegmentSelector* %6216 to i16*
  %6217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %6218 = getelementptr inbounds %struct.Segments, %struct.Segments* %6217, i32 0, i32 11
  %CS.i261 = bitcast %union.SegmentSelector* %6218 to i16*
  %6219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %6220 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %6219, i32 0, i32 5
  %6221 = getelementptr inbounds %struct.Reg, %struct.Reg* %6220, i32 0, i32 0
  %GS_BASE.i262 = bitcast %union.anon* %6221 to i64*
  %6222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %6223 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %6222, i32 0, i32 7
  %6224 = getelementptr inbounds %struct.Reg, %struct.Reg* %6223, i32 0, i32 0
  %FS_BASE.i263 = bitcast %union.anon* %6224 to i64*
  %6225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6226 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6225, i64 0, i64 0
  %YMM0.i264 = bitcast %union.VectorReg* %6226 to %"class.std::bitset"*
  %6227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6228 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6227, i64 0, i64 1
  %YMM1.i265 = bitcast %union.VectorReg* %6228 to %"class.std::bitset"*
  %6229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6230 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6229, i64 0, i64 2
  %YMM2.i266 = bitcast %union.VectorReg* %6230 to %"class.std::bitset"*
  %6231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6232 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6231, i64 0, i64 3
  %YMM3.i267 = bitcast %union.VectorReg* %6232 to %"class.std::bitset"*
  %6233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6234 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6233, i64 0, i64 4
  %YMM4.i268 = bitcast %union.VectorReg* %6234 to %"class.std::bitset"*
  %6235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6236 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6235, i64 0, i64 5
  %YMM5.i269 = bitcast %union.VectorReg* %6236 to %"class.std::bitset"*
  %6237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6238 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6237, i64 0, i64 6
  %YMM6.i270 = bitcast %union.VectorReg* %6238 to %"class.std::bitset"*
  %6239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6240 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6239, i64 0, i64 7
  %YMM7.i271 = bitcast %union.VectorReg* %6240 to %"class.std::bitset"*
  %6241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6242 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6241, i64 0, i64 8
  %YMM8.i272 = bitcast %union.VectorReg* %6242 to %"class.std::bitset"*
  %6243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6244 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6243, i64 0, i64 9
  %YMM9.i273 = bitcast %union.VectorReg* %6244 to %"class.std::bitset"*
  %6245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6246 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6245, i64 0, i64 10
  %YMM10.i274 = bitcast %union.VectorReg* %6246 to %"class.std::bitset"*
  %6247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6248 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6247, i64 0, i64 11
  %YMM11.i275 = bitcast %union.VectorReg* %6248 to %"class.std::bitset"*
  %6249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6250 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6249, i64 0, i64 12
  %YMM12.i276 = bitcast %union.VectorReg* %6250 to %"class.std::bitset"*
  %6251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6252 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6251, i64 0, i64 13
  %YMM13.i277 = bitcast %union.VectorReg* %6252 to %"class.std::bitset"*
  %6253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6254 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6253, i64 0, i64 14
  %YMM14.i278 = bitcast %union.VectorReg* %6254 to %"class.std::bitset"*
  %6255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6256 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6255, i64 0, i64 15
  %YMM15.i279 = bitcast %union.VectorReg* %6256 to %"class.std::bitset"*
  %6257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6258 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6257, i64 0, i64 0
  %XMM0.i280 = bitcast %union.VectorReg* %6258 to %union.vec128_t*
  %6259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6260 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6259, i64 0, i64 1
  %XMM1.i281 = bitcast %union.VectorReg* %6260 to %union.vec128_t*
  %6261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6262 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6261, i64 0, i64 2
  %XMM2.i282 = bitcast %union.VectorReg* %6262 to %union.vec128_t*
  %6263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6264 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6263, i64 0, i64 3
  %XMM3.i283 = bitcast %union.VectorReg* %6264 to %union.vec128_t*
  %6265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6266 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6265, i64 0, i64 4
  %XMM4.i284 = bitcast %union.VectorReg* %6266 to %union.vec128_t*
  %6267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6268 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6267, i64 0, i64 5
  %XMM5.i285 = bitcast %union.VectorReg* %6268 to %union.vec128_t*
  %6269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6270 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6269, i64 0, i64 6
  %XMM6.i286 = bitcast %union.VectorReg* %6270 to %union.vec128_t*
  %6271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6272 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6271, i64 0, i64 7
  %XMM7.i287 = bitcast %union.VectorReg* %6272 to %union.vec128_t*
  %6273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6274 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6273, i64 0, i64 8
  %XMM8.i288 = bitcast %union.VectorReg* %6274 to %union.vec128_t*
  %6275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6276 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6275, i64 0, i64 9
  %XMM9.i289 = bitcast %union.VectorReg* %6276 to %union.vec128_t*
  %6277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6278 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6277, i64 0, i64 10
  %XMM10.i290 = bitcast %union.VectorReg* %6278 to %union.vec128_t*
  %6279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6280 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6279, i64 0, i64 11
  %XMM11.i291 = bitcast %union.VectorReg* %6280 to %union.vec128_t*
  %6281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6282 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6281, i64 0, i64 12
  %XMM12.i292 = bitcast %union.VectorReg* %6282 to %union.vec128_t*
  %6283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6284 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6283, i64 0, i64 13
  %XMM13.i293 = bitcast %union.VectorReg* %6284 to %union.vec128_t*
  %6285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6286 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6285, i64 0, i64 14
  %XMM14.i294 = bitcast %union.VectorReg* %6286 to %union.vec128_t*
  %6287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6288 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6287, i64 0, i64 15
  %XMM15.i295 = bitcast %union.VectorReg* %6288 to %union.vec128_t*
  %6289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %6290 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %6289, i32 0, i32 0
  %6291 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %6290, i64 0, i64 0
  %ST0.i296 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %6291, i32 0, i32 1
  %6292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %6293 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %6292, i32 0, i32 0
  %6294 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %6293, i64 0, i64 1
  %ST1.i297 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %6294, i32 0, i32 1
  %6295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %6296 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %6295, i32 0, i32 0
  %6297 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %6296, i64 0, i64 2
  %ST2.i298 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %6297, i32 0, i32 1
  %6298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %6299 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %6298, i32 0, i32 0
  %6300 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %6299, i64 0, i64 3
  %ST3.i299 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %6300, i32 0, i32 1
  %6301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %6302 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %6301, i32 0, i32 0
  %6303 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %6302, i64 0, i64 4
  %ST4.i300 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %6303, i32 0, i32 1
  %6304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %6305 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %6304, i32 0, i32 0
  %6306 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %6305, i64 0, i64 5
  %ST5.i301 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %6306, i32 0, i32 1
  %6307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %6308 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %6307, i32 0, i32 0
  %6309 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %6308, i64 0, i64 6
  %ST6.i302 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %6309, i32 0, i32 1
  %6310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %6311 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %6310, i32 0, i32 0
  %6312 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %6311, i64 0, i64 7
  %ST7.i303 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %6312, i32 0, i32 1
  %6313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %6314 = getelementptr inbounds %struct.MMX, %struct.MMX* %6313, i32 0, i32 0
  %6315 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %6314, i64 0, i64 0
  %6316 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %6315, i32 0, i32 1
  %6317 = bitcast %union.vec64_t* %6316 to %struct.uint64v1_t*
  %6318 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %6317, i32 0, i32 0
  %MM0.i304 = getelementptr inbounds [1 x i64], [1 x i64]* %6318, i64 0, i64 0
  %6319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %6320 = getelementptr inbounds %struct.MMX, %struct.MMX* %6319, i32 0, i32 0
  %6321 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %6320, i64 0, i64 1
  %6322 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %6321, i32 0, i32 1
  %6323 = bitcast %union.vec64_t* %6322 to %struct.uint64v1_t*
  %6324 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %6323, i32 0, i32 0
  %MM1.i305 = getelementptr inbounds [1 x i64], [1 x i64]* %6324, i64 0, i64 0
  %6325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %6326 = getelementptr inbounds %struct.MMX, %struct.MMX* %6325, i32 0, i32 0
  %6327 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %6326, i64 0, i64 2
  %6328 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %6327, i32 0, i32 1
  %6329 = bitcast %union.vec64_t* %6328 to %struct.uint64v1_t*
  %6330 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %6329, i32 0, i32 0
  %MM2.i306 = getelementptr inbounds [1 x i64], [1 x i64]* %6330, i64 0, i64 0
  %6331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %6332 = getelementptr inbounds %struct.MMX, %struct.MMX* %6331, i32 0, i32 0
  %6333 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %6332, i64 0, i64 3
  %6334 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %6333, i32 0, i32 1
  %6335 = bitcast %union.vec64_t* %6334 to %struct.uint64v1_t*
  %6336 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %6335, i32 0, i32 0
  %MM3.i307 = getelementptr inbounds [1 x i64], [1 x i64]* %6336, i64 0, i64 0
  %6337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %6338 = getelementptr inbounds %struct.MMX, %struct.MMX* %6337, i32 0, i32 0
  %6339 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %6338, i64 0, i64 4
  %6340 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %6339, i32 0, i32 1
  %6341 = bitcast %union.vec64_t* %6340 to %struct.uint64v1_t*
  %6342 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %6341, i32 0, i32 0
  %MM4.i308 = getelementptr inbounds [1 x i64], [1 x i64]* %6342, i64 0, i64 0
  %6343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %6344 = getelementptr inbounds %struct.MMX, %struct.MMX* %6343, i32 0, i32 0
  %6345 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %6344, i64 0, i64 5
  %6346 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %6345, i32 0, i32 1
  %6347 = bitcast %union.vec64_t* %6346 to %struct.uint64v1_t*
  %6348 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %6347, i32 0, i32 0
  %MM5.i309 = getelementptr inbounds [1 x i64], [1 x i64]* %6348, i64 0, i64 0
  %6349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %6350 = getelementptr inbounds %struct.MMX, %struct.MMX* %6349, i32 0, i32 0
  %6351 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %6350, i64 0, i64 6
  %6352 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %6351, i32 0, i32 1
  %6353 = bitcast %union.vec64_t* %6352 to %struct.uint64v1_t*
  %6354 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %6353, i32 0, i32 0
  %MM6.i310 = getelementptr inbounds [1 x i64], [1 x i64]* %6354, i64 0, i64 0
  %6355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %6356 = getelementptr inbounds %struct.MMX, %struct.MMX* %6355, i32 0, i32 0
  %6357 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %6356, i64 0, i64 7
  %6358 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %6357, i32 0, i32 1
  %6359 = bitcast %union.vec64_t* %6358 to %struct.uint64v1_t*
  %6360 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %6359, i32 0, i32 0
  %MM7.i311 = getelementptr inbounds [1 x i64], [1 x i64]* %6360, i64 0, i64 0
  %6361 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF.i312 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %6361, i32 0, i32 5
  %6362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF.i313 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %6362, i32 0, i32 1
  %6363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF.i314 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %6363, i32 0, i32 11
  %6364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF.i315 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %6364, i32 0, i32 13
  %6365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF.i316 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %6365, i32 0, i32 3
  %6366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF.i317 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %6366, i32 0, i32 9
  %6367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF.i318 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %6367, i32 0, i32 7
  store i64* @DR0, i64** %_DR0.i170, align 8, !noalias !2504
  store i64* @DR1, i64** %_DR1.i171, align 8, !noalias !2504
  store i64* @DR2, i64** %_DR2.i172, align 8, !noalias !2504
  store i64* @DR3, i64** %_DR3.i173, align 8, !noalias !2504
  store i64* @DR4, i64** %_DR4.i174, align 8, !noalias !2504
  store i64* @DR5, i64** %_DR5.i175, align 8, !noalias !2504
  store i64* @DR6, i64** %_DR6.i176, align 8, !noalias !2504
  store i64* @DR7, i64** %_DR7.i177, align 8, !noalias !2504
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0.i178, align 8, !noalias !2504
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1.i179, align 8, !noalias !2504
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2.i180, align 8, !noalias !2504
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3.i181, align 8, !noalias !2504
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4.i182, align 8, !noalias !2504
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8.i183, align 8, !noalias !2504
  %6368 = bitcast %"class.std::bitset"* %YMM0.i264 to double*
  %6369 = load double, double* %6368, !alias.scope !2508, !noalias !2509
  %6370 = load i64, i64* %RSP.i245, !alias.scope !2508, !noalias !2509
  %6371 = load %struct.Memory*, %struct.Memory** %MEMORY.i169, !noalias !2504
  %6372 = inttoptr i64 %6370 to i64*
  %6373 = load i64, i64* %6372
  store i64 %6373, i64* %PC.i184, !alias.scope !2508, !noalias !2509
  %6374 = add i64 %6370, 8
  store i64 %6374, i64* %RSP.i245, !alias.scope !2508, !noalias !2509
  %6375 = call double @cos(double %6369)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0.i264, !alias.scope !2508, !noalias !2509
  %6376 = bitcast %"class.std::bitset"* %YMM0.i264 to double*
  store double %6375, double* %6376, !alias.scope !2508, !noalias !2509
  %6377 = load %struct.Memory*, %struct.Memory** %MEMORY.i169, !noalias !2504
  %6378 = bitcast %struct.State** %state.i160 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6378)
  %6379 = bitcast i64* %curr_pc.i161 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6379)
  %6380 = bitcast %struct.Memory** %memory.i162 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6380)
  call void @llvm.lifetime.end(i64 1, i8* %BRANCH_TAKEN.i163)
  %6381 = bitcast i64* %SS_BASE.i164 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6381)
  %6382 = bitcast i64* %ES_BASE.i165 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6382)
  %6383 = bitcast i64* %DS_BASE.i166 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6383)
  %6384 = bitcast i64* %CS_BASE.i167 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6384)
  %6385 = bitcast %struct.State** %STATE.i168 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6385)
  %6386 = bitcast %struct.Memory** %MEMORY.i169 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6386)
  %6387 = bitcast i64** %_DR0.i170 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6387)
  %6388 = bitcast i64** %_DR1.i171 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6388)
  %6389 = bitcast i64** %_DR2.i172 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6389)
  %6390 = bitcast i64** %_DR3.i173 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6390)
  %6391 = bitcast i64** %_DR4.i174 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6391)
  %6392 = bitcast i64** %_DR5.i175 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6392)
  %6393 = bitcast i64** %_DR6.i176 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6393)
  %6394 = bitcast i64** %_DR7.i177 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6394)
  %6395 = bitcast i64** %CR0.i178 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6395)
  %6396 = bitcast i64** %CR1.i179 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6396)
  %6397 = bitcast i64** %CR2.i180 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6397)
  %6398 = bitcast i64** %CR3.i181 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6398)
  %6399 = bitcast i64** %CR4.i182 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6399)
  %6400 = bitcast i64** %CR8.i183 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6400)
  %6401 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %6402 = load i64, i64* %RBP
  %6403 = sub i64 %6402, 144
  %6404 = load i64, i64* %PC
  %6405 = add i64 %6404, 8
  store i64 %6405, i64* %PC
  %6406 = inttoptr i64 %6403 to double*
  %6407 = load double, double* %6406
  %6408 = bitcast i8* %6401 to double*
  store double %6407, double* %6408, align 1, !tbaa !2451
  %6409 = getelementptr inbounds i8, i8* %6401, i64 8
  %6410 = bitcast i8* %6409 to double*
  store double 0.000000e+00, double* %6410, align 1, !tbaa !2451
  %6411 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %6412 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %6413 = load i64, i64* %RBP
  %6414 = sub i64 %6413, 152
  %6415 = load i64, i64* %PC
  %6416 = add i64 %6415, 8
  store i64 %6416, i64* %PC
  %6417 = bitcast i8* %6412 to double*
  %6418 = load double, double* %6417, align 1
  %6419 = getelementptr inbounds i8, i8* %6412, i64 8
  %6420 = bitcast i8* %6419 to i64*
  %6421 = load i64, i64* %6420, align 1
  %6422 = inttoptr i64 %6414 to double*
  %6423 = load double, double* %6422
  %6424 = fsub double %6418, %6423
  %6425 = bitcast i8* %6411 to double*
  store double %6424, double* %6425, align 1, !tbaa !2451
  %6426 = getelementptr inbounds i8, i8* %6411, i64 8
  %6427 = bitcast i8* %6426 to i64*
  store i64 %6421, i64* %6427, align 1, !tbaa !2451
  %6428 = load i64, i64* %RBP
  %6429 = sub i64 %6428, 312
  %6430 = bitcast %union.vec128_t* %XMM0 to i8*
  %6431 = load i64, i64* %PC
  %6432 = add i64 %6431, 8
  store i64 %6432, i64* %PC
  %6433 = bitcast i8* %6430 to double*
  %6434 = load double, double* %6433, align 1
  %6435 = inttoptr i64 %6429 to double*
  store double %6434, double* %6435
  %6436 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %6437 = bitcast %union.vec128_t* %XMM1 to i8*
  %6438 = load i64, i64* %PC
  %6439 = add i64 %6438, 3
  store i64 %6439, i64* %PC
  %6440 = bitcast i8* %6437 to <2 x i32>*
  %6441 = load <2 x i32>, <2 x i32>* %6440, align 1
  %6442 = getelementptr inbounds i8, i8* %6437, i64 8
  %6443 = bitcast i8* %6442 to <2 x i32>*
  %6444 = load <2 x i32>, <2 x i32>* %6443, align 1
  %6445 = extractelement <2 x i32> %6441, i32 0
  %6446 = bitcast i8* %6436 to i32*
  store i32 %6445, i32* %6446, align 1, !tbaa !2460
  %6447 = extractelement <2 x i32> %6441, i32 1
  %6448 = getelementptr inbounds i8, i8* %6436, i64 4
  %6449 = bitcast i8* %6448 to i32*
  store i32 %6447, i32* %6449, align 1, !tbaa !2460
  %6450 = extractelement <2 x i32> %6444, i32 0
  %6451 = getelementptr inbounds i8, i8* %6436, i64 8
  %6452 = bitcast i8* %6451 to i32*
  store i32 %6450, i32* %6452, align 1, !tbaa !2460
  %6453 = extractelement <2 x i32> %6444, i32 1
  %6454 = getelementptr inbounds i8, i8* %6436, i64 12
  %6455 = bitcast i8* %6454 to i32*
  store i32 %6453, i32* %6455, align 1, !tbaa !2460
  %6456 = load i64, i64* %PC
  %6457 = sub i64 %6456, 2766
  %6458 = load i64, i64* %PC
  %6459 = add i64 %6458, 5
  %6460 = load i64, i64* %PC
  %6461 = add i64 %6460, 5
  store i64 %6461, i64* %PC
  %6462 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6463 = load i64, i64* %6462, align 8, !tbaa !2428
  %6464 = add i64 %6463, -8
  %6465 = inttoptr i64 %6464 to i64*
  store i64 %6459, i64* %6465
  store i64 %6464, i64* %6462, align 8, !tbaa !2428
  %6466 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6457, i64* %6466, align 8, !tbaa !2428
  %6467 = load i64, i64* %PC
  %6468 = bitcast %struct.State** %state.i1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6468)
  %6469 = bitcast i64* %curr_pc.i2 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6469)
  %6470 = bitcast %struct.Memory** %memory.i3 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6470)
  call void @llvm.lifetime.start(i64 1, i8* %BRANCH_TAKEN.i4)
  %6471 = bitcast i64* %SS_BASE.i5 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6471)
  %6472 = bitcast i64* %ES_BASE.i6 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6472)
  %6473 = bitcast i64* %DS_BASE.i7 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6473)
  %6474 = bitcast i64* %CS_BASE.i8 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6474)
  %6475 = bitcast %struct.State** %STATE.i9 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6475)
  %6476 = bitcast %struct.Memory** %MEMORY.i10 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6476)
  %6477 = bitcast i64** %_DR0.i11 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6477)
  %6478 = bitcast i64** %_DR1.i12 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6478)
  %6479 = bitcast i64** %_DR2.i13 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6479)
  %6480 = bitcast i64** %_DR3.i14 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6480)
  %6481 = bitcast i64** %_DR4.i15 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6481)
  %6482 = bitcast i64** %_DR5.i16 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6482)
  %6483 = bitcast i64** %_DR6.i17 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6483)
  %6484 = bitcast i64** %_DR7.i18 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6484)
  %6485 = bitcast i64** %CR0.i19 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6485)
  %6486 = bitcast i64** %CR1.i20 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6486)
  %6487 = bitcast i64** %CR2.i21 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6487)
  %6488 = bitcast i64** %CR3.i22 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6488)
  %6489 = bitcast i64** %CR4.i23 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6489)
  %6490 = bitcast i64** %CR8.i24 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6490)
  store %struct.State* %0, %struct.State** %state.i1, align 8, !noalias !2510
  store i64 %6467, i64* %curr_pc.i2, align 8, !noalias !2510
  store %struct.Memory* %6377, %struct.Memory** %memory.i3, align 8, !noalias !2510
  store i8 0, i8* %BRANCH_TAKEN.i4, align 1, !noalias !2510
  store i64 0, i64* %SS_BASE.i5, align 8, !noalias !2510
  store i64 0, i64* %ES_BASE.i6, align 8, !noalias !2510
  store i64 0, i64* %DS_BASE.i7, align 8, !noalias !2510
  store i64 0, i64* %CS_BASE.i8, align 8, !noalias !2510
  store %struct.State* %0, %struct.State** %STATE.i9, align 8, !noalias !2510
  store %struct.Memory* %6377, %struct.Memory** %MEMORY.i10, align 8, !noalias !2510
  %6491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6492 = getelementptr inbounds %struct.GPR, %struct.GPR* %6491, i32 0, i32 33
  %6493 = getelementptr inbounds %struct.Reg, %struct.Reg* %6492, i32 0, i32 0
  %PC.i25 = bitcast %union.anon* %6493 to i64*
  store i64 %6467, i64* %PC.i25, align 8, !alias.scope !2514, !noalias !2515
  %6494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6495 = getelementptr inbounds %struct.GPR, %struct.GPR* %6494, i32 0, i32 1
  %6496 = getelementptr inbounds %struct.Reg, %struct.Reg* %6495, i32 0, i32 0
  %6497 = bitcast %union.anon* %6496 to %struct.anon.2*
  %AH.i26 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6497, i32 0, i32 1
  %6498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6499 = getelementptr inbounds %struct.GPR, %struct.GPR* %6498, i32 0, i32 3
  %6500 = getelementptr inbounds %struct.Reg, %struct.Reg* %6499, i32 0, i32 0
  %6501 = bitcast %union.anon* %6500 to %struct.anon.2*
  %BH.i27 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6501, i32 0, i32 1
  %6502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6503 = getelementptr inbounds %struct.GPR, %struct.GPR* %6502, i32 0, i32 5
  %6504 = getelementptr inbounds %struct.Reg, %struct.Reg* %6503, i32 0, i32 0
  %6505 = bitcast %union.anon* %6504 to %struct.anon.2*
  %CH.i28 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6505, i32 0, i32 1
  %6506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6507 = getelementptr inbounds %struct.GPR, %struct.GPR* %6506, i32 0, i32 7
  %6508 = getelementptr inbounds %struct.Reg, %struct.Reg* %6507, i32 0, i32 0
  %6509 = bitcast %union.anon* %6508 to %struct.anon.2*
  %DH.i29 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6509, i32 0, i32 1
  %6510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6511 = getelementptr inbounds %struct.GPR, %struct.GPR* %6510, i32 0, i32 1
  %6512 = getelementptr inbounds %struct.Reg, %struct.Reg* %6511, i32 0, i32 0
  %6513 = bitcast %union.anon* %6512 to %struct.anon.2*
  %AL.i30 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6513, i32 0, i32 0
  %6514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6515 = getelementptr inbounds %struct.GPR, %struct.GPR* %6514, i32 0, i32 3
  %6516 = getelementptr inbounds %struct.Reg, %struct.Reg* %6515, i32 0, i32 0
  %6517 = bitcast %union.anon* %6516 to %struct.anon.2*
  %BL.i31 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6517, i32 0, i32 0
  %6518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6519 = getelementptr inbounds %struct.GPR, %struct.GPR* %6518, i32 0, i32 5
  %6520 = getelementptr inbounds %struct.Reg, %struct.Reg* %6519, i32 0, i32 0
  %6521 = bitcast %union.anon* %6520 to %struct.anon.2*
  %CL.i32 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6521, i32 0, i32 0
  %6522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6523 = getelementptr inbounds %struct.GPR, %struct.GPR* %6522, i32 0, i32 7
  %6524 = getelementptr inbounds %struct.Reg, %struct.Reg* %6523, i32 0, i32 0
  %6525 = bitcast %union.anon* %6524 to %struct.anon.2*
  %DL.i33 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6525, i32 0, i32 0
  %6526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6527 = getelementptr inbounds %struct.GPR, %struct.GPR* %6526, i32 0, i32 9
  %6528 = getelementptr inbounds %struct.Reg, %struct.Reg* %6527, i32 0, i32 0
  %6529 = bitcast %union.anon* %6528 to %struct.anon.2*
  %SIL.i34 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6529, i32 0, i32 0
  %6530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6531 = getelementptr inbounds %struct.GPR, %struct.GPR* %6530, i32 0, i32 11
  %6532 = getelementptr inbounds %struct.Reg, %struct.Reg* %6531, i32 0, i32 0
  %6533 = bitcast %union.anon* %6532 to %struct.anon.2*
  %DIL.i35 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6533, i32 0, i32 0
  %6534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6535 = getelementptr inbounds %struct.GPR, %struct.GPR* %6534, i32 0, i32 13
  %6536 = getelementptr inbounds %struct.Reg, %struct.Reg* %6535, i32 0, i32 0
  %6537 = bitcast %union.anon* %6536 to %struct.anon.2*
  %SPL.i36 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6537, i32 0, i32 0
  %6538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6539 = getelementptr inbounds %struct.GPR, %struct.GPR* %6538, i32 0, i32 15
  %6540 = getelementptr inbounds %struct.Reg, %struct.Reg* %6539, i32 0, i32 0
  %6541 = bitcast %union.anon* %6540 to %struct.anon.2*
  %BPL.i37 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6541, i32 0, i32 0
  %6542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6543 = getelementptr inbounds %struct.GPR, %struct.GPR* %6542, i32 0, i32 17
  %6544 = getelementptr inbounds %struct.Reg, %struct.Reg* %6543, i32 0, i32 0
  %6545 = bitcast %union.anon* %6544 to %struct.anon.2*
  %R8B.i38 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6545, i32 0, i32 0
  %6546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6547 = getelementptr inbounds %struct.GPR, %struct.GPR* %6546, i32 0, i32 19
  %6548 = getelementptr inbounds %struct.Reg, %struct.Reg* %6547, i32 0, i32 0
  %6549 = bitcast %union.anon* %6548 to %struct.anon.2*
  %R9B.i39 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6549, i32 0, i32 0
  %6550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6551 = getelementptr inbounds %struct.GPR, %struct.GPR* %6550, i32 0, i32 21
  %6552 = getelementptr inbounds %struct.Reg, %struct.Reg* %6551, i32 0, i32 0
  %6553 = bitcast %union.anon* %6552 to %struct.anon.2*
  %R10B.i40 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6553, i32 0, i32 0
  %6554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6555 = getelementptr inbounds %struct.GPR, %struct.GPR* %6554, i32 0, i32 23
  %6556 = getelementptr inbounds %struct.Reg, %struct.Reg* %6555, i32 0, i32 0
  %6557 = bitcast %union.anon* %6556 to %struct.anon.2*
  %R11B.i41 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6557, i32 0, i32 0
  %6558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6559 = getelementptr inbounds %struct.GPR, %struct.GPR* %6558, i32 0, i32 25
  %6560 = getelementptr inbounds %struct.Reg, %struct.Reg* %6559, i32 0, i32 0
  %6561 = bitcast %union.anon* %6560 to %struct.anon.2*
  %R12B.i42 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6561, i32 0, i32 0
  %6562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6563 = getelementptr inbounds %struct.GPR, %struct.GPR* %6562, i32 0, i32 27
  %6564 = getelementptr inbounds %struct.Reg, %struct.Reg* %6563, i32 0, i32 0
  %6565 = bitcast %union.anon* %6564 to %struct.anon.2*
  %R13B.i43 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6565, i32 0, i32 0
  %6566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6567 = getelementptr inbounds %struct.GPR, %struct.GPR* %6566, i32 0, i32 29
  %6568 = getelementptr inbounds %struct.Reg, %struct.Reg* %6567, i32 0, i32 0
  %6569 = bitcast %union.anon* %6568 to %struct.anon.2*
  %R14B.i44 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6569, i32 0, i32 0
  %6570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6571 = getelementptr inbounds %struct.GPR, %struct.GPR* %6570, i32 0, i32 31
  %6572 = getelementptr inbounds %struct.Reg, %struct.Reg* %6571, i32 0, i32 0
  %6573 = bitcast %union.anon* %6572 to %struct.anon.2*
  %R15B.i45 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6573, i32 0, i32 0
  %6574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6575 = getelementptr inbounds %struct.GPR, %struct.GPR* %6574, i32 0, i32 1
  %6576 = getelementptr inbounds %struct.Reg, %struct.Reg* %6575, i32 0, i32 0
  %AX.i46 = bitcast %union.anon* %6576 to i16*
  %6577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6578 = getelementptr inbounds %struct.GPR, %struct.GPR* %6577, i32 0, i32 3
  %6579 = getelementptr inbounds %struct.Reg, %struct.Reg* %6578, i32 0, i32 0
  %BX.i47 = bitcast %union.anon* %6579 to i16*
  %6580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6581 = getelementptr inbounds %struct.GPR, %struct.GPR* %6580, i32 0, i32 5
  %6582 = getelementptr inbounds %struct.Reg, %struct.Reg* %6581, i32 0, i32 0
  %CX.i48 = bitcast %union.anon* %6582 to i16*
  %6583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6584 = getelementptr inbounds %struct.GPR, %struct.GPR* %6583, i32 0, i32 7
  %6585 = getelementptr inbounds %struct.Reg, %struct.Reg* %6584, i32 0, i32 0
  %DX.i49 = bitcast %union.anon* %6585 to i16*
  %6586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6587 = getelementptr inbounds %struct.GPR, %struct.GPR* %6586, i32 0, i32 9
  %6588 = getelementptr inbounds %struct.Reg, %struct.Reg* %6587, i32 0, i32 0
  %SI.i50 = bitcast %union.anon* %6588 to i16*
  %6589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6590 = getelementptr inbounds %struct.GPR, %struct.GPR* %6589, i32 0, i32 11
  %6591 = getelementptr inbounds %struct.Reg, %struct.Reg* %6590, i32 0, i32 0
  %DI.i51 = bitcast %union.anon* %6591 to i16*
  %6592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6593 = getelementptr inbounds %struct.GPR, %struct.GPR* %6592, i32 0, i32 13
  %6594 = getelementptr inbounds %struct.Reg, %struct.Reg* %6593, i32 0, i32 0
  %SP.i52 = bitcast %union.anon* %6594 to i16*
  %6595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6596 = getelementptr inbounds %struct.GPR, %struct.GPR* %6595, i32 0, i32 15
  %6597 = getelementptr inbounds %struct.Reg, %struct.Reg* %6596, i32 0, i32 0
  %BP.i53 = bitcast %union.anon* %6597 to i16*
  %6598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6599 = getelementptr inbounds %struct.GPR, %struct.GPR* %6598, i32 0, i32 17
  %6600 = getelementptr inbounds %struct.Reg, %struct.Reg* %6599, i32 0, i32 0
  %R8W.i54 = bitcast %union.anon* %6600 to i16*
  %6601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6602 = getelementptr inbounds %struct.GPR, %struct.GPR* %6601, i32 0, i32 19
  %6603 = getelementptr inbounds %struct.Reg, %struct.Reg* %6602, i32 0, i32 0
  %R9W.i55 = bitcast %union.anon* %6603 to i16*
  %6604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6605 = getelementptr inbounds %struct.GPR, %struct.GPR* %6604, i32 0, i32 21
  %6606 = getelementptr inbounds %struct.Reg, %struct.Reg* %6605, i32 0, i32 0
  %R10W.i56 = bitcast %union.anon* %6606 to i16*
  %6607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6608 = getelementptr inbounds %struct.GPR, %struct.GPR* %6607, i32 0, i32 23
  %6609 = getelementptr inbounds %struct.Reg, %struct.Reg* %6608, i32 0, i32 0
  %R11W.i57 = bitcast %union.anon* %6609 to i16*
  %6610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6611 = getelementptr inbounds %struct.GPR, %struct.GPR* %6610, i32 0, i32 25
  %6612 = getelementptr inbounds %struct.Reg, %struct.Reg* %6611, i32 0, i32 0
  %R12W.i58 = bitcast %union.anon* %6612 to i16*
  %6613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6614 = getelementptr inbounds %struct.GPR, %struct.GPR* %6613, i32 0, i32 27
  %6615 = getelementptr inbounds %struct.Reg, %struct.Reg* %6614, i32 0, i32 0
  %R13W.i59 = bitcast %union.anon* %6615 to i16*
  %6616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6617 = getelementptr inbounds %struct.GPR, %struct.GPR* %6616, i32 0, i32 29
  %6618 = getelementptr inbounds %struct.Reg, %struct.Reg* %6617, i32 0, i32 0
  %R14W.i60 = bitcast %union.anon* %6618 to i16*
  %6619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6620 = getelementptr inbounds %struct.GPR, %struct.GPR* %6619, i32 0, i32 31
  %6621 = getelementptr inbounds %struct.Reg, %struct.Reg* %6620, i32 0, i32 0
  %R15W.i61 = bitcast %union.anon* %6621 to i16*
  %6622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6623 = getelementptr inbounds %struct.GPR, %struct.GPR* %6622, i32 0, i32 33
  %6624 = getelementptr inbounds %struct.Reg, %struct.Reg* %6623, i32 0, i32 0
  %IP.i62 = bitcast %union.anon* %6624 to i16*
  %6625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6626 = getelementptr inbounds %struct.GPR, %struct.GPR* %6625, i32 0, i32 1
  %6627 = getelementptr inbounds %struct.Reg, %struct.Reg* %6626, i32 0, i32 0
  %EAX.i63 = bitcast %union.anon* %6627 to i32*
  %6628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6629 = getelementptr inbounds %struct.GPR, %struct.GPR* %6628, i32 0, i32 3
  %6630 = getelementptr inbounds %struct.Reg, %struct.Reg* %6629, i32 0, i32 0
  %EBX.i64 = bitcast %union.anon* %6630 to i32*
  %6631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6632 = getelementptr inbounds %struct.GPR, %struct.GPR* %6631, i32 0, i32 5
  %6633 = getelementptr inbounds %struct.Reg, %struct.Reg* %6632, i32 0, i32 0
  %ECX.i65 = bitcast %union.anon* %6633 to i32*
  %6634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6635 = getelementptr inbounds %struct.GPR, %struct.GPR* %6634, i32 0, i32 7
  %6636 = getelementptr inbounds %struct.Reg, %struct.Reg* %6635, i32 0, i32 0
  %EDX.i66 = bitcast %union.anon* %6636 to i32*
  %6637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6638 = getelementptr inbounds %struct.GPR, %struct.GPR* %6637, i32 0, i32 9
  %6639 = getelementptr inbounds %struct.Reg, %struct.Reg* %6638, i32 0, i32 0
  %ESI.i67 = bitcast %union.anon* %6639 to i32*
  %6640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6641 = getelementptr inbounds %struct.GPR, %struct.GPR* %6640, i32 0, i32 11
  %6642 = getelementptr inbounds %struct.Reg, %struct.Reg* %6641, i32 0, i32 0
  %EDI.i68 = bitcast %union.anon* %6642 to i32*
  %6643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6644 = getelementptr inbounds %struct.GPR, %struct.GPR* %6643, i32 0, i32 13
  %6645 = getelementptr inbounds %struct.Reg, %struct.Reg* %6644, i32 0, i32 0
  %ESP.i69 = bitcast %union.anon* %6645 to i32*
  %6646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6647 = getelementptr inbounds %struct.GPR, %struct.GPR* %6646, i32 0, i32 15
  %6648 = getelementptr inbounds %struct.Reg, %struct.Reg* %6647, i32 0, i32 0
  %EBP.i70 = bitcast %union.anon* %6648 to i32*
  %6649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6650 = getelementptr inbounds %struct.GPR, %struct.GPR* %6649, i32 0, i32 33
  %6651 = getelementptr inbounds %struct.Reg, %struct.Reg* %6650, i32 0, i32 0
  %EIP.i71 = bitcast %union.anon* %6651 to i32*
  %6652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6653 = getelementptr inbounds %struct.GPR, %struct.GPR* %6652, i32 0, i32 17
  %6654 = getelementptr inbounds %struct.Reg, %struct.Reg* %6653, i32 0, i32 0
  %R8D.i72 = bitcast %union.anon* %6654 to i32*
  %6655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6656 = getelementptr inbounds %struct.GPR, %struct.GPR* %6655, i32 0, i32 19
  %6657 = getelementptr inbounds %struct.Reg, %struct.Reg* %6656, i32 0, i32 0
  %R9D.i73 = bitcast %union.anon* %6657 to i32*
  %6658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6659 = getelementptr inbounds %struct.GPR, %struct.GPR* %6658, i32 0, i32 21
  %6660 = getelementptr inbounds %struct.Reg, %struct.Reg* %6659, i32 0, i32 0
  %R10D.i74 = bitcast %union.anon* %6660 to i32*
  %6661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6662 = getelementptr inbounds %struct.GPR, %struct.GPR* %6661, i32 0, i32 23
  %6663 = getelementptr inbounds %struct.Reg, %struct.Reg* %6662, i32 0, i32 0
  %R11D.i75 = bitcast %union.anon* %6663 to i32*
  %6664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6665 = getelementptr inbounds %struct.GPR, %struct.GPR* %6664, i32 0, i32 25
  %6666 = getelementptr inbounds %struct.Reg, %struct.Reg* %6665, i32 0, i32 0
  %R12D.i76 = bitcast %union.anon* %6666 to i32*
  %6667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6668 = getelementptr inbounds %struct.GPR, %struct.GPR* %6667, i32 0, i32 27
  %6669 = getelementptr inbounds %struct.Reg, %struct.Reg* %6668, i32 0, i32 0
  %R13D.i77 = bitcast %union.anon* %6669 to i32*
  %6670 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6671 = getelementptr inbounds %struct.GPR, %struct.GPR* %6670, i32 0, i32 29
  %6672 = getelementptr inbounds %struct.Reg, %struct.Reg* %6671, i32 0, i32 0
  %R14D.i78 = bitcast %union.anon* %6672 to i32*
  %6673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6674 = getelementptr inbounds %struct.GPR, %struct.GPR* %6673, i32 0, i32 31
  %6675 = getelementptr inbounds %struct.Reg, %struct.Reg* %6674, i32 0, i32 0
  %R15D.i79 = bitcast %union.anon* %6675 to i32*
  %6676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6677 = getelementptr inbounds %struct.GPR, %struct.GPR* %6676, i32 0, i32 1
  %6678 = getelementptr inbounds %struct.Reg, %struct.Reg* %6677, i32 0, i32 0
  %RAX.i80 = bitcast %union.anon* %6678 to i64*
  %6679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6680 = getelementptr inbounds %struct.GPR, %struct.GPR* %6679, i32 0, i32 3
  %6681 = getelementptr inbounds %struct.Reg, %struct.Reg* %6680, i32 0, i32 0
  %RBX.i81 = bitcast %union.anon* %6681 to i64*
  %6682 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6683 = getelementptr inbounds %struct.GPR, %struct.GPR* %6682, i32 0, i32 5
  %6684 = getelementptr inbounds %struct.Reg, %struct.Reg* %6683, i32 0, i32 0
  %RCX.i82 = bitcast %union.anon* %6684 to i64*
  %6685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6686 = getelementptr inbounds %struct.GPR, %struct.GPR* %6685, i32 0, i32 7
  %6687 = getelementptr inbounds %struct.Reg, %struct.Reg* %6686, i32 0, i32 0
  %RDX.i83 = bitcast %union.anon* %6687 to i64*
  %6688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6689 = getelementptr inbounds %struct.GPR, %struct.GPR* %6688, i32 0, i32 9
  %6690 = getelementptr inbounds %struct.Reg, %struct.Reg* %6689, i32 0, i32 0
  %RSI.i84 = bitcast %union.anon* %6690 to i64*
  %6691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6692 = getelementptr inbounds %struct.GPR, %struct.GPR* %6691, i32 0, i32 11
  %6693 = getelementptr inbounds %struct.Reg, %struct.Reg* %6692, i32 0, i32 0
  %RDI.i85 = bitcast %union.anon* %6693 to i64*
  %6694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6695 = getelementptr inbounds %struct.GPR, %struct.GPR* %6694, i32 0, i32 13
  %6696 = getelementptr inbounds %struct.Reg, %struct.Reg* %6695, i32 0, i32 0
  %RSP.i86 = bitcast %union.anon* %6696 to i64*
  %6697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6698 = getelementptr inbounds %struct.GPR, %struct.GPR* %6697, i32 0, i32 15
  %6699 = getelementptr inbounds %struct.Reg, %struct.Reg* %6698, i32 0, i32 0
  %RBP.i87 = bitcast %union.anon* %6699 to i64*
  %6700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6701 = getelementptr inbounds %struct.GPR, %struct.GPR* %6700, i32 0, i32 17
  %6702 = getelementptr inbounds %struct.Reg, %struct.Reg* %6701, i32 0, i32 0
  %R8.i88 = bitcast %union.anon* %6702 to i64*
  %6703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6704 = getelementptr inbounds %struct.GPR, %struct.GPR* %6703, i32 0, i32 19
  %6705 = getelementptr inbounds %struct.Reg, %struct.Reg* %6704, i32 0, i32 0
  %R9.i89 = bitcast %union.anon* %6705 to i64*
  %6706 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6707 = getelementptr inbounds %struct.GPR, %struct.GPR* %6706, i32 0, i32 21
  %6708 = getelementptr inbounds %struct.Reg, %struct.Reg* %6707, i32 0, i32 0
  %R10.i90 = bitcast %union.anon* %6708 to i64*
  %6709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6710 = getelementptr inbounds %struct.GPR, %struct.GPR* %6709, i32 0, i32 23
  %6711 = getelementptr inbounds %struct.Reg, %struct.Reg* %6710, i32 0, i32 0
  %R11.i91 = bitcast %union.anon* %6711 to i64*
  %6712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6713 = getelementptr inbounds %struct.GPR, %struct.GPR* %6712, i32 0, i32 25
  %6714 = getelementptr inbounds %struct.Reg, %struct.Reg* %6713, i32 0, i32 0
  %R12.i92 = bitcast %union.anon* %6714 to i64*
  %6715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6716 = getelementptr inbounds %struct.GPR, %struct.GPR* %6715, i32 0, i32 27
  %6717 = getelementptr inbounds %struct.Reg, %struct.Reg* %6716, i32 0, i32 0
  %R13.i93 = bitcast %union.anon* %6717 to i64*
  %6718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6719 = getelementptr inbounds %struct.GPR, %struct.GPR* %6718, i32 0, i32 29
  %6720 = getelementptr inbounds %struct.Reg, %struct.Reg* %6719, i32 0, i32 0
  %R14.i94 = bitcast %union.anon* %6720 to i64*
  %6721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6722 = getelementptr inbounds %struct.GPR, %struct.GPR* %6721, i32 0, i32 31
  %6723 = getelementptr inbounds %struct.Reg, %struct.Reg* %6722, i32 0, i32 0
  %R15.i95 = bitcast %union.anon* %6723 to i64*
  %6724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6725 = getelementptr inbounds %struct.GPR, %struct.GPR* %6724, i32 0, i32 33
  %6726 = getelementptr inbounds %struct.Reg, %struct.Reg* %6725, i32 0, i32 0
  %RIP.i96 = bitcast %union.anon* %6726 to i64*
  %6727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %6728 = getelementptr inbounds %struct.Segments, %struct.Segments* %6727, i32 0, i32 1
  %SS.i97 = bitcast %union.SegmentSelector* %6728 to i16*
  %6729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %6730 = getelementptr inbounds %struct.Segments, %struct.Segments* %6729, i32 0, i32 3
  %ES.i98 = bitcast %union.SegmentSelector* %6730 to i16*
  %6731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %6732 = getelementptr inbounds %struct.Segments, %struct.Segments* %6731, i32 0, i32 5
  %GS.i99 = bitcast %union.SegmentSelector* %6732 to i16*
  %6733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %6734 = getelementptr inbounds %struct.Segments, %struct.Segments* %6733, i32 0, i32 7
  %FS.i100 = bitcast %union.SegmentSelector* %6734 to i16*
  %6735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %6736 = getelementptr inbounds %struct.Segments, %struct.Segments* %6735, i32 0, i32 9
  %DS.i101 = bitcast %union.SegmentSelector* %6736 to i16*
  %6737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %6738 = getelementptr inbounds %struct.Segments, %struct.Segments* %6737, i32 0, i32 11
  %CS.i102 = bitcast %union.SegmentSelector* %6738 to i16*
  %6739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %6740 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %6739, i32 0, i32 5
  %6741 = getelementptr inbounds %struct.Reg, %struct.Reg* %6740, i32 0, i32 0
  %GS_BASE.i103 = bitcast %union.anon* %6741 to i64*
  %6742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %6743 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %6742, i32 0, i32 7
  %6744 = getelementptr inbounds %struct.Reg, %struct.Reg* %6743, i32 0, i32 0
  %FS_BASE.i104 = bitcast %union.anon* %6744 to i64*
  %6745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6746 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6745, i64 0, i64 0
  %YMM0.i105 = bitcast %union.VectorReg* %6746 to %"class.std::bitset"*
  %6747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6748 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6747, i64 0, i64 1
  %YMM1.i106 = bitcast %union.VectorReg* %6748 to %"class.std::bitset"*
  %6749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6750 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6749, i64 0, i64 2
  %YMM2.i107 = bitcast %union.VectorReg* %6750 to %"class.std::bitset"*
  %6751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6752 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6751, i64 0, i64 3
  %YMM3.i108 = bitcast %union.VectorReg* %6752 to %"class.std::bitset"*
  %6753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6754 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6753, i64 0, i64 4
  %YMM4.i109 = bitcast %union.VectorReg* %6754 to %"class.std::bitset"*
  %6755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6756 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6755, i64 0, i64 5
  %YMM5.i110 = bitcast %union.VectorReg* %6756 to %"class.std::bitset"*
  %6757 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6758 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6757, i64 0, i64 6
  %YMM6.i111 = bitcast %union.VectorReg* %6758 to %"class.std::bitset"*
  %6759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6760 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6759, i64 0, i64 7
  %YMM7.i112 = bitcast %union.VectorReg* %6760 to %"class.std::bitset"*
  %6761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6762 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6761, i64 0, i64 8
  %YMM8.i113 = bitcast %union.VectorReg* %6762 to %"class.std::bitset"*
  %6763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6764 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6763, i64 0, i64 9
  %YMM9.i114 = bitcast %union.VectorReg* %6764 to %"class.std::bitset"*
  %6765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6766 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6765, i64 0, i64 10
  %YMM10.i115 = bitcast %union.VectorReg* %6766 to %"class.std::bitset"*
  %6767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6768 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6767, i64 0, i64 11
  %YMM11.i116 = bitcast %union.VectorReg* %6768 to %"class.std::bitset"*
  %6769 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6770 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6769, i64 0, i64 12
  %YMM12.i117 = bitcast %union.VectorReg* %6770 to %"class.std::bitset"*
  %6771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6772 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6771, i64 0, i64 13
  %YMM13.i118 = bitcast %union.VectorReg* %6772 to %"class.std::bitset"*
  %6773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6774 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6773, i64 0, i64 14
  %YMM14.i119 = bitcast %union.VectorReg* %6774 to %"class.std::bitset"*
  %6775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6776 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6775, i64 0, i64 15
  %YMM15.i120 = bitcast %union.VectorReg* %6776 to %"class.std::bitset"*
  %6777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6778 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6777, i64 0, i64 0
  %XMM0.i121 = bitcast %union.VectorReg* %6778 to %union.vec128_t*
  %6779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6780 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6779, i64 0, i64 1
  %XMM1.i122 = bitcast %union.VectorReg* %6780 to %union.vec128_t*
  %6781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6782 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6781, i64 0, i64 2
  %XMM2.i123 = bitcast %union.VectorReg* %6782 to %union.vec128_t*
  %6783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6784 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6783, i64 0, i64 3
  %XMM3.i124 = bitcast %union.VectorReg* %6784 to %union.vec128_t*
  %6785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6786 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6785, i64 0, i64 4
  %XMM4.i125 = bitcast %union.VectorReg* %6786 to %union.vec128_t*
  %6787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6788 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6787, i64 0, i64 5
  %XMM5.i126 = bitcast %union.VectorReg* %6788 to %union.vec128_t*
  %6789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6790 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6789, i64 0, i64 6
  %XMM6.i127 = bitcast %union.VectorReg* %6790 to %union.vec128_t*
  %6791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6792 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6791, i64 0, i64 7
  %XMM7.i128 = bitcast %union.VectorReg* %6792 to %union.vec128_t*
  %6793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6794 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6793, i64 0, i64 8
  %XMM8.i129 = bitcast %union.VectorReg* %6794 to %union.vec128_t*
  %6795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6796 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6795, i64 0, i64 9
  %XMM9.i130 = bitcast %union.VectorReg* %6796 to %union.vec128_t*
  %6797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6798 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6797, i64 0, i64 10
  %XMM10.i131 = bitcast %union.VectorReg* %6798 to %union.vec128_t*
  %6799 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6800 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6799, i64 0, i64 11
  %XMM11.i132 = bitcast %union.VectorReg* %6800 to %union.vec128_t*
  %6801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6802 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6801, i64 0, i64 12
  %XMM12.i133 = bitcast %union.VectorReg* %6802 to %union.vec128_t*
  %6803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6804 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6803, i64 0, i64 13
  %XMM13.i134 = bitcast %union.VectorReg* %6804 to %union.vec128_t*
  %6805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6806 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6805, i64 0, i64 14
  %XMM14.i135 = bitcast %union.VectorReg* %6806 to %union.vec128_t*
  %6807 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6808 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6807, i64 0, i64 15
  %XMM15.i136 = bitcast %union.VectorReg* %6808 to %union.vec128_t*
  %6809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %6810 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %6809, i32 0, i32 0
  %6811 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %6810, i64 0, i64 0
  %ST0.i137 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %6811, i32 0, i32 1
  %6812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %6813 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %6812, i32 0, i32 0
  %6814 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %6813, i64 0, i64 1
  %ST1.i138 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %6814, i32 0, i32 1
  %6815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %6816 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %6815, i32 0, i32 0
  %6817 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %6816, i64 0, i64 2
  %ST2.i139 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %6817, i32 0, i32 1
  %6818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %6819 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %6818, i32 0, i32 0
  %6820 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %6819, i64 0, i64 3
  %ST3.i140 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %6820, i32 0, i32 1
  %6821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %6822 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %6821, i32 0, i32 0
  %6823 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %6822, i64 0, i64 4
  %ST4.i141 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %6823, i32 0, i32 1
  %6824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %6825 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %6824, i32 0, i32 0
  %6826 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %6825, i64 0, i64 5
  %ST5.i142 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %6826, i32 0, i32 1
  %6827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %6828 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %6827, i32 0, i32 0
  %6829 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %6828, i64 0, i64 6
  %ST6.i143 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %6829, i32 0, i32 1
  %6830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %6831 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %6830, i32 0, i32 0
  %6832 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %6831, i64 0, i64 7
  %ST7.i144 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %6832, i32 0, i32 1
  %6833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %6834 = getelementptr inbounds %struct.MMX, %struct.MMX* %6833, i32 0, i32 0
  %6835 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %6834, i64 0, i64 0
  %6836 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %6835, i32 0, i32 1
  %6837 = bitcast %union.vec64_t* %6836 to %struct.uint64v1_t*
  %6838 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %6837, i32 0, i32 0
  %MM0.i145 = getelementptr inbounds [1 x i64], [1 x i64]* %6838, i64 0, i64 0
  %6839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %6840 = getelementptr inbounds %struct.MMX, %struct.MMX* %6839, i32 0, i32 0
  %6841 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %6840, i64 0, i64 1
  %6842 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %6841, i32 0, i32 1
  %6843 = bitcast %union.vec64_t* %6842 to %struct.uint64v1_t*
  %6844 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %6843, i32 0, i32 0
  %MM1.i146 = getelementptr inbounds [1 x i64], [1 x i64]* %6844, i64 0, i64 0
  %6845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %6846 = getelementptr inbounds %struct.MMX, %struct.MMX* %6845, i32 0, i32 0
  %6847 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %6846, i64 0, i64 2
  %6848 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %6847, i32 0, i32 1
  %6849 = bitcast %union.vec64_t* %6848 to %struct.uint64v1_t*
  %6850 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %6849, i32 0, i32 0
  %MM2.i147 = getelementptr inbounds [1 x i64], [1 x i64]* %6850, i64 0, i64 0
  %6851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %6852 = getelementptr inbounds %struct.MMX, %struct.MMX* %6851, i32 0, i32 0
  %6853 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %6852, i64 0, i64 3
  %6854 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %6853, i32 0, i32 1
  %6855 = bitcast %union.vec64_t* %6854 to %struct.uint64v1_t*
  %6856 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %6855, i32 0, i32 0
  %MM3.i148 = getelementptr inbounds [1 x i64], [1 x i64]* %6856, i64 0, i64 0
  %6857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %6858 = getelementptr inbounds %struct.MMX, %struct.MMX* %6857, i32 0, i32 0
  %6859 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %6858, i64 0, i64 4
  %6860 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %6859, i32 0, i32 1
  %6861 = bitcast %union.vec64_t* %6860 to %struct.uint64v1_t*
  %6862 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %6861, i32 0, i32 0
  %MM4.i149 = getelementptr inbounds [1 x i64], [1 x i64]* %6862, i64 0, i64 0
  %6863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %6864 = getelementptr inbounds %struct.MMX, %struct.MMX* %6863, i32 0, i32 0
  %6865 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %6864, i64 0, i64 5
  %6866 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %6865, i32 0, i32 1
  %6867 = bitcast %union.vec64_t* %6866 to %struct.uint64v1_t*
  %6868 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %6867, i32 0, i32 0
  %MM5.i150 = getelementptr inbounds [1 x i64], [1 x i64]* %6868, i64 0, i64 0
  %6869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %6870 = getelementptr inbounds %struct.MMX, %struct.MMX* %6869, i32 0, i32 0
  %6871 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %6870, i64 0, i64 6
  %6872 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %6871, i32 0, i32 1
  %6873 = bitcast %union.vec64_t* %6872 to %struct.uint64v1_t*
  %6874 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %6873, i32 0, i32 0
  %MM6.i151 = getelementptr inbounds [1 x i64], [1 x i64]* %6874, i64 0, i64 0
  %6875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %6876 = getelementptr inbounds %struct.MMX, %struct.MMX* %6875, i32 0, i32 0
  %6877 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %6876, i64 0, i64 7
  %6878 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %6877, i32 0, i32 1
  %6879 = bitcast %union.vec64_t* %6878 to %struct.uint64v1_t*
  %6880 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %6879, i32 0, i32 0
  %MM7.i152 = getelementptr inbounds [1 x i64], [1 x i64]* %6880, i64 0, i64 0
  %6881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF.i153 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %6881, i32 0, i32 5
  %6882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF.i154 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %6882, i32 0, i32 1
  %6883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF.i155 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %6883, i32 0, i32 11
  %6884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF.i156 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %6884, i32 0, i32 13
  %6885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF.i157 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %6885, i32 0, i32 3
  %6886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF.i158 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %6886, i32 0, i32 9
  %6887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF.i159 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %6887, i32 0, i32 7
  store i64* @DR0, i64** %_DR0.i11, align 8, !noalias !2510
  store i64* @DR1, i64** %_DR1.i12, align 8, !noalias !2510
  store i64* @DR2, i64** %_DR2.i13, align 8, !noalias !2510
  store i64* @DR3, i64** %_DR3.i14, align 8, !noalias !2510
  store i64* @DR4, i64** %_DR4.i15, align 8, !noalias !2510
  store i64* @DR5, i64** %_DR5.i16, align 8, !noalias !2510
  store i64* @DR6, i64** %_DR6.i17, align 8, !noalias !2510
  store i64* @DR7, i64** %_DR7.i18, align 8, !noalias !2510
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0.i19, align 8, !noalias !2510
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1.i20, align 8, !noalias !2510
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2.i21, align 8, !noalias !2510
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3.i22, align 8, !noalias !2510
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4.i23, align 8, !noalias !2510
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8.i24, align 8, !noalias !2510
  %6888 = bitcast %"class.std::bitset"* %YMM0.i105 to double*
  %6889 = load double, double* %6888, !alias.scope !2514, !noalias !2515
  %6890 = load i64, i64* %RSP.i86, !alias.scope !2514, !noalias !2515
  %6891 = load %struct.Memory*, %struct.Memory** %MEMORY.i10, !noalias !2510
  %6892 = inttoptr i64 %6890 to i64*
  %6893 = load i64, i64* %6892
  store i64 %6893, i64* %PC.i25, !alias.scope !2514, !noalias !2515
  %6894 = add i64 %6890, 8
  store i64 %6894, i64* %RSP.i86, !alias.scope !2514, !noalias !2515
  %6895 = call double @cos(double %6889)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0.i105, !alias.scope !2514, !noalias !2515
  %6896 = bitcast %"class.std::bitset"* %YMM0.i105 to double*
  store double %6895, double* %6896, !alias.scope !2514, !noalias !2515
  %6897 = load %struct.Memory*, %struct.Memory** %MEMORY.i10, !noalias !2510
  %6898 = bitcast %struct.State** %state.i1 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6898)
  %6899 = bitcast i64* %curr_pc.i2 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6899)
  %6900 = bitcast %struct.Memory** %memory.i3 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6900)
  call void @llvm.lifetime.end(i64 1, i8* %BRANCH_TAKEN.i4)
  %6901 = bitcast i64* %SS_BASE.i5 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6901)
  %6902 = bitcast i64* %ES_BASE.i6 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6902)
  %6903 = bitcast i64* %DS_BASE.i7 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6903)
  %6904 = bitcast i64* %CS_BASE.i8 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6904)
  %6905 = bitcast %struct.State** %STATE.i9 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6905)
  %6906 = bitcast %struct.Memory** %MEMORY.i10 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6906)
  %6907 = bitcast i64** %_DR0.i11 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6907)
  %6908 = bitcast i64** %_DR1.i12 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6908)
  %6909 = bitcast i64** %_DR2.i13 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6909)
  %6910 = bitcast i64** %_DR3.i14 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6910)
  %6911 = bitcast i64** %_DR4.i15 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6911)
  %6912 = bitcast i64** %_DR5.i16 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6912)
  %6913 = bitcast i64** %_DR6.i17 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6913)
  %6914 = bitcast i64** %_DR7.i18 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6914)
  %6915 = bitcast i64** %CR0.i19 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6915)
  %6916 = bitcast i64** %CR1.i20 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6916)
  %6917 = bitcast i64** %CR2.i21 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6917)
  %6918 = bitcast i64** %CR3.i22 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6918)
  %6919 = bitcast i64** %CR4.i23 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6919)
  %6920 = bitcast i64** %CR8.i24 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6920)
  %6921 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %6922 = load i64, i64* %RBP
  %6923 = sub i64 %6922, 312
  %6924 = load i64, i64* %PC
  %6925 = add i64 %6924, 8
  store i64 %6925, i64* %PC
  %6926 = inttoptr i64 %6923 to double*
  %6927 = load double, double* %6926
  %6928 = bitcast i8* %6921 to double*
  store double %6927, double* %6928, align 1, !tbaa !2451
  %6929 = getelementptr inbounds i8, i8* %6921, i64 8
  %6930 = bitcast i8* %6929 to double*
  store double 0.000000e+00, double* %6930, align 1, !tbaa !2451
  %6931 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %6932 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %6933 = bitcast %union.vec128_t* %XMM0 to i8*
  %6934 = load i64, i64* %PC
  %6935 = add i64 %6934, 4
  store i64 %6935, i64* %PC
  %6936 = bitcast i8* %6932 to double*
  %6937 = load double, double* %6936, align 1
  %6938 = getelementptr inbounds i8, i8* %6932, i64 8
  %6939 = bitcast i8* %6938 to i64*
  %6940 = load i64, i64* %6939, align 1
  %6941 = bitcast i8* %6933 to double*
  %6942 = load double, double* %6941, align 1
  %6943 = fadd double %6937, %6942
  %6944 = bitcast i8* %6931 to double*
  store double %6943, double* %6944, align 1, !tbaa !2451
  %6945 = getelementptr inbounds i8, i8* %6931, i64 8
  %6946 = bitcast i8* %6945 to i64*
  store i64 %6940, i64* %6946, align 1, !tbaa !2451
  %6947 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %6948 = load i64, i64* %RBP
  %6949 = sub i64 %6948, 280
  %6950 = load i64, i64* %PC
  %6951 = add i64 %6950, 8
  store i64 %6951, i64* %PC
  %6952 = inttoptr i64 %6949 to double*
  %6953 = load double, double* %6952
  %6954 = bitcast i8* %6947 to double*
  store double %6953, double* %6954, align 1, !tbaa !2451
  %6955 = getelementptr inbounds i8, i8* %6947, i64 8
  %6956 = bitcast i8* %6955 to double*
  store double 0.000000e+00, double* %6956, align 1, !tbaa !2451
  %6957 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %6958 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %6959 = bitcast %union.vec128_t* %XMM0 to i8*
  %6960 = load i64, i64* %PC
  %6961 = add i64 %6960, 4
  store i64 %6961, i64* %PC
  %6962 = bitcast i8* %6958 to double*
  %6963 = load double, double* %6962, align 1
  %6964 = getelementptr inbounds i8, i8* %6958, i64 8
  %6965 = bitcast i8* %6964 to i64*
  %6966 = load i64, i64* %6965, align 1
  %6967 = bitcast i8* %6959 to double*
  %6968 = load double, double* %6967, align 1
  %6969 = fsub double %6963, %6968
  %6970 = bitcast i8* %6957 to double*
  store double %6969, double* %6970, align 1, !tbaa !2451
  %6971 = getelementptr inbounds i8, i8* %6957, i64 8
  %6972 = bitcast i8* %6971 to i64*
  store i64 %6966, i64* %6972, align 1, !tbaa !2451
  %6973 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %6974 = load i64, i64* %RBP
  %6975 = sub i64 %6974, 304
  %6976 = load i64, i64* %PC
  %6977 = add i64 %6976, 8
  store i64 %6977, i64* %PC
  %6978 = inttoptr i64 %6975 to double*
  %6979 = load double, double* %6978
  %6980 = bitcast i8* %6973 to double*
  store double %6979, double* %6980, align 1, !tbaa !2451
  %6981 = getelementptr inbounds i8, i8* %6973, i64 8
  %6982 = bitcast i8* %6981 to double*
  store double 0.000000e+00, double* %6982, align 1, !tbaa !2451
  %6983 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %6984 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %6985 = bitcast %union.vec128_t* %XMM1 to i8*
  %6986 = load i64, i64* %PC
  %6987 = add i64 %6986, 4
  store i64 %6987, i64* %PC
  %6988 = bitcast i8* %6984 to double*
  %6989 = load double, double* %6988, align 1
  %6990 = getelementptr inbounds i8, i8* %6984, i64 8
  %6991 = bitcast i8* %6990 to i64*
  %6992 = load i64, i64* %6991, align 1
  %6993 = bitcast i8* %6985 to double*
  %6994 = load double, double* %6993, align 1
  %6995 = fdiv double %6989, %6994
  %6996 = bitcast i8* %6983 to double*
  store double %6995, double* %6996, align 1, !tbaa !2451
  %6997 = getelementptr inbounds i8, i8* %6983, i64 8
  %6998 = bitcast i8* %6997 to i64*
  store i64 %6992, i64* %6998, align 1, !tbaa !2451
  %6999 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %7000 = bitcast %union.vec128_t* %XMM2 to i8*
  %7001 = load i64, i64* %PC
  %7002 = add i64 %7001, 3
  store i64 %7002, i64* %PC
  %7003 = bitcast i8* %7000 to <2 x i32>*
  %7004 = load <2 x i32>, <2 x i32>* %7003, align 1
  %7005 = getelementptr inbounds i8, i8* %7000, i64 8
  %7006 = bitcast i8* %7005 to <2 x i32>*
  %7007 = load <2 x i32>, <2 x i32>* %7006, align 1
  %7008 = extractelement <2 x i32> %7004, i32 0
  %7009 = bitcast i8* %6999 to i32*
  store i32 %7008, i32* %7009, align 1, !tbaa !2460
  %7010 = extractelement <2 x i32> %7004, i32 1
  %7011 = getelementptr inbounds i8, i8* %6999, i64 4
  %7012 = bitcast i8* %7011 to i32*
  store i32 %7010, i32* %7012, align 1, !tbaa !2460
  %7013 = extractelement <2 x i32> %7007, i32 0
  %7014 = getelementptr inbounds i8, i8* %6999, i64 8
  %7015 = bitcast i8* %7014 to i32*
  store i32 %7013, i32* %7015, align 1, !tbaa !2460
  %7016 = extractelement <2 x i32> %7007, i32 1
  %7017 = getelementptr inbounds i8, i8* %6999, i64 12
  %7018 = bitcast i8* %7017 to i32*
  store i32 %7016, i32* %7018, align 1, !tbaa !2460
  %7019 = load i64, i64* %PC
  %7020 = sub i64 %7019, 2858
  %7021 = load i64, i64* %PC
  %7022 = add i64 %7021, 5
  %7023 = load i64, i64* %PC
  %7024 = add i64 %7023, 5
  store i64 %7024, i64* %PC
  %7025 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7026 = load i64, i64* %7025, align 8, !tbaa !2428
  %7027 = add i64 %7026, -8
  %7028 = inttoptr i64 %7027 to i64*
  store i64 %7022, i64* %7028
  store i64 %7027, i64* %7025, align 8, !tbaa !2428
  %7029 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7020, i64* %7029, align 8, !tbaa !2428
  %7030 = load i64, i64* %PC
  %7031 = bitcast %struct.State** %state.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7031)
  %7032 = bitcast i64* %curr_pc.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7032)
  %7033 = bitcast %struct.Memory** %memory.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7033)
  call void @llvm.lifetime.start(i64 1, i8* %BRANCH_TAKEN.i)
  %7034 = bitcast i64* %SS_BASE.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7034)
  %7035 = bitcast i64* %ES_BASE.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7035)
  %7036 = bitcast i64* %DS_BASE.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7036)
  %7037 = bitcast i64* %CS_BASE.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7037)
  %7038 = bitcast %struct.State** %STATE.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7038)
  %7039 = bitcast %struct.Memory** %MEMORY.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7039)
  %7040 = bitcast i64** %_DR0.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7040)
  %7041 = bitcast i64** %_DR1.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7041)
  %7042 = bitcast i64** %_DR2.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7042)
  %7043 = bitcast i64** %_DR3.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7043)
  %7044 = bitcast i64** %_DR4.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7044)
  %7045 = bitcast i64** %_DR5.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7045)
  %7046 = bitcast i64** %_DR6.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7046)
  %7047 = bitcast i64** %_DR7.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7047)
  %7048 = bitcast i64** %CR0.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7048)
  %7049 = bitcast i64** %CR1.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7049)
  %7050 = bitcast i64** %CR2.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7050)
  %7051 = bitcast i64** %CR3.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7051)
  %7052 = bitcast i64** %CR4.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7052)
  %7053 = bitcast i64** %CR8.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7053)
  store %struct.State* %0, %struct.State** %state.i, align 8, !noalias !2516
  store i64 %7030, i64* %curr_pc.i, align 8, !noalias !2516
  store %struct.Memory* %6897, %struct.Memory** %memory.i, align 8, !noalias !2516
  store i8 0, i8* %BRANCH_TAKEN.i, align 1, !noalias !2516
  store i64 0, i64* %SS_BASE.i, align 8, !noalias !2516
  store i64 0, i64* %ES_BASE.i, align 8, !noalias !2516
  store i64 0, i64* %DS_BASE.i, align 8, !noalias !2516
  store i64 0, i64* %CS_BASE.i, align 8, !noalias !2516
  store %struct.State* %0, %struct.State** %STATE.i, align 8, !noalias !2516
  store %struct.Memory* %6897, %struct.Memory** %MEMORY.i, align 8, !noalias !2516
  %7054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7055 = getelementptr inbounds %struct.GPR, %struct.GPR* %7054, i32 0, i32 33
  %7056 = getelementptr inbounds %struct.Reg, %struct.Reg* %7055, i32 0, i32 0
  %PC.i = bitcast %union.anon* %7056 to i64*
  store i64 %7030, i64* %PC.i, align 8, !alias.scope !2520, !noalias !2521
  %7057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7058 = getelementptr inbounds %struct.GPR, %struct.GPR* %7057, i32 0, i32 1
  %7059 = getelementptr inbounds %struct.Reg, %struct.Reg* %7058, i32 0, i32 0
  %7060 = bitcast %union.anon* %7059 to %struct.anon.2*
  %AH.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7060, i32 0, i32 1
  %7061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7062 = getelementptr inbounds %struct.GPR, %struct.GPR* %7061, i32 0, i32 3
  %7063 = getelementptr inbounds %struct.Reg, %struct.Reg* %7062, i32 0, i32 0
  %7064 = bitcast %union.anon* %7063 to %struct.anon.2*
  %BH.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7064, i32 0, i32 1
  %7065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7066 = getelementptr inbounds %struct.GPR, %struct.GPR* %7065, i32 0, i32 5
  %7067 = getelementptr inbounds %struct.Reg, %struct.Reg* %7066, i32 0, i32 0
  %7068 = bitcast %union.anon* %7067 to %struct.anon.2*
  %CH.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7068, i32 0, i32 1
  %7069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7070 = getelementptr inbounds %struct.GPR, %struct.GPR* %7069, i32 0, i32 7
  %7071 = getelementptr inbounds %struct.Reg, %struct.Reg* %7070, i32 0, i32 0
  %7072 = bitcast %union.anon* %7071 to %struct.anon.2*
  %DH.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7072, i32 0, i32 1
  %7073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7074 = getelementptr inbounds %struct.GPR, %struct.GPR* %7073, i32 0, i32 1
  %7075 = getelementptr inbounds %struct.Reg, %struct.Reg* %7074, i32 0, i32 0
  %7076 = bitcast %union.anon* %7075 to %struct.anon.2*
  %AL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7076, i32 0, i32 0
  %7077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7078 = getelementptr inbounds %struct.GPR, %struct.GPR* %7077, i32 0, i32 3
  %7079 = getelementptr inbounds %struct.Reg, %struct.Reg* %7078, i32 0, i32 0
  %7080 = bitcast %union.anon* %7079 to %struct.anon.2*
  %BL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7080, i32 0, i32 0
  %7081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7082 = getelementptr inbounds %struct.GPR, %struct.GPR* %7081, i32 0, i32 5
  %7083 = getelementptr inbounds %struct.Reg, %struct.Reg* %7082, i32 0, i32 0
  %7084 = bitcast %union.anon* %7083 to %struct.anon.2*
  %CL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7084, i32 0, i32 0
  %7085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7086 = getelementptr inbounds %struct.GPR, %struct.GPR* %7085, i32 0, i32 7
  %7087 = getelementptr inbounds %struct.Reg, %struct.Reg* %7086, i32 0, i32 0
  %7088 = bitcast %union.anon* %7087 to %struct.anon.2*
  %DL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7088, i32 0, i32 0
  %7089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7090 = getelementptr inbounds %struct.GPR, %struct.GPR* %7089, i32 0, i32 9
  %7091 = getelementptr inbounds %struct.Reg, %struct.Reg* %7090, i32 0, i32 0
  %7092 = bitcast %union.anon* %7091 to %struct.anon.2*
  %SIL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7092, i32 0, i32 0
  %7093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7094 = getelementptr inbounds %struct.GPR, %struct.GPR* %7093, i32 0, i32 11
  %7095 = getelementptr inbounds %struct.Reg, %struct.Reg* %7094, i32 0, i32 0
  %7096 = bitcast %union.anon* %7095 to %struct.anon.2*
  %DIL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7096, i32 0, i32 0
  %7097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7098 = getelementptr inbounds %struct.GPR, %struct.GPR* %7097, i32 0, i32 13
  %7099 = getelementptr inbounds %struct.Reg, %struct.Reg* %7098, i32 0, i32 0
  %7100 = bitcast %union.anon* %7099 to %struct.anon.2*
  %SPL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7100, i32 0, i32 0
  %7101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7102 = getelementptr inbounds %struct.GPR, %struct.GPR* %7101, i32 0, i32 15
  %7103 = getelementptr inbounds %struct.Reg, %struct.Reg* %7102, i32 0, i32 0
  %7104 = bitcast %union.anon* %7103 to %struct.anon.2*
  %BPL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7104, i32 0, i32 0
  %7105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7106 = getelementptr inbounds %struct.GPR, %struct.GPR* %7105, i32 0, i32 17
  %7107 = getelementptr inbounds %struct.Reg, %struct.Reg* %7106, i32 0, i32 0
  %7108 = bitcast %union.anon* %7107 to %struct.anon.2*
  %R8B.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7108, i32 0, i32 0
  %7109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7110 = getelementptr inbounds %struct.GPR, %struct.GPR* %7109, i32 0, i32 19
  %7111 = getelementptr inbounds %struct.Reg, %struct.Reg* %7110, i32 0, i32 0
  %7112 = bitcast %union.anon* %7111 to %struct.anon.2*
  %R9B.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7112, i32 0, i32 0
  %7113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7114 = getelementptr inbounds %struct.GPR, %struct.GPR* %7113, i32 0, i32 21
  %7115 = getelementptr inbounds %struct.Reg, %struct.Reg* %7114, i32 0, i32 0
  %7116 = bitcast %union.anon* %7115 to %struct.anon.2*
  %R10B.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7116, i32 0, i32 0
  %7117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7118 = getelementptr inbounds %struct.GPR, %struct.GPR* %7117, i32 0, i32 23
  %7119 = getelementptr inbounds %struct.Reg, %struct.Reg* %7118, i32 0, i32 0
  %7120 = bitcast %union.anon* %7119 to %struct.anon.2*
  %R11B.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7120, i32 0, i32 0
  %7121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7122 = getelementptr inbounds %struct.GPR, %struct.GPR* %7121, i32 0, i32 25
  %7123 = getelementptr inbounds %struct.Reg, %struct.Reg* %7122, i32 0, i32 0
  %7124 = bitcast %union.anon* %7123 to %struct.anon.2*
  %R12B.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7124, i32 0, i32 0
  %7125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7126 = getelementptr inbounds %struct.GPR, %struct.GPR* %7125, i32 0, i32 27
  %7127 = getelementptr inbounds %struct.Reg, %struct.Reg* %7126, i32 0, i32 0
  %7128 = bitcast %union.anon* %7127 to %struct.anon.2*
  %R13B.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7128, i32 0, i32 0
  %7129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7130 = getelementptr inbounds %struct.GPR, %struct.GPR* %7129, i32 0, i32 29
  %7131 = getelementptr inbounds %struct.Reg, %struct.Reg* %7130, i32 0, i32 0
  %7132 = bitcast %union.anon* %7131 to %struct.anon.2*
  %R14B.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7132, i32 0, i32 0
  %7133 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7134 = getelementptr inbounds %struct.GPR, %struct.GPR* %7133, i32 0, i32 31
  %7135 = getelementptr inbounds %struct.Reg, %struct.Reg* %7134, i32 0, i32 0
  %7136 = bitcast %union.anon* %7135 to %struct.anon.2*
  %R15B.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7136, i32 0, i32 0
  %7137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7138 = getelementptr inbounds %struct.GPR, %struct.GPR* %7137, i32 0, i32 1
  %7139 = getelementptr inbounds %struct.Reg, %struct.Reg* %7138, i32 0, i32 0
  %AX.i = bitcast %union.anon* %7139 to i16*
  %7140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7141 = getelementptr inbounds %struct.GPR, %struct.GPR* %7140, i32 0, i32 3
  %7142 = getelementptr inbounds %struct.Reg, %struct.Reg* %7141, i32 0, i32 0
  %BX.i = bitcast %union.anon* %7142 to i16*
  %7143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7144 = getelementptr inbounds %struct.GPR, %struct.GPR* %7143, i32 0, i32 5
  %7145 = getelementptr inbounds %struct.Reg, %struct.Reg* %7144, i32 0, i32 0
  %CX.i = bitcast %union.anon* %7145 to i16*
  %7146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7147 = getelementptr inbounds %struct.GPR, %struct.GPR* %7146, i32 0, i32 7
  %7148 = getelementptr inbounds %struct.Reg, %struct.Reg* %7147, i32 0, i32 0
  %DX.i = bitcast %union.anon* %7148 to i16*
  %7149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7150 = getelementptr inbounds %struct.GPR, %struct.GPR* %7149, i32 0, i32 9
  %7151 = getelementptr inbounds %struct.Reg, %struct.Reg* %7150, i32 0, i32 0
  %SI.i = bitcast %union.anon* %7151 to i16*
  %7152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7153 = getelementptr inbounds %struct.GPR, %struct.GPR* %7152, i32 0, i32 11
  %7154 = getelementptr inbounds %struct.Reg, %struct.Reg* %7153, i32 0, i32 0
  %DI.i = bitcast %union.anon* %7154 to i16*
  %7155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7156 = getelementptr inbounds %struct.GPR, %struct.GPR* %7155, i32 0, i32 13
  %7157 = getelementptr inbounds %struct.Reg, %struct.Reg* %7156, i32 0, i32 0
  %SP.i = bitcast %union.anon* %7157 to i16*
  %7158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7159 = getelementptr inbounds %struct.GPR, %struct.GPR* %7158, i32 0, i32 15
  %7160 = getelementptr inbounds %struct.Reg, %struct.Reg* %7159, i32 0, i32 0
  %BP.i = bitcast %union.anon* %7160 to i16*
  %7161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7162 = getelementptr inbounds %struct.GPR, %struct.GPR* %7161, i32 0, i32 17
  %7163 = getelementptr inbounds %struct.Reg, %struct.Reg* %7162, i32 0, i32 0
  %R8W.i = bitcast %union.anon* %7163 to i16*
  %7164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7165 = getelementptr inbounds %struct.GPR, %struct.GPR* %7164, i32 0, i32 19
  %7166 = getelementptr inbounds %struct.Reg, %struct.Reg* %7165, i32 0, i32 0
  %R9W.i = bitcast %union.anon* %7166 to i16*
  %7167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7168 = getelementptr inbounds %struct.GPR, %struct.GPR* %7167, i32 0, i32 21
  %7169 = getelementptr inbounds %struct.Reg, %struct.Reg* %7168, i32 0, i32 0
  %R10W.i = bitcast %union.anon* %7169 to i16*
  %7170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7171 = getelementptr inbounds %struct.GPR, %struct.GPR* %7170, i32 0, i32 23
  %7172 = getelementptr inbounds %struct.Reg, %struct.Reg* %7171, i32 0, i32 0
  %R11W.i = bitcast %union.anon* %7172 to i16*
  %7173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7174 = getelementptr inbounds %struct.GPR, %struct.GPR* %7173, i32 0, i32 25
  %7175 = getelementptr inbounds %struct.Reg, %struct.Reg* %7174, i32 0, i32 0
  %R12W.i = bitcast %union.anon* %7175 to i16*
  %7176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7177 = getelementptr inbounds %struct.GPR, %struct.GPR* %7176, i32 0, i32 27
  %7178 = getelementptr inbounds %struct.Reg, %struct.Reg* %7177, i32 0, i32 0
  %R13W.i = bitcast %union.anon* %7178 to i16*
  %7179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7180 = getelementptr inbounds %struct.GPR, %struct.GPR* %7179, i32 0, i32 29
  %7181 = getelementptr inbounds %struct.Reg, %struct.Reg* %7180, i32 0, i32 0
  %R14W.i = bitcast %union.anon* %7181 to i16*
  %7182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7183 = getelementptr inbounds %struct.GPR, %struct.GPR* %7182, i32 0, i32 31
  %7184 = getelementptr inbounds %struct.Reg, %struct.Reg* %7183, i32 0, i32 0
  %R15W.i = bitcast %union.anon* %7184 to i16*
  %7185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7186 = getelementptr inbounds %struct.GPR, %struct.GPR* %7185, i32 0, i32 33
  %7187 = getelementptr inbounds %struct.Reg, %struct.Reg* %7186, i32 0, i32 0
  %IP.i = bitcast %union.anon* %7187 to i16*
  %7188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7189 = getelementptr inbounds %struct.GPR, %struct.GPR* %7188, i32 0, i32 1
  %7190 = getelementptr inbounds %struct.Reg, %struct.Reg* %7189, i32 0, i32 0
  %EAX.i = bitcast %union.anon* %7190 to i32*
  %7191 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7192 = getelementptr inbounds %struct.GPR, %struct.GPR* %7191, i32 0, i32 3
  %7193 = getelementptr inbounds %struct.Reg, %struct.Reg* %7192, i32 0, i32 0
  %EBX.i = bitcast %union.anon* %7193 to i32*
  %7194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7195 = getelementptr inbounds %struct.GPR, %struct.GPR* %7194, i32 0, i32 5
  %7196 = getelementptr inbounds %struct.Reg, %struct.Reg* %7195, i32 0, i32 0
  %ECX.i = bitcast %union.anon* %7196 to i32*
  %7197 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7198 = getelementptr inbounds %struct.GPR, %struct.GPR* %7197, i32 0, i32 7
  %7199 = getelementptr inbounds %struct.Reg, %struct.Reg* %7198, i32 0, i32 0
  %EDX.i = bitcast %union.anon* %7199 to i32*
  %7200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7201 = getelementptr inbounds %struct.GPR, %struct.GPR* %7200, i32 0, i32 9
  %7202 = getelementptr inbounds %struct.Reg, %struct.Reg* %7201, i32 0, i32 0
  %ESI.i = bitcast %union.anon* %7202 to i32*
  %7203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7204 = getelementptr inbounds %struct.GPR, %struct.GPR* %7203, i32 0, i32 11
  %7205 = getelementptr inbounds %struct.Reg, %struct.Reg* %7204, i32 0, i32 0
  %EDI.i = bitcast %union.anon* %7205 to i32*
  %7206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7207 = getelementptr inbounds %struct.GPR, %struct.GPR* %7206, i32 0, i32 13
  %7208 = getelementptr inbounds %struct.Reg, %struct.Reg* %7207, i32 0, i32 0
  %ESP.i = bitcast %union.anon* %7208 to i32*
  %7209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7210 = getelementptr inbounds %struct.GPR, %struct.GPR* %7209, i32 0, i32 15
  %7211 = getelementptr inbounds %struct.Reg, %struct.Reg* %7210, i32 0, i32 0
  %EBP.i = bitcast %union.anon* %7211 to i32*
  %7212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7213 = getelementptr inbounds %struct.GPR, %struct.GPR* %7212, i32 0, i32 33
  %7214 = getelementptr inbounds %struct.Reg, %struct.Reg* %7213, i32 0, i32 0
  %EIP.i = bitcast %union.anon* %7214 to i32*
  %7215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7216 = getelementptr inbounds %struct.GPR, %struct.GPR* %7215, i32 0, i32 17
  %7217 = getelementptr inbounds %struct.Reg, %struct.Reg* %7216, i32 0, i32 0
  %R8D.i = bitcast %union.anon* %7217 to i32*
  %7218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7219 = getelementptr inbounds %struct.GPR, %struct.GPR* %7218, i32 0, i32 19
  %7220 = getelementptr inbounds %struct.Reg, %struct.Reg* %7219, i32 0, i32 0
  %R9D.i = bitcast %union.anon* %7220 to i32*
  %7221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7222 = getelementptr inbounds %struct.GPR, %struct.GPR* %7221, i32 0, i32 21
  %7223 = getelementptr inbounds %struct.Reg, %struct.Reg* %7222, i32 0, i32 0
  %R10D.i = bitcast %union.anon* %7223 to i32*
  %7224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7225 = getelementptr inbounds %struct.GPR, %struct.GPR* %7224, i32 0, i32 23
  %7226 = getelementptr inbounds %struct.Reg, %struct.Reg* %7225, i32 0, i32 0
  %R11D.i = bitcast %union.anon* %7226 to i32*
  %7227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7228 = getelementptr inbounds %struct.GPR, %struct.GPR* %7227, i32 0, i32 25
  %7229 = getelementptr inbounds %struct.Reg, %struct.Reg* %7228, i32 0, i32 0
  %R12D.i = bitcast %union.anon* %7229 to i32*
  %7230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7231 = getelementptr inbounds %struct.GPR, %struct.GPR* %7230, i32 0, i32 27
  %7232 = getelementptr inbounds %struct.Reg, %struct.Reg* %7231, i32 0, i32 0
  %R13D.i = bitcast %union.anon* %7232 to i32*
  %7233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7234 = getelementptr inbounds %struct.GPR, %struct.GPR* %7233, i32 0, i32 29
  %7235 = getelementptr inbounds %struct.Reg, %struct.Reg* %7234, i32 0, i32 0
  %R14D.i = bitcast %union.anon* %7235 to i32*
  %7236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7237 = getelementptr inbounds %struct.GPR, %struct.GPR* %7236, i32 0, i32 31
  %7238 = getelementptr inbounds %struct.Reg, %struct.Reg* %7237, i32 0, i32 0
  %R15D.i = bitcast %union.anon* %7238 to i32*
  %7239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7240 = getelementptr inbounds %struct.GPR, %struct.GPR* %7239, i32 0, i32 1
  %7241 = getelementptr inbounds %struct.Reg, %struct.Reg* %7240, i32 0, i32 0
  %RAX.i = bitcast %union.anon* %7241 to i64*
  %7242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7243 = getelementptr inbounds %struct.GPR, %struct.GPR* %7242, i32 0, i32 3
  %7244 = getelementptr inbounds %struct.Reg, %struct.Reg* %7243, i32 0, i32 0
  %RBX.i = bitcast %union.anon* %7244 to i64*
  %7245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7246 = getelementptr inbounds %struct.GPR, %struct.GPR* %7245, i32 0, i32 5
  %7247 = getelementptr inbounds %struct.Reg, %struct.Reg* %7246, i32 0, i32 0
  %RCX.i = bitcast %union.anon* %7247 to i64*
  %7248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7249 = getelementptr inbounds %struct.GPR, %struct.GPR* %7248, i32 0, i32 7
  %7250 = getelementptr inbounds %struct.Reg, %struct.Reg* %7249, i32 0, i32 0
  %RDX.i = bitcast %union.anon* %7250 to i64*
  %7251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7252 = getelementptr inbounds %struct.GPR, %struct.GPR* %7251, i32 0, i32 9
  %7253 = getelementptr inbounds %struct.Reg, %struct.Reg* %7252, i32 0, i32 0
  %RSI.i = bitcast %union.anon* %7253 to i64*
  %7254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7255 = getelementptr inbounds %struct.GPR, %struct.GPR* %7254, i32 0, i32 11
  %7256 = getelementptr inbounds %struct.Reg, %struct.Reg* %7255, i32 0, i32 0
  %RDI.i = bitcast %union.anon* %7256 to i64*
  %7257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7258 = getelementptr inbounds %struct.GPR, %struct.GPR* %7257, i32 0, i32 13
  %7259 = getelementptr inbounds %struct.Reg, %struct.Reg* %7258, i32 0, i32 0
  %RSP.i = bitcast %union.anon* %7259 to i64*
  %7260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7261 = getelementptr inbounds %struct.GPR, %struct.GPR* %7260, i32 0, i32 15
  %7262 = getelementptr inbounds %struct.Reg, %struct.Reg* %7261, i32 0, i32 0
  %RBP.i = bitcast %union.anon* %7262 to i64*
  %7263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7264 = getelementptr inbounds %struct.GPR, %struct.GPR* %7263, i32 0, i32 17
  %7265 = getelementptr inbounds %struct.Reg, %struct.Reg* %7264, i32 0, i32 0
  %R8.i = bitcast %union.anon* %7265 to i64*
  %7266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7267 = getelementptr inbounds %struct.GPR, %struct.GPR* %7266, i32 0, i32 19
  %7268 = getelementptr inbounds %struct.Reg, %struct.Reg* %7267, i32 0, i32 0
  %R9.i = bitcast %union.anon* %7268 to i64*
  %7269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7270 = getelementptr inbounds %struct.GPR, %struct.GPR* %7269, i32 0, i32 21
  %7271 = getelementptr inbounds %struct.Reg, %struct.Reg* %7270, i32 0, i32 0
  %R10.i = bitcast %union.anon* %7271 to i64*
  %7272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7273 = getelementptr inbounds %struct.GPR, %struct.GPR* %7272, i32 0, i32 23
  %7274 = getelementptr inbounds %struct.Reg, %struct.Reg* %7273, i32 0, i32 0
  %R11.i = bitcast %union.anon* %7274 to i64*
  %7275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7276 = getelementptr inbounds %struct.GPR, %struct.GPR* %7275, i32 0, i32 25
  %7277 = getelementptr inbounds %struct.Reg, %struct.Reg* %7276, i32 0, i32 0
  %R12.i = bitcast %union.anon* %7277 to i64*
  %7278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7279 = getelementptr inbounds %struct.GPR, %struct.GPR* %7278, i32 0, i32 27
  %7280 = getelementptr inbounds %struct.Reg, %struct.Reg* %7279, i32 0, i32 0
  %R13.i = bitcast %union.anon* %7280 to i64*
  %7281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7282 = getelementptr inbounds %struct.GPR, %struct.GPR* %7281, i32 0, i32 29
  %7283 = getelementptr inbounds %struct.Reg, %struct.Reg* %7282, i32 0, i32 0
  %R14.i = bitcast %union.anon* %7283 to i64*
  %7284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7285 = getelementptr inbounds %struct.GPR, %struct.GPR* %7284, i32 0, i32 31
  %7286 = getelementptr inbounds %struct.Reg, %struct.Reg* %7285, i32 0, i32 0
  %R15.i = bitcast %union.anon* %7286 to i64*
  %7287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7288 = getelementptr inbounds %struct.GPR, %struct.GPR* %7287, i32 0, i32 33
  %7289 = getelementptr inbounds %struct.Reg, %struct.Reg* %7288, i32 0, i32 0
  %RIP.i = bitcast %union.anon* %7289 to i64*
  %7290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %7291 = getelementptr inbounds %struct.Segments, %struct.Segments* %7290, i32 0, i32 1
  %SS.i = bitcast %union.SegmentSelector* %7291 to i16*
  %7292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %7293 = getelementptr inbounds %struct.Segments, %struct.Segments* %7292, i32 0, i32 3
  %ES.i = bitcast %union.SegmentSelector* %7293 to i16*
  %7294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %7295 = getelementptr inbounds %struct.Segments, %struct.Segments* %7294, i32 0, i32 5
  %GS.i = bitcast %union.SegmentSelector* %7295 to i16*
  %7296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %7297 = getelementptr inbounds %struct.Segments, %struct.Segments* %7296, i32 0, i32 7
  %FS.i = bitcast %union.SegmentSelector* %7297 to i16*
  %7298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %7299 = getelementptr inbounds %struct.Segments, %struct.Segments* %7298, i32 0, i32 9
  %DS.i = bitcast %union.SegmentSelector* %7299 to i16*
  %7300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %7301 = getelementptr inbounds %struct.Segments, %struct.Segments* %7300, i32 0, i32 11
  %CS.i = bitcast %union.SegmentSelector* %7301 to i16*
  %7302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %7303 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %7302, i32 0, i32 5
  %7304 = getelementptr inbounds %struct.Reg, %struct.Reg* %7303, i32 0, i32 0
  %GS_BASE.i = bitcast %union.anon* %7304 to i64*
  %7305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %7306 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %7305, i32 0, i32 7
  %7307 = getelementptr inbounds %struct.Reg, %struct.Reg* %7306, i32 0, i32 0
  %FS_BASE.i = bitcast %union.anon* %7307 to i64*
  %7308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7309 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7308, i64 0, i64 0
  %YMM0.i = bitcast %union.VectorReg* %7309 to %"class.std::bitset"*
  %7310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7311 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7310, i64 0, i64 1
  %YMM1.i = bitcast %union.VectorReg* %7311 to %"class.std::bitset"*
  %7312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7313 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7312, i64 0, i64 2
  %YMM2.i = bitcast %union.VectorReg* %7313 to %"class.std::bitset"*
  %7314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7315 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7314, i64 0, i64 3
  %YMM3.i = bitcast %union.VectorReg* %7315 to %"class.std::bitset"*
  %7316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7317 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7316, i64 0, i64 4
  %YMM4.i = bitcast %union.VectorReg* %7317 to %"class.std::bitset"*
  %7318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7319 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7318, i64 0, i64 5
  %YMM5.i = bitcast %union.VectorReg* %7319 to %"class.std::bitset"*
  %7320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7321 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7320, i64 0, i64 6
  %YMM6.i = bitcast %union.VectorReg* %7321 to %"class.std::bitset"*
  %7322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7323 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7322, i64 0, i64 7
  %YMM7.i = bitcast %union.VectorReg* %7323 to %"class.std::bitset"*
  %7324 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7325 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7324, i64 0, i64 8
  %YMM8.i = bitcast %union.VectorReg* %7325 to %"class.std::bitset"*
  %7326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7327 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7326, i64 0, i64 9
  %YMM9.i = bitcast %union.VectorReg* %7327 to %"class.std::bitset"*
  %7328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7329 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7328, i64 0, i64 10
  %YMM10.i = bitcast %union.VectorReg* %7329 to %"class.std::bitset"*
  %7330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7331 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7330, i64 0, i64 11
  %YMM11.i = bitcast %union.VectorReg* %7331 to %"class.std::bitset"*
  %7332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7333 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7332, i64 0, i64 12
  %YMM12.i = bitcast %union.VectorReg* %7333 to %"class.std::bitset"*
  %7334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7335 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7334, i64 0, i64 13
  %YMM13.i = bitcast %union.VectorReg* %7335 to %"class.std::bitset"*
  %7336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7337 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7336, i64 0, i64 14
  %YMM14.i = bitcast %union.VectorReg* %7337 to %"class.std::bitset"*
  %7338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7339 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7338, i64 0, i64 15
  %YMM15.i = bitcast %union.VectorReg* %7339 to %"class.std::bitset"*
  %7340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7341 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7340, i64 0, i64 0
  %XMM0.i = bitcast %union.VectorReg* %7341 to %union.vec128_t*
  %7342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7343 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7342, i64 0, i64 1
  %XMM1.i = bitcast %union.VectorReg* %7343 to %union.vec128_t*
  %7344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7345 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7344, i64 0, i64 2
  %XMM2.i = bitcast %union.VectorReg* %7345 to %union.vec128_t*
  %7346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7347 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7346, i64 0, i64 3
  %XMM3.i = bitcast %union.VectorReg* %7347 to %union.vec128_t*
  %7348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7349 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7348, i64 0, i64 4
  %XMM4.i = bitcast %union.VectorReg* %7349 to %union.vec128_t*
  %7350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7351 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7350, i64 0, i64 5
  %XMM5.i = bitcast %union.VectorReg* %7351 to %union.vec128_t*
  %7352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7353 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7352, i64 0, i64 6
  %XMM6.i = bitcast %union.VectorReg* %7353 to %union.vec128_t*
  %7354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7355 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7354, i64 0, i64 7
  %XMM7.i = bitcast %union.VectorReg* %7355 to %union.vec128_t*
  %7356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7357 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7356, i64 0, i64 8
  %XMM8.i = bitcast %union.VectorReg* %7357 to %union.vec128_t*
  %7358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7359 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7358, i64 0, i64 9
  %XMM9.i = bitcast %union.VectorReg* %7359 to %union.vec128_t*
  %7360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7361 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7360, i64 0, i64 10
  %XMM10.i = bitcast %union.VectorReg* %7361 to %union.vec128_t*
  %7362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7363 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7362, i64 0, i64 11
  %XMM11.i = bitcast %union.VectorReg* %7363 to %union.vec128_t*
  %7364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7365 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7364, i64 0, i64 12
  %XMM12.i = bitcast %union.VectorReg* %7365 to %union.vec128_t*
  %7366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7367 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7366, i64 0, i64 13
  %XMM13.i = bitcast %union.VectorReg* %7367 to %union.vec128_t*
  %7368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7369 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7368, i64 0, i64 14
  %XMM14.i = bitcast %union.VectorReg* %7369 to %union.vec128_t*
  %7370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7371 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7370, i64 0, i64 15
  %XMM15.i = bitcast %union.VectorReg* %7371 to %union.vec128_t*
  %7372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %7373 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %7372, i32 0, i32 0
  %7374 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %7373, i64 0, i64 0
  %ST0.i = getelementptr inbounds %struct.anon.3, %struct.anon.3* %7374, i32 0, i32 1
  %7375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %7376 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %7375, i32 0, i32 0
  %7377 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %7376, i64 0, i64 1
  %ST1.i = getelementptr inbounds %struct.anon.3, %struct.anon.3* %7377, i32 0, i32 1
  %7378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %7379 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %7378, i32 0, i32 0
  %7380 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %7379, i64 0, i64 2
  %ST2.i = getelementptr inbounds %struct.anon.3, %struct.anon.3* %7380, i32 0, i32 1
  %7381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %7382 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %7381, i32 0, i32 0
  %7383 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %7382, i64 0, i64 3
  %ST3.i = getelementptr inbounds %struct.anon.3, %struct.anon.3* %7383, i32 0, i32 1
  %7384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %7385 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %7384, i32 0, i32 0
  %7386 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %7385, i64 0, i64 4
  %ST4.i = getelementptr inbounds %struct.anon.3, %struct.anon.3* %7386, i32 0, i32 1
  %7387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %7388 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %7387, i32 0, i32 0
  %7389 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %7388, i64 0, i64 5
  %ST5.i = getelementptr inbounds %struct.anon.3, %struct.anon.3* %7389, i32 0, i32 1
  %7390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %7391 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %7390, i32 0, i32 0
  %7392 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %7391, i64 0, i64 6
  %ST6.i = getelementptr inbounds %struct.anon.3, %struct.anon.3* %7392, i32 0, i32 1
  %7393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %7394 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %7393, i32 0, i32 0
  %7395 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %7394, i64 0, i64 7
  %ST7.i = getelementptr inbounds %struct.anon.3, %struct.anon.3* %7395, i32 0, i32 1
  %7396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %7397 = getelementptr inbounds %struct.MMX, %struct.MMX* %7396, i32 0, i32 0
  %7398 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %7397, i64 0, i64 0
  %7399 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %7398, i32 0, i32 1
  %7400 = bitcast %union.vec64_t* %7399 to %struct.uint64v1_t*
  %7401 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %7400, i32 0, i32 0
  %MM0.i = getelementptr inbounds [1 x i64], [1 x i64]* %7401, i64 0, i64 0
  %7402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %7403 = getelementptr inbounds %struct.MMX, %struct.MMX* %7402, i32 0, i32 0
  %7404 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %7403, i64 0, i64 1
  %7405 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %7404, i32 0, i32 1
  %7406 = bitcast %union.vec64_t* %7405 to %struct.uint64v1_t*
  %7407 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %7406, i32 0, i32 0
  %MM1.i = getelementptr inbounds [1 x i64], [1 x i64]* %7407, i64 0, i64 0
  %7408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %7409 = getelementptr inbounds %struct.MMX, %struct.MMX* %7408, i32 0, i32 0
  %7410 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %7409, i64 0, i64 2
  %7411 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %7410, i32 0, i32 1
  %7412 = bitcast %union.vec64_t* %7411 to %struct.uint64v1_t*
  %7413 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %7412, i32 0, i32 0
  %MM2.i = getelementptr inbounds [1 x i64], [1 x i64]* %7413, i64 0, i64 0
  %7414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %7415 = getelementptr inbounds %struct.MMX, %struct.MMX* %7414, i32 0, i32 0
  %7416 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %7415, i64 0, i64 3
  %7417 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %7416, i32 0, i32 1
  %7418 = bitcast %union.vec64_t* %7417 to %struct.uint64v1_t*
  %7419 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %7418, i32 0, i32 0
  %MM3.i = getelementptr inbounds [1 x i64], [1 x i64]* %7419, i64 0, i64 0
  %7420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %7421 = getelementptr inbounds %struct.MMX, %struct.MMX* %7420, i32 0, i32 0
  %7422 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %7421, i64 0, i64 4
  %7423 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %7422, i32 0, i32 1
  %7424 = bitcast %union.vec64_t* %7423 to %struct.uint64v1_t*
  %7425 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %7424, i32 0, i32 0
  %MM4.i = getelementptr inbounds [1 x i64], [1 x i64]* %7425, i64 0, i64 0
  %7426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %7427 = getelementptr inbounds %struct.MMX, %struct.MMX* %7426, i32 0, i32 0
  %7428 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %7427, i64 0, i64 5
  %7429 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %7428, i32 0, i32 1
  %7430 = bitcast %union.vec64_t* %7429 to %struct.uint64v1_t*
  %7431 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %7430, i32 0, i32 0
  %MM5.i = getelementptr inbounds [1 x i64], [1 x i64]* %7431, i64 0, i64 0
  %7432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %7433 = getelementptr inbounds %struct.MMX, %struct.MMX* %7432, i32 0, i32 0
  %7434 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %7433, i64 0, i64 6
  %7435 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %7434, i32 0, i32 1
  %7436 = bitcast %union.vec64_t* %7435 to %struct.uint64v1_t*
  %7437 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %7436, i32 0, i32 0
  %MM6.i = getelementptr inbounds [1 x i64], [1 x i64]* %7437, i64 0, i64 0
  %7438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %7439 = getelementptr inbounds %struct.MMX, %struct.MMX* %7438, i32 0, i32 0
  %7440 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %7439, i64 0, i64 7
  %7441 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %7440, i32 0, i32 1
  %7442 = bitcast %union.vec64_t* %7441 to %struct.uint64v1_t*
  %7443 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %7442, i32 0, i32 0
  %MM7.i = getelementptr inbounds [1 x i64], [1 x i64]* %7443, i64 0, i64 0
  %7444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF.i = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %7444, i32 0, i32 5
  %7445 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF.i = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %7445, i32 0, i32 1
  %7446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF.i = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %7446, i32 0, i32 11
  %7447 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF.i = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %7447, i32 0, i32 13
  %7448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF.i = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %7448, i32 0, i32 3
  %7449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF.i = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %7449, i32 0, i32 9
  %7450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF.i = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %7450, i32 0, i32 7
  store i64* @DR0, i64** %_DR0.i, align 8, !noalias !2516
  store i64* @DR1, i64** %_DR1.i, align 8, !noalias !2516
  store i64* @DR2, i64** %_DR2.i, align 8, !noalias !2516
  store i64* @DR3, i64** %_DR3.i, align 8, !noalias !2516
  store i64* @DR4, i64** %_DR4.i, align 8, !noalias !2516
  store i64* @DR5, i64** %_DR5.i, align 8, !noalias !2516
  store i64* @DR6, i64** %_DR6.i, align 8, !noalias !2516
  store i64* @DR7, i64** %_DR7.i, align 8, !noalias !2516
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0.i, align 8, !noalias !2516
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1.i, align 8, !noalias !2516
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2.i, align 8, !noalias !2516
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3.i, align 8, !noalias !2516
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4.i, align 8, !noalias !2516
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8.i, align 8, !noalias !2516
  %7451 = bitcast %"class.std::bitset"* %YMM0.i to double*
  %7452 = load double, double* %7451, !alias.scope !2520, !noalias !2521
  %7453 = load i64, i64* %RSP.i, !alias.scope !2520, !noalias !2521
  %7454 = load %struct.Memory*, %struct.Memory** %MEMORY.i, !noalias !2516
  %7455 = inttoptr i64 %7453 to i64*
  %7456 = load i64, i64* %7455
  store i64 %7456, i64* %PC.i, !alias.scope !2520, !noalias !2521
  %7457 = add i64 %7453, 8
  store i64 %7457, i64* %RSP.i, !alias.scope !2520, !noalias !2521
  %7458 = call double @atan(double %7452)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0.i, !alias.scope !2520, !noalias !2521
  %7459 = bitcast %"class.std::bitset"* %YMM0.i to double*
  store double %7458, double* %7459, !alias.scope !2520, !noalias !2521
  %7460 = load %struct.Memory*, %struct.Memory** %MEMORY.i, !noalias !2516
  %7461 = bitcast %struct.State** %state.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7461)
  %7462 = bitcast i64* %curr_pc.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7462)
  %7463 = bitcast %struct.Memory** %memory.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7463)
  call void @llvm.lifetime.end(i64 1, i8* %BRANCH_TAKEN.i)
  %7464 = bitcast i64* %SS_BASE.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7464)
  %7465 = bitcast i64* %ES_BASE.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7465)
  %7466 = bitcast i64* %DS_BASE.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7466)
  %7467 = bitcast i64* %CS_BASE.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7467)
  %7468 = bitcast %struct.State** %STATE.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7468)
  %7469 = bitcast %struct.Memory** %MEMORY.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7469)
  %7470 = bitcast i64** %_DR0.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7470)
  %7471 = bitcast i64** %_DR1.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7471)
  %7472 = bitcast i64** %_DR2.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7472)
  %7473 = bitcast i64** %_DR3.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7473)
  %7474 = bitcast i64** %_DR4.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7474)
  %7475 = bitcast i64** %_DR5.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7475)
  %7476 = bitcast i64** %_DR6.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7476)
  %7477 = bitcast i64** %_DR7.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7477)
  %7478 = bitcast i64** %CR0.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7478)
  %7479 = bitcast i64** %CR1.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7479)
  %7480 = bitcast i64** %CR2.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7480)
  %7481 = bitcast i64** %CR3.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7481)
  %7482 = bitcast i64** %CR4.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7482)
  %7483 = bitcast i64** %CR8.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7483)
  %7484 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %7485 = load i64, i64* %RBP
  %7486 = sub i64 %7485, 272
  %7487 = load i64, i64* %PC
  %7488 = add i64 %7487, 8
  store i64 %7488, i64* %PC
  %7489 = inttoptr i64 %7486 to double*
  %7490 = load double, double* %7489
  %7491 = bitcast i8* %7484 to double*
  store double %7490, double* %7491, align 1, !tbaa !2451
  %7492 = getelementptr inbounds i8, i8* %7484, i64 8
  %7493 = bitcast i8* %7492 to double*
  store double 0.000000e+00, double* %7493, align 1, !tbaa !2451
  %7494 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %7495 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %7496 = bitcast %union.vec128_t* %XMM0 to i8*
  %7497 = load i64, i64* %PC
  %7498 = add i64 %7497, 4
  store i64 %7498, i64* %PC
  %7499 = bitcast i8* %7495 to double*
  %7500 = load double, double* %7499, align 1
  %7501 = getelementptr inbounds i8, i8* %7495, i64 8
  %7502 = bitcast i8* %7501 to i64*
  %7503 = load i64, i64* %7502, align 1
  %7504 = bitcast i8* %7496 to double*
  %7505 = load double, double* %7504, align 1
  %7506 = fmul double %7500, %7505
  %7507 = bitcast i8* %7494 to double*
  store double %7506, double* %7507, align 1, !tbaa !2451
  %7508 = getelementptr inbounds i8, i8* %7494, i64 8
  %7509 = bitcast i8* %7508 to i64*
  store i64 %7503, i64* %7509, align 1, !tbaa !2451
  %7510 = load i64, i64* %RBP
  %7511 = sub i64 %7510, 152
  %7512 = bitcast %union.vec128_t* %XMM1 to i8*
  %7513 = load i64, i64* %PC
  %7514 = add i64 %7513, 8
  store i64 %7514, i64* %PC
  %7515 = bitcast i8* %7512 to double*
  %7516 = load double, double* %7515, align 1
  %7517 = inttoptr i64 %7511 to double*
  store double %7516, double* %7517
  %7518 = load i64, i64* %RBP
  %7519 = sub i64 %7518, 24
  %7520 = load i64, i64* %PC
  %7521 = add i64 %7520, 4
  store i64 %7521, i64* %PC
  %7522 = inttoptr i64 %7519 to i64*
  %7523 = load i64, i64* %7522
  store i64 %7523, i64* %RAX, align 8, !tbaa !2428
  %7524 = load i64, i64* %RAX
  %7525 = load i64, i64* %PC
  %7526 = add i64 %7525, 4
  store i64 %7526, i64* %PC
  %7527 = add i64 1, %7524
  store i64 %7527, i64* %RAX, align 8, !tbaa !2428
  %7528 = icmp ult i64 %7527, %7524
  %7529 = icmp ult i64 %7527, 1
  %7530 = or i1 %7528, %7529
  %7531 = zext i1 %7530 to i8
  %7532 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7531, i8* %7532, align 1, !tbaa !2432
  %7533 = trunc i64 %7527 to i32
  %7534 = and i32 %7533, 255
  %7535 = call i32 @llvm.ctpop.i32(i32 %7534) #17
  %7536 = trunc i32 %7535 to i8
  %7537 = and i8 %7536, 1
  %7538 = xor i8 %7537, 1
  %7539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7538, i8* %7539, align 1, !tbaa !2446
  %7540 = xor i64 1, %7524
  %7541 = xor i64 %7540, %7527
  %7542 = lshr i64 %7541, 4
  %7543 = trunc i64 %7542 to i8
  %7544 = and i8 %7543, 1
  %7545 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7544, i8* %7545, align 1, !tbaa !2450
  %7546 = icmp eq i64 %7527, 0
  %7547 = zext i1 %7546 to i8
  %7548 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7547, i8* %7548, align 1, !tbaa !2447
  %7549 = lshr i64 %7527, 63
  %7550 = trunc i64 %7549 to i8
  %7551 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7550, i8* %7551, align 1, !tbaa !2448
  %7552 = lshr i64 %7524, 63
  %7553 = xor i64 %7549, %7552
  %7554 = add nuw nsw i64 %7553, %7549
  %7555 = icmp eq i64 %7554, 2
  %7556 = zext i1 %7555 to i8
  %7557 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7556, i8* %7557, align 1, !tbaa !2449
  %7558 = load i64, i64* %RBP
  %7559 = sub i64 %7558, 24
  %7560 = load i64, i64* %RAX
  %7561 = load i64, i64* %PC
  %7562 = add i64 %7561, 4
  store i64 %7562, i64* %PC
  %7563 = inttoptr i64 %7559 to i64*
  store i64 %7560, i64* %7563
  %7564 = load i64, i64* %PC
  %7565 = sub i64 %7564, 498
  %7566 = load i64, i64* %PC
  %7567 = add i64 %7566, 5
  store i64 %7567, i64* %PC
  %7568 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7565, i64* %7568, align 8, !tbaa !2428
  br label %block_400fed

block_401589:                                     ; preds = %block_401550
  %7569 = load i64, i64* %RBP
  %7570 = sub i64 %7569, 4
  %7571 = load i64, i64* %PC
  %7572 = add i64 %7571, 7
  store i64 %7572, i64* %PC
  %7573 = inttoptr i64 %7570 to i32*
  store i32 0, i32* %7573
  br label %block_401590

block_400931:                                     ; preds = %block_400848
  %7574 = add i64 %8559, 5
  %7575 = load i64, i64* %PC
  %7576 = add i64 %7575, 5
  store i64 %7576, i64* %PC
  %7577 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7574, i64* %7577, align 8, !tbaa !2428
  br label %block_400936

block_400b50:                                     ; preds = %block_400b16, %block_400b28
  %MEMORY.9 = phi %struct.Memory* [ %MEMORY.4, %block_400b16 ], [ %7798, %block_400b28 ]
  %7578 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %7579 = load i64, i64* %PC
  %7580 = add i64 %7579, 8
  store i64 %7580, i64* %PC
  %7581 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4018b0__rodata_type* @seg_4018b0__rodata to i64), i64 32) to double*)
  %7582 = bitcast i8* %7578 to double*
  store double %7581, double* %7582, align 1, !tbaa !2451
  %7583 = getelementptr inbounds i8, i8* %7578, i64 8
  %7584 = bitcast i8* %7583 to double*
  store double 0.000000e+00, double* %7584, align 1, !tbaa !2451
  %7585 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %7586 = load i64, i64* %PC
  %7587 = add i64 %7586, 8
  store i64 %7587, i64* %PC
  %7588 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4018b0__rodata_type* @seg_4018b0__rodata to i64), i64 40) to double*)
  %7589 = bitcast i8* %7585 to double*
  store double %7588, double* %7589, align 1, !tbaa !2451
  %7590 = getelementptr inbounds i8, i8* %7585, i64 8
  %7591 = bitcast i8* %7590 to double*
  store double 0.000000e+00, double* %7591, align 1, !tbaa !2451
  %7592 = bitcast %union.vec128_t* %XMM1 to i8*
  %7593 = load i64, i64* %PC
  %7594 = add i64 %7593, 9
  store i64 %7594, i64* %PC
  %7595 = bitcast i8* %7592 to double*
  %7596 = load double, double* %7595, align 1
  store double %7596, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 8) to double*)
  %7597 = bitcast %union.vec128_t* %XMM0 to i8*
  %7598 = load i64, i64* %PC
  %7599 = add i64 %7598, 9
  store i64 %7599, i64* %PC
  %7600 = bitcast i8* %7597 to double*
  %7601 = load double, double* %7600, align 1
  store double %7601, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 16) to double*)
  %7602 = bitcast %union.vec128_t* %XMM0 to i8*
  %7603 = load i64, i64* %PC
  %7604 = add i64 %7603, 9
  store i64 %7604, i64* %PC
  %7605 = bitcast i8* %7602 to double*
  %7606 = load double, double* %7605, align 1
  store double %7606, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 24) to double*)
  %7607 = bitcast %union.vec128_t* %XMM0 to i8*
  %7608 = load i64, i64* %PC
  %7609 = add i64 %7608, 9
  store i64 %7609, i64* %PC
  %7610 = bitcast i8* %7607 to double*
  %7611 = load double, double* %7610, align 1
  store double %7611, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 32) to double*)
  %7612 = load i64, i64* %RBP
  %7613 = sub i64 %7612, 24
  %7614 = load i64, i64* %PC
  %7615 = add i64 %7614, 8
  store i64 %7615, i64* %PC
  %7616 = inttoptr i64 %7613 to i64*
  store i64 1, i64* %7616
  br label %block_400b8c

block_401530:                                     ; preds = %block_4014e5, %block_4014f7
  %MEMORY.10 = phi %struct.Memory* [ %MEMORY.16, %block_4014e5 ], [ %200, %block_4014f7 ]
  %7617 = load i64, i64* %RBP
  %7618 = sub i64 %7617, 176
  %7619 = load i64, i64* %PC
  %7620 = add i64 %7619, 6
  store i64 %7620, i64* %PC
  %7621 = inttoptr i64 %7618 to i32*
  %7622 = load i32, i32* %7621
  %7623 = zext i32 %7622 to i64
  store i64 %7623, i64* %RAX, align 8, !tbaa !2428
  %7624 = load i64, i64* %RAX
  %7625 = load i64, i64* %PC
  %7626 = add i64 %7625, 3
  store i64 %7626, i64* %PC
  %7627 = trunc i64 %7624 to i32
  %7628 = add i32 1, %7627
  %7629 = zext i32 %7628 to i64
  store i64 %7629, i64* %RAX, align 8, !tbaa !2428
  %7630 = icmp ult i32 %7628, %7627
  %7631 = icmp ult i32 %7628, 1
  %7632 = or i1 %7630, %7631
  %7633 = zext i1 %7632 to i8
  %7634 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7633, i8* %7634, align 1, !tbaa !2432
  %7635 = and i32 %7628, 255
  %7636 = call i32 @llvm.ctpop.i32(i32 %7635) #17
  %7637 = trunc i32 %7636 to i8
  %7638 = and i8 %7637, 1
  %7639 = xor i8 %7638, 1
  %7640 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7639, i8* %7640, align 1, !tbaa !2446
  %7641 = xor i64 1, %7624
  %7642 = trunc i64 %7641 to i32
  %7643 = xor i32 %7642, %7628
  %7644 = lshr i32 %7643, 4
  %7645 = trunc i32 %7644 to i8
  %7646 = and i8 %7645, 1
  %7647 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7646, i8* %7647, align 1, !tbaa !2450
  %7648 = icmp eq i32 %7628, 0
  %7649 = zext i1 %7648 to i8
  %7650 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7649, i8* %7650, align 1, !tbaa !2447
  %7651 = lshr i32 %7628, 31
  %7652 = trunc i32 %7651 to i8
  %7653 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7652, i8* %7653, align 1, !tbaa !2448
  %7654 = lshr i32 %7627, 31
  %7655 = xor i32 %7651, %7654
  %7656 = add nuw nsw i32 %7655, %7651
  %7657 = icmp eq i32 %7656, 2
  %7658 = zext i1 %7657 to i8
  %7659 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7658, i8* %7659, align 1, !tbaa !2449
  %7660 = load i64, i64* %RBP
  %7661 = sub i64 %7660, 176
  %7662 = load i32, i32* %EAX
  %7663 = zext i32 %7662 to i64
  %7664 = load i64, i64* %PC
  %7665 = add i64 %7664, 6
  store i64 %7665, i64* %PC
  %7666 = inttoptr i64 %7661 to i32*
  store i32 %7662, i32* %7666
  %7667 = load i32, i32* %EAX
  %7668 = zext i32 %7667 to i64
  %7669 = load i64, i64* %RBP
  %7670 = sub i64 %7669, 172
  %7671 = load i64, i64* %PC
  %7672 = add i64 %7671, 6
  store i64 %7672, i64* %PC
  %7673 = inttoptr i64 %7670 to i32*
  %7674 = load i32, i32* %7673
  %7675 = sub i32 %7667, %7674
  %7676 = icmp ult i32 %7667, %7674
  %7677 = zext i1 %7676 to i8
  %7678 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7677, i8* %7678, align 1, !tbaa !2432
  %7679 = and i32 %7675, 255
  %7680 = call i32 @llvm.ctpop.i32(i32 %7679) #17
  %7681 = trunc i32 %7680 to i8
  %7682 = and i8 %7681, 1
  %7683 = xor i8 %7682, 1
  %7684 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7683, i8* %7684, align 1, !tbaa !2446
  %7685 = xor i32 %7674, %7667
  %7686 = xor i32 %7685, %7675
  %7687 = lshr i32 %7686, 4
  %7688 = trunc i32 %7687 to i8
  %7689 = and i8 %7688, 1
  %7690 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7689, i8* %7690, align 1, !tbaa !2450
  %7691 = icmp eq i32 %7675, 0
  %7692 = zext i1 %7691 to i8
  %7693 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7692, i8* %7693, align 1, !tbaa !2447
  %7694 = lshr i32 %7675, 31
  %7695 = trunc i32 %7694 to i8
  %7696 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7695, i8* %7696, align 1, !tbaa !2448
  %7697 = lshr i32 %7667, 31
  %7698 = lshr i32 %7674, 31
  %7699 = xor i32 %7698, %7697
  %7700 = xor i32 %7694, %7697
  %7701 = add nuw nsw i32 %7700, %7699
  %7702 = icmp eq i32 %7701, 2
  %7703 = zext i1 %7702 to i8
  %7704 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7703, i8* %7704, align 1, !tbaa !2449
  %7705 = load i64, i64* %PC
  %7706 = add i64 %7705, 11
  %7707 = load i64, i64* %PC
  %7708 = add i64 %7707, 6
  %7709 = load i64, i64* %PC
  %7710 = add i64 %7709, 6
  store i64 %7710, i64* %PC
  %7711 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7712 = load i8, i8* %7711, align 1, !tbaa !2447
  %7713 = icmp eq i8 %7712, 0
  %7714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7715 = load i8, i8* %7714, align 1, !tbaa !2448
  %7716 = icmp ne i8 %7715, 0
  %7717 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %7718 = load i8, i8* %7717, align 1, !tbaa !2449
  %7719 = icmp ne i8 %7718, 0
  %7720 = xor i1 %7716, %7719
  %7721 = xor i1 %7720, true
  %7722 = and i1 %7713, %7721
  %7723 = zext i1 %7722 to i8
  store i8 %7723, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %7724 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7725 = select i1 %7722, i64 %7706, i64 %7708
  store i64 %7725, i64* %7724, align 8, !tbaa !2428
  %7726 = load i8, i8* %BRANCH_TAKEN
  %7727 = icmp eq i8 %7726, 1
  br i1 %7727, label %block_401550, label %block_40154b

block_400b28:                                     ; preds = %block_400b16
  %7728 = load i64, i64* %RBP
  %7729 = sub i64 %7728, 32
  %7730 = load i64, i64* %PC
  %7731 = add i64 %7730, 4
  store i64 %7731, i64* %PC
  %7732 = inttoptr i64 %7729 to i64*
  %7733 = load i64, i64* %7732
  store i64 %7733, i64* %RDI, align 8, !tbaa !2428
  %7734 = load i64, i64* %RBP
  %7735 = sub i64 %7734, 32
  %7736 = load i64, i64* %PC
  %7737 = add i64 %7736, 4
  store i64 %7737, i64* %PC
  %7738 = inttoptr i64 %7735 to i64*
  %7739 = load i64, i64* %7738
  store i64 %7739, i64* %RSI, align 8, !tbaa !2428
  %7740 = load i64, i64* %RBP
  %7741 = sub i64 %7740, 32
  %7742 = load i64, i64* %PC
  %7743 = add i64 %7742, 4
  store i64 %7743, i64* %PC
  %7744 = inttoptr i64 %7741 to i64*
  %7745 = load i64, i64* %7744
  store i64 %7745, i64* %RDX, align 8, !tbaa !2428
  %7746 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %7747 = load i64, i64* %RBP
  %7748 = sub i64 %7747, 112
  %7749 = load i64, i64* %PC
  %7750 = add i64 %7749, 5
  store i64 %7750, i64* %PC
  %7751 = inttoptr i64 %7748 to double*
  %7752 = load double, double* %7751
  %7753 = bitcast i8* %7746 to double*
  store double %7752, double* %7753, align 1, !tbaa !2451
  %7754 = getelementptr inbounds i8, i8* %7746, i64 8
  %7755 = bitcast i8* %7754 to double*
  store double 0.000000e+00, double* %7755, align 1, !tbaa !2451
  %7756 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %7757 = load i64, i64* %RBP
  %7758 = sub i64 %7757, 120
  %7759 = load i64, i64* %PC
  %7760 = add i64 %7759, 5
  store i64 %7760, i64* %PC
  %7761 = inttoptr i64 %7758 to double*
  %7762 = load double, double* %7761
  %7763 = bitcast i8* %7756 to double*
  store double %7762, double* %7763, align 1, !tbaa !2451
  %7764 = getelementptr inbounds i8, i8* %7756, i64 8
  %7765 = bitcast i8* %7764 to double*
  store double 0.000000e+00, double* %7765, align 1, !tbaa !2451
  %7766 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %7767 = load i64, i64* %RBP
  %7768 = sub i64 %7767, 128
  %7769 = load i64, i64* %PC
  %7770 = add i64 %7769, 5
  store i64 %7770, i64* %PC
  %7771 = inttoptr i64 %7768 to double*
  %7772 = load double, double* %7771
  %7773 = bitcast i8* %7766 to double*
  store double %7772, double* %7773, align 1, !tbaa !2451
  %7774 = getelementptr inbounds i8, i8* %7766, i64 8
  %7775 = bitcast i8* %7774 to double*
  store double 0.000000e+00, double* %7775, align 1, !tbaa !2451
  %7776 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %7777 = load i64, i64* %RBP
  %7778 = sub i64 %7777, 136
  %7779 = load i64, i64* %PC
  %7780 = add i64 %7779, 8
  store i64 %7780, i64* %PC
  %7781 = inttoptr i64 %7778 to double*
  %7782 = load double, double* %7781
  %7783 = bitcast i8* %7776 to double*
  store double %7782, double* %7783, align 1, !tbaa !2451
  %7784 = getelementptr inbounds i8, i8* %7776, i64 8
  %7785 = bitcast i8* %7784 to double*
  store double 0.000000e+00, double* %7785, align 1, !tbaa !2451
  %7786 = load i64, i64* %PC
  %7787 = add i64 %7786, 2645
  %7788 = load i64, i64* %PC
  %7789 = add i64 %7788, 5
  %7790 = load i64, i64* %PC
  %7791 = add i64 %7790, 5
  store i64 %7791, i64* %PC
  %7792 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7793 = load i64, i64* %7792, align 8, !tbaa !2428
  %7794 = add i64 %7793, -8
  %7795 = inttoptr i64 %7794 to i64*
  store i64 %7789, i64* %7795
  store i64 %7794, i64* %7792, align 8, !tbaa !2428
  %7796 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7787, i64* %7796, align 8, !tbaa !2428
  %7797 = load i64, i64* %PC
  %7798 = call %struct.Memory* @sub_4015a0_POUT_renamed_(%struct.State* %0, i64 %7797, %struct.Memory* %MEMORY.4)
  br label %block_400b50

block_400def:                                     ; preds = %block_400dd1
  store i32 0, i32* bitcast (%J_type* @J to i32*)
  br label %block_400dfa

block_401550:                                     ; preds = %block_401530
  %7799 = load i64, i64* %RAX
  %7800 = load i32, i32* %EAX
  %7801 = zext i32 %7800 to i64
  %7802 = load i64, i64* %PC
  %7803 = add i64 %7802, 2
  store i64 %7803, i64* %PC
  %7804 = xor i64 %7801, %7799
  %7805 = trunc i64 %7804 to i32
  %7806 = and i64 %7804, 4294967295
  store i64 %7806, i64* %RAX, align 8, !tbaa !2428
  %7807 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7807, align 1, !tbaa !2432
  %7808 = and i32 %7805, 255
  %7809 = call i32 @llvm.ctpop.i32(i32 %7808) #17
  %7810 = trunc i32 %7809 to i8
  %7811 = and i8 %7810, 1
  %7812 = xor i8 %7811, 1
  %7813 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7812, i8* %7813, align 1, !tbaa !2446
  %7814 = icmp eq i32 %7805, 0
  %7815 = zext i1 %7814 to i8
  %7816 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7815, i8* %7816, align 1, !tbaa !2447
  %7817 = lshr i32 %7805, 31
  %7818 = trunc i32 %7817 to i8
  %7819 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7818, i8* %7819, align 1, !tbaa !2448
  %7820 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7820, align 1, !tbaa !2449
  %7821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7821, align 1, !tbaa !2450
  %7822 = load i32, i32* %EAX
  %7823 = zext i32 %7822 to i64
  %7824 = load i64, i64* %PC
  %7825 = add i64 %7824, 2
  store i64 %7825, i64* %PC
  %7826 = and i64 %7823, 4294967295
  store i64 %7826, i64* %RDI, align 8, !tbaa !2428
  %7827 = load i64, i64* %PC
  %7828 = sub i64 %7827, 3700
  %7829 = load i64, i64* %PC
  %7830 = add i64 %7829, 5
  %7831 = load i64, i64* %PC
  %7832 = add i64 %7831, 5
  store i64 %7832, i64* %PC
  %7833 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7834 = load i64, i64* %7833, align 8, !tbaa !2428
  %7835 = add i64 %7834, -8
  %7836 = inttoptr i64 %7835 to i64*
  store i64 %7830, i64* %7836
  store i64 %7835, i64* %7833, align 8, !tbaa !2428
  %7837 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7828, i64* %7837, align 8, !tbaa !2428
  %7838 = load i64, i64* %PC
  %7839 = call %struct.Memory* @ext_4006e0_time(%struct.State* %0, i64 %7838, %struct.Memory* %MEMORY.10)
  %7840 = load i64, i64* %PC
  %7841 = add i64 %7840, 10
  store i64 %7841, i64* %PC
  store i64 add (i64 ptrtoint (%seg_4018b0__rodata_type* @seg_4018b0__rodata to i64), i64 101), i64* %RDI, align 8, !tbaa !2428
  %7842 = load i64, i64* %RBP
  %7843 = sub i64 %7842, 200
  %7844 = load i64, i64* %RAX
  %7845 = load i64, i64* %PC
  %7846 = add i64 %7845, 7
  store i64 %7846, i64* %PC
  %7847 = inttoptr i64 %7843 to i64*
  store i64 %7844, i64* %7847
  %7848 = load i64, i64* %PC
  %7849 = add i64 %7848, 2
  store i64 %7849, i64* %PC
  store i8 0, i8* %AL, align 1, !tbaa !2453
  %7850 = load i64, i64* %PC
  %7851 = sub i64 %7850, 3788
  %7852 = load i64, i64* %PC
  %7853 = add i64 %7852, 5
  %7854 = load i64, i64* %PC
  %7855 = add i64 %7854, 5
  store i64 %7855, i64* %PC
  %7856 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7857 = load i64, i64* %7856, align 8, !tbaa !2428
  %7858 = add i64 %7857, -8
  %7859 = inttoptr i64 %7858 to i64*
  store i64 %7853, i64* %7859
  store i64 %7858, i64* %7856, align 8, !tbaa !2428
  %7860 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7851, i64* %7860, align 8, !tbaa !2428
  %7861 = load i64, i64* %PC
  %7862 = call %struct.Memory* @ext_602160_printf(%struct.State* %0, i64 %7861, %struct.Memory* %7839)
  %7863 = load i64, i64* %RBP
  %7864 = sub i64 %7863, 208
  %7865 = load i64, i64* %PC
  %7866 = add i64 %7865, 7
  store i64 %7866, i64* %PC
  %7867 = inttoptr i64 %7864 to i32*
  %7868 = load i32, i32* %7867
  %7869 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7869, align 1, !tbaa !2432
  %7870 = and i32 %7868, 255
  %7871 = call i32 @llvm.ctpop.i32(i32 %7870) #17
  %7872 = trunc i32 %7871 to i8
  %7873 = and i8 %7872, 1
  %7874 = xor i8 %7873, 1
  %7875 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7874, i8* %7875, align 1, !tbaa !2446
  %7876 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7876, align 1, !tbaa !2450
  %7877 = icmp eq i32 %7868, 0
  %7878 = zext i1 %7877 to i8
  %7879 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7878, i8* %7879, align 1, !tbaa !2447
  %7880 = lshr i32 %7868, 31
  %7881 = trunc i32 %7880 to i8
  %7882 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7881, i8* %7882, align 1, !tbaa !2448
  %7883 = lshr i32 %7868, 31
  %7884 = xor i32 %7880, %7883
  %7885 = add nuw nsw i32 %7884, %7883
  %7886 = icmp eq i32 %7885, 2
  %7887 = zext i1 %7886 to i8
  %7888 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7887, i8* %7888, align 1, !tbaa !2449
  %7889 = load i64, i64* %RBP
  %7890 = sub i64 %7889, 316
  %7891 = load i32, i32* %EAX
  %7892 = zext i32 %7891 to i64
  %7893 = load i64, i64* %PC
  %7894 = add i64 %7893, 6
  store i64 %7894, i64* %PC
  %7895 = inttoptr i64 %7890 to i32*
  store i32 %7891, i32* %7895
  %7896 = load i64, i64* %PC
  %7897 = add i64 %7896, 11
  %7898 = load i64, i64* %PC
  %7899 = add i64 %7898, 6
  %7900 = load i64, i64* %PC
  %7901 = add i64 %7900, 6
  store i64 %7901, i64* %PC
  %7902 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7903 = load i8, i8* %7902, align 1, !tbaa !2447
  store i8 %7903, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %7904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7905 = icmp ne i8 %7903, 0
  %7906 = select i1 %7905, i64 %7897, i64 %7899
  store i64 %7906, i64* %7904, align 8, !tbaa !2428
  %7907 = load i8, i8* %BRANCH_TAKEN
  %7908 = icmp eq i8 %7907, 1
  br i1 %7908, label %block_401589, label %block_401584

block_400cac:                                     ; preds = %block_400c9a
  %7909 = load i64, i64* %RBP
  %7910 = sub i64 %7909, 40
  %7911 = load i64, i64* %PC
  %7912 = add i64 %7911, 4
  store i64 %7912, i64* %PC
  %7913 = inttoptr i64 %7910 to i64*
  %7914 = load i64, i64* %7913
  store i64 %7914, i64* %RDI, align 8, !tbaa !2428
  %7915 = load i64, i64* %RBP
  %7916 = sub i64 %7915, 48
  %7917 = load i64, i64* %PC
  %7918 = add i64 %7917, 4
  store i64 %7918, i64* %PC
  %7919 = inttoptr i64 %7916 to i64*
  %7920 = load i64, i64* %7919
  store i64 %7920, i64* %RSI, align 8, !tbaa !2428
  %7921 = load i64, i64* %RBP
  %7922 = sub i64 %7921, 40
  %7923 = load i64, i64* %PC
  %7924 = add i64 %7923, 4
  store i64 %7924, i64* %PC
  %7925 = inttoptr i64 %7922 to i64*
  %7926 = load i64, i64* %7925
  store i64 %7926, i64* %RDX, align 8, !tbaa !2428
  %7927 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %7928 = load i64, i64* %PC
  %7929 = add i64 %7928, 9
  store i64 %7929, i64* %PC
  %7930 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 8) to double*)
  %7931 = bitcast i8* %7927 to double*
  store double %7930, double* %7931, align 1, !tbaa !2451
  %7932 = getelementptr inbounds i8, i8* %7927, i64 8
  %7933 = bitcast i8* %7932 to double*
  store double 0.000000e+00, double* %7933, align 1, !tbaa !2451
  %7934 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %7935 = load i64, i64* %PC
  %7936 = add i64 %7935, 9
  store i64 %7936, i64* %PC
  %7937 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 16) to double*)
  %7938 = bitcast i8* %7934 to double*
  store double %7937, double* %7938, align 1, !tbaa !2451
  %7939 = getelementptr inbounds i8, i8* %7934, i64 8
  %7940 = bitcast i8* %7939 to double*
  store double 0.000000e+00, double* %7940, align 1, !tbaa !2451
  %7941 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %7942 = load i64, i64* %PC
  %7943 = add i64 %7942, 9
  store i64 %7943, i64* %PC
  %7944 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 24) to double*)
  %7945 = bitcast i8* %7941 to double*
  store double %7944, double* %7945, align 1, !tbaa !2451
  %7946 = getelementptr inbounds i8, i8* %7941, i64 8
  %7947 = bitcast i8* %7946 to double*
  store double 0.000000e+00, double* %7947, align 1, !tbaa !2451
  %7948 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %7949 = load i64, i64* %PC
  %7950 = add i64 %7949, 9
  store i64 %7950, i64* %PC
  %7951 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 32) to double*)
  %7952 = bitcast i8* %7948 to double*
  store double %7951, double* %7952, align 1, !tbaa !2451
  %7953 = getelementptr inbounds i8, i8* %7948, i64 8
  %7954 = bitcast i8* %7953 to double*
  store double 0.000000e+00, double* %7954, align 1, !tbaa !2451
  %7955 = load i64, i64* %PC
  %7956 = add i64 %7955, 2244
  %7957 = load i64, i64* %PC
  %7958 = add i64 %7957, 5
  %7959 = load i64, i64* %PC
  %7960 = add i64 %7959, 5
  store i64 %7960, i64* %PC
  %7961 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7962 = load i64, i64* %7961, align 8, !tbaa !2428
  %7963 = add i64 %7962, -8
  %7964 = inttoptr i64 %7963 to i64*
  store i64 %7958, i64* %7964
  store i64 %7963, i64* %7961, align 8, !tbaa !2428
  %7965 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7956, i64* %7965, align 8, !tbaa !2428
  %7966 = load i64, i64* %PC
  %7967 = call %struct.Memory* @sub_4015a0_POUT_renamed_(%struct.State* %0, i64 %7966, %struct.Memory* %MEMORY.21)
  br label %block_400ce1

block_400d29:                                     ; preds = %block_400d17
  %7968 = load i64, i64* %RBP
  %7969 = sub i64 %7968, 48
  %7970 = load i64, i64* %PC
  %7971 = add i64 %7970, 4
  store i64 %7971, i64* %PC
  %7972 = inttoptr i64 %7969 to i64*
  %7973 = load i64, i64* %7972
  store i64 %7973, i64* %RDI, align 8, !tbaa !2428
  %7974 = load i64, i64* %RBP
  %7975 = sub i64 %7974, 40
  %7976 = load i64, i64* %PC
  %7977 = add i64 %7976, 4
  store i64 %7977, i64* %PC
  %7978 = inttoptr i64 %7975 to i64*
  %7979 = load i64, i64* %7978
  store i64 %7979, i64* %RSI, align 8, !tbaa !2428
  %7980 = load i64, i64* %RBP
  %7981 = sub i64 %7980, 40
  %7982 = load i64, i64* %PC
  %7983 = add i64 %7982, 4
  store i64 %7983, i64* %PC
  %7984 = inttoptr i64 %7981 to i64*
  %7985 = load i64, i64* %7984
  store i64 %7985, i64* %RDX, align 8, !tbaa !2428
  %7986 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %7987 = load i64, i64* %PC
  %7988 = add i64 %7987, 9
  store i64 %7988, i64* %PC
  %7989 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 8) to double*)
  %7990 = bitcast i8* %7986 to double*
  store double %7989, double* %7990, align 1, !tbaa !2451
  %7991 = getelementptr inbounds i8, i8* %7986, i64 8
  %7992 = bitcast i8* %7991 to double*
  store double 0.000000e+00, double* %7992, align 1, !tbaa !2451
  %7993 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %7994 = load i64, i64* %PC
  %7995 = add i64 %7994, 9
  store i64 %7995, i64* %PC
  %7996 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 16) to double*)
  %7997 = bitcast i8* %7993 to double*
  store double %7996, double* %7997, align 1, !tbaa !2451
  %7998 = getelementptr inbounds i8, i8* %7993, i64 8
  %7999 = bitcast i8* %7998 to double*
  store double 0.000000e+00, double* %7999, align 1, !tbaa !2451
  %8000 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %8001 = load i64, i64* %PC
  %8002 = add i64 %8001, 9
  store i64 %8002, i64* %PC
  %8003 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 24) to double*)
  %8004 = bitcast i8* %8000 to double*
  store double %8003, double* %8004, align 1, !tbaa !2451
  %8005 = getelementptr inbounds i8, i8* %8000, i64 8
  %8006 = bitcast i8* %8005 to double*
  store double 0.000000e+00, double* %8006, align 1, !tbaa !2451
  %8007 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %8008 = load i64, i64* %PC
  %8009 = add i64 %8008, 9
  store i64 %8009, i64* %PC
  %8010 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 32) to double*)
  %8011 = bitcast i8* %8007 to double*
  store double %8010, double* %8011, align 1, !tbaa !2451
  %8012 = getelementptr inbounds i8, i8* %8007, i64 8
  %8013 = bitcast i8* %8012 to double*
  store double 0.000000e+00, double* %8013, align 1, !tbaa !2451
  %8014 = load i64, i64* %PC
  %8015 = add i64 %8014, 2119
  %8016 = load i64, i64* %PC
  %8017 = add i64 %8016, 5
  %8018 = load i64, i64* %PC
  %8019 = add i64 %8018, 5
  store i64 %8019, i64* %PC
  %8020 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %8021 = load i64, i64* %8020, align 8, !tbaa !2428
  %8022 = add i64 %8021, -8
  %8023 = inttoptr i64 %8022 to i64*
  store i64 %8017, i64* %8023
  store i64 %8022, i64* %8020, align 8, !tbaa !2428
  %8024 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8015, i64* %8024, align 8, !tbaa !2428
  %8025 = load i64, i64* %PC
  %8026 = call %struct.Memory* @sub_4015a0_POUT_renamed_(%struct.State* %0, i64 %8025, %struct.Memory* %MEMORY.17)
  br label %block_400d5e

block_400da8:                                     ; preds = %block_400d8d, %block_400d9d
  %MEMORY.11 = phi %struct.Memory* [ %MEMORY.12, %block_400d9d ], [ %MEMORY.12, %block_400d8d ]
  %8027 = load i64, i64* %PC
  %8028 = add i64 %8027, 8
  store i64 %8028, i64* %PC
  %8029 = load i32, i32* bitcast (%J_type* @J to i32*)
  %8030 = sub i32 %8029, 2
  %8031 = icmp ult i32 %8029, 2
  %8032 = zext i1 %8031 to i8
  %8033 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8032, i8* %8033, align 1, !tbaa !2432
  %8034 = and i32 %8030, 255
  %8035 = call i32 @llvm.ctpop.i32(i32 %8034) #17
  %8036 = trunc i32 %8035 to i8
  %8037 = and i8 %8036, 1
  %8038 = xor i8 %8037, 1
  %8039 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8038, i8* %8039, align 1, !tbaa !2446
  %8040 = xor i32 %8029, 2
  %8041 = xor i32 %8040, %8030
  %8042 = lshr i32 %8041, 4
  %8043 = trunc i32 %8042 to i8
  %8044 = and i8 %8043, 1
  %8045 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8044, i8* %8045, align 1, !tbaa !2450
  %8046 = icmp eq i32 %8030, 0
  %8047 = zext i1 %8046 to i8
  %8048 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8047, i8* %8048, align 1, !tbaa !2447
  %8049 = lshr i32 %8030, 31
  %8050 = trunc i32 %8049 to i8
  %8051 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8050, i8* %8051, align 1, !tbaa !2448
  %8052 = lshr i32 %8029, 31
  %8053 = xor i32 %8049, %8052
  %8054 = add nuw nsw i32 %8053, %8052
  %8055 = icmp eq i32 %8054, 2
  %8056 = zext i1 %8055 to i8
  %8057 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8056, i8* %8057, align 1, !tbaa !2449
  %8058 = load i64, i64* %PC
  %8059 = add i64 %8058, 22
  %8060 = load i64, i64* %PC
  %8061 = add i64 %8060, 6
  %8062 = load i64, i64* %PC
  %8063 = add i64 %8062, 6
  store i64 %8063, i64* %PC
  %8064 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8065 = load i8, i8* %8064, align 1, !tbaa !2447
  %8066 = icmp ne i8 %8065, 0
  %8067 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8068 = load i8, i8* %8067, align 1, !tbaa !2448
  %8069 = icmp ne i8 %8068, 0
  %8070 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8071 = load i8, i8* %8070, align 1, !tbaa !2449
  %8072 = icmp ne i8 %8071, 0
  %8073 = xor i1 %8069, %8072
  %8074 = or i1 %8066, %8073
  %8075 = zext i1 %8074 to i8
  store i8 %8075, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %8076 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8077 = select i1 %8074, i64 %8059, i64 %8061
  store i64 %8077, i64* %8076, align 8, !tbaa !2428
  %8078 = load i8, i8* %BRANCH_TAKEN
  %8079 = icmp eq i8 %8078, 1
  %8080 = load i64, i64* %PC
  %8081 = add i64 %8080, 11
  store i64 %8081, i64* %PC
  br i1 %8079, label %block_400dc6, label %block_400db6

block_400d71:                                     ; preds = %block_400dfa, %block_400d5e
  %MEMORY.12 = phi %struct.Memory* [ %MEMORY.1, %block_400d5e ], [ %MEMORY.5, %block_400dfa ]
  %8082 = load i64, i64* %RBP
  %8083 = sub i64 %8082, 24
  %8084 = load i64, i64* %PC
  %8085 = add i64 %8084, 4
  store i64 %8085, i64* %PC
  %8086 = inttoptr i64 %8083 to i64*
  %8087 = load i64, i64* %8086
  store i64 %8087, i64* %RAX, align 8, !tbaa !2428
  %8088 = load i64, i64* %RAX
  %8089 = load i64, i64* %RBP
  %8090 = sub i64 %8089, 56
  %8091 = load i64, i64* %PC
  %8092 = add i64 %8091, 4
  store i64 %8092, i64* %PC
  %8093 = inttoptr i64 %8090 to i64*
  %8094 = load i64, i64* %8093
  %8095 = sub i64 %8088, %8094
  %8096 = icmp ugt i64 %8094, %8088
  %8097 = zext i1 %8096 to i8
  %8098 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8097, i8* %8098, align 1, !tbaa !2432
  %8099 = trunc i64 %8095 to i32
  %8100 = and i32 %8099, 255
  %8101 = call i32 @llvm.ctpop.i32(i32 %8100) #17
  %8102 = trunc i32 %8101 to i8
  %8103 = and i8 %8102, 1
  %8104 = xor i8 %8103, 1
  %8105 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8104, i8* %8105, align 1, !tbaa !2446
  %8106 = xor i64 %8094, %8088
  %8107 = xor i64 %8106, %8095
  %8108 = lshr i64 %8107, 4
  %8109 = trunc i64 %8108 to i8
  %8110 = and i8 %8109, 1
  %8111 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8110, i8* %8111, align 1, !tbaa !2450
  %8112 = icmp eq i64 %8095, 0
  %8113 = zext i1 %8112 to i8
  %8114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8113, i8* %8114, align 1, !tbaa !2447
  %8115 = lshr i64 %8095, 63
  %8116 = trunc i64 %8115 to i8
  %8117 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8116, i8* %8117, align 1, !tbaa !2448
  %8118 = lshr i64 %8088, 63
  %8119 = lshr i64 %8094, 63
  %8120 = xor i64 %8119, %8118
  %8121 = xor i64 %8115, %8118
  %8122 = add nuw nsw i64 %8121, %8120
  %8123 = icmp eq i64 %8122, 2
  %8124 = zext i1 %8123 to i8
  %8125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8124, i8* %8125, align 1, !tbaa !2449
  %8126 = load i64, i64* %PC
  %8127 = add i64 %8126, 151
  %8128 = load i64, i64* %PC
  %8129 = add i64 %8128, 6
  %8130 = load i64, i64* %PC
  %8131 = add i64 %8130, 6
  store i64 %8131, i64* %PC
  %8132 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8133 = load i8, i8* %8132, align 1, !tbaa !2447
  %8134 = icmp eq i8 %8133, 0
  %8135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8136 = load i8, i8* %8135, align 1, !tbaa !2448
  %8137 = icmp ne i8 %8136, 0
  %8138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8139 = load i8, i8* %8138, align 1, !tbaa !2449
  %8140 = icmp ne i8 %8139, 0
  %8141 = xor i1 %8137, %8140
  %8142 = xor i1 %8141, true
  %8143 = and i1 %8134, %8142
  %8144 = zext i1 %8143 to i8
  store i8 %8144, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %8145 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8146 = select i1 %8143, i64 %8127, i64 %8129
  store i64 %8146, i64* %8145, align 8, !tbaa !2428
  %8147 = load i8, i8* %BRANCH_TAKEN
  %8148 = icmp eq i8 %8147, 1
  br i1 %8148, label %block_400e10, label %block_400d7f

block_400e52:                                     ; preds = %block_400e22, %block_400e10
  %MEMORY.13 = phi %struct.Memory* [ %MEMORY.12, %block_400e10 ], [ %8345, %block_400e22 ]
  %8149 = load i64, i64* %PC
  %8150 = add i64 %8149, 11
  store i64 %8150, i64* %PC
  store i32 1, i32* bitcast (%J_type* @J to i32*)
  %8151 = load i64, i64* %PC
  %8152 = add i64 %8151, 11
  store i64 %8152, i64* %PC
  store i32 2, i32* bitcast (%K_type* @K to i32*)
  %8153 = load i64, i64* %PC
  %8154 = add i64 %8153, 11
  store i64 %8154, i64* %PC
  store i32 3, i32* bitcast (%L_type* @L to i32*)
  %8155 = load i64, i64* %RBP
  %8156 = sub i64 %8155, 24
  %8157 = load i64, i64* %PC
  %8158 = add i64 %8157, 8
  store i64 %8158, i64* %PC
  %8159 = inttoptr i64 %8156 to i64*
  store i64 1, i64* %8159
  br label %block_400e7b

block_4012a4:                                     ; preds = %block_401292
  %8160 = load i64, i64* %RBP
  %8161 = sub i64 %8160, 80
  %8162 = load i64, i64* %PC
  %8163 = add i64 %8162, 4
  store i64 %8163, i64* %PC
  %8164 = inttoptr i64 %8161 to i64*
  %8165 = load i64, i64* %8164
  store i64 %8165, i64* %RDI, align 8, !tbaa !2428
  %8166 = load i64, i64* %PC
  %8167 = add i64 %8166, 8
  store i64 %8167, i64* %PC
  %8168 = load i32, i32* bitcast (%J_type* @J to i32*)
  %8169 = sext i32 %8168 to i64
  store i64 %8169, i64* %RSI, align 8, !tbaa !2428
  %8170 = load i64, i64* %PC
  %8171 = add i64 %8170, 8
  store i64 %8171, i64* %PC
  %8172 = load i32, i32* bitcast (%K_type* @K to i32*)
  %8173 = sext i32 %8172 to i64
  store i64 %8173, i64* %RDX, align 8, !tbaa !2428
  %8174 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %8175 = load i64, i64* %RBP
  %8176 = sub i64 %8175, 144
  %8177 = load i64, i64* %PC
  %8178 = add i64 %8177, 8
  store i64 %8178, i64* %PC
  %8179 = inttoptr i64 %8176 to double*
  %8180 = load double, double* %8179
  %8181 = bitcast i8* %8174 to double*
  store double %8180, double* %8181, align 1, !tbaa !2451
  %8182 = getelementptr inbounds i8, i8* %8174, i64 8
  %8183 = bitcast i8* %8182 to double*
  store double 0.000000e+00, double* %8183, align 1, !tbaa !2451
  %8184 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %8185 = load i64, i64* %RBP
  %8186 = sub i64 %8185, 152
  %8187 = load i64, i64* %PC
  %8188 = add i64 %8187, 8
  store i64 %8188, i64* %PC
  %8189 = inttoptr i64 %8186 to double*
  %8190 = load double, double* %8189
  %8191 = bitcast i8* %8184 to double*
  store double %8190, double* %8191, align 1, !tbaa !2451
  %8192 = getelementptr inbounds i8, i8* %8184, i64 8
  %8193 = bitcast i8* %8192 to double*
  store double 0.000000e+00, double* %8193, align 1, !tbaa !2451
  %8194 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %8195 = load i64, i64* %RBP
  %8196 = sub i64 %8195, 160
  %8197 = load i64, i64* %PC
  %8198 = add i64 %8197, 8
  store i64 %8198, i64* %PC
  %8199 = inttoptr i64 %8196 to double*
  %8200 = load double, double* %8199
  %8201 = bitcast i8* %8194 to double*
  store double %8200, double* %8201, align 1, !tbaa !2451
  %8202 = getelementptr inbounds i8, i8* %8194, i64 8
  %8203 = bitcast i8* %8202 to double*
  store double 0.000000e+00, double* %8203, align 1, !tbaa !2451
  %8204 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %8205 = load i64, i64* %RBP
  %8206 = sub i64 %8205, 160
  %8207 = load i64, i64* %PC
  %8208 = add i64 %8207, 8
  store i64 %8208, i64* %PC
  %8209 = inttoptr i64 %8206 to double*
  %8210 = load double, double* %8209
  %8211 = bitcast i8* %8204 to double*
  store double %8210, double* %8211, align 1, !tbaa !2451
  %8212 = getelementptr inbounds i8, i8* %8204, i64 8
  %8213 = bitcast i8* %8212 to double*
  store double 0.000000e+00, double* %8213, align 1, !tbaa !2451
  %8214 = load i64, i64* %PC
  %8215 = add i64 %8214, 712
  %8216 = load i64, i64* %PC
  %8217 = add i64 %8216, 5
  %8218 = load i64, i64* %PC
  %8219 = add i64 %8218, 5
  store i64 %8219, i64* %PC
  %8220 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %8221 = load i64, i64* %8220, align 8, !tbaa !2428
  %8222 = add i64 %8221, -8
  %8223 = inttoptr i64 %8222 to i64*
  store i64 %8217, i64* %8223
  store i64 %8222, i64* %8220, align 8, !tbaa !2428
  %8224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8215, i64* %8224, align 8, !tbaa !2428
  %8225 = load i64, i64* %PC
  %8226 = call %struct.Memory* @sub_4015a0_POUT_renamed_(%struct.State* %0, i64 %8225, %struct.Memory* %MEMORY.22)
  br label %block_4012dd

block_400ce1:                                     ; preds = %block_400c9a, %block_400cac
  %MEMORY.14 = phi %struct.Memory* [ %MEMORY.21, %block_400c9a ], [ %7967, %block_400cac ]
  %8227 = load i64, i64* %RBP
  %8228 = sub i64 %8227, 24
  %8229 = load i64, i64* %PC
  %8230 = add i64 %8229, 8
  store i64 %8230, i64* %PC
  %8231 = inttoptr i64 %8228 to i64*
  store i64 1, i64* %8231
  br label %block_400ce9

block_400d7f:                                     ; preds = %block_400d71
  %8232 = load i64, i64* %PC
  %8233 = add i64 %8232, 8
  store i64 %8233, i64* %PC
  %8234 = load i32, i32* bitcast (%J_type* @J to i32*)
  %8235 = sub i32 %8234, 1
  %8236 = icmp ult i32 %8234, 1
  %8237 = zext i1 %8236 to i8
  %8238 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8237, i8* %8238, align 1, !tbaa !2432
  %8239 = and i32 %8235, 255
  %8240 = call i32 @llvm.ctpop.i32(i32 %8239) #17
  %8241 = trunc i32 %8240 to i8
  %8242 = and i8 %8241, 1
  %8243 = xor i8 %8242, 1
  %8244 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8243, i8* %8244, align 1, !tbaa !2446
  %8245 = xor i32 %8234, 1
  %8246 = xor i32 %8245, %8235
  %8247 = lshr i32 %8246, 4
  %8248 = trunc i32 %8247 to i8
  %8249 = and i8 %8248, 1
  %8250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8249, i8* %8250, align 1, !tbaa !2450
  %8251 = icmp eq i32 %8235, 0
  %8252 = zext i1 %8251 to i8
  %8253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8252, i8* %8253, align 1, !tbaa !2447
  %8254 = lshr i32 %8235, 31
  %8255 = trunc i32 %8254 to i8
  %8256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8255, i8* %8256, align 1, !tbaa !2448
  %8257 = lshr i32 %8234, 31
  %8258 = xor i32 %8254, %8257
  %8259 = add nuw nsw i32 %8258, %8257
  %8260 = icmp eq i32 %8259, 2
  %8261 = zext i1 %8260 to i8
  %8262 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8261, i8* %8262, align 1, !tbaa !2449
  %8263 = load i64, i64* %PC
  %8264 = add i64 %8263, 22
  %8265 = load i64, i64* %PC
  %8266 = add i64 %8265, 6
  %8267 = load i64, i64* %PC
  %8268 = add i64 %8267, 6
  store i64 %8268, i64* %PC
  %8269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8270 = load i8, i8* %8269, align 1, !tbaa !2447
  %8271 = icmp eq i8 %8270, 0
  %8272 = zext i1 %8271 to i8
  store i8 %8272, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %8273 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8274 = select i1 %8271, i64 %8264, i64 %8266
  store i64 %8274, i64* %8273, align 8, !tbaa !2428
  %8275 = load i8, i8* %BRANCH_TAKEN
  %8276 = icmp eq i8 %8275, 1
  %8277 = load i64, i64* %PC
  %8278 = add i64 %8277, 11
  store i64 %8278, i64* %PC
  br i1 %8276, label %block_400d9d, label %block_400d8d

block_400e22:                                     ; preds = %block_400e10
  %8279 = load i64, i64* %RBP
  %8280 = sub i64 %8279, 56
  %8281 = load i64, i64* %PC
  %8282 = add i64 %8281, 4
  store i64 %8282, i64* %PC
  %8283 = inttoptr i64 %8280 to i64*
  %8284 = load i64, i64* %8283
  store i64 %8284, i64* %RDI, align 8, !tbaa !2428
  %8285 = load i64, i64* %PC
  %8286 = add i64 %8285, 8
  store i64 %8286, i64* %PC
  %8287 = load i32, i32* bitcast (%J_type* @J to i32*)
  %8288 = sext i32 %8287 to i64
  store i64 %8288, i64* %RSI, align 8, !tbaa !2428
  %8289 = load i64, i64* %PC
  %8290 = add i64 %8289, 8
  store i64 %8290, i64* %PC
  %8291 = load i32, i32* bitcast (%J_type* @J to i32*)
  %8292 = sext i32 %8291 to i64
  store i64 %8292, i64* %RDX, align 8, !tbaa !2428
  %8293 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %8294 = load i64, i64* %RBP
  %8295 = sub i64 %8294, 112
  %8296 = load i64, i64* %PC
  %8297 = add i64 %8296, 5
  store i64 %8297, i64* %PC
  %8298 = inttoptr i64 %8295 to double*
  %8299 = load double, double* %8298
  %8300 = bitcast i8* %8293 to double*
  store double %8299, double* %8300, align 1, !tbaa !2451
  %8301 = getelementptr inbounds i8, i8* %8293, i64 8
  %8302 = bitcast i8* %8301 to double*
  store double 0.000000e+00, double* %8302, align 1, !tbaa !2451
  %8303 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %8304 = load i64, i64* %RBP
  %8305 = sub i64 %8304, 120
  %8306 = load i64, i64* %PC
  %8307 = add i64 %8306, 5
  store i64 %8307, i64* %PC
  %8308 = inttoptr i64 %8305 to double*
  %8309 = load double, double* %8308
  %8310 = bitcast i8* %8303 to double*
  store double %8309, double* %8310, align 1, !tbaa !2451
  %8311 = getelementptr inbounds i8, i8* %8303, i64 8
  %8312 = bitcast i8* %8311 to double*
  store double 0.000000e+00, double* %8312, align 1, !tbaa !2451
  %8313 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %8314 = load i64, i64* %RBP
  %8315 = sub i64 %8314, 128
  %8316 = load i64, i64* %PC
  %8317 = add i64 %8316, 5
  store i64 %8317, i64* %PC
  %8318 = inttoptr i64 %8315 to double*
  %8319 = load double, double* %8318
  %8320 = bitcast i8* %8313 to double*
  store double %8319, double* %8320, align 1, !tbaa !2451
  %8321 = getelementptr inbounds i8, i8* %8313, i64 8
  %8322 = bitcast i8* %8321 to double*
  store double 0.000000e+00, double* %8322, align 1, !tbaa !2451
  %8323 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %8324 = load i64, i64* %RBP
  %8325 = sub i64 %8324, 136
  %8326 = load i64, i64* %PC
  %8327 = add i64 %8326, 8
  store i64 %8327, i64* %PC
  %8328 = inttoptr i64 %8325 to double*
  %8329 = load double, double* %8328
  %8330 = bitcast i8* %8323 to double*
  store double %8329, double* %8330, align 1, !tbaa !2451
  %8331 = getelementptr inbounds i8, i8* %8323, i64 8
  %8332 = bitcast i8* %8331 to double*
  store double 0.000000e+00, double* %8332, align 1, !tbaa !2451
  %8333 = load i64, i64* %PC
  %8334 = add i64 %8333, 1875
  %8335 = load i64, i64* %PC
  %8336 = add i64 %8335, 5
  %8337 = load i64, i64* %PC
  %8338 = add i64 %8337, 5
  store i64 %8338, i64* %PC
  %8339 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %8340 = load i64, i64* %8339, align 8, !tbaa !2428
  %8341 = add i64 %8340, -8
  %8342 = inttoptr i64 %8341 to i64*
  store i64 %8336, i64* %8342
  store i64 %8341, i64* %8339, align 8, !tbaa !2428
  %8343 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8334, i64* %8343, align 8, !tbaa !2428
  %8344 = load i64, i64* %PC
  %8345 = call %struct.Memory* @sub_4015a0_POUT_renamed_(%struct.State* %0, i64 %8344, %struct.Memory* %MEMORY.12)
  br label %block_400e52

block_400ddf:                                     ; preds = %block_400dd1
  store i32 1, i32* bitcast (%J_type* @J to i32*)
  %8346 = load i64, i64* %PC
  %8347 = add i64 %8346, 16
  %8348 = load i64, i64* %PC
  %8349 = add i64 %8348, 5
  store i64 %8349, i64* %PC
  %8350 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8347, i64* %8350, align 8, !tbaa !2428
  br label %block_400dfa

block_4008a0:                                     ; preds = %block_400885, %block_400857
  %MEMORY.15 = phi %struct.Memory* [ %8660, %block_400857 ], [ %8660, %block_400885 ]
  %8351 = load i64, i64* %RBP
  %8352 = sub i64 %8351, 208
  %8353 = load i64, i64* %PC
  %8354 = add i64 %8353, 10
  store i64 %8354, i64* %PC
  %8355 = inttoptr i64 %8352 to i32*
  store i32 1, i32* %8355
  %8356 = load i64, i64* %PC
  %8357 = add i64 %8356, 115
  %8358 = load i64, i64* %PC
  %8359 = add i64 %8358, 5
  store i64 %8359, i64* %PC
  %8360 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8357, i64* %8360, align 8, !tbaa !2428
  br label %block_40091d

block_40149e:                                     ; preds = %block_401486, %block_4014ac
  %MEMORY.16 = phi %struct.Memory* [ %MEMORY.24, %block_401486 ], [ %1455, %block_4014ac ]
  %8361 = load i64, i64* %RBP
  %8362 = sub i64 %8361, 24
  %8363 = load i64, i64* %PC
  %8364 = add i64 %8363, 4
  store i64 %8364, i64* %PC
  %8365 = inttoptr i64 %8362 to i64*
  %8366 = load i64, i64* %8365
  store i64 %8366, i64* %RAX, align 8, !tbaa !2428
  %8367 = load i64, i64* %RAX
  %8368 = load i64, i64* %RBP
  %8369 = sub i64 %8368, 104
  %8370 = load i64, i64* %PC
  %8371 = add i64 %8370, 4
  store i64 %8371, i64* %PC
  %8372 = inttoptr i64 %8369 to i64*
  %8373 = load i64, i64* %8372
  %8374 = sub i64 %8367, %8373
  %8375 = icmp ugt i64 %8373, %8367
  %8376 = zext i1 %8375 to i8
  %8377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8376, i8* %8377, align 1, !tbaa !2432
  %8378 = trunc i64 %8374 to i32
  %8379 = and i32 %8378, 255
  %8380 = call i32 @llvm.ctpop.i32(i32 %8379) #17
  %8381 = trunc i32 %8380 to i8
  %8382 = and i8 %8381, 1
  %8383 = xor i8 %8382, 1
  %8384 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8383, i8* %8384, align 1, !tbaa !2446
  %8385 = xor i64 %8373, %8367
  %8386 = xor i64 %8385, %8374
  %8387 = lshr i64 %8386, 4
  %8388 = trunc i64 %8387 to i8
  %8389 = and i8 %8388, 1
  %8390 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8389, i8* %8390, align 1, !tbaa !2450
  %8391 = icmp eq i64 %8374, 0
  %8392 = zext i1 %8391 to i8
  %8393 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8392, i8* %8393, align 1, !tbaa !2447
  %8394 = lshr i64 %8374, 63
  %8395 = trunc i64 %8394 to i8
  %8396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8395, i8* %8396, align 1, !tbaa !2448
  %8397 = lshr i64 %8367, 63
  %8398 = lshr i64 %8373, 63
  %8399 = xor i64 %8398, %8397
  %8400 = xor i64 %8394, %8397
  %8401 = add nuw nsw i64 %8400, %8399
  %8402 = icmp eq i64 %8401, 2
  %8403 = zext i1 %8402 to i8
  %8404 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8403, i8* %8404, align 1, !tbaa !2449
  %8405 = load i64, i64* %PC
  %8406 = add i64 %8405, 63
  %8407 = load i64, i64* %PC
  %8408 = add i64 %8407, 6
  %8409 = load i64, i64* %PC
  %8410 = add i64 %8409, 6
  store i64 %8410, i64* %PC
  %8411 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8412 = load i8, i8* %8411, align 1, !tbaa !2447
  %8413 = icmp eq i8 %8412, 0
  %8414 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8415 = load i8, i8* %8414, align 1, !tbaa !2448
  %8416 = icmp ne i8 %8415, 0
  %8417 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8418 = load i8, i8* %8417, align 1, !tbaa !2449
  %8419 = icmp ne i8 %8418, 0
  %8420 = xor i1 %8416, %8419
  %8421 = xor i1 %8420, true
  %8422 = and i1 %8413, %8421
  %8423 = zext i1 %8422 to i8
  store i8 %8423, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %8424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8425 = select i1 %8422, i64 %8406, i64 %8408
  store i64 %8425, i64* %8424, align 8, !tbaa !2428
  %8426 = load i8, i8* %BRANCH_TAKEN
  %8427 = icmp eq i8 %8426, 1
  br i1 %8427, label %block_4014e5, label %block_4014ac

block_400ce9:                                     ; preds = %block_400ce1, %block_400cf7
  %MEMORY.17 = phi %struct.Memory* [ %MEMORY.14, %block_400ce1 ], [ %578, %block_400cf7 ]
  %8428 = load i64, i64* %RBP
  %8429 = sub i64 %8428, 24
  %8430 = load i64, i64* %PC
  %8431 = add i64 %8430, 4
  store i64 %8431, i64* %PC
  %8432 = inttoptr i64 %8429 to i64*
  %8433 = load i64, i64* %8432
  store i64 %8433, i64* %RAX, align 8, !tbaa !2428
  %8434 = load i64, i64* %RAX
  %8435 = load i64, i64* %RBP
  %8436 = sub i64 %8435, 48
  %8437 = load i64, i64* %PC
  %8438 = add i64 %8437, 4
  store i64 %8438, i64* %PC
  %8439 = inttoptr i64 %8436 to i64*
  %8440 = load i64, i64* %8439
  %8441 = sub i64 %8434, %8440
  %8442 = icmp ugt i64 %8440, %8434
  %8443 = zext i1 %8442 to i8
  %8444 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8443, i8* %8444, align 1, !tbaa !2432
  %8445 = trunc i64 %8441 to i32
  %8446 = and i32 %8445, 255
  %8447 = call i32 @llvm.ctpop.i32(i32 %8446) #17
  %8448 = trunc i32 %8447 to i8
  %8449 = and i8 %8448, 1
  %8450 = xor i8 %8449, 1
  %8451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8450, i8* %8451, align 1, !tbaa !2446
  %8452 = xor i64 %8440, %8434
  %8453 = xor i64 %8452, %8441
  %8454 = lshr i64 %8453, 4
  %8455 = trunc i64 %8454 to i8
  %8456 = and i8 %8455, 1
  %8457 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8456, i8* %8457, align 1, !tbaa !2450
  %8458 = icmp eq i64 %8441, 0
  %8459 = zext i1 %8458 to i8
  %8460 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8459, i8* %8460, align 1, !tbaa !2447
  %8461 = lshr i64 %8441, 63
  %8462 = trunc i64 %8461 to i8
  %8463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8462, i8* %8463, align 1, !tbaa !2448
  %8464 = lshr i64 %8434, 63
  %8465 = lshr i64 %8440, 63
  %8466 = xor i64 %8465, %8464
  %8467 = xor i64 %8461, %8464
  %8468 = add nuw nsw i64 %8467, %8466
  %8469 = icmp eq i64 %8468, 2
  %8470 = zext i1 %8469 to i8
  %8471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8470, i8* %8471, align 1, !tbaa !2449
  %8472 = load i64, i64* %PC
  %8473 = add i64 %8472, 38
  %8474 = load i64, i64* %PC
  %8475 = add i64 %8474, 6
  %8476 = load i64, i64* %PC
  %8477 = add i64 %8476, 6
  store i64 %8477, i64* %PC
  %8478 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8479 = load i8, i8* %8478, align 1, !tbaa !2447
  %8480 = icmp eq i8 %8479, 0
  %8481 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8482 = load i8, i8* %8481, align 1, !tbaa !2448
  %8483 = icmp ne i8 %8482, 0
  %8484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8485 = load i8, i8* %8484, align 1, !tbaa !2449
  %8486 = icmp ne i8 %8485, 0
  %8487 = xor i1 %8483, %8486
  %8488 = xor i1 %8487, true
  %8489 = and i1 %8480, %8488
  %8490 = zext i1 %8489 to i8
  store i8 %8490, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %8491 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8492 = select i1 %8489, i64 %8473, i64 %8475
  store i64 %8492, i64* %8491, align 8, !tbaa !2428
  %8493 = load i8, i8* %BRANCH_TAKEN
  %8494 = icmp eq i8 %8493, 1
  br i1 %8494, label %block_400d17, label %block_400cf7

block_400848:                                     ; preds = %block_40091d, %block_400810
  %MEMORY.18 = phi %struct.Memory* [ %2, %block_400810 ], [ %MEMORY.8, %block_40091d ]
  %8495 = load i64, i64* %RBP
  %8496 = sub i64 %8495, 172
  %8497 = load i64, i64* %PC
  %8498 = add i64 %8497, 6
  store i64 %8498, i64* %PC
  %8499 = inttoptr i64 %8496 to i32*
  %8500 = load i32, i32* %8499
  %8501 = zext i32 %8500 to i64
  store i64 %8501, i64* %RAX, align 8, !tbaa !2428
  %8502 = load i32, i32* %EAX
  %8503 = zext i32 %8502 to i64
  %8504 = load i64, i64* %RBP
  %8505 = sub i64 %8504, 8
  %8506 = load i64, i64* %PC
  %8507 = add i64 %8506, 3
  store i64 %8507, i64* %PC
  %8508 = inttoptr i64 %8505 to i32*
  %8509 = load i32, i32* %8508
  %8510 = sub i32 %8502, %8509
  %8511 = icmp ult i32 %8502, %8509
  %8512 = zext i1 %8511 to i8
  %8513 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8512, i8* %8513, align 1, !tbaa !2432
  %8514 = and i32 %8510, 255
  %8515 = call i32 @llvm.ctpop.i32(i32 %8514) #17
  %8516 = trunc i32 %8515 to i8
  %8517 = and i8 %8516, 1
  %8518 = xor i8 %8517, 1
  %8519 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8518, i8* %8519, align 1, !tbaa !2446
  %8520 = xor i32 %8509, %8502
  %8521 = xor i32 %8520, %8510
  %8522 = lshr i32 %8521, 4
  %8523 = trunc i32 %8522 to i8
  %8524 = and i8 %8523, 1
  %8525 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8524, i8* %8525, align 1, !tbaa !2450
  %8526 = icmp eq i32 %8510, 0
  %8527 = zext i1 %8526 to i8
  %8528 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8527, i8* %8528, align 1, !tbaa !2447
  %8529 = lshr i32 %8510, 31
  %8530 = trunc i32 %8529 to i8
  %8531 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8530, i8* %8531, align 1, !tbaa !2448
  %8532 = lshr i32 %8502, 31
  %8533 = lshr i32 %8509, 31
  %8534 = xor i32 %8533, %8532
  %8535 = xor i32 %8529, %8532
  %8536 = add nuw nsw i32 %8535, %8534
  %8537 = icmp eq i32 %8536, 2
  %8538 = zext i1 %8537 to i8
  %8539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8538, i8* %8539, align 1, !tbaa !2449
  %8540 = load i64, i64* %PC
  %8541 = add i64 %8540, 224
  %8542 = load i64, i64* %PC
  %8543 = add i64 %8542, 6
  %8544 = load i64, i64* %PC
  %8545 = add i64 %8544, 6
  store i64 %8545, i64* %PC
  %8546 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8547 = load i8, i8* %8546, align 1, !tbaa !2448
  %8548 = icmp ne i8 %8547, 0
  %8549 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8550 = load i8, i8* %8549, align 1, !tbaa !2449
  %8551 = icmp ne i8 %8550, 0
  %8552 = xor i1 %8548, %8551
  %8553 = xor i1 %8552, true
  %8554 = zext i1 %8553 to i8
  store i8 %8554, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %8555 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8556 = select i1 %8552, i64 %8543, i64 %8541
  store i64 %8556, i64* %8555, align 8, !tbaa !2428
  %8557 = load i8, i8* %BRANCH_TAKEN
  %8558 = icmp eq i8 %8557, 1
  %8559 = load i64, i64* %PC
  br i1 %8558, label %block_400931, label %block_400857

block_400c9a:                                     ; preds = %block_400b8c
  %8560 = load i64, i64* %RBP
  %8561 = sub i64 %8560, 176
  %8562 = load i64, i64* %PC
  %8563 = add i64 %8562, 6
  store i64 %8563, i64* %PC
  %8564 = inttoptr i64 %8561 to i32*
  %8565 = load i32, i32* %8564
  %8566 = zext i32 %8565 to i64
  store i64 %8566, i64* %RAX, align 8, !tbaa !2428
  %8567 = load i32, i32* %EAX
  %8568 = zext i32 %8567 to i64
  %8569 = load i64, i64* %RBP
  %8570 = sub i64 %8569, 172
  %8571 = load i64, i64* %PC
  %8572 = add i64 %8571, 6
  store i64 %8572, i64* %PC
  %8573 = inttoptr i64 %8570 to i32*
  %8574 = load i32, i32* %8573
  %8575 = sub i32 %8567, %8574
  %8576 = icmp ult i32 %8567, %8574
  %8577 = zext i1 %8576 to i8
  %8578 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8577, i8* %8578, align 1, !tbaa !2432
  %8579 = and i32 %8575, 255
  %8580 = call i32 @llvm.ctpop.i32(i32 %8579) #17
  %8581 = trunc i32 %8580 to i8
  %8582 = and i8 %8581, 1
  %8583 = xor i8 %8582, 1
  %8584 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8583, i8* %8584, align 1, !tbaa !2446
  %8585 = xor i32 %8574, %8567
  %8586 = xor i32 %8585, %8575
  %8587 = lshr i32 %8586, 4
  %8588 = trunc i32 %8587 to i8
  %8589 = and i8 %8588, 1
  %8590 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8589, i8* %8590, align 1, !tbaa !2450
  %8591 = icmp eq i32 %8575, 0
  %8592 = zext i1 %8591 to i8
  %8593 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8592, i8* %8593, align 1, !tbaa !2447
  %8594 = lshr i32 %8575, 31
  %8595 = trunc i32 %8594 to i8
  %8596 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8595, i8* %8596, align 1, !tbaa !2448
  %8597 = lshr i32 %8567, 31
  %8598 = lshr i32 %8574, 31
  %8599 = xor i32 %8598, %8597
  %8600 = xor i32 %8594, %8597
  %8601 = add nuw nsw i32 %8600, %8599
  %8602 = icmp eq i32 %8601, 2
  %8603 = zext i1 %8602 to i8
  %8604 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8603, i8* %8604, align 1, !tbaa !2449
  %8605 = load i64, i64* %PC
  %8606 = add i64 %8605, 59
  %8607 = load i64, i64* %PC
  %8608 = add i64 %8607, 6
  %8609 = load i64, i64* %PC
  %8610 = add i64 %8609, 6
  store i64 %8610, i64* %PC
  %8611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8612 = load i8, i8* %8611, align 1, !tbaa !2447
  %8613 = icmp eq i8 %8612, 0
  %8614 = zext i1 %8613 to i8
  store i8 %8614, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %8615 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8616 = select i1 %8613, i64 %8606, i64 %8608
  store i64 %8616, i64* %8615, align 8, !tbaa !2428
  %8617 = load i8, i8* %BRANCH_TAKEN
  %8618 = icmp eq i8 %8617, 1
  br i1 %8618, label %block_400ce1, label %block_400cac

block_400857:                                     ; preds = %block_400848
  %8619 = add i64 %8559, 10
  store i64 %8619, i64* %PC
  store i64 add (i64 ptrtoint (%seg_4018b0__rodata_type* @seg_4018b0__rodata to i64), i64 72), i64* %RSI, align 8, !tbaa !2428
  %8620 = load i64, i64* %PC
  %8621 = add i64 %8620, 5
  store i64 %8621, i64* %PC
  store i64 2, i64* %RAX, align 8, !tbaa !2428
  %8622 = load i32, i32* %EAX
  %8623 = zext i32 %8622 to i64
  %8624 = load i64, i64* %PC
  %8625 = add i64 %8624, 2
  store i64 %8625, i64* %PC
  %8626 = and i64 %8623, 4294967295
  store i64 %8626, i64* %RDX, align 8, !tbaa !2428
  %8627 = load i64, i64* %RBP
  %8628 = sub i64 %8627, 16
  %8629 = load i64, i64* %PC
  %8630 = add i64 %8629, 4
  store i64 %8630, i64* %PC
  %8631 = inttoptr i64 %8628 to i64*
  %8632 = load i64, i64* %8631
  store i64 %8632, i64* %RCX, align 8, !tbaa !2428
  %8633 = load i64, i64* %RBP
  %8634 = sub i64 %8633, 172
  %8635 = load i64, i64* %PC
  %8636 = add i64 %8635, 7
  store i64 %8636, i64* %PC
  %8637 = inttoptr i64 %8634 to i32*
  %8638 = load i32, i32* %8637
  %8639 = sext i32 %8638 to i64
  store i64 %8639, i64* %RDI, align 8, !tbaa !2428
  %8640 = load i64, i64* %RCX
  %8641 = load i64, i64* %RDI
  %8642 = mul i64 %8641, 8
  %8643 = add i64 %8642, %8640
  %8644 = load i64, i64* %PC
  %8645 = add i64 %8644, 4
  store i64 %8645, i64* %PC
  %8646 = inttoptr i64 %8643 to i64*
  %8647 = load i64, i64* %8646
  store i64 %8647, i64* %RDI, align 8, !tbaa !2428
  %8648 = load i64, i64* %PC
  %8649 = sub i64 %8648, 519
  %8650 = load i64, i64* %PC
  %8651 = add i64 %8650, 5
  %8652 = load i64, i64* %PC
  %8653 = add i64 %8652, 5
  store i64 %8653, i64* %PC
  %8654 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %8655 = load i64, i64* %8654, align 8, !tbaa !2428
  %8656 = add i64 %8655, -8
  %8657 = inttoptr i64 %8656 to i64*
  store i64 %8651, i64* %8657
  store i64 %8656, i64* %8654, align 8, !tbaa !2428
  %8658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8649, i64* %8658, align 8, !tbaa !2428
  %8659 = load i64, i64* %PC
  %8660 = call %struct.Memory* @ext_6020e8_strncmp(%struct.State* %0, i64 %8659, %struct.Memory* %MEMORY.18)
  %8661 = load i32, i32* %EAX
  %8662 = zext i32 %8661 to i64
  %8663 = load i64, i64* %PC
  %8664 = add i64 %8663, 3
  store i64 %8664, i64* %PC
  %8665 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8665, align 1, !tbaa !2432
  %8666 = and i32 %8661, 255
  %8667 = call i32 @llvm.ctpop.i32(i32 %8666) #17
  %8668 = trunc i32 %8667 to i8
  %8669 = and i8 %8668, 1
  %8670 = xor i8 %8669, 1
  %8671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8670, i8* %8671, align 1, !tbaa !2446
  %8672 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8672, align 1, !tbaa !2450
  %8673 = icmp eq i32 %8661, 0
  %8674 = zext i1 %8673 to i8
  %8675 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8674, i8* %8675, align 1, !tbaa !2447
  %8676 = lshr i32 %8661, 31
  %8677 = trunc i32 %8676 to i8
  %8678 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8677, i8* %8678, align 1, !tbaa !2448
  %8679 = lshr i32 %8661, 31
  %8680 = xor i32 %8676, %8679
  %8681 = add nuw nsw i32 %8680, %8679
  %8682 = icmp eq i32 %8681, 2
  %8683 = zext i1 %8682 to i8
  %8684 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8683, i8* %8684, align 1, !tbaa !2449
  %8685 = load i64, i64* %PC
  %8686 = add i64 %8685, 33
  %8687 = load i64, i64* %PC
  %8688 = add i64 %8687, 6
  %8689 = load i64, i64* %PC
  %8690 = add i64 %8689, 6
  store i64 %8690, i64* %PC
  %8691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8692 = load i8, i8* %8691, align 1, !tbaa !2447
  store i8 %8692, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %8693 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8694 = icmp ne i8 %8692, 0
  %8695 = select i1 %8694, i64 %8686, i64 %8688
  store i64 %8695, i64* %8693, align 8, !tbaa !2428
  %8696 = load i8, i8* %BRANCH_TAKEN
  %8697 = icmp eq i8 %8696, 1
  br i1 %8697, label %block_4008a0, label %block_400885

block_400b9a:                                     ; preds = %block_400b8c
  %8698 = load i64, i64* %PC
  %8699 = add i64 %8698, 10
  store i64 %8699, i64* %PC
  store i64 -9223372036854775808, i64* %RAX, align 8, !tbaa !2428
  %8700 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %8701 = load i64, i64* %PC
  %8702 = add i64 %8701, 9
  store i64 %8702, i64* %PC
  %8703 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 8) to double*)
  %8704 = bitcast i8* %8700 to double*
  store double %8703, double* %8704, align 1, !tbaa !2451
  %8705 = getelementptr inbounds i8, i8* %8700, i64 8
  %8706 = bitcast i8* %8705 to double*
  store double 0.000000e+00, double* %8706, align 1, !tbaa !2451
  %8707 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %8708 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %8709 = load i64, i64* %PC
  %8710 = add i64 %8709, 9
  store i64 %8710, i64* %PC
  %8711 = bitcast i8* %8708 to double*
  %8712 = load double, double* %8711, align 1
  %8713 = getelementptr inbounds i8, i8* %8708, i64 8
  %8714 = bitcast i8* %8713 to i64*
  %8715 = load i64, i64* %8714, align 1
  %8716 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 16) to double*)
  %8717 = fadd double %8712, %8716
  %8718 = bitcast i8* %8707 to double*
  store double %8717, double* %8718, align 1, !tbaa !2451
  %8719 = getelementptr inbounds i8, i8* %8707, i64 8
  %8720 = bitcast i8* %8719 to i64*
  store i64 %8715, i64* %8720, align 1, !tbaa !2451
  %8721 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %8722 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %8723 = load i64, i64* %PC
  %8724 = add i64 %8723, 9
  store i64 %8724, i64* %PC
  %8725 = bitcast i8* %8722 to double*
  %8726 = load double, double* %8725, align 1
  %8727 = getelementptr inbounds i8, i8* %8722, i64 8
  %8728 = bitcast i8* %8727 to i64*
  %8729 = load i64, i64* %8728, align 1
  %8730 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 24) to double*)
  %8731 = fadd double %8726, %8730
  %8732 = bitcast i8* %8721 to double*
  store double %8731, double* %8732, align 1, !tbaa !2451
  %8733 = getelementptr inbounds i8, i8* %8721, i64 8
  %8734 = bitcast i8* %8733 to i64*
  store i64 %8729, i64* %8734, align 1, !tbaa !2451
  %8735 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %8736 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %8737 = load i64, i64* %PC
  %8738 = add i64 %8737, 9
  store i64 %8738, i64* %PC
  %8739 = bitcast i8* %8736 to double*
  %8740 = load double, double* %8739, align 1
  %8741 = getelementptr inbounds i8, i8* %8736, i64 8
  %8742 = bitcast i8* %8741 to i64*
  %8743 = load i64, i64* %8742, align 1
  %8744 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 32) to double*)
  %8745 = fsub double %8740, %8744
  %8746 = bitcast i8* %8735 to double*
  store double %8745, double* %8746, align 1, !tbaa !2451
  %8747 = getelementptr inbounds i8, i8* %8735, i64 8
  %8748 = bitcast i8* %8747 to i64*
  store i64 %8743, i64* %8748, align 1, !tbaa !2451
  %8749 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %8750 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %8751 = load i64, i64* %PC
  %8752 = add i64 %8751, 9
  store i64 %8752, i64* %PC
  %8753 = bitcast i8* %8750 to double*
  %8754 = load double, double* %8753, align 1
  %8755 = getelementptr inbounds i8, i8* %8750, i64 8
  %8756 = bitcast i8* %8755 to i64*
  %8757 = load i64, i64* %8756, align 1
  %8758 = load double, double* bitcast (%T_type* @T to double*)
  %8759 = fmul double %8754, %8758
  %8760 = bitcast i8* %8749 to double*
  store double %8759, double* %8760, align 1, !tbaa !2451
  %8761 = getelementptr inbounds i8, i8* %8749, i64 8
  %8762 = bitcast i8* %8761 to i64*
  store i64 %8757, i64* %8762, align 1, !tbaa !2451
  %8763 = bitcast %union.vec128_t* %XMM0 to i8*
  %8764 = load i64, i64* %PC
  %8765 = add i64 %8764, 9
  store i64 %8765, i64* %PC
  %8766 = bitcast i8* %8763 to double*
  %8767 = load double, double* %8766, align 1
  store double %8767, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 8) to double*)
  %8768 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %8769 = load i64, i64* %PC
  %8770 = add i64 %8769, 9
  store i64 %8770, i64* %PC
  %8771 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 8) to double*)
  %8772 = bitcast i8* %8768 to double*
  store double %8771, double* %8772, align 1, !tbaa !2451
  %8773 = getelementptr inbounds i8, i8* %8768, i64 8
  %8774 = bitcast i8* %8773 to double*
  store double 0.000000e+00, double* %8774, align 1, !tbaa !2451
  %8775 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %8776 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %8777 = load i64, i64* %PC
  %8778 = add i64 %8777, 9
  store i64 %8778, i64* %PC
  %8779 = bitcast i8* %8776 to double*
  %8780 = load double, double* %8779, align 1
  %8781 = getelementptr inbounds i8, i8* %8776, i64 8
  %8782 = bitcast i8* %8781 to i64*
  %8783 = load i64, i64* %8782, align 1
  %8784 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 16) to double*)
  %8785 = fadd double %8780, %8784
  %8786 = bitcast i8* %8775 to double*
  store double %8785, double* %8786, align 1, !tbaa !2451
  %8787 = getelementptr inbounds i8, i8* %8775, i64 8
  %8788 = bitcast i8* %8787 to i64*
  store i64 %8783, i64* %8788, align 1, !tbaa !2451
  %8789 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %8790 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %8791 = load i64, i64* %PC
  %8792 = add i64 %8791, 9
  store i64 %8792, i64* %PC
  %8793 = bitcast i8* %8790 to double*
  %8794 = load double, double* %8793, align 1
  %8795 = getelementptr inbounds i8, i8* %8790, i64 8
  %8796 = bitcast i8* %8795 to i64*
  %8797 = load i64, i64* %8796, align 1
  %8798 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 24) to double*)
  %8799 = fsub double %8794, %8798
  %8800 = bitcast i8* %8789 to double*
  store double %8799, double* %8800, align 1, !tbaa !2451
  %8801 = getelementptr inbounds i8, i8* %8789, i64 8
  %8802 = bitcast i8* %8801 to i64*
  store i64 %8797, i64* %8802, align 1, !tbaa !2451
  %8803 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %8804 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %8805 = load i64, i64* %PC
  %8806 = add i64 %8805, 9
  store i64 %8806, i64* %PC
  %8807 = bitcast i8* %8804 to double*
  %8808 = load double, double* %8807, align 1
  %8809 = getelementptr inbounds i8, i8* %8804, i64 8
  %8810 = bitcast i8* %8809 to i64*
  %8811 = load i64, i64* %8810, align 1
  %8812 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 32) to double*)
  %8813 = fadd double %8808, %8812
  %8814 = bitcast i8* %8803 to double*
  store double %8813, double* %8814, align 1, !tbaa !2451
  %8815 = getelementptr inbounds i8, i8* %8803, i64 8
  %8816 = bitcast i8* %8815 to i64*
  store i64 %8811, i64* %8816, align 1, !tbaa !2451
  %8817 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %8818 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %8819 = load i64, i64* %PC
  %8820 = add i64 %8819, 9
  store i64 %8820, i64* %PC
  %8821 = bitcast i8* %8818 to double*
  %8822 = load double, double* %8821, align 1
  %8823 = getelementptr inbounds i8, i8* %8818, i64 8
  %8824 = bitcast i8* %8823 to i64*
  %8825 = load i64, i64* %8824, align 1
  %8826 = load double, double* bitcast (%T_type* @T to double*)
  %8827 = fmul double %8822, %8826
  %8828 = bitcast i8* %8817 to double*
  store double %8827, double* %8828, align 1, !tbaa !2451
  %8829 = getelementptr inbounds i8, i8* %8817, i64 8
  %8830 = bitcast i8* %8829 to i64*
  store i64 %8825, i64* %8830, align 1, !tbaa !2451
  %8831 = bitcast %union.vec128_t* %XMM0 to i8*
  %8832 = load i64, i64* %PC
  %8833 = add i64 %8832, 9
  store i64 %8833, i64* %PC
  %8834 = bitcast i8* %8831 to double*
  %8835 = load double, double* %8834, align 1
  store double %8835, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 16) to double*)
  %8836 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %8837 = load i64, i64* %PC
  %8838 = add i64 %8837, 9
  store i64 %8838, i64* %PC
  %8839 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 8) to double*)
  %8840 = bitcast i8* %8836 to double*
  store double %8839, double* %8840, align 1, !tbaa !2451
  %8841 = getelementptr inbounds i8, i8* %8836, i64 8
  %8842 = bitcast i8* %8841 to double*
  store double 0.000000e+00, double* %8842, align 1, !tbaa !2451
  %8843 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %8844 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %8845 = load i64, i64* %PC
  %8846 = add i64 %8845, 9
  store i64 %8846, i64* %PC
  %8847 = bitcast i8* %8844 to double*
  %8848 = load double, double* %8847, align 1
  %8849 = getelementptr inbounds i8, i8* %8844, i64 8
  %8850 = bitcast i8* %8849 to i64*
  %8851 = load i64, i64* %8850, align 1
  %8852 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 16) to double*)
  %8853 = fsub double %8848, %8852
  %8854 = bitcast i8* %8843 to double*
  store double %8853, double* %8854, align 1, !tbaa !2451
  %8855 = getelementptr inbounds i8, i8* %8843, i64 8
  %8856 = bitcast i8* %8855 to i64*
  store i64 %8851, i64* %8856, align 1, !tbaa !2451
  %8857 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %8858 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %8859 = load i64, i64* %PC
  %8860 = add i64 %8859, 9
  store i64 %8860, i64* %PC
  %8861 = bitcast i8* %8858 to double*
  %8862 = load double, double* %8861, align 1
  %8863 = getelementptr inbounds i8, i8* %8858, i64 8
  %8864 = bitcast i8* %8863 to i64*
  %8865 = load i64, i64* %8864, align 1
  %8866 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 24) to double*)
  %8867 = fadd double %8862, %8866
  %8868 = bitcast i8* %8857 to double*
  store double %8867, double* %8868, align 1, !tbaa !2451
  %8869 = getelementptr inbounds i8, i8* %8857, i64 8
  %8870 = bitcast i8* %8869 to i64*
  store i64 %8865, i64* %8870, align 1, !tbaa !2451
  %8871 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %8872 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %8873 = load i64, i64* %PC
  %8874 = add i64 %8873, 9
  store i64 %8874, i64* %PC
  %8875 = bitcast i8* %8872 to double*
  %8876 = load double, double* %8875, align 1
  %8877 = getelementptr inbounds i8, i8* %8872, i64 8
  %8878 = bitcast i8* %8877 to i64*
  %8879 = load i64, i64* %8878, align 1
  %8880 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 32) to double*)
  %8881 = fadd double %8876, %8880
  %8882 = bitcast i8* %8871 to double*
  store double %8881, double* %8882, align 1, !tbaa !2451
  %8883 = getelementptr inbounds i8, i8* %8871, i64 8
  %8884 = bitcast i8* %8883 to i64*
  store i64 %8879, i64* %8884, align 1, !tbaa !2451
  %8885 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %8886 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %8887 = load i64, i64* %PC
  %8888 = add i64 %8887, 9
  store i64 %8888, i64* %PC
  %8889 = bitcast i8* %8886 to double*
  %8890 = load double, double* %8889, align 1
  %8891 = getelementptr inbounds i8, i8* %8886, i64 8
  %8892 = bitcast i8* %8891 to i64*
  %8893 = load i64, i64* %8892, align 1
  %8894 = load double, double* bitcast (%T_type* @T to double*)
  %8895 = fmul double %8890, %8894
  %8896 = bitcast i8* %8885 to double*
  store double %8895, double* %8896, align 1, !tbaa !2451
  %8897 = getelementptr inbounds i8, i8* %8885, i64 8
  %8898 = bitcast i8* %8897 to i64*
  store i64 %8893, i64* %8898, align 1, !tbaa !2451
  %8899 = bitcast %union.vec128_t* %XMM0 to i8*
  %8900 = load i64, i64* %PC
  %8901 = add i64 %8900, 9
  store i64 %8901, i64* %PC
  %8902 = bitcast i8* %8899 to double*
  %8903 = load double, double* %8902, align 1
  store double %8903, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 24) to double*)
  %8904 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %8905 = load i64, i64* %PC
  %8906 = add i64 %8905, 9
  store i64 %8906, i64* %PC
  %8907 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 8) to double*)
  %8908 = bitcast i8* %8904 to double*
  store double %8907, double* %8908, align 1, !tbaa !2451
  %8909 = getelementptr inbounds i8, i8* %8904, i64 8
  %8910 = bitcast i8* %8909 to double*
  store double 0.000000e+00, double* %8910, align 1, !tbaa !2451
  %8911 = bitcast %union.vec128_t* %XMM0 to i8*
  %8912 = load i64, i64* %PC
  %8913 = add i64 %8912, 5
  store i64 %8913, i64* %PC
  %8914 = bitcast i8* %8911 to i64*
  %8915 = load i64, i64* %8914, align 1
  store i64 %8915, i64* %RCX, align 1, !tbaa !2428
  %8916 = load i64, i64* %RCX
  %8917 = load i64, i64* %RAX
  %8918 = load i64, i64* %PC
  %8919 = add i64 %8918, 3
  store i64 %8919, i64* %PC
  %8920 = xor i64 %8917, %8916
  store i64 %8920, i64* %RCX, align 8, !tbaa !2428
  %8921 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8921, align 1, !tbaa !2432
  %8922 = trunc i64 %8920 to i32
  %8923 = and i32 %8922, 255
  %8924 = call i32 @llvm.ctpop.i32(i32 %8923) #17
  %8925 = trunc i32 %8924 to i8
  %8926 = and i8 %8925, 1
  %8927 = xor i8 %8926, 1
  %8928 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8927, i8* %8928, align 1, !tbaa !2446
  %8929 = icmp eq i64 %8920, 0
  %8930 = zext i1 %8929 to i8
  %8931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8930, i8* %8931, align 1, !tbaa !2447
  %8932 = lshr i64 %8920, 63
  %8933 = trunc i64 %8932 to i8
  %8934 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8933, i8* %8934, align 1, !tbaa !2448
  %8935 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8935, align 1, !tbaa !2449
  %8936 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8936, align 1, !tbaa !2450
  %8937 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %8938 = load i64, i64* %RCX
  %8939 = load i64, i64* %PC
  %8940 = add i64 %8939, 5
  store i64 %8940, i64* %PC
  %8941 = bitcast i8* %8937 to i64*
  store i64 %8938, i64* %8941, align 1, !tbaa !2428
  %8942 = getelementptr inbounds i8, i8* %8937, i64 8
  %8943 = bitcast i8* %8942 to i64*
  store i64 0, i64* %8943, align 1, !tbaa !2428
  %8944 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %8945 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %8946 = load i64, i64* %PC
  %8947 = add i64 %8946, 9
  store i64 %8947, i64* %PC
  %8948 = bitcast i8* %8945 to double*
  %8949 = load double, double* %8948, align 1
  %8950 = getelementptr inbounds i8, i8* %8945, i64 8
  %8951 = bitcast i8* %8950 to i64*
  %8952 = load i64, i64* %8951, align 1
  %8953 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 16) to double*)
  %8954 = fadd double %8949, %8953
  %8955 = bitcast i8* %8944 to double*
  store double %8954, double* %8955, align 1, !tbaa !2451
  %8956 = getelementptr inbounds i8, i8* %8944, i64 8
  %8957 = bitcast i8* %8956 to i64*
  store i64 %8952, i64* %8957, align 1, !tbaa !2451
  %8958 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %8959 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %8960 = load i64, i64* %PC
  %8961 = add i64 %8960, 9
  store i64 %8961, i64* %PC
  %8962 = bitcast i8* %8959 to double*
  %8963 = load double, double* %8962, align 1
  %8964 = getelementptr inbounds i8, i8* %8959, i64 8
  %8965 = bitcast i8* %8964 to i64*
  %8966 = load i64, i64* %8965, align 1
  %8967 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 24) to double*)
  %8968 = fadd double %8963, %8967
  %8969 = bitcast i8* %8958 to double*
  store double %8968, double* %8969, align 1, !tbaa !2451
  %8970 = getelementptr inbounds i8, i8* %8958, i64 8
  %8971 = bitcast i8* %8970 to i64*
  store i64 %8966, i64* %8971, align 1, !tbaa !2451
  %8972 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %8973 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %8974 = load i64, i64* %PC
  %8975 = add i64 %8974, 9
  store i64 %8975, i64* %PC
  %8976 = bitcast i8* %8973 to double*
  %8977 = load double, double* %8976, align 1
  %8978 = getelementptr inbounds i8, i8* %8973, i64 8
  %8979 = bitcast i8* %8978 to i64*
  %8980 = load i64, i64* %8979, align 1
  %8981 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 32) to double*)
  %8982 = fadd double %8977, %8981
  %8983 = bitcast i8* %8972 to double*
  store double %8982, double* %8983, align 1, !tbaa !2451
  %8984 = getelementptr inbounds i8, i8* %8972, i64 8
  %8985 = bitcast i8* %8984 to i64*
  store i64 %8980, i64* %8985, align 1, !tbaa !2451
  %8986 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %8987 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %8988 = load i64, i64* %PC
  %8989 = add i64 %8988, 9
  store i64 %8989, i64* %PC
  %8990 = bitcast i8* %8987 to double*
  %8991 = load double, double* %8990, align 1
  %8992 = getelementptr inbounds i8, i8* %8987, i64 8
  %8993 = bitcast i8* %8992 to i64*
  %8994 = load i64, i64* %8993, align 1
  %8995 = load double, double* bitcast (%T_type* @T to double*)
  %8996 = fmul double %8991, %8995
  %8997 = bitcast i8* %8986 to double*
  store double %8996, double* %8997, align 1, !tbaa !2451
  %8998 = getelementptr inbounds i8, i8* %8986, i64 8
  %8999 = bitcast i8* %8998 to i64*
  store i64 %8994, i64* %8999, align 1, !tbaa !2451
  %9000 = bitcast %union.vec128_t* %XMM0 to i8*
  %9001 = load i64, i64* %PC
  %9002 = add i64 %9001, 9
  store i64 %9002, i64* %PC
  %9003 = bitcast i8* %9000 to double*
  %9004 = load double, double* %9003, align 1
  store double %9004, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 32) to double*)
  %9005 = load i64, i64* %RBP
  %9006 = sub i64 %9005, 24
  %9007 = load i64, i64* %PC
  %9008 = add i64 %9007, 4
  store i64 %9008, i64* %PC
  %9009 = inttoptr i64 %9006 to i64*
  %9010 = load i64, i64* %9009
  store i64 %9010, i64* %RAX, align 8, !tbaa !2428
  %9011 = load i64, i64* %RAX
  %9012 = load i64, i64* %PC
  %9013 = add i64 %9012, 4
  store i64 %9013, i64* %PC
  %9014 = add i64 1, %9011
  store i64 %9014, i64* %RAX, align 8, !tbaa !2428
  %9015 = icmp ult i64 %9014, %9011
  %9016 = icmp ult i64 %9014, 1
  %9017 = or i1 %9015, %9016
  %9018 = zext i1 %9017 to i8
  %9019 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9018, i8* %9019, align 1, !tbaa !2432
  %9020 = trunc i64 %9014 to i32
  %9021 = and i32 %9020, 255
  %9022 = call i32 @llvm.ctpop.i32(i32 %9021) #17
  %9023 = trunc i32 %9022 to i8
  %9024 = and i8 %9023, 1
  %9025 = xor i8 %9024, 1
  %9026 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9025, i8* %9026, align 1, !tbaa !2446
  %9027 = xor i64 1, %9011
  %9028 = xor i64 %9027, %9014
  %9029 = lshr i64 %9028, 4
  %9030 = trunc i64 %9029 to i8
  %9031 = and i8 %9030, 1
  %9032 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9031, i8* %9032, align 1, !tbaa !2450
  %9033 = icmp eq i64 %9014, 0
  %9034 = zext i1 %9033 to i8
  %9035 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9034, i8* %9035, align 1, !tbaa !2447
  %9036 = lshr i64 %9014, 63
  %9037 = trunc i64 %9036 to i8
  %9038 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9037, i8* %9038, align 1, !tbaa !2448
  %9039 = lshr i64 %9011, 63
  %9040 = xor i64 %9036, %9039
  %9041 = add nuw nsw i64 %9040, %9036
  %9042 = icmp eq i64 %9041, 2
  %9043 = zext i1 %9042 to i8
  %9044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9043, i8* %9044, align 1, !tbaa !2449
  %9045 = load i64, i64* %RBP
  %9046 = sub i64 %9045, 24
  %9047 = load i64, i64* %RAX
  %9048 = load i64, i64* %PC
  %9049 = add i64 %9048, 4
  store i64 %9049, i64* %PC
  %9050 = inttoptr i64 %9046 to i64*
  store i64 %9047, i64* %9050
  %9051 = load i64, i64* %PC
  %9052 = sub i64 %9051, 265
  %9053 = load i64, i64* %PC
  %9054 = add i64 %9053, 5
  store i64 %9054, i64* %PC
  %9055 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9052, i64* %9055, align 8, !tbaa !2428
  br label %block_400b8c

block_401347:                                     ; preds = %block_401339
  %9056 = load i64, i64* %PC
  %9057 = add i64 %9056, 1145
  %9058 = load i64, i64* %PC
  %9059 = add i64 %9058, 5
  %9060 = load i64, i64* %PC
  %9061 = add i64 %9060, 5
  store i64 %9061, i64* %PC
  %9062 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9063 = load i64, i64* %9062, align 8, !tbaa !2428
  %9064 = add i64 %9063, -8
  %9065 = inttoptr i64 %9064 to i64*
  store i64 %9059, i64* %9065
  store i64 %9064, i64* %9062, align 8, !tbaa !2428
  %9066 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9057, i64* %9066, align 8, !tbaa !2428
  %9067 = load i64, i64* %PC
  %9068 = call %struct.Memory* @sub_4017c0_P0_renamed_(%struct.State* %0, i64 %9067, %struct.Memory* %MEMORY.6)
  %9069 = load i64, i64* %RBP
  %9070 = sub i64 %9069, 24
  %9071 = load i64, i64* %PC
  %9072 = add i64 %9071, 4
  store i64 %9072, i64* %PC
  %9073 = inttoptr i64 %9070 to i64*
  %9074 = load i64, i64* %9073
  store i64 %9074, i64* %RAX, align 8, !tbaa !2428
  %9075 = load i64, i64* %RAX
  %9076 = load i64, i64* %PC
  %9077 = add i64 %9076, 4
  store i64 %9077, i64* %PC
  %9078 = add i64 1, %9075
  store i64 %9078, i64* %RAX, align 8, !tbaa !2428
  %9079 = icmp ult i64 %9078, %9075
  %9080 = icmp ult i64 %9078, 1
  %9081 = or i1 %9079, %9080
  %9082 = zext i1 %9081 to i8
  %9083 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9082, i8* %9083, align 1, !tbaa !2432
  %9084 = trunc i64 %9078 to i32
  %9085 = and i32 %9084, 255
  %9086 = call i32 @llvm.ctpop.i32(i32 %9085) #17
  %9087 = trunc i32 %9086 to i8
  %9088 = and i8 %9087, 1
  %9089 = xor i8 %9088, 1
  %9090 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9089, i8* %9090, align 1, !tbaa !2446
  %9091 = xor i64 1, %9075
  %9092 = xor i64 %9091, %9078
  %9093 = lshr i64 %9092, 4
  %9094 = trunc i64 %9093 to i8
  %9095 = and i8 %9094, 1
  %9096 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9095, i8* %9096, align 1, !tbaa !2450
  %9097 = icmp eq i64 %9078, 0
  %9098 = zext i1 %9097 to i8
  %9099 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9098, i8* %9099, align 1, !tbaa !2447
  %9100 = lshr i64 %9078, 63
  %9101 = trunc i64 %9100 to i8
  %9102 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9101, i8* %9102, align 1, !tbaa !2448
  %9103 = lshr i64 %9075, 63
  %9104 = xor i64 %9100, %9103
  %9105 = add nuw nsw i64 %9104, %9100
  %9106 = icmp eq i64 %9105, 2
  %9107 = zext i1 %9106 to i8
  %9108 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9107, i8* %9108, align 1, !tbaa !2449
  %9109 = load i64, i64* %RBP
  %9110 = sub i64 %9109, 24
  %9111 = load i64, i64* %RAX
  %9112 = load i64, i64* %PC
  %9113 = add i64 %9112, 4
  store i64 %9113, i64* %PC
  %9114 = inttoptr i64 %9110 to i64*
  store i64 %9111, i64* %9114
  %9115 = load i64, i64* %PC
  %9116 = sub i64 %9115, 31
  %9117 = load i64, i64* %PC
  %9118 = add i64 %9117, 5
  store i64 %9118, i64* %PC
  %9119 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9116, i64* %9119, align 8, !tbaa !2428
  br label %block_401339

block_401292:                                     ; preds = %block_401257
  %9120 = sub i64 %9635, 176
  %9121 = load i64, i64* %PC
  %9122 = add i64 %9121, 6
  store i64 %9122, i64* %PC
  %9123 = inttoptr i64 %9120 to i32*
  %9124 = load i32, i32* %9123
  %9125 = zext i32 %9124 to i64
  store i64 %9125, i64* %RAX, align 8, !tbaa !2428
  %9126 = load i32, i32* %EAX
  %9127 = zext i32 %9126 to i64
  %9128 = load i64, i64* %RBP
  %9129 = sub i64 %9128, 172
  %9130 = load i64, i64* %PC
  %9131 = add i64 %9130, 6
  store i64 %9131, i64* %PC
  %9132 = inttoptr i64 %9129 to i32*
  %9133 = load i32, i32* %9132
  %9134 = sub i32 %9126, %9133
  %9135 = icmp ult i32 %9126, %9133
  %9136 = zext i1 %9135 to i8
  %9137 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9136, i8* %9137, align 1, !tbaa !2432
  %9138 = and i32 %9134, 255
  %9139 = call i32 @llvm.ctpop.i32(i32 %9138) #17
  %9140 = trunc i32 %9139 to i8
  %9141 = and i8 %9140, 1
  %9142 = xor i8 %9141, 1
  %9143 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9142, i8* %9143, align 1, !tbaa !2446
  %9144 = xor i32 %9133, %9126
  %9145 = xor i32 %9144, %9134
  %9146 = lshr i32 %9145, 4
  %9147 = trunc i32 %9146 to i8
  %9148 = and i8 %9147, 1
  %9149 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9148, i8* %9149, align 1, !tbaa !2450
  %9150 = icmp eq i32 %9134, 0
  %9151 = zext i1 %9150 to i8
  %9152 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9151, i8* %9152, align 1, !tbaa !2447
  %9153 = lshr i32 %9134, 31
  %9154 = trunc i32 %9153 to i8
  %9155 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9154, i8* %9155, align 1, !tbaa !2448
  %9156 = lshr i32 %9126, 31
  %9157 = lshr i32 %9133, 31
  %9158 = xor i32 %9157, %9156
  %9159 = xor i32 %9153, %9156
  %9160 = add nuw nsw i32 %9159, %9158
  %9161 = icmp eq i32 %9160, 2
  %9162 = zext i1 %9161 to i8
  %9163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9162, i8* %9163, align 1, !tbaa !2449
  %9164 = load i64, i64* %PC
  %9165 = add i64 %9164, 63
  %9166 = load i64, i64* %PC
  %9167 = add i64 %9166, 6
  %9168 = load i64, i64* %PC
  %9169 = add i64 %9168, 6
  store i64 %9169, i64* %PC
  %9170 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9171 = load i8, i8* %9170, align 1, !tbaa !2447
  %9172 = icmp eq i8 %9171, 0
  %9173 = zext i1 %9172 to i8
  store i8 %9173, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %9174 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9175 = select i1 %9172, i64 %9165, i64 %9167
  store i64 %9175, i64* %9174, align 8, !tbaa !2428
  %9176 = load i8, i8* %BRANCH_TAKEN
  %9177 = icmp eq i8 %9176, 1
  br i1 %9177, label %block_4012dd, label %block_4012a4

block_400e7b:                                     ; preds = %block_400e89, %block_400e52
  %MEMORY.19 = phi %struct.Memory* [ %MEMORY.13, %block_400e52 ], [ %MEMORY.19, %block_400e89 ]
  %9178 = load i64, i64* %RBP
  %9179 = sub i64 %9178, 24
  %9180 = load i64, i64* %PC
  %9181 = add i64 %9180, 4
  store i64 %9181, i64* %PC
  %9182 = inttoptr i64 %9179 to i64*
  %9183 = load i64, i64* %9182
  store i64 %9183, i64* %RAX, align 8, !tbaa !2428
  %9184 = load i64, i64* %RAX
  %9185 = load i64, i64* %RBP
  %9186 = sub i64 %9185, 64
  %9187 = load i64, i64* %PC
  %9188 = add i64 %9187, 4
  store i64 %9188, i64* %PC
  %9189 = inttoptr i64 %9186 to i64*
  %9190 = load i64, i64* %9189
  %9191 = sub i64 %9184, %9190
  %9192 = icmp ugt i64 %9190, %9184
  %9193 = zext i1 %9192 to i8
  %9194 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9193, i8* %9194, align 1, !tbaa !2432
  %9195 = trunc i64 %9191 to i32
  %9196 = and i32 %9195, 255
  %9197 = call i32 @llvm.ctpop.i32(i32 %9196) #17
  %9198 = trunc i32 %9197 to i8
  %9199 = and i8 %9198, 1
  %9200 = xor i8 %9199, 1
  %9201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9200, i8* %9201, align 1, !tbaa !2446
  %9202 = xor i64 %9190, %9184
  %9203 = xor i64 %9202, %9191
  %9204 = lshr i64 %9203, 4
  %9205 = trunc i64 %9204 to i8
  %9206 = and i8 %9205, 1
  %9207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9206, i8* %9207, align 1, !tbaa !2450
  %9208 = icmp eq i64 %9191, 0
  %9209 = zext i1 %9208 to i8
  %9210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9209, i8* %9210, align 1, !tbaa !2447
  %9211 = lshr i64 %9191, 63
  %9212 = trunc i64 %9211 to i8
  %9213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9212, i8* %9213, align 1, !tbaa !2448
  %9214 = lshr i64 %9184, 63
  %9215 = lshr i64 %9190, 63
  %9216 = xor i64 %9215, %9214
  %9217 = xor i64 %9211, %9214
  %9218 = add nuw nsw i64 %9217, %9216
  %9219 = icmp eq i64 %9218, 2
  %9220 = zext i1 %9219 to i8
  %9221 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9220, i8* %9221, align 1, !tbaa !2449
  %9222 = load i64, i64* %PC
  %9223 = add i64 %9222, 251
  %9224 = load i64, i64* %PC
  %9225 = add i64 %9224, 6
  %9226 = load i64, i64* %PC
  %9227 = add i64 %9226, 6
  store i64 %9227, i64* %PC
  %9228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9229 = load i8, i8* %9228, align 1, !tbaa !2447
  %9230 = icmp eq i8 %9229, 0
  %9231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9232 = load i8, i8* %9231, align 1, !tbaa !2448
  %9233 = icmp ne i8 %9232, 0
  %9234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %9235 = load i8, i8* %9234, align 1, !tbaa !2449
  %9236 = icmp ne i8 %9235, 0
  %9237 = xor i1 %9233, %9236
  %9238 = xor i1 %9237, true
  %9239 = and i1 %9230, %9238
  %9240 = zext i1 %9239 to i8
  store i8 %9240, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %9241 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9242 = select i1 %9239, i64 %9223, i64 %9225
  store i64 %9242, i64* %9241, align 8, !tbaa !2428
  %9243 = load i8, i8* %BRANCH_TAKEN
  %9244 = icmp eq i8 %9243, 1
  br i1 %9244, label %block_400f7e, label %block_400e89

block_40122f:                                     ; preds = %block_4011f6, %block_4011e4
  %MEMORY.20 = phi %struct.Memory* [ %MEMORY.25, %block_4011e4 ], [ %9761, %block_4011f6 ]
  %9245 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9246 = load i64, i64* %PC
  %9247 = add i64 %9246, 8
  store i64 %9247, i64* %PC
  %9248 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4018b0__rodata_type* @seg_4018b0__rodata to i64), i64 40) to double*)
  %9249 = bitcast i8* %9245 to double*
  store double %9248, double* %9249, align 1, !tbaa !2451
  %9250 = getelementptr inbounds i8, i8* %9245, i64 8
  %9251 = bitcast i8* %9250 to double*
  store double 0.000000e+00, double* %9251, align 1, !tbaa !2451
  %9252 = load i64, i64* %RBP
  %9253 = sub i64 %9252, 144
  %9254 = bitcast %union.vec128_t* %XMM0 to i8*
  %9255 = load i64, i64* %PC
  %9256 = add i64 %9255, 8
  store i64 %9256, i64* %PC
  %9257 = bitcast i8* %9254 to double*
  %9258 = load double, double* %9257, align 1
  %9259 = inttoptr i64 %9253 to double*
  store double %9258, double* %9259
  %9260 = load i64, i64* %RBP
  %9261 = sub i64 %9260, 152
  %9262 = bitcast %union.vec128_t* %XMM0 to i8*
  %9263 = load i64, i64* %PC
  %9264 = add i64 %9263, 8
  store i64 %9264, i64* %PC
  %9265 = bitcast i8* %9262 to double*
  %9266 = load double, double* %9265, align 1
  %9267 = inttoptr i64 %9261 to double*
  store double %9266, double* %9267
  %9268 = load i64, i64* %RBP
  %9269 = sub i64 %9268, 160
  %9270 = bitcast %union.vec128_t* %XMM0 to i8*
  %9271 = load i64, i64* %PC
  %9272 = add i64 %9271, 8
  store i64 %9272, i64* %PC
  %9273 = bitcast i8* %9270 to double*
  %9274 = load double, double* %9273, align 1
  %9275 = inttoptr i64 %9269 to double*
  store double %9274, double* %9275
  %9276 = load i64, i64* %RBP
  %9277 = sub i64 %9276, 24
  %9278 = load i64, i64* %PC
  %9279 = add i64 %9278, 8
  store i64 %9279, i64* %PC
  %9280 = inttoptr i64 %9277 to i64*
  store i64 1, i64* %9280
  br label %block_401257

block_400b16:                                     ; preds = %block_400a49
  %9281 = load i64, i64* %RBP
  %9282 = sub i64 %9281, 176
  %9283 = load i64, i64* %PC
  %9284 = add i64 %9283, 6
  store i64 %9284, i64* %PC
  %9285 = inttoptr i64 %9282 to i32*
  %9286 = load i32, i32* %9285
  %9287 = zext i32 %9286 to i64
  store i64 %9287, i64* %RAX, align 8, !tbaa !2428
  %9288 = load i32, i32* %EAX
  %9289 = zext i32 %9288 to i64
  %9290 = load i64, i64* %RBP
  %9291 = sub i64 %9290, 172
  %9292 = load i64, i64* %PC
  %9293 = add i64 %9292, 6
  store i64 %9293, i64* %PC
  %9294 = inttoptr i64 %9291 to i32*
  %9295 = load i32, i32* %9294
  %9296 = sub i32 %9288, %9295
  %9297 = icmp ult i32 %9288, %9295
  %9298 = zext i1 %9297 to i8
  %9299 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9298, i8* %9299, align 1, !tbaa !2432
  %9300 = and i32 %9296, 255
  %9301 = call i32 @llvm.ctpop.i32(i32 %9300) #17
  %9302 = trunc i32 %9301 to i8
  %9303 = and i8 %9302, 1
  %9304 = xor i8 %9303, 1
  %9305 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9304, i8* %9305, align 1, !tbaa !2446
  %9306 = xor i32 %9295, %9288
  %9307 = xor i32 %9306, %9296
  %9308 = lshr i32 %9307, 4
  %9309 = trunc i32 %9308 to i8
  %9310 = and i8 %9309, 1
  %9311 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9310, i8* %9311, align 1, !tbaa !2450
  %9312 = icmp eq i32 %9296, 0
  %9313 = zext i1 %9312 to i8
  %9314 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9313, i8* %9314, align 1, !tbaa !2447
  %9315 = lshr i32 %9296, 31
  %9316 = trunc i32 %9315 to i8
  %9317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9316, i8* %9317, align 1, !tbaa !2448
  %9318 = lshr i32 %9288, 31
  %9319 = lshr i32 %9295, 31
  %9320 = xor i32 %9319, %9318
  %9321 = xor i32 %9315, %9318
  %9322 = add nuw nsw i32 %9321, %9320
  %9323 = icmp eq i32 %9322, 2
  %9324 = zext i1 %9323 to i8
  %9325 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9324, i8* %9325, align 1, !tbaa !2449
  %9326 = load i64, i64* %PC
  %9327 = add i64 %9326, 46
  %9328 = load i64, i64* %PC
  %9329 = add i64 %9328, 6
  %9330 = load i64, i64* %PC
  %9331 = add i64 %9330, 6
  store i64 %9331, i64* %PC
  %9332 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9333 = load i8, i8* %9332, align 1, !tbaa !2447
  %9334 = icmp eq i8 %9333, 0
  %9335 = zext i1 %9334 to i8
  store i8 %9335, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %9336 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9337 = select i1 %9334, i64 %9327, i64 %9329
  store i64 %9337, i64* %9336, align 8, !tbaa !2428
  %9338 = load i8, i8* %BRANCH_TAKEN
  %9339 = icmp eq i8 %9338, 1
  br i1 %9339, label %block_400b50, label %block_400b28

block_4008ed:                                     ; preds = %block_4008af
  %9340 = load i64, i64* %PC
  %9341 = add i64 %9340, 10
  store i64 %9341, i64* %PC
  store i64 add (i64 ptrtoint (%seg_4018b0__rodata_type* @seg_4018b0__rodata to i64), i64 75), i64* %RSI, align 8, !tbaa !2428
  %9342 = load i64, i64* %PC
  %9343 = add i64 %9342, 8
  store i64 %9343, i64* %PC
  %9344 = load i64, i64* @stderr
  store i64 %9344, i64* %RDI, align 8, !tbaa !2428
  %9345 = load i64, i64* %PC
  %9346 = add i64 %9345, 2
  store i64 %9346, i64* %PC
  store i8 0, i8* %AL, align 1, !tbaa !2453
  %9347 = load i64, i64* %PC
  %9348 = sub i64 %9347, 561
  %9349 = load i64, i64* %PC
  %9350 = add i64 %9349, 5
  %9351 = load i64, i64* %PC
  %9352 = add i64 %9351, 5
  store i64 %9352, i64* %PC
  %9353 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9354 = load i64, i64* %9353, align 8, !tbaa !2428
  %9355 = add i64 %9354, -8
  %9356 = inttoptr i64 %9355 to i64*
  store i64 %9350, i64* %9356
  store i64 %9355, i64* %9353, align 8, !tbaa !2428
  %9357 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9348, i64* %9357, align 8, !tbaa !2428
  %9358 = load i64, i64* %PC
  %9359 = call %struct.Memory* @ext_4006d0_fprintf(%struct.State* %0, i64 %9358, %struct.Memory* %1673)
  %9360 = load i64, i64* %RBP
  %9361 = sub i64 %9360, 4
  %9362 = load i64, i64* %PC
  %9363 = add i64 %9362, 7
  store i64 %9363, i64* %PC
  %9364 = inttoptr i64 %9361 to i32*
  store i32 1, i32* %9364
  %9365 = load i64, i64* %RBP
  %9366 = sub i64 %9365, 212
  %9367 = load i32, i32* %EAX
  %9368 = zext i32 %9367 to i64
  %9369 = load i64, i64* %PC
  %9370 = add i64 %9369, 6
  store i64 %9370, i64* %PC
  %9371 = inttoptr i64 %9366 to i32*
  store i32 %9367, i32* %9371
  %9372 = load i64, i64* %PC
  %9373 = add i64 %9372, 3197
  %9374 = load i64, i64* %PC
  %9375 = add i64 %9374, 5
  store i64 %9375, i64* %PC
  %9376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9373, i64* %9376, align 8, !tbaa !2428
  br label %block_401590

block_400d8d:                                     ; preds = %block_400d7f
  store i32 2, i32* bitcast (%J_type* @J to i32*)
  %9377 = load i64, i64* %PC
  %9378 = add i64 %9377, 16
  %9379 = load i64, i64* %PC
  %9380 = add i64 %9379, 5
  store i64 %9380, i64* %PC
  %9381 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9378, i64* %9381, align 8, !tbaa !2428
  br label %block_400da8

block_400d17:                                     ; preds = %block_400ce9
  %9382 = load i64, i64* %RBP
  %9383 = sub i64 %9382, 176
  %9384 = load i64, i64* %PC
  %9385 = add i64 %9384, 6
  store i64 %9385, i64* %PC
  %9386 = inttoptr i64 %9383 to i32*
  %9387 = load i32, i32* %9386
  %9388 = zext i32 %9387 to i64
  store i64 %9388, i64* %RAX, align 8, !tbaa !2428
  %9389 = load i32, i32* %EAX
  %9390 = zext i32 %9389 to i64
  %9391 = load i64, i64* %RBP
  %9392 = sub i64 %9391, 172
  %9393 = load i64, i64* %PC
  %9394 = add i64 %9393, 6
  store i64 %9394, i64* %PC
  %9395 = inttoptr i64 %9392 to i32*
  %9396 = load i32, i32* %9395
  %9397 = sub i32 %9389, %9396
  %9398 = icmp ult i32 %9389, %9396
  %9399 = zext i1 %9398 to i8
  %9400 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9399, i8* %9400, align 1, !tbaa !2432
  %9401 = and i32 %9397, 255
  %9402 = call i32 @llvm.ctpop.i32(i32 %9401) #17
  %9403 = trunc i32 %9402 to i8
  %9404 = and i8 %9403, 1
  %9405 = xor i8 %9404, 1
  %9406 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9405, i8* %9406, align 1, !tbaa !2446
  %9407 = xor i32 %9396, %9389
  %9408 = xor i32 %9407, %9397
  %9409 = lshr i32 %9408, 4
  %9410 = trunc i32 %9409 to i8
  %9411 = and i8 %9410, 1
  %9412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9411, i8* %9412, align 1, !tbaa !2450
  %9413 = icmp eq i32 %9397, 0
  %9414 = zext i1 %9413 to i8
  %9415 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9414, i8* %9415, align 1, !tbaa !2447
  %9416 = lshr i32 %9397, 31
  %9417 = trunc i32 %9416 to i8
  %9418 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9417, i8* %9418, align 1, !tbaa !2448
  %9419 = lshr i32 %9389, 31
  %9420 = lshr i32 %9396, 31
  %9421 = xor i32 %9420, %9419
  %9422 = xor i32 %9416, %9419
  %9423 = add nuw nsw i32 %9422, %9421
  %9424 = icmp eq i32 %9423, 2
  %9425 = zext i1 %9424 to i8
  %9426 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9425, i8* %9426, align 1, !tbaa !2449
  %9427 = load i64, i64* %PC
  %9428 = add i64 %9427, 59
  %9429 = load i64, i64* %PC
  %9430 = add i64 %9429, 6
  %9431 = load i64, i64* %PC
  %9432 = add i64 %9431, 6
  store i64 %9432, i64* %PC
  %9433 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9434 = load i8, i8* %9433, align 1, !tbaa !2447
  %9435 = icmp eq i8 %9434, 0
  %9436 = zext i1 %9435 to i8
  store i8 %9436, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %9437 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9438 = select i1 %9435, i64 %9428, i64 %9430
  store i64 %9438, i64* %9437, align 8, !tbaa !2428
  %9439 = load i8, i8* %BRANCH_TAKEN
  %9440 = icmp eq i8 %9439, 1
  br i1 %9440, label %block_400d5e, label %block_400d29

block_400b8c:                                     ; preds = %block_400b9a, %block_400b50
  %MEMORY.21 = phi %struct.Memory* [ %MEMORY.9, %block_400b50 ], [ %MEMORY.21, %block_400b9a ]
  %9441 = load i64, i64* %RBP
  %9442 = sub i64 %9441, 24
  %9443 = load i64, i64* %PC
  %9444 = add i64 %9443, 4
  store i64 %9444, i64* %PC
  %9445 = inttoptr i64 %9442 to i64*
  %9446 = load i64, i64* %9445
  store i64 %9446, i64* %RAX, align 8, !tbaa !2428
  %9447 = load i64, i64* %RAX
  %9448 = load i64, i64* %RBP
  %9449 = sub i64 %9448, 40
  %9450 = load i64, i64* %PC
  %9451 = add i64 %9450, 4
  store i64 %9451, i64* %PC
  %9452 = inttoptr i64 %9449 to i64*
  %9453 = load i64, i64* %9452
  %9454 = sub i64 %9447, %9453
  %9455 = icmp ugt i64 %9453, %9447
  %9456 = zext i1 %9455 to i8
  %9457 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9456, i8* %9457, align 1, !tbaa !2432
  %9458 = trunc i64 %9454 to i32
  %9459 = and i32 %9458, 255
  %9460 = call i32 @llvm.ctpop.i32(i32 %9459) #17
  %9461 = trunc i32 %9460 to i8
  %9462 = and i8 %9461, 1
  %9463 = xor i8 %9462, 1
  %9464 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9463, i8* %9464, align 1, !tbaa !2446
  %9465 = xor i64 %9453, %9447
  %9466 = xor i64 %9465, %9454
  %9467 = lshr i64 %9466, 4
  %9468 = trunc i64 %9467 to i8
  %9469 = and i8 %9468, 1
  %9470 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9469, i8* %9470, align 1, !tbaa !2450
  %9471 = icmp eq i64 %9454, 0
  %9472 = zext i1 %9471 to i8
  %9473 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9472, i8* %9473, align 1, !tbaa !2447
  %9474 = lshr i64 %9454, 63
  %9475 = trunc i64 %9474 to i8
  %9476 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9475, i8* %9476, align 1, !tbaa !2448
  %9477 = lshr i64 %9447, 63
  %9478 = lshr i64 %9453, 63
  %9479 = xor i64 %9478, %9477
  %9480 = xor i64 %9474, %9477
  %9481 = add nuw nsw i64 %9480, %9479
  %9482 = icmp eq i64 %9481, 2
  %9483 = zext i1 %9482 to i8
  %9484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9483, i8* %9484, align 1, !tbaa !2449
  %9485 = load i64, i64* %PC
  %9486 = add i64 %9485, 262
  %9487 = load i64, i64* %PC
  %9488 = add i64 %9487, 6
  %9489 = load i64, i64* %PC
  %9490 = add i64 %9489, 6
  store i64 %9490, i64* %PC
  %9491 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9492 = load i8, i8* %9491, align 1, !tbaa !2447
  %9493 = icmp eq i8 %9492, 0
  %9494 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9495 = load i8, i8* %9494, align 1, !tbaa !2448
  %9496 = icmp ne i8 %9495, 0
  %9497 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %9498 = load i8, i8* %9497, align 1, !tbaa !2449
  %9499 = icmp ne i8 %9498, 0
  %9500 = xor i1 %9496, %9499
  %9501 = xor i1 %9500, true
  %9502 = and i1 %9493, %9501
  %9503 = zext i1 %9502 to i8
  store i8 %9503, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %9504 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9505 = select i1 %9502, i64 %9486, i64 %9488
  store i64 %9505, i64* %9504, align 8, !tbaa !2428
  %9506 = load i8, i8* %BRANCH_TAKEN
  %9507 = icmp eq i8 %9506, 1
  br i1 %9507, label %block_400c9a, label %block_400b9a

block_400f90:                                     ; preds = %block_400f7e
  %9508 = load i64, i64* %RBP
  %9509 = sub i64 %9508, 64
  %9510 = load i64, i64* %PC
  %9511 = add i64 %9510, 4
  store i64 %9511, i64* %PC
  %9512 = inttoptr i64 %9509 to i64*
  %9513 = load i64, i64* %9512
  store i64 %9513, i64* %RDI, align 8, !tbaa !2428
  %9514 = load i64, i64* %PC
  %9515 = add i64 %9514, 8
  store i64 %9515, i64* %PC
  %9516 = load i32, i32* bitcast (%J_type* @J to i32*)
  %9517 = sext i32 %9516 to i64
  store i64 %9517, i64* %RSI, align 8, !tbaa !2428
  %9518 = load i64, i64* %PC
  %9519 = add i64 %9518, 8
  store i64 %9519, i64* %PC
  %9520 = load i32, i32* bitcast (%K_type* @K to i32*)
  %9521 = sext i32 %9520 to i64
  store i64 %9521, i64* %RDX, align 8, !tbaa !2428
  %9522 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9523 = load i64, i64* %PC
  %9524 = add i64 %9523, 9
  store i64 %9524, i64* %PC
  %9525 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 8) to double*)
  %9526 = bitcast i8* %9522 to double*
  store double %9525, double* %9526, align 1, !tbaa !2451
  %9527 = getelementptr inbounds i8, i8* %9522, i64 8
  %9528 = bitcast i8* %9527 to double*
  store double 0.000000e+00, double* %9528, align 1, !tbaa !2451
  %9529 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9530 = load i64, i64* %PC
  %9531 = add i64 %9530, 9
  store i64 %9531, i64* %PC
  %9532 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 16) to double*)
  %9533 = bitcast i8* %9529 to double*
  store double %9532, double* %9533, align 1, !tbaa !2451
  %9534 = getelementptr inbounds i8, i8* %9529, i64 8
  %9535 = bitcast i8* %9534 to double*
  store double 0.000000e+00, double* %9535, align 1, !tbaa !2451
  %9536 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %9537 = load i64, i64* %PC
  %9538 = add i64 %9537, 9
  store i64 %9538, i64* %PC
  %9539 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 24) to double*)
  %9540 = bitcast i8* %9536 to double*
  store double %9539, double* %9540, align 1, !tbaa !2451
  %9541 = getelementptr inbounds i8, i8* %9536, i64 8
  %9542 = bitcast i8* %9541 to double*
  store double 0.000000e+00, double* %9542, align 1, !tbaa !2451
  %9543 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %9544 = load i64, i64* %PC
  %9545 = add i64 %9544, 9
  store i64 %9545, i64* %PC
  %9546 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 32) to double*)
  %9547 = bitcast i8* %9543 to double*
  store double %9546, double* %9547, align 1, !tbaa !2451
  %9548 = getelementptr inbounds i8, i8* %9543, i64 8
  %9549 = bitcast i8* %9548 to double*
  store double 0.000000e+00, double* %9549, align 1, !tbaa !2451
  %9550 = load i64, i64* %PC
  %9551 = add i64 %9550, 1496
  %9552 = load i64, i64* %PC
  %9553 = add i64 %9552, 5
  %9554 = load i64, i64* %PC
  %9555 = add i64 %9554, 5
  store i64 %9555, i64* %PC
  %9556 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9557 = load i64, i64* %9556, align 8, !tbaa !2428
  %9558 = add i64 %9557, -8
  %9559 = inttoptr i64 %9558 to i64*
  store i64 %9553, i64* %9559
  store i64 %9558, i64* %9556, align 8, !tbaa !2428
  %9560 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9551, i64* %9560, align 8, !tbaa !2428
  %9561 = load i64, i64* %PC
  %9562 = call %struct.Memory* @sub_4015a0_POUT_renamed_(%struct.State* %0, i64 %9561, %struct.Memory* %MEMORY.19)
  br label %block_400fcd

block_400db6:                                     ; preds = %block_400da8
  store i32 0, i32* bitcast (%J_type* @J to i32*)
  %9563 = load i64, i64* %PC
  %9564 = add i64 %9563, 16
  %9565 = load i64, i64* %PC
  %9566 = add i64 %9565, 5
  store i64 %9566, i64* %PC
  %9567 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9564, i64* %9567, align 8, !tbaa !2428
  br label %block_400dd1

block_401257:                                     ; preds = %block_401265, %block_40122f
  %MEMORY.22 = phi %struct.Memory* [ %MEMORY.20, %block_40122f ], [ %11040, %block_401265 ]
  %9568 = load i64, i64* %RBP
  %9569 = sub i64 %9568, 24
  %9570 = load i64, i64* %PC
  %9571 = add i64 %9570, 4
  store i64 %9571, i64* %PC
  %9572 = inttoptr i64 %9569 to i64*
  %9573 = load i64, i64* %9572
  store i64 %9573, i64* %RAX, align 8, !tbaa !2428
  %9574 = load i64, i64* %RAX
  %9575 = load i64, i64* %RBP
  %9576 = sub i64 %9575, 80
  %9577 = load i64, i64* %PC
  %9578 = add i64 %9577, 4
  store i64 %9578, i64* %PC
  %9579 = inttoptr i64 %9576 to i64*
  %9580 = load i64, i64* %9579
  %9581 = sub i64 %9574, %9580
  %9582 = icmp ugt i64 %9580, %9574
  %9583 = zext i1 %9582 to i8
  %9584 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9583, i8* %9584, align 1, !tbaa !2432
  %9585 = trunc i64 %9581 to i32
  %9586 = and i32 %9585, 255
  %9587 = call i32 @llvm.ctpop.i32(i32 %9586) #17
  %9588 = trunc i32 %9587 to i8
  %9589 = and i8 %9588, 1
  %9590 = xor i8 %9589, 1
  %9591 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9590, i8* %9591, align 1, !tbaa !2446
  %9592 = xor i64 %9580, %9574
  %9593 = xor i64 %9592, %9581
  %9594 = lshr i64 %9593, 4
  %9595 = trunc i64 %9594 to i8
  %9596 = and i8 %9595, 1
  %9597 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9596, i8* %9597, align 1, !tbaa !2450
  %9598 = icmp eq i64 %9581, 0
  %9599 = zext i1 %9598 to i8
  %9600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9599, i8* %9600, align 1, !tbaa !2447
  %9601 = lshr i64 %9581, 63
  %9602 = trunc i64 %9601 to i8
  %9603 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9602, i8* %9603, align 1, !tbaa !2448
  %9604 = lshr i64 %9574, 63
  %9605 = lshr i64 %9580, 63
  %9606 = xor i64 %9605, %9604
  %9607 = xor i64 %9601, %9604
  %9608 = add nuw nsw i64 %9607, %9606
  %9609 = icmp eq i64 %9608, 2
  %9610 = zext i1 %9609 to i8
  %9611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9610, i8* %9611, align 1, !tbaa !2449
  %9612 = load i64, i64* %PC
  %9613 = add i64 %9612, 51
  %9614 = load i64, i64* %PC
  %9615 = add i64 %9614, 6
  %9616 = load i64, i64* %PC
  %9617 = add i64 %9616, 6
  store i64 %9617, i64* %PC
  %9618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9619 = load i8, i8* %9618, align 1, !tbaa !2447
  %9620 = icmp eq i8 %9619, 0
  %9621 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9622 = load i8, i8* %9621, align 1, !tbaa !2448
  %9623 = icmp ne i8 %9622, 0
  %9624 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %9625 = load i8, i8* %9624, align 1, !tbaa !2449
  %9626 = icmp ne i8 %9625, 0
  %9627 = xor i1 %9623, %9626
  %9628 = xor i1 %9627, true
  %9629 = and i1 %9620, %9628
  %9630 = zext i1 %9629 to i8
  store i8 %9630, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %9631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9632 = select i1 %9629, i64 %9613, i64 %9615
  store i64 %9632, i64* %9631, align 8, !tbaa !2428
  %9633 = load i8, i8* %BRANCH_TAKEN
  %9634 = icmp eq i8 %9633, 1
  %9635 = load i64, i64* %RBP
  br i1 %9634, label %block_401292, label %block_401265

block_400f7e:                                     ; preds = %block_400e7b
  %9636 = load i64, i64* %RBP
  %9637 = sub i64 %9636, 176
  %9638 = load i64, i64* %PC
  %9639 = add i64 %9638, 6
  store i64 %9639, i64* %PC
  %9640 = inttoptr i64 %9637 to i32*
  %9641 = load i32, i32* %9640
  %9642 = zext i32 %9641 to i64
  store i64 %9642, i64* %RAX, align 8, !tbaa !2428
  %9643 = load i32, i32* %EAX
  %9644 = zext i32 %9643 to i64
  %9645 = load i64, i64* %RBP
  %9646 = sub i64 %9645, 172
  %9647 = load i64, i64* %PC
  %9648 = add i64 %9647, 6
  store i64 %9648, i64* %PC
  %9649 = inttoptr i64 %9646 to i32*
  %9650 = load i32, i32* %9649
  %9651 = sub i32 %9643, %9650
  %9652 = icmp ult i32 %9643, %9650
  %9653 = zext i1 %9652 to i8
  %9654 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9653, i8* %9654, align 1, !tbaa !2432
  %9655 = and i32 %9651, 255
  %9656 = call i32 @llvm.ctpop.i32(i32 %9655) #17
  %9657 = trunc i32 %9656 to i8
  %9658 = and i8 %9657, 1
  %9659 = xor i8 %9658, 1
  %9660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9659, i8* %9660, align 1, !tbaa !2446
  %9661 = xor i32 %9650, %9643
  %9662 = xor i32 %9661, %9651
  %9663 = lshr i32 %9662, 4
  %9664 = trunc i32 %9663 to i8
  %9665 = and i8 %9664, 1
  %9666 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9665, i8* %9666, align 1, !tbaa !2450
  %9667 = icmp eq i32 %9651, 0
  %9668 = zext i1 %9667 to i8
  %9669 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9668, i8* %9669, align 1, !tbaa !2447
  %9670 = lshr i32 %9651, 31
  %9671 = trunc i32 %9670 to i8
  %9672 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9671, i8* %9672, align 1, !tbaa !2448
  %9673 = lshr i32 %9643, 31
  %9674 = lshr i32 %9650, 31
  %9675 = xor i32 %9674, %9673
  %9676 = xor i32 %9670, %9673
  %9677 = add nuw nsw i32 %9676, %9675
  %9678 = icmp eq i32 %9677, 2
  %9679 = zext i1 %9678 to i8
  %9680 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9679, i8* %9680, align 1, !tbaa !2449
  %9681 = load i64, i64* %PC
  %9682 = add i64 %9681, 67
  %9683 = load i64, i64* %PC
  %9684 = add i64 %9683, 6
  %9685 = load i64, i64* %PC
  %9686 = add i64 %9685, 6
  store i64 %9686, i64* %PC
  %9687 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9688 = load i8, i8* %9687, align 1, !tbaa !2447
  %9689 = icmp eq i8 %9688, 0
  %9690 = zext i1 %9689 to i8
  store i8 %9690, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %9691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9692 = select i1 %9689, i64 %9682, i64 %9684
  store i64 %9692, i64* %9691, align 8, !tbaa !2428
  %9693 = load i8, i8* %BRANCH_TAKEN
  %9694 = icmp eq i8 %9693, 1
  br i1 %9694, label %block_400fcd, label %block_400f90

block_4011f6:                                     ; preds = %block_4011e4
  %9695 = load i64, i64* %RBP
  %9696 = sub i64 %9695, 72
  %9697 = load i64, i64* %PC
  %9698 = add i64 %9697, 4
  store i64 %9698, i64* %PC
  %9699 = inttoptr i64 %9696 to i64*
  %9700 = load i64, i64* %9699
  store i64 %9700, i64* %RDI, align 8, !tbaa !2428
  %9701 = load i64, i64* %PC
  %9702 = add i64 %9701, 8
  store i64 %9702, i64* %PC
  %9703 = load i32, i32* bitcast (%J_type* @J to i32*)
  %9704 = sext i32 %9703 to i64
  store i64 %9704, i64* %RSI, align 8, !tbaa !2428
  %9705 = load i64, i64* %PC
  %9706 = add i64 %9705, 8
  store i64 %9706, i64* %PC
  %9707 = load i32, i32* bitcast (%K_type* @K to i32*)
  %9708 = sext i32 %9707 to i64
  store i64 %9708, i64* %RDX, align 8, !tbaa !2428
  %9709 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9710 = load i64, i64* %RBP
  %9711 = sub i64 %9710, 144
  %9712 = load i64, i64* %PC
  %9713 = add i64 %9712, 8
  store i64 %9713, i64* %PC
  %9714 = inttoptr i64 %9711 to double*
  %9715 = load double, double* %9714
  %9716 = bitcast i8* %9709 to double*
  store double %9715, double* %9716, align 1, !tbaa !2451
  %9717 = getelementptr inbounds i8, i8* %9709, i64 8
  %9718 = bitcast i8* %9717 to double*
  store double 0.000000e+00, double* %9718, align 1, !tbaa !2451
  %9719 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9720 = load i64, i64* %RBP
  %9721 = sub i64 %9720, 144
  %9722 = load i64, i64* %PC
  %9723 = add i64 %9722, 8
  store i64 %9723, i64* %PC
  %9724 = inttoptr i64 %9721 to double*
  %9725 = load double, double* %9724
  %9726 = bitcast i8* %9719 to double*
  store double %9725, double* %9726, align 1, !tbaa !2451
  %9727 = getelementptr inbounds i8, i8* %9719, i64 8
  %9728 = bitcast i8* %9727 to double*
  store double 0.000000e+00, double* %9728, align 1, !tbaa !2451
  %9729 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %9730 = load i64, i64* %RBP
  %9731 = sub i64 %9730, 152
  %9732 = load i64, i64* %PC
  %9733 = add i64 %9732, 8
  store i64 %9733, i64* %PC
  %9734 = inttoptr i64 %9731 to double*
  %9735 = load double, double* %9734
  %9736 = bitcast i8* %9729 to double*
  store double %9735, double* %9736, align 1, !tbaa !2451
  %9737 = getelementptr inbounds i8, i8* %9729, i64 8
  %9738 = bitcast i8* %9737 to double*
  store double 0.000000e+00, double* %9738, align 1, !tbaa !2451
  %9739 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %9740 = load i64, i64* %RBP
  %9741 = sub i64 %9740, 152
  %9742 = load i64, i64* %PC
  %9743 = add i64 %9742, 8
  store i64 %9743, i64* %PC
  %9744 = inttoptr i64 %9741 to double*
  %9745 = load double, double* %9744
  %9746 = bitcast i8* %9739 to double*
  store double %9745, double* %9746, align 1, !tbaa !2451
  %9747 = getelementptr inbounds i8, i8* %9739, i64 8
  %9748 = bitcast i8* %9747 to double*
  store double 0.000000e+00, double* %9748, align 1, !tbaa !2451
  %9749 = load i64, i64* %PC
  %9750 = add i64 %9749, 886
  %9751 = load i64, i64* %PC
  %9752 = add i64 %9751, 5
  %9753 = load i64, i64* %PC
  %9754 = add i64 %9753, 5
  store i64 %9754, i64* %PC
  %9755 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9756 = load i64, i64* %9755, align 8, !tbaa !2428
  %9757 = add i64 %9756, -8
  %9758 = inttoptr i64 %9757 to i64*
  store i64 %9752, i64* %9758
  store i64 %9757, i64* %9755, align 8, !tbaa !2428
  %9759 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9750, i64* %9759, align 8, !tbaa !2428
  %9760 = load i64, i64* %PC
  %9761 = call %struct.Memory* @sub_4015a0_POUT_renamed_(%struct.State* %0, i64 %9760, %struct.Memory* %MEMORY.25)
  br label %block_40122f

block_400fcd:                                     ; preds = %block_400f7e, %block_400f90
  %MEMORY.23 = phi %struct.Memory* [ %MEMORY.19, %block_400f7e ], [ %9562, %block_400f90 ]
  %9762 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9763 = load i64, i64* %PC
  %9764 = add i64 %9763, 8
  store i64 %9764, i64* %PC
  %9765 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4018b0__rodata_type* @seg_4018b0__rodata to i64), i64 48) to double*)
  %9766 = bitcast i8* %9762 to double*
  store double %9765, double* %9766, align 1, !tbaa !2451
  %9767 = getelementptr inbounds i8, i8* %9762, i64 8
  %9768 = bitcast i8* %9767 to double*
  store double 0.000000e+00, double* %9768, align 1, !tbaa !2451
  %9769 = load i64, i64* %RBP
  %9770 = sub i64 %9769, 144
  %9771 = bitcast %union.vec128_t* %XMM0 to i8*
  %9772 = load i64, i64* %PC
  %9773 = add i64 %9772, 8
  store i64 %9773, i64* %PC
  %9774 = bitcast i8* %9771 to double*
  %9775 = load double, double* %9774, align 1
  %9776 = inttoptr i64 %9770 to double*
  store double %9775, double* %9776
  %9777 = load i64, i64* %RBP
  %9778 = sub i64 %9777, 152
  %9779 = bitcast %union.vec128_t* %XMM0 to i8*
  %9780 = load i64, i64* %PC
  %9781 = add i64 %9780, 8
  store i64 %9781, i64* %PC
  %9782 = bitcast i8* %9779 to double*
  %9783 = load double, double* %9782, align 1
  %9784 = inttoptr i64 %9778 to double*
  store double %9783, double* %9784
  %9785 = load i64, i64* %RBP
  %9786 = sub i64 %9785, 24
  %9787 = load i64, i64* %PC
  %9788 = add i64 %9787, 8
  store i64 %9788, i64* %PC
  %9789 = inttoptr i64 %9786 to i64*
  store i64 1, i64* %9789
  br label %block_400fed

block_400e89:                                     ; preds = %block_400e7b
  %9790 = load i64, i64* %PC
  %9791 = add i64 %9790, 7
  store i64 %9791, i64* %PC
  %9792 = load i32, i32* bitcast (%J_type* @J to i32*)
  %9793 = zext i32 %9792 to i64
  store i64 %9793, i64* %RAX, align 8, !tbaa !2428
  %9794 = load i64, i64* %PC
  %9795 = add i64 %9794, 7
  store i64 %9795, i64* %PC
  %9796 = load i32, i32* bitcast (%K_type* @K to i32*)
  %9797 = zext i32 %9796 to i64
  store i64 %9797, i64* %RCX, align 8, !tbaa !2428
  %9798 = load i64, i64* %RCX
  %9799 = load i64, i64* %PC
  %9800 = add i64 %9799, 7
  store i64 %9800, i64* %PC
  %9801 = trunc i64 %9798 to i32
  %9802 = load i32, i32* bitcast (%J_type* @J to i32*)
  %9803 = sub i32 %9801, %9802
  %9804 = zext i32 %9803 to i64
  store i64 %9804, i64* %RCX, align 8, !tbaa !2428
  %9805 = icmp ult i32 %9801, %9802
  %9806 = zext i1 %9805 to i8
  %9807 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9806, i8* %9807, align 1, !tbaa !2432
  %9808 = and i32 %9803, 255
  %9809 = call i32 @llvm.ctpop.i32(i32 %9808) #17
  %9810 = trunc i32 %9809 to i8
  %9811 = and i8 %9810, 1
  %9812 = xor i8 %9811, 1
  %9813 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9812, i8* %9813, align 1, !tbaa !2446
  %9814 = xor i32 %9802, %9801
  %9815 = xor i32 %9814, %9803
  %9816 = lshr i32 %9815, 4
  %9817 = trunc i32 %9816 to i8
  %9818 = and i8 %9817, 1
  %9819 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9818, i8* %9819, align 1, !tbaa !2450
  %9820 = icmp eq i32 %9803, 0
  %9821 = zext i1 %9820 to i8
  %9822 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9821, i8* %9822, align 1, !tbaa !2447
  %9823 = lshr i32 %9803, 31
  %9824 = trunc i32 %9823 to i8
  %9825 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9824, i8* %9825, align 1, !tbaa !2448
  %9826 = lshr i32 %9801, 31
  %9827 = lshr i32 %9802, 31
  %9828 = xor i32 %9827, %9826
  %9829 = xor i32 %9823, %9826
  %9830 = add nuw nsw i32 %9829, %9828
  %9831 = icmp eq i32 %9830, 2
  %9832 = zext i1 %9831 to i8
  %9833 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9832, i8* %9833, align 1, !tbaa !2449
  %9834 = load i64, i64* %RAX
  %9835 = load i32, i32* %ECX
  %9836 = zext i32 %9835 to i64
  %9837 = load i64, i64* %PC
  %9838 = add i64 %9837, 3
  store i64 %9838, i64* %PC
  %9839 = shl i64 %9834, 32
  %9840 = ashr exact i64 %9839, 32
  %9841 = shl i64 %9836, 32
  %9842 = ashr exact i64 %9841, 32
  %9843 = mul nsw i64 %9842, %9840
  %9844 = trunc i64 %9843 to i32
  %9845 = and i64 %9843, 4294967295
  store i64 %9845, i64* %RAX, align 8, !tbaa !2428
  %9846 = shl i64 %9843, 32
  %9847 = ashr exact i64 %9846, 32
  %9848 = icmp ne i64 %9847, %9843
  %9849 = zext i1 %9848 to i8
  %9850 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9849, i8* %9850, align 1, !tbaa !2432
  %9851 = and i32 %9844, 255
  %9852 = call i32 @llvm.ctpop.i32(i32 %9851) #17
  %9853 = trunc i32 %9852 to i8
  %9854 = and i8 %9853, 1
  %9855 = xor i8 %9854, 1
  %9856 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9855, i8* %9856, align 1, !tbaa !2446
  %9857 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9857, align 1, !tbaa !2450
  %9858 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %9858, align 1, !tbaa !2447
  %9859 = lshr i32 %9844, 31
  %9860 = trunc i32 %9859 to i8
  %9861 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9860, i8* %9861, align 1, !tbaa !2448
  %9862 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9849, i8* %9862, align 1, !tbaa !2449
  %9863 = load i64, i64* %PC
  %9864 = add i64 %9863, 7
  store i64 %9864, i64* %PC
  %9865 = load i32, i32* bitcast (%L_type* @L to i32*)
  %9866 = zext i32 %9865 to i64
  store i64 %9866, i64* %RCX, align 8, !tbaa !2428
  %9867 = load i64, i64* %RCX
  %9868 = load i64, i64* %PC
  %9869 = add i64 %9868, 7
  store i64 %9869, i64* %PC
  %9870 = trunc i64 %9867 to i32
  %9871 = load i32, i32* bitcast (%K_type* @K to i32*)
  %9872 = sub i32 %9870, %9871
  %9873 = zext i32 %9872 to i64
  store i64 %9873, i64* %RCX, align 8, !tbaa !2428
  %9874 = icmp ult i32 %9870, %9871
  %9875 = zext i1 %9874 to i8
  %9876 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9875, i8* %9876, align 1, !tbaa !2432
  %9877 = and i32 %9872, 255
  %9878 = call i32 @llvm.ctpop.i32(i32 %9877) #17
  %9879 = trunc i32 %9878 to i8
  %9880 = and i8 %9879, 1
  %9881 = xor i8 %9880, 1
  %9882 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9881, i8* %9882, align 1, !tbaa !2446
  %9883 = xor i32 %9871, %9870
  %9884 = xor i32 %9883, %9872
  %9885 = lshr i32 %9884, 4
  %9886 = trunc i32 %9885 to i8
  %9887 = and i8 %9886, 1
  %9888 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9887, i8* %9888, align 1, !tbaa !2450
  %9889 = icmp eq i32 %9872, 0
  %9890 = zext i1 %9889 to i8
  %9891 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9890, i8* %9891, align 1, !tbaa !2447
  %9892 = lshr i32 %9872, 31
  %9893 = trunc i32 %9892 to i8
  %9894 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9893, i8* %9894, align 1, !tbaa !2448
  %9895 = lshr i32 %9870, 31
  %9896 = lshr i32 %9871, 31
  %9897 = xor i32 %9896, %9895
  %9898 = xor i32 %9892, %9895
  %9899 = add nuw nsw i32 %9898, %9897
  %9900 = icmp eq i32 %9899, 2
  %9901 = zext i1 %9900 to i8
  %9902 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9901, i8* %9902, align 1, !tbaa !2449
  %9903 = load i64, i64* %RAX
  %9904 = load i32, i32* %ECX
  %9905 = zext i32 %9904 to i64
  %9906 = load i64, i64* %PC
  %9907 = add i64 %9906, 3
  store i64 %9907, i64* %PC
  %9908 = shl i64 %9903, 32
  %9909 = ashr exact i64 %9908, 32
  %9910 = shl i64 %9905, 32
  %9911 = ashr exact i64 %9910, 32
  %9912 = mul nsw i64 %9911, %9909
  %9913 = trunc i64 %9912 to i32
  %9914 = and i64 %9912, 4294967295
  store i64 %9914, i64* %RAX, align 8, !tbaa !2428
  %9915 = shl i64 %9912, 32
  %9916 = ashr exact i64 %9915, 32
  %9917 = icmp ne i64 %9916, %9912
  %9918 = zext i1 %9917 to i8
  %9919 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9918, i8* %9919, align 1, !tbaa !2432
  %9920 = and i32 %9913, 255
  %9921 = call i32 @llvm.ctpop.i32(i32 %9920) #17
  %9922 = trunc i32 %9921 to i8
  %9923 = and i8 %9922, 1
  %9924 = xor i8 %9923, 1
  %9925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9924, i8* %9925, align 1, !tbaa !2446
  %9926 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9926, align 1, !tbaa !2450
  %9927 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %9927, align 1, !tbaa !2447
  %9928 = lshr i32 %9913, 31
  %9929 = trunc i32 %9928 to i8
  %9930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9929, i8* %9930, align 1, !tbaa !2448
  %9931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9918, i8* %9931, align 1, !tbaa !2449
  %9932 = load i32, i32* %EAX
  %9933 = zext i32 %9932 to i64
  %9934 = load i64, i64* %PC
  %9935 = add i64 %9934, 7
  store i64 %9935, i64* %PC
  store i32 %9932, i32* bitcast (%J_type* @J to i32*)
  %9936 = load i64, i64* %PC
  %9937 = add i64 %9936, 7
  store i64 %9937, i64* %PC
  %9938 = load i32, i32* bitcast (%L_type* @L to i32*)
  %9939 = zext i32 %9938 to i64
  store i64 %9939, i64* %RAX, align 8, !tbaa !2428
  %9940 = load i64, i64* %RAX
  %9941 = load i64, i64* %PC
  %9942 = add i64 %9941, 8
  store i64 %9942, i64* %PC
  %9943 = load i32, i32* bitcast (%K_type* @K to i32*)
  %9944 = shl i64 %9940, 32
  %9945 = ashr exact i64 %9944, 32
  %9946 = sext i32 %9943 to i64
  %9947 = mul nsw i64 %9946, %9945
  %9948 = trunc i64 %9947 to i32
  %9949 = and i64 %9947, 4294967295
  store i64 %9949, i64* %RAX, align 8, !tbaa !2428
  %9950 = shl i64 %9947, 32
  %9951 = ashr exact i64 %9950, 32
  %9952 = icmp ne i64 %9951, %9947
  %9953 = zext i1 %9952 to i8
  %9954 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9953, i8* %9954, align 1, !tbaa !2432
  %9955 = and i32 %9948, 255
  %9956 = call i32 @llvm.ctpop.i32(i32 %9955) #17
  %9957 = trunc i32 %9956 to i8
  %9958 = and i8 %9957, 1
  %9959 = xor i8 %9958, 1
  %9960 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9959, i8* %9960, align 1, !tbaa !2446
  %9961 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9961, align 1, !tbaa !2450
  %9962 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %9962, align 1, !tbaa !2447
  %9963 = lshr i32 %9948, 31
  %9964 = trunc i32 %9963 to i8
  %9965 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9964, i8* %9965, align 1, !tbaa !2448
  %9966 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9953, i8* %9966, align 1, !tbaa !2449
  %9967 = load i64, i64* %PC
  %9968 = add i64 %9967, 7
  store i64 %9968, i64* %PC
  %9969 = load i32, i32* bitcast (%L_type* @L to i32*)
  %9970 = zext i32 %9969 to i64
  store i64 %9970, i64* %RCX, align 8, !tbaa !2428
  %9971 = load i64, i64* %RCX
  %9972 = load i64, i64* %PC
  %9973 = add i64 %9972, 7
  store i64 %9973, i64* %PC
  %9974 = trunc i64 %9971 to i32
  %9975 = load i32, i32* bitcast (%J_type* @J to i32*)
  %9976 = sub i32 %9974, %9975
  %9977 = zext i32 %9976 to i64
  store i64 %9977, i64* %RCX, align 8, !tbaa !2428
  %9978 = icmp ult i32 %9974, %9975
  %9979 = zext i1 %9978 to i8
  %9980 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9979, i8* %9980, align 1, !tbaa !2432
  %9981 = and i32 %9976, 255
  %9982 = call i32 @llvm.ctpop.i32(i32 %9981) #17
  %9983 = trunc i32 %9982 to i8
  %9984 = and i8 %9983, 1
  %9985 = xor i8 %9984, 1
  %9986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9985, i8* %9986, align 1, !tbaa !2446
  %9987 = xor i32 %9975, %9974
  %9988 = xor i32 %9987, %9976
  %9989 = lshr i32 %9988, 4
  %9990 = trunc i32 %9989 to i8
  %9991 = and i8 %9990, 1
  %9992 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9991, i8* %9992, align 1, !tbaa !2450
  %9993 = icmp eq i32 %9976, 0
  %9994 = zext i1 %9993 to i8
  %9995 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9994, i8* %9995, align 1, !tbaa !2447
  %9996 = lshr i32 %9976, 31
  %9997 = trunc i32 %9996 to i8
  %9998 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9997, i8* %9998, align 1, !tbaa !2448
  %9999 = lshr i32 %9974, 31
  %10000 = lshr i32 %9975, 31
  %10001 = xor i32 %10000, %9999
  %10002 = xor i32 %9996, %9999
  %10003 = add nuw nsw i32 %10002, %10001
  %10004 = icmp eq i32 %10003, 2
  %10005 = zext i1 %10004 to i8
  %10006 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10005, i8* %10006, align 1, !tbaa !2449
  %10007 = load i64, i64* %RCX
  %10008 = load i64, i64* %PC
  %10009 = add i64 %10008, 8
  store i64 %10009, i64* %PC
  %10010 = load i32, i32* bitcast (%K_type* @K to i32*)
  %10011 = shl i64 %10007, 32
  %10012 = ashr exact i64 %10011, 32
  %10013 = sext i32 %10010 to i64
  %10014 = mul nsw i64 %10013, %10012
  %10015 = trunc i64 %10014 to i32
  %10016 = and i64 %10014, 4294967295
  store i64 %10016, i64* %RCX, align 8, !tbaa !2428
  %10017 = shl i64 %10014, 32
  %10018 = ashr exact i64 %10017, 32
  %10019 = icmp ne i64 %10018, %10014
  %10020 = zext i1 %10019 to i8
  %10021 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10020, i8* %10021, align 1, !tbaa !2432
  %10022 = and i32 %10015, 255
  %10023 = call i32 @llvm.ctpop.i32(i32 %10022) #17
  %10024 = trunc i32 %10023 to i8
  %10025 = and i8 %10024, 1
  %10026 = xor i8 %10025, 1
  %10027 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10026, i8* %10027, align 1, !tbaa !2446
  %10028 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10028, align 1, !tbaa !2450
  %10029 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %10029, align 1, !tbaa !2447
  %10030 = lshr i32 %10015, 31
  %10031 = trunc i32 %10030 to i8
  %10032 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10031, i8* %10032, align 1, !tbaa !2448
  %10033 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10020, i8* %10033, align 1, !tbaa !2449
  %10034 = load i64, i64* %RAX
  %10035 = load i32, i32* %ECX
  %10036 = zext i32 %10035 to i64
  %10037 = load i64, i64* %PC
  %10038 = add i64 %10037, 2
  store i64 %10038, i64* %PC
  %10039 = trunc i64 %10034 to i32
  %10040 = sub i32 %10039, %10035
  %10041 = zext i32 %10040 to i64
  store i64 %10041, i64* %RAX, align 8, !tbaa !2428
  %10042 = icmp ult i32 %10039, %10035
  %10043 = zext i1 %10042 to i8
  %10044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10043, i8* %10044, align 1, !tbaa !2432
  %10045 = and i32 %10040, 255
  %10046 = call i32 @llvm.ctpop.i32(i32 %10045) #17
  %10047 = trunc i32 %10046 to i8
  %10048 = and i8 %10047, 1
  %10049 = xor i8 %10048, 1
  %10050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10049, i8* %10050, align 1, !tbaa !2446
  %10051 = xor i64 %10036, %10034
  %10052 = trunc i64 %10051 to i32
  %10053 = xor i32 %10052, %10040
  %10054 = lshr i32 %10053, 4
  %10055 = trunc i32 %10054 to i8
  %10056 = and i8 %10055, 1
  %10057 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10056, i8* %10057, align 1, !tbaa !2450
  %10058 = icmp eq i32 %10040, 0
  %10059 = zext i1 %10058 to i8
  %10060 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10059, i8* %10060, align 1, !tbaa !2447
  %10061 = lshr i32 %10040, 31
  %10062 = trunc i32 %10061 to i8
  %10063 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10062, i8* %10063, align 1, !tbaa !2448
  %10064 = lshr i32 %10039, 31
  %10065 = lshr i32 %10035, 31
  %10066 = xor i32 %10065, %10064
  %10067 = xor i32 %10061, %10064
  %10068 = add nuw nsw i32 %10067, %10066
  %10069 = icmp eq i32 %10068, 2
  %10070 = zext i1 %10069 to i8
  %10071 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10070, i8* %10071, align 1, !tbaa !2449
  %10072 = load i32, i32* %EAX
  %10073 = zext i32 %10072 to i64
  %10074 = load i64, i64* %PC
  %10075 = add i64 %10074, 7
  store i64 %10075, i64* %PC
  store i32 %10072, i32* bitcast (%K_type* @K to i32*)
  %10076 = load i64, i64* %PC
  %10077 = add i64 %10076, 7
  store i64 %10077, i64* %PC
  %10078 = load i32, i32* bitcast (%L_type* @L to i32*)
  %10079 = zext i32 %10078 to i64
  store i64 %10079, i64* %RAX, align 8, !tbaa !2428
  %10080 = load i64, i64* %RAX
  %10081 = load i64, i64* %PC
  %10082 = add i64 %10081, 7
  store i64 %10082, i64* %PC
  %10083 = trunc i64 %10080 to i32
  %10084 = load i32, i32* bitcast (%K_type* @K to i32*)
  %10085 = sub i32 %10083, %10084
  %10086 = zext i32 %10085 to i64
  store i64 %10086, i64* %RAX, align 8, !tbaa !2428
  %10087 = icmp ult i32 %10083, %10084
  %10088 = zext i1 %10087 to i8
  %10089 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10088, i8* %10089, align 1, !tbaa !2432
  %10090 = and i32 %10085, 255
  %10091 = call i32 @llvm.ctpop.i32(i32 %10090) #17
  %10092 = trunc i32 %10091 to i8
  %10093 = and i8 %10092, 1
  %10094 = xor i8 %10093, 1
  %10095 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10094, i8* %10095, align 1, !tbaa !2446
  %10096 = xor i32 %10084, %10083
  %10097 = xor i32 %10096, %10085
  %10098 = lshr i32 %10097, 4
  %10099 = trunc i32 %10098 to i8
  %10100 = and i8 %10099, 1
  %10101 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10100, i8* %10101, align 1, !tbaa !2450
  %10102 = icmp eq i32 %10085, 0
  %10103 = zext i1 %10102 to i8
  %10104 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10103, i8* %10104, align 1, !tbaa !2447
  %10105 = lshr i32 %10085, 31
  %10106 = trunc i32 %10105 to i8
  %10107 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10106, i8* %10107, align 1, !tbaa !2448
  %10108 = lshr i32 %10083, 31
  %10109 = lshr i32 %10084, 31
  %10110 = xor i32 %10109, %10108
  %10111 = xor i32 %10105, %10108
  %10112 = add nuw nsw i32 %10111, %10110
  %10113 = icmp eq i32 %10112, 2
  %10114 = zext i1 %10113 to i8
  %10115 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10114, i8* %10115, align 1, !tbaa !2449
  %10116 = load i64, i64* %PC
  %10117 = add i64 %10116, 7
  store i64 %10117, i64* %PC
  %10118 = load i32, i32* bitcast (%K_type* @K to i32*)
  %10119 = zext i32 %10118 to i64
  store i64 %10119, i64* %RCX, align 8, !tbaa !2428
  %10120 = load i64, i64* %RCX
  %10121 = load i64, i64* %PC
  %10122 = add i64 %10121, 7
  store i64 %10122, i64* %PC
  %10123 = trunc i64 %10120 to i32
  %10124 = load i32, i32* bitcast (%J_type* @J to i32*)
  %10125 = add i32 %10124, %10123
  %10126 = zext i32 %10125 to i64
  store i64 %10126, i64* %RCX, align 8, !tbaa !2428
  %10127 = icmp ult i32 %10125, %10123
  %10128 = icmp ult i32 %10125, %10124
  %10129 = or i1 %10127, %10128
  %10130 = zext i1 %10129 to i8
  %10131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10130, i8* %10131, align 1, !tbaa !2432
  %10132 = and i32 %10125, 255
  %10133 = call i32 @llvm.ctpop.i32(i32 %10132) #17
  %10134 = trunc i32 %10133 to i8
  %10135 = and i8 %10134, 1
  %10136 = xor i8 %10135, 1
  %10137 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10136, i8* %10137, align 1, !tbaa !2446
  %10138 = xor i32 %10124, %10123
  %10139 = xor i32 %10138, %10125
  %10140 = lshr i32 %10139, 4
  %10141 = trunc i32 %10140 to i8
  %10142 = and i8 %10141, 1
  %10143 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10142, i8* %10143, align 1, !tbaa !2450
  %10144 = icmp eq i32 %10125, 0
  %10145 = zext i1 %10144 to i8
  %10146 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10145, i8* %10146, align 1, !tbaa !2447
  %10147 = lshr i32 %10125, 31
  %10148 = trunc i32 %10147 to i8
  %10149 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10148, i8* %10149, align 1, !tbaa !2448
  %10150 = lshr i32 %10123, 31
  %10151 = lshr i32 %10124, 31
  %10152 = xor i32 %10147, %10150
  %10153 = xor i32 %10147, %10151
  %10154 = add nuw nsw i32 %10152, %10153
  %10155 = icmp eq i32 %10154, 2
  %10156 = zext i1 %10155 to i8
  %10157 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10156, i8* %10157, align 1, !tbaa !2449
  %10158 = load i64, i64* %RAX
  %10159 = load i32, i32* %ECX
  %10160 = zext i32 %10159 to i64
  %10161 = load i64, i64* %PC
  %10162 = add i64 %10161, 3
  store i64 %10162, i64* %PC
  %10163 = shl i64 %10158, 32
  %10164 = ashr exact i64 %10163, 32
  %10165 = shl i64 %10160, 32
  %10166 = ashr exact i64 %10165, 32
  %10167 = mul nsw i64 %10166, %10164
  %10168 = trunc i64 %10167 to i32
  %10169 = and i64 %10167, 4294967295
  store i64 %10169, i64* %RAX, align 8, !tbaa !2428
  %10170 = shl i64 %10167, 32
  %10171 = ashr exact i64 %10170, 32
  %10172 = icmp ne i64 %10171, %10167
  %10173 = zext i1 %10172 to i8
  %10174 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10173, i8* %10174, align 1, !tbaa !2432
  %10175 = and i32 %10168, 255
  %10176 = call i32 @llvm.ctpop.i32(i32 %10175) #17
  %10177 = trunc i32 %10176 to i8
  %10178 = and i8 %10177, 1
  %10179 = xor i8 %10178, 1
  %10180 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10179, i8* %10180, align 1, !tbaa !2446
  %10181 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10181, align 1, !tbaa !2450
  %10182 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %10182, align 1, !tbaa !2447
  %10183 = lshr i32 %10168, 31
  %10184 = trunc i32 %10183 to i8
  %10185 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10184, i8* %10185, align 1, !tbaa !2448
  %10186 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10173, i8* %10186, align 1, !tbaa !2449
  %10187 = load i32, i32* %EAX
  %10188 = zext i32 %10187 to i64
  %10189 = load i64, i64* %PC
  %10190 = add i64 %10189, 7
  store i64 %10190, i64* %PC
  store i32 %10187, i32* bitcast (%L_type* @L to i32*)
  %10191 = load i64, i64* %PC
  %10192 = add i64 %10191, 7
  store i64 %10192, i64* %PC
  %10193 = load i32, i32* bitcast (%J_type* @J to i32*)
  %10194 = zext i32 %10193 to i64
  store i64 %10194, i64* %RAX, align 8, !tbaa !2428
  %10195 = load i64, i64* %RAX
  %10196 = load i64, i64* %PC
  %10197 = add i64 %10196, 7
  store i64 %10197, i64* %PC
  %10198 = trunc i64 %10195 to i32
  %10199 = load i32, i32* bitcast (%K_type* @K to i32*)
  %10200 = add i32 %10199, %10198
  %10201 = zext i32 %10200 to i64
  store i64 %10201, i64* %RAX, align 8, !tbaa !2428
  %10202 = icmp ult i32 %10200, %10198
  %10203 = icmp ult i32 %10200, %10199
  %10204 = or i1 %10202, %10203
  %10205 = zext i1 %10204 to i8
  %10206 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10205, i8* %10206, align 1, !tbaa !2432
  %10207 = and i32 %10200, 255
  %10208 = call i32 @llvm.ctpop.i32(i32 %10207) #17
  %10209 = trunc i32 %10208 to i8
  %10210 = and i8 %10209, 1
  %10211 = xor i8 %10210, 1
  %10212 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10211, i8* %10212, align 1, !tbaa !2446
  %10213 = xor i32 %10199, %10198
  %10214 = xor i32 %10213, %10200
  %10215 = lshr i32 %10214, 4
  %10216 = trunc i32 %10215 to i8
  %10217 = and i8 %10216, 1
  %10218 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10217, i8* %10218, align 1, !tbaa !2450
  %10219 = icmp eq i32 %10200, 0
  %10220 = zext i1 %10219 to i8
  %10221 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10220, i8* %10221, align 1, !tbaa !2447
  %10222 = lshr i32 %10200, 31
  %10223 = trunc i32 %10222 to i8
  %10224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10223, i8* %10224, align 1, !tbaa !2448
  %10225 = lshr i32 %10198, 31
  %10226 = lshr i32 %10199, 31
  %10227 = xor i32 %10222, %10225
  %10228 = xor i32 %10222, %10226
  %10229 = add nuw nsw i32 %10227, %10228
  %10230 = icmp eq i32 %10229, 2
  %10231 = zext i1 %10230 to i8
  %10232 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10231, i8* %10232, align 1, !tbaa !2449
  %10233 = load i64, i64* %RAX
  %10234 = load i64, i64* %PC
  %10235 = add i64 %10234, 7
  store i64 %10235, i64* %PC
  %10236 = trunc i64 %10233 to i32
  %10237 = load i32, i32* bitcast (%L_type* @L to i32*)
  %10238 = add i32 %10237, %10236
  %10239 = zext i32 %10238 to i64
  store i64 %10239, i64* %RAX, align 8, !tbaa !2428
  %10240 = icmp ult i32 %10238, %10236
  %10241 = icmp ult i32 %10238, %10237
  %10242 = or i1 %10240, %10241
  %10243 = zext i1 %10242 to i8
  %10244 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10243, i8* %10244, align 1, !tbaa !2432
  %10245 = and i32 %10238, 255
  %10246 = call i32 @llvm.ctpop.i32(i32 %10245) #17
  %10247 = trunc i32 %10246 to i8
  %10248 = and i8 %10247, 1
  %10249 = xor i8 %10248, 1
  %10250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10249, i8* %10250, align 1, !tbaa !2446
  %10251 = xor i32 %10237, %10236
  %10252 = xor i32 %10251, %10238
  %10253 = lshr i32 %10252, 4
  %10254 = trunc i32 %10253 to i8
  %10255 = and i8 %10254, 1
  %10256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10255, i8* %10256, align 1, !tbaa !2450
  %10257 = icmp eq i32 %10238, 0
  %10258 = zext i1 %10257 to i8
  %10259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10258, i8* %10259, align 1, !tbaa !2447
  %10260 = lshr i32 %10238, 31
  %10261 = trunc i32 %10260 to i8
  %10262 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10261, i8* %10262, align 1, !tbaa !2448
  %10263 = lshr i32 %10236, 31
  %10264 = lshr i32 %10237, 31
  %10265 = xor i32 %10260, %10263
  %10266 = xor i32 %10260, %10264
  %10267 = add nuw nsw i32 %10265, %10266
  %10268 = icmp eq i32 %10267, 2
  %10269 = zext i1 %10268 to i8
  %10270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10269, i8* %10270, align 1, !tbaa !2449
  %10271 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10272 = load i32, i32* %EAX
  %10273 = zext i32 %10272 to i64
  %10274 = load i64, i64* %PC
  %10275 = add i64 %10274, 4
  store i64 %10275, i64* %PC
  %10276 = sitofp i32 %10272 to double
  %10277 = bitcast i8* %10271 to double*
  store double %10276, double* %10277, align 1, !tbaa !2451
  %10278 = load i64, i64* %PC
  %10279 = add i64 %10278, 7
  store i64 %10279, i64* %PC
  %10280 = load i32, i32* bitcast (%L_type* @L to i32*)
  %10281 = zext i32 %10280 to i64
  store i64 %10281, i64* %RAX, align 8, !tbaa !2428
  %10282 = load i64, i64* %RAX
  %10283 = load i64, i64* %PC
  %10284 = add i64 %10283, 3
  store i64 %10284, i64* %PC
  %10285 = trunc i64 %10282 to i32
  %10286 = sub i32 %10285, 1
  %10287 = zext i32 %10286 to i64
  store i64 %10287, i64* %RAX, align 8, !tbaa !2428
  %10288 = icmp ult i32 %10285, 1
  %10289 = zext i1 %10288 to i8
  %10290 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10289, i8* %10290, align 1, !tbaa !2432
  %10291 = and i32 %10286, 255
  %10292 = call i32 @llvm.ctpop.i32(i32 %10291) #17
  %10293 = trunc i32 %10292 to i8
  %10294 = and i8 %10293, 1
  %10295 = xor i8 %10294, 1
  %10296 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10295, i8* %10296, align 1, !tbaa !2446
  %10297 = xor i64 1, %10282
  %10298 = trunc i64 %10297 to i32
  %10299 = xor i32 %10298, %10286
  %10300 = lshr i32 %10299, 4
  %10301 = trunc i32 %10300 to i8
  %10302 = and i8 %10301, 1
  %10303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10302, i8* %10303, align 1, !tbaa !2450
  %10304 = icmp eq i32 %10286, 0
  %10305 = zext i1 %10304 to i8
  %10306 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10305, i8* %10306, align 1, !tbaa !2447
  %10307 = lshr i32 %10286, 31
  %10308 = trunc i32 %10307 to i8
  %10309 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10308, i8* %10309, align 1, !tbaa !2448
  %10310 = lshr i32 %10285, 31
  %10311 = xor i32 %10307, %10310
  %10312 = add nuw nsw i32 %10311, %10310
  %10313 = icmp eq i32 %10312, 2
  %10314 = zext i1 %10313 to i8
  %10315 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10314, i8* %10315, align 1, !tbaa !2449
  %10316 = load i32, i32* %EAX
  %10317 = zext i32 %10316 to i64
  %10318 = load i64, i64* %PC
  %10319 = add i64 %10318, 3
  store i64 %10319, i64* %PC
  %10320 = shl i64 %10317, 32
  %10321 = ashr exact i64 %10320, 32
  store i64 %10321, i64* %RDX, align 8, !tbaa !2428
  %10322 = load i64, i64* %RDX
  %10323 = mul i64 %10322, 8
  %10324 = add i64 %10323, ptrtoint (%E1_type* @E1 to i64)
  %10325 = bitcast %union.vec128_t* %XMM0 to i8*
  %10326 = load i64, i64* %PC
  %10327 = add i64 %10326, 9
  store i64 %10327, i64* %PC
  %10328 = bitcast i8* %10325 to double*
  %10329 = load double, double* %10328, align 1
  %10330 = inttoptr i64 %10324 to double*
  store double %10329, double* %10330
  %10331 = load i64, i64* %PC
  %10332 = add i64 %10331, 7
  store i64 %10332, i64* %PC
  %10333 = load i32, i32* bitcast (%J_type* @J to i32*)
  %10334 = zext i32 %10333 to i64
  store i64 %10334, i64* %RAX, align 8, !tbaa !2428
  %10335 = load i64, i64* %RAX
  %10336 = load i64, i64* %PC
  %10337 = add i64 %10336, 8
  store i64 %10337, i64* %PC
  %10338 = load i32, i32* bitcast (%K_type* @K to i32*)
  %10339 = shl i64 %10335, 32
  %10340 = ashr exact i64 %10339, 32
  %10341 = sext i32 %10338 to i64
  %10342 = mul nsw i64 %10341, %10340
  %10343 = trunc i64 %10342 to i32
  %10344 = and i64 %10342, 4294967295
  store i64 %10344, i64* %RAX, align 8, !tbaa !2428
  %10345 = shl i64 %10342, 32
  %10346 = ashr exact i64 %10345, 32
  %10347 = icmp ne i64 %10346, %10342
  %10348 = zext i1 %10347 to i8
  %10349 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10348, i8* %10349, align 1, !tbaa !2432
  %10350 = and i32 %10343, 255
  %10351 = call i32 @llvm.ctpop.i32(i32 %10350) #17
  %10352 = trunc i32 %10351 to i8
  %10353 = and i8 %10352, 1
  %10354 = xor i8 %10353, 1
  %10355 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10354, i8* %10355, align 1, !tbaa !2446
  %10356 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10356, align 1, !tbaa !2450
  %10357 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %10357, align 1, !tbaa !2447
  %10358 = lshr i32 %10343, 31
  %10359 = trunc i32 %10358 to i8
  %10360 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10359, i8* %10360, align 1, !tbaa !2448
  %10361 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10348, i8* %10361, align 1, !tbaa !2449
  %10362 = load i64, i64* %RAX
  %10363 = load i64, i64* %PC
  %10364 = add i64 %10363, 8
  store i64 %10364, i64* %PC
  %10365 = load i32, i32* bitcast (%L_type* @L to i32*)
  %10366 = shl i64 %10362, 32
  %10367 = ashr exact i64 %10366, 32
  %10368 = sext i32 %10365 to i64
  %10369 = mul nsw i64 %10368, %10367
  %10370 = trunc i64 %10369 to i32
  %10371 = and i64 %10369, 4294967295
  store i64 %10371, i64* %RAX, align 8, !tbaa !2428
  %10372 = shl i64 %10369, 32
  %10373 = ashr exact i64 %10372, 32
  %10374 = icmp ne i64 %10373, %10369
  %10375 = zext i1 %10374 to i8
  %10376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10375, i8* %10376, align 1, !tbaa !2432
  %10377 = and i32 %10370, 255
  %10378 = call i32 @llvm.ctpop.i32(i32 %10377) #17
  %10379 = trunc i32 %10378 to i8
  %10380 = and i8 %10379, 1
  %10381 = xor i8 %10380, 1
  %10382 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10381, i8* %10382, align 1, !tbaa !2446
  %10383 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10383, align 1, !tbaa !2450
  %10384 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %10384, align 1, !tbaa !2447
  %10385 = lshr i32 %10370, 31
  %10386 = trunc i32 %10385 to i8
  %10387 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10386, i8* %10387, align 1, !tbaa !2448
  %10388 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10375, i8* %10388, align 1, !tbaa !2449
  %10389 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10390 = load i32, i32* %EAX
  %10391 = zext i32 %10390 to i64
  %10392 = load i64, i64* %PC
  %10393 = add i64 %10392, 4
  store i64 %10393, i64* %PC
  %10394 = sitofp i32 %10390 to double
  %10395 = bitcast i8* %10389 to double*
  store double %10394, double* %10395, align 1, !tbaa !2451
  %10396 = load i64, i64* %PC
  %10397 = add i64 %10396, 7
  store i64 %10397, i64* %PC
  %10398 = load i32, i32* bitcast (%K_type* @K to i32*)
  %10399 = zext i32 %10398 to i64
  store i64 %10399, i64* %RAX, align 8, !tbaa !2428
  %10400 = load i64, i64* %RAX
  %10401 = load i64, i64* %PC
  %10402 = add i64 %10401, 3
  store i64 %10402, i64* %PC
  %10403 = trunc i64 %10400 to i32
  %10404 = sub i32 %10403, 1
  %10405 = zext i32 %10404 to i64
  store i64 %10405, i64* %RAX, align 8, !tbaa !2428
  %10406 = icmp ult i32 %10403, 1
  %10407 = zext i1 %10406 to i8
  %10408 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10407, i8* %10408, align 1, !tbaa !2432
  %10409 = and i32 %10404, 255
  %10410 = call i32 @llvm.ctpop.i32(i32 %10409) #17
  %10411 = trunc i32 %10410 to i8
  %10412 = and i8 %10411, 1
  %10413 = xor i8 %10412, 1
  %10414 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10413, i8* %10414, align 1, !tbaa !2446
  %10415 = xor i64 1, %10400
  %10416 = trunc i64 %10415 to i32
  %10417 = xor i32 %10416, %10404
  %10418 = lshr i32 %10417, 4
  %10419 = trunc i32 %10418 to i8
  %10420 = and i8 %10419, 1
  %10421 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10420, i8* %10421, align 1, !tbaa !2450
  %10422 = icmp eq i32 %10404, 0
  %10423 = zext i1 %10422 to i8
  %10424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10423, i8* %10424, align 1, !tbaa !2447
  %10425 = lshr i32 %10404, 31
  %10426 = trunc i32 %10425 to i8
  %10427 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10426, i8* %10427, align 1, !tbaa !2448
  %10428 = lshr i32 %10403, 31
  %10429 = xor i32 %10425, %10428
  %10430 = add nuw nsw i32 %10429, %10428
  %10431 = icmp eq i32 %10430, 2
  %10432 = zext i1 %10431 to i8
  %10433 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10432, i8* %10433, align 1, !tbaa !2449
  %10434 = load i32, i32* %EAX
  %10435 = zext i32 %10434 to i64
  %10436 = load i64, i64* %PC
  %10437 = add i64 %10436, 3
  store i64 %10437, i64* %PC
  %10438 = shl i64 %10435, 32
  %10439 = ashr exact i64 %10438, 32
  store i64 %10439, i64* %RDX, align 8, !tbaa !2428
  %10440 = load i64, i64* %RDX
  %10441 = mul i64 %10440, 8
  %10442 = add i64 %10441, ptrtoint (%E1_type* @E1 to i64)
  %10443 = bitcast %union.vec128_t* %XMM0 to i8*
  %10444 = load i64, i64* %PC
  %10445 = add i64 %10444, 9
  store i64 %10445, i64* %PC
  %10446 = bitcast i8* %10443 to double*
  %10447 = load double, double* %10446, align 1
  %10448 = inttoptr i64 %10442 to double*
  store double %10447, double* %10448
  %10449 = load i64, i64* %RBP
  %10450 = sub i64 %10449, 24
  %10451 = load i64, i64* %PC
  %10452 = add i64 %10451, 4
  store i64 %10452, i64* %PC
  %10453 = inttoptr i64 %10450 to i64*
  %10454 = load i64, i64* %10453
  store i64 %10454, i64* %RAX, align 8, !tbaa !2428
  %10455 = load i64, i64* %RAX
  %10456 = load i64, i64* %PC
  %10457 = add i64 %10456, 4
  store i64 %10457, i64* %PC
  %10458 = add i64 1, %10455
  store i64 %10458, i64* %RAX, align 8, !tbaa !2428
  %10459 = icmp ult i64 %10458, %10455
  %10460 = icmp ult i64 %10458, 1
  %10461 = or i1 %10459, %10460
  %10462 = zext i1 %10461 to i8
  %10463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10462, i8* %10463, align 1, !tbaa !2432
  %10464 = trunc i64 %10458 to i32
  %10465 = and i32 %10464, 255
  %10466 = call i32 @llvm.ctpop.i32(i32 %10465) #17
  %10467 = trunc i32 %10466 to i8
  %10468 = and i8 %10467, 1
  %10469 = xor i8 %10468, 1
  %10470 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10469, i8* %10470, align 1, !tbaa !2446
  %10471 = xor i64 1, %10455
  %10472 = xor i64 %10471, %10458
  %10473 = lshr i64 %10472, 4
  %10474 = trunc i64 %10473 to i8
  %10475 = and i8 %10474, 1
  %10476 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10475, i8* %10476, align 1, !tbaa !2450
  %10477 = icmp eq i64 %10458, 0
  %10478 = zext i1 %10477 to i8
  %10479 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10478, i8* %10479, align 1, !tbaa !2447
  %10480 = lshr i64 %10458, 63
  %10481 = trunc i64 %10480 to i8
  %10482 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10481, i8* %10482, align 1, !tbaa !2448
  %10483 = lshr i64 %10455, 63
  %10484 = xor i64 %10480, %10483
  %10485 = add nuw nsw i64 %10484, %10480
  %10486 = icmp eq i64 %10485, 2
  %10487 = zext i1 %10486 to i8
  %10488 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10487, i8* %10488, align 1, !tbaa !2449
  %10489 = load i64, i64* %RBP
  %10490 = sub i64 %10489, 24
  %10491 = load i64, i64* %RAX
  %10492 = load i64, i64* %PC
  %10493 = add i64 %10492, 4
  store i64 %10493, i64* %PC
  %10494 = inttoptr i64 %10490 to i64*
  store i64 %10491, i64* %10494
  %10495 = load i64, i64* %PC
  %10496 = sub i64 %10495, 254
  %10497 = load i64, i64* %PC
  %10498 = add i64 %10497, 5
  store i64 %10498, i64* %PC
  %10499 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10496, i64* %10499, align 8, !tbaa !2428
  br label %block_400e7b

block_400a57:                                     ; preds = %block_400a49
  %10500 = load i64, i64* %PC
  %10501 = add i64 %10500, 10
  store i64 %10501, i64* %PC
  store i64 -9223372036854775808, i64* %RAX, align 8, !tbaa !2428
  %10502 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10503 = load i64, i64* %RBP
  %10504 = sub i64 %10503, 112
  %10505 = load i64, i64* %PC
  %10506 = add i64 %10505, 5
  store i64 %10506, i64* %PC
  %10507 = inttoptr i64 %10504 to double*
  %10508 = load double, double* %10507
  %10509 = bitcast i8* %10502 to double*
  store double %10508, double* %10509, align 1, !tbaa !2451
  %10510 = getelementptr inbounds i8, i8* %10502, i64 8
  %10511 = bitcast i8* %10510 to double*
  store double 0.000000e+00, double* %10511, align 1, !tbaa !2451
  %10512 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10513 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10514 = load i64, i64* %RBP
  %10515 = sub i64 %10514, 120
  %10516 = load i64, i64* %PC
  %10517 = add i64 %10516, 5
  store i64 %10517, i64* %PC
  %10518 = bitcast i8* %10513 to double*
  %10519 = load double, double* %10518, align 1
  %10520 = getelementptr inbounds i8, i8* %10513, i64 8
  %10521 = bitcast i8* %10520 to i64*
  %10522 = load i64, i64* %10521, align 1
  %10523 = inttoptr i64 %10515 to double*
  %10524 = load double, double* %10523
  %10525 = fadd double %10519, %10524
  %10526 = bitcast i8* %10512 to double*
  store double %10525, double* %10526, align 1, !tbaa !2451
  %10527 = getelementptr inbounds i8, i8* %10512, i64 8
  %10528 = bitcast i8* %10527 to i64*
  store i64 %10522, i64* %10528, align 1, !tbaa !2451
  %10529 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10530 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10531 = load i64, i64* %RBP
  %10532 = sub i64 %10531, 128
  %10533 = load i64, i64* %PC
  %10534 = add i64 %10533, 5
  store i64 %10534, i64* %PC
  %10535 = bitcast i8* %10530 to double*
  %10536 = load double, double* %10535, align 1
  %10537 = getelementptr inbounds i8, i8* %10530, i64 8
  %10538 = bitcast i8* %10537 to i64*
  %10539 = load i64, i64* %10538, align 1
  %10540 = inttoptr i64 %10532 to double*
  %10541 = load double, double* %10540
  %10542 = fadd double %10536, %10541
  %10543 = bitcast i8* %10529 to double*
  store double %10542, double* %10543, align 1, !tbaa !2451
  %10544 = getelementptr inbounds i8, i8* %10529, i64 8
  %10545 = bitcast i8* %10544 to i64*
  store i64 %10539, i64* %10545, align 1, !tbaa !2451
  %10546 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10547 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10548 = load i64, i64* %RBP
  %10549 = sub i64 %10548, 136
  %10550 = load i64, i64* %PC
  %10551 = add i64 %10550, 8
  store i64 %10551, i64* %PC
  %10552 = bitcast i8* %10547 to double*
  %10553 = load double, double* %10552, align 1
  %10554 = getelementptr inbounds i8, i8* %10547, i64 8
  %10555 = bitcast i8* %10554 to i64*
  %10556 = load i64, i64* %10555, align 1
  %10557 = inttoptr i64 %10549 to double*
  %10558 = load double, double* %10557
  %10559 = fsub double %10553, %10558
  %10560 = bitcast i8* %10546 to double*
  store double %10559, double* %10560, align 1, !tbaa !2451
  %10561 = getelementptr inbounds i8, i8* %10546, i64 8
  %10562 = bitcast i8* %10561 to i64*
  store i64 %10556, i64* %10562, align 1, !tbaa !2451
  %10563 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10564 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10565 = load i64, i64* %PC
  %10566 = add i64 %10565, 9
  store i64 %10566, i64* %PC
  %10567 = bitcast i8* %10564 to double*
  %10568 = load double, double* %10567, align 1
  %10569 = getelementptr inbounds i8, i8* %10564, i64 8
  %10570 = bitcast i8* %10569 to i64*
  %10571 = load i64, i64* %10570, align 1
  %10572 = load double, double* bitcast (%T_type* @T to double*)
  %10573 = fmul double %10568, %10572
  %10574 = bitcast i8* %10563 to double*
  store double %10573, double* %10574, align 1, !tbaa !2451
  %10575 = getelementptr inbounds i8, i8* %10563, i64 8
  %10576 = bitcast i8* %10575 to i64*
  store i64 %10571, i64* %10576, align 1, !tbaa !2451
  %10577 = load i64, i64* %RBP
  %10578 = sub i64 %10577, 112
  %10579 = bitcast %union.vec128_t* %XMM0 to i8*
  %10580 = load i64, i64* %PC
  %10581 = add i64 %10580, 5
  store i64 %10581, i64* %PC
  %10582 = bitcast i8* %10579 to double*
  %10583 = load double, double* %10582, align 1
  %10584 = inttoptr i64 %10578 to double*
  store double %10583, double* %10584
  %10585 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10586 = load i64, i64* %RBP
  %10587 = sub i64 %10586, 112
  %10588 = load i64, i64* %PC
  %10589 = add i64 %10588, 5
  store i64 %10589, i64* %PC
  %10590 = inttoptr i64 %10587 to double*
  %10591 = load double, double* %10590
  %10592 = bitcast i8* %10585 to double*
  store double %10591, double* %10592, align 1, !tbaa !2451
  %10593 = getelementptr inbounds i8, i8* %10585, i64 8
  %10594 = bitcast i8* %10593 to double*
  store double 0.000000e+00, double* %10594, align 1, !tbaa !2451
  %10595 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10596 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10597 = load i64, i64* %RBP
  %10598 = sub i64 %10597, 120
  %10599 = load i64, i64* %PC
  %10600 = add i64 %10599, 5
  store i64 %10600, i64* %PC
  %10601 = bitcast i8* %10596 to double*
  %10602 = load double, double* %10601, align 1
  %10603 = getelementptr inbounds i8, i8* %10596, i64 8
  %10604 = bitcast i8* %10603 to i64*
  %10605 = load i64, i64* %10604, align 1
  %10606 = inttoptr i64 %10598 to double*
  %10607 = load double, double* %10606
  %10608 = fadd double %10602, %10607
  %10609 = bitcast i8* %10595 to double*
  store double %10608, double* %10609, align 1, !tbaa !2451
  %10610 = getelementptr inbounds i8, i8* %10595, i64 8
  %10611 = bitcast i8* %10610 to i64*
  store i64 %10605, i64* %10611, align 1, !tbaa !2451
  %10612 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10613 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10614 = load i64, i64* %RBP
  %10615 = sub i64 %10614, 128
  %10616 = load i64, i64* %PC
  %10617 = add i64 %10616, 5
  store i64 %10617, i64* %PC
  %10618 = bitcast i8* %10613 to double*
  %10619 = load double, double* %10618, align 1
  %10620 = getelementptr inbounds i8, i8* %10613, i64 8
  %10621 = bitcast i8* %10620 to i64*
  %10622 = load i64, i64* %10621, align 1
  %10623 = inttoptr i64 %10615 to double*
  %10624 = load double, double* %10623
  %10625 = fsub double %10619, %10624
  %10626 = bitcast i8* %10612 to double*
  store double %10625, double* %10626, align 1, !tbaa !2451
  %10627 = getelementptr inbounds i8, i8* %10612, i64 8
  %10628 = bitcast i8* %10627 to i64*
  store i64 %10622, i64* %10628, align 1, !tbaa !2451
  %10629 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10630 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10631 = load i64, i64* %RBP
  %10632 = sub i64 %10631, 136
  %10633 = load i64, i64* %PC
  %10634 = add i64 %10633, 8
  store i64 %10634, i64* %PC
  %10635 = bitcast i8* %10630 to double*
  %10636 = load double, double* %10635, align 1
  %10637 = getelementptr inbounds i8, i8* %10630, i64 8
  %10638 = bitcast i8* %10637 to i64*
  %10639 = load i64, i64* %10638, align 1
  %10640 = inttoptr i64 %10632 to double*
  %10641 = load double, double* %10640
  %10642 = fadd double %10636, %10641
  %10643 = bitcast i8* %10629 to double*
  store double %10642, double* %10643, align 1, !tbaa !2451
  %10644 = getelementptr inbounds i8, i8* %10629, i64 8
  %10645 = bitcast i8* %10644 to i64*
  store i64 %10639, i64* %10645, align 1, !tbaa !2451
  %10646 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10647 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10648 = load i64, i64* %PC
  %10649 = add i64 %10648, 9
  store i64 %10649, i64* %PC
  %10650 = bitcast i8* %10647 to double*
  %10651 = load double, double* %10650, align 1
  %10652 = getelementptr inbounds i8, i8* %10647, i64 8
  %10653 = bitcast i8* %10652 to i64*
  %10654 = load i64, i64* %10653, align 1
  %10655 = load double, double* bitcast (%T_type* @T to double*)
  %10656 = fmul double %10651, %10655
  %10657 = bitcast i8* %10646 to double*
  store double %10656, double* %10657, align 1, !tbaa !2451
  %10658 = getelementptr inbounds i8, i8* %10646, i64 8
  %10659 = bitcast i8* %10658 to i64*
  store i64 %10654, i64* %10659, align 1, !tbaa !2451
  %10660 = load i64, i64* %RBP
  %10661 = sub i64 %10660, 120
  %10662 = bitcast %union.vec128_t* %XMM0 to i8*
  %10663 = load i64, i64* %PC
  %10664 = add i64 %10663, 5
  store i64 %10664, i64* %PC
  %10665 = bitcast i8* %10662 to double*
  %10666 = load double, double* %10665, align 1
  %10667 = inttoptr i64 %10661 to double*
  store double %10666, double* %10667
  %10668 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10669 = load i64, i64* %RBP
  %10670 = sub i64 %10669, 112
  %10671 = load i64, i64* %PC
  %10672 = add i64 %10671, 5
  store i64 %10672, i64* %PC
  %10673 = inttoptr i64 %10670 to double*
  %10674 = load double, double* %10673
  %10675 = bitcast i8* %10668 to double*
  store double %10674, double* %10675, align 1, !tbaa !2451
  %10676 = getelementptr inbounds i8, i8* %10668, i64 8
  %10677 = bitcast i8* %10676 to double*
  store double 0.000000e+00, double* %10677, align 1, !tbaa !2451
  %10678 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10679 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10680 = load i64, i64* %RBP
  %10681 = sub i64 %10680, 120
  %10682 = load i64, i64* %PC
  %10683 = add i64 %10682, 5
  store i64 %10683, i64* %PC
  %10684 = bitcast i8* %10679 to double*
  %10685 = load double, double* %10684, align 1
  %10686 = getelementptr inbounds i8, i8* %10679, i64 8
  %10687 = bitcast i8* %10686 to i64*
  %10688 = load i64, i64* %10687, align 1
  %10689 = inttoptr i64 %10681 to double*
  %10690 = load double, double* %10689
  %10691 = fsub double %10685, %10690
  %10692 = bitcast i8* %10678 to double*
  store double %10691, double* %10692, align 1, !tbaa !2451
  %10693 = getelementptr inbounds i8, i8* %10678, i64 8
  %10694 = bitcast i8* %10693 to i64*
  store i64 %10688, i64* %10694, align 1, !tbaa !2451
  %10695 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10696 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10697 = load i64, i64* %RBP
  %10698 = sub i64 %10697, 128
  %10699 = load i64, i64* %PC
  %10700 = add i64 %10699, 5
  store i64 %10700, i64* %PC
  %10701 = bitcast i8* %10696 to double*
  %10702 = load double, double* %10701, align 1
  %10703 = getelementptr inbounds i8, i8* %10696, i64 8
  %10704 = bitcast i8* %10703 to i64*
  %10705 = load i64, i64* %10704, align 1
  %10706 = inttoptr i64 %10698 to double*
  %10707 = load double, double* %10706
  %10708 = fadd double %10702, %10707
  %10709 = bitcast i8* %10695 to double*
  store double %10708, double* %10709, align 1, !tbaa !2451
  %10710 = getelementptr inbounds i8, i8* %10695, i64 8
  %10711 = bitcast i8* %10710 to i64*
  store i64 %10705, i64* %10711, align 1, !tbaa !2451
  %10712 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10713 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10714 = load i64, i64* %RBP
  %10715 = sub i64 %10714, 136
  %10716 = load i64, i64* %PC
  %10717 = add i64 %10716, 8
  store i64 %10717, i64* %PC
  %10718 = bitcast i8* %10713 to double*
  %10719 = load double, double* %10718, align 1
  %10720 = getelementptr inbounds i8, i8* %10713, i64 8
  %10721 = bitcast i8* %10720 to i64*
  %10722 = load i64, i64* %10721, align 1
  %10723 = inttoptr i64 %10715 to double*
  %10724 = load double, double* %10723
  %10725 = fadd double %10719, %10724
  %10726 = bitcast i8* %10712 to double*
  store double %10725, double* %10726, align 1, !tbaa !2451
  %10727 = getelementptr inbounds i8, i8* %10712, i64 8
  %10728 = bitcast i8* %10727 to i64*
  store i64 %10722, i64* %10728, align 1, !tbaa !2451
  %10729 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10730 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10731 = load i64, i64* %PC
  %10732 = add i64 %10731, 9
  store i64 %10732, i64* %PC
  %10733 = bitcast i8* %10730 to double*
  %10734 = load double, double* %10733, align 1
  %10735 = getelementptr inbounds i8, i8* %10730, i64 8
  %10736 = bitcast i8* %10735 to i64*
  %10737 = load i64, i64* %10736, align 1
  %10738 = load double, double* bitcast (%T_type* @T to double*)
  %10739 = fmul double %10734, %10738
  %10740 = bitcast i8* %10729 to double*
  store double %10739, double* %10740, align 1, !tbaa !2451
  %10741 = getelementptr inbounds i8, i8* %10729, i64 8
  %10742 = bitcast i8* %10741 to i64*
  store i64 %10737, i64* %10742, align 1, !tbaa !2451
  %10743 = load i64, i64* %RBP
  %10744 = sub i64 %10743, 128
  %10745 = bitcast %union.vec128_t* %XMM0 to i8*
  %10746 = load i64, i64* %PC
  %10747 = add i64 %10746, 5
  store i64 %10747, i64* %PC
  %10748 = bitcast i8* %10745 to double*
  %10749 = load double, double* %10748, align 1
  %10750 = inttoptr i64 %10744 to double*
  store double %10749, double* %10750
  %10751 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10752 = load i64, i64* %RBP
  %10753 = sub i64 %10752, 112
  %10754 = load i64, i64* %PC
  %10755 = add i64 %10754, 5
  store i64 %10755, i64* %PC
  %10756 = inttoptr i64 %10753 to double*
  %10757 = load double, double* %10756
  %10758 = bitcast i8* %10751 to double*
  store double %10757, double* %10758, align 1, !tbaa !2451
  %10759 = getelementptr inbounds i8, i8* %10751, i64 8
  %10760 = bitcast i8* %10759 to double*
  store double 0.000000e+00, double* %10760, align 1, !tbaa !2451
  %10761 = bitcast %union.vec128_t* %XMM0 to i8*
  %10762 = load i64, i64* %PC
  %10763 = add i64 %10762, 5
  store i64 %10763, i64* %PC
  %10764 = bitcast i8* %10761 to i64*
  %10765 = load i64, i64* %10764, align 1
  store i64 %10765, i64* %RCX, align 1, !tbaa !2428
  %10766 = load i64, i64* %RCX
  %10767 = load i64, i64* %RAX
  %10768 = load i64, i64* %PC
  %10769 = add i64 %10768, 3
  store i64 %10769, i64* %PC
  %10770 = xor i64 %10767, %10766
  store i64 %10770, i64* %RCX, align 8, !tbaa !2428
  %10771 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %10771, align 1, !tbaa !2432
  %10772 = trunc i64 %10770 to i32
  %10773 = and i32 %10772, 255
  %10774 = call i32 @llvm.ctpop.i32(i32 %10773) #17
  %10775 = trunc i32 %10774 to i8
  %10776 = and i8 %10775, 1
  %10777 = xor i8 %10776, 1
  %10778 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10777, i8* %10778, align 1, !tbaa !2446
  %10779 = icmp eq i64 %10770, 0
  %10780 = zext i1 %10779 to i8
  %10781 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10780, i8* %10781, align 1, !tbaa !2447
  %10782 = lshr i64 %10770, 63
  %10783 = trunc i64 %10782 to i8
  %10784 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10783, i8* %10784, align 1, !tbaa !2448
  %10785 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10785, align 1, !tbaa !2449
  %10786 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10786, align 1, !tbaa !2450
  %10787 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10788 = load i64, i64* %RCX
  %10789 = load i64, i64* %PC
  %10790 = add i64 %10789, 5
  store i64 %10790, i64* %PC
  %10791 = bitcast i8* %10787 to i64*
  store i64 %10788, i64* %10791, align 1, !tbaa !2428
  %10792 = getelementptr inbounds i8, i8* %10787, i64 8
  %10793 = bitcast i8* %10792 to i64*
  store i64 0, i64* %10793, align 1, !tbaa !2428
  %10794 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10795 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10796 = load i64, i64* %RBP
  %10797 = sub i64 %10796, 120
  %10798 = load i64, i64* %PC
  %10799 = add i64 %10798, 5
  store i64 %10799, i64* %PC
  %10800 = bitcast i8* %10795 to double*
  %10801 = load double, double* %10800, align 1
  %10802 = getelementptr inbounds i8, i8* %10795, i64 8
  %10803 = bitcast i8* %10802 to i64*
  %10804 = load i64, i64* %10803, align 1
  %10805 = inttoptr i64 %10797 to double*
  %10806 = load double, double* %10805
  %10807 = fadd double %10801, %10806
  %10808 = bitcast i8* %10794 to double*
  store double %10807, double* %10808, align 1, !tbaa !2451
  %10809 = getelementptr inbounds i8, i8* %10794, i64 8
  %10810 = bitcast i8* %10809 to i64*
  store i64 %10804, i64* %10810, align 1, !tbaa !2451
  %10811 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10812 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10813 = load i64, i64* %RBP
  %10814 = sub i64 %10813, 128
  %10815 = load i64, i64* %PC
  %10816 = add i64 %10815, 5
  store i64 %10816, i64* %PC
  %10817 = bitcast i8* %10812 to double*
  %10818 = load double, double* %10817, align 1
  %10819 = getelementptr inbounds i8, i8* %10812, i64 8
  %10820 = bitcast i8* %10819 to i64*
  %10821 = load i64, i64* %10820, align 1
  %10822 = inttoptr i64 %10814 to double*
  %10823 = load double, double* %10822
  %10824 = fadd double %10818, %10823
  %10825 = bitcast i8* %10811 to double*
  store double %10824, double* %10825, align 1, !tbaa !2451
  %10826 = getelementptr inbounds i8, i8* %10811, i64 8
  %10827 = bitcast i8* %10826 to i64*
  store i64 %10821, i64* %10827, align 1, !tbaa !2451
  %10828 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10829 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10830 = load i64, i64* %RBP
  %10831 = sub i64 %10830, 136
  %10832 = load i64, i64* %PC
  %10833 = add i64 %10832, 8
  store i64 %10833, i64* %PC
  %10834 = bitcast i8* %10829 to double*
  %10835 = load double, double* %10834, align 1
  %10836 = getelementptr inbounds i8, i8* %10829, i64 8
  %10837 = bitcast i8* %10836 to i64*
  %10838 = load i64, i64* %10837, align 1
  %10839 = inttoptr i64 %10831 to double*
  %10840 = load double, double* %10839
  %10841 = fadd double %10835, %10840
  %10842 = bitcast i8* %10828 to double*
  store double %10841, double* %10842, align 1, !tbaa !2451
  %10843 = getelementptr inbounds i8, i8* %10828, i64 8
  %10844 = bitcast i8* %10843 to i64*
  store i64 %10838, i64* %10844, align 1, !tbaa !2451
  %10845 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10846 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10847 = load i64, i64* %PC
  %10848 = add i64 %10847, 9
  store i64 %10848, i64* %PC
  %10849 = bitcast i8* %10846 to double*
  %10850 = load double, double* %10849, align 1
  %10851 = getelementptr inbounds i8, i8* %10846, i64 8
  %10852 = bitcast i8* %10851 to i64*
  %10853 = load i64, i64* %10852, align 1
  %10854 = load double, double* bitcast (%T_type* @T to double*)
  %10855 = fmul double %10850, %10854
  %10856 = bitcast i8* %10845 to double*
  store double %10855, double* %10856, align 1, !tbaa !2451
  %10857 = getelementptr inbounds i8, i8* %10845, i64 8
  %10858 = bitcast i8* %10857 to i64*
  store i64 %10853, i64* %10858, align 1, !tbaa !2451
  %10859 = load i64, i64* %RBP
  %10860 = sub i64 %10859, 136
  %10861 = bitcast %union.vec128_t* %XMM0 to i8*
  %10862 = load i64, i64* %PC
  %10863 = add i64 %10862, 8
  store i64 %10863, i64* %PC
  %10864 = bitcast i8* %10861 to double*
  %10865 = load double, double* %10864, align 1
  %10866 = inttoptr i64 %10860 to double*
  store double %10865, double* %10866
  %10867 = load i64, i64* %RBP
  %10868 = sub i64 %10867, 24
  %10869 = load i64, i64* %PC
  %10870 = add i64 %10869, 4
  store i64 %10870, i64* %PC
  %10871 = inttoptr i64 %10868 to i64*
  %10872 = load i64, i64* %10871
  store i64 %10872, i64* %RAX, align 8, !tbaa !2428
  %10873 = load i64, i64* %RAX
  %10874 = load i64, i64* %PC
  %10875 = add i64 %10874, 4
  store i64 %10875, i64* %PC
  %10876 = add i64 1, %10873
  store i64 %10876, i64* %RAX, align 8, !tbaa !2428
  %10877 = icmp ult i64 %10876, %10873
  %10878 = icmp ult i64 %10876, 1
  %10879 = or i1 %10877, %10878
  %10880 = zext i1 %10879 to i8
  %10881 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10880, i8* %10881, align 1, !tbaa !2432
  %10882 = trunc i64 %10876 to i32
  %10883 = and i32 %10882, 255
  %10884 = call i32 @llvm.ctpop.i32(i32 %10883) #17
  %10885 = trunc i32 %10884 to i8
  %10886 = and i8 %10885, 1
  %10887 = xor i8 %10886, 1
  %10888 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10887, i8* %10888, align 1, !tbaa !2446
  %10889 = xor i64 1, %10873
  %10890 = xor i64 %10889, %10876
  %10891 = lshr i64 %10890, 4
  %10892 = trunc i64 %10891 to i8
  %10893 = and i8 %10892, 1
  %10894 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10893, i8* %10894, align 1, !tbaa !2450
  %10895 = icmp eq i64 %10876, 0
  %10896 = zext i1 %10895 to i8
  %10897 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10896, i8* %10897, align 1, !tbaa !2447
  %10898 = lshr i64 %10876, 63
  %10899 = trunc i64 %10898 to i8
  %10900 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10899, i8* %10900, align 1, !tbaa !2448
  %10901 = lshr i64 %10873, 63
  %10902 = xor i64 %10898, %10901
  %10903 = add nuw nsw i64 %10902, %10898
  %10904 = icmp eq i64 %10903, 2
  %10905 = zext i1 %10904 to i8
  %10906 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10905, i8* %10906, align 1, !tbaa !2449
  %10907 = load i64, i64* %RBP
  %10908 = sub i64 %10907, 24
  %10909 = load i64, i64* %RAX
  %10910 = load i64, i64* %PC
  %10911 = add i64 %10910, 4
  store i64 %10911, i64* %PC
  %10912 = inttoptr i64 %10908 to i64*
  store i64 %10909, i64* %10912
  %10913 = load i64, i64* %PC
  %10914 = sub i64 %10913, 200
  %10915 = load i64, i64* %PC
  %10916 = add i64 %10915, 5
  store i64 %10916, i64* %PC
  %10917 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10914, i64* %10917, align 8, !tbaa !2428
  br label %block_400a49

block_401486:                                     ; preds = %block_401444, %block_401456
  %MEMORY.24 = phi %struct.Memory* [ %MEMORY.26, %block_401444 ], [ %963, %block_401456 ]
  %10918 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10919 = load i64, i64* %PC
  %10920 = add i64 %10919, 8
  store i64 %10920, i64* %PC
  %10921 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4018b0__rodata_type* @seg_4018b0__rodata to i64), i64 64) to double*)
  %10922 = bitcast i8* %10918 to double*
  store double %10921, double* %10922, align 1, !tbaa !2451
  %10923 = getelementptr inbounds i8, i8* %10918, i64 8
  %10924 = bitcast i8* %10923 to double*
  store double 0.000000e+00, double* %10924, align 1, !tbaa !2451
  %10925 = load i64, i64* %RBP
  %10926 = sub i64 %10925, 144
  %10927 = bitcast %union.vec128_t* %XMM0 to i8*
  %10928 = load i64, i64* %PC
  %10929 = add i64 %10928, 8
  store i64 %10929, i64* %PC
  %10930 = bitcast i8* %10927 to double*
  %10931 = load double, double* %10930, align 1
  %10932 = inttoptr i64 %10926 to double*
  store double %10931, double* %10932
  %10933 = load i64, i64* %RBP
  %10934 = sub i64 %10933, 24
  %10935 = load i64, i64* %PC
  %10936 = add i64 %10935, 8
  store i64 %10936, i64* %PC
  %10937 = inttoptr i64 %10934 to i64*
  store i64 1, i64* %10937
  br label %block_40149e

block_400fed:                                     ; preds = %block_400fcd, %block_400ffb
  %MEMORY.25 = phi %struct.Memory* [ %MEMORY.23, %block_400fcd ], [ %7460, %block_400ffb ]
  %10938 = load i64, i64* %RBP
  %10939 = sub i64 %10938, 24
  %10940 = load i64, i64* %PC
  %10941 = add i64 %10940, 4
  store i64 %10941, i64* %PC
  %10942 = inttoptr i64 %10939 to i64*
  %10943 = load i64, i64* %10942
  store i64 %10943, i64* %RAX, align 8, !tbaa !2428
  %10944 = load i64, i64* %RAX
  %10945 = load i64, i64* %RBP
  %10946 = sub i64 %10945, 72
  %10947 = load i64, i64* %PC
  %10948 = add i64 %10947, 4
  store i64 %10948, i64* %PC
  %10949 = inttoptr i64 %10946 to i64*
  %10950 = load i64, i64* %10949
  %10951 = sub i64 %10944, %10950
  %10952 = icmp ugt i64 %10950, %10944
  %10953 = zext i1 %10952 to i8
  %10954 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10953, i8* %10954, align 1, !tbaa !2432
  %10955 = trunc i64 %10951 to i32
  %10956 = and i32 %10955, 255
  %10957 = call i32 @llvm.ctpop.i32(i32 %10956) #17
  %10958 = trunc i32 %10957 to i8
  %10959 = and i8 %10958, 1
  %10960 = xor i8 %10959, 1
  %10961 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10960, i8* %10961, align 1, !tbaa !2446
  %10962 = xor i64 %10950, %10944
  %10963 = xor i64 %10962, %10951
  %10964 = lshr i64 %10963, 4
  %10965 = trunc i64 %10964 to i8
  %10966 = and i8 %10965, 1
  %10967 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10966, i8* %10967, align 1, !tbaa !2450
  %10968 = icmp eq i64 %10951, 0
  %10969 = zext i1 %10968 to i8
  %10970 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10969, i8* %10970, align 1, !tbaa !2447
  %10971 = lshr i64 %10951, 63
  %10972 = trunc i64 %10971 to i8
  %10973 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10972, i8* %10973, align 1, !tbaa !2448
  %10974 = lshr i64 %10944, 63
  %10975 = lshr i64 %10950, 63
  %10976 = xor i64 %10975, %10974
  %10977 = xor i64 %10971, %10974
  %10978 = add nuw nsw i64 %10977, %10976
  %10979 = icmp eq i64 %10978, 2
  %10980 = zext i1 %10979 to i8
  %10981 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10980, i8* %10981, align 1, !tbaa !2449
  %10982 = load i64, i64* %PC
  %10983 = add i64 %10982, 495
  %10984 = load i64, i64* %PC
  %10985 = add i64 %10984, 6
  %10986 = load i64, i64* %PC
  %10987 = add i64 %10986, 6
  store i64 %10987, i64* %PC
  %10988 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10989 = load i8, i8* %10988, align 1, !tbaa !2447
  %10990 = icmp eq i8 %10989, 0
  %10991 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10992 = load i8, i8* %10991, align 1, !tbaa !2448
  %10993 = icmp ne i8 %10992, 0
  %10994 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %10995 = load i8, i8* %10994, align 1, !tbaa !2449
  %10996 = icmp ne i8 %10995, 0
  %10997 = xor i1 %10993, %10996
  %10998 = xor i1 %10997, true
  %10999 = and i1 %10990, %10998
  %11000 = zext i1 %10999 to i8
  store i8 %11000, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %11001 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11002 = select i1 %10999, i64 %10983, i64 %10985
  store i64 %11002, i64* %11001, align 8, !tbaa !2428
  %11003 = load i8, i8* %BRANCH_TAKEN
  %11004 = icmp eq i8 %11003, 1
  br i1 %11004, label %block_4011e4, label %block_400ffb

block_401265:                                     ; preds = %block_401257
  %11005 = sub i64 %9635, 160
  %11006 = load i64, i64* %PC
  %11007 = add i64 %11006, 7
  store i64 %11007, i64* %PC
  store i64 %11005, i64* %RDI, align 8, !tbaa !2428
  %11008 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11009 = load i64, i64* %RBP
  %11010 = sub i64 %11009, 144
  %11011 = load i64, i64* %PC
  %11012 = add i64 %11011, 8
  store i64 %11012, i64* %PC
  %11013 = inttoptr i64 %11010 to double*
  %11014 = load double, double* %11013
  %11015 = bitcast i8* %11008 to double*
  store double %11014, double* %11015, align 1, !tbaa !2451
  %11016 = getelementptr inbounds i8, i8* %11008, i64 8
  %11017 = bitcast i8* %11016 to double*
  store double 0.000000e+00, double* %11017, align 1, !tbaa !2451
  %11018 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11019 = load i64, i64* %RBP
  %11020 = sub i64 %11019, 152
  %11021 = load i64, i64* %PC
  %11022 = add i64 %11021, 8
  store i64 %11022, i64* %PC
  %11023 = inttoptr i64 %11020 to double*
  %11024 = load double, double* %11023
  %11025 = bitcast i8* %11018 to double*
  store double %11024, double* %11025, align 1, !tbaa !2451
  %11026 = getelementptr inbounds i8, i8* %11018, i64 8
  %11027 = bitcast i8* %11026 to double*
  store double 0.000000e+00, double* %11027, align 1, !tbaa !2451
  %11028 = load i64, i64* %PC
  %11029 = add i64 %11028, 1220
  %11030 = load i64, i64* %PC
  %11031 = add i64 %11030, 5
  %11032 = load i64, i64* %PC
  %11033 = add i64 %11032, 5
  store i64 %11033, i64* %PC
  %11034 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %11035 = load i64, i64* %11034, align 8, !tbaa !2428
  %11036 = add i64 %11035, -8
  %11037 = inttoptr i64 %11036 to i64*
  store i64 %11031, i64* %11037
  store i64 %11036, i64* %11034, align 8, !tbaa !2428
  %11038 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11029, i64* %11038, align 8, !tbaa !2428
  %11039 = load i64, i64* %PC
  %11040 = call %struct.Memory* @sub_401740_P3_renamed_(%struct.State* %0, i64 %11039, %struct.Memory* %MEMORY.22)
  %11041 = load i64, i64* %RBP
  %11042 = sub i64 %11041, 24
  %11043 = load i64, i64* %PC
  %11044 = add i64 %11043, 4
  store i64 %11044, i64* %PC
  %11045 = inttoptr i64 %11042 to i64*
  %11046 = load i64, i64* %11045
  store i64 %11046, i64* %RAX, align 8, !tbaa !2428
  %11047 = load i64, i64* %RAX
  %11048 = load i64, i64* %PC
  %11049 = add i64 %11048, 4
  store i64 %11049, i64* %PC
  %11050 = add i64 1, %11047
  store i64 %11050, i64* %RAX, align 8, !tbaa !2428
  %11051 = icmp ult i64 %11050, %11047
  %11052 = icmp ult i64 %11050, 1
  %11053 = or i1 %11051, %11052
  %11054 = zext i1 %11053 to i8
  %11055 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11054, i8* %11055, align 1, !tbaa !2432
  %11056 = trunc i64 %11050 to i32
  %11057 = and i32 %11056, 255
  %11058 = call i32 @llvm.ctpop.i32(i32 %11057) #17
  %11059 = trunc i32 %11058 to i8
  %11060 = and i8 %11059, 1
  %11061 = xor i8 %11060, 1
  %11062 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11061, i8* %11062, align 1, !tbaa !2446
  %11063 = xor i64 1, %11047
  %11064 = xor i64 %11063, %11050
  %11065 = lshr i64 %11064, 4
  %11066 = trunc i64 %11065 to i8
  %11067 = and i8 %11066, 1
  %11068 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11067, i8* %11068, align 1, !tbaa !2450
  %11069 = icmp eq i64 %11050, 0
  %11070 = zext i1 %11069 to i8
  %11071 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11070, i8* %11071, align 1, !tbaa !2447
  %11072 = lshr i64 %11050, 63
  %11073 = trunc i64 %11072 to i8
  %11074 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11073, i8* %11074, align 1, !tbaa !2448
  %11075 = lshr i64 %11047, 63
  %11076 = xor i64 %11072, %11075
  %11077 = add nuw nsw i64 %11076, %11072
  %11078 = icmp eq i64 %11077, 2
  %11079 = zext i1 %11078 to i8
  %11080 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11079, i8* %11080, align 1, !tbaa !2449
  %11081 = load i64, i64* %RBP
  %11082 = sub i64 %11081, 24
  %11083 = load i64, i64* %RAX
  %11084 = load i64, i64* %PC
  %11085 = add i64 %11084, 4
  store i64 %11085, i64* %PC
  %11086 = inttoptr i64 %11082 to i64*
  store i64 %11083, i64* %11086
  %11087 = load i64, i64* %PC
  %11088 = sub i64 %11087, 54
  %11089 = load i64, i64* %PC
  %11090 = add i64 %11089, 5
  store i64 %11090, i64* %PC
  %11091 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11088, i64* %11091, align 8, !tbaa !2428
  br label %block_401257

block_400885:                                     ; preds = %block_400857
  %11092 = load i64, i64* %RBP
  %11093 = sub i64 %11092, 16
  %11094 = load i64, i64* %PC
  %11095 = add i64 %11094, 4
  store i64 %11095, i64* %PC
  %11096 = inttoptr i64 %11093 to i64*
  %11097 = load i64, i64* %11096
  store i64 %11097, i64* %RAX, align 8, !tbaa !2428
  %11098 = load i64, i64* %RBP
  %11099 = sub i64 %11098, 172
  %11100 = load i64, i64* %PC
  %11101 = add i64 %11100, 7
  store i64 %11101, i64* %PC
  %11102 = inttoptr i64 %11099 to i32*
  %11103 = load i32, i32* %11102
  %11104 = sext i32 %11103 to i64
  store i64 %11104, i64* %RCX, align 8, !tbaa !2428
  %11105 = load i64, i64* %RAX
  %11106 = load i64, i64* %RCX
  %11107 = mul i64 %11106, 8
  %11108 = add i64 %11107, %11105
  %11109 = load i64, i64* %PC
  %11110 = add i64 %11109, 4
  store i64 %11110, i64* %PC
  %11111 = inttoptr i64 %11108 to i64*
  %11112 = load i64, i64* %11111
  store i64 %11112, i64* %RAX, align 8, !tbaa !2428
  %11113 = load i64, i64* %RAX
  %11114 = load i64, i64* %PC
  %11115 = add i64 %11114, 3
  store i64 %11115, i64* %PC
  %11116 = inttoptr i64 %11113 to i8*
  %11117 = load i8, i8* %11116
  %11118 = sext i8 %11117 to i64
  %11119 = and i64 %11118, 4294967295
  store i64 %11119, i64* %RDX, align 8, !tbaa !2428
  %11120 = load i32, i32* %EDX
  %11121 = zext i32 %11120 to i64
  %11122 = load i64, i64* %PC
  %11123 = add i64 %11122, 3
  store i64 %11123, i64* %PC
  %11124 = sub i32 %11120, 99
  %11125 = icmp ult i32 %11120, 99
  %11126 = zext i1 %11125 to i8
  %11127 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11126, i8* %11127, align 1, !tbaa !2432
  %11128 = and i32 %11124, 255
  %11129 = call i32 @llvm.ctpop.i32(i32 %11128) #17
  %11130 = trunc i32 %11129 to i8
  %11131 = and i8 %11130, 1
  %11132 = xor i8 %11131, 1
  %11133 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11132, i8* %11133, align 1, !tbaa !2446
  %11134 = xor i64 99, %11121
  %11135 = trunc i64 %11134 to i32
  %11136 = xor i32 %11135, %11124
  %11137 = lshr i32 %11136, 4
  %11138 = trunc i32 %11137 to i8
  %11139 = and i8 %11138, 1
  %11140 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11139, i8* %11140, align 1, !tbaa !2450
  %11141 = icmp eq i32 %11124, 0
  %11142 = zext i1 %11141 to i8
  %11143 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11142, i8* %11143, align 1, !tbaa !2447
  %11144 = lshr i32 %11124, 31
  %11145 = trunc i32 %11144 to i8
  %11146 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11145, i8* %11146, align 1, !tbaa !2448
  %11147 = lshr i32 %11120, 31
  %11148 = xor i32 %11144, %11147
  %11149 = add nuw nsw i32 %11148, %11147
  %11150 = icmp eq i32 %11149, 2
  %11151 = zext i1 %11150 to i8
  %11152 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11151, i8* %11152, align 1, !tbaa !2449
  %11153 = load i64, i64* %PC
  %11154 = add i64 %11153, 21
  %11155 = load i64, i64* %PC
  %11156 = add i64 %11155, 6
  %11157 = load i64, i64* %PC
  %11158 = add i64 %11157, 6
  store i64 %11158, i64* %PC
  %11159 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11160 = load i8, i8* %11159, align 1, !tbaa !2447
  %11161 = icmp eq i8 %11160, 0
  %11162 = zext i1 %11161 to i8
  store i8 %11162, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %11163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11164 = select i1 %11161, i64 %11154, i64 %11156
  store i64 %11164, i64* %11163, align 8, !tbaa !2428
  %11165 = load i8, i8* %BRANCH_TAKEN
  %11166 = icmp eq i8 %11165, 1
  br i1 %11166, label %block_4008af, label %block_4008a0

block_401584:                                     ; preds = %block_401550
  %11167 = load i64, i64* %PC
  %11168 = sub i64 %11167, 3150
  %11169 = load i64, i64* %PC
  %11170 = add i64 %11169, 5
  store i64 %11170, i64* %PC
  %11171 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11168, i64* %11171, align 8, !tbaa !2428
  br label %block_400936

block_4013ca:                                     ; preds = %block_4013d8, %block_4013ac
  %MEMORY.26 = phi %struct.Memory* [ %MEMORY.2, %block_4013ac ], [ %MEMORY.26, %block_4013d8 ]
  %11172 = load i64, i64* %RBP
  %11173 = sub i64 %11172, 24
  %11174 = load i64, i64* %PC
  %11175 = add i64 %11174, 4
  store i64 %11175, i64* %PC
  %11176 = inttoptr i64 %11173 to i64*
  %11177 = load i64, i64* %11176
  store i64 %11177, i64* %RAX, align 8, !tbaa !2428
  %11178 = load i64, i64* %RAX
  %11179 = load i64, i64* %RBP
  %11180 = sub i64 %11179, 96
  %11181 = load i64, i64* %PC
  %11182 = add i64 %11181, 4
  store i64 %11182, i64* %PC
  %11183 = inttoptr i64 %11180 to i64*
  %11184 = load i64, i64* %11183
  %11185 = sub i64 %11178, %11184
  %11186 = icmp ugt i64 %11184, %11178
  %11187 = zext i1 %11186 to i8
  %11188 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11187, i8* %11188, align 1, !tbaa !2432
  %11189 = trunc i64 %11185 to i32
  %11190 = and i32 %11189, 255
  %11191 = call i32 @llvm.ctpop.i32(i32 %11190) #17
  %11192 = trunc i32 %11191 to i8
  %11193 = and i8 %11192, 1
  %11194 = xor i8 %11193, 1
  %11195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11194, i8* %11195, align 1, !tbaa !2446
  %11196 = xor i64 %11184, %11178
  %11197 = xor i64 %11196, %11185
  %11198 = lshr i64 %11197, 4
  %11199 = trunc i64 %11198 to i8
  %11200 = and i8 %11199, 1
  %11201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11200, i8* %11201, align 1, !tbaa !2450
  %11202 = icmp eq i64 %11185, 0
  %11203 = zext i1 %11202 to i8
  %11204 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11203, i8* %11204, align 1, !tbaa !2447
  %11205 = lshr i64 %11185, 63
  %11206 = trunc i64 %11205 to i8
  %11207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11206, i8* %11207, align 1, !tbaa !2448
  %11208 = lshr i64 %11178, 63
  %11209 = lshr i64 %11184, 63
  %11210 = xor i64 %11209, %11208
  %11211 = xor i64 %11205, %11208
  %11212 = add nuw nsw i64 %11211, %11210
  %11213 = icmp eq i64 %11212, 2
  %11214 = zext i1 %11213 to i8
  %11215 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11214, i8* %11215, align 1, !tbaa !2449
  %11216 = load i64, i64* %PC
  %11217 = add i64 %11216, 114
  %11218 = load i64, i64* %PC
  %11219 = add i64 %11218, 6
  %11220 = load i64, i64* %PC
  %11221 = add i64 %11220, 6
  store i64 %11221, i64* %PC
  %11222 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11223 = load i8, i8* %11222, align 1, !tbaa !2447
  %11224 = icmp eq i8 %11223, 0
  %11225 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11226 = load i8, i8* %11225, align 1, !tbaa !2448
  %11227 = icmp ne i8 %11226, 0
  %11228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %11229 = load i8, i8* %11228, align 1, !tbaa !2449
  %11230 = icmp ne i8 %11229, 0
  %11231 = xor i1 %11227, %11230
  %11232 = xor i1 %11231, true
  %11233 = and i1 %11224, %11232
  %11234 = zext i1 %11233 to i8
  store i8 %11234, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %11235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11236 = select i1 %11233, i64 %11217, i64 %11219
  store i64 %11236, i64* %11235, align 8, !tbaa !2428
  %11237 = load i8, i8* %BRANCH_TAKEN
  %11238 = icmp eq i8 %11237, 1
  br i1 %11238, label %block_401444, label %block_4013d8

block_40099b:                                     ; preds = %block_400936, %block_40154b
  %MEMORY.27 = phi %struct.Memory* [ %2014, %block_400936 ], [ %MEMORY.10, %block_40154b ]
  %11239 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11240 = load i64, i64* %PC
  %11241 = add i64 %11240, 8
  store i64 %11241, i64* %PC
  %11242 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4018b0__rodata_type* @seg_4018b0__rodata to i64), i64 32) to double*)
  %11243 = bitcast i8* %11239 to double*
  store double %11242, double* %11243, align 1, !tbaa !2451
  %11244 = getelementptr inbounds i8, i8* %11239, i64 8
  %11245 = bitcast i8* %11244 to double*
  store double 0.000000e+00, double* %11245, align 1, !tbaa !2451
  %11246 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11247 = load i64, i64* %PC
  %11248 = add i64 %11247, 8
  store i64 %11248, i64* %PC
  %11249 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4018b0__rodata_type* @seg_4018b0__rodata to i64), i64 40) to double*)
  %11250 = bitcast i8* %11246 to double*
  store double %11249, double* %11250, align 1, !tbaa !2451
  %11251 = getelementptr inbounds i8, i8* %11246, i64 8
  %11252 = bitcast i8* %11251 to double*
  store double 0.000000e+00, double* %11252, align 1, !tbaa !2451
  %11253 = load i64, i64* %RBP
  %11254 = sub i64 %11253, 32
  %11255 = load i64, i64* %PC
  %11256 = add i64 %11255, 8
  store i64 %11256, i64* %PC
  %11257 = inttoptr i64 %11254 to i64*
  store i64 0, i64* %11257
  %11258 = load i64, i64* %RBP
  %11259 = sub i64 %11258, 168
  %11260 = load i64, i64* %PC
  %11261 = add i64 %11260, 8
  store i64 %11261, i64* %PC
  %11262 = inttoptr i64 %11259 to i64*
  %11263 = load i64, i64* %11262
  %11264 = sext i64 %11263 to i128
  %11265 = and i128 %11264, -18446744073709551616
  %11266 = zext i64 %11263 to i128
  %11267 = or i128 %11265, %11266
  %11268 = mul nsw i128 %11267, 12
  %11269 = trunc i128 %11268 to i64
  store i64 %11269, i64* %RAX, align 8, !tbaa !2428
  %11270 = sext i64 %11269 to i128
  %11271 = icmp ne i128 %11270, %11268
  %11272 = zext i1 %11271 to i8
  %11273 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11272, i8* %11273, align 1, !tbaa !2432
  %11274 = trunc i128 %11268 to i32
  %11275 = and i32 %11274, 255
  %11276 = call i32 @llvm.ctpop.i32(i32 %11275) #17
  %11277 = trunc i32 %11276 to i8
  %11278 = and i8 %11277, 1
  %11279 = xor i8 %11278, 1
  %11280 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11279, i8* %11280, align 1, !tbaa !2446
  %11281 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11281, align 1, !tbaa !2450
  %11282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %11282, align 1, !tbaa !2447
  %11283 = lshr i64 %11269, 63
  %11284 = trunc i64 %11283 to i8
  %11285 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11284, i8* %11285, align 1, !tbaa !2448
  %11286 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11272, i8* %11286, align 1, !tbaa !2449
  %11287 = load i64, i64* %RBP
  %11288 = sub i64 %11287, 40
  %11289 = load i64, i64* %RAX
  %11290 = load i64, i64* %PC
  %11291 = add i64 %11290, 4
  store i64 %11291, i64* %PC
  %11292 = inttoptr i64 %11288 to i64*
  store i64 %11289, i64* %11292
  %11293 = load i64, i64* %RBP
  %11294 = sub i64 %11293, 168
  %11295 = load i64, i64* %PC
  %11296 = add i64 %11295, 8
  store i64 %11296, i64* %PC
  %11297 = inttoptr i64 %11294 to i64*
  %11298 = load i64, i64* %11297
  %11299 = sext i64 %11298 to i128
  %11300 = and i128 %11299, -18446744073709551616
  %11301 = zext i64 %11298 to i128
  %11302 = or i128 %11300, %11301
  %11303 = mul nsw i128 %11302, 14
  %11304 = trunc i128 %11303 to i64
  store i64 %11304, i64* %RAX, align 8, !tbaa !2428
  %11305 = sext i64 %11304 to i128
  %11306 = icmp ne i128 %11305, %11303
  %11307 = zext i1 %11306 to i8
  %11308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11307, i8* %11308, align 1, !tbaa !2432
  %11309 = trunc i128 %11303 to i32
  %11310 = and i32 %11309, 255
  %11311 = call i32 @llvm.ctpop.i32(i32 %11310) #17
  %11312 = trunc i32 %11311 to i8
  %11313 = and i8 %11312, 1
  %11314 = xor i8 %11313, 1
  %11315 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11314, i8* %11315, align 1, !tbaa !2446
  %11316 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11316, align 1, !tbaa !2450
  %11317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %11317, align 1, !tbaa !2447
  %11318 = lshr i64 %11304, 63
  %11319 = trunc i64 %11318 to i8
  %11320 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11319, i8* %11320, align 1, !tbaa !2448
  %11321 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11307, i8* %11321, align 1, !tbaa !2449
  %11322 = load i64, i64* %RBP
  %11323 = sub i64 %11322, 48
  %11324 = load i64, i64* %RAX
  %11325 = load i64, i64* %PC
  %11326 = add i64 %11325, 4
  store i64 %11326, i64* %PC
  %11327 = inttoptr i64 %11323 to i64*
  store i64 %11324, i64* %11327
  %11328 = load i64, i64* %RBP
  %11329 = sub i64 %11328, 168
  %11330 = load i64, i64* %PC
  %11331 = add i64 %11330, 11
  store i64 %11331, i64* %PC
  %11332 = inttoptr i64 %11329 to i64*
  %11333 = load i64, i64* %11332
  %11334 = sext i64 %11333 to i128
  %11335 = and i128 %11334, -18446744073709551616
  %11336 = zext i64 %11333 to i128
  %11337 = or i128 %11335, %11336
  %11338 = mul nsw i128 %11337, 345
  %11339 = trunc i128 %11338 to i64
  store i64 %11339, i64* %RAX, align 8, !tbaa !2428
  %11340 = sext i64 %11339 to i128
  %11341 = icmp ne i128 %11340, %11338
  %11342 = zext i1 %11341 to i8
  %11343 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11342, i8* %11343, align 1, !tbaa !2432
  %11344 = trunc i128 %11338 to i32
  %11345 = and i32 %11344, 255
  %11346 = call i32 @llvm.ctpop.i32(i32 %11345) #17
  %11347 = trunc i32 %11346 to i8
  %11348 = and i8 %11347, 1
  %11349 = xor i8 %11348, 1
  %11350 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11349, i8* %11350, align 1, !tbaa !2446
  %11351 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11351, align 1, !tbaa !2450
  %11352 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %11352, align 1, !tbaa !2447
  %11353 = lshr i64 %11339, 63
  %11354 = trunc i64 %11353 to i8
  %11355 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11354, i8* %11355, align 1, !tbaa !2448
  %11356 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11342, i8* %11356, align 1, !tbaa !2449
  %11357 = load i64, i64* %RBP
  %11358 = sub i64 %11357, 56
  %11359 = load i64, i64* %RAX
  %11360 = load i64, i64* %PC
  %11361 = add i64 %11360, 4
  store i64 %11361, i64* %PC
  %11362 = inttoptr i64 %11358 to i64*
  store i64 %11359, i64* %11362
  %11363 = load i64, i64* %RBP
  %11364 = sub i64 %11363, 168
  %11365 = load i64, i64* %PC
  %11366 = add i64 %11365, 11
  store i64 %11366, i64* %PC
  %11367 = inttoptr i64 %11364 to i64*
  %11368 = load i64, i64* %11367
  %11369 = sext i64 %11368 to i128
  %11370 = and i128 %11369, -18446744073709551616
  %11371 = zext i64 %11368 to i128
  %11372 = or i128 %11370, %11371
  %11373 = mul nsw i128 %11372, 210
  %11374 = trunc i128 %11373 to i64
  store i64 %11374, i64* %RAX, align 8, !tbaa !2428
  %11375 = sext i64 %11374 to i128
  %11376 = icmp ne i128 %11375, %11373
  %11377 = zext i1 %11376 to i8
  %11378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11377, i8* %11378, align 1, !tbaa !2432
  %11379 = trunc i128 %11373 to i32
  %11380 = and i32 %11379, 255
  %11381 = call i32 @llvm.ctpop.i32(i32 %11380) #17
  %11382 = trunc i32 %11381 to i8
  %11383 = and i8 %11382, 1
  %11384 = xor i8 %11383, 1
  %11385 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11384, i8* %11385, align 1, !tbaa !2446
  %11386 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11386, align 1, !tbaa !2450
  %11387 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %11387, align 1, !tbaa !2447
  %11388 = lshr i64 %11374, 63
  %11389 = trunc i64 %11388 to i8
  %11390 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11389, i8* %11390, align 1, !tbaa !2448
  %11391 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11377, i8* %11391, align 1, !tbaa !2449
  %11392 = load i64, i64* %RBP
  %11393 = sub i64 %11392, 64
  %11394 = load i64, i64* %RAX
  %11395 = load i64, i64* %PC
  %11396 = add i64 %11395, 4
  store i64 %11396, i64* %PC
  %11397 = inttoptr i64 %11393 to i64*
  store i64 %11394, i64* %11397
  %11398 = load i64, i64* %RBP
  %11399 = sub i64 %11398, 168
  %11400 = load i64, i64* %PC
  %11401 = add i64 %11400, 7
  store i64 %11401, i64* %PC
  %11402 = inttoptr i64 %11399 to i64*
  %11403 = load i64, i64* %11402
  store i64 %11403, i64* %RAX, align 8, !tbaa !2428
  %11404 = load i64, i64* %RAX
  %11405 = load i64, i64* %PC
  %11406 = add i64 %11405, 4
  store i64 %11406, i64* %PC
  %11407 = shl i64 %11404, 4
  %11408 = icmp slt i64 %11407, 0
  %11409 = shl i64 %11407, 1
  store i64 %11409, i64* %RAX, align 8, !tbaa !2428
  %11410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %11411 = zext i1 %11408 to i8
  store i8 %11411, i8* %11410, align 1, !tbaa !2453
  %11412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %11413 = trunc i64 %11409 to i32
  %11414 = and i32 %11413, 254
  %11415 = call i32 @llvm.ctpop.i32(i32 %11414) #17
  %11416 = trunc i32 %11415 to i8
  %11417 = and i8 %11416, 1
  %11418 = xor i8 %11417, 1
  store i8 %11418, i8* %11412, align 1, !tbaa !2453
  %11419 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11419, align 1, !tbaa !2453
  %11420 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11421 = icmp eq i64 %11409, 0
  %11422 = zext i1 %11421 to i8
  store i8 %11422, i8* %11420, align 1, !tbaa !2453
  %11423 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11424 = lshr i64 %11409, 63
  %11425 = trunc i64 %11424 to i8
  store i8 %11425, i8* %11423, align 1, !tbaa !2453
  %11426 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11426, align 1, !tbaa !2453
  %11427 = load i64, i64* %RBP
  %11428 = sub i64 %11427, 72
  %11429 = load i64, i64* %RAX
  %11430 = load i64, i64* %PC
  %11431 = add i64 %11430, 4
  store i64 %11431, i64* %PC
  %11432 = inttoptr i64 %11428 to i64*
  store i64 %11429, i64* %11432
  %11433 = load i64, i64* %RBP
  %11434 = sub i64 %11433, 168
  %11435 = load i64, i64* %PC
  %11436 = add i64 %11435, 11
  store i64 %11436, i64* %PC
  %11437 = inttoptr i64 %11434 to i64*
  %11438 = load i64, i64* %11437
  %11439 = sext i64 %11438 to i128
  %11440 = and i128 %11439, -18446744073709551616
  %11441 = zext i64 %11438 to i128
  %11442 = or i128 %11440, %11441
  %11443 = mul nsw i128 %11442, 899
  %11444 = trunc i128 %11443 to i64
  store i64 %11444, i64* %RAX, align 8, !tbaa !2428
  %11445 = sext i64 %11444 to i128
  %11446 = icmp ne i128 %11445, %11443
  %11447 = zext i1 %11446 to i8
  %11448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11447, i8* %11448, align 1, !tbaa !2432
  %11449 = trunc i128 %11443 to i32
  %11450 = and i32 %11449, 255
  %11451 = call i32 @llvm.ctpop.i32(i32 %11450) #17
  %11452 = trunc i32 %11451 to i8
  %11453 = and i8 %11452, 1
  %11454 = xor i8 %11453, 1
  %11455 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11454, i8* %11455, align 1, !tbaa !2446
  %11456 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11456, align 1, !tbaa !2450
  %11457 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %11457, align 1, !tbaa !2447
  %11458 = lshr i64 %11444, 63
  %11459 = trunc i64 %11458 to i8
  %11460 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11459, i8* %11460, align 1, !tbaa !2448
  %11461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11447, i8* %11461, align 1, !tbaa !2449
  %11462 = load i64, i64* %RBP
  %11463 = sub i64 %11462, 80
  %11464 = load i64, i64* %RAX
  %11465 = load i64, i64* %PC
  %11466 = add i64 %11465, 4
  store i64 %11466, i64* %PC
  %11467 = inttoptr i64 %11463 to i64*
  store i64 %11464, i64* %11467
  %11468 = load i64, i64* %RBP
  %11469 = sub i64 %11468, 168
  %11470 = load i64, i64* %PC
  %11471 = add i64 %11470, 11
  store i64 %11471, i64* %PC
  %11472 = inttoptr i64 %11469 to i64*
  %11473 = load i64, i64* %11472
  %11474 = sext i64 %11473 to i128
  %11475 = and i128 %11474, -18446744073709551616
  %11476 = zext i64 %11473 to i128
  %11477 = or i128 %11475, %11476
  %11478 = mul nsw i128 %11477, 616
  %11479 = trunc i128 %11478 to i64
  store i64 %11479, i64* %RAX, align 8, !tbaa !2428
  %11480 = sext i64 %11479 to i128
  %11481 = icmp ne i128 %11480, %11478
  %11482 = zext i1 %11481 to i8
  %11483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11482, i8* %11483, align 1, !tbaa !2432
  %11484 = trunc i128 %11478 to i32
  %11485 = and i32 %11484, 255
  %11486 = call i32 @llvm.ctpop.i32(i32 %11485) #17
  %11487 = trunc i32 %11486 to i8
  %11488 = and i8 %11487, 1
  %11489 = xor i8 %11488, 1
  %11490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11489, i8* %11490, align 1, !tbaa !2446
  %11491 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11491, align 1, !tbaa !2450
  %11492 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %11492, align 1, !tbaa !2447
  %11493 = lshr i64 %11479, 63
  %11494 = trunc i64 %11493 to i8
  %11495 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11494, i8* %11495, align 1, !tbaa !2448
  %11496 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11482, i8* %11496, align 1, !tbaa !2449
  %11497 = load i64, i64* %RBP
  %11498 = sub i64 %11497, 88
  %11499 = load i64, i64* %RAX
  %11500 = load i64, i64* %PC
  %11501 = add i64 %11500, 4
  store i64 %11501, i64* %PC
  %11502 = inttoptr i64 %11498 to i64*
  store i64 %11499, i64* %11502
  %11503 = load i64, i64* %RBP
  %11504 = sub i64 %11503, 96
  %11505 = load i64, i64* %PC
  %11506 = add i64 %11505, 8
  store i64 %11506, i64* %PC
  %11507 = inttoptr i64 %11504 to i64*
  store i64 0, i64* %11507
  %11508 = load i64, i64* %RBP
  %11509 = sub i64 %11508, 168
  %11510 = load i64, i64* %PC
  %11511 = add i64 %11510, 8
  store i64 %11511, i64* %PC
  %11512 = inttoptr i64 %11509 to i64*
  %11513 = load i64, i64* %11512
  %11514 = sext i64 %11513 to i128
  %11515 = and i128 %11514, -18446744073709551616
  %11516 = zext i64 %11513 to i128
  %11517 = or i128 %11515, %11516
  %11518 = mul nsw i128 %11517, 93
  %11519 = trunc i128 %11518 to i64
  store i64 %11519, i64* %RAX, align 8, !tbaa !2428
  %11520 = sext i64 %11519 to i128
  %11521 = icmp ne i128 %11520, %11518
  %11522 = zext i1 %11521 to i8
  %11523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11522, i8* %11523, align 1, !tbaa !2432
  %11524 = trunc i128 %11518 to i32
  %11525 = and i32 %11524, 255
  %11526 = call i32 @llvm.ctpop.i32(i32 %11525) #17
  %11527 = trunc i32 %11526 to i8
  %11528 = and i8 %11527, 1
  %11529 = xor i8 %11528, 1
  %11530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11529, i8* %11530, align 1, !tbaa !2446
  %11531 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11531, align 1, !tbaa !2450
  %11532 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %11532, align 1, !tbaa !2447
  %11533 = lshr i64 %11519, 63
  %11534 = trunc i64 %11533 to i8
  %11535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11534, i8* %11535, align 1, !tbaa !2448
  %11536 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11522, i8* %11536, align 1, !tbaa !2449
  %11537 = load i64, i64* %RBP
  %11538 = sub i64 %11537, 104
  %11539 = load i64, i64* %RAX
  %11540 = load i64, i64* %PC
  %11541 = add i64 %11540, 4
  store i64 %11541, i64* %PC
  %11542 = inttoptr i64 %11538 to i64*
  store i64 %11539, i64* %11542
  %11543 = load i64, i64* %RBP
  %11544 = sub i64 %11543, 112
  %11545 = bitcast %union.vec128_t* %XMM1 to i8*
  %11546 = load i64, i64* %PC
  %11547 = add i64 %11546, 5
  store i64 %11547, i64* %PC
  %11548 = bitcast i8* %11545 to double*
  %11549 = load double, double* %11548, align 1
  %11550 = inttoptr i64 %11544 to double*
  store double %11549, double* %11550
  %11551 = load i64, i64* %RBP
  %11552 = sub i64 %11551, 120
  %11553 = bitcast %union.vec128_t* %XMM0 to i8*
  %11554 = load i64, i64* %PC
  %11555 = add i64 %11554, 5
  store i64 %11555, i64* %PC
  %11556 = bitcast i8* %11553 to double*
  %11557 = load double, double* %11556, align 1
  %11558 = inttoptr i64 %11552 to double*
  store double %11557, double* %11558
  %11559 = load i64, i64* %RBP
  %11560 = sub i64 %11559, 128
  %11561 = bitcast %union.vec128_t* %XMM0 to i8*
  %11562 = load i64, i64* %PC
  %11563 = add i64 %11562, 5
  store i64 %11563, i64* %PC
  %11564 = bitcast i8* %11561 to double*
  %11565 = load double, double* %11564, align 1
  %11566 = inttoptr i64 %11560 to double*
  store double %11565, double* %11566
  %11567 = load i64, i64* %RBP
  %11568 = sub i64 %11567, 136
  %11569 = bitcast %union.vec128_t* %XMM0 to i8*
  %11570 = load i64, i64* %PC
  %11571 = add i64 %11570, 8
  store i64 %11571, i64* %PC
  %11572 = bitcast i8* %11569 to double*
  %11573 = load double, double* %11572, align 1
  %11574 = inttoptr i64 %11568 to double*
  store double %11573, double* %11574
  %11575 = load i64, i64* %RBP
  %11576 = sub i64 %11575, 24
  %11577 = load i64, i64* %PC
  %11578 = add i64 %11577, 8
  store i64 %11578, i64* %PC
  %11579 = inttoptr i64 %11576 to i64*
  store i64 1, i64* %11579
  br label %block_400a49

block_4012dd:                                     ; preds = %block_401292, %block_4012a4
  %MEMORY.28 = phi %struct.Memory* [ %MEMORY.22, %block_401292 ], [ %8226, %block_4012a4 ]
  %11580 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11581 = load i64, i64* %PC
  %11582 = add i64 %11581, 8
  store i64 %11582, i64* %PC
  %11583 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4018b0__rodata_type* @seg_4018b0__rodata to i64), i64 56) to double*)
  %11584 = bitcast i8* %11580 to double*
  store double %11583, double* %11584, align 1, !tbaa !2451
  %11585 = getelementptr inbounds i8, i8* %11580, i64 8
  %11586 = bitcast i8* %11585 to double*
  store double 0.000000e+00, double* %11586, align 1, !tbaa !2451
  %11587 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11588 = load i64, i64* %PC
  %11589 = add i64 %11588, 8
  store i64 %11589, i64* %PC
  %11590 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4018b0__rodata_type* @seg_4018b0__rodata to i64), i64 8) to double*)
  %11591 = bitcast i8* %11587 to double*
  store double %11590, double* %11591, align 1, !tbaa !2451
  %11592 = getelementptr inbounds i8, i8* %11587, i64 8
  %11593 = bitcast i8* %11592 to double*
  store double 0.000000e+00, double* %11593, align 1, !tbaa !2451
  %11594 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %11595 = load i64, i64* %PC
  %11596 = add i64 %11595, 8
  store i64 %11596, i64* %PC
  %11597 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4018b0__rodata_type* @seg_4018b0__rodata to i64), i64 40) to double*)
  %11598 = bitcast i8* %11594 to double*
  store double %11597, double* %11598, align 1, !tbaa !2451
  %11599 = getelementptr inbounds i8, i8* %11594, i64 8
  %11600 = bitcast i8* %11599 to double*
  store double 0.000000e+00, double* %11600, align 1, !tbaa !2451
  %11601 = load i64, i64* %PC
  %11602 = add i64 %11601, 11
  store i64 %11602, i64* %PC
  store i32 1, i32* bitcast (%J_type* @J to i32*)
  %11603 = load i64, i64* %PC
  %11604 = add i64 %11603, 11
  store i64 %11604, i64* %PC
  store i32 2, i32* bitcast (%K_type* @K to i32*)
  %11605 = load i64, i64* %PC
  %11606 = add i64 %11605, 11
  store i64 %11606, i64* %PC
  store i32 3, i32* bitcast (%L_type* @L to i32*)
  %11607 = bitcast %union.vec128_t* %XMM2 to i8*
  %11608 = load i64, i64* %PC
  %11609 = add i64 %11608, 9
  store i64 %11609, i64* %PC
  %11610 = bitcast i8* %11607 to double*
  %11611 = load double, double* %11610, align 1
  store double %11611, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 8) to double*)
  %11612 = bitcast %union.vec128_t* %XMM1 to i8*
  %11613 = load i64, i64* %PC
  %11614 = add i64 %11613, 9
  store i64 %11614, i64* %PC
  %11615 = bitcast i8* %11612 to double*
  %11616 = load double, double* %11615, align 1
  store double %11616, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 16) to double*)
  %11617 = bitcast %union.vec128_t* %XMM0 to i8*
  %11618 = load i64, i64* %PC
  %11619 = add i64 %11618, 9
  store i64 %11619, i64* %PC
  %11620 = bitcast i8* %11617 to double*
  %11621 = load double, double* %11620, align 1
  store double %11621, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 24) to double*)
  %11622 = load i64, i64* %RBP
  %11623 = sub i64 %11622, 24
  %11624 = load i64, i64* %PC
  %11625 = add i64 %11624, 8
  store i64 %11625, i64* %PC
  %11626 = inttoptr i64 %11623 to i64*
  store i64 1, i64* %11626
  br label %block_401339
}

; Function Attrs: noinline
define %struct.Memory* @sub_401610_PA(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_401610:
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 5
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RCX = bitcast %union.anon* %14 to i64*
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16 = getelementptr inbounds %struct.GPR, %struct.GPR* %15, i32 0, i32 7
  %17 = getelementptr inbounds %struct.Reg, %struct.Reg* %16, i32 0, i32 0
  %RDX = bitcast %union.anon* %17 to i64*
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19 = getelementptr inbounds %struct.GPR, %struct.GPR* %18, i32 0, i32 11
  %20 = getelementptr inbounds %struct.Reg, %struct.Reg* %19, i32 0, i32 0
  %RDI = bitcast %union.anon* %20 to i64*
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22 = getelementptr inbounds %struct.GPR, %struct.GPR* %21, i32 0, i32 13
  %23 = getelementptr inbounds %struct.Reg, %struct.Reg* %22, i32 0, i32 0
  %RSP = bitcast %union.anon* %23 to i64*
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25 = getelementptr inbounds %struct.GPR, %struct.GPR* %24, i32 0, i32 15
  %26 = getelementptr inbounds %struct.Reg, %struct.Reg* %25, i32 0, i32 0
  %RBP = bitcast %union.anon* %26 to i64*
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %28 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %27, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %28 to %"class.std::bitset"*
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %30 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %29, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %30 to %union.vec128_t*
  %31 = load i64, i64* %RBP
  %32 = load i64, i64* %PC
  %33 = add i64 %32, 1
  store i64 %33, i64* %PC
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %35 = load i64, i64* %34, align 8, !tbaa !2428
  %36 = add i64 %35, -8
  %37 = inttoptr i64 %36 to i64*
  store i64 %31, i64* %37
  store i64 %36, i64* %34, align 8, !tbaa !2428
  %38 = load i64, i64* %RSP
  %39 = load i64, i64* %PC
  %40 = add i64 %39, 3
  store i64 %40, i64* %PC
  store i64 %38, i64* %RBP, align 8, !tbaa !2428
  %41 = load i64, i64* %RBP
  %42 = sub i64 %41, 8
  %43 = load i64, i64* %RDI
  %44 = load i64, i64* %PC
  %45 = add i64 %44, 4
  store i64 %45, i64* %PC
  %46 = inttoptr i64 %42 to i64*
  store i64 %43, i64* %46
  %47 = load i64, i64* %PC
  %48 = add i64 %47, 11
  store i64 %48, i64* %PC
  store i32 0, i32* bitcast (%J_type* @J to i32*)
  br label %block_401623

block_401736:                                     ; preds = %block_401623
  %49 = add i64 %644, 1
  store i64 %49, i64* %PC
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %51 = load i64, i64* %50, align 8, !tbaa !2428
  %52 = add i64 %51, 8
  %53 = inttoptr i64 %51 to i64*
  %54 = load i64, i64* %53
  store i64 %54, i64* %RBP, align 8, !tbaa !2428
  store i64 %52, i64* %50, align 8, !tbaa !2428
  %55 = load i64, i64* %PC
  %56 = add i64 %55, 1
  store i64 %56, i64* %PC
  %57 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %58 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %59 = load i64, i64* %58, align 8, !tbaa !2428
  %60 = inttoptr i64 %59 to i64*
  %61 = load i64, i64* %60
  store i64 %61, i64* %57, align 8, !tbaa !2428
  %62 = add i64 %59, 8
  store i64 %62, i64* %58, align 8, !tbaa !2428
  ret %struct.Memory* %MEMORY.0

block_401623:                                     ; preds = %block_401731, %block_401610
  %MEMORY.0 = phi %struct.Memory* [ %2, %block_401610 ], [ %MEMORY.0, %block_401731 ]
  %63 = load i64, i64* %PC
  %64 = add i64 %63, 10
  store i64 %64, i64* %PC
  store i64 -9223372036854775808, i64* %RAX, align 8, !tbaa !2428
  %65 = load i64, i64* %RBP
  %66 = sub i64 %65, 8
  %67 = load i64, i64* %PC
  %68 = add i64 %67, 4
  store i64 %68, i64* %PC
  %69 = inttoptr i64 %66 to i64*
  %70 = load i64, i64* %69
  store i64 %70, i64* %RCX, align 8, !tbaa !2428
  %71 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %72 = load i64, i64* %RCX
  %73 = add i64 %72, 8
  %74 = load i64, i64* %PC
  %75 = add i64 %74, 5
  store i64 %75, i64* %PC
  %76 = inttoptr i64 %73 to double*
  %77 = load double, double* %76
  %78 = bitcast i8* %71 to double*
  store double %77, double* %78, align 1, !tbaa !2451
  %79 = getelementptr inbounds i8, i8* %71, i64 8
  %80 = bitcast i8* %79 to double*
  store double 0.000000e+00, double* %80, align 1, !tbaa !2451
  %81 = load i64, i64* %RBP
  %82 = sub i64 %81, 8
  %83 = load i64, i64* %PC
  %84 = add i64 %83, 4
  store i64 %84, i64* %PC
  %85 = inttoptr i64 %82 to i64*
  %86 = load i64, i64* %85
  store i64 %86, i64* %RCX, align 8, !tbaa !2428
  %87 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %88 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %89 = load i64, i64* %RCX
  %90 = add i64 %89, 16
  %91 = load i64, i64* %PC
  %92 = add i64 %91, 5
  store i64 %92, i64* %PC
  %93 = bitcast i8* %88 to double*
  %94 = load double, double* %93, align 1
  %95 = getelementptr inbounds i8, i8* %88, i64 8
  %96 = bitcast i8* %95 to i64*
  %97 = load i64, i64* %96, align 1
  %98 = inttoptr i64 %90 to double*
  %99 = load double, double* %98
  %100 = fadd double %94, %99
  %101 = bitcast i8* %87 to double*
  store double %100, double* %101, align 1, !tbaa !2451
  %102 = getelementptr inbounds i8, i8* %87, i64 8
  %103 = bitcast i8* %102 to i64*
  store i64 %97, i64* %103, align 1, !tbaa !2451
  %104 = load i64, i64* %RBP
  %105 = sub i64 %104, 8
  %106 = load i64, i64* %PC
  %107 = add i64 %106, 4
  store i64 %107, i64* %PC
  %108 = inttoptr i64 %105 to i64*
  %109 = load i64, i64* %108
  store i64 %109, i64* %RCX, align 8, !tbaa !2428
  %110 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %111 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %112 = load i64, i64* %RCX
  %113 = add i64 %112, 24
  %114 = load i64, i64* %PC
  %115 = add i64 %114, 5
  store i64 %115, i64* %PC
  %116 = bitcast i8* %111 to double*
  %117 = load double, double* %116, align 1
  %118 = getelementptr inbounds i8, i8* %111, i64 8
  %119 = bitcast i8* %118 to i64*
  %120 = load i64, i64* %119, align 1
  %121 = inttoptr i64 %113 to double*
  %122 = load double, double* %121
  %123 = fadd double %117, %122
  %124 = bitcast i8* %110 to double*
  store double %123, double* %124, align 1, !tbaa !2451
  %125 = getelementptr inbounds i8, i8* %110, i64 8
  %126 = bitcast i8* %125 to i64*
  store i64 %120, i64* %126, align 1, !tbaa !2451
  %127 = load i64, i64* %RBP
  %128 = sub i64 %127, 8
  %129 = load i64, i64* %PC
  %130 = add i64 %129, 4
  store i64 %130, i64* %PC
  %131 = inttoptr i64 %128 to i64*
  %132 = load i64, i64* %131
  store i64 %132, i64* %RCX, align 8, !tbaa !2428
  %133 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %134 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %135 = load i64, i64* %RCX
  %136 = add i64 %135, 32
  %137 = load i64, i64* %PC
  %138 = add i64 %137, 5
  store i64 %138, i64* %PC
  %139 = bitcast i8* %134 to double*
  %140 = load double, double* %139, align 1
  %141 = getelementptr inbounds i8, i8* %134, i64 8
  %142 = bitcast i8* %141 to i64*
  %143 = load i64, i64* %142, align 1
  %144 = inttoptr i64 %136 to double*
  %145 = load double, double* %144
  %146 = fsub double %140, %145
  %147 = bitcast i8* %133 to double*
  store double %146, double* %147, align 1, !tbaa !2451
  %148 = getelementptr inbounds i8, i8* %133, i64 8
  %149 = bitcast i8* %148 to i64*
  store i64 %143, i64* %149, align 1, !tbaa !2451
  %150 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %151 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %152 = load i64, i64* %PC
  %153 = add i64 %152, 9
  store i64 %153, i64* %PC
  %154 = bitcast i8* %151 to double*
  %155 = load double, double* %154, align 1
  %156 = getelementptr inbounds i8, i8* %151, i64 8
  %157 = bitcast i8* %156 to i64*
  %158 = load i64, i64* %157, align 1
  %159 = load double, double* bitcast (%T_type* @T to double*)
  %160 = fmul double %155, %159
  %161 = bitcast i8* %150 to double*
  store double %160, double* %161, align 1, !tbaa !2451
  %162 = getelementptr inbounds i8, i8* %150, i64 8
  %163 = bitcast i8* %162 to i64*
  store i64 %158, i64* %163, align 1, !tbaa !2451
  %164 = load i64, i64* %RBP
  %165 = sub i64 %164, 8
  %166 = load i64, i64* %PC
  %167 = add i64 %166, 4
  store i64 %167, i64* %PC
  %168 = inttoptr i64 %165 to i64*
  %169 = load i64, i64* %168
  store i64 %169, i64* %RCX, align 8, !tbaa !2428
  %170 = load i64, i64* %RCX
  %171 = add i64 %170, 8
  %172 = bitcast %union.vec128_t* %XMM0 to i8*
  %173 = load i64, i64* %PC
  %174 = add i64 %173, 5
  store i64 %174, i64* %PC
  %175 = bitcast i8* %172 to double*
  %176 = load double, double* %175, align 1
  %177 = inttoptr i64 %171 to double*
  store double %176, double* %177
  %178 = load i64, i64* %RBP
  %179 = sub i64 %178, 8
  %180 = load i64, i64* %PC
  %181 = add i64 %180, 4
  store i64 %181, i64* %PC
  %182 = inttoptr i64 %179 to i64*
  %183 = load i64, i64* %182
  store i64 %183, i64* %RCX, align 8, !tbaa !2428
  %184 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %185 = load i64, i64* %RCX
  %186 = add i64 %185, 8
  %187 = load i64, i64* %PC
  %188 = add i64 %187, 5
  store i64 %188, i64* %PC
  %189 = inttoptr i64 %186 to double*
  %190 = load double, double* %189
  %191 = bitcast i8* %184 to double*
  store double %190, double* %191, align 1, !tbaa !2451
  %192 = getelementptr inbounds i8, i8* %184, i64 8
  %193 = bitcast i8* %192 to double*
  store double 0.000000e+00, double* %193, align 1, !tbaa !2451
  %194 = load i64, i64* %RBP
  %195 = sub i64 %194, 8
  %196 = load i64, i64* %PC
  %197 = add i64 %196, 4
  store i64 %197, i64* %PC
  %198 = inttoptr i64 %195 to i64*
  %199 = load i64, i64* %198
  store i64 %199, i64* %RCX, align 8, !tbaa !2428
  %200 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %201 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %202 = load i64, i64* %RCX
  %203 = add i64 %202, 16
  %204 = load i64, i64* %PC
  %205 = add i64 %204, 5
  store i64 %205, i64* %PC
  %206 = bitcast i8* %201 to double*
  %207 = load double, double* %206, align 1
  %208 = getelementptr inbounds i8, i8* %201, i64 8
  %209 = bitcast i8* %208 to i64*
  %210 = load i64, i64* %209, align 1
  %211 = inttoptr i64 %203 to double*
  %212 = load double, double* %211
  %213 = fadd double %207, %212
  %214 = bitcast i8* %200 to double*
  store double %213, double* %214, align 1, !tbaa !2451
  %215 = getelementptr inbounds i8, i8* %200, i64 8
  %216 = bitcast i8* %215 to i64*
  store i64 %210, i64* %216, align 1, !tbaa !2451
  %217 = load i64, i64* %RBP
  %218 = sub i64 %217, 8
  %219 = load i64, i64* %PC
  %220 = add i64 %219, 4
  store i64 %220, i64* %PC
  %221 = inttoptr i64 %218 to i64*
  %222 = load i64, i64* %221
  store i64 %222, i64* %RCX, align 8, !tbaa !2428
  %223 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %224 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %225 = load i64, i64* %RCX
  %226 = add i64 %225, 24
  %227 = load i64, i64* %PC
  %228 = add i64 %227, 5
  store i64 %228, i64* %PC
  %229 = bitcast i8* %224 to double*
  %230 = load double, double* %229, align 1
  %231 = getelementptr inbounds i8, i8* %224, i64 8
  %232 = bitcast i8* %231 to i64*
  %233 = load i64, i64* %232, align 1
  %234 = inttoptr i64 %226 to double*
  %235 = load double, double* %234
  %236 = fsub double %230, %235
  %237 = bitcast i8* %223 to double*
  store double %236, double* %237, align 1, !tbaa !2451
  %238 = getelementptr inbounds i8, i8* %223, i64 8
  %239 = bitcast i8* %238 to i64*
  store i64 %233, i64* %239, align 1, !tbaa !2451
  %240 = load i64, i64* %RBP
  %241 = sub i64 %240, 8
  %242 = load i64, i64* %PC
  %243 = add i64 %242, 4
  store i64 %243, i64* %PC
  %244 = inttoptr i64 %241 to i64*
  %245 = load i64, i64* %244
  store i64 %245, i64* %RCX, align 8, !tbaa !2428
  %246 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %247 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %248 = load i64, i64* %RCX
  %249 = add i64 %248, 32
  %250 = load i64, i64* %PC
  %251 = add i64 %250, 5
  store i64 %251, i64* %PC
  %252 = bitcast i8* %247 to double*
  %253 = load double, double* %252, align 1
  %254 = getelementptr inbounds i8, i8* %247, i64 8
  %255 = bitcast i8* %254 to i64*
  %256 = load i64, i64* %255, align 1
  %257 = inttoptr i64 %249 to double*
  %258 = load double, double* %257
  %259 = fadd double %253, %258
  %260 = bitcast i8* %246 to double*
  store double %259, double* %260, align 1, !tbaa !2451
  %261 = getelementptr inbounds i8, i8* %246, i64 8
  %262 = bitcast i8* %261 to i64*
  store i64 %256, i64* %262, align 1, !tbaa !2451
  %263 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %264 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %265 = load i64, i64* %PC
  %266 = add i64 %265, 9
  store i64 %266, i64* %PC
  %267 = bitcast i8* %264 to double*
  %268 = load double, double* %267, align 1
  %269 = getelementptr inbounds i8, i8* %264, i64 8
  %270 = bitcast i8* %269 to i64*
  %271 = load i64, i64* %270, align 1
  %272 = load double, double* bitcast (%T_type* @T to double*)
  %273 = fmul double %268, %272
  %274 = bitcast i8* %263 to double*
  store double %273, double* %274, align 1, !tbaa !2451
  %275 = getelementptr inbounds i8, i8* %263, i64 8
  %276 = bitcast i8* %275 to i64*
  store i64 %271, i64* %276, align 1, !tbaa !2451
  %277 = load i64, i64* %RBP
  %278 = sub i64 %277, 8
  %279 = load i64, i64* %PC
  %280 = add i64 %279, 4
  store i64 %280, i64* %PC
  %281 = inttoptr i64 %278 to i64*
  %282 = load i64, i64* %281
  store i64 %282, i64* %RCX, align 8, !tbaa !2428
  %283 = load i64, i64* %RCX
  %284 = add i64 %283, 16
  %285 = bitcast %union.vec128_t* %XMM0 to i8*
  %286 = load i64, i64* %PC
  %287 = add i64 %286, 5
  store i64 %287, i64* %PC
  %288 = bitcast i8* %285 to double*
  %289 = load double, double* %288, align 1
  %290 = inttoptr i64 %284 to double*
  store double %289, double* %290
  %291 = load i64, i64* %RBP
  %292 = sub i64 %291, 8
  %293 = load i64, i64* %PC
  %294 = add i64 %293, 4
  store i64 %294, i64* %PC
  %295 = inttoptr i64 %292 to i64*
  %296 = load i64, i64* %295
  store i64 %296, i64* %RCX, align 8, !tbaa !2428
  %297 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %298 = load i64, i64* %RCX
  %299 = add i64 %298, 8
  %300 = load i64, i64* %PC
  %301 = add i64 %300, 5
  store i64 %301, i64* %PC
  %302 = inttoptr i64 %299 to double*
  %303 = load double, double* %302
  %304 = bitcast i8* %297 to double*
  store double %303, double* %304, align 1, !tbaa !2451
  %305 = getelementptr inbounds i8, i8* %297, i64 8
  %306 = bitcast i8* %305 to double*
  store double 0.000000e+00, double* %306, align 1, !tbaa !2451
  %307 = load i64, i64* %RBP
  %308 = sub i64 %307, 8
  %309 = load i64, i64* %PC
  %310 = add i64 %309, 4
  store i64 %310, i64* %PC
  %311 = inttoptr i64 %308 to i64*
  %312 = load i64, i64* %311
  store i64 %312, i64* %RCX, align 8, !tbaa !2428
  %313 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %314 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %315 = load i64, i64* %RCX
  %316 = add i64 %315, 16
  %317 = load i64, i64* %PC
  %318 = add i64 %317, 5
  store i64 %318, i64* %PC
  %319 = bitcast i8* %314 to double*
  %320 = load double, double* %319, align 1
  %321 = getelementptr inbounds i8, i8* %314, i64 8
  %322 = bitcast i8* %321 to i64*
  %323 = load i64, i64* %322, align 1
  %324 = inttoptr i64 %316 to double*
  %325 = load double, double* %324
  %326 = fsub double %320, %325
  %327 = bitcast i8* %313 to double*
  store double %326, double* %327, align 1, !tbaa !2451
  %328 = getelementptr inbounds i8, i8* %313, i64 8
  %329 = bitcast i8* %328 to i64*
  store i64 %323, i64* %329, align 1, !tbaa !2451
  %330 = load i64, i64* %RBP
  %331 = sub i64 %330, 8
  %332 = load i64, i64* %PC
  %333 = add i64 %332, 4
  store i64 %333, i64* %PC
  %334 = inttoptr i64 %331 to i64*
  %335 = load i64, i64* %334
  store i64 %335, i64* %RCX, align 8, !tbaa !2428
  %336 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %337 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %338 = load i64, i64* %RCX
  %339 = add i64 %338, 24
  %340 = load i64, i64* %PC
  %341 = add i64 %340, 5
  store i64 %341, i64* %PC
  %342 = bitcast i8* %337 to double*
  %343 = load double, double* %342, align 1
  %344 = getelementptr inbounds i8, i8* %337, i64 8
  %345 = bitcast i8* %344 to i64*
  %346 = load i64, i64* %345, align 1
  %347 = inttoptr i64 %339 to double*
  %348 = load double, double* %347
  %349 = fadd double %343, %348
  %350 = bitcast i8* %336 to double*
  store double %349, double* %350, align 1, !tbaa !2451
  %351 = getelementptr inbounds i8, i8* %336, i64 8
  %352 = bitcast i8* %351 to i64*
  store i64 %346, i64* %352, align 1, !tbaa !2451
  %353 = load i64, i64* %RBP
  %354 = sub i64 %353, 8
  %355 = load i64, i64* %PC
  %356 = add i64 %355, 4
  store i64 %356, i64* %PC
  %357 = inttoptr i64 %354 to i64*
  %358 = load i64, i64* %357
  store i64 %358, i64* %RCX, align 8, !tbaa !2428
  %359 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %360 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %361 = load i64, i64* %RCX
  %362 = add i64 %361, 32
  %363 = load i64, i64* %PC
  %364 = add i64 %363, 5
  store i64 %364, i64* %PC
  %365 = bitcast i8* %360 to double*
  %366 = load double, double* %365, align 1
  %367 = getelementptr inbounds i8, i8* %360, i64 8
  %368 = bitcast i8* %367 to i64*
  %369 = load i64, i64* %368, align 1
  %370 = inttoptr i64 %362 to double*
  %371 = load double, double* %370
  %372 = fadd double %366, %371
  %373 = bitcast i8* %359 to double*
  store double %372, double* %373, align 1, !tbaa !2451
  %374 = getelementptr inbounds i8, i8* %359, i64 8
  %375 = bitcast i8* %374 to i64*
  store i64 %369, i64* %375, align 1, !tbaa !2451
  %376 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %377 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %378 = load i64, i64* %PC
  %379 = add i64 %378, 9
  store i64 %379, i64* %PC
  %380 = bitcast i8* %377 to double*
  %381 = load double, double* %380, align 1
  %382 = getelementptr inbounds i8, i8* %377, i64 8
  %383 = bitcast i8* %382 to i64*
  %384 = load i64, i64* %383, align 1
  %385 = load double, double* bitcast (%T_type* @T to double*)
  %386 = fmul double %381, %385
  %387 = bitcast i8* %376 to double*
  store double %386, double* %387, align 1, !tbaa !2451
  %388 = getelementptr inbounds i8, i8* %376, i64 8
  %389 = bitcast i8* %388 to i64*
  store i64 %384, i64* %389, align 1, !tbaa !2451
  %390 = load i64, i64* %RBP
  %391 = sub i64 %390, 8
  %392 = load i64, i64* %PC
  %393 = add i64 %392, 4
  store i64 %393, i64* %PC
  %394 = inttoptr i64 %391 to i64*
  %395 = load i64, i64* %394
  store i64 %395, i64* %RCX, align 8, !tbaa !2428
  %396 = load i64, i64* %RCX
  %397 = add i64 %396, 24
  %398 = bitcast %union.vec128_t* %XMM0 to i8*
  %399 = load i64, i64* %PC
  %400 = add i64 %399, 5
  store i64 %400, i64* %PC
  %401 = bitcast i8* %398 to double*
  %402 = load double, double* %401, align 1
  %403 = inttoptr i64 %397 to double*
  store double %402, double* %403
  %404 = load i64, i64* %RBP
  %405 = sub i64 %404, 8
  %406 = load i64, i64* %PC
  %407 = add i64 %406, 4
  store i64 %407, i64* %PC
  %408 = inttoptr i64 %405 to i64*
  %409 = load i64, i64* %408
  store i64 %409, i64* %RCX, align 8, !tbaa !2428
  %410 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %411 = load i64, i64* %RCX
  %412 = add i64 %411, 8
  %413 = load i64, i64* %PC
  %414 = add i64 %413, 5
  store i64 %414, i64* %PC
  %415 = inttoptr i64 %412 to double*
  %416 = load double, double* %415
  %417 = bitcast i8* %410 to double*
  store double %416, double* %417, align 1, !tbaa !2451
  %418 = getelementptr inbounds i8, i8* %410, i64 8
  %419 = bitcast i8* %418 to double*
  store double 0.000000e+00, double* %419, align 1, !tbaa !2451
  %420 = bitcast %union.vec128_t* %XMM0 to i8*
  %421 = load i64, i64* %PC
  %422 = add i64 %421, 5
  store i64 %422, i64* %PC
  %423 = bitcast i8* %420 to i64*
  %424 = load i64, i64* %423, align 1
  store i64 %424, i64* %RCX, align 1, !tbaa !2428
  %425 = load i64, i64* %RCX
  %426 = load i64, i64* %RAX
  %427 = load i64, i64* %PC
  %428 = add i64 %427, 3
  store i64 %428, i64* %PC
  %429 = xor i64 %426, %425
  store i64 %429, i64* %RCX, align 8, !tbaa !2428
  %430 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %430, align 1, !tbaa !2432
  %431 = trunc i64 %429 to i32
  %432 = and i32 %431, 255
  %433 = call i32 @llvm.ctpop.i32(i32 %432) #17
  %434 = trunc i32 %433 to i8
  %435 = and i8 %434, 1
  %436 = xor i8 %435, 1
  %437 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %436, i8* %437, align 1, !tbaa !2446
  %438 = icmp eq i64 %429, 0
  %439 = zext i1 %438 to i8
  %440 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %439, i8* %440, align 1, !tbaa !2447
  %441 = lshr i64 %429, 63
  %442 = trunc i64 %441 to i8
  %443 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %442, i8* %443, align 1, !tbaa !2448
  %444 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %444, align 1, !tbaa !2449
  %445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %445, align 1, !tbaa !2450
  %446 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %447 = load i64, i64* %RCX
  %448 = load i64, i64* %PC
  %449 = add i64 %448, 5
  store i64 %449, i64* %PC
  %450 = bitcast i8* %446 to i64*
  store i64 %447, i64* %450, align 1, !tbaa !2428
  %451 = getelementptr inbounds i8, i8* %446, i64 8
  %452 = bitcast i8* %451 to i64*
  store i64 0, i64* %452, align 1, !tbaa !2428
  %453 = load i64, i64* %RBP
  %454 = sub i64 %453, 8
  %455 = load i64, i64* %PC
  %456 = add i64 %455, 4
  store i64 %456, i64* %PC
  %457 = inttoptr i64 %454 to i64*
  %458 = load i64, i64* %457
  store i64 %458, i64* %RAX, align 8, !tbaa !2428
  %459 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %460 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %461 = load i64, i64* %RAX
  %462 = add i64 %461, 16
  %463 = load i64, i64* %PC
  %464 = add i64 %463, 5
  store i64 %464, i64* %PC
  %465 = bitcast i8* %460 to double*
  %466 = load double, double* %465, align 1
  %467 = getelementptr inbounds i8, i8* %460, i64 8
  %468 = bitcast i8* %467 to i64*
  %469 = load i64, i64* %468, align 1
  %470 = inttoptr i64 %462 to double*
  %471 = load double, double* %470
  %472 = fadd double %466, %471
  %473 = bitcast i8* %459 to double*
  store double %472, double* %473, align 1, !tbaa !2451
  %474 = getelementptr inbounds i8, i8* %459, i64 8
  %475 = bitcast i8* %474 to i64*
  store i64 %469, i64* %475, align 1, !tbaa !2451
  %476 = load i64, i64* %RBP
  %477 = sub i64 %476, 8
  %478 = load i64, i64* %PC
  %479 = add i64 %478, 4
  store i64 %479, i64* %PC
  %480 = inttoptr i64 %477 to i64*
  %481 = load i64, i64* %480
  store i64 %481, i64* %RAX, align 8, !tbaa !2428
  %482 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %483 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %484 = load i64, i64* %RAX
  %485 = add i64 %484, 24
  %486 = load i64, i64* %PC
  %487 = add i64 %486, 5
  store i64 %487, i64* %PC
  %488 = bitcast i8* %483 to double*
  %489 = load double, double* %488, align 1
  %490 = getelementptr inbounds i8, i8* %483, i64 8
  %491 = bitcast i8* %490 to i64*
  %492 = load i64, i64* %491, align 1
  %493 = inttoptr i64 %485 to double*
  %494 = load double, double* %493
  %495 = fadd double %489, %494
  %496 = bitcast i8* %482 to double*
  store double %495, double* %496, align 1, !tbaa !2451
  %497 = getelementptr inbounds i8, i8* %482, i64 8
  %498 = bitcast i8* %497 to i64*
  store i64 %492, i64* %498, align 1, !tbaa !2451
  %499 = load i64, i64* %RBP
  %500 = sub i64 %499, 8
  %501 = load i64, i64* %PC
  %502 = add i64 %501, 4
  store i64 %502, i64* %PC
  %503 = inttoptr i64 %500 to i64*
  %504 = load i64, i64* %503
  store i64 %504, i64* %RAX, align 8, !tbaa !2428
  %505 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %506 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %507 = load i64, i64* %RAX
  %508 = add i64 %507, 32
  %509 = load i64, i64* %PC
  %510 = add i64 %509, 5
  store i64 %510, i64* %PC
  %511 = bitcast i8* %506 to double*
  %512 = load double, double* %511, align 1
  %513 = getelementptr inbounds i8, i8* %506, i64 8
  %514 = bitcast i8* %513 to i64*
  %515 = load i64, i64* %514, align 1
  %516 = inttoptr i64 %508 to double*
  %517 = load double, double* %516
  %518 = fadd double %512, %517
  %519 = bitcast i8* %505 to double*
  store double %518, double* %519, align 1, !tbaa !2451
  %520 = getelementptr inbounds i8, i8* %505, i64 8
  %521 = bitcast i8* %520 to i64*
  store i64 %515, i64* %521, align 1, !tbaa !2451
  %522 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %523 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %524 = load i64, i64* %PC
  %525 = add i64 %524, 9
  store i64 %525, i64* %PC
  %526 = bitcast i8* %523 to double*
  %527 = load double, double* %526, align 1
  %528 = getelementptr inbounds i8, i8* %523, i64 8
  %529 = bitcast i8* %528 to i64*
  %530 = load i64, i64* %529, align 1
  %531 = load double, double* bitcast (%T2_type* @T2 to double*)
  %532 = fdiv double %527, %531
  %533 = bitcast i8* %522 to double*
  store double %532, double* %533, align 1, !tbaa !2451
  %534 = getelementptr inbounds i8, i8* %522, i64 8
  %535 = bitcast i8* %534 to i64*
  store i64 %530, i64* %535, align 1, !tbaa !2451
  %536 = load i64, i64* %RBP
  %537 = sub i64 %536, 8
  %538 = load i64, i64* %PC
  %539 = add i64 %538, 4
  store i64 %539, i64* %PC
  %540 = inttoptr i64 %537 to i64*
  %541 = load i64, i64* %540
  store i64 %541, i64* %RAX, align 8, !tbaa !2428
  %542 = load i64, i64* %RAX
  %543 = add i64 %542, 32
  %544 = bitcast %union.vec128_t* %XMM0 to i8*
  %545 = load i64, i64* %PC
  %546 = add i64 %545, 5
  store i64 %546, i64* %PC
  %547 = bitcast i8* %544 to double*
  %548 = load double, double* %547, align 1
  %549 = inttoptr i64 %543 to double*
  store double %548, double* %549
  %550 = load i64, i64* %PC
  %551 = add i64 %550, 7
  store i64 %551, i64* %PC
  %552 = load i32, i32* bitcast (%J_type* @J to i32*)
  %553 = zext i32 %552 to i64
  store i64 %553, i64* %RDX, align 8, !tbaa !2428
  %554 = load i64, i64* %RDX
  %555 = load i64, i64* %PC
  %556 = add i64 %555, 3
  store i64 %556, i64* %PC
  %557 = trunc i64 %554 to i32
  %558 = add i32 1, %557
  %559 = zext i32 %558 to i64
  store i64 %559, i64* %RDX, align 8, !tbaa !2428
  %560 = icmp ult i32 %558, %557
  %561 = icmp ult i32 %558, 1
  %562 = or i1 %560, %561
  %563 = zext i1 %562 to i8
  %564 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %563, i8* %564, align 1, !tbaa !2432
  %565 = and i32 %558, 255
  %566 = call i32 @llvm.ctpop.i32(i32 %565) #17
  %567 = trunc i32 %566 to i8
  %568 = and i8 %567, 1
  %569 = xor i8 %568, 1
  %570 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %569, i8* %570, align 1, !tbaa !2446
  %571 = xor i64 1, %554
  %572 = trunc i64 %571 to i32
  %573 = xor i32 %572, %558
  %574 = lshr i32 %573, 4
  %575 = trunc i32 %574 to i8
  %576 = and i8 %575, 1
  %577 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %576, i8* %577, align 1, !tbaa !2450
  %578 = icmp eq i32 %558, 0
  %579 = zext i1 %578 to i8
  %580 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %579, i8* %580, align 1, !tbaa !2447
  %581 = lshr i32 %558, 31
  %582 = trunc i32 %581 to i8
  %583 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %582, i8* %583, align 1, !tbaa !2448
  %584 = lshr i32 %557, 31
  %585 = xor i32 %581, %584
  %586 = add nuw nsw i32 %585, %581
  %587 = icmp eq i32 %586, 2
  %588 = zext i1 %587 to i8
  %589 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %588, i8* %589, align 1, !tbaa !2449
  %590 = load i32, i32* %EDX
  %591 = zext i32 %590 to i64
  %592 = load i64, i64* %PC
  %593 = add i64 %592, 7
  store i64 %593, i64* %PC
  store i32 %590, i32* bitcast (%J_type* @J to i32*)
  %594 = load i64, i64* %PC
  %595 = add i64 %594, 8
  store i64 %595, i64* %PC
  %596 = load i32, i32* bitcast (%J_type* @J to i32*)
  %597 = sub i32 %596, 6
  %598 = icmp ult i32 %596, 6
  %599 = zext i1 %598 to i8
  %600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %599, i8* %600, align 1, !tbaa !2432
  %601 = and i32 %597, 255
  %602 = call i32 @llvm.ctpop.i32(i32 %601) #17
  %603 = trunc i32 %602 to i8
  %604 = and i8 %603, 1
  %605 = xor i8 %604, 1
  %606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %605, i8* %606, align 1, !tbaa !2446
  %607 = xor i32 %596, 6
  %608 = xor i32 %607, %597
  %609 = lshr i32 %608, 4
  %610 = trunc i32 %609 to i8
  %611 = and i8 %610, 1
  %612 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %611, i8* %612, align 1, !tbaa !2450
  %613 = icmp eq i32 %597, 0
  %614 = zext i1 %613 to i8
  %615 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %614, i8* %615, align 1, !tbaa !2447
  %616 = lshr i32 %597, 31
  %617 = trunc i32 %616 to i8
  %618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %617, i8* %618, align 1, !tbaa !2448
  %619 = lshr i32 %596, 31
  %620 = xor i32 %616, %619
  %621 = add nuw nsw i32 %620, %619
  %622 = icmp eq i32 %621, 2
  %623 = zext i1 %622 to i8
  %624 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %623, i8* %624, align 1, !tbaa !2449
  %625 = load i64, i64* %PC
  %626 = add i64 %625, 11
  %627 = load i64, i64* %PC
  %628 = add i64 %627, 6
  %629 = load i64, i64* %PC
  %630 = add i64 %629, 6
  store i64 %630, i64* %PC
  %631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %632 = load i8, i8* %631, align 1, !tbaa !2448
  %633 = icmp ne i8 %632, 0
  %634 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %635 = load i8, i8* %634, align 1, !tbaa !2449
  %636 = icmp ne i8 %635, 0
  %637 = xor i1 %633, %636
  %638 = xor i1 %637, true
  %639 = zext i1 %638 to i8
  store i8 %639, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %640 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %641 = select i1 %637, i64 %628, i64 %626
  store i64 %641, i64* %640, align 8, !tbaa !2428
  %642 = load i8, i8* %BRANCH_TAKEN
  %643 = icmp eq i8 %642, 1
  %644 = load i64, i64* %PC
  br i1 %643, label %block_401736, label %block_401731

block_401731:                                     ; preds = %block_401623
  %645 = sub i64 %644, 270
  %646 = load i64, i64* %PC
  %647 = add i64 %646, 5
  store i64 %647, i64* %PC
  %648 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %645, i64* %648, align 8, !tbaa !2428
  br label %block_401623
}

; Function Attrs: noinline
define %struct.Memory* @sub_400800_frame_dummy(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_400800:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 1
  store i64 %14, i64* %PC
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %16 = load i64, i64* %15, align 8, !tbaa !2428
  %17 = add i64 %16, -8
  %18 = inttoptr i64 %17 to i64*
  store i64 %12, i64* %18
  store i64 %17, i64* %15, align 8, !tbaa !2428
  %19 = load i64, i64* %RSP
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 3
  store i64 %21, i64* %PC
  store i64 %19, i64* %RBP, align 8, !tbaa !2428
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 1
  store i64 %23, i64* %PC
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %25 = load i64, i64* %24, align 8, !tbaa !2428
  %26 = add i64 %25, 8
  %27 = inttoptr i64 %25 to i64*
  %28 = load i64, i64* %27
  store i64 %28, i64* %RBP, align 8, !tbaa !2428
  store i64 %26, i64* %24, align 8, !tbaa !2428
  %29 = load i64, i64* %PC
  %30 = sub i64 %29, 117
  %31 = load i64, i64* %PC
  %32 = add i64 %31, 2
  store i64 %32, i64* %PC
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %30, i64* %33, align 8, !tbaa !2428
  %34 = load i64, i64* %PC
  %35 = tail call %struct.Memory* @sub_400790_register_tm_clones(%struct.State* %0, i64 %34, %struct.Memory* %2)
  ret %struct.Memory* %35
}

; Function Attrs: noinline
define %struct.Memory* @sub_401830___libc_csu_init(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_401830:
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 3
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %EBX = bitcast %union.anon* %11 to i32*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %EDI = bitcast %union.anon* %14 to i32*
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16 = getelementptr inbounds %struct.GPR, %struct.GPR* %15, i32 0, i32 27
  %17 = getelementptr inbounds %struct.Reg, %struct.Reg* %16, i32 0, i32 0
  %R13D = bitcast %union.anon* %17 to i32*
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19 = getelementptr inbounds %struct.GPR, %struct.GPR* %18, i32 0, i32 1
  %20 = getelementptr inbounds %struct.Reg, %struct.Reg* %19, i32 0, i32 0
  %RAX = bitcast %union.anon* %20 to i64*
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22 = getelementptr inbounds %struct.GPR, %struct.GPR* %21, i32 0, i32 3
  %23 = getelementptr inbounds %struct.Reg, %struct.Reg* %22, i32 0, i32 0
  %RBX = bitcast %union.anon* %23 to i64*
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25 = getelementptr inbounds %struct.GPR, %struct.GPR* %24, i32 0, i32 7
  %26 = getelementptr inbounds %struct.Reg, %struct.Reg* %25, i32 0, i32 0
  %RDX = bitcast %union.anon* %26 to i64*
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28 = getelementptr inbounds %struct.GPR, %struct.GPR* %27, i32 0, i32 9
  %29 = getelementptr inbounds %struct.Reg, %struct.Reg* %28, i32 0, i32 0
  %RSI = bitcast %union.anon* %29 to i64*
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31 = getelementptr inbounds %struct.GPR, %struct.GPR* %30, i32 0, i32 11
  %32 = getelementptr inbounds %struct.Reg, %struct.Reg* %31, i32 0, i32 0
  %RDI = bitcast %union.anon* %32 to i64*
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34 = getelementptr inbounds %struct.GPR, %struct.GPR* %33, i32 0, i32 13
  %35 = getelementptr inbounds %struct.Reg, %struct.Reg* %34, i32 0, i32 0
  %RSP = bitcast %union.anon* %35 to i64*
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %37 = getelementptr inbounds %struct.GPR, %struct.GPR* %36, i32 0, i32 15
  %38 = getelementptr inbounds %struct.Reg, %struct.Reg* %37, i32 0, i32 0
  %RBP = bitcast %union.anon* %38 to i64*
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %40 = getelementptr inbounds %struct.GPR, %struct.GPR* %39, i32 0, i32 25
  %41 = getelementptr inbounds %struct.Reg, %struct.Reg* %40, i32 0, i32 0
  %R12 = bitcast %union.anon* %41 to i64*
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %43 = getelementptr inbounds %struct.GPR, %struct.GPR* %42, i32 0, i32 27
  %44 = getelementptr inbounds %struct.Reg, %struct.Reg* %43, i32 0, i32 0
  %R13 = bitcast %union.anon* %44 to i64*
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %46 = getelementptr inbounds %struct.GPR, %struct.GPR* %45, i32 0, i32 29
  %47 = getelementptr inbounds %struct.Reg, %struct.Reg* %46, i32 0, i32 0
  %R14 = bitcast %union.anon* %47 to i64*
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %49 = getelementptr inbounds %struct.GPR, %struct.GPR* %48, i32 0, i32 31
  %50 = getelementptr inbounds %struct.Reg, %struct.Reg* %49, i32 0, i32 0
  %R15 = bitcast %union.anon* %50 to i64*
  %51 = load i64, i64* %R15
  %52 = load i64, i64* %PC
  %53 = add i64 %52, 2
  store i64 %53, i64* %PC
  %54 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %55 = load i64, i64* %54, align 8, !tbaa !2428
  %56 = add i64 %55, -8
  %57 = inttoptr i64 %56 to i64*
  store i64 %51, i64* %57
  store i64 %56, i64* %54, align 8, !tbaa !2428
  %58 = load i64, i64* %R14
  %59 = load i64, i64* %PC
  %60 = add i64 %59, 2
  store i64 %60, i64* %PC
  %61 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %62 = load i64, i64* %61, align 8, !tbaa !2428
  %63 = add i64 %62, -8
  %64 = inttoptr i64 %63 to i64*
  store i64 %58, i64* %64
  store i64 %63, i64* %61, align 8, !tbaa !2428
  %65 = load i64, i64* %RDX
  %66 = load i64, i64* %PC
  %67 = add i64 %66, 3
  store i64 %67, i64* %PC
  store i64 %65, i64* %R15, align 8, !tbaa !2428
  %68 = load i64, i64* %R13
  %69 = load i64, i64* %PC
  %70 = add i64 %69, 2
  store i64 %70, i64* %PC
  %71 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %72 = load i64, i64* %71, align 8, !tbaa !2428
  %73 = add i64 %72, -8
  %74 = inttoptr i64 %73 to i64*
  store i64 %68, i64* %74
  store i64 %73, i64* %71, align 8, !tbaa !2428
  %75 = load i64, i64* %R12
  %76 = load i64, i64* %PC
  %77 = add i64 %76, 2
  store i64 %77, i64* %PC
  %78 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %79 = load i64, i64* %78, align 8, !tbaa !2428
  %80 = add i64 %79, -8
  %81 = inttoptr i64 %80 to i64*
  store i64 %75, i64* %81
  store i64 %80, i64* %78, align 8, !tbaa !2428
  %82 = load i64, i64* %PC
  %83 = add i64 %82, 7
  store i64 %83, i64* %PC
  store i64 ptrtoint (%seg_601df0__init_array_type* @seg_601df0__init_array to i64), i64* %R12, align 8, !tbaa !2428
  %84 = load i64, i64* %RBP
  %85 = load i64, i64* %PC
  %86 = add i64 %85, 1
  store i64 %86, i64* %PC
  %87 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %88 = load i64, i64* %87, align 8, !tbaa !2428
  %89 = add i64 %88, -8
  %90 = inttoptr i64 %89 to i64*
  store i64 %84, i64* %90
  store i64 %89, i64* %87, align 8, !tbaa !2428
  %91 = load i64, i64* %PC
  %92 = add i64 %91, 7
  store i64 %92, i64* %PC
  store i64 add (i64 ptrtoint (%seg_601df0__init_array_type* @seg_601df0__init_array to i64), i64 8), i64* %RBP, align 8, !tbaa !2428
  %93 = load i64, i64* %RBX
  %94 = load i64, i64* %PC
  %95 = add i64 %94, 1
  store i64 %95, i64* %PC
  %96 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %97 = load i64, i64* %96, align 8, !tbaa !2428
  %98 = add i64 %97, -8
  %99 = inttoptr i64 %98 to i64*
  store i64 %93, i64* %99
  store i64 %98, i64* %96, align 8, !tbaa !2428
  %100 = bitcast i32* %R13D to i64*
  %101 = load i32, i32* %EDI
  %102 = zext i32 %101 to i64
  %103 = load i64, i64* %PC
  %104 = add i64 %103, 3
  store i64 %104, i64* %PC
  %105 = and i64 %102, 4294967295
  store i64 %105, i64* %100, align 8, !tbaa !2428
  %106 = load i64, i64* %RSI
  %107 = load i64, i64* %PC
  %108 = add i64 %107, 3
  store i64 %108, i64* %PC
  store i64 %106, i64* %R14, align 8, !tbaa !2428
  %109 = load i64, i64* %RBP
  %110 = load i64, i64* %R12
  %111 = load i64, i64* %PC
  %112 = add i64 %111, 3
  store i64 %112, i64* %PC
  %113 = sub i64 %109, %110
  store i64 %113, i64* %RBP, align 8, !tbaa !2428
  %114 = icmp ult i64 %109, %110
  %115 = zext i1 %114 to i8
  %116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %115, i8* %116, align 1, !tbaa !2432
  %117 = trunc i64 %113 to i32
  %118 = and i32 %117, 255
  %119 = call i32 @llvm.ctpop.i32(i32 %118) #17
  %120 = trunc i32 %119 to i8
  %121 = and i8 %120, 1
  %122 = xor i8 %121, 1
  %123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %122, i8* %123, align 1, !tbaa !2446
  %124 = xor i64 %110, %109
  %125 = xor i64 %124, %113
  %126 = lshr i64 %125, 4
  %127 = trunc i64 %126 to i8
  %128 = and i8 %127, 1
  %129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %128, i8* %129, align 1, !tbaa !2450
  %130 = icmp eq i64 %113, 0
  %131 = zext i1 %130 to i8
  %132 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %131, i8* %132, align 1, !tbaa !2447
  %133 = lshr i64 %113, 63
  %134 = trunc i64 %133 to i8
  %135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %134, i8* %135, align 1, !tbaa !2448
  %136 = lshr i64 %109, 63
  %137 = lshr i64 %110, 63
  %138 = xor i64 %137, %136
  %139 = xor i64 %133, %136
  %140 = add nuw nsw i64 %139, %138
  %141 = icmp eq i64 %140, 2
  %142 = zext i1 %141 to i8
  %143 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %142, i8* %143, align 1, !tbaa !2449
  %144 = load i64, i64* %RSP
  %145 = load i64, i64* %PC
  %146 = add i64 %145, 4
  store i64 %146, i64* %PC
  %147 = sub i64 %144, 8
  store i64 %147, i64* %RSP, align 8, !tbaa !2428
  %148 = icmp ult i64 %144, 8
  %149 = zext i1 %148 to i8
  %150 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %149, i8* %150, align 1, !tbaa !2432
  %151 = trunc i64 %147 to i32
  %152 = and i32 %151, 255
  %153 = call i32 @llvm.ctpop.i32(i32 %152) #17
  %154 = trunc i32 %153 to i8
  %155 = and i8 %154, 1
  %156 = xor i8 %155, 1
  %157 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %156, i8* %157, align 1, !tbaa !2446
  %158 = xor i64 8, %144
  %159 = xor i64 %158, %147
  %160 = lshr i64 %159, 4
  %161 = trunc i64 %160 to i8
  %162 = and i8 %161, 1
  %163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %162, i8* %163, align 1, !tbaa !2450
  %164 = icmp eq i64 %147, 0
  %165 = zext i1 %164 to i8
  %166 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %165, i8* %166, align 1, !tbaa !2447
  %167 = lshr i64 %147, 63
  %168 = trunc i64 %167 to i8
  %169 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %168, i8* %169, align 1, !tbaa !2448
  %170 = lshr i64 %144, 63
  %171 = xor i64 %167, %170
  %172 = add nuw nsw i64 %171, %170
  %173 = icmp eq i64 %172, 2
  %174 = zext i1 %173 to i8
  %175 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %174, i8* %175, align 1, !tbaa !2449
  %176 = load i64, i64* %RBP
  %177 = load i64, i64* %PC
  %178 = add i64 %177, 4
  store i64 %178, i64* %PC
  %179 = ashr i64 %176, 2
  %180 = trunc i64 %179 to i8
  %181 = and i8 %180, 1
  %182 = ashr i64 %179, 1
  store i64 %182, i64* %RBP, align 8, !tbaa !2428
  %183 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %181, i8* %183, align 1, !tbaa !2453
  %184 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %185 = trunc i64 %182 to i32
  %186 = and i32 %185, 255
  %187 = call i32 @llvm.ctpop.i32(i32 %186) #17
  %188 = trunc i32 %187 to i8
  %189 = and i8 %188, 1
  %190 = xor i8 %189, 1
  store i8 %190, i8* %184, align 1, !tbaa !2453
  %191 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %191, align 1, !tbaa !2453
  %192 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %193 = icmp eq i64 %182, 0
  %194 = zext i1 %193 to i8
  store i8 %194, i8* %192, align 1, !tbaa !2453
  %195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %196 = lshr i64 %182, 63
  %197 = trunc i64 %196 to i8
  store i8 %197, i8* %195, align 1, !tbaa !2453
  %198 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %198, align 1, !tbaa !2453
  %199 = load i64, i64* %PC
  %200 = sub i64 %199, 4628
  %201 = load i64, i64* %PC
  %202 = add i64 %201, 5
  %203 = load i64, i64* %PC
  %204 = add i64 %203, 5
  store i64 %204, i64* %PC
  %205 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %206 = load i64, i64* %205, align 8, !tbaa !2428
  %207 = add i64 %206, -8
  %208 = inttoptr i64 %207 to i64*
  store i64 %202, i64* %208
  store i64 %207, i64* %205, align 8, !tbaa !2428
  %209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %200, i64* %209, align 8, !tbaa !2428
  %210 = load i64, i64* %PC
  %211 = call %struct.Memory* @sub_400648__init_proc_renamed_(%struct.State* %0, i64 %210, %struct.Memory* %2)
  %212 = load i64, i64* %RBP
  %213 = load i64, i64* %RBP
  %214 = load i64, i64* %PC
  %215 = add i64 %214, 3
  store i64 %215, i64* %PC
  %216 = and i64 %213, %212
  %217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %217, align 1, !tbaa !2432
  %218 = trunc i64 %216 to i32
  %219 = and i32 %218, 255
  %220 = call i32 @llvm.ctpop.i32(i32 %219) #17
  %221 = trunc i32 %220 to i8
  %222 = and i8 %221, 1
  %223 = xor i8 %222, 1
  %224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %223, i8* %224, align 1, !tbaa !2446
  %225 = icmp eq i64 %216, 0
  %226 = zext i1 %225 to i8
  %227 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %226, i8* %227, align 1, !tbaa !2447
  %228 = lshr i64 %216, 63
  %229 = trunc i64 %228 to i8
  %230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %229, i8* %230, align 1, !tbaa !2448
  %231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %231, align 1, !tbaa !2449
  %232 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %232, align 1, !tbaa !2450
  %233 = load i64, i64* %PC
  %234 = add i64 %233, 34
  %235 = load i64, i64* %PC
  %236 = add i64 %235, 2
  %237 = load i64, i64* %PC
  %238 = add i64 %237, 2
  store i64 %238, i64* %PC
  %239 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %240 = load i8, i8* %239, align 1, !tbaa !2447
  store i8 %240, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %241 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %242 = icmp ne i8 %240, 0
  %243 = select i1 %242, i64 %234, i64 %236
  store i64 %243, i64* %241, align 8, !tbaa !2428
  %244 = load i8, i8* %BRANCH_TAKEN
  %245 = icmp eq i8 %244, 1
  br i1 %245, label %block_401886, label %block_401866

block_401886:                                     ; preds = %block_401870, %block_401830
  %MEMORY.0 = phi %struct.Memory* [ %211, %block_401830 ], [ %387, %block_401870 ]
  %246 = load i64, i64* %RSP
  %247 = load i64, i64* %PC
  %248 = add i64 %247, 4
  store i64 %248, i64* %PC
  %249 = add i64 8, %246
  store i64 %249, i64* %RSP, align 8, !tbaa !2428
  %250 = icmp ult i64 %249, %246
  %251 = icmp ult i64 %249, 8
  %252 = or i1 %250, %251
  %253 = zext i1 %252 to i8
  %254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %253, i8* %254, align 1, !tbaa !2432
  %255 = trunc i64 %249 to i32
  %256 = and i32 %255, 255
  %257 = call i32 @llvm.ctpop.i32(i32 %256) #17
  %258 = trunc i32 %257 to i8
  %259 = and i8 %258, 1
  %260 = xor i8 %259, 1
  %261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %260, i8* %261, align 1, !tbaa !2446
  %262 = xor i64 8, %246
  %263 = xor i64 %262, %249
  %264 = lshr i64 %263, 4
  %265 = trunc i64 %264 to i8
  %266 = and i8 %265, 1
  %267 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %266, i8* %267, align 1, !tbaa !2450
  %268 = icmp eq i64 %249, 0
  %269 = zext i1 %268 to i8
  %270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %269, i8* %270, align 1, !tbaa !2447
  %271 = lshr i64 %249, 63
  %272 = trunc i64 %271 to i8
  %273 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %272, i8* %273, align 1, !tbaa !2448
  %274 = lshr i64 %246, 63
  %275 = xor i64 %271, %274
  %276 = add nuw nsw i64 %275, %271
  %277 = icmp eq i64 %276, 2
  %278 = zext i1 %277 to i8
  %279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %278, i8* %279, align 1, !tbaa !2449
  %280 = load i64, i64* %PC
  %281 = add i64 %280, 1
  store i64 %281, i64* %PC
  %282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %283 = load i64, i64* %282, align 8, !tbaa !2428
  %284 = add i64 %283, 8
  %285 = inttoptr i64 %283 to i64*
  %286 = load i64, i64* %285
  store i64 %286, i64* %RBX, align 8, !tbaa !2428
  store i64 %284, i64* %282, align 8, !tbaa !2428
  %287 = load i64, i64* %PC
  %288 = add i64 %287, 1
  store i64 %288, i64* %PC
  %289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %290 = load i64, i64* %289, align 8, !tbaa !2428
  %291 = add i64 %290, 8
  %292 = inttoptr i64 %290 to i64*
  %293 = load i64, i64* %292
  store i64 %293, i64* %RBP, align 8, !tbaa !2428
  store i64 %291, i64* %289, align 8, !tbaa !2428
  %294 = load i64, i64* %PC
  %295 = add i64 %294, 2
  store i64 %295, i64* %PC
  %296 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %297 = load i64, i64* %296, align 8, !tbaa !2428
  %298 = add i64 %297, 8
  %299 = inttoptr i64 %297 to i64*
  %300 = load i64, i64* %299
  store i64 %300, i64* %R12, align 8, !tbaa !2428
  store i64 %298, i64* %296, align 8, !tbaa !2428
  %301 = load i64, i64* %PC
  %302 = add i64 %301, 2
  store i64 %302, i64* %PC
  %303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %304 = load i64, i64* %303, align 8, !tbaa !2428
  %305 = add i64 %304, 8
  %306 = inttoptr i64 %304 to i64*
  %307 = load i64, i64* %306
  store i64 %307, i64* %R13, align 8, !tbaa !2428
  store i64 %305, i64* %303, align 8, !tbaa !2428
  %308 = load i64, i64* %PC
  %309 = add i64 %308, 2
  store i64 %309, i64* %PC
  %310 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %311 = load i64, i64* %310, align 8, !tbaa !2428
  %312 = add i64 %311, 8
  %313 = inttoptr i64 %311 to i64*
  %314 = load i64, i64* %313
  store i64 %314, i64* %R14, align 8, !tbaa !2428
  store i64 %312, i64* %310, align 8, !tbaa !2428
  %315 = load i64, i64* %PC
  %316 = add i64 %315, 2
  store i64 %316, i64* %PC
  %317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %318 = load i64, i64* %317, align 8, !tbaa !2428
  %319 = add i64 %318, 8
  %320 = inttoptr i64 %318 to i64*
  %321 = load i64, i64* %320
  store i64 %321, i64* %R15, align 8, !tbaa !2428
  store i64 %319, i64* %317, align 8, !tbaa !2428
  %322 = load i64, i64* %PC
  %323 = add i64 %322, 1
  store i64 %323, i64* %PC
  %324 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %325 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %326 = load i64, i64* %325, align 8, !tbaa !2428
  %327 = inttoptr i64 %326 to i64*
  %328 = load i64, i64* %327
  store i64 %328, i64* %324, align 8, !tbaa !2428
  %329 = add i64 %326, 8
  store i64 %329, i64* %325, align 8, !tbaa !2428
  ret %struct.Memory* %MEMORY.0

block_401866:                                     ; preds = %block_401830
  %330 = load i64, i64* %RBX
  %331 = load i32, i32* %EBX
  %332 = zext i32 %331 to i64
  %333 = load i64, i64* %PC
  %334 = add i64 %333, 2
  store i64 %334, i64* %PC
  %335 = xor i64 %332, %330
  %336 = trunc i64 %335 to i32
  %337 = and i64 %335, 4294967295
  store i64 %337, i64* %RBX, align 8, !tbaa !2428
  %338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %338, align 1, !tbaa !2432
  %339 = and i32 %336, 255
  %340 = call i32 @llvm.ctpop.i32(i32 %339) #17
  %341 = trunc i32 %340 to i8
  %342 = and i8 %341, 1
  %343 = xor i8 %342, 1
  %344 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %343, i8* %344, align 1, !tbaa !2446
  %345 = icmp eq i32 %336, 0
  %346 = zext i1 %345 to i8
  %347 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %346, i8* %347, align 1, !tbaa !2447
  %348 = lshr i32 %336, 31
  %349 = trunc i32 %348 to i8
  %350 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %349, i8* %350, align 1, !tbaa !2448
  %351 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %351, align 1, !tbaa !2449
  %352 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %352, align 1, !tbaa !2450
  %353 = load i64, i64* %RAX
  %354 = load i64, i64* %RAX
  %355 = add i64 %354, %353
  %356 = load i32, i32* %EAX
  %357 = zext i32 %356 to i64
  %358 = load i64, i64* %PC
  %359 = add i64 %358, 8
  store i64 %359, i64* %PC
  br label %block_401870

block_401870:                                     ; preds = %block_401870, %block_401866
  %MEMORY.1 = phi %struct.Memory* [ %211, %block_401866 ], [ %387, %block_401870 ]
  %360 = load i64, i64* %R15
  %361 = load i64, i64* %PC
  %362 = add i64 %361, 3
  store i64 %362, i64* %PC
  store i64 %360, i64* %RDX, align 8, !tbaa !2428
  %363 = load i64, i64* %R14
  %364 = load i64, i64* %PC
  %365 = add i64 %364, 3
  store i64 %365, i64* %PC
  store i64 %363, i64* %RSI, align 8, !tbaa !2428
  %366 = load i32, i32* %R13D
  %367 = zext i32 %366 to i64
  %368 = load i64, i64* %PC
  %369 = add i64 %368, 3
  store i64 %369, i64* %PC
  %370 = and i64 %367, 4294967295
  store i64 %370, i64* %RDI, align 8, !tbaa !2428
  %371 = load i64, i64* %R12
  %372 = load i64, i64* %RBX
  %373 = mul i64 %372, 8
  %374 = add i64 %373, %371
  %375 = load i64, i64* %PC
  %376 = add i64 %375, 4
  %377 = load i64, i64* %PC
  %378 = add i64 %377, 4
  store i64 %378, i64* %PC
  %379 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %380 = load i64, i64* %379, align 8, !tbaa !2428
  %381 = add i64 %380, -8
  %382 = inttoptr i64 %381 to i64*
  store i64 %376, i64* %382
  store i64 %381, i64* %379, align 8, !tbaa !2428
  %383 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %384 = inttoptr i64 %374 to i64*
  %385 = load i64, i64* %384
  store i64 %385, i64* %383, align 8, !tbaa !2428
  %386 = load i64, i64* %PC
  %387 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 %386, %struct.Memory* %MEMORY.1)
  %388 = load i64, i64* %RBX
  %389 = load i64, i64* %PC
  %390 = add i64 %389, 4
  store i64 %390, i64* %PC
  %391 = add i64 1, %388
  store i64 %391, i64* %RBX, align 8, !tbaa !2428
  %392 = icmp ult i64 %391, %388
  %393 = icmp ult i64 %391, 1
  %394 = or i1 %392, %393
  %395 = zext i1 %394 to i8
  %396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %395, i8* %396, align 1, !tbaa !2432
  %397 = trunc i64 %391 to i32
  %398 = and i32 %397, 255
  %399 = call i32 @llvm.ctpop.i32(i32 %398) #17
  %400 = trunc i32 %399 to i8
  %401 = and i8 %400, 1
  %402 = xor i8 %401, 1
  %403 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %402, i8* %403, align 1, !tbaa !2446
  %404 = xor i64 1, %388
  %405 = xor i64 %404, %391
  %406 = lshr i64 %405, 4
  %407 = trunc i64 %406 to i8
  %408 = and i8 %407, 1
  %409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %408, i8* %409, align 1, !tbaa !2450
  %410 = icmp eq i64 %391, 0
  %411 = zext i1 %410 to i8
  %412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %411, i8* %412, align 1, !tbaa !2447
  %413 = lshr i64 %391, 63
  %414 = trunc i64 %413 to i8
  %415 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %414, i8* %415, align 1, !tbaa !2448
  %416 = lshr i64 %388, 63
  %417 = xor i64 %413, %416
  %418 = add nuw nsw i64 %417, %413
  %419 = icmp eq i64 %418, 2
  %420 = zext i1 %419 to i8
  %421 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %420, i8* %421, align 1, !tbaa !2449
  %422 = load i64, i64* %RBP
  %423 = load i64, i64* %RBX
  %424 = load i64, i64* %PC
  %425 = add i64 %424, 3
  store i64 %425, i64* %PC
  %426 = sub i64 %422, %423
  %427 = icmp ult i64 %422, %423
  %428 = zext i1 %427 to i8
  %429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %428, i8* %429, align 1, !tbaa !2432
  %430 = trunc i64 %426 to i32
  %431 = and i32 %430, 255
  %432 = call i32 @llvm.ctpop.i32(i32 %431) #17
  %433 = trunc i32 %432 to i8
  %434 = and i8 %433, 1
  %435 = xor i8 %434, 1
  %436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %435, i8* %436, align 1, !tbaa !2446
  %437 = xor i64 %423, %422
  %438 = xor i64 %437, %426
  %439 = lshr i64 %438, 4
  %440 = trunc i64 %439 to i8
  %441 = and i8 %440, 1
  %442 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %441, i8* %442, align 1, !tbaa !2450
  %443 = icmp eq i64 %426, 0
  %444 = zext i1 %443 to i8
  %445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %444, i8* %445, align 1, !tbaa !2447
  %446 = lshr i64 %426, 63
  %447 = trunc i64 %446 to i8
  %448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %447, i8* %448, align 1, !tbaa !2448
  %449 = lshr i64 %422, 63
  %450 = lshr i64 %423, 63
  %451 = xor i64 %450, %449
  %452 = xor i64 %446, %449
  %453 = add nuw nsw i64 %452, %451
  %454 = icmp eq i64 %453, 2
  %455 = zext i1 %454 to i8
  %456 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %455, i8* %456, align 1, !tbaa !2449
  %457 = load i64, i64* %PC
  %458 = sub i64 %457, 20
  %459 = load i64, i64* %PC
  %460 = add i64 %459, 2
  %461 = load i64, i64* %PC
  %462 = add i64 %461, 2
  store i64 %462, i64* %PC
  %463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %464 = load i8, i8* %463, align 1, !tbaa !2447
  %465 = icmp eq i8 %464, 0
  %466 = zext i1 %465 to i8
  store i8 %466, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %468 = select i1 %465, i64 %458, i64 %460
  store i64 %468, i64* %467, align 8, !tbaa !2428
  %469 = load i8, i8* %BRANCH_TAKEN
  %470 = icmp eq i8 %469, 1
  br i1 %470, label %block_401870, label %block_401886
}

; Function Attrs: noinline
define %struct.Memory* @sub_400760_deregister_tm_clones(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_400760:
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %EAX = bitcast %union.anon* %11 to i32*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 1
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RAX = bitcast %union.anon* %14 to i64*
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16 = getelementptr inbounds %struct.GPR, %struct.GPR* %15, i32 0, i32 11
  %17 = getelementptr inbounds %struct.Reg, %struct.Reg* %16, i32 0, i32 0
  %RDI = bitcast %union.anon* %17 to i64*
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19 = getelementptr inbounds %struct.GPR, %struct.GPR* %18, i32 0, i32 13
  %20 = getelementptr inbounds %struct.Reg, %struct.Reg* %19, i32 0, i32 0
  %RSP = bitcast %union.anon* %20 to i64*
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22 = getelementptr inbounds %struct.GPR, %struct.GPR* %21, i32 0, i32 15
  %23 = getelementptr inbounds %struct.Reg, %struct.Reg* %22, i32 0, i32 0
  %RBP = bitcast %union.anon* %23 to i64*
  %24 = load i64, i64* %RBP
  %25 = load i64, i64* %PC
  %26 = add i64 %25, 1
  store i64 %26, i64* %PC
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %28 = load i64, i64* %27, align 8, !tbaa !2428
  %29 = add i64 %28, -8
  %30 = inttoptr i64 %29 to i64*
  store i64 %24, i64* %30
  store i64 %29, i64* %27, align 8, !tbaa !2428
  %31 = load i64, i64* %PC
  %32 = add i64 %31, 5
  store i64 %32, i64* %PC
  store i64 and (i64 ptrtoint (i64* @stderr to i64), i64 4294967295), i64* %RAX, align 8, !tbaa !2428
  %33 = load i64, i64* %RAX
  %34 = load i64, i64* %PC
  %35 = add i64 %34, 6
  store i64 %35, i64* %PC
  %36 = sub i64 %33, ptrtoint (i64* @stderr to i64)
  %37 = icmp ult i64 %33, ptrtoint (i64* @stderr to i64)
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %38, i8* %39, align 1, !tbaa !2432
  %40 = trunc i64 %36 to i32
  %41 = and i32 %40, 255
  %42 = call i32 @llvm.ctpop.i32(i32 %41) #17
  %43 = trunc i32 %42 to i8
  %44 = and i8 %43, 1
  %45 = xor i8 %44, 1
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %45, i8* %46, align 1, !tbaa !2446
  %47 = xor i64 ptrtoint (i64* @stderr to i64), %33
  %48 = xor i64 %47, %36
  %49 = lshr i64 %48, 4
  %50 = trunc i64 %49 to i8
  %51 = and i8 %50, 1
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %51, i8* %52, align 1, !tbaa !2450
  %53 = icmp eq i64 %36, 0
  %54 = zext i1 %53 to i8
  %55 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %54, i8* %55, align 1, !tbaa !2447
  %56 = lshr i64 %36, 63
  %57 = trunc i64 %56 to i8
  %58 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %57, i8* %58, align 1, !tbaa !2448
  %59 = lshr i64 %33, 63
  %60 = xor i64 lshr (i64 ptrtoint (i64* @stderr to i64), i64 63), %59
  %61 = xor i64 %56, %59
  %62 = add nuw nsw i64 %61, %60
  %63 = icmp eq i64 %62, 2
  %64 = zext i1 %63 to i8
  %65 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %64, i8* %65, align 1, !tbaa !2449
  %66 = load i64, i64* %RSP
  %67 = load i64, i64* %PC
  %68 = add i64 %67, 3
  store i64 %68, i64* %PC
  store i64 %66, i64* %RBP, align 8, !tbaa !2428
  %69 = load i64, i64* %PC
  %70 = add i64 %69, 25
  %71 = load i64, i64* %PC
  %72 = add i64 %71, 2
  %73 = load i64, i64* %PC
  %74 = add i64 %73, 2
  store i64 %74, i64* %PC
  %75 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %76 = load i8, i8* %75, align 1, !tbaa !2447
  store i8 %76, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %77 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %78 = icmp ne i8 %76, 0
  %79 = select i1 %78, i64 %70, i64 %72
  store i64 %79, i64* %77, align 8, !tbaa !2428
  %80 = load i8, i8* %BRANCH_TAKEN
  %81 = icmp eq i8 %80, 1
  br i1 %81, label %block_400788, label %block_400771

block_40077b:                                     ; preds = %block_400771
  %82 = load i64, i64* %PC
  %83 = add i64 %82, 1
  store i64 %83, i64* %PC
  %84 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %85 = load i64, i64* %84, align 8, !tbaa !2428
  %86 = add i64 %85, 8
  %87 = inttoptr i64 %85 to i64*
  %88 = load i64, i64* %87
  store i64 %88, i64* %RBP, align 8, !tbaa !2428
  store i64 %86, i64* %84, align 8, !tbaa !2428
  %89 = load i64, i64* %PC
  %90 = add i64 %89, 5
  store i64 %90, i64* %PC
  store i64 and (i64 ptrtoint (i64* @stderr to i64), i64 4294967295), i64* %RDI, align 8, !tbaa !2428
  %91 = load i64, i64* %RAX
  %92 = load i64, i64* %PC
  %93 = add i64 %92, 2
  store i64 %93, i64* %PC
  %94 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %91, i64* %94, align 8, !tbaa !2428
  %95 = load i64, i64* %PC
  switch i64 %95, label %163 [
    i64 4196234, label %block_40078a
    i64 4196227, label %block_400783
  ]

block_400771:                                     ; preds = %block_400760
  %96 = load i64, i64* %PC
  %97 = add i64 %96, 5
  store i64 %97, i64* %PC
  store i64 0, i64* %RAX, align 8, !tbaa !2428
  %98 = load i64, i64* %RAX
  %99 = load i64, i64* %RAX
  %100 = load i64, i64* %PC
  %101 = add i64 %100, 3
  store i64 %101, i64* %PC
  %102 = and i64 %99, %98
  %103 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %103, align 1, !tbaa !2432
  %104 = trunc i64 %102 to i32
  %105 = and i32 %104, 255
  %106 = call i32 @llvm.ctpop.i32(i32 %105) #17
  %107 = trunc i32 %106 to i8
  %108 = and i8 %107, 1
  %109 = xor i8 %108, 1
  %110 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %109, i8* %110, align 1, !tbaa !2446
  %111 = icmp eq i64 %102, 0
  %112 = zext i1 %111 to i8
  %113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %112, i8* %113, align 1, !tbaa !2447
  %114 = lshr i64 %102, 63
  %115 = trunc i64 %114 to i8
  %116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %115, i8* %116, align 1, !tbaa !2448
  %117 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %117, align 1, !tbaa !2449
  %118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %118, align 1, !tbaa !2450
  %119 = load i64, i64* %PC
  %120 = add i64 %119, 15
  %121 = load i64, i64* %PC
  %122 = add i64 %121, 2
  %123 = load i64, i64* %PC
  %124 = add i64 %123, 2
  store i64 %124, i64* %PC
  %125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %126 = load i8, i8* %125, align 1, !tbaa !2447
  store i8 %126, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %127 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %128 = icmp ne i8 %126, 0
  %129 = select i1 %128, i64 %120, i64 %122
  store i64 %129, i64* %127, align 8, !tbaa !2428
  %130 = load i8, i8* %BRANCH_TAKEN
  %131 = icmp eq i8 %130, 1
  br i1 %131, label %block_400788, label %block_40077b

block_400788:                                     ; preds = %block_400783, %block_400771, %block_400760
  %MEMORY.0 = phi %struct.Memory* [ %2, %block_400760 ], [ %2, %block_400771 ], [ %2, %block_400783 ]
  %132 = load i64, i64* %PC
  %133 = add i64 %132, 1
  store i64 %133, i64* %PC
  %134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %135 = load i64, i64* %134, align 8, !tbaa !2428
  %136 = add i64 %135, 8
  %137 = inttoptr i64 %135 to i64*
  %138 = load i64, i64* %137
  store i64 %138, i64* %RBP, align 8, !tbaa !2428
  store i64 %136, i64* %134, align 8, !tbaa !2428
  %139 = load i64, i64* %PC
  %140 = add i64 %139, 1
  store i64 %140, i64* %PC
  %141 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %142 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %143 = load i64, i64* %142, align 8, !tbaa !2428
  %144 = inttoptr i64 %143 to i64*
  %145 = load i64, i64* %144
  store i64 %145, i64* %141, align 8, !tbaa !2428
  %146 = add i64 %143, 8
  store i64 %146, i64* %142, align 8, !tbaa !2428
  ret %struct.Memory* %MEMORY.0

block_40078a:                                     ; preds = %block_40077b
  %147 = load i64, i64* %RAX
  %148 = load i64, i64* %RAX
  %149 = add i64 %148, %147
  %150 = load i16, i16* %AX
  %151 = zext i16 %150 to i64
  %152 = load i64, i64* %PC
  %153 = add i64 %152, 6
  store i64 %153, i64* %PC
  %154 = load i64, i64* %PC
  %155 = tail call %struct.Memory* @sub_400790_register_tm_clones(%struct.State* %0, i64 %154, %struct.Memory* %2)
  ret %struct.Memory* %155

block_400783:                                     ; preds = %block_40077b
  %156 = load i64, i64* %RAX
  %157 = load i64, i64* %RAX
  %158 = add i64 %157, %156
  %159 = load i32, i32* %EAX
  %160 = zext i32 %159 to i64
  %161 = load i64, i64* %PC
  %162 = add i64 %161, 5
  store i64 %162, i64* %PC
  br label %block_400788

; <label>:163:                                    ; preds = %block_40077b
  %164 = load i64, i64* %PC
  %165 = tail call %struct.Memory* @__remill_jump(%struct.State* %0, i64 %164, %struct.Memory* %2)
  ret %struct.Memory* %165
}

; Function Attrs: noinline
define %struct.Memory* @sub_401740_P3(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_401740:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 13
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSP = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %16 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %15, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %16 to %"class.std::bitset"*
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %18 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %17, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %18 to %"class.std::bitset"*
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %20 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %19, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %20 to %union.vec128_t*
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %22 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %21, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %22 to %union.vec128_t*
  %23 = load i64, i64* %RBP
  %24 = load i64, i64* %PC
  %25 = add i64 %24, 1
  store i64 %25, i64* %PC
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %27 = load i64, i64* %26, align 8, !tbaa !2428
  %28 = add i64 %27, -8
  %29 = inttoptr i64 %28 to i64*
  store i64 %23, i64* %29
  store i64 %28, i64* %26, align 8, !tbaa !2428
  %30 = load i64, i64* %RSP
  %31 = load i64, i64* %PC
  %32 = add i64 %31, 3
  store i64 %32, i64* %PC
  store i64 %30, i64* %RBP, align 8, !tbaa !2428
  %33 = load i64, i64* %RBP
  %34 = sub i64 %33, 8
  %35 = bitcast %union.vec128_t* %XMM0 to i8*
  %36 = load i64, i64* %PC
  %37 = add i64 %36, 5
  store i64 %37, i64* %PC
  %38 = bitcast i8* %35 to double*
  %39 = load double, double* %38, align 1
  %40 = inttoptr i64 %34 to double*
  store double %39, double* %40
  %41 = load i64, i64* %RBP
  %42 = sub i64 %41, 16
  %43 = bitcast %union.vec128_t* %XMM1 to i8*
  %44 = load i64, i64* %PC
  %45 = add i64 %44, 5
  store i64 %45, i64* %PC
  %46 = bitcast i8* %43 to double*
  %47 = load double, double* %46, align 1
  %48 = inttoptr i64 %42 to double*
  store double %47, double* %48
  %49 = load i64, i64* %RBP
  %50 = sub i64 %49, 24
  %51 = load i64, i64* %RDI
  %52 = load i64, i64* %PC
  %53 = add i64 %52, 4
  store i64 %53, i64* %PC
  %54 = inttoptr i64 %50 to i64*
  store i64 %51, i64* %54
  %55 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %56 = load i64, i64* %RBP
  %57 = sub i64 %56, 8
  %58 = load i64, i64* %PC
  %59 = add i64 %58, 5
  store i64 %59, i64* %PC
  %60 = inttoptr i64 %57 to double*
  %61 = load double, double* %60
  %62 = bitcast i8* %55 to double*
  store double %61, double* %62, align 1, !tbaa !2451
  %63 = getelementptr inbounds i8, i8* %55, i64 8
  %64 = bitcast i8* %63 to double*
  store double 0.000000e+00, double* %64, align 1, !tbaa !2451
  %65 = load i64, i64* %RBP
  %66 = sub i64 %65, 32
  %67 = bitcast %union.vec128_t* %XMM0 to i8*
  %68 = load i64, i64* %PC
  %69 = add i64 %68, 5
  store i64 %69, i64* %PC
  %70 = bitcast i8* %67 to double*
  %71 = load double, double* %70, align 1
  %72 = inttoptr i64 %66 to double*
  store double %71, double* %72
  %73 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %74 = load i64, i64* %RBP
  %75 = sub i64 %74, 16
  %76 = load i64, i64* %PC
  %77 = add i64 %76, 5
  store i64 %77, i64* %PC
  %78 = inttoptr i64 %75 to double*
  %79 = load double, double* %78
  %80 = bitcast i8* %73 to double*
  store double %79, double* %80, align 1, !tbaa !2451
  %81 = getelementptr inbounds i8, i8* %73, i64 8
  %82 = bitcast i8* %81 to double*
  store double 0.000000e+00, double* %82, align 1, !tbaa !2451
  %83 = load i64, i64* %RBP
  %84 = sub i64 %83, 40
  %85 = bitcast %union.vec128_t* %XMM0 to i8*
  %86 = load i64, i64* %PC
  %87 = add i64 %86, 5
  store i64 %87, i64* %PC
  %88 = bitcast i8* %85 to double*
  %89 = load double, double* %88, align 1
  %90 = inttoptr i64 %84 to double*
  store double %89, double* %90
  %91 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %92 = load i64, i64* %PC
  %93 = add i64 %92, 9
  store i64 %93, i64* %PC
  %94 = load double, double* bitcast (%T_type* @T to double*)
  %95 = bitcast i8* %91 to double*
  store double %94, double* %95, align 1, !tbaa !2451
  %96 = getelementptr inbounds i8, i8* %91, i64 8
  %97 = bitcast i8* %96 to double*
  store double 0.000000e+00, double* %97, align 1, !tbaa !2451
  %98 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %99 = load i64, i64* %RBP
  %100 = sub i64 %99, 32
  %101 = load i64, i64* %PC
  %102 = add i64 %101, 5
  store i64 %102, i64* %PC
  %103 = inttoptr i64 %100 to double*
  %104 = load double, double* %103
  %105 = bitcast i8* %98 to double*
  store double %104, double* %105, align 1, !tbaa !2451
  %106 = getelementptr inbounds i8, i8* %98, i64 8
  %107 = bitcast i8* %106 to double*
  store double 0.000000e+00, double* %107, align 1, !tbaa !2451
  %108 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %109 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %110 = load i64, i64* %RBP
  %111 = sub i64 %110, 40
  %112 = load i64, i64* %PC
  %113 = add i64 %112, 5
  store i64 %113, i64* %PC
  %114 = bitcast i8* %109 to double*
  %115 = load double, double* %114, align 1
  %116 = getelementptr inbounds i8, i8* %109, i64 8
  %117 = bitcast i8* %116 to i64*
  %118 = load i64, i64* %117, align 1
  %119 = inttoptr i64 %111 to double*
  %120 = load double, double* %119
  %121 = fadd double %115, %120
  %122 = bitcast i8* %108 to double*
  store double %121, double* %122, align 1, !tbaa !2451
  %123 = getelementptr inbounds i8, i8* %108, i64 8
  %124 = bitcast i8* %123 to i64*
  store i64 %118, i64* %124, align 1, !tbaa !2451
  %125 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %126 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %127 = bitcast %union.vec128_t* %XMM1 to i8*
  %128 = load i64, i64* %PC
  %129 = add i64 %128, 4
  store i64 %129, i64* %PC
  %130 = bitcast i8* %126 to double*
  %131 = load double, double* %130, align 1
  %132 = getelementptr inbounds i8, i8* %126, i64 8
  %133 = bitcast i8* %132 to i64*
  %134 = load i64, i64* %133, align 1
  %135 = bitcast i8* %127 to double*
  %136 = load double, double* %135, align 1
  %137 = fmul double %131, %136
  %138 = bitcast i8* %125 to double*
  store double %137, double* %138, align 1, !tbaa !2451
  %139 = getelementptr inbounds i8, i8* %125, i64 8
  %140 = bitcast i8* %139 to i64*
  store i64 %134, i64* %140, align 1, !tbaa !2451
  %141 = load i64, i64* %RBP
  %142 = sub i64 %141, 32
  %143 = bitcast %union.vec128_t* %XMM0 to i8*
  %144 = load i64, i64* %PC
  %145 = add i64 %144, 5
  store i64 %145, i64* %PC
  %146 = bitcast i8* %143 to double*
  %147 = load double, double* %146, align 1
  %148 = inttoptr i64 %142 to double*
  store double %147, double* %148
  %149 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %150 = load i64, i64* %PC
  %151 = add i64 %150, 9
  store i64 %151, i64* %PC
  %152 = load double, double* bitcast (%T_type* @T to double*)
  %153 = bitcast i8* %149 to double*
  store double %152, double* %153, align 1, !tbaa !2451
  %154 = getelementptr inbounds i8, i8* %149, i64 8
  %155 = bitcast i8* %154 to double*
  store double 0.000000e+00, double* %155, align 1, !tbaa !2451
  %156 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %157 = load i64, i64* %RBP
  %158 = sub i64 %157, 32
  %159 = load i64, i64* %PC
  %160 = add i64 %159, 5
  store i64 %160, i64* %PC
  %161 = inttoptr i64 %158 to double*
  %162 = load double, double* %161
  %163 = bitcast i8* %156 to double*
  store double %162, double* %163, align 1, !tbaa !2451
  %164 = getelementptr inbounds i8, i8* %156, i64 8
  %165 = bitcast i8* %164 to double*
  store double 0.000000e+00, double* %165, align 1, !tbaa !2451
  %166 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %167 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %168 = load i64, i64* %RBP
  %169 = sub i64 %168, 40
  %170 = load i64, i64* %PC
  %171 = add i64 %170, 5
  store i64 %171, i64* %PC
  %172 = bitcast i8* %167 to double*
  %173 = load double, double* %172, align 1
  %174 = getelementptr inbounds i8, i8* %167, i64 8
  %175 = bitcast i8* %174 to i64*
  %176 = load i64, i64* %175, align 1
  %177 = inttoptr i64 %169 to double*
  %178 = load double, double* %177
  %179 = fadd double %173, %178
  %180 = bitcast i8* %166 to double*
  store double %179, double* %180, align 1, !tbaa !2451
  %181 = getelementptr inbounds i8, i8* %166, i64 8
  %182 = bitcast i8* %181 to i64*
  store i64 %176, i64* %182, align 1, !tbaa !2451
  %183 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %184 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %185 = bitcast %union.vec128_t* %XMM1 to i8*
  %186 = load i64, i64* %PC
  %187 = add i64 %186, 4
  store i64 %187, i64* %PC
  %188 = bitcast i8* %184 to double*
  %189 = load double, double* %188, align 1
  %190 = getelementptr inbounds i8, i8* %184, i64 8
  %191 = bitcast i8* %190 to i64*
  %192 = load i64, i64* %191, align 1
  %193 = bitcast i8* %185 to double*
  %194 = load double, double* %193, align 1
  %195 = fmul double %189, %194
  %196 = bitcast i8* %183 to double*
  store double %195, double* %196, align 1, !tbaa !2451
  %197 = getelementptr inbounds i8, i8* %183, i64 8
  %198 = bitcast i8* %197 to i64*
  store i64 %192, i64* %198, align 1, !tbaa !2451
  %199 = load i64, i64* %RBP
  %200 = sub i64 %199, 40
  %201 = bitcast %union.vec128_t* %XMM0 to i8*
  %202 = load i64, i64* %PC
  %203 = add i64 %202, 5
  store i64 %203, i64* %PC
  %204 = bitcast i8* %201 to double*
  %205 = load double, double* %204, align 1
  %206 = inttoptr i64 %200 to double*
  store double %205, double* %206
  %207 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %208 = load i64, i64* %RBP
  %209 = sub i64 %208, 32
  %210 = load i64, i64* %PC
  %211 = add i64 %210, 5
  store i64 %211, i64* %PC
  %212 = inttoptr i64 %209 to double*
  %213 = load double, double* %212
  %214 = bitcast i8* %207 to double*
  store double %213, double* %214, align 1, !tbaa !2451
  %215 = getelementptr inbounds i8, i8* %207, i64 8
  %216 = bitcast i8* %215 to double*
  store double 0.000000e+00, double* %216, align 1, !tbaa !2451
  %217 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %218 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %219 = load i64, i64* %RBP
  %220 = sub i64 %219, 40
  %221 = load i64, i64* %PC
  %222 = add i64 %221, 5
  store i64 %222, i64* %PC
  %223 = bitcast i8* %218 to double*
  %224 = load double, double* %223, align 1
  %225 = getelementptr inbounds i8, i8* %218, i64 8
  %226 = bitcast i8* %225 to i64*
  %227 = load i64, i64* %226, align 1
  %228 = inttoptr i64 %220 to double*
  %229 = load double, double* %228
  %230 = fadd double %224, %229
  %231 = bitcast i8* %217 to double*
  store double %230, double* %231, align 1, !tbaa !2451
  %232 = getelementptr inbounds i8, i8* %217, i64 8
  %233 = bitcast i8* %232 to i64*
  store i64 %227, i64* %233, align 1, !tbaa !2451
  %234 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %235 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %236 = load i64, i64* %PC
  %237 = add i64 %236, 9
  store i64 %237, i64* %PC
  %238 = bitcast i8* %235 to double*
  %239 = load double, double* %238, align 1
  %240 = getelementptr inbounds i8, i8* %235, i64 8
  %241 = bitcast i8* %240 to i64*
  %242 = load i64, i64* %241, align 1
  %243 = load double, double* bitcast (%T2_type* @T2 to double*)
  %244 = fdiv double %239, %243
  %245 = bitcast i8* %234 to double*
  store double %244, double* %245, align 1, !tbaa !2451
  %246 = getelementptr inbounds i8, i8* %234, i64 8
  %247 = bitcast i8* %246 to i64*
  store i64 %242, i64* %247, align 1, !tbaa !2451
  %248 = load i64, i64* %RBP
  %249 = sub i64 %248, 24
  %250 = load i64, i64* %PC
  %251 = add i64 %250, 4
  store i64 %251, i64* %PC
  %252 = inttoptr i64 %249 to i64*
  %253 = load i64, i64* %252
  store i64 %253, i64* %RDI, align 8, !tbaa !2428
  %254 = load i64, i64* %RDI
  %255 = bitcast %union.vec128_t* %XMM0 to i8*
  %256 = load i64, i64* %PC
  %257 = add i64 %256, 4
  store i64 %257, i64* %PC
  %258 = bitcast i8* %255 to double*
  %259 = load double, double* %258, align 1
  %260 = inttoptr i64 %254 to double*
  store double %259, double* %260
  %261 = load i64, i64* %PC
  %262 = add i64 %261, 1
  store i64 %262, i64* %PC
  %263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %264 = load i64, i64* %263, align 8, !tbaa !2428
  %265 = add i64 %264, 8
  %266 = inttoptr i64 %264 to i64*
  %267 = load i64, i64* %266
  store i64 %267, i64* %RBP, align 8, !tbaa !2428
  store i64 %265, i64* %263, align 8, !tbaa !2428
  %268 = load i64, i64* %PC
  %269 = add i64 %268, 1
  store i64 %269, i64* %PC
  %270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %271 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %272 = load i64, i64* %271, align 8, !tbaa !2428
  %273 = inttoptr i64 %272 to i64*
  %274 = load i64, i64* %273
  store i64 %274, i64* %270, align 8, !tbaa !2428
  %275 = add i64 %272, 8
  store i64 %275, i64* %271, align 8, !tbaa !2428
  ret %struct.Memory* %2
}

; Function Attrs: noinline
define %struct.Memory* @sub_4015a0_POUT(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_4015a0:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 1
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %EAX = bitcast %union.anon* %12 to i32*
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14 = getelementptr inbounds %struct.GPR, %struct.GPR* %13, i32 0, i32 1
  %15 = getelementptr inbounds %struct.Reg, %struct.Reg* %14, i32 0, i32 0
  %RAX = bitcast %union.anon* %15 to i64*
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17 = getelementptr inbounds %struct.GPR, %struct.GPR* %16, i32 0, i32 5
  %18 = getelementptr inbounds %struct.Reg, %struct.Reg* %17, i32 0, i32 0
  %RCX = bitcast %union.anon* %18 to i64*
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20 = getelementptr inbounds %struct.GPR, %struct.GPR* %19, i32 0, i32 7
  %21 = getelementptr inbounds %struct.Reg, %struct.Reg* %20, i32 0, i32 0
  %RDX = bitcast %union.anon* %21 to i64*
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23 = getelementptr inbounds %struct.GPR, %struct.GPR* %22, i32 0, i32 9
  %24 = getelementptr inbounds %struct.Reg, %struct.Reg* %23, i32 0, i32 0
  %RSI = bitcast %union.anon* %24 to i64*
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26 = getelementptr inbounds %struct.GPR, %struct.GPR* %25, i32 0, i32 11
  %27 = getelementptr inbounds %struct.Reg, %struct.Reg* %26, i32 0, i32 0
  %RDI = bitcast %union.anon* %27 to i64*
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29 = getelementptr inbounds %struct.GPR, %struct.GPR* %28, i32 0, i32 13
  %30 = getelementptr inbounds %struct.Reg, %struct.Reg* %29, i32 0, i32 0
  %RSP = bitcast %union.anon* %30 to i64*
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32 = getelementptr inbounds %struct.GPR, %struct.GPR* %31, i32 0, i32 15
  %33 = getelementptr inbounds %struct.Reg, %struct.Reg* %32, i32 0, i32 0
  %RBP = bitcast %union.anon* %33 to i64*
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %35 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %34, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %35 to %"class.std::bitset"*
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %37 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %36, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %37 to %"class.std::bitset"*
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %39 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %38, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %39 to %"class.std::bitset"*
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %41 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %40, i64 0, i64 3
  %YMM3 = bitcast %union.VectorReg* %41 to %"class.std::bitset"*
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %43 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %42, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %43 to %union.vec128_t*
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %45 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %44, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %45 to %union.vec128_t*
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %47 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %46, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %47 to %union.vec128_t*
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %49 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %48, i64 0, i64 3
  %XMM3 = bitcast %union.VectorReg* %49 to %union.vec128_t*
  %50 = load i64, i64* %RBP
  %51 = load i64, i64* %PC
  %52 = add i64 %51, 1
  store i64 %52, i64* %PC
  %53 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %54 = load i64, i64* %53, align 8, !tbaa !2428
  %55 = add i64 %54, -8
  %56 = inttoptr i64 %55 to i64*
  store i64 %50, i64* %56
  store i64 %55, i64* %53, align 8, !tbaa !2428
  %57 = load i64, i64* %RSP
  %58 = load i64, i64* %PC
  %59 = add i64 %58, 3
  store i64 %59, i64* %PC
  store i64 %57, i64* %RBP, align 8, !tbaa !2428
  %60 = load i64, i64* %RSP
  %61 = load i64, i64* %PC
  %62 = add i64 %61, 4
  store i64 %62, i64* %PC
  %63 = sub i64 %60, 64
  store i64 %63, i64* %RSP, align 8, !tbaa !2428
  %64 = icmp ult i64 %60, 64
  %65 = zext i1 %64 to i8
  %66 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %65, i8* %66, align 1, !tbaa !2432
  %67 = trunc i64 %63 to i32
  %68 = and i32 %67, 255
  %69 = call i32 @llvm.ctpop.i32(i32 %68) #17
  %70 = trunc i32 %69 to i8
  %71 = and i8 %70, 1
  %72 = xor i8 %71, 1
  %73 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %72, i8* %73, align 1, !tbaa !2446
  %74 = xor i64 64, %60
  %75 = xor i64 %74, %63
  %76 = lshr i64 %75, 4
  %77 = trunc i64 %76 to i8
  %78 = and i8 %77, 1
  %79 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %78, i8* %79, align 1, !tbaa !2450
  %80 = icmp eq i64 %63, 0
  %81 = zext i1 %80 to i8
  %82 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %81, i8* %82, align 1, !tbaa !2447
  %83 = lshr i64 %63, 63
  %84 = trunc i64 %83 to i8
  %85 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %84, i8* %85, align 1, !tbaa !2448
  %86 = lshr i64 %60, 63
  %87 = xor i64 %83, %86
  %88 = add nuw nsw i64 %87, %86
  %89 = icmp eq i64 %88, 2
  %90 = zext i1 %89 to i8
  %91 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %90, i8* %91, align 1, !tbaa !2449
  %92 = load i64, i64* %PC
  %93 = add i64 %92, 10
  store i64 %93, i64* %PC
  store i64 add (i64 ptrtoint (%seg_4018b0__rodata_type* @seg_4018b0__rodata to i64), i64 103), i64* %RAX, align 8, !tbaa !2428
  %94 = load i64, i64* %RBP
  %95 = sub i64 %94, 8
  %96 = load i64, i64* %RDI
  %97 = load i64, i64* %PC
  %98 = add i64 %97, 4
  store i64 %98, i64* %PC
  %99 = inttoptr i64 %95 to i64*
  store i64 %96, i64* %99
  %100 = load i64, i64* %RBP
  %101 = sub i64 %100, 16
  %102 = load i64, i64* %RSI
  %103 = load i64, i64* %PC
  %104 = add i64 %103, 4
  store i64 %104, i64* %PC
  %105 = inttoptr i64 %101 to i64*
  store i64 %102, i64* %105
  %106 = load i64, i64* %RBP
  %107 = sub i64 %106, 24
  %108 = load i64, i64* %RDX
  %109 = load i64, i64* %PC
  %110 = add i64 %109, 4
  store i64 %110, i64* %PC
  %111 = inttoptr i64 %107 to i64*
  store i64 %108, i64* %111
  %112 = load i64, i64* %RBP
  %113 = sub i64 %112, 32
  %114 = bitcast %union.vec128_t* %XMM0 to i8*
  %115 = load i64, i64* %PC
  %116 = add i64 %115, 5
  store i64 %116, i64* %PC
  %117 = bitcast i8* %114 to double*
  %118 = load double, double* %117, align 1
  %119 = inttoptr i64 %113 to double*
  store double %118, double* %119
  %120 = load i64, i64* %RBP
  %121 = sub i64 %120, 40
  %122 = bitcast %union.vec128_t* %XMM1 to i8*
  %123 = load i64, i64* %PC
  %124 = add i64 %123, 5
  store i64 %124, i64* %PC
  %125 = bitcast i8* %122 to double*
  %126 = load double, double* %125, align 1
  %127 = inttoptr i64 %121 to double*
  store double %126, double* %127
  %128 = load i64, i64* %RBP
  %129 = sub i64 %128, 48
  %130 = bitcast %union.vec128_t* %XMM2 to i8*
  %131 = load i64, i64* %PC
  %132 = add i64 %131, 5
  store i64 %132, i64* %PC
  %133 = bitcast i8* %130 to double*
  %134 = load double, double* %133, align 1
  %135 = inttoptr i64 %129 to double*
  store double %134, double* %135
  %136 = load i64, i64* %RBP
  %137 = sub i64 %136, 56
  %138 = bitcast %union.vec128_t* %XMM3 to i8*
  %139 = load i64, i64* %PC
  %140 = add i64 %139, 5
  store i64 %140, i64* %PC
  %141 = bitcast i8* %138 to double*
  %142 = load double, double* %141, align 1
  %143 = inttoptr i64 %137 to double*
  store double %142, double* %143
  %144 = load i64, i64* %RBP
  %145 = sub i64 %144, 8
  %146 = load i64, i64* %PC
  %147 = add i64 %146, 4
  store i64 %147, i64* %PC
  %148 = inttoptr i64 %145 to i64*
  %149 = load i64, i64* %148
  store i64 %149, i64* %RSI, align 8, !tbaa !2428
  %150 = load i64, i64* %RBP
  %151 = sub i64 %150, 16
  %152 = load i64, i64* %PC
  %153 = add i64 %152, 4
  store i64 %153, i64* %PC
  %154 = inttoptr i64 %151 to i64*
  %155 = load i64, i64* %154
  store i64 %155, i64* %RDX, align 8, !tbaa !2428
  %156 = load i64, i64* %RBP
  %157 = sub i64 %156, 24
  %158 = load i64, i64* %PC
  %159 = add i64 %158, 4
  store i64 %159, i64* %PC
  %160 = inttoptr i64 %157 to i64*
  %161 = load i64, i64* %160
  store i64 %161, i64* %RCX, align 8, !tbaa !2428
  %162 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %163 = load i64, i64* %RBP
  %164 = sub i64 %163, 32
  %165 = load i64, i64* %PC
  %166 = add i64 %165, 5
  store i64 %166, i64* %PC
  %167 = inttoptr i64 %164 to double*
  %168 = load double, double* %167
  %169 = bitcast i8* %162 to double*
  store double %168, double* %169, align 1, !tbaa !2451
  %170 = getelementptr inbounds i8, i8* %162, i64 8
  %171 = bitcast i8* %170 to double*
  store double 0.000000e+00, double* %171, align 1, !tbaa !2451
  %172 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %173 = load i64, i64* %RBP
  %174 = sub i64 %173, 40
  %175 = load i64, i64* %PC
  %176 = add i64 %175, 5
  store i64 %176, i64* %PC
  %177 = inttoptr i64 %174 to double*
  %178 = load double, double* %177
  %179 = bitcast i8* %172 to double*
  store double %178, double* %179, align 1, !tbaa !2451
  %180 = getelementptr inbounds i8, i8* %172, i64 8
  %181 = bitcast i8* %180 to double*
  store double 0.000000e+00, double* %181, align 1, !tbaa !2451
  %182 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %183 = load i64, i64* %RBP
  %184 = sub i64 %183, 48
  %185 = load i64, i64* %PC
  %186 = add i64 %185, 5
  store i64 %186, i64* %PC
  %187 = inttoptr i64 %184 to double*
  %188 = load double, double* %187
  %189 = bitcast i8* %182 to double*
  store double %188, double* %189, align 1, !tbaa !2451
  %190 = getelementptr inbounds i8, i8* %182, i64 8
  %191 = bitcast i8* %190 to double*
  store double 0.000000e+00, double* %191, align 1, !tbaa !2451
  %192 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %193 = load i64, i64* %RBP
  %194 = sub i64 %193, 56
  %195 = load i64, i64* %PC
  %196 = add i64 %195, 5
  store i64 %196, i64* %PC
  %197 = inttoptr i64 %194 to double*
  %198 = load double, double* %197
  %199 = bitcast i8* %192 to double*
  store double %198, double* %199, align 1, !tbaa !2451
  %200 = getelementptr inbounds i8, i8* %192, i64 8
  %201 = bitcast i8* %200 to double*
  store double 0.000000e+00, double* %201, align 1, !tbaa !2451
  %202 = load i64, i64* %RAX
  %203 = load i64, i64* %PC
  %204 = add i64 %203, 3
  store i64 %204, i64* %PC
  store i64 %202, i64* %RDI, align 8, !tbaa !2428
  %205 = load i64, i64* %PC
  %206 = add i64 %205, 2
  store i64 %206, i64* %PC
  store i8 4, i8* %AL, align 1, !tbaa !2453
  %207 = load i64, i64* %PC
  %208 = sub i64 %207, 3927
  %209 = load i64, i64* %PC
  %210 = add i64 %209, 5
  %211 = load i64, i64* %PC
  %212 = add i64 %211, 5
  store i64 %212, i64* %PC
  %213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %214 = load i64, i64* %213, align 8, !tbaa !2428
  %215 = add i64 %214, -8
  %216 = inttoptr i64 %215 to i64*
  store i64 %210, i64* %216
  store i64 %215, i64* %213, align 8, !tbaa !2428
  %217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %208, i64* %217, align 8, !tbaa !2428
  %218 = load i64, i64* %PC
  %219 = call %struct.Memory* @ext_602160_printf(%struct.State* %0, i64 %218, %struct.Memory* %2)
  %220 = load i64, i64* %RBP
  %221 = sub i64 %220, 60
  %222 = load i32, i32* %EAX
  %223 = zext i32 %222 to i64
  %224 = load i64, i64* %PC
  %225 = add i64 %224, 3
  store i64 %225, i64* %PC
  %226 = inttoptr i64 %221 to i32*
  store i32 %222, i32* %226
  %227 = load i64, i64* %RSP
  %228 = load i64, i64* %PC
  %229 = add i64 %228, 4
  store i64 %229, i64* %PC
  %230 = add i64 64, %227
  store i64 %230, i64* %RSP, align 8, !tbaa !2428
  %231 = icmp ult i64 %230, %227
  %232 = icmp ult i64 %230, 64
  %233 = or i1 %231, %232
  %234 = zext i1 %233 to i8
  %235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %234, i8* %235, align 1, !tbaa !2432
  %236 = trunc i64 %230 to i32
  %237 = and i32 %236, 255
  %238 = call i32 @llvm.ctpop.i32(i32 %237) #17
  %239 = trunc i32 %238 to i8
  %240 = and i8 %239, 1
  %241 = xor i8 %240, 1
  %242 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %241, i8* %242, align 1, !tbaa !2446
  %243 = xor i64 64, %227
  %244 = xor i64 %243, %230
  %245 = lshr i64 %244, 4
  %246 = trunc i64 %245 to i8
  %247 = and i8 %246, 1
  %248 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %247, i8* %248, align 1, !tbaa !2450
  %249 = icmp eq i64 %230, 0
  %250 = zext i1 %249 to i8
  %251 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %250, i8* %251, align 1, !tbaa !2447
  %252 = lshr i64 %230, 63
  %253 = trunc i64 %252 to i8
  %254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %253, i8* %254, align 1, !tbaa !2448
  %255 = lshr i64 %227, 63
  %256 = xor i64 %252, %255
  %257 = add nuw nsw i64 %256, %252
  %258 = icmp eq i64 %257, 2
  %259 = zext i1 %258 to i8
  %260 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %259, i8* %260, align 1, !tbaa !2449
  %261 = load i64, i64* %PC
  %262 = add i64 %261, 1
  store i64 %262, i64* %PC
  %263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %264 = load i64, i64* %263, align 8, !tbaa !2428
  %265 = add i64 %264, 8
  %266 = inttoptr i64 %264 to i64*
  %267 = load i64, i64* %266
  store i64 %267, i64* %RBP, align 8, !tbaa !2428
  store i64 %265, i64* %263, align 8, !tbaa !2428
  %268 = load i64, i64* %PC
  %269 = add i64 %268, 1
  store i64 %269, i64* %PC
  %270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %271 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %272 = load i64, i64* %271, align 8, !tbaa !2428
  %273 = inttoptr i64 %272 to i64*
  %274 = load i64, i64* %273
  store i64 %274, i64* %270, align 8, !tbaa !2428
  %275 = add i64 %272, 8
  store i64 %275, i64* %271, align 8, !tbaa !2428
  ret %struct.Memory* %219
}

; Function Attrs: noinline
define %struct.Memory* @sub_400790_register_tm_clones(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_400790:
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %EAX = bitcast %union.anon* %11 to i32*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 1
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RAX = bitcast %union.anon* %14 to i64*
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16 = getelementptr inbounds %struct.GPR, %struct.GPR* %15, i32 0, i32 9
  %17 = getelementptr inbounds %struct.Reg, %struct.Reg* %16, i32 0, i32 0
  %RSI = bitcast %union.anon* %17 to i64*
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19 = getelementptr inbounds %struct.GPR, %struct.GPR* %18, i32 0, i32 11
  %20 = getelementptr inbounds %struct.Reg, %struct.Reg* %19, i32 0, i32 0
  %RDI = bitcast %union.anon* %20 to i64*
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22 = getelementptr inbounds %struct.GPR, %struct.GPR* %21, i32 0, i32 13
  %23 = getelementptr inbounds %struct.Reg, %struct.Reg* %22, i32 0, i32 0
  %RSP = bitcast %union.anon* %23 to i64*
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25 = getelementptr inbounds %struct.GPR, %struct.GPR* %24, i32 0, i32 15
  %26 = getelementptr inbounds %struct.Reg, %struct.Reg* %25, i32 0, i32 0
  %RBP = bitcast %union.anon* %26 to i64*
  %27 = load i64, i64* %PC
  %28 = add i64 %27, 5
  store i64 %28, i64* %PC
  store i64 and (i64 ptrtoint (i64* @stderr to i64), i64 4294967295), i64* %RSI, align 8, !tbaa !2428
  %29 = load i64, i64* %RBP
  %30 = load i64, i64* %PC
  %31 = add i64 %30, 1
  store i64 %31, i64* %PC
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %33 = load i64, i64* %32, align 8, !tbaa !2428
  %34 = add i64 %33, -8
  %35 = inttoptr i64 %34 to i64*
  store i64 %29, i64* %35
  store i64 %34, i64* %32, align 8, !tbaa !2428
  %36 = load i64, i64* %RSI
  %37 = load i64, i64* %PC
  %38 = add i64 %37, 7
  store i64 %38, i64* %PC
  %39 = sub i64 %36, ptrtoint (i64* @stderr to i64)
  store i64 %39, i64* %RSI, align 8, !tbaa !2428
  %40 = icmp ult i64 %36, ptrtoint (i64* @stderr to i64)
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %41, i8* %42, align 1, !tbaa !2432
  %43 = trunc i64 %39 to i32
  %44 = and i32 %43, 255
  %45 = call i32 @llvm.ctpop.i32(i32 %44) #17
  %46 = trunc i32 %45 to i8
  %47 = and i8 %46, 1
  %48 = xor i8 %47, 1
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %48, i8* %49, align 1, !tbaa !2446
  %50 = xor i64 ptrtoint (i64* @stderr to i64), %36
  %51 = xor i64 %50, %39
  %52 = lshr i64 %51, 4
  %53 = trunc i64 %52 to i8
  %54 = and i8 %53, 1
  %55 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %54, i8* %55, align 1, !tbaa !2450
  %56 = icmp eq i64 %39, 0
  %57 = zext i1 %56 to i8
  %58 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %57, i8* %58, align 1, !tbaa !2447
  %59 = lshr i64 %39, 63
  %60 = trunc i64 %59 to i8
  %61 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %60, i8* %61, align 1, !tbaa !2448
  %62 = lshr i64 %36, 63
  %63 = xor i64 lshr (i64 ptrtoint (i64* @stderr to i64), i64 63), %62
  %64 = xor i64 %59, %62
  %65 = add nuw nsw i64 %64, %63
  %66 = icmp eq i64 %65, 2
  %67 = zext i1 %66 to i8
  %68 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %67, i8* %68, align 1, !tbaa !2449
  %69 = load i64, i64* %RSP
  %70 = load i64, i64* %PC
  %71 = add i64 %70, 3
  store i64 %71, i64* %PC
  store i64 %69, i64* %RBP, align 8, !tbaa !2428
  %72 = load i64, i64* %RSI
  %73 = load i64, i64* %PC
  %74 = add i64 %73, 4
  store i64 %74, i64* %PC
  %75 = ashr i64 %72, 2
  %76 = trunc i64 %75 to i8
  %77 = and i8 %76, 1
  %78 = ashr i64 %75, 1
  store i64 %78, i64* %RSI, align 8, !tbaa !2428
  %79 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %77, i8* %79, align 1, !tbaa !2453
  %80 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %81 = trunc i64 %78 to i32
  %82 = and i32 %81, 255
  %83 = call i32 @llvm.ctpop.i32(i32 %82) #17
  %84 = trunc i32 %83 to i8
  %85 = and i8 %84, 1
  %86 = xor i8 %85, 1
  store i8 %86, i8* %80, align 1, !tbaa !2453
  %87 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %87, align 1, !tbaa !2453
  %88 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %89 = icmp eq i64 %78, 0
  %90 = zext i1 %89 to i8
  store i8 %90, i8* %88, align 1, !tbaa !2453
  %91 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %92 = lshr i64 %78, 63
  %93 = trunc i64 %92 to i8
  store i8 %93, i8* %91, align 1, !tbaa !2453
  %94 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %94, align 1, !tbaa !2453
  %95 = load i64, i64* %RSI
  %96 = load i64, i64* %PC
  %97 = add i64 %96, 3
  store i64 %97, i64* %PC
  store i64 %95, i64* %RAX, align 8, !tbaa !2428
  %98 = load i64, i64* %RAX
  %99 = load i64, i64* %PC
  %100 = add i64 %99, 4
  store i64 %100, i64* %PC
  %101 = lshr i64 %98, 62
  %102 = trunc i64 %101 to i8
  %103 = and i8 %102, 1
  %104 = lshr i64 %101, 1
  store i64 %104, i64* %RAX, align 8, !tbaa !2428
  %105 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %103, i8* %105, align 1, !tbaa !2453
  %106 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %107 = trunc i64 %104 to i32
  %108 = and i32 %107, 255
  %109 = call i32 @llvm.ctpop.i32(i32 %108) #17
  %110 = trunc i32 %109 to i8
  %111 = and i8 %110, 1
  %112 = xor i8 %111, 1
  store i8 %112, i8* %106, align 1, !tbaa !2453
  %113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %113, align 1, !tbaa !2453
  %114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %115 = icmp eq i64 %104, 0
  %116 = zext i1 %115 to i8
  store i8 %116, i8* %114, align 1, !tbaa !2453
  %117 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %117, align 1, !tbaa !2453
  %118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %118, align 1, !tbaa !2453
  %119 = load i64, i64* %RSI
  %120 = load i64, i64* %RAX
  %121 = load i64, i64* %PC
  %122 = add i64 %121, 3
  store i64 %122, i64* %PC
  %123 = add i64 %120, %119
  store i64 %123, i64* %RSI, align 8, !tbaa !2428
  %124 = icmp ult i64 %123, %119
  %125 = icmp ult i64 %123, %120
  %126 = or i1 %124, %125
  %127 = zext i1 %126 to i8
  %128 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %127, i8* %128, align 1, !tbaa !2432
  %129 = trunc i64 %123 to i32
  %130 = and i32 %129, 255
  %131 = call i32 @llvm.ctpop.i32(i32 %130) #17
  %132 = trunc i32 %131 to i8
  %133 = and i8 %132, 1
  %134 = xor i8 %133, 1
  %135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %134, i8* %135, align 1, !tbaa !2446
  %136 = xor i64 %120, %119
  %137 = xor i64 %136, %123
  %138 = lshr i64 %137, 4
  %139 = trunc i64 %138 to i8
  %140 = and i8 %139, 1
  %141 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %140, i8* %141, align 1, !tbaa !2450
  %142 = icmp eq i64 %123, 0
  %143 = zext i1 %142 to i8
  %144 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %143, i8* %144, align 1, !tbaa !2447
  %145 = lshr i64 %123, 63
  %146 = trunc i64 %145 to i8
  %147 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %146, i8* %147, align 1, !tbaa !2448
  %148 = lshr i64 %119, 63
  %149 = lshr i64 %120, 63
  %150 = xor i64 %145, %148
  %151 = xor i64 %145, %149
  %152 = add nuw nsw i64 %150, %151
  %153 = icmp eq i64 %152, 2
  %154 = zext i1 %153 to i8
  %155 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %154, i8* %155, align 1, !tbaa !2449
  %156 = load i64, i64* %RSI
  %157 = load i64, i64* %PC
  %158 = add i64 %157, 3
  store i64 %158, i64* %PC
  %159 = trunc i64 %156 to i8
  %160 = and i8 %159, 1
  %161 = ashr i64 %156, 1
  store i64 %161, i64* %RSI, align 8, !tbaa !2428
  %162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %160, i8* %162, align 1, !tbaa !2453
  %163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %164 = trunc i64 %161 to i32
  %165 = and i32 %164, 255
  %166 = call i32 @llvm.ctpop.i32(i32 %165) #17
  %167 = trunc i32 %166 to i8
  %168 = and i8 %167, 1
  %169 = xor i8 %168, 1
  store i8 %169, i8* %163, align 1, !tbaa !2453
  %170 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %170, align 1, !tbaa !2453
  %171 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %172 = icmp eq i64 %161, 0
  %173 = zext i1 %172 to i8
  store i8 %173, i8* %171, align 1, !tbaa !2453
  %174 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %175 = lshr i64 %161, 63
  %176 = trunc i64 %175 to i8
  store i8 %176, i8* %174, align 1, !tbaa !2453
  %177 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %177, align 1, !tbaa !2453
  %178 = load i64, i64* %PC
  %179 = add i64 %178, 23
  %180 = load i64, i64* %PC
  %181 = add i64 %180, 2
  %182 = load i64, i64* %PC
  %183 = add i64 %182, 2
  store i64 %183, i64* %PC
  %184 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %185 = load i8, i8* %184, align 1, !tbaa !2447
  store i8 %185, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %186 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %187 = icmp ne i8 %185, 0
  %188 = select i1 %187, i64 %179, i64 %181
  store i64 %188, i64* %186, align 8, !tbaa !2428
  %189 = load i8, i8* %BRANCH_TAKEN
  %190 = icmp eq i8 %189, 1
  br i1 %190, label %block_4007c8, label %block_4007b3

block_4007bd:                                     ; preds = %block_4007b3
  %191 = load i64, i64* %PC
  %192 = add i64 %191, 1
  store i64 %192, i64* %PC
  %193 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %194 = load i64, i64* %193, align 8, !tbaa !2428
  %195 = add i64 %194, 8
  %196 = inttoptr i64 %194 to i64*
  %197 = load i64, i64* %196
  store i64 %197, i64* %RBP, align 8, !tbaa !2428
  store i64 %195, i64* %193, align 8, !tbaa !2428
  %198 = load i64, i64* %PC
  %199 = add i64 %198, 5
  store i64 %199, i64* %PC
  store i64 and (i64 ptrtoint (i64* @stderr to i64), i64 4294967295), i64* %RDI, align 8, !tbaa !2428
  %200 = load i64, i64* %RAX
  %201 = load i64, i64* %PC
  %202 = add i64 %201, 2
  store i64 %202, i64* %PC
  %203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %200, i64* %203, align 8, !tbaa !2428
  %204 = load i64, i64* %PC
  switch i64 %204, label %270 [
    i64 4196298, label %block_4007ca
    i64 4196293, label %block_4007c5
  ]

block_4007ca:                                     ; preds = %block_4007bd
  %205 = load i64, i64* %RAX
  %206 = load i64, i64* %RAX
  %207 = add i64 %206, %205
  %208 = load i16, i16* %AX
  %209 = zext i16 %208 to i64
  %210 = load i64, i64* %PC
  %211 = add i64 %210, 6
  store i64 %211, i64* %PC
  %212 = load i64, i64* %PC
  %213 = tail call %struct.Memory* @sub_4007d0___do_global_dtors_aux(%struct.State* %0, i64 %212, %struct.Memory* %2)
  ret %struct.Memory* %213

block_4007b3:                                     ; preds = %block_400790
  %214 = load i64, i64* %PC
  %215 = add i64 %214, 5
  store i64 %215, i64* %PC
  store i64 0, i64* %RAX, align 8, !tbaa !2428
  %216 = load i64, i64* %RAX
  %217 = load i64, i64* %RAX
  %218 = load i64, i64* %PC
  %219 = add i64 %218, 3
  store i64 %219, i64* %PC
  %220 = and i64 %217, %216
  %221 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %221, align 1, !tbaa !2432
  %222 = trunc i64 %220 to i32
  %223 = and i32 %222, 255
  %224 = call i32 @llvm.ctpop.i32(i32 %223) #17
  %225 = trunc i32 %224 to i8
  %226 = and i8 %225, 1
  %227 = xor i8 %226, 1
  %228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %227, i8* %228, align 1, !tbaa !2446
  %229 = icmp eq i64 %220, 0
  %230 = zext i1 %229 to i8
  %231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %230, i8* %231, align 1, !tbaa !2447
  %232 = lshr i64 %220, 63
  %233 = trunc i64 %232 to i8
  %234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %233, i8* %234, align 1, !tbaa !2448
  %235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %235, align 1, !tbaa !2449
  %236 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %236, align 1, !tbaa !2450
  %237 = load i64, i64* %PC
  %238 = add i64 %237, 13
  %239 = load i64, i64* %PC
  %240 = add i64 %239, 2
  %241 = load i64, i64* %PC
  %242 = add i64 %241, 2
  store i64 %242, i64* %PC
  %243 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %244 = load i8, i8* %243, align 1, !tbaa !2447
  store i8 %244, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %246 = icmp ne i8 %244, 0
  %247 = select i1 %246, i64 %238, i64 %240
  store i64 %247, i64* %245, align 8, !tbaa !2428
  %248 = load i8, i8* %BRANCH_TAKEN
  %249 = icmp eq i8 %248, 1
  br i1 %249, label %block_4007c8, label %block_4007bd

block_4007c8:                                     ; preds = %block_4007c5, %block_4007b3, %block_400790
  %MEMORY.0 = phi %struct.Memory* [ %2, %block_400790 ], [ %2, %block_4007b3 ], [ %2, %block_4007c5 ]
  %250 = load i64, i64* %PC
  %251 = add i64 %250, 1
  store i64 %251, i64* %PC
  %252 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %253 = load i64, i64* %252, align 8, !tbaa !2428
  %254 = add i64 %253, 8
  %255 = inttoptr i64 %253 to i64*
  %256 = load i64, i64* %255
  store i64 %256, i64* %RBP, align 8, !tbaa !2428
  store i64 %254, i64* %252, align 8, !tbaa !2428
  %257 = load i64, i64* %PC
  %258 = add i64 %257, 1
  store i64 %258, i64* %PC
  %259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %260 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %261 = load i64, i64* %260, align 8, !tbaa !2428
  %262 = inttoptr i64 %261 to i64*
  %263 = load i64, i64* %262
  store i64 %263, i64* %259, align 8, !tbaa !2428
  %264 = add i64 %261, 8
  store i64 %264, i64* %260, align 8, !tbaa !2428
  ret %struct.Memory* %MEMORY.0

block_4007c5:                                     ; preds = %block_4007bd
  %265 = load i64, i64* %RAX
  %266 = load i32, i32* %EAX
  %267 = zext i32 %266 to i64
  %268 = load i64, i64* %PC
  %269 = add i64 %268, 3
  store i64 %269, i64* %PC
  br label %block_4007c8

; <label>:270:                                    ; preds = %block_4007bd
  %271 = load i64, i64* %PC
  %272 = tail call %struct.Memory* @__remill_jump(%struct.State* %0, i64 %271, %struct.Memory* %2)
  ret %struct.Memory* %272
}

; Function Attrs: noinline
define %struct.Memory* @sub_4017c0_P0(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_4017c0:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 13
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSP = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %16 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %15, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %16 to %"class.std::bitset"*
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %18 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %17, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %18 to %union.vec128_t*
  %19 = load i64, i64* %RBP
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 1
  store i64 %21, i64* %PC
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %23 = load i64, i64* %22, align 8, !tbaa !2428
  %24 = add i64 %23, -8
  %25 = inttoptr i64 %24 to i64*
  store i64 %19, i64* %25
  store i64 %24, i64* %22, align 8, !tbaa !2428
  %26 = load i64, i64* %RSP
  %27 = load i64, i64* %PC
  %28 = add i64 %27, 3
  store i64 %28, i64* %PC
  store i64 %26, i64* %RBP, align 8, !tbaa !2428
  %29 = load i64, i64* %PC
  %30 = add i64 %29, 8
  store i64 %30, i64* %PC
  %31 = load i32, i32* bitcast (%K_type* @K to i32*)
  %32 = sext i32 %31 to i64
  store i64 %32, i64* %RAX, align 8, !tbaa !2428
  %33 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %34 = load i64, i64* %RAX
  %35 = mul i64 %34, 8
  %36 = add i64 %35, ptrtoint (%E1_type* @E1 to i64)
  %37 = load i64, i64* %PC
  %38 = add i64 %37, 9
  store i64 %38, i64* %PC
  %39 = inttoptr i64 %36 to double*
  %40 = load double, double* %39
  %41 = bitcast i8* %33 to double*
  store double %40, double* %41, align 1, !tbaa !2451
  %42 = getelementptr inbounds i8, i8* %33, i64 8
  %43 = bitcast i8* %42 to double*
  store double 0.000000e+00, double* %43, align 1, !tbaa !2451
  %44 = load i64, i64* %PC
  %45 = add i64 %44, 8
  store i64 %45, i64* %PC
  %46 = load i32, i32* bitcast (%J_type* @J to i32*)
  %47 = sext i32 %46 to i64
  store i64 %47, i64* %RAX, align 8, !tbaa !2428
  %48 = load i64, i64* %RAX
  %49 = mul i64 %48, 8
  %50 = add i64 %49, ptrtoint (%E1_type* @E1 to i64)
  %51 = bitcast %union.vec128_t* %XMM0 to i8*
  %52 = load i64, i64* %PC
  %53 = add i64 %52, 9
  store i64 %53, i64* %PC
  %54 = bitcast i8* %51 to double*
  %55 = load double, double* %54, align 1
  %56 = inttoptr i64 %50 to double*
  store double %55, double* %56
  %57 = load i64, i64* %PC
  %58 = add i64 %57, 8
  store i64 %58, i64* %PC
  %59 = load i32, i32* bitcast (%L_type* @L to i32*)
  %60 = sext i32 %59 to i64
  store i64 %60, i64* %RAX, align 8, !tbaa !2428
  %61 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %62 = load i64, i64* %RAX
  %63 = mul i64 %62, 8
  %64 = add i64 %63, ptrtoint (%E1_type* @E1 to i64)
  %65 = load i64, i64* %PC
  %66 = add i64 %65, 9
  store i64 %66, i64* %PC
  %67 = inttoptr i64 %64 to double*
  %68 = load double, double* %67
  %69 = bitcast i8* %61 to double*
  store double %68, double* %69, align 1, !tbaa !2451
  %70 = getelementptr inbounds i8, i8* %61, i64 8
  %71 = bitcast i8* %70 to double*
  store double 0.000000e+00, double* %71, align 1, !tbaa !2451
  %72 = load i64, i64* %PC
  %73 = add i64 %72, 8
  store i64 %73, i64* %PC
  %74 = load i32, i32* bitcast (%K_type* @K to i32*)
  %75 = sext i32 %74 to i64
  store i64 %75, i64* %RAX, align 8, !tbaa !2428
  %76 = load i64, i64* %RAX
  %77 = mul i64 %76, 8
  %78 = add i64 %77, ptrtoint (%E1_type* @E1 to i64)
  %79 = bitcast %union.vec128_t* %XMM0 to i8*
  %80 = load i64, i64* %PC
  %81 = add i64 %80, 9
  store i64 %81, i64* %PC
  %82 = bitcast i8* %79 to double*
  %83 = load double, double* %82, align 1
  %84 = inttoptr i64 %78 to double*
  store double %83, double* %84
  %85 = load i64, i64* %PC
  %86 = add i64 %85, 8
  store i64 %86, i64* %PC
  %87 = load i32, i32* bitcast (%J_type* @J to i32*)
  %88 = sext i32 %87 to i64
  store i64 %88, i64* %RAX, align 8, !tbaa !2428
  %89 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %90 = load i64, i64* %RAX
  %91 = mul i64 %90, 8
  %92 = add i64 %91, ptrtoint (%E1_type* @E1 to i64)
  %93 = load i64, i64* %PC
  %94 = add i64 %93, 9
  store i64 %94, i64* %PC
  %95 = inttoptr i64 %92 to double*
  %96 = load double, double* %95
  %97 = bitcast i8* %89 to double*
  store double %96, double* %97, align 1, !tbaa !2451
  %98 = getelementptr inbounds i8, i8* %89, i64 8
  %99 = bitcast i8* %98 to double*
  store double 0.000000e+00, double* %99, align 1, !tbaa !2451
  %100 = load i64, i64* %PC
  %101 = add i64 %100, 8
  store i64 %101, i64* %PC
  %102 = load i32, i32* bitcast (%L_type* @L to i32*)
  %103 = sext i32 %102 to i64
  store i64 %103, i64* %RAX, align 8, !tbaa !2428
  %104 = load i64, i64* %RAX
  %105 = mul i64 %104, 8
  %106 = add i64 %105, ptrtoint (%E1_type* @E1 to i64)
  %107 = bitcast %union.vec128_t* %XMM0 to i8*
  %108 = load i64, i64* %PC
  %109 = add i64 %108, 9
  store i64 %109, i64* %PC
  %110 = bitcast i8* %107 to double*
  %111 = load double, double* %110, align 1
  %112 = inttoptr i64 %106 to double*
  store double %111, double* %112
  %113 = load i64, i64* %PC
  %114 = add i64 %113, 1
  store i64 %114, i64* %PC
  %115 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %116 = load i64, i64* %115, align 8, !tbaa !2428
  %117 = add i64 %116, 8
  %118 = inttoptr i64 %116 to i64*
  %119 = load i64, i64* %118
  store i64 %119, i64* %RBP, align 8, !tbaa !2428
  store i64 %117, i64* %115, align 8, !tbaa !2428
  %120 = load i64, i64* %PC
  %121 = add i64 %120, 1
  store i64 %121, i64* %PC
  %122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %124 = load i64, i64* %123, align 8, !tbaa !2428
  %125 = inttoptr i64 %124 to i64*
  %126 = load i64, i64* %125
  store i64 %126, i64* %122, align 8, !tbaa !2428
  %127 = add i64 %124, 8
  store i64 %127, i64* %123, align 8, !tbaa !2428
  ret %struct.Memory* %2
}

; Function Attrs: noinline
define %struct.Memory* @sub_4007d0___do_global_dtors_aux(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_4007d0:
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 7
  store i64 %13, i64* %PC
  %14 = load i8, i8* inttoptr (i64 add (i64 ptrtoint (%seg_602080__bss_type* @seg_602080__bss to i64), i64 8) to i8*)
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1, !tbaa !2432
  %16 = zext i8 %14 to i32
  %17 = call i32 @llvm.ctpop.i32(i32 %16) #17
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1, !tbaa !2446
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1, !tbaa !2450
  %23 = icmp eq i8 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1, !tbaa !2447
  %26 = lshr i8 %14, 7
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26, i8* %27, align 1, !tbaa !2448
  %28 = lshr i8 %14, 7
  %29 = xor i8 %26, %28
  %30 = add nuw nsw i8 %29, %28
  %31 = icmp eq i8 %30, 2
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %32, i8* %33, align 1, !tbaa !2449
  %34 = load i64, i64* %PC
  %35 = add i64 %34, 25
  %36 = load i64, i64* %PC
  %37 = add i64 %36, 2
  %38 = load i64, i64* %PC
  %39 = add i64 %38, 2
  store i64 %39, i64* %PC
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %41 = load i8, i8* %40, align 1, !tbaa !2447
  %42 = icmp eq i8 %41, 0
  %43 = zext i1 %42 to i8
  store i8 %43, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %45 = select i1 %42, i64 %35, i64 %37
  store i64 %45, i64* %44, align 8, !tbaa !2428
  %46 = load i8, i8* %BRANCH_TAKEN
  %47 = icmp eq i8 %46, 1
  br i1 %47, label %block_4007f0, label %block_4007d9

block_4007f0:                                     ; preds = %block_4007d0
  %48 = load i64, i64* %PC
  %49 = add i64 %48, 2
  store i64 %49, i64* %PC
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %52 = load i64, i64* %51, align 8, !tbaa !2428
  %53 = inttoptr i64 %52 to i64*
  %54 = load i64, i64* %53
  store i64 %54, i64* %50, align 8, !tbaa !2428
  %55 = add i64 %52, 8
  store i64 %55, i64* %51, align 8, !tbaa !2428
  ret %struct.Memory* %2

block_4007d9:                                     ; preds = %block_4007d0
  %56 = load i64, i64* %RBP
  %57 = load i64, i64* %PC
  %58 = add i64 %57, 1
  store i64 %58, i64* %PC
  %59 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %60 = load i64, i64* %59, align 8, !tbaa !2428
  %61 = add i64 %60, -8
  %62 = inttoptr i64 %61 to i64*
  store i64 %56, i64* %62
  store i64 %61, i64* %59, align 8, !tbaa !2428
  %63 = load i64, i64* %RSP
  %64 = load i64, i64* %PC
  %65 = add i64 %64, 3
  store i64 %65, i64* %PC
  store i64 %63, i64* %RBP, align 8, !tbaa !2428
  %66 = load i64, i64* %PC
  %67 = sub i64 %66, 125
  %68 = load i64, i64* %PC
  %69 = add i64 %68, 5
  %70 = load i64, i64* %PC
  %71 = add i64 %70, 5
  store i64 %71, i64* %PC
  %72 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %73 = load i64, i64* %72, align 8, !tbaa !2428
  %74 = add i64 %73, -8
  %75 = inttoptr i64 %74 to i64*
  store i64 %69, i64* %75
  store i64 %74, i64* %72, align 8, !tbaa !2428
  %76 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %67, i64* %76, align 8, !tbaa !2428
  %77 = load i64, i64* %PC
  %78 = call %struct.Memory* @sub_400760_deregister_tm_clones_renamed_(%struct.State* %0, i64 %77, %struct.Memory* %2)
  %79 = load i64, i64* %PC
  %80 = add i64 %79, 7
  store i64 %80, i64* %PC
  store i8 1, i8* inttoptr (i64 add (i64 ptrtoint (%seg_602080__bss_type* @seg_602080__bss to i64), i64 8) to i8*)
  %81 = load i64, i64* %PC
  %82 = add i64 %81, 1
  store i64 %82, i64* %PC
  %83 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %84 = load i64, i64* %83, align 8, !tbaa !2428
  %85 = add i64 %84, 8
  %86 = inttoptr i64 %84 to i64*
  %87 = load i64, i64* %86
  store i64 %87, i64* %RBP, align 8, !tbaa !2428
  store i64 %85, i64* %83, align 8, !tbaa !2428
  %88 = load i64, i64* %PC
  %89 = add i64 %88, 1
  store i64 %89, i64* %PC
  %90 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %91 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %92 = load i64, i64* %91, align 8, !tbaa !2428
  %93 = inttoptr i64 %92 to i64*
  %94 = load i64, i64* %93
  store i64 %94, i64* %90, align 8, !tbaa !2428
  %95 = add i64 %92, 8
  store i64 %95, i64* %91, align 8, !tbaa !2428
  ret %struct.Memory* %78
}

; Function Attrs: noinline
define %struct.Memory* @sub_400648__init_proc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_400648:
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 13
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = sub i64 %12, 8
  store i64 %15, i64* %RSP, align 8, !tbaa !2428
  %16 = icmp ult i64 %12, 8
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1, !tbaa !2432
  %19 = trunc i64 %15 to i32
  %20 = and i32 %19, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20) #17
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1, !tbaa !2446
  %26 = xor i64 8, %12
  %27 = xor i64 %26, %15
  %28 = lshr i64 %27, 4
  %29 = trunc i64 %28 to i8
  %30 = and i8 %29, 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %30, i8* %31, align 1, !tbaa !2450
  %32 = icmp eq i64 %15, 0
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %33, i8* %34, align 1, !tbaa !2447
  %35 = lshr i64 %15, 63
  %36 = trunc i64 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %36, i8* %37, align 1, !tbaa !2448
  %38 = lshr i64 %12, 63
  %39 = xor i64 %35, %38
  %40 = add nuw nsw i64 %39, %38
  %41 = icmp eq i64 %40, 2
  %42 = zext i1 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %42, i8* %43, align 1, !tbaa !2449
  %44 = load i64, i64* %PC
  %45 = add i64 %44, 7
  store i64 %45, i64* %PC
  %46 = load i64, i64* inttoptr (i64 add (i64 ptrtoint (%seg_601ff0__got_type* @seg_601ff0__got to i64), i64 8) to i64*)
  store i64 %46, i64* %RAX, align 8, !tbaa !2428
  %47 = load i64, i64* %RAX
  %48 = load i64, i64* %RAX
  %49 = load i64, i64* %PC
  %50 = add i64 %49, 3
  store i64 %50, i64* %PC
  %51 = and i64 %48, %47
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %52, align 1, !tbaa !2432
  %53 = trunc i64 %51 to i32
  %54 = and i32 %53, 255
  %55 = call i32 @llvm.ctpop.i32(i32 %54) #17
  %56 = trunc i32 %55 to i8
  %57 = and i8 %56, 1
  %58 = xor i8 %57, 1
  %59 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %58, i8* %59, align 1, !tbaa !2446
  %60 = icmp eq i64 %51, 0
  %61 = zext i1 %60 to i8
  %62 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %61, i8* %62, align 1, !tbaa !2447
  %63 = lshr i64 %51, 63
  %64 = trunc i64 %63 to i8
  %65 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %64, i8* %65, align 1, !tbaa !2448
  %66 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %66, align 1, !tbaa !2449
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %67, align 1, !tbaa !2450
  %68 = load i64, i64* %PC
  %69 = add i64 %68, 4
  %70 = load i64, i64* %PC
  %71 = add i64 %70, 2
  %72 = load i64, i64* %PC
  %73 = add i64 %72, 2
  store i64 %73, i64* %PC
  %74 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %75 = load i8, i8* %74, align 1, !tbaa !2447
  store i8 %75, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %76 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %77 = icmp ne i8 %75, 0
  %78 = select i1 %77, i64 %69, i64 %71
  store i64 %78, i64* %76, align 8, !tbaa !2428
  %79 = load i8, i8* %BRANCH_TAKEN
  %80 = icmp eq i8 %79, 1
  br i1 %80, label %block_40065a, label %block_400658

block_400658:                                     ; preds = %block_400648
  %81 = load i64, i64* %RAX
  %82 = load i64, i64* %PC
  %83 = add i64 %82, 2
  %84 = load i64, i64* %PC
  %85 = add i64 %84, 2
  store i64 %85, i64* %PC
  %86 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %87 = load i64, i64* %86, align 8, !tbaa !2428
  %88 = add i64 %87, -8
  %89 = inttoptr i64 %88 to i64*
  store i64 %83, i64* %89
  store i64 %88, i64* %86, align 8, !tbaa !2428
  %90 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %81, i64* %90, align 8, !tbaa !2428
  %91 = load i64, i64* %PC
  %92 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 %91, %struct.Memory* %2)
  br label %block_40065a

block_40065a:                                     ; preds = %block_400658, %block_400648
  %MEMORY.0 = phi %struct.Memory* [ %2, %block_400648 ], [ %92, %block_400658 ]
  %93 = load i64, i64* %RSP
  %94 = load i64, i64* %PC
  %95 = add i64 %94, 4
  store i64 %95, i64* %PC
  %96 = add i64 8, %93
  store i64 %96, i64* %RSP, align 8, !tbaa !2428
  %97 = icmp ult i64 %96, %93
  %98 = icmp ult i64 %96, 8
  %99 = or i1 %97, %98
  %100 = zext i1 %99 to i8
  %101 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %100, i8* %101, align 1, !tbaa !2432
  %102 = trunc i64 %96 to i32
  %103 = and i32 %102, 255
  %104 = call i32 @llvm.ctpop.i32(i32 %103) #17
  %105 = trunc i32 %104 to i8
  %106 = and i8 %105, 1
  %107 = xor i8 %106, 1
  %108 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %107, i8* %108, align 1, !tbaa !2446
  %109 = xor i64 8, %93
  %110 = xor i64 %109, %96
  %111 = lshr i64 %110, 4
  %112 = trunc i64 %111 to i8
  %113 = and i8 %112, 1
  %114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %113, i8* %114, align 1, !tbaa !2450
  %115 = icmp eq i64 %96, 0
  %116 = zext i1 %115 to i8
  %117 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %116, i8* %117, align 1, !tbaa !2447
  %118 = lshr i64 %96, 63
  %119 = trunc i64 %118 to i8
  %120 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %119, i8* %120, align 1, !tbaa !2448
  %121 = lshr i64 %93, 63
  %122 = xor i64 %118, %121
  %123 = add nuw nsw i64 %122, %118
  %124 = icmp eq i64 %123, 2
  %125 = zext i1 %124 to i8
  %126 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %125, i8* %126, align 1, !tbaa !2449
  %127 = load i64, i64* %PC
  %128 = add i64 %127, 1
  store i64 %128, i64* %PC
  %129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %130 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %131 = load i64, i64* %130, align 8, !tbaa !2428
  %132 = inttoptr i64 %131 to i64*
  %133 = load i64, i64* %132
  store i64 %133, i64* %129, align 8, !tbaa !2428
  %134 = add i64 %131, 8
  store i64 %134, i64* %130, align 8, !tbaa !2428
  ret %struct.Memory* %MEMORY.0
}

; Function Attrs: noinline
define %struct.Memory* @sub_400750__dl_relocate_static_pie(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_400750:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 2
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10 = load i64, i64* %9, align 8, !tbaa !2428
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11
  store i64 %12, i64* %8, align 8, !tbaa !2428
  %13 = add i64 %10, 8
  store i64 %13, i64* %9, align 8, !tbaa !2428
  ret %struct.Memory* %2
}

; Function Attrs: noinline
define %struct.Memory* @sub_4018a4__term_proc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_4018a4:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = sub i64 %9, 8
  store i64 %12, i64* %RSP, align 8, !tbaa !2428
  %13 = icmp ult i64 %9, 8
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14, i8* %15, align 1, !tbaa !2432
  %16 = trunc i64 %12 to i32
  %17 = and i32 %16, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17) #17
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1, !tbaa !2446
  %23 = xor i64 8, %9
  %24 = xor i64 %23, %12
  %25 = lshr i64 %24, 4
  %26 = trunc i64 %25 to i8
  %27 = and i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27, i8* %28, align 1, !tbaa !2450
  %29 = icmp eq i64 %12, 0
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30, i8* %31, align 1, !tbaa !2447
  %32 = lshr i64 %12, 63
  %33 = trunc i64 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33, i8* %34, align 1, !tbaa !2448
  %35 = lshr i64 %9, 63
  %36 = xor i64 %32, %35
  %37 = add nuw nsw i64 %36, %35
  %38 = icmp eq i64 %37, 2
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %39, i8* %40, align 1, !tbaa !2449
  %41 = load i64, i64* %RSP
  %42 = load i64, i64* %PC
  %43 = add i64 %42, 4
  store i64 %43, i64* %PC
  %44 = add i64 8, %41
  store i64 %44, i64* %RSP, align 8, !tbaa !2428
  %45 = icmp ult i64 %44, %41
  %46 = icmp ult i64 %44, 8
  %47 = or i1 %45, %46
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %48, i8* %49, align 1, !tbaa !2432
  %50 = trunc i64 %44 to i32
  %51 = and i32 %50, 255
  %52 = call i32 @llvm.ctpop.i32(i32 %51) #17
  %53 = trunc i32 %52 to i8
  %54 = and i8 %53, 1
  %55 = xor i8 %54, 1
  %56 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %55, i8* %56, align 1, !tbaa !2446
  %57 = xor i64 8, %41
  %58 = xor i64 %57, %44
  %59 = lshr i64 %58, 4
  %60 = trunc i64 %59 to i8
  %61 = and i8 %60, 1
  %62 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %61, i8* %62, align 1, !tbaa !2450
  %63 = icmp eq i64 %44, 0
  %64 = zext i1 %63 to i8
  %65 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %64, i8* %65, align 1, !tbaa !2447
  %66 = lshr i64 %44, 63
  %67 = trunc i64 %66 to i8
  %68 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %67, i8* %68, align 1, !tbaa !2448
  %69 = lshr i64 %41, 63
  %70 = xor i64 %66, %69
  %71 = add nuw nsw i64 %70, %66
  %72 = icmp eq i64 %71, 2
  %73 = zext i1 %72 to i8
  %74 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %73, i8* %74, align 1, !tbaa !2449
  %75 = load i64, i64* %PC
  %76 = add i64 %75, 1
  store i64 %76, i64* %PC
  %77 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %78 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %79 = load i64, i64* %78, align 8, !tbaa !2428
  %80 = inttoptr i64 %79 to i64*
  %81 = load i64, i64* %80
  store i64 %81, i64* %77, align 8, !tbaa !2428
  %82 = add i64 %79, 8
  store i64 %82, i64* %78, align 8, !tbaa !2428
  ret %struct.Memory* %2
}

; Function Attrs: noinline
declare void @__mcsema_attach_call() #13

; Function Attrs: naked nobuiltin noinline
define internal void @callback_sub_400800_frame_dummy() #15 {
  call void asm sideeffect "pushq $0;pushq $$0x400800;jmpq *$1;", "*m,*m,~{dirflag},~{fpsr},~{flags}"(%struct.Memory* (%struct.State*, i64, %struct.Memory*)** @1, void ()** @2)
  ret void
}

define internal %struct.Memory* @callback_sub_400800_frame_dummy_wrapper(%struct.State*, i64, %struct.Memory*) {
  %4 = load volatile i1, i1* @0
  br i1 %4, label %5, label %6

; <label>:5:                                      ; preds = %3
  br label %__mcsema_early_init.exit

; <label>:6:                                      ; preds = %3
  store volatile i1 true, i1* @0
  br label %__mcsema_early_init.exit

__mcsema_early_init.exit:                         ; preds = %6, %5
  %7 = tail call %struct.Memory* @sub_400800_frame_dummy(%struct.State* %0, i64 %1, %struct.Memory* %2)
  ret %struct.Memory* %7
}

; Function Attrs: naked nobuiltin noinline
define internal void @callback_sub_4007d0___do_global_dtors_aux() #15 {
  call void asm sideeffect "pushq $0;pushq $$0x4007d0;jmpq *$1;", "*m,*m,~{dirflag},~{fpsr},~{flags}"(%struct.Memory* (%struct.State*, i64, %struct.Memory*)** @3, void ()** @2)
  ret void
}

define internal %struct.Memory* @callback_sub_4007d0___do_global_dtors_aux_wrapper(%struct.State*, i64, %struct.Memory*) {
  %4 = load volatile i1, i1* @0
  br i1 %4, label %5, label %6

; <label>:5:                                      ; preds = %3
  br label %__mcsema_early_init.exit

; <label>:6:                                      ; preds = %3
  store volatile i1 true, i1* @0
  br label %__mcsema_early_init.exit

__mcsema_early_init.exit:                         ; preds = %6, %5
  %7 = tail call %struct.Memory* @sub_4007d0___do_global_dtors_aux(%struct.State* %0, i64 %1, %struct.Memory* %2)
  ret %struct.Memory* %7
}

; Function Attrs: naked nobuiltin noinline
define internal void @callback_sub_4018a0___libc_csu_fini() #15 {
  call void asm sideeffect "pushq $0;pushq $$0x4018a0;jmpq *$1;", "*m,*m,~{dirflag},~{fpsr},~{flags}"(%struct.Memory* (%struct.State*, i64, %struct.Memory*)** @4, void ()** @2)
  ret void
}

define internal %struct.Memory* @callback_sub_4018a0___libc_csu_fini_wrapper(%struct.State*, i64, %struct.Memory*) {
  %4 = load volatile i1, i1* @0
  br i1 %4, label %5, label %6

; <label>:5:                                      ; preds = %3
  br label %__mcsema_early_init.exit

; <label>:6:                                      ; preds = %3
  store volatile i1 true, i1* @0
  br label %__mcsema_early_init.exit

__mcsema_early_init.exit:                         ; preds = %6, %5
  %7 = tail call %struct.Memory* @sub_4018a0___libc_csu_fini(%struct.State* %0, i64 %1, %struct.Memory* %2)
  ret %struct.Memory* %7
}

; Function Attrs: naked nobuiltin noinline
define internal void @callback_sub_401830___libc_csu_init() #15 {
  call void asm sideeffect "pushq $0;pushq $$0x401830;jmpq *$1;", "*m,*m,~{dirflag},~{fpsr},~{flags}"(%struct.Memory* (%struct.State*, i64, %struct.Memory*)** @5, void ()** @2)
  ret void
}

define internal %struct.Memory* @callback_sub_401830___libc_csu_init_wrapper(%struct.State*, i64, %struct.Memory*) {
  %4 = load volatile i1, i1* @0
  br i1 %4, label %5, label %6

; <label>:5:                                      ; preds = %3
  br label %__mcsema_early_init.exit

; <label>:6:                                      ; preds = %3
  store volatile i1 true, i1* @0
  br label %__mcsema_early_init.exit

__mcsema_early_init.exit:                         ; preds = %6, %5
  %7 = tail call %struct.Memory* @sub_401830___libc_csu_init(%struct.State* %0, i64 %1, %struct.Memory* %2)
  ret %struct.Memory* %7
}

; Function Attrs: naked nobuiltin noinline
define dllexport void @main() #15 {
  call void asm sideeffect "pushq $0;pushq $$0x400810;jmpq *$1;", "*m,*m,~{dirflag},~{fpsr},~{flags}"(%struct.Memory* (%struct.State*, i64, %struct.Memory*)** @6, void ()** @2)
  ret void
}

define internal %struct.Memory* @main_wrapper(%struct.State*, i64, %struct.Memory*) {
  %4 = load volatile i1, i1* @0
  br i1 %4, label %5, label %6

; <label>:5:                                      ; preds = %3
  br label %__mcsema_early_init.exit

; <label>:6:                                      ; preds = %3
  store volatile i1 true, i1* @0
  br label %__mcsema_early_init.exit

__mcsema_early_init.exit:                         ; preds = %6, %5
  %7 = tail call %struct.Memory* @sub_400810_main(%struct.State* %0, i64 %1, %struct.Memory* %2)
  ret %struct.Memory* %7
}

; Function Attrs: noinline
define internal %struct.Memory* @ext_602178___libc_start_main(%struct.State*, i64, %struct.Memory*) #13 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64)* @__libc_start_main to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

; Function Attrs: noinline
define internal %struct.Memory* @ext_602168_log(%struct.State*, i64, %struct.Memory*) #13 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @log to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

; Function Attrs: noinline
define internal %struct.Memory* @ext_6020f0_exp(%struct.State*, i64, %struct.Memory*) #13 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @exp to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

; Function Attrs: alwaysinline inlinehint
define %struct.Memory* @ext_602140_sqrt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #16 {
  %state = alloca %struct.State*, align 8
  %curr_pc = alloca i64, align 8
  %memory = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  %SS_BASE = alloca i64, align 8
  %ES_BASE = alloca i64, align 8
  %DS_BASE = alloca i64, align 8
  %CS_BASE = alloca i64, align 8
  %STATE = alloca %struct.State*, align 8
  %MEMORY = alloca %struct.Memory*, align 8
  %_DR0 = alloca i64*, align 8
  %_DR1 = alloca i64*, align 8
  %_DR2 = alloca i64*, align 8
  %_DR3 = alloca i64*, align 8
  %_DR4 = alloca i64*, align 8
  %_DR5 = alloca i64*, align 8
  %_DR6 = alloca i64*, align 8
  %_DR7 = alloca i64*, align 8
  %CR0 = alloca i64*, align 8
  %CR1 = alloca i64*, align 8
  %CR2 = alloca i64*, align 8
  %CR3 = alloca i64*, align 8
  %CR4 = alloca i64*, align 8
  %CR8 = alloca i64*, align 8
  store %struct.State* %0, %struct.State** %state, align 8
  store i64 %1, i64* %curr_pc, align 8
  store %struct.Memory* %2, %struct.Memory** %memory, align 8
  store i8 0, i8* %BRANCH_TAKEN, align 1
  store i64 0, i64* %SS_BASE, align 8
  store i64 0, i64* %ES_BASE, align 8
  store i64 0, i64* %DS_BASE, align 8
  store i64 0, i64* %CS_BASE, align 8
  store %struct.State* %0, %struct.State** %STATE, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0
  %PC = bitcast %union.anon* %6 to i64*
  store i64 %1, i64* %PC, align 8
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 1
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0
  %10 = bitcast %union.anon* %9 to %struct.anon.2*
  %AH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10, i32 0, i32 1
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12 = getelementptr inbounds %struct.GPR, %struct.GPR* %11, i32 0, i32 3
  %13 = getelementptr inbounds %struct.Reg, %struct.Reg* %12, i32 0, i32 0
  %14 = bitcast %union.anon* %13 to %struct.anon.2*
  %BH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %14, i32 0, i32 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16 = getelementptr inbounds %struct.GPR, %struct.GPR* %15, i32 0, i32 5
  %17 = getelementptr inbounds %struct.Reg, %struct.Reg* %16, i32 0, i32 0
  %18 = bitcast %union.anon* %17 to %struct.anon.2*
  %CH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %18, i32 0, i32 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20 = getelementptr inbounds %struct.GPR, %struct.GPR* %19, i32 0, i32 7
  %21 = getelementptr inbounds %struct.Reg, %struct.Reg* %20, i32 0, i32 0
  %22 = bitcast %union.anon* %21 to %struct.anon.2*
  %DH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %22, i32 0, i32 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 1
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0
  %26 = bitcast %union.anon* %25 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %26, i32 0, i32 0
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28 = getelementptr inbounds %struct.GPR, %struct.GPR* %27, i32 0, i32 3
  %29 = getelementptr inbounds %struct.Reg, %struct.Reg* %28, i32 0, i32 0
  %30 = bitcast %union.anon* %29 to %struct.anon.2*
  %BL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %30, i32 0, i32 0
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32 = getelementptr inbounds %struct.GPR, %struct.GPR* %31, i32 0, i32 5
  %33 = getelementptr inbounds %struct.Reg, %struct.Reg* %32, i32 0, i32 0
  %34 = bitcast %union.anon* %33 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %34, i32 0, i32 0
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36 = getelementptr inbounds %struct.GPR, %struct.GPR* %35, i32 0, i32 7
  %37 = getelementptr inbounds %struct.Reg, %struct.Reg* %36, i32 0, i32 0
  %38 = bitcast %union.anon* %37 to %struct.anon.2*
  %DL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %38, i32 0, i32 0
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %40 = getelementptr inbounds %struct.GPR, %struct.GPR* %39, i32 0, i32 9
  %41 = getelementptr inbounds %struct.Reg, %struct.Reg* %40, i32 0, i32 0
  %42 = bitcast %union.anon* %41 to %struct.anon.2*
  %SIL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %42, i32 0, i32 0
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %44 = getelementptr inbounds %struct.GPR, %struct.GPR* %43, i32 0, i32 11
  %45 = getelementptr inbounds %struct.Reg, %struct.Reg* %44, i32 0, i32 0
  %46 = bitcast %union.anon* %45 to %struct.anon.2*
  %DIL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %46, i32 0, i32 0
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %48 = getelementptr inbounds %struct.GPR, %struct.GPR* %47, i32 0, i32 13
  %49 = getelementptr inbounds %struct.Reg, %struct.Reg* %48, i32 0, i32 0
  %50 = bitcast %union.anon* %49 to %struct.anon.2*
  %SPL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %50, i32 0, i32 0
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %52 = getelementptr inbounds %struct.GPR, %struct.GPR* %51, i32 0, i32 15
  %53 = getelementptr inbounds %struct.Reg, %struct.Reg* %52, i32 0, i32 0
  %54 = bitcast %union.anon* %53 to %struct.anon.2*
  %BPL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %54, i32 0, i32 0
  %55 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %56 = getelementptr inbounds %struct.GPR, %struct.GPR* %55, i32 0, i32 17
  %57 = getelementptr inbounds %struct.Reg, %struct.Reg* %56, i32 0, i32 0
  %58 = bitcast %union.anon* %57 to %struct.anon.2*
  %R8B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %58, i32 0, i32 0
  %59 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %60 = getelementptr inbounds %struct.GPR, %struct.GPR* %59, i32 0, i32 19
  %61 = getelementptr inbounds %struct.Reg, %struct.Reg* %60, i32 0, i32 0
  %62 = bitcast %union.anon* %61 to %struct.anon.2*
  %R9B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %62, i32 0, i32 0
  %63 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %64 = getelementptr inbounds %struct.GPR, %struct.GPR* %63, i32 0, i32 21
  %65 = getelementptr inbounds %struct.Reg, %struct.Reg* %64, i32 0, i32 0
  %66 = bitcast %union.anon* %65 to %struct.anon.2*
  %R10B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %66, i32 0, i32 0
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %68 = getelementptr inbounds %struct.GPR, %struct.GPR* %67, i32 0, i32 23
  %69 = getelementptr inbounds %struct.Reg, %struct.Reg* %68, i32 0, i32 0
  %70 = bitcast %union.anon* %69 to %struct.anon.2*
  %R11B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %70, i32 0, i32 0
  %71 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %72 = getelementptr inbounds %struct.GPR, %struct.GPR* %71, i32 0, i32 25
  %73 = getelementptr inbounds %struct.Reg, %struct.Reg* %72, i32 0, i32 0
  %74 = bitcast %union.anon* %73 to %struct.anon.2*
  %R12B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %74, i32 0, i32 0
  %75 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %76 = getelementptr inbounds %struct.GPR, %struct.GPR* %75, i32 0, i32 27
  %77 = getelementptr inbounds %struct.Reg, %struct.Reg* %76, i32 0, i32 0
  %78 = bitcast %union.anon* %77 to %struct.anon.2*
  %R13B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %78, i32 0, i32 0
  %79 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %80 = getelementptr inbounds %struct.GPR, %struct.GPR* %79, i32 0, i32 29
  %81 = getelementptr inbounds %struct.Reg, %struct.Reg* %80, i32 0, i32 0
  %82 = bitcast %union.anon* %81 to %struct.anon.2*
  %R14B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %82, i32 0, i32 0
  %83 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %84 = getelementptr inbounds %struct.GPR, %struct.GPR* %83, i32 0, i32 31
  %85 = getelementptr inbounds %struct.Reg, %struct.Reg* %84, i32 0, i32 0
  %86 = bitcast %union.anon* %85 to %struct.anon.2*
  %R15B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %86, i32 0, i32 0
  %87 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %88 = getelementptr inbounds %struct.GPR, %struct.GPR* %87, i32 0, i32 1
  %89 = getelementptr inbounds %struct.Reg, %struct.Reg* %88, i32 0, i32 0
  %AX = bitcast %union.anon* %89 to i16*
  %90 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %91 = getelementptr inbounds %struct.GPR, %struct.GPR* %90, i32 0, i32 3
  %92 = getelementptr inbounds %struct.Reg, %struct.Reg* %91, i32 0, i32 0
  %BX = bitcast %union.anon* %92 to i16*
  %93 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %94 = getelementptr inbounds %struct.GPR, %struct.GPR* %93, i32 0, i32 5
  %95 = getelementptr inbounds %struct.Reg, %struct.Reg* %94, i32 0, i32 0
  %CX = bitcast %union.anon* %95 to i16*
  %96 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %97 = getelementptr inbounds %struct.GPR, %struct.GPR* %96, i32 0, i32 7
  %98 = getelementptr inbounds %struct.Reg, %struct.Reg* %97, i32 0, i32 0
  %DX = bitcast %union.anon* %98 to i16*
  %99 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %100 = getelementptr inbounds %struct.GPR, %struct.GPR* %99, i32 0, i32 9
  %101 = getelementptr inbounds %struct.Reg, %struct.Reg* %100, i32 0, i32 0
  %SI = bitcast %union.anon* %101 to i16*
  %102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %103 = getelementptr inbounds %struct.GPR, %struct.GPR* %102, i32 0, i32 11
  %104 = getelementptr inbounds %struct.Reg, %struct.Reg* %103, i32 0, i32 0
  %DI = bitcast %union.anon* %104 to i16*
  %105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %106 = getelementptr inbounds %struct.GPR, %struct.GPR* %105, i32 0, i32 13
  %107 = getelementptr inbounds %struct.Reg, %struct.Reg* %106, i32 0, i32 0
  %SP = bitcast %union.anon* %107 to i16*
  %108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %109 = getelementptr inbounds %struct.GPR, %struct.GPR* %108, i32 0, i32 15
  %110 = getelementptr inbounds %struct.Reg, %struct.Reg* %109, i32 0, i32 0
  %BP = bitcast %union.anon* %110 to i16*
  %111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %112 = getelementptr inbounds %struct.GPR, %struct.GPR* %111, i32 0, i32 17
  %113 = getelementptr inbounds %struct.Reg, %struct.Reg* %112, i32 0, i32 0
  %R8W = bitcast %union.anon* %113 to i16*
  %114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %115 = getelementptr inbounds %struct.GPR, %struct.GPR* %114, i32 0, i32 19
  %116 = getelementptr inbounds %struct.Reg, %struct.Reg* %115, i32 0, i32 0
  %R9W = bitcast %union.anon* %116 to i16*
  %117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %118 = getelementptr inbounds %struct.GPR, %struct.GPR* %117, i32 0, i32 21
  %119 = getelementptr inbounds %struct.Reg, %struct.Reg* %118, i32 0, i32 0
  %R10W = bitcast %union.anon* %119 to i16*
  %120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %121 = getelementptr inbounds %struct.GPR, %struct.GPR* %120, i32 0, i32 23
  %122 = getelementptr inbounds %struct.Reg, %struct.Reg* %121, i32 0, i32 0
  %R11W = bitcast %union.anon* %122 to i16*
  %123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %124 = getelementptr inbounds %struct.GPR, %struct.GPR* %123, i32 0, i32 25
  %125 = getelementptr inbounds %struct.Reg, %struct.Reg* %124, i32 0, i32 0
  %R12W = bitcast %union.anon* %125 to i16*
  %126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %127 = getelementptr inbounds %struct.GPR, %struct.GPR* %126, i32 0, i32 27
  %128 = getelementptr inbounds %struct.Reg, %struct.Reg* %127, i32 0, i32 0
  %R13W = bitcast %union.anon* %128 to i16*
  %129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %130 = getelementptr inbounds %struct.GPR, %struct.GPR* %129, i32 0, i32 29
  %131 = getelementptr inbounds %struct.Reg, %struct.Reg* %130, i32 0, i32 0
  %R14W = bitcast %union.anon* %131 to i16*
  %132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %133 = getelementptr inbounds %struct.GPR, %struct.GPR* %132, i32 0, i32 31
  %134 = getelementptr inbounds %struct.Reg, %struct.Reg* %133, i32 0, i32 0
  %R15W = bitcast %union.anon* %134 to i16*
  %135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %136 = getelementptr inbounds %struct.GPR, %struct.GPR* %135, i32 0, i32 33
  %137 = getelementptr inbounds %struct.Reg, %struct.Reg* %136, i32 0, i32 0
  %IP = bitcast %union.anon* %137 to i16*
  %138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %139 = getelementptr inbounds %struct.GPR, %struct.GPR* %138, i32 0, i32 1
  %140 = getelementptr inbounds %struct.Reg, %struct.Reg* %139, i32 0, i32 0
  %EAX = bitcast %union.anon* %140 to i32*
  %141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %142 = getelementptr inbounds %struct.GPR, %struct.GPR* %141, i32 0, i32 3
  %143 = getelementptr inbounds %struct.Reg, %struct.Reg* %142, i32 0, i32 0
  %EBX = bitcast %union.anon* %143 to i32*
  %144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %145 = getelementptr inbounds %struct.GPR, %struct.GPR* %144, i32 0, i32 5
  %146 = getelementptr inbounds %struct.Reg, %struct.Reg* %145, i32 0, i32 0
  %ECX = bitcast %union.anon* %146 to i32*
  %147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %148 = getelementptr inbounds %struct.GPR, %struct.GPR* %147, i32 0, i32 7
  %149 = getelementptr inbounds %struct.Reg, %struct.Reg* %148, i32 0, i32 0
  %EDX = bitcast %union.anon* %149 to i32*
  %150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %151 = getelementptr inbounds %struct.GPR, %struct.GPR* %150, i32 0, i32 9
  %152 = getelementptr inbounds %struct.Reg, %struct.Reg* %151, i32 0, i32 0
  %ESI = bitcast %union.anon* %152 to i32*
  %153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %154 = getelementptr inbounds %struct.GPR, %struct.GPR* %153, i32 0, i32 11
  %155 = getelementptr inbounds %struct.Reg, %struct.Reg* %154, i32 0, i32 0
  %EDI = bitcast %union.anon* %155 to i32*
  %156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %157 = getelementptr inbounds %struct.GPR, %struct.GPR* %156, i32 0, i32 13
  %158 = getelementptr inbounds %struct.Reg, %struct.Reg* %157, i32 0, i32 0
  %ESP = bitcast %union.anon* %158 to i32*
  %159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %160 = getelementptr inbounds %struct.GPR, %struct.GPR* %159, i32 0, i32 15
  %161 = getelementptr inbounds %struct.Reg, %struct.Reg* %160, i32 0, i32 0
  %EBP = bitcast %union.anon* %161 to i32*
  %162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %163 = getelementptr inbounds %struct.GPR, %struct.GPR* %162, i32 0, i32 33
  %164 = getelementptr inbounds %struct.Reg, %struct.Reg* %163, i32 0, i32 0
  %EIP = bitcast %union.anon* %164 to i32*
  %165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %166 = getelementptr inbounds %struct.GPR, %struct.GPR* %165, i32 0, i32 17
  %167 = getelementptr inbounds %struct.Reg, %struct.Reg* %166, i32 0, i32 0
  %R8D = bitcast %union.anon* %167 to i32*
  %168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %169 = getelementptr inbounds %struct.GPR, %struct.GPR* %168, i32 0, i32 19
  %170 = getelementptr inbounds %struct.Reg, %struct.Reg* %169, i32 0, i32 0
  %R9D = bitcast %union.anon* %170 to i32*
  %171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %172 = getelementptr inbounds %struct.GPR, %struct.GPR* %171, i32 0, i32 21
  %173 = getelementptr inbounds %struct.Reg, %struct.Reg* %172, i32 0, i32 0
  %R10D = bitcast %union.anon* %173 to i32*
  %174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %175 = getelementptr inbounds %struct.GPR, %struct.GPR* %174, i32 0, i32 23
  %176 = getelementptr inbounds %struct.Reg, %struct.Reg* %175, i32 0, i32 0
  %R11D = bitcast %union.anon* %176 to i32*
  %177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %178 = getelementptr inbounds %struct.GPR, %struct.GPR* %177, i32 0, i32 25
  %179 = getelementptr inbounds %struct.Reg, %struct.Reg* %178, i32 0, i32 0
  %R12D = bitcast %union.anon* %179 to i32*
  %180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %181 = getelementptr inbounds %struct.GPR, %struct.GPR* %180, i32 0, i32 27
  %182 = getelementptr inbounds %struct.Reg, %struct.Reg* %181, i32 0, i32 0
  %R13D = bitcast %union.anon* %182 to i32*
  %183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %184 = getelementptr inbounds %struct.GPR, %struct.GPR* %183, i32 0, i32 29
  %185 = getelementptr inbounds %struct.Reg, %struct.Reg* %184, i32 0, i32 0
  %R14D = bitcast %union.anon* %185 to i32*
  %186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %187 = getelementptr inbounds %struct.GPR, %struct.GPR* %186, i32 0, i32 31
  %188 = getelementptr inbounds %struct.Reg, %struct.Reg* %187, i32 0, i32 0
  %R15D = bitcast %union.anon* %188 to i32*
  %189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %190 = getelementptr inbounds %struct.GPR, %struct.GPR* %189, i32 0, i32 1
  %191 = getelementptr inbounds %struct.Reg, %struct.Reg* %190, i32 0, i32 0
  %RAX = bitcast %union.anon* %191 to i64*
  %192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %193 = getelementptr inbounds %struct.GPR, %struct.GPR* %192, i32 0, i32 3
  %194 = getelementptr inbounds %struct.Reg, %struct.Reg* %193, i32 0, i32 0
  %RBX = bitcast %union.anon* %194 to i64*
  %195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %196 = getelementptr inbounds %struct.GPR, %struct.GPR* %195, i32 0, i32 5
  %197 = getelementptr inbounds %struct.Reg, %struct.Reg* %196, i32 0, i32 0
  %RCX = bitcast %union.anon* %197 to i64*
  %198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %199 = getelementptr inbounds %struct.GPR, %struct.GPR* %198, i32 0, i32 7
  %200 = getelementptr inbounds %struct.Reg, %struct.Reg* %199, i32 0, i32 0
  %RDX = bitcast %union.anon* %200 to i64*
  %201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %202 = getelementptr inbounds %struct.GPR, %struct.GPR* %201, i32 0, i32 9
  %203 = getelementptr inbounds %struct.Reg, %struct.Reg* %202, i32 0, i32 0
  %RSI = bitcast %union.anon* %203 to i64*
  %204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %205 = getelementptr inbounds %struct.GPR, %struct.GPR* %204, i32 0, i32 11
  %206 = getelementptr inbounds %struct.Reg, %struct.Reg* %205, i32 0, i32 0
  %RDI = bitcast %union.anon* %206 to i64*
  %207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %208 = getelementptr inbounds %struct.GPR, %struct.GPR* %207, i32 0, i32 13
  %209 = getelementptr inbounds %struct.Reg, %struct.Reg* %208, i32 0, i32 0
  %RSP = bitcast %union.anon* %209 to i64*
  %210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %211 = getelementptr inbounds %struct.GPR, %struct.GPR* %210, i32 0, i32 15
  %212 = getelementptr inbounds %struct.Reg, %struct.Reg* %211, i32 0, i32 0
  %RBP = bitcast %union.anon* %212 to i64*
  %213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %214 = getelementptr inbounds %struct.GPR, %struct.GPR* %213, i32 0, i32 17
  %215 = getelementptr inbounds %struct.Reg, %struct.Reg* %214, i32 0, i32 0
  %R8 = bitcast %union.anon* %215 to i64*
  %216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %217 = getelementptr inbounds %struct.GPR, %struct.GPR* %216, i32 0, i32 19
  %218 = getelementptr inbounds %struct.Reg, %struct.Reg* %217, i32 0, i32 0
  %R9 = bitcast %union.anon* %218 to i64*
  %219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %220 = getelementptr inbounds %struct.GPR, %struct.GPR* %219, i32 0, i32 21
  %221 = getelementptr inbounds %struct.Reg, %struct.Reg* %220, i32 0, i32 0
  %R10 = bitcast %union.anon* %221 to i64*
  %222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %223 = getelementptr inbounds %struct.GPR, %struct.GPR* %222, i32 0, i32 23
  %224 = getelementptr inbounds %struct.Reg, %struct.Reg* %223, i32 0, i32 0
  %R11 = bitcast %union.anon* %224 to i64*
  %225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %226 = getelementptr inbounds %struct.GPR, %struct.GPR* %225, i32 0, i32 25
  %227 = getelementptr inbounds %struct.Reg, %struct.Reg* %226, i32 0, i32 0
  %R12 = bitcast %union.anon* %227 to i64*
  %228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %229 = getelementptr inbounds %struct.GPR, %struct.GPR* %228, i32 0, i32 27
  %230 = getelementptr inbounds %struct.Reg, %struct.Reg* %229, i32 0, i32 0
  %R13 = bitcast %union.anon* %230 to i64*
  %231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %232 = getelementptr inbounds %struct.GPR, %struct.GPR* %231, i32 0, i32 29
  %233 = getelementptr inbounds %struct.Reg, %struct.Reg* %232, i32 0, i32 0
  %R14 = bitcast %union.anon* %233 to i64*
  %234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %235 = getelementptr inbounds %struct.GPR, %struct.GPR* %234, i32 0, i32 31
  %236 = getelementptr inbounds %struct.Reg, %struct.Reg* %235, i32 0, i32 0
  %R15 = bitcast %union.anon* %236 to i64*
  %237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %238 = getelementptr inbounds %struct.GPR, %struct.GPR* %237, i32 0, i32 33
  %239 = getelementptr inbounds %struct.Reg, %struct.Reg* %238, i32 0, i32 0
  %RIP = bitcast %union.anon* %239 to i64*
  %240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %241 = getelementptr inbounds %struct.Segments, %struct.Segments* %240, i32 0, i32 1
  %SS = bitcast %union.SegmentSelector* %241 to i16*
  %242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %243 = getelementptr inbounds %struct.Segments, %struct.Segments* %242, i32 0, i32 3
  %ES = bitcast %union.SegmentSelector* %243 to i16*
  %244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %245 = getelementptr inbounds %struct.Segments, %struct.Segments* %244, i32 0, i32 5
  %GS = bitcast %union.SegmentSelector* %245 to i16*
  %246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %247 = getelementptr inbounds %struct.Segments, %struct.Segments* %246, i32 0, i32 7
  %FS = bitcast %union.SegmentSelector* %247 to i16*
  %248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %249 = getelementptr inbounds %struct.Segments, %struct.Segments* %248, i32 0, i32 9
  %DS = bitcast %union.SegmentSelector* %249 to i16*
  %250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %251 = getelementptr inbounds %struct.Segments, %struct.Segments* %250, i32 0, i32 11
  %CS = bitcast %union.SegmentSelector* %251 to i16*
  %252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %253 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %252, i32 0, i32 5
  %254 = getelementptr inbounds %struct.Reg, %struct.Reg* %253, i32 0, i32 0
  %GS_BASE = bitcast %union.anon* %254 to i64*
  %255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %256 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %255, i32 0, i32 7
  %257 = getelementptr inbounds %struct.Reg, %struct.Reg* %256, i32 0, i32 0
  %FS_BASE = bitcast %union.anon* %257 to i64*
  %258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %259 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %258, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %259 to %"class.std::bitset"*
  %260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %261 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %260, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %261 to %"class.std::bitset"*
  %262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %263 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %262, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %263 to %"class.std::bitset"*
  %264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %265 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %264, i64 0, i64 3
  %YMM3 = bitcast %union.VectorReg* %265 to %"class.std::bitset"*
  %266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %267 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %266, i64 0, i64 4
  %YMM4 = bitcast %union.VectorReg* %267 to %"class.std::bitset"*
  %268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %269 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %268, i64 0, i64 5
  %YMM5 = bitcast %union.VectorReg* %269 to %"class.std::bitset"*
  %270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %271 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %270, i64 0, i64 6
  %YMM6 = bitcast %union.VectorReg* %271 to %"class.std::bitset"*
  %272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %273 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %272, i64 0, i64 7
  %YMM7 = bitcast %union.VectorReg* %273 to %"class.std::bitset"*
  %274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %275 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %274, i64 0, i64 8
  %YMM8 = bitcast %union.VectorReg* %275 to %"class.std::bitset"*
  %276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %277 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %276, i64 0, i64 9
  %YMM9 = bitcast %union.VectorReg* %277 to %"class.std::bitset"*
  %278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %279 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %278, i64 0, i64 10
  %YMM10 = bitcast %union.VectorReg* %279 to %"class.std::bitset"*
  %280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %281 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %280, i64 0, i64 11
  %YMM11 = bitcast %union.VectorReg* %281 to %"class.std::bitset"*
  %282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %283 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %282, i64 0, i64 12
  %YMM12 = bitcast %union.VectorReg* %283 to %"class.std::bitset"*
  %284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %285 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %284, i64 0, i64 13
  %YMM13 = bitcast %union.VectorReg* %285 to %"class.std::bitset"*
  %286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %287 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %286, i64 0, i64 14
  %YMM14 = bitcast %union.VectorReg* %287 to %"class.std::bitset"*
  %288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %289 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %288, i64 0, i64 15
  %YMM15 = bitcast %union.VectorReg* %289 to %"class.std::bitset"*
  %290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %291 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %290, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %291 to %union.vec128_t*
  %292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %293 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %292, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %293 to %union.vec128_t*
  %294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %295 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %294, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %295 to %union.vec128_t*
  %296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %297 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %296, i64 0, i64 3
  %XMM3 = bitcast %union.VectorReg* %297 to %union.vec128_t*
  %298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %299 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %298, i64 0, i64 4
  %XMM4 = bitcast %union.VectorReg* %299 to %union.vec128_t*
  %300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %301 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %300, i64 0, i64 5
  %XMM5 = bitcast %union.VectorReg* %301 to %union.vec128_t*
  %302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %303 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %302, i64 0, i64 6
  %XMM6 = bitcast %union.VectorReg* %303 to %union.vec128_t*
  %304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %305 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %304, i64 0, i64 7
  %XMM7 = bitcast %union.VectorReg* %305 to %union.vec128_t*
  %306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %307 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %306, i64 0, i64 8
  %XMM8 = bitcast %union.VectorReg* %307 to %union.vec128_t*
  %308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %309 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %308, i64 0, i64 9
  %XMM9 = bitcast %union.VectorReg* %309 to %union.vec128_t*
  %310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %311 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %310, i64 0, i64 10
  %XMM10 = bitcast %union.VectorReg* %311 to %union.vec128_t*
  %312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %313 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %312, i64 0, i64 11
  %XMM11 = bitcast %union.VectorReg* %313 to %union.vec128_t*
  %314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %315 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %314, i64 0, i64 12
  %XMM12 = bitcast %union.VectorReg* %315 to %union.vec128_t*
  %316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %317 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %316, i64 0, i64 13
  %XMM13 = bitcast %union.VectorReg* %317 to %union.vec128_t*
  %318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %319 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %318, i64 0, i64 14
  %XMM14 = bitcast %union.VectorReg* %319 to %union.vec128_t*
  %320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %321 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %320, i64 0, i64 15
  %XMM15 = bitcast %union.VectorReg* %321 to %union.vec128_t*
  %322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %323 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %322, i32 0, i32 0
  %324 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %323, i64 0, i64 0
  %ST0 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %324, i32 0, i32 1
  %325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %326 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %325, i32 0, i32 0
  %327 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %326, i64 0, i64 1
  %ST1 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %327, i32 0, i32 1
  %328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %329 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %328, i32 0, i32 0
  %330 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %329, i64 0, i64 2
  %ST2 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %330, i32 0, i32 1
  %331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %332 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %331, i32 0, i32 0
  %333 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %332, i64 0, i64 3
  %ST3 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %333, i32 0, i32 1
  %334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %335 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %334, i32 0, i32 0
  %336 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %335, i64 0, i64 4
  %ST4 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %336, i32 0, i32 1
  %337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %338 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %337, i32 0, i32 0
  %339 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %338, i64 0, i64 5
  %ST5 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %339, i32 0, i32 1
  %340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %341 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %340, i32 0, i32 0
  %342 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %341, i64 0, i64 6
  %ST6 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %342, i32 0, i32 1
  %343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %344 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %343, i32 0, i32 0
  %345 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %344, i64 0, i64 7
  %ST7 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %345, i32 0, i32 1
  %346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %347 = getelementptr inbounds %struct.MMX, %struct.MMX* %346, i32 0, i32 0
  %348 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %347, i64 0, i64 0
  %349 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %348, i32 0, i32 1
  %350 = bitcast %union.vec64_t* %349 to %struct.uint64v1_t*
  %351 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %350, i32 0, i32 0
  %MM0 = getelementptr inbounds [1 x i64], [1 x i64]* %351, i64 0, i64 0
  %352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %353 = getelementptr inbounds %struct.MMX, %struct.MMX* %352, i32 0, i32 0
  %354 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %353, i64 0, i64 1
  %355 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %354, i32 0, i32 1
  %356 = bitcast %union.vec64_t* %355 to %struct.uint64v1_t*
  %357 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %356, i32 0, i32 0
  %MM1 = getelementptr inbounds [1 x i64], [1 x i64]* %357, i64 0, i64 0
  %358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %359 = getelementptr inbounds %struct.MMX, %struct.MMX* %358, i32 0, i32 0
  %360 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %359, i64 0, i64 2
  %361 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %360, i32 0, i32 1
  %362 = bitcast %union.vec64_t* %361 to %struct.uint64v1_t*
  %363 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %362, i32 0, i32 0
  %MM2 = getelementptr inbounds [1 x i64], [1 x i64]* %363, i64 0, i64 0
  %364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %365 = getelementptr inbounds %struct.MMX, %struct.MMX* %364, i32 0, i32 0
  %366 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %365, i64 0, i64 3
  %367 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %366, i32 0, i32 1
  %368 = bitcast %union.vec64_t* %367 to %struct.uint64v1_t*
  %369 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %368, i32 0, i32 0
  %MM3 = getelementptr inbounds [1 x i64], [1 x i64]* %369, i64 0, i64 0
  %370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %371 = getelementptr inbounds %struct.MMX, %struct.MMX* %370, i32 0, i32 0
  %372 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %371, i64 0, i64 4
  %373 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %372, i32 0, i32 1
  %374 = bitcast %union.vec64_t* %373 to %struct.uint64v1_t*
  %375 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %374, i32 0, i32 0
  %MM4 = getelementptr inbounds [1 x i64], [1 x i64]* %375, i64 0, i64 0
  %376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %377 = getelementptr inbounds %struct.MMX, %struct.MMX* %376, i32 0, i32 0
  %378 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %377, i64 0, i64 5
  %379 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %378, i32 0, i32 1
  %380 = bitcast %union.vec64_t* %379 to %struct.uint64v1_t*
  %381 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %380, i32 0, i32 0
  %MM5 = getelementptr inbounds [1 x i64], [1 x i64]* %381, i64 0, i64 0
  %382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %383 = getelementptr inbounds %struct.MMX, %struct.MMX* %382, i32 0, i32 0
  %384 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %383, i64 0, i64 6
  %385 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %384, i32 0, i32 1
  %386 = bitcast %union.vec64_t* %385 to %struct.uint64v1_t*
  %387 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %386, i32 0, i32 0
  %MM6 = getelementptr inbounds [1 x i64], [1 x i64]* %387, i64 0, i64 0
  %388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %389 = getelementptr inbounds %struct.MMX, %struct.MMX* %388, i32 0, i32 0
  %390 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %389, i64 0, i64 7
  %391 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %390, i32 0, i32 1
  %392 = bitcast %union.vec64_t* %391 to %struct.uint64v1_t*
  %393 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %392, i32 0, i32 0
  %MM7 = getelementptr inbounds [1 x i64], [1 x i64]* %393, i64 0, i64 0
  %394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %394, i32 0, i32 5
  %395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %395, i32 0, i32 1
  %396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %396, i32 0, i32 11
  %397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %397, i32 0, i32 13
  %398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %398, i32 0, i32 3
  %399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %399, i32 0, i32 9
  %400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %400, i32 0, i32 7
  store i64* @DR0, i64** %_DR0, align 8
  store i64* @DR1, i64** %_DR1, align 8
  store i64* @DR2, i64** %_DR2, align 8
  store i64* @DR3, i64** %_DR3, align 8
  store i64* @DR4, i64** %_DR4, align 8
  store i64* @DR5, i64** %_DR5, align 8
  store i64* @DR6, i64** %_DR6, align 8
  store i64* @DR7, i64** %_DR7, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8, align 8
  %401 = bitcast %"class.std::bitset"* %YMM0 to double*
  %402 = load double, double* %401
  %403 = load i64, i64* %RSP
  %404 = load %struct.Memory*, %struct.Memory** %MEMORY
  %405 = inttoptr i64 %403 to i64*
  %406 = load i64, i64* %405
  store i64 %406, i64* %PC
  %407 = add i64 %403, 8
  store i64 %407, i64* %RSP
  %408 = call double @sqrt(double %402)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0
  %409 = bitcast %"class.std::bitset"* %YMM0 to double*
  store double %408, double* %409
  %410 = load %struct.Memory*, %struct.Memory** %MEMORY
  ret %struct.Memory* %410
}

; Function Attrs: noinline
define internal %struct.Memory* @ext_602190_atol(%struct.State*, i64, %struct.Memory*) #13 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @atol to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

; Function Attrs: noinline
define internal %struct.Memory* @ext_4006e0_time(%struct.State*, i64, %struct.Memory*) #13 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @time to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

; Function Attrs: alwaysinline inlinehint
define %struct.Memory* @ext_400700_sin(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #16 {
  %state = alloca %struct.State*, align 8
  %curr_pc = alloca i64, align 8
  %memory = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  %SS_BASE = alloca i64, align 8
  %ES_BASE = alloca i64, align 8
  %DS_BASE = alloca i64, align 8
  %CS_BASE = alloca i64, align 8
  %STATE = alloca %struct.State*, align 8
  %MEMORY = alloca %struct.Memory*, align 8
  %_DR0 = alloca i64*, align 8
  %_DR1 = alloca i64*, align 8
  %_DR2 = alloca i64*, align 8
  %_DR3 = alloca i64*, align 8
  %_DR4 = alloca i64*, align 8
  %_DR5 = alloca i64*, align 8
  %_DR6 = alloca i64*, align 8
  %_DR7 = alloca i64*, align 8
  %CR0 = alloca i64*, align 8
  %CR1 = alloca i64*, align 8
  %CR2 = alloca i64*, align 8
  %CR3 = alloca i64*, align 8
  %CR4 = alloca i64*, align 8
  %CR8 = alloca i64*, align 8
  store %struct.State* %0, %struct.State** %state, align 8
  store i64 %1, i64* %curr_pc, align 8
  store %struct.Memory* %2, %struct.Memory** %memory, align 8
  store i8 0, i8* %BRANCH_TAKEN, align 1
  store i64 0, i64* %SS_BASE, align 8
  store i64 0, i64* %ES_BASE, align 8
  store i64 0, i64* %DS_BASE, align 8
  store i64 0, i64* %CS_BASE, align 8
  store %struct.State* %0, %struct.State** %STATE, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0
  %PC = bitcast %union.anon* %6 to i64*
  store i64 %1, i64* %PC, align 8
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 1
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0
  %10 = bitcast %union.anon* %9 to %struct.anon.2*
  %AH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10, i32 0, i32 1
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12 = getelementptr inbounds %struct.GPR, %struct.GPR* %11, i32 0, i32 3
  %13 = getelementptr inbounds %struct.Reg, %struct.Reg* %12, i32 0, i32 0
  %14 = bitcast %union.anon* %13 to %struct.anon.2*
  %BH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %14, i32 0, i32 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16 = getelementptr inbounds %struct.GPR, %struct.GPR* %15, i32 0, i32 5
  %17 = getelementptr inbounds %struct.Reg, %struct.Reg* %16, i32 0, i32 0
  %18 = bitcast %union.anon* %17 to %struct.anon.2*
  %CH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %18, i32 0, i32 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20 = getelementptr inbounds %struct.GPR, %struct.GPR* %19, i32 0, i32 7
  %21 = getelementptr inbounds %struct.Reg, %struct.Reg* %20, i32 0, i32 0
  %22 = bitcast %union.anon* %21 to %struct.anon.2*
  %DH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %22, i32 0, i32 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 1
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0
  %26 = bitcast %union.anon* %25 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %26, i32 0, i32 0
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28 = getelementptr inbounds %struct.GPR, %struct.GPR* %27, i32 0, i32 3
  %29 = getelementptr inbounds %struct.Reg, %struct.Reg* %28, i32 0, i32 0
  %30 = bitcast %union.anon* %29 to %struct.anon.2*
  %BL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %30, i32 0, i32 0
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32 = getelementptr inbounds %struct.GPR, %struct.GPR* %31, i32 0, i32 5
  %33 = getelementptr inbounds %struct.Reg, %struct.Reg* %32, i32 0, i32 0
  %34 = bitcast %union.anon* %33 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %34, i32 0, i32 0
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36 = getelementptr inbounds %struct.GPR, %struct.GPR* %35, i32 0, i32 7
  %37 = getelementptr inbounds %struct.Reg, %struct.Reg* %36, i32 0, i32 0
  %38 = bitcast %union.anon* %37 to %struct.anon.2*
  %DL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %38, i32 0, i32 0
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %40 = getelementptr inbounds %struct.GPR, %struct.GPR* %39, i32 0, i32 9
  %41 = getelementptr inbounds %struct.Reg, %struct.Reg* %40, i32 0, i32 0
  %42 = bitcast %union.anon* %41 to %struct.anon.2*
  %SIL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %42, i32 0, i32 0
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %44 = getelementptr inbounds %struct.GPR, %struct.GPR* %43, i32 0, i32 11
  %45 = getelementptr inbounds %struct.Reg, %struct.Reg* %44, i32 0, i32 0
  %46 = bitcast %union.anon* %45 to %struct.anon.2*
  %DIL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %46, i32 0, i32 0
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %48 = getelementptr inbounds %struct.GPR, %struct.GPR* %47, i32 0, i32 13
  %49 = getelementptr inbounds %struct.Reg, %struct.Reg* %48, i32 0, i32 0
  %50 = bitcast %union.anon* %49 to %struct.anon.2*
  %SPL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %50, i32 0, i32 0
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %52 = getelementptr inbounds %struct.GPR, %struct.GPR* %51, i32 0, i32 15
  %53 = getelementptr inbounds %struct.Reg, %struct.Reg* %52, i32 0, i32 0
  %54 = bitcast %union.anon* %53 to %struct.anon.2*
  %BPL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %54, i32 0, i32 0
  %55 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %56 = getelementptr inbounds %struct.GPR, %struct.GPR* %55, i32 0, i32 17
  %57 = getelementptr inbounds %struct.Reg, %struct.Reg* %56, i32 0, i32 0
  %58 = bitcast %union.anon* %57 to %struct.anon.2*
  %R8B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %58, i32 0, i32 0
  %59 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %60 = getelementptr inbounds %struct.GPR, %struct.GPR* %59, i32 0, i32 19
  %61 = getelementptr inbounds %struct.Reg, %struct.Reg* %60, i32 0, i32 0
  %62 = bitcast %union.anon* %61 to %struct.anon.2*
  %R9B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %62, i32 0, i32 0
  %63 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %64 = getelementptr inbounds %struct.GPR, %struct.GPR* %63, i32 0, i32 21
  %65 = getelementptr inbounds %struct.Reg, %struct.Reg* %64, i32 0, i32 0
  %66 = bitcast %union.anon* %65 to %struct.anon.2*
  %R10B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %66, i32 0, i32 0
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %68 = getelementptr inbounds %struct.GPR, %struct.GPR* %67, i32 0, i32 23
  %69 = getelementptr inbounds %struct.Reg, %struct.Reg* %68, i32 0, i32 0
  %70 = bitcast %union.anon* %69 to %struct.anon.2*
  %R11B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %70, i32 0, i32 0
  %71 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %72 = getelementptr inbounds %struct.GPR, %struct.GPR* %71, i32 0, i32 25
  %73 = getelementptr inbounds %struct.Reg, %struct.Reg* %72, i32 0, i32 0
  %74 = bitcast %union.anon* %73 to %struct.anon.2*
  %R12B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %74, i32 0, i32 0
  %75 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %76 = getelementptr inbounds %struct.GPR, %struct.GPR* %75, i32 0, i32 27
  %77 = getelementptr inbounds %struct.Reg, %struct.Reg* %76, i32 0, i32 0
  %78 = bitcast %union.anon* %77 to %struct.anon.2*
  %R13B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %78, i32 0, i32 0
  %79 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %80 = getelementptr inbounds %struct.GPR, %struct.GPR* %79, i32 0, i32 29
  %81 = getelementptr inbounds %struct.Reg, %struct.Reg* %80, i32 0, i32 0
  %82 = bitcast %union.anon* %81 to %struct.anon.2*
  %R14B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %82, i32 0, i32 0
  %83 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %84 = getelementptr inbounds %struct.GPR, %struct.GPR* %83, i32 0, i32 31
  %85 = getelementptr inbounds %struct.Reg, %struct.Reg* %84, i32 0, i32 0
  %86 = bitcast %union.anon* %85 to %struct.anon.2*
  %R15B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %86, i32 0, i32 0
  %87 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %88 = getelementptr inbounds %struct.GPR, %struct.GPR* %87, i32 0, i32 1
  %89 = getelementptr inbounds %struct.Reg, %struct.Reg* %88, i32 0, i32 0
  %AX = bitcast %union.anon* %89 to i16*
  %90 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %91 = getelementptr inbounds %struct.GPR, %struct.GPR* %90, i32 0, i32 3
  %92 = getelementptr inbounds %struct.Reg, %struct.Reg* %91, i32 0, i32 0
  %BX = bitcast %union.anon* %92 to i16*
  %93 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %94 = getelementptr inbounds %struct.GPR, %struct.GPR* %93, i32 0, i32 5
  %95 = getelementptr inbounds %struct.Reg, %struct.Reg* %94, i32 0, i32 0
  %CX = bitcast %union.anon* %95 to i16*
  %96 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %97 = getelementptr inbounds %struct.GPR, %struct.GPR* %96, i32 0, i32 7
  %98 = getelementptr inbounds %struct.Reg, %struct.Reg* %97, i32 0, i32 0
  %DX = bitcast %union.anon* %98 to i16*
  %99 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %100 = getelementptr inbounds %struct.GPR, %struct.GPR* %99, i32 0, i32 9
  %101 = getelementptr inbounds %struct.Reg, %struct.Reg* %100, i32 0, i32 0
  %SI = bitcast %union.anon* %101 to i16*
  %102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %103 = getelementptr inbounds %struct.GPR, %struct.GPR* %102, i32 0, i32 11
  %104 = getelementptr inbounds %struct.Reg, %struct.Reg* %103, i32 0, i32 0
  %DI = bitcast %union.anon* %104 to i16*
  %105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %106 = getelementptr inbounds %struct.GPR, %struct.GPR* %105, i32 0, i32 13
  %107 = getelementptr inbounds %struct.Reg, %struct.Reg* %106, i32 0, i32 0
  %SP = bitcast %union.anon* %107 to i16*
  %108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %109 = getelementptr inbounds %struct.GPR, %struct.GPR* %108, i32 0, i32 15
  %110 = getelementptr inbounds %struct.Reg, %struct.Reg* %109, i32 0, i32 0
  %BP = bitcast %union.anon* %110 to i16*
  %111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %112 = getelementptr inbounds %struct.GPR, %struct.GPR* %111, i32 0, i32 17
  %113 = getelementptr inbounds %struct.Reg, %struct.Reg* %112, i32 0, i32 0
  %R8W = bitcast %union.anon* %113 to i16*
  %114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %115 = getelementptr inbounds %struct.GPR, %struct.GPR* %114, i32 0, i32 19
  %116 = getelementptr inbounds %struct.Reg, %struct.Reg* %115, i32 0, i32 0
  %R9W = bitcast %union.anon* %116 to i16*
  %117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %118 = getelementptr inbounds %struct.GPR, %struct.GPR* %117, i32 0, i32 21
  %119 = getelementptr inbounds %struct.Reg, %struct.Reg* %118, i32 0, i32 0
  %R10W = bitcast %union.anon* %119 to i16*
  %120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %121 = getelementptr inbounds %struct.GPR, %struct.GPR* %120, i32 0, i32 23
  %122 = getelementptr inbounds %struct.Reg, %struct.Reg* %121, i32 0, i32 0
  %R11W = bitcast %union.anon* %122 to i16*
  %123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %124 = getelementptr inbounds %struct.GPR, %struct.GPR* %123, i32 0, i32 25
  %125 = getelementptr inbounds %struct.Reg, %struct.Reg* %124, i32 0, i32 0
  %R12W = bitcast %union.anon* %125 to i16*
  %126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %127 = getelementptr inbounds %struct.GPR, %struct.GPR* %126, i32 0, i32 27
  %128 = getelementptr inbounds %struct.Reg, %struct.Reg* %127, i32 0, i32 0
  %R13W = bitcast %union.anon* %128 to i16*
  %129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %130 = getelementptr inbounds %struct.GPR, %struct.GPR* %129, i32 0, i32 29
  %131 = getelementptr inbounds %struct.Reg, %struct.Reg* %130, i32 0, i32 0
  %R14W = bitcast %union.anon* %131 to i16*
  %132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %133 = getelementptr inbounds %struct.GPR, %struct.GPR* %132, i32 0, i32 31
  %134 = getelementptr inbounds %struct.Reg, %struct.Reg* %133, i32 0, i32 0
  %R15W = bitcast %union.anon* %134 to i16*
  %135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %136 = getelementptr inbounds %struct.GPR, %struct.GPR* %135, i32 0, i32 33
  %137 = getelementptr inbounds %struct.Reg, %struct.Reg* %136, i32 0, i32 0
  %IP = bitcast %union.anon* %137 to i16*
  %138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %139 = getelementptr inbounds %struct.GPR, %struct.GPR* %138, i32 0, i32 1
  %140 = getelementptr inbounds %struct.Reg, %struct.Reg* %139, i32 0, i32 0
  %EAX = bitcast %union.anon* %140 to i32*
  %141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %142 = getelementptr inbounds %struct.GPR, %struct.GPR* %141, i32 0, i32 3
  %143 = getelementptr inbounds %struct.Reg, %struct.Reg* %142, i32 0, i32 0
  %EBX = bitcast %union.anon* %143 to i32*
  %144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %145 = getelementptr inbounds %struct.GPR, %struct.GPR* %144, i32 0, i32 5
  %146 = getelementptr inbounds %struct.Reg, %struct.Reg* %145, i32 0, i32 0
  %ECX = bitcast %union.anon* %146 to i32*
  %147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %148 = getelementptr inbounds %struct.GPR, %struct.GPR* %147, i32 0, i32 7
  %149 = getelementptr inbounds %struct.Reg, %struct.Reg* %148, i32 0, i32 0
  %EDX = bitcast %union.anon* %149 to i32*
  %150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %151 = getelementptr inbounds %struct.GPR, %struct.GPR* %150, i32 0, i32 9
  %152 = getelementptr inbounds %struct.Reg, %struct.Reg* %151, i32 0, i32 0
  %ESI = bitcast %union.anon* %152 to i32*
  %153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %154 = getelementptr inbounds %struct.GPR, %struct.GPR* %153, i32 0, i32 11
  %155 = getelementptr inbounds %struct.Reg, %struct.Reg* %154, i32 0, i32 0
  %EDI = bitcast %union.anon* %155 to i32*
  %156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %157 = getelementptr inbounds %struct.GPR, %struct.GPR* %156, i32 0, i32 13
  %158 = getelementptr inbounds %struct.Reg, %struct.Reg* %157, i32 0, i32 0
  %ESP = bitcast %union.anon* %158 to i32*
  %159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %160 = getelementptr inbounds %struct.GPR, %struct.GPR* %159, i32 0, i32 15
  %161 = getelementptr inbounds %struct.Reg, %struct.Reg* %160, i32 0, i32 0
  %EBP = bitcast %union.anon* %161 to i32*
  %162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %163 = getelementptr inbounds %struct.GPR, %struct.GPR* %162, i32 0, i32 33
  %164 = getelementptr inbounds %struct.Reg, %struct.Reg* %163, i32 0, i32 0
  %EIP = bitcast %union.anon* %164 to i32*
  %165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %166 = getelementptr inbounds %struct.GPR, %struct.GPR* %165, i32 0, i32 17
  %167 = getelementptr inbounds %struct.Reg, %struct.Reg* %166, i32 0, i32 0
  %R8D = bitcast %union.anon* %167 to i32*
  %168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %169 = getelementptr inbounds %struct.GPR, %struct.GPR* %168, i32 0, i32 19
  %170 = getelementptr inbounds %struct.Reg, %struct.Reg* %169, i32 0, i32 0
  %R9D = bitcast %union.anon* %170 to i32*
  %171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %172 = getelementptr inbounds %struct.GPR, %struct.GPR* %171, i32 0, i32 21
  %173 = getelementptr inbounds %struct.Reg, %struct.Reg* %172, i32 0, i32 0
  %R10D = bitcast %union.anon* %173 to i32*
  %174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %175 = getelementptr inbounds %struct.GPR, %struct.GPR* %174, i32 0, i32 23
  %176 = getelementptr inbounds %struct.Reg, %struct.Reg* %175, i32 0, i32 0
  %R11D = bitcast %union.anon* %176 to i32*
  %177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %178 = getelementptr inbounds %struct.GPR, %struct.GPR* %177, i32 0, i32 25
  %179 = getelementptr inbounds %struct.Reg, %struct.Reg* %178, i32 0, i32 0
  %R12D = bitcast %union.anon* %179 to i32*
  %180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %181 = getelementptr inbounds %struct.GPR, %struct.GPR* %180, i32 0, i32 27
  %182 = getelementptr inbounds %struct.Reg, %struct.Reg* %181, i32 0, i32 0
  %R13D = bitcast %union.anon* %182 to i32*
  %183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %184 = getelementptr inbounds %struct.GPR, %struct.GPR* %183, i32 0, i32 29
  %185 = getelementptr inbounds %struct.Reg, %struct.Reg* %184, i32 0, i32 0
  %R14D = bitcast %union.anon* %185 to i32*
  %186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %187 = getelementptr inbounds %struct.GPR, %struct.GPR* %186, i32 0, i32 31
  %188 = getelementptr inbounds %struct.Reg, %struct.Reg* %187, i32 0, i32 0
  %R15D = bitcast %union.anon* %188 to i32*
  %189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %190 = getelementptr inbounds %struct.GPR, %struct.GPR* %189, i32 0, i32 1
  %191 = getelementptr inbounds %struct.Reg, %struct.Reg* %190, i32 0, i32 0
  %RAX = bitcast %union.anon* %191 to i64*
  %192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %193 = getelementptr inbounds %struct.GPR, %struct.GPR* %192, i32 0, i32 3
  %194 = getelementptr inbounds %struct.Reg, %struct.Reg* %193, i32 0, i32 0
  %RBX = bitcast %union.anon* %194 to i64*
  %195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %196 = getelementptr inbounds %struct.GPR, %struct.GPR* %195, i32 0, i32 5
  %197 = getelementptr inbounds %struct.Reg, %struct.Reg* %196, i32 0, i32 0
  %RCX = bitcast %union.anon* %197 to i64*
  %198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %199 = getelementptr inbounds %struct.GPR, %struct.GPR* %198, i32 0, i32 7
  %200 = getelementptr inbounds %struct.Reg, %struct.Reg* %199, i32 0, i32 0
  %RDX = bitcast %union.anon* %200 to i64*
  %201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %202 = getelementptr inbounds %struct.GPR, %struct.GPR* %201, i32 0, i32 9
  %203 = getelementptr inbounds %struct.Reg, %struct.Reg* %202, i32 0, i32 0
  %RSI = bitcast %union.anon* %203 to i64*
  %204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %205 = getelementptr inbounds %struct.GPR, %struct.GPR* %204, i32 0, i32 11
  %206 = getelementptr inbounds %struct.Reg, %struct.Reg* %205, i32 0, i32 0
  %RDI = bitcast %union.anon* %206 to i64*
  %207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %208 = getelementptr inbounds %struct.GPR, %struct.GPR* %207, i32 0, i32 13
  %209 = getelementptr inbounds %struct.Reg, %struct.Reg* %208, i32 0, i32 0
  %RSP = bitcast %union.anon* %209 to i64*
  %210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %211 = getelementptr inbounds %struct.GPR, %struct.GPR* %210, i32 0, i32 15
  %212 = getelementptr inbounds %struct.Reg, %struct.Reg* %211, i32 0, i32 0
  %RBP = bitcast %union.anon* %212 to i64*
  %213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %214 = getelementptr inbounds %struct.GPR, %struct.GPR* %213, i32 0, i32 17
  %215 = getelementptr inbounds %struct.Reg, %struct.Reg* %214, i32 0, i32 0
  %R8 = bitcast %union.anon* %215 to i64*
  %216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %217 = getelementptr inbounds %struct.GPR, %struct.GPR* %216, i32 0, i32 19
  %218 = getelementptr inbounds %struct.Reg, %struct.Reg* %217, i32 0, i32 0
  %R9 = bitcast %union.anon* %218 to i64*
  %219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %220 = getelementptr inbounds %struct.GPR, %struct.GPR* %219, i32 0, i32 21
  %221 = getelementptr inbounds %struct.Reg, %struct.Reg* %220, i32 0, i32 0
  %R10 = bitcast %union.anon* %221 to i64*
  %222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %223 = getelementptr inbounds %struct.GPR, %struct.GPR* %222, i32 0, i32 23
  %224 = getelementptr inbounds %struct.Reg, %struct.Reg* %223, i32 0, i32 0
  %R11 = bitcast %union.anon* %224 to i64*
  %225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %226 = getelementptr inbounds %struct.GPR, %struct.GPR* %225, i32 0, i32 25
  %227 = getelementptr inbounds %struct.Reg, %struct.Reg* %226, i32 0, i32 0
  %R12 = bitcast %union.anon* %227 to i64*
  %228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %229 = getelementptr inbounds %struct.GPR, %struct.GPR* %228, i32 0, i32 27
  %230 = getelementptr inbounds %struct.Reg, %struct.Reg* %229, i32 0, i32 0
  %R13 = bitcast %union.anon* %230 to i64*
  %231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %232 = getelementptr inbounds %struct.GPR, %struct.GPR* %231, i32 0, i32 29
  %233 = getelementptr inbounds %struct.Reg, %struct.Reg* %232, i32 0, i32 0
  %R14 = bitcast %union.anon* %233 to i64*
  %234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %235 = getelementptr inbounds %struct.GPR, %struct.GPR* %234, i32 0, i32 31
  %236 = getelementptr inbounds %struct.Reg, %struct.Reg* %235, i32 0, i32 0
  %R15 = bitcast %union.anon* %236 to i64*
  %237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %238 = getelementptr inbounds %struct.GPR, %struct.GPR* %237, i32 0, i32 33
  %239 = getelementptr inbounds %struct.Reg, %struct.Reg* %238, i32 0, i32 0
  %RIP = bitcast %union.anon* %239 to i64*
  %240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %241 = getelementptr inbounds %struct.Segments, %struct.Segments* %240, i32 0, i32 1
  %SS = bitcast %union.SegmentSelector* %241 to i16*
  %242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %243 = getelementptr inbounds %struct.Segments, %struct.Segments* %242, i32 0, i32 3
  %ES = bitcast %union.SegmentSelector* %243 to i16*
  %244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %245 = getelementptr inbounds %struct.Segments, %struct.Segments* %244, i32 0, i32 5
  %GS = bitcast %union.SegmentSelector* %245 to i16*
  %246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %247 = getelementptr inbounds %struct.Segments, %struct.Segments* %246, i32 0, i32 7
  %FS = bitcast %union.SegmentSelector* %247 to i16*
  %248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %249 = getelementptr inbounds %struct.Segments, %struct.Segments* %248, i32 0, i32 9
  %DS = bitcast %union.SegmentSelector* %249 to i16*
  %250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %251 = getelementptr inbounds %struct.Segments, %struct.Segments* %250, i32 0, i32 11
  %CS = bitcast %union.SegmentSelector* %251 to i16*
  %252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %253 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %252, i32 0, i32 5
  %254 = getelementptr inbounds %struct.Reg, %struct.Reg* %253, i32 0, i32 0
  %GS_BASE = bitcast %union.anon* %254 to i64*
  %255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %256 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %255, i32 0, i32 7
  %257 = getelementptr inbounds %struct.Reg, %struct.Reg* %256, i32 0, i32 0
  %FS_BASE = bitcast %union.anon* %257 to i64*
  %258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %259 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %258, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %259 to %"class.std::bitset"*
  %260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %261 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %260, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %261 to %"class.std::bitset"*
  %262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %263 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %262, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %263 to %"class.std::bitset"*
  %264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %265 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %264, i64 0, i64 3
  %YMM3 = bitcast %union.VectorReg* %265 to %"class.std::bitset"*
  %266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %267 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %266, i64 0, i64 4
  %YMM4 = bitcast %union.VectorReg* %267 to %"class.std::bitset"*
  %268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %269 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %268, i64 0, i64 5
  %YMM5 = bitcast %union.VectorReg* %269 to %"class.std::bitset"*
  %270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %271 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %270, i64 0, i64 6
  %YMM6 = bitcast %union.VectorReg* %271 to %"class.std::bitset"*
  %272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %273 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %272, i64 0, i64 7
  %YMM7 = bitcast %union.VectorReg* %273 to %"class.std::bitset"*
  %274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %275 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %274, i64 0, i64 8
  %YMM8 = bitcast %union.VectorReg* %275 to %"class.std::bitset"*
  %276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %277 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %276, i64 0, i64 9
  %YMM9 = bitcast %union.VectorReg* %277 to %"class.std::bitset"*
  %278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %279 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %278, i64 0, i64 10
  %YMM10 = bitcast %union.VectorReg* %279 to %"class.std::bitset"*
  %280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %281 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %280, i64 0, i64 11
  %YMM11 = bitcast %union.VectorReg* %281 to %"class.std::bitset"*
  %282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %283 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %282, i64 0, i64 12
  %YMM12 = bitcast %union.VectorReg* %283 to %"class.std::bitset"*
  %284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %285 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %284, i64 0, i64 13
  %YMM13 = bitcast %union.VectorReg* %285 to %"class.std::bitset"*
  %286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %287 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %286, i64 0, i64 14
  %YMM14 = bitcast %union.VectorReg* %287 to %"class.std::bitset"*
  %288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %289 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %288, i64 0, i64 15
  %YMM15 = bitcast %union.VectorReg* %289 to %"class.std::bitset"*
  %290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %291 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %290, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %291 to %union.vec128_t*
  %292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %293 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %292, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %293 to %union.vec128_t*
  %294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %295 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %294, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %295 to %union.vec128_t*
  %296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %297 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %296, i64 0, i64 3
  %XMM3 = bitcast %union.VectorReg* %297 to %union.vec128_t*
  %298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %299 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %298, i64 0, i64 4
  %XMM4 = bitcast %union.VectorReg* %299 to %union.vec128_t*
  %300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %301 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %300, i64 0, i64 5
  %XMM5 = bitcast %union.VectorReg* %301 to %union.vec128_t*
  %302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %303 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %302, i64 0, i64 6
  %XMM6 = bitcast %union.VectorReg* %303 to %union.vec128_t*
  %304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %305 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %304, i64 0, i64 7
  %XMM7 = bitcast %union.VectorReg* %305 to %union.vec128_t*
  %306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %307 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %306, i64 0, i64 8
  %XMM8 = bitcast %union.VectorReg* %307 to %union.vec128_t*
  %308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %309 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %308, i64 0, i64 9
  %XMM9 = bitcast %union.VectorReg* %309 to %union.vec128_t*
  %310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %311 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %310, i64 0, i64 10
  %XMM10 = bitcast %union.VectorReg* %311 to %union.vec128_t*
  %312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %313 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %312, i64 0, i64 11
  %XMM11 = bitcast %union.VectorReg* %313 to %union.vec128_t*
  %314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %315 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %314, i64 0, i64 12
  %XMM12 = bitcast %union.VectorReg* %315 to %union.vec128_t*
  %316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %317 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %316, i64 0, i64 13
  %XMM13 = bitcast %union.VectorReg* %317 to %union.vec128_t*
  %318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %319 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %318, i64 0, i64 14
  %XMM14 = bitcast %union.VectorReg* %319 to %union.vec128_t*
  %320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %321 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %320, i64 0, i64 15
  %XMM15 = bitcast %union.VectorReg* %321 to %union.vec128_t*
  %322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %323 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %322, i32 0, i32 0
  %324 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %323, i64 0, i64 0
  %ST0 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %324, i32 0, i32 1
  %325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %326 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %325, i32 0, i32 0
  %327 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %326, i64 0, i64 1
  %ST1 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %327, i32 0, i32 1
  %328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %329 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %328, i32 0, i32 0
  %330 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %329, i64 0, i64 2
  %ST2 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %330, i32 0, i32 1
  %331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %332 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %331, i32 0, i32 0
  %333 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %332, i64 0, i64 3
  %ST3 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %333, i32 0, i32 1
  %334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %335 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %334, i32 0, i32 0
  %336 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %335, i64 0, i64 4
  %ST4 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %336, i32 0, i32 1
  %337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %338 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %337, i32 0, i32 0
  %339 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %338, i64 0, i64 5
  %ST5 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %339, i32 0, i32 1
  %340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %341 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %340, i32 0, i32 0
  %342 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %341, i64 0, i64 6
  %ST6 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %342, i32 0, i32 1
  %343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %344 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %343, i32 0, i32 0
  %345 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %344, i64 0, i64 7
  %ST7 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %345, i32 0, i32 1
  %346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %347 = getelementptr inbounds %struct.MMX, %struct.MMX* %346, i32 0, i32 0
  %348 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %347, i64 0, i64 0
  %349 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %348, i32 0, i32 1
  %350 = bitcast %union.vec64_t* %349 to %struct.uint64v1_t*
  %351 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %350, i32 0, i32 0
  %MM0 = getelementptr inbounds [1 x i64], [1 x i64]* %351, i64 0, i64 0
  %352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %353 = getelementptr inbounds %struct.MMX, %struct.MMX* %352, i32 0, i32 0
  %354 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %353, i64 0, i64 1
  %355 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %354, i32 0, i32 1
  %356 = bitcast %union.vec64_t* %355 to %struct.uint64v1_t*
  %357 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %356, i32 0, i32 0
  %MM1 = getelementptr inbounds [1 x i64], [1 x i64]* %357, i64 0, i64 0
  %358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %359 = getelementptr inbounds %struct.MMX, %struct.MMX* %358, i32 0, i32 0
  %360 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %359, i64 0, i64 2
  %361 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %360, i32 0, i32 1
  %362 = bitcast %union.vec64_t* %361 to %struct.uint64v1_t*
  %363 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %362, i32 0, i32 0
  %MM2 = getelementptr inbounds [1 x i64], [1 x i64]* %363, i64 0, i64 0
  %364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %365 = getelementptr inbounds %struct.MMX, %struct.MMX* %364, i32 0, i32 0
  %366 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %365, i64 0, i64 3
  %367 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %366, i32 0, i32 1
  %368 = bitcast %union.vec64_t* %367 to %struct.uint64v1_t*
  %369 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %368, i32 0, i32 0
  %MM3 = getelementptr inbounds [1 x i64], [1 x i64]* %369, i64 0, i64 0
  %370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %371 = getelementptr inbounds %struct.MMX, %struct.MMX* %370, i32 0, i32 0
  %372 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %371, i64 0, i64 4
  %373 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %372, i32 0, i32 1
  %374 = bitcast %union.vec64_t* %373 to %struct.uint64v1_t*
  %375 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %374, i32 0, i32 0
  %MM4 = getelementptr inbounds [1 x i64], [1 x i64]* %375, i64 0, i64 0
  %376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %377 = getelementptr inbounds %struct.MMX, %struct.MMX* %376, i32 0, i32 0
  %378 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %377, i64 0, i64 5
  %379 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %378, i32 0, i32 1
  %380 = bitcast %union.vec64_t* %379 to %struct.uint64v1_t*
  %381 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %380, i32 0, i32 0
  %MM5 = getelementptr inbounds [1 x i64], [1 x i64]* %381, i64 0, i64 0
  %382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %383 = getelementptr inbounds %struct.MMX, %struct.MMX* %382, i32 0, i32 0
  %384 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %383, i64 0, i64 6
  %385 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %384, i32 0, i32 1
  %386 = bitcast %union.vec64_t* %385 to %struct.uint64v1_t*
  %387 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %386, i32 0, i32 0
  %MM6 = getelementptr inbounds [1 x i64], [1 x i64]* %387, i64 0, i64 0
  %388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %389 = getelementptr inbounds %struct.MMX, %struct.MMX* %388, i32 0, i32 0
  %390 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %389, i64 0, i64 7
  %391 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %390, i32 0, i32 1
  %392 = bitcast %union.vec64_t* %391 to %struct.uint64v1_t*
  %393 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %392, i32 0, i32 0
  %MM7 = getelementptr inbounds [1 x i64], [1 x i64]* %393, i64 0, i64 0
  %394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %394, i32 0, i32 5
  %395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %395, i32 0, i32 1
  %396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %396, i32 0, i32 11
  %397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %397, i32 0, i32 13
  %398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %398, i32 0, i32 3
  %399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %399, i32 0, i32 9
  %400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %400, i32 0, i32 7
  store i64* @DR0, i64** %_DR0, align 8
  store i64* @DR1, i64** %_DR1, align 8
  store i64* @DR2, i64** %_DR2, align 8
  store i64* @DR3, i64** %_DR3, align 8
  store i64* @DR4, i64** %_DR4, align 8
  store i64* @DR5, i64** %_DR5, align 8
  store i64* @DR6, i64** %_DR6, align 8
  store i64* @DR7, i64** %_DR7, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8, align 8
  %401 = bitcast %"class.std::bitset"* %YMM0 to double*
  %402 = load double, double* %401
  %403 = load i64, i64* %RSP
  %404 = load %struct.Memory*, %struct.Memory** %MEMORY
  %405 = inttoptr i64 %403 to i64*
  %406 = load i64, i64* %405
  store i64 %406, i64* %PC
  %407 = add i64 %403, 8
  store i64 %407, i64* %RSP
  %408 = call double @sin(double %402)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0
  %409 = bitcast %"class.std::bitset"* %YMM0 to double*
  store double %408, double* %409
  %410 = load %struct.Memory*, %struct.Memory** %MEMORY
  ret %struct.Memory* %410
}

; Function Attrs: alwaysinline inlinehint
define %struct.Memory* @ext_602110_cos(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #16 {
  %state = alloca %struct.State*, align 8
  %curr_pc = alloca i64, align 8
  %memory = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  %SS_BASE = alloca i64, align 8
  %ES_BASE = alloca i64, align 8
  %DS_BASE = alloca i64, align 8
  %CS_BASE = alloca i64, align 8
  %STATE = alloca %struct.State*, align 8
  %MEMORY = alloca %struct.Memory*, align 8
  %_DR0 = alloca i64*, align 8
  %_DR1 = alloca i64*, align 8
  %_DR2 = alloca i64*, align 8
  %_DR3 = alloca i64*, align 8
  %_DR4 = alloca i64*, align 8
  %_DR5 = alloca i64*, align 8
  %_DR6 = alloca i64*, align 8
  %_DR7 = alloca i64*, align 8
  %CR0 = alloca i64*, align 8
  %CR1 = alloca i64*, align 8
  %CR2 = alloca i64*, align 8
  %CR3 = alloca i64*, align 8
  %CR4 = alloca i64*, align 8
  %CR8 = alloca i64*, align 8
  store %struct.State* %0, %struct.State** %state, align 8
  store i64 %1, i64* %curr_pc, align 8
  store %struct.Memory* %2, %struct.Memory** %memory, align 8
  store i8 0, i8* %BRANCH_TAKEN, align 1
  store i64 0, i64* %SS_BASE, align 8
  store i64 0, i64* %ES_BASE, align 8
  store i64 0, i64* %DS_BASE, align 8
  store i64 0, i64* %CS_BASE, align 8
  store %struct.State* %0, %struct.State** %STATE, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0
  %PC = bitcast %union.anon* %6 to i64*
  store i64 %1, i64* %PC, align 8
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 1
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0
  %10 = bitcast %union.anon* %9 to %struct.anon.2*
  %AH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10, i32 0, i32 1
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12 = getelementptr inbounds %struct.GPR, %struct.GPR* %11, i32 0, i32 3
  %13 = getelementptr inbounds %struct.Reg, %struct.Reg* %12, i32 0, i32 0
  %14 = bitcast %union.anon* %13 to %struct.anon.2*
  %BH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %14, i32 0, i32 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16 = getelementptr inbounds %struct.GPR, %struct.GPR* %15, i32 0, i32 5
  %17 = getelementptr inbounds %struct.Reg, %struct.Reg* %16, i32 0, i32 0
  %18 = bitcast %union.anon* %17 to %struct.anon.2*
  %CH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %18, i32 0, i32 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20 = getelementptr inbounds %struct.GPR, %struct.GPR* %19, i32 0, i32 7
  %21 = getelementptr inbounds %struct.Reg, %struct.Reg* %20, i32 0, i32 0
  %22 = bitcast %union.anon* %21 to %struct.anon.2*
  %DH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %22, i32 0, i32 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 1
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0
  %26 = bitcast %union.anon* %25 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %26, i32 0, i32 0
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28 = getelementptr inbounds %struct.GPR, %struct.GPR* %27, i32 0, i32 3
  %29 = getelementptr inbounds %struct.Reg, %struct.Reg* %28, i32 0, i32 0
  %30 = bitcast %union.anon* %29 to %struct.anon.2*
  %BL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %30, i32 0, i32 0
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32 = getelementptr inbounds %struct.GPR, %struct.GPR* %31, i32 0, i32 5
  %33 = getelementptr inbounds %struct.Reg, %struct.Reg* %32, i32 0, i32 0
  %34 = bitcast %union.anon* %33 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %34, i32 0, i32 0
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36 = getelementptr inbounds %struct.GPR, %struct.GPR* %35, i32 0, i32 7
  %37 = getelementptr inbounds %struct.Reg, %struct.Reg* %36, i32 0, i32 0
  %38 = bitcast %union.anon* %37 to %struct.anon.2*
  %DL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %38, i32 0, i32 0
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %40 = getelementptr inbounds %struct.GPR, %struct.GPR* %39, i32 0, i32 9
  %41 = getelementptr inbounds %struct.Reg, %struct.Reg* %40, i32 0, i32 0
  %42 = bitcast %union.anon* %41 to %struct.anon.2*
  %SIL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %42, i32 0, i32 0
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %44 = getelementptr inbounds %struct.GPR, %struct.GPR* %43, i32 0, i32 11
  %45 = getelementptr inbounds %struct.Reg, %struct.Reg* %44, i32 0, i32 0
  %46 = bitcast %union.anon* %45 to %struct.anon.2*
  %DIL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %46, i32 0, i32 0
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %48 = getelementptr inbounds %struct.GPR, %struct.GPR* %47, i32 0, i32 13
  %49 = getelementptr inbounds %struct.Reg, %struct.Reg* %48, i32 0, i32 0
  %50 = bitcast %union.anon* %49 to %struct.anon.2*
  %SPL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %50, i32 0, i32 0
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %52 = getelementptr inbounds %struct.GPR, %struct.GPR* %51, i32 0, i32 15
  %53 = getelementptr inbounds %struct.Reg, %struct.Reg* %52, i32 0, i32 0
  %54 = bitcast %union.anon* %53 to %struct.anon.2*
  %BPL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %54, i32 0, i32 0
  %55 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %56 = getelementptr inbounds %struct.GPR, %struct.GPR* %55, i32 0, i32 17
  %57 = getelementptr inbounds %struct.Reg, %struct.Reg* %56, i32 0, i32 0
  %58 = bitcast %union.anon* %57 to %struct.anon.2*
  %R8B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %58, i32 0, i32 0
  %59 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %60 = getelementptr inbounds %struct.GPR, %struct.GPR* %59, i32 0, i32 19
  %61 = getelementptr inbounds %struct.Reg, %struct.Reg* %60, i32 0, i32 0
  %62 = bitcast %union.anon* %61 to %struct.anon.2*
  %R9B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %62, i32 0, i32 0
  %63 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %64 = getelementptr inbounds %struct.GPR, %struct.GPR* %63, i32 0, i32 21
  %65 = getelementptr inbounds %struct.Reg, %struct.Reg* %64, i32 0, i32 0
  %66 = bitcast %union.anon* %65 to %struct.anon.2*
  %R10B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %66, i32 0, i32 0
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %68 = getelementptr inbounds %struct.GPR, %struct.GPR* %67, i32 0, i32 23
  %69 = getelementptr inbounds %struct.Reg, %struct.Reg* %68, i32 0, i32 0
  %70 = bitcast %union.anon* %69 to %struct.anon.2*
  %R11B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %70, i32 0, i32 0
  %71 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %72 = getelementptr inbounds %struct.GPR, %struct.GPR* %71, i32 0, i32 25
  %73 = getelementptr inbounds %struct.Reg, %struct.Reg* %72, i32 0, i32 0
  %74 = bitcast %union.anon* %73 to %struct.anon.2*
  %R12B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %74, i32 0, i32 0
  %75 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %76 = getelementptr inbounds %struct.GPR, %struct.GPR* %75, i32 0, i32 27
  %77 = getelementptr inbounds %struct.Reg, %struct.Reg* %76, i32 0, i32 0
  %78 = bitcast %union.anon* %77 to %struct.anon.2*
  %R13B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %78, i32 0, i32 0
  %79 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %80 = getelementptr inbounds %struct.GPR, %struct.GPR* %79, i32 0, i32 29
  %81 = getelementptr inbounds %struct.Reg, %struct.Reg* %80, i32 0, i32 0
  %82 = bitcast %union.anon* %81 to %struct.anon.2*
  %R14B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %82, i32 0, i32 0
  %83 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %84 = getelementptr inbounds %struct.GPR, %struct.GPR* %83, i32 0, i32 31
  %85 = getelementptr inbounds %struct.Reg, %struct.Reg* %84, i32 0, i32 0
  %86 = bitcast %union.anon* %85 to %struct.anon.2*
  %R15B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %86, i32 0, i32 0
  %87 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %88 = getelementptr inbounds %struct.GPR, %struct.GPR* %87, i32 0, i32 1
  %89 = getelementptr inbounds %struct.Reg, %struct.Reg* %88, i32 0, i32 0
  %AX = bitcast %union.anon* %89 to i16*
  %90 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %91 = getelementptr inbounds %struct.GPR, %struct.GPR* %90, i32 0, i32 3
  %92 = getelementptr inbounds %struct.Reg, %struct.Reg* %91, i32 0, i32 0
  %BX = bitcast %union.anon* %92 to i16*
  %93 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %94 = getelementptr inbounds %struct.GPR, %struct.GPR* %93, i32 0, i32 5
  %95 = getelementptr inbounds %struct.Reg, %struct.Reg* %94, i32 0, i32 0
  %CX = bitcast %union.anon* %95 to i16*
  %96 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %97 = getelementptr inbounds %struct.GPR, %struct.GPR* %96, i32 0, i32 7
  %98 = getelementptr inbounds %struct.Reg, %struct.Reg* %97, i32 0, i32 0
  %DX = bitcast %union.anon* %98 to i16*
  %99 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %100 = getelementptr inbounds %struct.GPR, %struct.GPR* %99, i32 0, i32 9
  %101 = getelementptr inbounds %struct.Reg, %struct.Reg* %100, i32 0, i32 0
  %SI = bitcast %union.anon* %101 to i16*
  %102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %103 = getelementptr inbounds %struct.GPR, %struct.GPR* %102, i32 0, i32 11
  %104 = getelementptr inbounds %struct.Reg, %struct.Reg* %103, i32 0, i32 0
  %DI = bitcast %union.anon* %104 to i16*
  %105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %106 = getelementptr inbounds %struct.GPR, %struct.GPR* %105, i32 0, i32 13
  %107 = getelementptr inbounds %struct.Reg, %struct.Reg* %106, i32 0, i32 0
  %SP = bitcast %union.anon* %107 to i16*
  %108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %109 = getelementptr inbounds %struct.GPR, %struct.GPR* %108, i32 0, i32 15
  %110 = getelementptr inbounds %struct.Reg, %struct.Reg* %109, i32 0, i32 0
  %BP = bitcast %union.anon* %110 to i16*
  %111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %112 = getelementptr inbounds %struct.GPR, %struct.GPR* %111, i32 0, i32 17
  %113 = getelementptr inbounds %struct.Reg, %struct.Reg* %112, i32 0, i32 0
  %R8W = bitcast %union.anon* %113 to i16*
  %114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %115 = getelementptr inbounds %struct.GPR, %struct.GPR* %114, i32 0, i32 19
  %116 = getelementptr inbounds %struct.Reg, %struct.Reg* %115, i32 0, i32 0
  %R9W = bitcast %union.anon* %116 to i16*
  %117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %118 = getelementptr inbounds %struct.GPR, %struct.GPR* %117, i32 0, i32 21
  %119 = getelementptr inbounds %struct.Reg, %struct.Reg* %118, i32 0, i32 0
  %R10W = bitcast %union.anon* %119 to i16*
  %120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %121 = getelementptr inbounds %struct.GPR, %struct.GPR* %120, i32 0, i32 23
  %122 = getelementptr inbounds %struct.Reg, %struct.Reg* %121, i32 0, i32 0
  %R11W = bitcast %union.anon* %122 to i16*
  %123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %124 = getelementptr inbounds %struct.GPR, %struct.GPR* %123, i32 0, i32 25
  %125 = getelementptr inbounds %struct.Reg, %struct.Reg* %124, i32 0, i32 0
  %R12W = bitcast %union.anon* %125 to i16*
  %126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %127 = getelementptr inbounds %struct.GPR, %struct.GPR* %126, i32 0, i32 27
  %128 = getelementptr inbounds %struct.Reg, %struct.Reg* %127, i32 0, i32 0
  %R13W = bitcast %union.anon* %128 to i16*
  %129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %130 = getelementptr inbounds %struct.GPR, %struct.GPR* %129, i32 0, i32 29
  %131 = getelementptr inbounds %struct.Reg, %struct.Reg* %130, i32 0, i32 0
  %R14W = bitcast %union.anon* %131 to i16*
  %132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %133 = getelementptr inbounds %struct.GPR, %struct.GPR* %132, i32 0, i32 31
  %134 = getelementptr inbounds %struct.Reg, %struct.Reg* %133, i32 0, i32 0
  %R15W = bitcast %union.anon* %134 to i16*
  %135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %136 = getelementptr inbounds %struct.GPR, %struct.GPR* %135, i32 0, i32 33
  %137 = getelementptr inbounds %struct.Reg, %struct.Reg* %136, i32 0, i32 0
  %IP = bitcast %union.anon* %137 to i16*
  %138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %139 = getelementptr inbounds %struct.GPR, %struct.GPR* %138, i32 0, i32 1
  %140 = getelementptr inbounds %struct.Reg, %struct.Reg* %139, i32 0, i32 0
  %EAX = bitcast %union.anon* %140 to i32*
  %141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %142 = getelementptr inbounds %struct.GPR, %struct.GPR* %141, i32 0, i32 3
  %143 = getelementptr inbounds %struct.Reg, %struct.Reg* %142, i32 0, i32 0
  %EBX = bitcast %union.anon* %143 to i32*
  %144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %145 = getelementptr inbounds %struct.GPR, %struct.GPR* %144, i32 0, i32 5
  %146 = getelementptr inbounds %struct.Reg, %struct.Reg* %145, i32 0, i32 0
  %ECX = bitcast %union.anon* %146 to i32*
  %147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %148 = getelementptr inbounds %struct.GPR, %struct.GPR* %147, i32 0, i32 7
  %149 = getelementptr inbounds %struct.Reg, %struct.Reg* %148, i32 0, i32 0
  %EDX = bitcast %union.anon* %149 to i32*
  %150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %151 = getelementptr inbounds %struct.GPR, %struct.GPR* %150, i32 0, i32 9
  %152 = getelementptr inbounds %struct.Reg, %struct.Reg* %151, i32 0, i32 0
  %ESI = bitcast %union.anon* %152 to i32*
  %153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %154 = getelementptr inbounds %struct.GPR, %struct.GPR* %153, i32 0, i32 11
  %155 = getelementptr inbounds %struct.Reg, %struct.Reg* %154, i32 0, i32 0
  %EDI = bitcast %union.anon* %155 to i32*
  %156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %157 = getelementptr inbounds %struct.GPR, %struct.GPR* %156, i32 0, i32 13
  %158 = getelementptr inbounds %struct.Reg, %struct.Reg* %157, i32 0, i32 0
  %ESP = bitcast %union.anon* %158 to i32*
  %159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %160 = getelementptr inbounds %struct.GPR, %struct.GPR* %159, i32 0, i32 15
  %161 = getelementptr inbounds %struct.Reg, %struct.Reg* %160, i32 0, i32 0
  %EBP = bitcast %union.anon* %161 to i32*
  %162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %163 = getelementptr inbounds %struct.GPR, %struct.GPR* %162, i32 0, i32 33
  %164 = getelementptr inbounds %struct.Reg, %struct.Reg* %163, i32 0, i32 0
  %EIP = bitcast %union.anon* %164 to i32*
  %165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %166 = getelementptr inbounds %struct.GPR, %struct.GPR* %165, i32 0, i32 17
  %167 = getelementptr inbounds %struct.Reg, %struct.Reg* %166, i32 0, i32 0
  %R8D = bitcast %union.anon* %167 to i32*
  %168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %169 = getelementptr inbounds %struct.GPR, %struct.GPR* %168, i32 0, i32 19
  %170 = getelementptr inbounds %struct.Reg, %struct.Reg* %169, i32 0, i32 0
  %R9D = bitcast %union.anon* %170 to i32*
  %171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %172 = getelementptr inbounds %struct.GPR, %struct.GPR* %171, i32 0, i32 21
  %173 = getelementptr inbounds %struct.Reg, %struct.Reg* %172, i32 0, i32 0
  %R10D = bitcast %union.anon* %173 to i32*
  %174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %175 = getelementptr inbounds %struct.GPR, %struct.GPR* %174, i32 0, i32 23
  %176 = getelementptr inbounds %struct.Reg, %struct.Reg* %175, i32 0, i32 0
  %R11D = bitcast %union.anon* %176 to i32*
  %177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %178 = getelementptr inbounds %struct.GPR, %struct.GPR* %177, i32 0, i32 25
  %179 = getelementptr inbounds %struct.Reg, %struct.Reg* %178, i32 0, i32 0
  %R12D = bitcast %union.anon* %179 to i32*
  %180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %181 = getelementptr inbounds %struct.GPR, %struct.GPR* %180, i32 0, i32 27
  %182 = getelementptr inbounds %struct.Reg, %struct.Reg* %181, i32 0, i32 0
  %R13D = bitcast %union.anon* %182 to i32*
  %183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %184 = getelementptr inbounds %struct.GPR, %struct.GPR* %183, i32 0, i32 29
  %185 = getelementptr inbounds %struct.Reg, %struct.Reg* %184, i32 0, i32 0
  %R14D = bitcast %union.anon* %185 to i32*
  %186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %187 = getelementptr inbounds %struct.GPR, %struct.GPR* %186, i32 0, i32 31
  %188 = getelementptr inbounds %struct.Reg, %struct.Reg* %187, i32 0, i32 0
  %R15D = bitcast %union.anon* %188 to i32*
  %189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %190 = getelementptr inbounds %struct.GPR, %struct.GPR* %189, i32 0, i32 1
  %191 = getelementptr inbounds %struct.Reg, %struct.Reg* %190, i32 0, i32 0
  %RAX = bitcast %union.anon* %191 to i64*
  %192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %193 = getelementptr inbounds %struct.GPR, %struct.GPR* %192, i32 0, i32 3
  %194 = getelementptr inbounds %struct.Reg, %struct.Reg* %193, i32 0, i32 0
  %RBX = bitcast %union.anon* %194 to i64*
  %195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %196 = getelementptr inbounds %struct.GPR, %struct.GPR* %195, i32 0, i32 5
  %197 = getelementptr inbounds %struct.Reg, %struct.Reg* %196, i32 0, i32 0
  %RCX = bitcast %union.anon* %197 to i64*
  %198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %199 = getelementptr inbounds %struct.GPR, %struct.GPR* %198, i32 0, i32 7
  %200 = getelementptr inbounds %struct.Reg, %struct.Reg* %199, i32 0, i32 0
  %RDX = bitcast %union.anon* %200 to i64*
  %201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %202 = getelementptr inbounds %struct.GPR, %struct.GPR* %201, i32 0, i32 9
  %203 = getelementptr inbounds %struct.Reg, %struct.Reg* %202, i32 0, i32 0
  %RSI = bitcast %union.anon* %203 to i64*
  %204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %205 = getelementptr inbounds %struct.GPR, %struct.GPR* %204, i32 0, i32 11
  %206 = getelementptr inbounds %struct.Reg, %struct.Reg* %205, i32 0, i32 0
  %RDI = bitcast %union.anon* %206 to i64*
  %207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %208 = getelementptr inbounds %struct.GPR, %struct.GPR* %207, i32 0, i32 13
  %209 = getelementptr inbounds %struct.Reg, %struct.Reg* %208, i32 0, i32 0
  %RSP = bitcast %union.anon* %209 to i64*
  %210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %211 = getelementptr inbounds %struct.GPR, %struct.GPR* %210, i32 0, i32 15
  %212 = getelementptr inbounds %struct.Reg, %struct.Reg* %211, i32 0, i32 0
  %RBP = bitcast %union.anon* %212 to i64*
  %213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %214 = getelementptr inbounds %struct.GPR, %struct.GPR* %213, i32 0, i32 17
  %215 = getelementptr inbounds %struct.Reg, %struct.Reg* %214, i32 0, i32 0
  %R8 = bitcast %union.anon* %215 to i64*
  %216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %217 = getelementptr inbounds %struct.GPR, %struct.GPR* %216, i32 0, i32 19
  %218 = getelementptr inbounds %struct.Reg, %struct.Reg* %217, i32 0, i32 0
  %R9 = bitcast %union.anon* %218 to i64*
  %219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %220 = getelementptr inbounds %struct.GPR, %struct.GPR* %219, i32 0, i32 21
  %221 = getelementptr inbounds %struct.Reg, %struct.Reg* %220, i32 0, i32 0
  %R10 = bitcast %union.anon* %221 to i64*
  %222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %223 = getelementptr inbounds %struct.GPR, %struct.GPR* %222, i32 0, i32 23
  %224 = getelementptr inbounds %struct.Reg, %struct.Reg* %223, i32 0, i32 0
  %R11 = bitcast %union.anon* %224 to i64*
  %225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %226 = getelementptr inbounds %struct.GPR, %struct.GPR* %225, i32 0, i32 25
  %227 = getelementptr inbounds %struct.Reg, %struct.Reg* %226, i32 0, i32 0
  %R12 = bitcast %union.anon* %227 to i64*
  %228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %229 = getelementptr inbounds %struct.GPR, %struct.GPR* %228, i32 0, i32 27
  %230 = getelementptr inbounds %struct.Reg, %struct.Reg* %229, i32 0, i32 0
  %R13 = bitcast %union.anon* %230 to i64*
  %231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %232 = getelementptr inbounds %struct.GPR, %struct.GPR* %231, i32 0, i32 29
  %233 = getelementptr inbounds %struct.Reg, %struct.Reg* %232, i32 0, i32 0
  %R14 = bitcast %union.anon* %233 to i64*
  %234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %235 = getelementptr inbounds %struct.GPR, %struct.GPR* %234, i32 0, i32 31
  %236 = getelementptr inbounds %struct.Reg, %struct.Reg* %235, i32 0, i32 0
  %R15 = bitcast %union.anon* %236 to i64*
  %237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %238 = getelementptr inbounds %struct.GPR, %struct.GPR* %237, i32 0, i32 33
  %239 = getelementptr inbounds %struct.Reg, %struct.Reg* %238, i32 0, i32 0
  %RIP = bitcast %union.anon* %239 to i64*
  %240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %241 = getelementptr inbounds %struct.Segments, %struct.Segments* %240, i32 0, i32 1
  %SS = bitcast %union.SegmentSelector* %241 to i16*
  %242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %243 = getelementptr inbounds %struct.Segments, %struct.Segments* %242, i32 0, i32 3
  %ES = bitcast %union.SegmentSelector* %243 to i16*
  %244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %245 = getelementptr inbounds %struct.Segments, %struct.Segments* %244, i32 0, i32 5
  %GS = bitcast %union.SegmentSelector* %245 to i16*
  %246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %247 = getelementptr inbounds %struct.Segments, %struct.Segments* %246, i32 0, i32 7
  %FS = bitcast %union.SegmentSelector* %247 to i16*
  %248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %249 = getelementptr inbounds %struct.Segments, %struct.Segments* %248, i32 0, i32 9
  %DS = bitcast %union.SegmentSelector* %249 to i16*
  %250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %251 = getelementptr inbounds %struct.Segments, %struct.Segments* %250, i32 0, i32 11
  %CS = bitcast %union.SegmentSelector* %251 to i16*
  %252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %253 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %252, i32 0, i32 5
  %254 = getelementptr inbounds %struct.Reg, %struct.Reg* %253, i32 0, i32 0
  %GS_BASE = bitcast %union.anon* %254 to i64*
  %255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %256 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %255, i32 0, i32 7
  %257 = getelementptr inbounds %struct.Reg, %struct.Reg* %256, i32 0, i32 0
  %FS_BASE = bitcast %union.anon* %257 to i64*
  %258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %259 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %258, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %259 to %"class.std::bitset"*
  %260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %261 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %260, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %261 to %"class.std::bitset"*
  %262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %263 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %262, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %263 to %"class.std::bitset"*
  %264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %265 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %264, i64 0, i64 3
  %YMM3 = bitcast %union.VectorReg* %265 to %"class.std::bitset"*
  %266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %267 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %266, i64 0, i64 4
  %YMM4 = bitcast %union.VectorReg* %267 to %"class.std::bitset"*
  %268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %269 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %268, i64 0, i64 5
  %YMM5 = bitcast %union.VectorReg* %269 to %"class.std::bitset"*
  %270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %271 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %270, i64 0, i64 6
  %YMM6 = bitcast %union.VectorReg* %271 to %"class.std::bitset"*
  %272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %273 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %272, i64 0, i64 7
  %YMM7 = bitcast %union.VectorReg* %273 to %"class.std::bitset"*
  %274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %275 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %274, i64 0, i64 8
  %YMM8 = bitcast %union.VectorReg* %275 to %"class.std::bitset"*
  %276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %277 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %276, i64 0, i64 9
  %YMM9 = bitcast %union.VectorReg* %277 to %"class.std::bitset"*
  %278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %279 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %278, i64 0, i64 10
  %YMM10 = bitcast %union.VectorReg* %279 to %"class.std::bitset"*
  %280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %281 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %280, i64 0, i64 11
  %YMM11 = bitcast %union.VectorReg* %281 to %"class.std::bitset"*
  %282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %283 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %282, i64 0, i64 12
  %YMM12 = bitcast %union.VectorReg* %283 to %"class.std::bitset"*
  %284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %285 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %284, i64 0, i64 13
  %YMM13 = bitcast %union.VectorReg* %285 to %"class.std::bitset"*
  %286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %287 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %286, i64 0, i64 14
  %YMM14 = bitcast %union.VectorReg* %287 to %"class.std::bitset"*
  %288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %289 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %288, i64 0, i64 15
  %YMM15 = bitcast %union.VectorReg* %289 to %"class.std::bitset"*
  %290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %291 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %290, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %291 to %union.vec128_t*
  %292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %293 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %292, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %293 to %union.vec128_t*
  %294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %295 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %294, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %295 to %union.vec128_t*
  %296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %297 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %296, i64 0, i64 3
  %XMM3 = bitcast %union.VectorReg* %297 to %union.vec128_t*
  %298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %299 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %298, i64 0, i64 4
  %XMM4 = bitcast %union.VectorReg* %299 to %union.vec128_t*
  %300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %301 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %300, i64 0, i64 5
  %XMM5 = bitcast %union.VectorReg* %301 to %union.vec128_t*
  %302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %303 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %302, i64 0, i64 6
  %XMM6 = bitcast %union.VectorReg* %303 to %union.vec128_t*
  %304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %305 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %304, i64 0, i64 7
  %XMM7 = bitcast %union.VectorReg* %305 to %union.vec128_t*
  %306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %307 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %306, i64 0, i64 8
  %XMM8 = bitcast %union.VectorReg* %307 to %union.vec128_t*
  %308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %309 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %308, i64 0, i64 9
  %XMM9 = bitcast %union.VectorReg* %309 to %union.vec128_t*
  %310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %311 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %310, i64 0, i64 10
  %XMM10 = bitcast %union.VectorReg* %311 to %union.vec128_t*
  %312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %313 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %312, i64 0, i64 11
  %XMM11 = bitcast %union.VectorReg* %313 to %union.vec128_t*
  %314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %315 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %314, i64 0, i64 12
  %XMM12 = bitcast %union.VectorReg* %315 to %union.vec128_t*
  %316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %317 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %316, i64 0, i64 13
  %XMM13 = bitcast %union.VectorReg* %317 to %union.vec128_t*
  %318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %319 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %318, i64 0, i64 14
  %XMM14 = bitcast %union.VectorReg* %319 to %union.vec128_t*
  %320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %321 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %320, i64 0, i64 15
  %XMM15 = bitcast %union.VectorReg* %321 to %union.vec128_t*
  %322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %323 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %322, i32 0, i32 0
  %324 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %323, i64 0, i64 0
  %ST0 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %324, i32 0, i32 1
  %325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %326 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %325, i32 0, i32 0
  %327 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %326, i64 0, i64 1
  %ST1 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %327, i32 0, i32 1
  %328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %329 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %328, i32 0, i32 0
  %330 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %329, i64 0, i64 2
  %ST2 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %330, i32 0, i32 1
  %331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %332 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %331, i32 0, i32 0
  %333 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %332, i64 0, i64 3
  %ST3 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %333, i32 0, i32 1
  %334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %335 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %334, i32 0, i32 0
  %336 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %335, i64 0, i64 4
  %ST4 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %336, i32 0, i32 1
  %337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %338 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %337, i32 0, i32 0
  %339 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %338, i64 0, i64 5
  %ST5 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %339, i32 0, i32 1
  %340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %341 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %340, i32 0, i32 0
  %342 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %341, i64 0, i64 6
  %ST6 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %342, i32 0, i32 1
  %343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %344 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %343, i32 0, i32 0
  %345 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %344, i64 0, i64 7
  %ST7 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %345, i32 0, i32 1
  %346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %347 = getelementptr inbounds %struct.MMX, %struct.MMX* %346, i32 0, i32 0
  %348 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %347, i64 0, i64 0
  %349 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %348, i32 0, i32 1
  %350 = bitcast %union.vec64_t* %349 to %struct.uint64v1_t*
  %351 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %350, i32 0, i32 0
  %MM0 = getelementptr inbounds [1 x i64], [1 x i64]* %351, i64 0, i64 0
  %352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %353 = getelementptr inbounds %struct.MMX, %struct.MMX* %352, i32 0, i32 0
  %354 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %353, i64 0, i64 1
  %355 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %354, i32 0, i32 1
  %356 = bitcast %union.vec64_t* %355 to %struct.uint64v1_t*
  %357 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %356, i32 0, i32 0
  %MM1 = getelementptr inbounds [1 x i64], [1 x i64]* %357, i64 0, i64 0
  %358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %359 = getelementptr inbounds %struct.MMX, %struct.MMX* %358, i32 0, i32 0
  %360 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %359, i64 0, i64 2
  %361 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %360, i32 0, i32 1
  %362 = bitcast %union.vec64_t* %361 to %struct.uint64v1_t*
  %363 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %362, i32 0, i32 0
  %MM2 = getelementptr inbounds [1 x i64], [1 x i64]* %363, i64 0, i64 0
  %364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %365 = getelementptr inbounds %struct.MMX, %struct.MMX* %364, i32 0, i32 0
  %366 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %365, i64 0, i64 3
  %367 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %366, i32 0, i32 1
  %368 = bitcast %union.vec64_t* %367 to %struct.uint64v1_t*
  %369 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %368, i32 0, i32 0
  %MM3 = getelementptr inbounds [1 x i64], [1 x i64]* %369, i64 0, i64 0
  %370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %371 = getelementptr inbounds %struct.MMX, %struct.MMX* %370, i32 0, i32 0
  %372 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %371, i64 0, i64 4
  %373 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %372, i32 0, i32 1
  %374 = bitcast %union.vec64_t* %373 to %struct.uint64v1_t*
  %375 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %374, i32 0, i32 0
  %MM4 = getelementptr inbounds [1 x i64], [1 x i64]* %375, i64 0, i64 0
  %376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %377 = getelementptr inbounds %struct.MMX, %struct.MMX* %376, i32 0, i32 0
  %378 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %377, i64 0, i64 5
  %379 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %378, i32 0, i32 1
  %380 = bitcast %union.vec64_t* %379 to %struct.uint64v1_t*
  %381 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %380, i32 0, i32 0
  %MM5 = getelementptr inbounds [1 x i64], [1 x i64]* %381, i64 0, i64 0
  %382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %383 = getelementptr inbounds %struct.MMX, %struct.MMX* %382, i32 0, i32 0
  %384 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %383, i64 0, i64 6
  %385 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %384, i32 0, i32 1
  %386 = bitcast %union.vec64_t* %385 to %struct.uint64v1_t*
  %387 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %386, i32 0, i32 0
  %MM6 = getelementptr inbounds [1 x i64], [1 x i64]* %387, i64 0, i64 0
  %388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %389 = getelementptr inbounds %struct.MMX, %struct.MMX* %388, i32 0, i32 0
  %390 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %389, i64 0, i64 7
  %391 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %390, i32 0, i32 1
  %392 = bitcast %union.vec64_t* %391 to %struct.uint64v1_t*
  %393 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %392, i32 0, i32 0
  %MM7 = getelementptr inbounds [1 x i64], [1 x i64]* %393, i64 0, i64 0
  %394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %394, i32 0, i32 5
  %395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %395, i32 0, i32 1
  %396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %396, i32 0, i32 11
  %397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %397, i32 0, i32 13
  %398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %398, i32 0, i32 3
  %399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %399, i32 0, i32 9
  %400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %400, i32 0, i32 7
  store i64* @DR0, i64** %_DR0, align 8
  store i64* @DR1, i64** %_DR1, align 8
  store i64* @DR2, i64** %_DR2, align 8
  store i64* @DR3, i64** %_DR3, align 8
  store i64* @DR4, i64** %_DR4, align 8
  store i64* @DR5, i64** %_DR5, align 8
  store i64* @DR6, i64** %_DR6, align 8
  store i64* @DR7, i64** %_DR7, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8, align 8
  %401 = bitcast %"class.std::bitset"* %YMM0 to double*
  %402 = load double, double* %401
  %403 = load i64, i64* %RSP
  %404 = load %struct.Memory*, %struct.Memory** %MEMORY
  %405 = inttoptr i64 %403 to i64*
  %406 = load i64, i64* %405
  store i64 %406, i64* %PC
  %407 = add i64 %403, 8
  store i64 %407, i64* %RSP
  %408 = call double @cos(double %402)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0
  %409 = bitcast %"class.std::bitset"* %YMM0 to double*
  store double %408, double* %409
  %410 = load %struct.Memory*, %struct.Memory** %MEMORY
  ret %struct.Memory* %410
}

; Function Attrs: alwaysinline inlinehint
define %struct.Memory* @ext_6020f8_atan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #16 {
  %state = alloca %struct.State*, align 8
  %curr_pc = alloca i64, align 8
  %memory = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  %SS_BASE = alloca i64, align 8
  %ES_BASE = alloca i64, align 8
  %DS_BASE = alloca i64, align 8
  %CS_BASE = alloca i64, align 8
  %STATE = alloca %struct.State*, align 8
  %MEMORY = alloca %struct.Memory*, align 8
  %_DR0 = alloca i64*, align 8
  %_DR1 = alloca i64*, align 8
  %_DR2 = alloca i64*, align 8
  %_DR3 = alloca i64*, align 8
  %_DR4 = alloca i64*, align 8
  %_DR5 = alloca i64*, align 8
  %_DR6 = alloca i64*, align 8
  %_DR7 = alloca i64*, align 8
  %CR0 = alloca i64*, align 8
  %CR1 = alloca i64*, align 8
  %CR2 = alloca i64*, align 8
  %CR3 = alloca i64*, align 8
  %CR4 = alloca i64*, align 8
  %CR8 = alloca i64*, align 8
  store %struct.State* %0, %struct.State** %state, align 8
  store i64 %1, i64* %curr_pc, align 8
  store %struct.Memory* %2, %struct.Memory** %memory, align 8
  store i8 0, i8* %BRANCH_TAKEN, align 1
  store i64 0, i64* %SS_BASE, align 8
  store i64 0, i64* %ES_BASE, align 8
  store i64 0, i64* %DS_BASE, align 8
  store i64 0, i64* %CS_BASE, align 8
  store %struct.State* %0, %struct.State** %STATE, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0
  %PC = bitcast %union.anon* %6 to i64*
  store i64 %1, i64* %PC, align 8
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 1
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0
  %10 = bitcast %union.anon* %9 to %struct.anon.2*
  %AH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10, i32 0, i32 1
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12 = getelementptr inbounds %struct.GPR, %struct.GPR* %11, i32 0, i32 3
  %13 = getelementptr inbounds %struct.Reg, %struct.Reg* %12, i32 0, i32 0
  %14 = bitcast %union.anon* %13 to %struct.anon.2*
  %BH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %14, i32 0, i32 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16 = getelementptr inbounds %struct.GPR, %struct.GPR* %15, i32 0, i32 5
  %17 = getelementptr inbounds %struct.Reg, %struct.Reg* %16, i32 0, i32 0
  %18 = bitcast %union.anon* %17 to %struct.anon.2*
  %CH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %18, i32 0, i32 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20 = getelementptr inbounds %struct.GPR, %struct.GPR* %19, i32 0, i32 7
  %21 = getelementptr inbounds %struct.Reg, %struct.Reg* %20, i32 0, i32 0
  %22 = bitcast %union.anon* %21 to %struct.anon.2*
  %DH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %22, i32 0, i32 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 1
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0
  %26 = bitcast %union.anon* %25 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %26, i32 0, i32 0
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28 = getelementptr inbounds %struct.GPR, %struct.GPR* %27, i32 0, i32 3
  %29 = getelementptr inbounds %struct.Reg, %struct.Reg* %28, i32 0, i32 0
  %30 = bitcast %union.anon* %29 to %struct.anon.2*
  %BL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %30, i32 0, i32 0
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32 = getelementptr inbounds %struct.GPR, %struct.GPR* %31, i32 0, i32 5
  %33 = getelementptr inbounds %struct.Reg, %struct.Reg* %32, i32 0, i32 0
  %34 = bitcast %union.anon* %33 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %34, i32 0, i32 0
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36 = getelementptr inbounds %struct.GPR, %struct.GPR* %35, i32 0, i32 7
  %37 = getelementptr inbounds %struct.Reg, %struct.Reg* %36, i32 0, i32 0
  %38 = bitcast %union.anon* %37 to %struct.anon.2*
  %DL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %38, i32 0, i32 0
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %40 = getelementptr inbounds %struct.GPR, %struct.GPR* %39, i32 0, i32 9
  %41 = getelementptr inbounds %struct.Reg, %struct.Reg* %40, i32 0, i32 0
  %42 = bitcast %union.anon* %41 to %struct.anon.2*
  %SIL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %42, i32 0, i32 0
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %44 = getelementptr inbounds %struct.GPR, %struct.GPR* %43, i32 0, i32 11
  %45 = getelementptr inbounds %struct.Reg, %struct.Reg* %44, i32 0, i32 0
  %46 = bitcast %union.anon* %45 to %struct.anon.2*
  %DIL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %46, i32 0, i32 0
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %48 = getelementptr inbounds %struct.GPR, %struct.GPR* %47, i32 0, i32 13
  %49 = getelementptr inbounds %struct.Reg, %struct.Reg* %48, i32 0, i32 0
  %50 = bitcast %union.anon* %49 to %struct.anon.2*
  %SPL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %50, i32 0, i32 0
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %52 = getelementptr inbounds %struct.GPR, %struct.GPR* %51, i32 0, i32 15
  %53 = getelementptr inbounds %struct.Reg, %struct.Reg* %52, i32 0, i32 0
  %54 = bitcast %union.anon* %53 to %struct.anon.2*
  %BPL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %54, i32 0, i32 0
  %55 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %56 = getelementptr inbounds %struct.GPR, %struct.GPR* %55, i32 0, i32 17
  %57 = getelementptr inbounds %struct.Reg, %struct.Reg* %56, i32 0, i32 0
  %58 = bitcast %union.anon* %57 to %struct.anon.2*
  %R8B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %58, i32 0, i32 0
  %59 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %60 = getelementptr inbounds %struct.GPR, %struct.GPR* %59, i32 0, i32 19
  %61 = getelementptr inbounds %struct.Reg, %struct.Reg* %60, i32 0, i32 0
  %62 = bitcast %union.anon* %61 to %struct.anon.2*
  %R9B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %62, i32 0, i32 0
  %63 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %64 = getelementptr inbounds %struct.GPR, %struct.GPR* %63, i32 0, i32 21
  %65 = getelementptr inbounds %struct.Reg, %struct.Reg* %64, i32 0, i32 0
  %66 = bitcast %union.anon* %65 to %struct.anon.2*
  %R10B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %66, i32 0, i32 0
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %68 = getelementptr inbounds %struct.GPR, %struct.GPR* %67, i32 0, i32 23
  %69 = getelementptr inbounds %struct.Reg, %struct.Reg* %68, i32 0, i32 0
  %70 = bitcast %union.anon* %69 to %struct.anon.2*
  %R11B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %70, i32 0, i32 0
  %71 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %72 = getelementptr inbounds %struct.GPR, %struct.GPR* %71, i32 0, i32 25
  %73 = getelementptr inbounds %struct.Reg, %struct.Reg* %72, i32 0, i32 0
  %74 = bitcast %union.anon* %73 to %struct.anon.2*
  %R12B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %74, i32 0, i32 0
  %75 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %76 = getelementptr inbounds %struct.GPR, %struct.GPR* %75, i32 0, i32 27
  %77 = getelementptr inbounds %struct.Reg, %struct.Reg* %76, i32 0, i32 0
  %78 = bitcast %union.anon* %77 to %struct.anon.2*
  %R13B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %78, i32 0, i32 0
  %79 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %80 = getelementptr inbounds %struct.GPR, %struct.GPR* %79, i32 0, i32 29
  %81 = getelementptr inbounds %struct.Reg, %struct.Reg* %80, i32 0, i32 0
  %82 = bitcast %union.anon* %81 to %struct.anon.2*
  %R14B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %82, i32 0, i32 0
  %83 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %84 = getelementptr inbounds %struct.GPR, %struct.GPR* %83, i32 0, i32 31
  %85 = getelementptr inbounds %struct.Reg, %struct.Reg* %84, i32 0, i32 0
  %86 = bitcast %union.anon* %85 to %struct.anon.2*
  %R15B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %86, i32 0, i32 0
  %87 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %88 = getelementptr inbounds %struct.GPR, %struct.GPR* %87, i32 0, i32 1
  %89 = getelementptr inbounds %struct.Reg, %struct.Reg* %88, i32 0, i32 0
  %AX = bitcast %union.anon* %89 to i16*
  %90 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %91 = getelementptr inbounds %struct.GPR, %struct.GPR* %90, i32 0, i32 3
  %92 = getelementptr inbounds %struct.Reg, %struct.Reg* %91, i32 0, i32 0
  %BX = bitcast %union.anon* %92 to i16*
  %93 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %94 = getelementptr inbounds %struct.GPR, %struct.GPR* %93, i32 0, i32 5
  %95 = getelementptr inbounds %struct.Reg, %struct.Reg* %94, i32 0, i32 0
  %CX = bitcast %union.anon* %95 to i16*
  %96 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %97 = getelementptr inbounds %struct.GPR, %struct.GPR* %96, i32 0, i32 7
  %98 = getelementptr inbounds %struct.Reg, %struct.Reg* %97, i32 0, i32 0
  %DX = bitcast %union.anon* %98 to i16*
  %99 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %100 = getelementptr inbounds %struct.GPR, %struct.GPR* %99, i32 0, i32 9
  %101 = getelementptr inbounds %struct.Reg, %struct.Reg* %100, i32 0, i32 0
  %SI = bitcast %union.anon* %101 to i16*
  %102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %103 = getelementptr inbounds %struct.GPR, %struct.GPR* %102, i32 0, i32 11
  %104 = getelementptr inbounds %struct.Reg, %struct.Reg* %103, i32 0, i32 0
  %DI = bitcast %union.anon* %104 to i16*
  %105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %106 = getelementptr inbounds %struct.GPR, %struct.GPR* %105, i32 0, i32 13
  %107 = getelementptr inbounds %struct.Reg, %struct.Reg* %106, i32 0, i32 0
  %SP = bitcast %union.anon* %107 to i16*
  %108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %109 = getelementptr inbounds %struct.GPR, %struct.GPR* %108, i32 0, i32 15
  %110 = getelementptr inbounds %struct.Reg, %struct.Reg* %109, i32 0, i32 0
  %BP = bitcast %union.anon* %110 to i16*
  %111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %112 = getelementptr inbounds %struct.GPR, %struct.GPR* %111, i32 0, i32 17
  %113 = getelementptr inbounds %struct.Reg, %struct.Reg* %112, i32 0, i32 0
  %R8W = bitcast %union.anon* %113 to i16*
  %114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %115 = getelementptr inbounds %struct.GPR, %struct.GPR* %114, i32 0, i32 19
  %116 = getelementptr inbounds %struct.Reg, %struct.Reg* %115, i32 0, i32 0
  %R9W = bitcast %union.anon* %116 to i16*
  %117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %118 = getelementptr inbounds %struct.GPR, %struct.GPR* %117, i32 0, i32 21
  %119 = getelementptr inbounds %struct.Reg, %struct.Reg* %118, i32 0, i32 0
  %R10W = bitcast %union.anon* %119 to i16*
  %120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %121 = getelementptr inbounds %struct.GPR, %struct.GPR* %120, i32 0, i32 23
  %122 = getelementptr inbounds %struct.Reg, %struct.Reg* %121, i32 0, i32 0
  %R11W = bitcast %union.anon* %122 to i16*
  %123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %124 = getelementptr inbounds %struct.GPR, %struct.GPR* %123, i32 0, i32 25
  %125 = getelementptr inbounds %struct.Reg, %struct.Reg* %124, i32 0, i32 0
  %R12W = bitcast %union.anon* %125 to i16*
  %126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %127 = getelementptr inbounds %struct.GPR, %struct.GPR* %126, i32 0, i32 27
  %128 = getelementptr inbounds %struct.Reg, %struct.Reg* %127, i32 0, i32 0
  %R13W = bitcast %union.anon* %128 to i16*
  %129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %130 = getelementptr inbounds %struct.GPR, %struct.GPR* %129, i32 0, i32 29
  %131 = getelementptr inbounds %struct.Reg, %struct.Reg* %130, i32 0, i32 0
  %R14W = bitcast %union.anon* %131 to i16*
  %132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %133 = getelementptr inbounds %struct.GPR, %struct.GPR* %132, i32 0, i32 31
  %134 = getelementptr inbounds %struct.Reg, %struct.Reg* %133, i32 0, i32 0
  %R15W = bitcast %union.anon* %134 to i16*
  %135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %136 = getelementptr inbounds %struct.GPR, %struct.GPR* %135, i32 0, i32 33
  %137 = getelementptr inbounds %struct.Reg, %struct.Reg* %136, i32 0, i32 0
  %IP = bitcast %union.anon* %137 to i16*
  %138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %139 = getelementptr inbounds %struct.GPR, %struct.GPR* %138, i32 0, i32 1
  %140 = getelementptr inbounds %struct.Reg, %struct.Reg* %139, i32 0, i32 0
  %EAX = bitcast %union.anon* %140 to i32*
  %141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %142 = getelementptr inbounds %struct.GPR, %struct.GPR* %141, i32 0, i32 3
  %143 = getelementptr inbounds %struct.Reg, %struct.Reg* %142, i32 0, i32 0
  %EBX = bitcast %union.anon* %143 to i32*
  %144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %145 = getelementptr inbounds %struct.GPR, %struct.GPR* %144, i32 0, i32 5
  %146 = getelementptr inbounds %struct.Reg, %struct.Reg* %145, i32 0, i32 0
  %ECX = bitcast %union.anon* %146 to i32*
  %147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %148 = getelementptr inbounds %struct.GPR, %struct.GPR* %147, i32 0, i32 7
  %149 = getelementptr inbounds %struct.Reg, %struct.Reg* %148, i32 0, i32 0
  %EDX = bitcast %union.anon* %149 to i32*
  %150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %151 = getelementptr inbounds %struct.GPR, %struct.GPR* %150, i32 0, i32 9
  %152 = getelementptr inbounds %struct.Reg, %struct.Reg* %151, i32 0, i32 0
  %ESI = bitcast %union.anon* %152 to i32*
  %153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %154 = getelementptr inbounds %struct.GPR, %struct.GPR* %153, i32 0, i32 11
  %155 = getelementptr inbounds %struct.Reg, %struct.Reg* %154, i32 0, i32 0
  %EDI = bitcast %union.anon* %155 to i32*
  %156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %157 = getelementptr inbounds %struct.GPR, %struct.GPR* %156, i32 0, i32 13
  %158 = getelementptr inbounds %struct.Reg, %struct.Reg* %157, i32 0, i32 0
  %ESP = bitcast %union.anon* %158 to i32*
  %159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %160 = getelementptr inbounds %struct.GPR, %struct.GPR* %159, i32 0, i32 15
  %161 = getelementptr inbounds %struct.Reg, %struct.Reg* %160, i32 0, i32 0
  %EBP = bitcast %union.anon* %161 to i32*
  %162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %163 = getelementptr inbounds %struct.GPR, %struct.GPR* %162, i32 0, i32 33
  %164 = getelementptr inbounds %struct.Reg, %struct.Reg* %163, i32 0, i32 0
  %EIP = bitcast %union.anon* %164 to i32*
  %165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %166 = getelementptr inbounds %struct.GPR, %struct.GPR* %165, i32 0, i32 17
  %167 = getelementptr inbounds %struct.Reg, %struct.Reg* %166, i32 0, i32 0
  %R8D = bitcast %union.anon* %167 to i32*
  %168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %169 = getelementptr inbounds %struct.GPR, %struct.GPR* %168, i32 0, i32 19
  %170 = getelementptr inbounds %struct.Reg, %struct.Reg* %169, i32 0, i32 0
  %R9D = bitcast %union.anon* %170 to i32*
  %171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %172 = getelementptr inbounds %struct.GPR, %struct.GPR* %171, i32 0, i32 21
  %173 = getelementptr inbounds %struct.Reg, %struct.Reg* %172, i32 0, i32 0
  %R10D = bitcast %union.anon* %173 to i32*
  %174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %175 = getelementptr inbounds %struct.GPR, %struct.GPR* %174, i32 0, i32 23
  %176 = getelementptr inbounds %struct.Reg, %struct.Reg* %175, i32 0, i32 0
  %R11D = bitcast %union.anon* %176 to i32*
  %177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %178 = getelementptr inbounds %struct.GPR, %struct.GPR* %177, i32 0, i32 25
  %179 = getelementptr inbounds %struct.Reg, %struct.Reg* %178, i32 0, i32 0
  %R12D = bitcast %union.anon* %179 to i32*
  %180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %181 = getelementptr inbounds %struct.GPR, %struct.GPR* %180, i32 0, i32 27
  %182 = getelementptr inbounds %struct.Reg, %struct.Reg* %181, i32 0, i32 0
  %R13D = bitcast %union.anon* %182 to i32*
  %183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %184 = getelementptr inbounds %struct.GPR, %struct.GPR* %183, i32 0, i32 29
  %185 = getelementptr inbounds %struct.Reg, %struct.Reg* %184, i32 0, i32 0
  %R14D = bitcast %union.anon* %185 to i32*
  %186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %187 = getelementptr inbounds %struct.GPR, %struct.GPR* %186, i32 0, i32 31
  %188 = getelementptr inbounds %struct.Reg, %struct.Reg* %187, i32 0, i32 0
  %R15D = bitcast %union.anon* %188 to i32*
  %189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %190 = getelementptr inbounds %struct.GPR, %struct.GPR* %189, i32 0, i32 1
  %191 = getelementptr inbounds %struct.Reg, %struct.Reg* %190, i32 0, i32 0
  %RAX = bitcast %union.anon* %191 to i64*
  %192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %193 = getelementptr inbounds %struct.GPR, %struct.GPR* %192, i32 0, i32 3
  %194 = getelementptr inbounds %struct.Reg, %struct.Reg* %193, i32 0, i32 0
  %RBX = bitcast %union.anon* %194 to i64*
  %195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %196 = getelementptr inbounds %struct.GPR, %struct.GPR* %195, i32 0, i32 5
  %197 = getelementptr inbounds %struct.Reg, %struct.Reg* %196, i32 0, i32 0
  %RCX = bitcast %union.anon* %197 to i64*
  %198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %199 = getelementptr inbounds %struct.GPR, %struct.GPR* %198, i32 0, i32 7
  %200 = getelementptr inbounds %struct.Reg, %struct.Reg* %199, i32 0, i32 0
  %RDX = bitcast %union.anon* %200 to i64*
  %201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %202 = getelementptr inbounds %struct.GPR, %struct.GPR* %201, i32 0, i32 9
  %203 = getelementptr inbounds %struct.Reg, %struct.Reg* %202, i32 0, i32 0
  %RSI = bitcast %union.anon* %203 to i64*
  %204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %205 = getelementptr inbounds %struct.GPR, %struct.GPR* %204, i32 0, i32 11
  %206 = getelementptr inbounds %struct.Reg, %struct.Reg* %205, i32 0, i32 0
  %RDI = bitcast %union.anon* %206 to i64*
  %207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %208 = getelementptr inbounds %struct.GPR, %struct.GPR* %207, i32 0, i32 13
  %209 = getelementptr inbounds %struct.Reg, %struct.Reg* %208, i32 0, i32 0
  %RSP = bitcast %union.anon* %209 to i64*
  %210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %211 = getelementptr inbounds %struct.GPR, %struct.GPR* %210, i32 0, i32 15
  %212 = getelementptr inbounds %struct.Reg, %struct.Reg* %211, i32 0, i32 0
  %RBP = bitcast %union.anon* %212 to i64*
  %213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %214 = getelementptr inbounds %struct.GPR, %struct.GPR* %213, i32 0, i32 17
  %215 = getelementptr inbounds %struct.Reg, %struct.Reg* %214, i32 0, i32 0
  %R8 = bitcast %union.anon* %215 to i64*
  %216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %217 = getelementptr inbounds %struct.GPR, %struct.GPR* %216, i32 0, i32 19
  %218 = getelementptr inbounds %struct.Reg, %struct.Reg* %217, i32 0, i32 0
  %R9 = bitcast %union.anon* %218 to i64*
  %219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %220 = getelementptr inbounds %struct.GPR, %struct.GPR* %219, i32 0, i32 21
  %221 = getelementptr inbounds %struct.Reg, %struct.Reg* %220, i32 0, i32 0
  %R10 = bitcast %union.anon* %221 to i64*
  %222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %223 = getelementptr inbounds %struct.GPR, %struct.GPR* %222, i32 0, i32 23
  %224 = getelementptr inbounds %struct.Reg, %struct.Reg* %223, i32 0, i32 0
  %R11 = bitcast %union.anon* %224 to i64*
  %225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %226 = getelementptr inbounds %struct.GPR, %struct.GPR* %225, i32 0, i32 25
  %227 = getelementptr inbounds %struct.Reg, %struct.Reg* %226, i32 0, i32 0
  %R12 = bitcast %union.anon* %227 to i64*
  %228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %229 = getelementptr inbounds %struct.GPR, %struct.GPR* %228, i32 0, i32 27
  %230 = getelementptr inbounds %struct.Reg, %struct.Reg* %229, i32 0, i32 0
  %R13 = bitcast %union.anon* %230 to i64*
  %231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %232 = getelementptr inbounds %struct.GPR, %struct.GPR* %231, i32 0, i32 29
  %233 = getelementptr inbounds %struct.Reg, %struct.Reg* %232, i32 0, i32 0
  %R14 = bitcast %union.anon* %233 to i64*
  %234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %235 = getelementptr inbounds %struct.GPR, %struct.GPR* %234, i32 0, i32 31
  %236 = getelementptr inbounds %struct.Reg, %struct.Reg* %235, i32 0, i32 0
  %R15 = bitcast %union.anon* %236 to i64*
  %237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %238 = getelementptr inbounds %struct.GPR, %struct.GPR* %237, i32 0, i32 33
  %239 = getelementptr inbounds %struct.Reg, %struct.Reg* %238, i32 0, i32 0
  %RIP = bitcast %union.anon* %239 to i64*
  %240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %241 = getelementptr inbounds %struct.Segments, %struct.Segments* %240, i32 0, i32 1
  %SS = bitcast %union.SegmentSelector* %241 to i16*
  %242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %243 = getelementptr inbounds %struct.Segments, %struct.Segments* %242, i32 0, i32 3
  %ES = bitcast %union.SegmentSelector* %243 to i16*
  %244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %245 = getelementptr inbounds %struct.Segments, %struct.Segments* %244, i32 0, i32 5
  %GS = bitcast %union.SegmentSelector* %245 to i16*
  %246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %247 = getelementptr inbounds %struct.Segments, %struct.Segments* %246, i32 0, i32 7
  %FS = bitcast %union.SegmentSelector* %247 to i16*
  %248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %249 = getelementptr inbounds %struct.Segments, %struct.Segments* %248, i32 0, i32 9
  %DS = bitcast %union.SegmentSelector* %249 to i16*
  %250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %251 = getelementptr inbounds %struct.Segments, %struct.Segments* %250, i32 0, i32 11
  %CS = bitcast %union.SegmentSelector* %251 to i16*
  %252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %253 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %252, i32 0, i32 5
  %254 = getelementptr inbounds %struct.Reg, %struct.Reg* %253, i32 0, i32 0
  %GS_BASE = bitcast %union.anon* %254 to i64*
  %255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %256 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %255, i32 0, i32 7
  %257 = getelementptr inbounds %struct.Reg, %struct.Reg* %256, i32 0, i32 0
  %FS_BASE = bitcast %union.anon* %257 to i64*
  %258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %259 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %258, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %259 to %"class.std::bitset"*
  %260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %261 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %260, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %261 to %"class.std::bitset"*
  %262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %263 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %262, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %263 to %"class.std::bitset"*
  %264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %265 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %264, i64 0, i64 3
  %YMM3 = bitcast %union.VectorReg* %265 to %"class.std::bitset"*
  %266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %267 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %266, i64 0, i64 4
  %YMM4 = bitcast %union.VectorReg* %267 to %"class.std::bitset"*
  %268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %269 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %268, i64 0, i64 5
  %YMM5 = bitcast %union.VectorReg* %269 to %"class.std::bitset"*
  %270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %271 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %270, i64 0, i64 6
  %YMM6 = bitcast %union.VectorReg* %271 to %"class.std::bitset"*
  %272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %273 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %272, i64 0, i64 7
  %YMM7 = bitcast %union.VectorReg* %273 to %"class.std::bitset"*
  %274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %275 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %274, i64 0, i64 8
  %YMM8 = bitcast %union.VectorReg* %275 to %"class.std::bitset"*
  %276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %277 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %276, i64 0, i64 9
  %YMM9 = bitcast %union.VectorReg* %277 to %"class.std::bitset"*
  %278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %279 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %278, i64 0, i64 10
  %YMM10 = bitcast %union.VectorReg* %279 to %"class.std::bitset"*
  %280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %281 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %280, i64 0, i64 11
  %YMM11 = bitcast %union.VectorReg* %281 to %"class.std::bitset"*
  %282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %283 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %282, i64 0, i64 12
  %YMM12 = bitcast %union.VectorReg* %283 to %"class.std::bitset"*
  %284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %285 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %284, i64 0, i64 13
  %YMM13 = bitcast %union.VectorReg* %285 to %"class.std::bitset"*
  %286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %287 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %286, i64 0, i64 14
  %YMM14 = bitcast %union.VectorReg* %287 to %"class.std::bitset"*
  %288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %289 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %288, i64 0, i64 15
  %YMM15 = bitcast %union.VectorReg* %289 to %"class.std::bitset"*
  %290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %291 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %290, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %291 to %union.vec128_t*
  %292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %293 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %292, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %293 to %union.vec128_t*
  %294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %295 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %294, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %295 to %union.vec128_t*
  %296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %297 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %296, i64 0, i64 3
  %XMM3 = bitcast %union.VectorReg* %297 to %union.vec128_t*
  %298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %299 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %298, i64 0, i64 4
  %XMM4 = bitcast %union.VectorReg* %299 to %union.vec128_t*
  %300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %301 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %300, i64 0, i64 5
  %XMM5 = bitcast %union.VectorReg* %301 to %union.vec128_t*
  %302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %303 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %302, i64 0, i64 6
  %XMM6 = bitcast %union.VectorReg* %303 to %union.vec128_t*
  %304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %305 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %304, i64 0, i64 7
  %XMM7 = bitcast %union.VectorReg* %305 to %union.vec128_t*
  %306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %307 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %306, i64 0, i64 8
  %XMM8 = bitcast %union.VectorReg* %307 to %union.vec128_t*
  %308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %309 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %308, i64 0, i64 9
  %XMM9 = bitcast %union.VectorReg* %309 to %union.vec128_t*
  %310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %311 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %310, i64 0, i64 10
  %XMM10 = bitcast %union.VectorReg* %311 to %union.vec128_t*
  %312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %313 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %312, i64 0, i64 11
  %XMM11 = bitcast %union.VectorReg* %313 to %union.vec128_t*
  %314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %315 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %314, i64 0, i64 12
  %XMM12 = bitcast %union.VectorReg* %315 to %union.vec128_t*
  %316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %317 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %316, i64 0, i64 13
  %XMM13 = bitcast %union.VectorReg* %317 to %union.vec128_t*
  %318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %319 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %318, i64 0, i64 14
  %XMM14 = bitcast %union.VectorReg* %319 to %union.vec128_t*
  %320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %321 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %320, i64 0, i64 15
  %XMM15 = bitcast %union.VectorReg* %321 to %union.vec128_t*
  %322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %323 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %322, i32 0, i32 0
  %324 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %323, i64 0, i64 0
  %ST0 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %324, i32 0, i32 1
  %325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %326 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %325, i32 0, i32 0
  %327 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %326, i64 0, i64 1
  %ST1 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %327, i32 0, i32 1
  %328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %329 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %328, i32 0, i32 0
  %330 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %329, i64 0, i64 2
  %ST2 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %330, i32 0, i32 1
  %331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %332 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %331, i32 0, i32 0
  %333 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %332, i64 0, i64 3
  %ST3 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %333, i32 0, i32 1
  %334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %335 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %334, i32 0, i32 0
  %336 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %335, i64 0, i64 4
  %ST4 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %336, i32 0, i32 1
  %337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %338 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %337, i32 0, i32 0
  %339 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %338, i64 0, i64 5
  %ST5 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %339, i32 0, i32 1
  %340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %341 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %340, i32 0, i32 0
  %342 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %341, i64 0, i64 6
  %ST6 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %342, i32 0, i32 1
  %343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %344 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %343, i32 0, i32 0
  %345 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %344, i64 0, i64 7
  %ST7 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %345, i32 0, i32 1
  %346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %347 = getelementptr inbounds %struct.MMX, %struct.MMX* %346, i32 0, i32 0
  %348 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %347, i64 0, i64 0
  %349 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %348, i32 0, i32 1
  %350 = bitcast %union.vec64_t* %349 to %struct.uint64v1_t*
  %351 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %350, i32 0, i32 0
  %MM0 = getelementptr inbounds [1 x i64], [1 x i64]* %351, i64 0, i64 0
  %352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %353 = getelementptr inbounds %struct.MMX, %struct.MMX* %352, i32 0, i32 0
  %354 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %353, i64 0, i64 1
  %355 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %354, i32 0, i32 1
  %356 = bitcast %union.vec64_t* %355 to %struct.uint64v1_t*
  %357 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %356, i32 0, i32 0
  %MM1 = getelementptr inbounds [1 x i64], [1 x i64]* %357, i64 0, i64 0
  %358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %359 = getelementptr inbounds %struct.MMX, %struct.MMX* %358, i32 0, i32 0
  %360 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %359, i64 0, i64 2
  %361 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %360, i32 0, i32 1
  %362 = bitcast %union.vec64_t* %361 to %struct.uint64v1_t*
  %363 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %362, i32 0, i32 0
  %MM2 = getelementptr inbounds [1 x i64], [1 x i64]* %363, i64 0, i64 0
  %364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %365 = getelementptr inbounds %struct.MMX, %struct.MMX* %364, i32 0, i32 0
  %366 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %365, i64 0, i64 3
  %367 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %366, i32 0, i32 1
  %368 = bitcast %union.vec64_t* %367 to %struct.uint64v1_t*
  %369 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %368, i32 0, i32 0
  %MM3 = getelementptr inbounds [1 x i64], [1 x i64]* %369, i64 0, i64 0
  %370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %371 = getelementptr inbounds %struct.MMX, %struct.MMX* %370, i32 0, i32 0
  %372 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %371, i64 0, i64 4
  %373 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %372, i32 0, i32 1
  %374 = bitcast %union.vec64_t* %373 to %struct.uint64v1_t*
  %375 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %374, i32 0, i32 0
  %MM4 = getelementptr inbounds [1 x i64], [1 x i64]* %375, i64 0, i64 0
  %376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %377 = getelementptr inbounds %struct.MMX, %struct.MMX* %376, i32 0, i32 0
  %378 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %377, i64 0, i64 5
  %379 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %378, i32 0, i32 1
  %380 = bitcast %union.vec64_t* %379 to %struct.uint64v1_t*
  %381 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %380, i32 0, i32 0
  %MM5 = getelementptr inbounds [1 x i64], [1 x i64]* %381, i64 0, i64 0
  %382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %383 = getelementptr inbounds %struct.MMX, %struct.MMX* %382, i32 0, i32 0
  %384 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %383, i64 0, i64 6
  %385 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %384, i32 0, i32 1
  %386 = bitcast %union.vec64_t* %385 to %struct.uint64v1_t*
  %387 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %386, i32 0, i32 0
  %MM6 = getelementptr inbounds [1 x i64], [1 x i64]* %387, i64 0, i64 0
  %388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %389 = getelementptr inbounds %struct.MMX, %struct.MMX* %388, i32 0, i32 0
  %390 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %389, i64 0, i64 7
  %391 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %390, i32 0, i32 1
  %392 = bitcast %union.vec64_t* %391 to %struct.uint64v1_t*
  %393 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %392, i32 0, i32 0
  %MM7 = getelementptr inbounds [1 x i64], [1 x i64]* %393, i64 0, i64 0
  %394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %394, i32 0, i32 5
  %395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %395, i32 0, i32 1
  %396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %396, i32 0, i32 11
  %397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %397, i32 0, i32 13
  %398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %398, i32 0, i32 3
  %399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %399, i32 0, i32 9
  %400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %400, i32 0, i32 7
  store i64* @DR0, i64** %_DR0, align 8
  store i64* @DR1, i64** %_DR1, align 8
  store i64* @DR2, i64** %_DR2, align 8
  store i64* @DR3, i64** %_DR3, align 8
  store i64* @DR4, i64** %_DR4, align 8
  store i64* @DR5, i64** %_DR5, align 8
  store i64* @DR6, i64** %_DR6, align 8
  store i64* @DR7, i64** %_DR7, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8, align 8
  %401 = bitcast %"class.std::bitset"* %YMM0 to double*
  %402 = load double, double* %401
  %403 = load i64, i64* %RSP
  %404 = load %struct.Memory*, %struct.Memory** %MEMORY
  %405 = inttoptr i64 %403 to i64*
  %406 = load i64, i64* %405
  store i64 %406, i64* %PC
  %407 = add i64 %403, 8
  store i64 %407, i64* %RSP
  %408 = call double @atan(double %402)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0
  %409 = bitcast %"class.std::bitset"* %YMM0 to double*
  store double %408, double* %409
  %410 = load %struct.Memory*, %struct.Memory** %MEMORY
  ret %struct.Memory* %410
}

; Function Attrs: noinline
define internal %struct.Memory* @ext_602160_printf(%struct.State*, i64, %struct.Memory*) #13 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

; Function Attrs: noinline
define internal %struct.Memory* @ext_6020e8_strncmp(%struct.State*, i64, %struct.Memory*) #13 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @strncmp to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

; Function Attrs: noinline
define internal %struct.Memory* @ext_4006d0_fprintf(%struct.State*, i64, %struct.Memory*) #13 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @fprintf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

; Function Attrs: naked nobuiltin noinline
define dllexport void @.init_proc() #15 {
  call void asm sideeffect "pushq $0;pushq $$0x400648;jmpq *$1;", "*m,*m,~{dirflag},~{fpsr},~{flags}"(%struct.Memory* (%struct.State*, i64, %struct.Memory*)** @7, void ()** @2)
  ret void
}

define internal %struct.Memory* @.init_proc_wrapper(%struct.State*, i64, %struct.Memory*) {
  %4 = load volatile i1, i1* @0
  br i1 %4, label %5, label %6

; <label>:5:                                      ; preds = %3
  br label %__mcsema_early_init.exit

; <label>:6:                                      ; preds = %3
  store volatile i1 true, i1* @0
  br label %__mcsema_early_init.exit

__mcsema_early_init.exit:                         ; preds = %6, %5
  %7 = tail call %struct.Memory* @sub_400648__init_proc(%struct.State* %0, i64 %1, %struct.Memory* %2)
  ret %struct.Memory* %7
}

; Function Attrs: naked nobuiltin noinline
define dllexport void @P0() #15 {
  call void asm sideeffect "pushq $0;pushq $$0x4017c0;jmpq *$1;", "*m,*m,~{dirflag},~{fpsr},~{flags}"(%struct.Memory* (%struct.State*, i64, %struct.Memory*)** @8, void ()** @2)
  ret void
}

define internal %struct.Memory* @P0_wrapper(%struct.State*, i64, %struct.Memory*) {
  %4 = load volatile i1, i1* @0
  br i1 %4, label %5, label %6

; <label>:5:                                      ; preds = %3
  br label %__mcsema_early_init.exit

; <label>:6:                                      ; preds = %3
  store volatile i1 true, i1* @0
  br label %__mcsema_early_init.exit

__mcsema_early_init.exit:                         ; preds = %6, %5
  %7 = tail call %struct.Memory* @sub_4017c0_P0(%struct.State* %0, i64 %1, %struct.Memory* %2)
  ret %struct.Memory* %7
}

; Function Attrs: naked nobuiltin noinline
define dllexport void @PA() #15 {
  call void asm sideeffect "pushq $0;pushq $$0x401610;jmpq *$1;", "*m,*m,~{dirflag},~{fpsr},~{flags}"(%struct.Memory* (%struct.State*, i64, %struct.Memory*)** @9, void ()** @2)
  ret void
}

define internal %struct.Memory* @PA_wrapper(%struct.State*, i64, %struct.Memory*) {
  %4 = load volatile i1, i1* @0
  br i1 %4, label %5, label %6

; <label>:5:                                      ; preds = %3
  br label %__mcsema_early_init.exit

; <label>:6:                                      ; preds = %3
  store volatile i1 true, i1* @0
  br label %__mcsema_early_init.exit

__mcsema_early_init.exit:                         ; preds = %6, %5
  %7 = tail call %struct.Memory* @sub_401610_PA(%struct.State* %0, i64 %1, %struct.Memory* %2)
  ret %struct.Memory* %7
}

; Function Attrs: naked nobuiltin noinline
define dllexport void @.term_proc() #15 {
  call void asm sideeffect "pushq $0;pushq $$0x4018a4;jmpq *$1;", "*m,*m,~{dirflag},~{fpsr},~{flags}"(%struct.Memory* (%struct.State*, i64, %struct.Memory*)** @10, void ()** @2)
  ret void
}

define internal %struct.Memory* @.term_proc_wrapper(%struct.State*, i64, %struct.Memory*) {
  %4 = load volatile i1, i1* @0
  br i1 %4, label %5, label %6

; <label>:5:                                      ; preds = %3
  br label %__mcsema_early_init.exit

; <label>:6:                                      ; preds = %3
  store volatile i1 true, i1* @0
  br label %__mcsema_early_init.exit

__mcsema_early_init.exit:                         ; preds = %6, %5
  %7 = tail call %struct.Memory* @sub_4018a4__term_proc(%struct.State* %0, i64 %1, %struct.Memory* %2)
  ret %struct.Memory* %7
}

; Function Attrs: naked nobuiltin noinline
define dllexport void @P3() #15 {
  call void asm sideeffect "pushq $0;pushq $$0x401740;jmpq *$1;", "*m,*m,~{dirflag},~{fpsr},~{flags}"(%struct.Memory* (%struct.State*, i64, %struct.Memory*)** @11, void ()** @2)
  ret void
}

define internal %struct.Memory* @P3_wrapper(%struct.State*, i64, %struct.Memory*) {
  %4 = load volatile i1, i1* @0
  br i1 %4, label %5, label %6

; <label>:5:                                      ; preds = %3
  br label %__mcsema_early_init.exit

; <label>:6:                                      ; preds = %3
  store volatile i1 true, i1* @0
  br label %__mcsema_early_init.exit

__mcsema_early_init.exit:                         ; preds = %6, %5
  %7 = tail call %struct.Memory* @sub_401740_P3(%struct.State* %0, i64 %1, %struct.Memory* %2)
  ret %struct.Memory* %7
}

; Function Attrs: naked nobuiltin noinline
define dllexport void @POUT() #15 {
  call void asm sideeffect "pushq $0;pushq $$0x4015a0;jmpq *$1;", "*m,*m,~{dirflag},~{fpsr},~{flags}"(%struct.Memory* (%struct.State*, i64, %struct.Memory*)** @12, void ()** @2)
  ret void
}

define internal %struct.Memory* @POUT_wrapper(%struct.State*, i64, %struct.Memory*) {
  %4 = load volatile i1, i1* @0
  br i1 %4, label %5, label %6

; <label>:5:                                      ; preds = %3
  br label %__mcsema_early_init.exit

; <label>:6:                                      ; preds = %3
  store volatile i1 true, i1* @0
  br label %__mcsema_early_init.exit

__mcsema_early_init.exit:                         ; preds = %6, %5
  %7 = tail call %struct.Memory* @sub_4015a0_POUT(%struct.State* %0, i64 %1, %struct.Memory* %2)
  ret %struct.Memory* %7
}

define internal void @__mcsema_destructor() {
  call void @callback_sub_4018a0___libc_csu_fini()
  ret void
}

define internal void @__mcsema_constructor() {
  %1 = load volatile i1, i1* @0
  br i1 %1, label %2, label %3

; <label>:2:                                      ; preds = %0
  br label %__mcsema_early_init.exit

; <label>:3:                                      ; preds = %0
  store volatile i1 true, i1* @0
  br label %__mcsema_early_init.exit

__mcsema_early_init.exit:                         ; preds = %3, %2
  call void @callback_sub_401830___libc_csu_init()
  ret void
}

attributes #0 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { noduplicate noinline nounwind optnone readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone }
attributes #4 = { noduplicate noinline nounwind optnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noinline nounwind optnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noduplicate noinline nounwind optnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noduplicate noinline nounwind optnone readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noduplicate noinline nounwind optnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noinline }
attributes #14 = { noinline "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { naked nobuiltin noinline }
attributes #16 = { alwaysinline inlinehint "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #17 = { nounwind }

!llvm.ident = !{!0, !0}
!llvm.dbg.cu = !{!1}
!llvm.module.flags = !{!1259, !1260}

!0 = !{!"clang version 4.0.1 (tags/RELEASE_401/final)"}
!1 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus, file: !2, producer: "clang version 4.0.1 (tags/RELEASE_401/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !3, retainedTypes: !67, imports: !70)
!2 = !DIFile(filename: "/home/ubuntu/Github/remill/remill/Arch/X86/Runtime/BasicBlock.cpp", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!3 = !{!4, !26, !35, !39, !45, !51, !55, !61}
!4 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, name: "Name", scope: !6, file: !5, line: 70, baseType: !8, size: 32, elements: !11, identifier: "_ZTSN14AsyncHyperCall4NameE")
!5 = !DIFile(filename: "/home/ubuntu/Github/remill/remill/Arch/Runtime/HyperCall.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!6 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "AsyncHyperCall", file: !5, line: 68, size: 8, elements: !7, identifier: "_ZTS14AsyncHyperCall")
!7 = !{}
!8 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !9, line: 183, baseType: !10)
!9 = !DIFile(filename: "/home/ubuntu/Github/remill/remill-build/libraries/llvm/bin/../lib/clang/4.0.1/include/stdint.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!10 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!11 = !{!12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25}
!12 = !DIEnumerator(name: "kInvalid", value: 0)
!13 = !DIEnumerator(name: "kX86Int1", value: 1)
!14 = !DIEnumerator(name: "kX86Int3", value: 2)
!15 = !DIEnumerator(name: "kX86IntO", value: 3)
!16 = !DIEnumerator(name: "kX86IntN", value: 4)
!17 = !DIEnumerator(name: "kX86Bound", value: 5)
!18 = !DIEnumerator(name: "kX86IRet", value: 6)
!19 = !DIEnumerator(name: "kX86SysCall", value: 7)
!20 = !DIEnumerator(name: "kX86SysRet", value: 8)
!21 = !DIEnumerator(name: "kX86SysEnter", value: 9)
!22 = !DIEnumerator(name: "kX86SysExit", value: 10)
!23 = !DIEnumerator(name: "kX86JmpFar", value: 11)
!24 = !DIEnumerator(name: "kAArch64SupervisorCall", value: 12)
!25 = !DIEnumerator(name: "kInvalidInstruction", value: 13)
!26 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, name: "RequestPrivilegeLevel", file: !27, line: 64, baseType: !28, size: 16, elements: !30, identifier: "_ZTS21RequestPrivilegeLevel")
!27 = !DIFile(filename: "/home/ubuntu/Github/remill/remill/Arch/X86/Runtime/State.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!28 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !9, line: 218, baseType: !29)
!29 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!30 = !{!31, !32, !33, !34}
!31 = !DIEnumerator(name: "kRPLRingZero", value: 0)
!32 = !DIEnumerator(name: "kRPLRingOne", value: 1)
!33 = !DIEnumerator(name: "kRPLRingTwo", value: 2)
!34 = !DIEnumerator(name: "kRPLRingThree", value: 3)
!35 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, name: "TableIndicator", file: !27, line: 71, baseType: !28, size: 16, elements: !36, identifier: "_ZTS14TableIndicator")
!36 = !{!37, !38}
!37 = !DIEnumerator(name: "kGlobalDescriptorTable", value: 0)
!38 = !DIEnumerator(name: "kLocalDescriptorTable", value: 1)
!39 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, name: "FPUPrecisionControl", file: !27, line: 123, baseType: !28, size: 16, elements: !40, identifier: "_ZTS19FPUPrecisionControl")
!40 = !{!41, !42, !43, !44}
!41 = !DIEnumerator(name: "kPrecisionSingle", value: 0)
!42 = !DIEnumerator(name: "kPrecisionReserved", value: 1)
!43 = !DIEnumerator(name: "kPrecisionDouble", value: 2)
!44 = !DIEnumerator(name: "kPrecisionExtended", value: 3)
!45 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, name: "FPURoundingControl", file: !27, line: 130, baseType: !28, size: 16, elements: !46, identifier: "_ZTS18FPURoundingControl")
!46 = !{!47, !48, !49, !50}
!47 = !DIEnumerator(name: "kFPURoundToNearestEven", value: 0)
!48 = !DIEnumerator(name: "kFPURoundDownNegInf", value: 1)
!49 = !DIEnumerator(name: "kFPURoundUpInf", value: 2)
!50 = !DIEnumerator(name: "kFPURoundToZero", value: 3)
!51 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, name: "FPUInfinityControl", file: !27, line: 137, baseType: !28, size: 16, elements: !52, identifier: "_ZTS18FPUInfinityControl")
!52 = !{!53, !54}
!53 = !DIEnumerator(name: "kInfinityProjective", value: 0)
!54 = !DIEnumerator(name: "kInfinityAffine", value: 1)
!55 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, name: "FPUTag", file: !27, line: 214, baseType: !28, size: 16, elements: !56, identifier: "_ZTS6FPUTag")
!56 = !{!57, !58, !59, !60}
!57 = !DIEnumerator(name: "kFPUTagNonZero", value: 0)
!58 = !DIEnumerator(name: "kFPUTagZero", value: 1)
!59 = !DIEnumerator(name: "kFPUTagSpecial", value: 2)
!60 = !DIEnumerator(name: "kFPUTagEmpty", value: 3)
!61 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, name: "FPUAbridgedTag", file: !27, line: 221, baseType: !62, size: 8, elements: !64, identifier: "_ZTS14FPUAbridgedTag")
!62 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !9, line: 237, baseType: !63)
!63 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!64 = !{!65, !66}
!65 = !DIEnumerator(name: "kFPUAbridgedTagEmpty", value: 0)
!66 = !DIEnumerator(name: "kFPUAbridgedTagValid", value: 1)
!67 = !{!68}
!68 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !69, size: 64)
!69 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!70 = !{!71, !77, !83, !86, !93, !97, !102, !104, !112, !116, !120, !132, !136, !140, !144, !148, !153, !157, !161, !165, !169, !177, !181, !185, !187, !191, !195, !199, !205, !209, !213, !215, !223, !227, !235, !237, !241, !245, !249, !253, !258, !263, !268, !269, !270, !271, !274, !275, !276, !277, !278, !279, !280, !335, !339, !355, !358, !363, !371, !376, !380, !384, !388, !392, !394, !396, !400, !406, !410, !416, !422, !424, !428, !432, !436, !440, !451, !453, !457, !461, !465, !467, !471, !475, !479, !481, !483, !487, !495, !499, !503, !507, !509, !515, !517, !523, !527, !531, !535, !539, !543, !547, !549, !551, !555, !559, !563, !565, !569, !573, !575, !577, !581, !585, !589, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !606, !609, !611, !613, !615, !617, !619, !621, !623, !625, !627, !629, !631, !633, !634, !635, !636, !638, !640, !642, !644, !646, !648, !650, !652, !654, !656, !658, !660, !662, !665, !669, !674, !677, !679, !681, !683, !685, !687, !689, !691, !693, !695, !697, !699, !701, !703, !706, !712, !717, !721, !723, !725, !727, !729, !736, !740, !744, !748, !752, !756, !761, !765, !767, !771, !777, !781, !786, !788, !790, !794, !798, !802, !804, !806, !808, !810, !814, !816, !818, !822, !826, !830, !834, !838, !840, !842, !846, !850, !854, !858, !860, !862, !866, !870, !871, !872, !873, !874, !875, !880, !882, !884, !888, !890, !892, !894, !896, !898, !900, !902, !907, !911, !913, !915, !920, !922, !924, !926, !928, !930, !932, !935, !937, !939, !943, !947, !949, !951, !953, !955, !957, !959, !961, !963, !965, !967, !971, !975, !977, !979, !981, !983, !985, !987, !989, !991, !993, !995, !997, !999, !1001, !1003, !1005, !1009, !1013, !1017, !1019, !1021, !1023, !1025, !1027, !1029, !1031, !1033, !1035, !1039, !1043, !1047, !1049, !1051, !1053, !1057, !1061, !1065, !1067, !1069, !1071, !1073, !1075, !1077, !1079, !1081, !1083, !1085, !1087, !1089, !1093, !1097, !1101, !1103, !1105, !1107, !1109, !1113, !1117, !1119, !1121, !1123, !1125, !1127, !1129, !1133, !1137, !1139, !1141, !1143, !1145, !1149, !1153, !1157, !1159, !1161, !1163, !1165, !1167, !1169, !1173, !1177, !1181, !1183, !1187, !1191, !1193, !1195, !1197, !1199, !1201, !1203, !1207, !1209, !1212, !1217, !1219, !1225, !1227, !1229, !1231, !1236, !1238, !1244, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258}
!71 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !72, entity: !74, line: 58)
!72 = !DINamespace(name: "__gnu_debug", scope: null, file: !73, line: 56)
!73 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/debug/debug.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!74 = !DINamespace(name: "__debug", scope: !75, file: !73, line: 50)
!75 = !DINamespace(name: "std", scope: null, file: !76, line: 229)
!76 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/c++config.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!77 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !78, line: 52)
!78 = !DISubprogram(name: "abs", scope: !79, file: !79, line: 837, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!79 = !DIFile(filename: "/usr/include/stdlib.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!80 = !DISubroutineType(types: !81)
!81 = !{!82, !82}
!82 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!83 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !84, line: 127)
!84 = !DIDerivedType(tag: DW_TAG_typedef, name: "div_t", file: !79, line: 62, baseType: !85)
!85 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !79, line: 58, flags: DIFlagFwdDecl, identifier: "_ZTS5div_t")
!86 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !87, line: 128)
!87 = !DIDerivedType(tag: DW_TAG_typedef, name: "ldiv_t", file: !79, line: 70, baseType: !88)
!88 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !79, line: 66, size: 128, elements: !89, identifier: "_ZTS6ldiv_t")
!89 = !{!90, !92}
!90 = !DIDerivedType(tag: DW_TAG_member, name: "quot", scope: !88, file: !79, line: 68, baseType: !91, size: 64)
!91 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!92 = !DIDerivedType(tag: DW_TAG_member, name: "rem", scope: !88, file: !79, line: 69, baseType: !91, size: 64, offset: 64)
!93 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !94, line: 130)
!94 = !DISubprogram(name: "abort", scope: !79, file: !79, line: 588, type: !95, isLocal: false, isDefinition: false, flags: DIFlagPrototyped | DIFlagNoReturn, isOptimized: false)
!95 = !DISubroutineType(types: !96)
!96 = !{null}
!97 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !98, line: 134)
!98 = !DISubprogram(name: "atexit", scope: !79, file: !79, line: 592, type: !99, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!99 = !DISubroutineType(types: !100)
!100 = !{!82, !101}
!101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !95, size: 64)
!102 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !103, line: 137)
!103 = !DISubprogram(name: "at_quick_exit", scope: !79, file: !79, line: 597, type: !99, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!104 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !105, line: 140)
!105 = !DISubprogram(name: "atof", scope: !79, file: !79, line: 101, type: !106, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!106 = !DISubroutineType(types: !107)
!107 = !{!108, !109}
!108 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !110, size: 64)
!110 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !111)
!111 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!112 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !113, line: 141)
!113 = !DISubprogram(name: "atoi", scope: !79, file: !79, line: 104, type: !114, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!114 = !DISubroutineType(types: !115)
!115 = !{!82, !109}
!116 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !117, line: 142)
!117 = !DISubprogram(name: "atol", scope: !79, file: !79, line: 107, type: !118, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!118 = !DISubroutineType(types: !119)
!119 = !{!91, !109}
!120 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !121, line: 143)
!121 = !DISubprogram(name: "bsearch", scope: !79, file: !79, line: 817, type: !122, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!122 = !DISubroutineType(types: !123)
!123 = !{!124, !68, !68, !125, !125, !128}
!124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!125 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !126, line: 62, baseType: !127)
!126 = !DIFile(filename: "/home/ubuntu/Github/remill/remill-build/libraries/llvm/bin/../lib/clang/4.0.1/include/stddef.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!127 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!128 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !79, line: 805, baseType: !129)
!129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !130, size: 64)
!130 = !DISubroutineType(types: !131)
!131 = !{!82, !68, !68}
!132 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !133, line: 144)
!133 = !DISubprogram(name: "calloc", scope: !79, file: !79, line: 541, type: !134, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!134 = !DISubroutineType(types: !135)
!135 = !{!124, !125, !125}
!136 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !137, line: 145)
!137 = !DISubprogram(name: "div", scope: !79, file: !79, line: 849, type: !138, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!138 = !DISubroutineType(types: !139)
!139 = !{!84, !82, !82}
!140 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !141, line: 146)
!141 = !DISubprogram(name: "exit", scope: !79, file: !79, line: 614, type: !142, isLocal: false, isDefinition: false, flags: DIFlagPrototyped | DIFlagNoReturn, isOptimized: false)
!142 = !DISubroutineType(types: !143)
!143 = !{null, !82}
!144 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !145, line: 147)
!145 = !DISubprogram(name: "free", scope: !79, file: !79, line: 563, type: !146, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!146 = !DISubroutineType(types: !147)
!147 = !{null, !124}
!148 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !149, line: 148)
!149 = !DISubprogram(name: "getenv", scope: !79, file: !79, line: 631, type: !150, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!150 = !DISubroutineType(types: !151)
!151 = !{!152, !109}
!152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !111, size: 64)
!153 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !154, line: 149)
!154 = !DISubprogram(name: "labs", scope: !79, file: !79, line: 838, type: !155, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!155 = !DISubroutineType(types: !156)
!156 = !{!91, !91}
!157 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !158, line: 150)
!158 = !DISubprogram(name: "ldiv", scope: !79, file: !79, line: 851, type: !159, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!159 = !DISubroutineType(types: !160)
!160 = !{!87, !91, !91}
!161 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !162, line: 151)
!162 = !DISubprogram(name: "malloc", scope: !79, file: !79, line: 539, type: !163, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!163 = !DISubroutineType(types: !164)
!164 = !{!124, !125}
!165 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !166, line: 153)
!166 = !DISubprogram(name: "mblen", scope: !79, file: !79, line: 919, type: !167, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!167 = !DISubroutineType(types: !168)
!168 = !{!82, !109, !125}
!169 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !170, line: 154)
!170 = !DISubprogram(name: "mbstowcs", scope: !79, file: !79, line: 930, type: !171, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!171 = !DISubroutineType(types: !172)
!172 = !{!125, !173, !176, !125}
!173 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !174)
!174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !175, size: 64)
!175 = !DIBasicType(name: "wchar_t", size: 32, encoding: DW_ATE_signed)
!176 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !109)
!177 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !178, line: 155)
!178 = !DISubprogram(name: "mbtowc", scope: !79, file: !79, line: 922, type: !179, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!179 = !DISubroutineType(types: !180)
!180 = !{!82, !173, !176, !125}
!181 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !182, line: 157)
!182 = !DISubprogram(name: "qsort", scope: !79, file: !79, line: 827, type: !183, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!183 = !DISubroutineType(types: !184)
!184 = !{null, !124, !125, !125, !128}
!185 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !186, line: 160)
!186 = !DISubprogram(name: "quick_exit", scope: !79, file: !79, line: 620, type: !142, isLocal: false, isDefinition: false, flags: DIFlagPrototyped | DIFlagNoReturn, isOptimized: false)
!187 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !188, line: 163)
!188 = !DISubprogram(name: "rand", scope: !79, file: !79, line: 453, type: !189, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!189 = !DISubroutineType(types: !190)
!190 = !{!82}
!191 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !192, line: 164)
!192 = !DISubprogram(name: "realloc", scope: !79, file: !79, line: 549, type: !193, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!193 = !DISubroutineType(types: !194)
!194 = !{!124, !124, !125}
!195 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !196, line: 165)
!196 = !DISubprogram(name: "srand", scope: !79, file: !79, line: 455, type: !197, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!197 = !DISubroutineType(types: !198)
!198 = !{null, !10}
!199 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !200, line: 166)
!200 = !DISubprogram(name: "strtod", scope: !79, file: !79, line: 117, type: !201, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!201 = !DISubroutineType(types: !202)
!202 = !{!108, !176, !203}
!203 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !204)
!204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !152, size: 64)
!205 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !206, line: 167)
!206 = !DISubprogram(name: "strtol", scope: !79, file: !79, line: 176, type: !207, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!207 = !DISubroutineType(types: !208)
!208 = !{!91, !176, !203, !82}
!209 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !210, line: 168)
!210 = !DISubprogram(name: "strtoul", scope: !79, file: !79, line: 180, type: !211, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!211 = !DISubroutineType(types: !212)
!212 = !{!127, !176, !203, !82}
!213 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !214, line: 169)
!214 = !DISubprogram(name: "system", scope: !79, file: !79, line: 781, type: !114, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!215 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !216, line: 171)
!216 = !DISubprogram(name: "wcstombs", scope: !79, file: !79, line: 933, type: !217, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!217 = !DISubroutineType(types: !218)
!218 = !{!125, !219, !220, !125}
!219 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !152)
!220 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !221)
!221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !222, size: 64)
!222 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !175)
!223 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !224, line: 172)
!224 = !DISubprogram(name: "wctomb", scope: !79, file: !79, line: 926, type: !225, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!225 = !DISubroutineType(types: !226)
!226 = !{!82, !152, !175}
!227 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !229, line: 200)
!228 = !DINamespace(name: "__gnu_cxx", scope: null, file: !76, line: 255)
!229 = !DIDerivedType(tag: DW_TAG_typedef, name: "lldiv_t", file: !79, line: 80, baseType: !230)
!230 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !79, line: 76, size: 128, elements: !231, identifier: "_ZTS7lldiv_t")
!231 = !{!232, !234}
!232 = !DIDerivedType(tag: DW_TAG_member, name: "quot", scope: !230, file: !79, line: 78, baseType: !233, size: 64)
!233 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "rem", scope: !230, file: !79, line: 79, baseType: !233, size: 64, offset: 64)
!235 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !236, line: 206)
!236 = !DISubprogram(name: "_Exit", scope: !79, file: !79, line: 626, type: !142, isLocal: false, isDefinition: false, flags: DIFlagPrototyped | DIFlagNoReturn, isOptimized: false)
!237 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !238, line: 210)
!238 = !DISubprogram(name: "llabs", scope: !79, file: !79, line: 841, type: !239, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!239 = !DISubroutineType(types: !240)
!240 = !{!233, !233}
!241 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !242, line: 216)
!242 = !DISubprogram(name: "lldiv", scope: !79, file: !79, line: 855, type: !243, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!243 = !DISubroutineType(types: !244)
!244 = !{!229, !233, !233}
!245 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !246, line: 227)
!246 = !DISubprogram(name: "atoll", scope: !79, file: !79, line: 112, type: !247, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!247 = !DISubroutineType(types: !248)
!248 = !{!233, !109}
!249 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !250, line: 228)
!250 = !DISubprogram(name: "strtoll", scope: !79, file: !79, line: 200, type: !251, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!251 = !DISubroutineType(types: !252)
!252 = !{!233, !176, !203, !82}
!253 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !254, line: 229)
!254 = !DISubprogram(name: "strtoull", scope: !79, file: !79, line: 205, type: !255, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!255 = !DISubroutineType(types: !256)
!256 = !{!257, !176, !203, !82}
!257 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!258 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !259, line: 231)
!259 = !DISubprogram(name: "strtof", scope: !79, file: !79, line: 123, type: !260, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!260 = !DISubroutineType(types: !261)
!261 = !{!262, !176, !203}
!262 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!263 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !264, line: 232)
!264 = !DISubprogram(name: "strtold", scope: !79, file: !79, line: 126, type: !265, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!265 = !DISubroutineType(types: !266)
!266 = !{!267, !176, !203}
!267 = !DIBasicType(name: "long double", size: 128, encoding: DW_ATE_float)
!268 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !229, line: 240)
!269 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !236, line: 242)
!270 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !238, line: 244)
!271 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !272, line: 245)
!272 = !DISubprogram(name: "div", linkageName: "_ZN9__gnu_cxx3divExx", scope: !228, file: !273, line: 213, type: !243, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!273 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/cstdlib", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!274 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !242, line: 246)
!275 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !246, line: 248)
!276 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !259, line: 249)
!277 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !250, line: 250)
!278 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !254, line: 251)
!279 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !264, line: 252)
!280 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !281, line: 57)
!281 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "exception_ptr", scope: !283, file: !282, line: 79, size: 64, elements: !284, identifier: "_ZTSNSt15__exception_ptr13exception_ptrE")
!282 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/exception_ptr.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!283 = !DINamespace(name: "__exception_ptr", scope: !75, file: !282, line: 52)
!284 = !{!285, !286, !290, !293, !294, !299, !300, !304, !309, !313, !317, !320, !321, !324, !328}
!285 = !DIDerivedType(tag: DW_TAG_member, name: "_M_exception_object", scope: !281, file: !282, line: 81, baseType: !124, size: 64)
!286 = !DISubprogram(name: "exception_ptr", scope: !281, file: !282, line: 83, type: !287, isLocal: false, isDefinition: false, scopeLine: 83, flags: DIFlagExplicit | DIFlagPrototyped, isOptimized: false)
!287 = !DISubroutineType(types: !288)
!288 = !{null, !289, !124}
!289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !281, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!290 = !DISubprogram(name: "_M_addref", linkageName: "_ZNSt15__exception_ptr13exception_ptr9_M_addrefEv", scope: !281, file: !282, line: 85, type: !291, isLocal: false, isDefinition: false, scopeLine: 85, flags: DIFlagPrototyped, isOptimized: false)
!291 = !DISubroutineType(types: !292)
!292 = !{null, !289}
!293 = !DISubprogram(name: "_M_release", linkageName: "_ZNSt15__exception_ptr13exception_ptr10_M_releaseEv", scope: !281, file: !282, line: 86, type: !291, isLocal: false, isDefinition: false, scopeLine: 86, flags: DIFlagPrototyped, isOptimized: false)
!294 = !DISubprogram(name: "_M_get", linkageName: "_ZNKSt15__exception_ptr13exception_ptr6_M_getEv", scope: !281, file: !282, line: 88, type: !295, isLocal: false, isDefinition: false, scopeLine: 88, flags: DIFlagPrototyped, isOptimized: false)
!295 = !DISubroutineType(types: !296)
!296 = !{!124, !297}
!297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !298, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!298 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !281)
!299 = !DISubprogram(name: "exception_ptr", scope: !281, file: !282, line: 96, type: !291, isLocal: false, isDefinition: false, scopeLine: 96, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: false)
!300 = !DISubprogram(name: "exception_ptr", scope: !281, file: !282, line: 98, type: !301, isLocal: false, isDefinition: false, scopeLine: 98, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: false)
!301 = !DISubroutineType(types: !302)
!302 = !{null, !289, !303}
!303 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !298, size: 64)
!304 = !DISubprogram(name: "exception_ptr", scope: !281, file: !282, line: 101, type: !305, isLocal: false, isDefinition: false, scopeLine: 101, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: false)
!305 = !DISubroutineType(types: !306)
!306 = !{null, !289, !307}
!307 = !DIDerivedType(tag: DW_TAG_typedef, name: "nullptr_t", scope: !75, file: !76, line: 235, baseType: !308)
!308 = !DIBasicType(tag: DW_TAG_unspecified_type, name: "decltype(nullptr)")
!309 = !DISubprogram(name: "exception_ptr", scope: !281, file: !282, line: 105, type: !310, isLocal: false, isDefinition: false, scopeLine: 105, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: false)
!310 = !DISubroutineType(types: !311)
!311 = !{null, !289, !312}
!312 = !DIDerivedType(tag: DW_TAG_rvalue_reference_type, baseType: !281, size: 64)
!313 = !DISubprogram(name: "operator=", linkageName: "_ZNSt15__exception_ptr13exception_ptraSERKS0_", scope: !281, file: !282, line: 118, type: !314, isLocal: false, isDefinition: false, scopeLine: 118, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: false)
!314 = !DISubroutineType(types: !315)
!315 = !{!316, !289, !303}
!316 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !281, size: 64)
!317 = !DISubprogram(name: "operator=", linkageName: "_ZNSt15__exception_ptr13exception_ptraSEOS0_", scope: !281, file: !282, line: 122, type: !318, isLocal: false, isDefinition: false, scopeLine: 122, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: false)
!318 = !DISubroutineType(types: !319)
!319 = !{!316, !289, !312}
!320 = !DISubprogram(name: "~exception_ptr", scope: !281, file: !282, line: 129, type: !291, isLocal: false, isDefinition: false, scopeLine: 129, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: false)
!321 = !DISubprogram(name: "swap", linkageName: "_ZNSt15__exception_ptr13exception_ptr4swapERS0_", scope: !281, file: !282, line: 132, type: !322, isLocal: false, isDefinition: false, scopeLine: 132, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: false)
!322 = !DISubroutineType(types: !323)
!323 = !{null, !289, !316}
!324 = !DISubprogram(name: "operator bool", linkageName: "_ZNKSt15__exception_ptr13exception_ptrcvbEv", scope: !281, file: !282, line: 144, type: !325, isLocal: false, isDefinition: false, scopeLine: 144, flags: DIFlagPublic | DIFlagExplicit | DIFlagPrototyped, isOptimized: false)
!325 = !DISubroutineType(types: !326)
!326 = !{!327, !297}
!327 = !DIBasicType(name: "bool", size: 8, encoding: DW_ATE_boolean)
!328 = !DISubprogram(name: "__cxa_exception_type", linkageName: "_ZNKSt15__exception_ptr13exception_ptr20__cxa_exception_typeEv", scope: !281, file: !282, line: 153, type: !329, isLocal: false, isDefinition: false, scopeLine: 153, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: false)
!329 = !DISubroutineType(types: !330)
!330 = !{!331, !297}
!331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !332, size: 64)
!332 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !333)
!333 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "type_info", scope: !75, file: !334, line: 88, flags: DIFlagFwdDecl, identifier: "_ZTSSt9type_info")
!334 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/typeinfo", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!335 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !283, entity: !336, line: 73)
!336 = !DISubprogram(name: "rethrow_exception", linkageName: "_ZSt17rethrow_exceptionNSt15__exception_ptr13exception_ptrE", scope: !75, file: !282, line: 69, type: !337, isLocal: false, isDefinition: false, flags: DIFlagPrototyped | DIFlagNoReturn, isOptimized: false)
!337 = !DISubroutineType(types: !338)
!338 = !{null, !281}
!339 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !340, line: 64)
!340 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !341, line: 6, baseType: !342)
!341 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/mbstate_t.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!342 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !343, line: 21, baseType: !344)
!343 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!344 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !343, line: 13, size: 64, elements: !345, identifier: "_ZTS11__mbstate_t")
!345 = !{!346, !347}
!346 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !344, file: !343, line: 15, baseType: !82, size: 32)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !344, file: !343, line: 20, baseType: !348, size: 32, offset: 32)
!348 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !344, file: !343, line: 16, size: 32, elements: !349, identifier: "_ZTSN11__mbstate_tUt_E")
!349 = !{!350, !351}
!350 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !348, file: !343, line: 18, baseType: !10, size: 32)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !348, file: !343, line: 19, baseType: !352, size: 32)
!352 = !DICompositeType(tag: DW_TAG_array_type, baseType: !111, size: 32, elements: !353)
!353 = !{!354}
!354 = !DISubrange(count: 4)
!355 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !356, line: 139)
!356 = !DIDerivedType(tag: DW_TAG_typedef, name: "wint_t", file: !357, line: 20, baseType: !10)
!357 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/wint_t.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!358 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !359, line: 141)
!359 = !DISubprogram(name: "btowc", scope: !360, file: !360, line: 284, type: !361, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!360 = !DIFile(filename: "/usr/include/wchar.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!361 = !DISubroutineType(types: !362)
!362 = !{!356, !82}
!363 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !364, line: 142)
!364 = !DISubprogram(name: "fgetwc", scope: !360, file: !360, line: 727, type: !365, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!365 = !DISubroutineType(types: !366)
!366 = !{!356, !367}
!367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !368, size: 64)
!368 = !DIDerivedType(tag: DW_TAG_typedef, name: "__FILE", file: !369, line: 5, baseType: !370)
!369 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/__FILE.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !369, line: 4, flags: DIFlagFwdDecl, identifier: "_ZTS8_IO_FILE")
!371 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !372, line: 143)
!372 = !DISubprogram(name: "fgetws", scope: !360, file: !360, line: 756, type: !373, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!373 = !DISubroutineType(types: !374)
!374 = !{!174, !173, !82, !375}
!375 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !367)
!376 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !377, line: 144)
!377 = !DISubprogram(name: "fputwc", scope: !360, file: !360, line: 741, type: !378, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!378 = !DISubroutineType(types: !379)
!379 = !{!356, !175, !367}
!380 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !381, line: 145)
!381 = !DISubprogram(name: "fputws", scope: !360, file: !360, line: 763, type: !382, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!382 = !DISubroutineType(types: !383)
!383 = !{!82, !220, !375}
!384 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !385, line: 146)
!385 = !DISubprogram(name: "fwide", scope: !360, file: !360, line: 573, type: !386, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!386 = !DISubroutineType(types: !387)
!387 = !{!82, !367, !82}
!388 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !389, line: 147)
!389 = !DISubprogram(name: "fwprintf", scope: !360, file: !360, line: 580, type: !390, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!390 = !DISubroutineType(types: !391)
!391 = !{!82, !375, !220, null}
!392 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !393, line: 148)
!393 = !DISubprogram(name: "fwscanf", scope: !360, file: !360, line: 621, type: !390, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!394 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !395, line: 149)
!395 = !DISubprogram(name: "getwc", scope: !360, file: !360, line: 728, type: !365, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!396 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !397, line: 150)
!397 = !DISubprogram(name: "getwchar", scope: !360, file: !360, line: 734, type: !398, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!398 = !DISubroutineType(types: !399)
!399 = !{!356}
!400 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !401, line: 151)
!401 = !DISubprogram(name: "mbrlen", scope: !360, file: !360, line: 307, type: !402, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!402 = !DISubroutineType(types: !403)
!403 = !{!125, !176, !125, !404}
!404 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !405)
!405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !340, size: 64)
!406 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !407, line: 152)
!407 = !DISubprogram(name: "mbrtowc", scope: !360, file: !360, line: 296, type: !408, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!408 = !DISubroutineType(types: !409)
!409 = !{!125, !173, !176, !125, !404}
!410 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !411, line: 153)
!411 = !DISubprogram(name: "mbsinit", scope: !360, file: !360, line: 292, type: !412, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!412 = !DISubroutineType(types: !413)
!413 = !{!82, !414}
!414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !415, size: 64)
!415 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !340)
!416 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !417, line: 154)
!417 = !DISubprogram(name: "mbsrtowcs", scope: !360, file: !360, line: 337, type: !418, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!418 = !DISubroutineType(types: !419)
!419 = !{!125, !173, !420, !125, !404}
!420 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !421)
!421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !109, size: 64)
!422 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !423, line: 155)
!423 = !DISubprogram(name: "putwc", scope: !360, file: !360, line: 742, type: !378, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!424 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !425, line: 156)
!425 = !DISubprogram(name: "putwchar", scope: !360, file: !360, line: 748, type: !426, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!426 = !DISubroutineType(types: !427)
!427 = !{!356, !175}
!428 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !429, line: 158)
!429 = !DISubprogram(name: "swprintf", scope: !360, file: !360, line: 590, type: !430, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!430 = !DISubroutineType(types: !431)
!431 = !{!82, !173, !125, !220, null}
!432 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !433, line: 160)
!433 = !DISubprogram(name: "swscanf", scope: !360, file: !360, line: 631, type: !434, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!434 = !DISubroutineType(types: !435)
!435 = !{!82, !220, !220, null}
!436 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !437, line: 161)
!437 = !DISubprogram(name: "ungetwc", scope: !360, file: !360, line: 771, type: !438, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!438 = !DISubroutineType(types: !439)
!439 = !{!356, !356, !367}
!440 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !441, line: 162)
!441 = !DISubprogram(name: "vfwprintf", scope: !360, file: !360, line: 598, type: !442, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!442 = !DISubroutineType(types: !443)
!443 = !{!82, !375, !220, !444}
!444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !445, size: 64)
!445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !2, size: 192, elements: !446, identifier: "_ZTS13__va_list_tag")
!446 = !{!447, !448, !449, !450}
!447 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !445, file: !2, baseType: !10, size: 32)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !445, file: !2, baseType: !10, size: 32, offset: 32)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !445, file: !2, baseType: !124, size: 64, offset: 64)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !445, file: !2, baseType: !124, size: 64, offset: 128)
!451 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !452, line: 164)
!452 = !DISubprogram(name: "vfwscanf", scope: !360, file: !360, line: 673, type: !442, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!453 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !454, line: 167)
!454 = !DISubprogram(name: "vswprintf", scope: !360, file: !360, line: 611, type: !455, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!455 = !DISubroutineType(types: !456)
!456 = !{!82, !173, !125, !220, !444}
!457 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !458, line: 170)
!458 = !DISubprogram(name: "vswscanf", scope: !360, file: !360, line: 685, type: !459, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!459 = !DISubroutineType(types: !460)
!460 = !{!82, !220, !220, !444}
!461 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !462, line: 172)
!462 = !DISubprogram(name: "vwprintf", scope: !360, file: !360, line: 606, type: !463, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!463 = !DISubroutineType(types: !464)
!464 = !{!82, !220, !444}
!465 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !466, line: 174)
!466 = !DISubprogram(name: "vwscanf", scope: !360, file: !360, line: 681, type: !463, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!467 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !468, line: 176)
!468 = !DISubprogram(name: "wcrtomb", scope: !360, file: !360, line: 301, type: !469, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!469 = !DISubroutineType(types: !470)
!470 = !{!125, !219, !175, !404}
!471 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !472, line: 177)
!472 = !DISubprogram(name: "wcscat", scope: !360, file: !360, line: 97, type: !473, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!473 = !DISubroutineType(types: !474)
!474 = !{!174, !173, !220}
!475 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !476, line: 178)
!476 = !DISubprogram(name: "wcscmp", scope: !360, file: !360, line: 106, type: !477, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!477 = !DISubroutineType(types: !478)
!478 = !{!82, !221, !221}
!479 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !480, line: 179)
!480 = !DISubprogram(name: "wcscoll", scope: !360, file: !360, line: 131, type: !477, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!481 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !482, line: 180)
!482 = !DISubprogram(name: "wcscpy", scope: !360, file: !360, line: 87, type: !473, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!483 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !484, line: 181)
!484 = !DISubprogram(name: "wcscspn", scope: !360, file: !360, line: 187, type: !485, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!485 = !DISubroutineType(types: !486)
!486 = !{!125, !221, !221}
!487 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !488, line: 182)
!488 = !DISubprogram(name: "wcsftime", scope: !360, file: !360, line: 835, type: !489, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!489 = !DISubroutineType(types: !490)
!490 = !{!125, !173, !125, !220, !491}
!491 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !492)
!492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !493, size: 64)
!493 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !494)
!494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tm", file: !360, line: 83, flags: DIFlagFwdDecl, identifier: "_ZTS2tm")
!495 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !496, line: 183)
!496 = !DISubprogram(name: "wcslen", scope: !360, file: !360, line: 222, type: !497, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!497 = !DISubroutineType(types: !498)
!498 = !{!125, !221}
!499 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !500, line: 184)
!500 = !DISubprogram(name: "wcsncat", scope: !360, file: !360, line: 101, type: !501, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!501 = !DISubroutineType(types: !502)
!502 = !{!174, !173, !220, !125}
!503 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !504, line: 185)
!504 = !DISubprogram(name: "wcsncmp", scope: !360, file: !360, line: 109, type: !505, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!505 = !DISubroutineType(types: !506)
!506 = !{!82, !221, !221, !125}
!507 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !508, line: 186)
!508 = !DISubprogram(name: "wcsncpy", scope: !360, file: !360, line: 92, type: !501, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!509 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !510, line: 187)
!510 = !DISubprogram(name: "wcsrtombs", scope: !360, file: !360, line: 343, type: !511, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!511 = !DISubroutineType(types: !512)
!512 = !{!125, !219, !513, !125, !404}
!513 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !514)
!514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !221, size: 64)
!515 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !516, line: 188)
!516 = !DISubprogram(name: "wcsspn", scope: !360, file: !360, line: 191, type: !485, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!517 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !518, line: 189)
!518 = !DISubprogram(name: "wcstod", scope: !360, file: !360, line: 377, type: !519, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!519 = !DISubroutineType(types: !520)
!520 = !{!108, !220, !521}
!521 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !522)
!522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !174, size: 64)
!523 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !524, line: 191)
!524 = !DISubprogram(name: "wcstof", scope: !360, file: !360, line: 382, type: !525, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!525 = !DISubroutineType(types: !526)
!526 = !{!262, !220, !521}
!527 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !528, line: 193)
!528 = !DISubprogram(name: "wcstok", scope: !360, file: !360, line: 217, type: !529, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!529 = !DISubroutineType(types: !530)
!530 = !{!174, !173, !220, !521}
!531 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !532, line: 194)
!532 = !DISubprogram(name: "wcstol", scope: !360, file: !360, line: 428, type: !533, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!533 = !DISubroutineType(types: !534)
!534 = !{!91, !220, !521, !82}
!535 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !536, line: 195)
!536 = !DISubprogram(name: "wcstoul", scope: !360, file: !360, line: 433, type: !537, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!537 = !DISubroutineType(types: !538)
!538 = !{!127, !220, !521, !82}
!539 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !540, line: 196)
!540 = !DISubprogram(name: "wcsxfrm", scope: !360, file: !360, line: 135, type: !541, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!541 = !DISubroutineType(types: !542)
!542 = !{!125, !173, !220, !125}
!543 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !544, line: 197)
!544 = !DISubprogram(name: "wctob", scope: !360, file: !360, line: 288, type: !545, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!545 = !DISubroutineType(types: !546)
!546 = !{!82, !356}
!547 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !548, line: 198)
!548 = !DISubprogram(name: "wmemcmp", scope: !360, file: !360, line: 258, type: !505, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!549 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !550, line: 199)
!550 = !DISubprogram(name: "wmemcpy", scope: !360, file: !360, line: 262, type: !501, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!551 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !552, line: 200)
!552 = !DISubprogram(name: "wmemmove", scope: !360, file: !360, line: 267, type: !553, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!553 = !DISubroutineType(types: !554)
!554 = !{!174, !174, !221, !125}
!555 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !556, line: 201)
!556 = !DISubprogram(name: "wmemset", scope: !360, file: !360, line: 271, type: !557, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!557 = !DISubroutineType(types: !558)
!558 = !{!174, !174, !175, !125}
!559 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !560, line: 202)
!560 = !DISubprogram(name: "wprintf", scope: !360, file: !360, line: 587, type: !561, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!561 = !DISubroutineType(types: !562)
!562 = !{!82, !220, null}
!563 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !564, line: 203)
!564 = !DISubprogram(name: "wscanf", scope: !360, file: !360, line: 628, type: !561, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!565 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !566, line: 204)
!566 = !DISubprogram(name: "wcschr", scope: !360, file: !360, line: 164, type: !567, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!567 = !DISubroutineType(types: !568)
!568 = !{!174, !221, !175}
!569 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !570, line: 205)
!570 = !DISubprogram(name: "wcspbrk", scope: !360, file: !360, line: 201, type: !571, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!571 = !DISubroutineType(types: !572)
!572 = !{!174, !221, !221}
!573 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !574, line: 206)
!574 = !DISubprogram(name: "wcsrchr", scope: !360, file: !360, line: 174, type: !567, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!575 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !576, line: 207)
!576 = !DISubprogram(name: "wcsstr", scope: !360, file: !360, line: 212, type: !571, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!577 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !578, line: 208)
!578 = !DISubprogram(name: "wmemchr", scope: !360, file: !360, line: 253, type: !579, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!579 = !DISubroutineType(types: !580)
!580 = !{!174, !221, !175, !125}
!581 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !582, line: 248)
!582 = !DISubprogram(name: "wcstold", scope: !360, file: !360, line: 384, type: !583, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!583 = !DISubroutineType(types: !584)
!584 = !{!267, !220, !521}
!585 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !586, line: 257)
!586 = !DISubprogram(name: "wcstoll", scope: !360, file: !360, line: 441, type: !587, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!587 = !DISubroutineType(types: !588)
!588 = !{!233, !220, !521, !82}
!589 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !590, line: 258)
!590 = !DISubprogram(name: "wcstoull", scope: !360, file: !360, line: 448, type: !591, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!591 = !DISubroutineType(types: !592)
!592 = !{!257, !220, !521, !82}
!593 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !582, line: 264)
!594 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !586, line: 265)
!595 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !590, line: 266)
!596 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !524, line: 280)
!597 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !452, line: 283)
!598 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !458, line: 286)
!599 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !466, line: 289)
!600 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !582, line: 293)
!601 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !586, line: 294)
!602 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !590, line: 295)
!603 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !604, line: 48)
!604 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !9, line: 235, baseType: !605)
!605 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!606 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !607, line: 49)
!607 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !9, line: 216, baseType: !608)
!608 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!609 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !610, line: 50)
!610 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !9, line: 178, baseType: !82)
!611 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !612, line: 51)
!612 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !9, line: 107, baseType: !91)
!613 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !614, line: 53)
!614 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_fast8_t", file: !9, line: 245, baseType: !604)
!615 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !616, line: 54)
!616 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_fast16_t", file: !9, line: 228, baseType: !607)
!617 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !618, line: 55)
!618 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_fast32_t", file: !9, line: 197, baseType: !610)
!619 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !620, line: 56)
!620 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_fast64_t", file: !9, line: 123, baseType: !612)
!621 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !622, line: 58)
!622 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_least8_t", file: !9, line: 243, baseType: !604)
!623 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !624, line: 59)
!624 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_least16_t", file: !9, line: 226, baseType: !607)
!625 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !626, line: 60)
!626 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_least32_t", file: !9, line: 195, baseType: !610)
!627 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !628, line: 61)
!628 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_least64_t", file: !9, line: 121, baseType: !612)
!629 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !630, line: 63)
!630 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !9, line: 276, baseType: !91)
!631 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !632, line: 64)
!632 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !9, line: 263, baseType: !612)
!633 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !62, line: 66)
!634 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !28, line: 67)
!635 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !8, line: 68)
!636 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !637, line: 69)
!637 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !9, line: 109, baseType: !127)
!638 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !639, line: 71)
!639 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_fast8_t", file: !9, line: 246, baseType: !62)
!640 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !641, line: 72)
!641 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_fast16_t", file: !9, line: 229, baseType: !28)
!642 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !643, line: 73)
!643 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_fast32_t", file: !9, line: 198, baseType: !8)
!644 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !645, line: 74)
!645 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_fast64_t", file: !9, line: 124, baseType: !637)
!646 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !647, line: 76)
!647 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_least8_t", file: !9, line: 244, baseType: !62)
!648 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !649, line: 77)
!649 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_least16_t", file: !9, line: 227, baseType: !28)
!650 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !651, line: 78)
!651 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_least32_t", file: !9, line: 196, baseType: !8)
!652 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !653, line: 79)
!653 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_least64_t", file: !9, line: 122, baseType: !637)
!654 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !655, line: 81)
!655 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !9, line: 277, baseType: !127)
!656 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !657, line: 82)
!657 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !9, line: 270, baseType: !637)
!658 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !659, line: 44)
!659 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", scope: !75, file: !76, line: 231, baseType: !127)
!660 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !661, line: 45)
!661 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", scope: !75, file: !76, line: 232, baseType: !91)
!662 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !663, line: 53)
!663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lconv", file: !664, line: 51, flags: DIFlagFwdDecl, identifier: "_ZTS5lconv")
!664 = !DIFile(filename: "/usr/include/locale.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!665 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !666, line: 54)
!666 = !DISubprogram(name: "setlocale", scope: !664, file: !664, line: 122, type: !667, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!667 = !DISubroutineType(types: !668)
!668 = !{!152, !82, !109}
!669 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !670, line: 55)
!670 = !DISubprogram(name: "localeconv", scope: !664, file: !664, line: 125, type: !671, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!671 = !DISubroutineType(types: !672)
!672 = !{!673}
!673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !663, size: 64)
!674 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !675, line: 64)
!675 = !DISubprogram(name: "isalnum", scope: !676, file: !676, line: 108, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!676 = !DIFile(filename: "/usr/include/ctype.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!677 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !678, line: 65)
!678 = !DISubprogram(name: "isalpha", scope: !676, file: !676, line: 109, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!679 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !680, line: 66)
!680 = !DISubprogram(name: "iscntrl", scope: !676, file: !676, line: 110, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!681 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !682, line: 67)
!682 = !DISubprogram(name: "isdigit", scope: !676, file: !676, line: 111, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!683 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !684, line: 68)
!684 = !DISubprogram(name: "isgraph", scope: !676, file: !676, line: 113, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!685 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !686, line: 69)
!686 = !DISubprogram(name: "islower", scope: !676, file: !676, line: 112, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!687 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !688, line: 70)
!688 = !DISubprogram(name: "isprint", scope: !676, file: !676, line: 114, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!689 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !690, line: 71)
!690 = !DISubprogram(name: "ispunct", scope: !676, file: !676, line: 115, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!691 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !692, line: 72)
!692 = !DISubprogram(name: "isspace", scope: !676, file: !676, line: 116, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!693 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !694, line: 73)
!694 = !DISubprogram(name: "isupper", scope: !676, file: !676, line: 117, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!695 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !696, line: 74)
!696 = !DISubprogram(name: "isxdigit", scope: !676, file: !676, line: 118, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!697 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !698, line: 75)
!698 = !DISubprogram(name: "tolower", scope: !676, file: !676, line: 122, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!699 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !700, line: 76)
!700 = !DISubprogram(name: "toupper", scope: !676, file: !676, line: 125, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!701 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !702, line: 87)
!702 = !DISubprogram(name: "isblank", scope: !676, file: !676, line: 130, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!703 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !704, line: 98)
!704 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !705, line: 7, baseType: !370)
!705 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!706 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !707, line: 99)
!707 = !DIDerivedType(tag: DW_TAG_typedef, name: "fpos_t", file: !708, line: 78, baseType: !709)
!708 = !DIFile(filename: "/usr/include/stdio.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!709 = !DIDerivedType(tag: DW_TAG_typedef, name: "_G_fpos_t", file: !710, line: 30, baseType: !711)
!710 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/_G_config.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!711 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !710, line: 26, flags: DIFlagFwdDecl, identifier: "_ZTS9_G_fpos_t")
!712 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !713, line: 101)
!713 = !DISubprogram(name: "clearerr", scope: !708, file: !708, line: 757, type: !714, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!714 = !DISubroutineType(types: !715)
!715 = !{null, !716}
!716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !704, size: 64)
!717 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !718, line: 102)
!718 = !DISubprogram(name: "fclose", scope: !708, file: !708, line: 199, type: !719, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!719 = !DISubroutineType(types: !720)
!720 = !{!82, !716}
!721 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !722, line: 103)
!722 = !DISubprogram(name: "feof", scope: !708, file: !708, line: 759, type: !719, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!723 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !724, line: 104)
!724 = !DISubprogram(name: "ferror", scope: !708, file: !708, line: 761, type: !719, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!725 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !726, line: 105)
!726 = !DISubprogram(name: "fflush", scope: !708, file: !708, line: 204, type: !719, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!727 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !728, line: 106)
!728 = !DISubprogram(name: "fgetc", scope: !708, file: !708, line: 477, type: !719, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!729 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !730, line: 107)
!730 = !DISubprogram(name: "fgetpos", scope: !708, file: !708, line: 731, type: !731, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!731 = !DISubroutineType(types: !732)
!732 = !{!82, !733, !734}
!733 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !716)
!734 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !735)
!735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !707, size: 64)
!736 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !737, line: 108)
!737 = !DISubprogram(name: "fgets", scope: !708, file: !708, line: 564, type: !738, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!738 = !DISubroutineType(types: !739)
!739 = !{!152, !219, !82, !733}
!740 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !741, line: 109)
!741 = !DISubprogram(name: "fopen", scope: !708, file: !708, line: 232, type: !742, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!742 = !DISubroutineType(types: !743)
!743 = !{!716, !176, !176}
!744 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !745, line: 110)
!745 = !DISubprogram(name: "fprintf", scope: !708, file: !708, line: 312, type: !746, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!746 = !DISubroutineType(types: !747)
!747 = !{!82, !733, !176, null}
!748 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !749, line: 111)
!749 = !DISubprogram(name: "fputc", scope: !708, file: !708, line: 517, type: !750, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!750 = !DISubroutineType(types: !751)
!751 = !{!82, !82, !716}
!752 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !753, line: 112)
!753 = !DISubprogram(name: "fputs", scope: !708, file: !708, line: 626, type: !754, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!754 = !DISubroutineType(types: !755)
!755 = !{!82, !176, !733}
!756 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !757, line: 113)
!757 = !DISubprogram(name: "fread", scope: !708, file: !708, line: 646, type: !758, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!758 = !DISubroutineType(types: !759)
!759 = !{!125, !760, !125, !125, !733}
!760 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !124)
!761 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !762, line: 114)
!762 = !DISubprogram(name: "freopen", scope: !708, file: !708, line: 238, type: !763, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!763 = !DISubroutineType(types: !764)
!764 = !{!716, !176, !176, !733}
!765 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !766, line: 115)
!766 = !DISubprogram(name: "fscanf", scope: !708, file: !708, line: 377, type: !746, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!767 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !768, line: 116)
!768 = !DISubprogram(name: "fseek", scope: !708, file: !708, line: 684, type: !769, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!769 = !DISubroutineType(types: !770)
!770 = !{!82, !716, !91, !82}
!771 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !772, line: 117)
!772 = !DISubprogram(name: "fsetpos", scope: !708, file: !708, line: 736, type: !773, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!773 = !DISubroutineType(types: !774)
!774 = !{!82, !716, !775}
!775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !776, size: 64)
!776 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !707)
!777 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !778, line: 118)
!778 = !DISubprogram(name: "ftell", scope: !708, file: !708, line: 689, type: !779, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!779 = !DISubroutineType(types: !780)
!780 = !{!91, !716}
!781 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !782, line: 119)
!782 = !DISubprogram(name: "fwrite", scope: !708, file: !708, line: 652, type: !783, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!783 = !DISubroutineType(types: !784)
!784 = !{!125, !785, !125, !125, !733}
!785 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !68)
!786 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !787, line: 120)
!787 = !DISubprogram(name: "getc", scope: !708, file: !708, line: 478, type: !719, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!788 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !789, line: 121)
!789 = !DISubprogram(name: "getchar", scope: !708, file: !708, line: 484, type: !189, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!790 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !791, line: 124)
!791 = !DISubprogram(name: "gets", scope: !708, file: !708, line: 577, type: !792, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!792 = !DISubroutineType(types: !793)
!793 = !{!152, !152}
!794 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !795, line: 126)
!795 = !DISubprogram(name: "perror", scope: !708, file: !708, line: 775, type: !796, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!796 = !DISubroutineType(types: !797)
!797 = !{null, !109}
!798 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !799, line: 127)
!799 = !DISubprogram(name: "printf", scope: !708, file: !708, line: 318, type: !800, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!800 = !DISubroutineType(types: !801)
!801 = !{!82, !176, null}
!802 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !803, line: 128)
!803 = !DISubprogram(name: "putc", scope: !708, file: !708, line: 518, type: !750, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!804 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !805, line: 129)
!805 = !DISubprogram(name: "putchar", scope: !708, file: !708, line: 524, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!806 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !807, line: 130)
!807 = !DISubprogram(name: "puts", scope: !708, file: !708, line: 632, type: !114, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!808 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !809, line: 131)
!809 = !DISubprogram(name: "remove", scope: !708, file: !708, line: 144, type: !114, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!810 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !811, line: 132)
!811 = !DISubprogram(name: "rename", scope: !708, file: !708, line: 146, type: !812, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!812 = !DISubroutineType(types: !813)
!813 = !{!82, !109, !109}
!814 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !815, line: 133)
!815 = !DISubprogram(name: "rewind", scope: !708, file: !708, line: 694, type: !714, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!816 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !817, line: 134)
!817 = !DISubprogram(name: "scanf", scope: !708, file: !708, line: 383, type: !800, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!818 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !819, line: 135)
!819 = !DISubprogram(name: "setbuf", scope: !708, file: !708, line: 290, type: !820, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!820 = !DISubroutineType(types: !821)
!821 = !{null, !733, !219}
!822 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !823, line: 136)
!823 = !DISubprogram(name: "setvbuf", scope: !708, file: !708, line: 294, type: !824, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!824 = !DISubroutineType(types: !825)
!825 = !{!82, !733, !219, !82, !125}
!826 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !827, line: 137)
!827 = !DISubprogram(name: "sprintf", scope: !708, file: !708, line: 320, type: !828, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!828 = !DISubroutineType(types: !829)
!829 = !{!82, !219, !176, null}
!830 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !831, line: 138)
!831 = !DISubprogram(name: "sscanf", scope: !708, file: !708, line: 385, type: !832, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!832 = !DISubroutineType(types: !833)
!833 = !{!82, !176, !176, null}
!834 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !835, line: 139)
!835 = !DISubprogram(name: "tmpfile", scope: !708, file: !708, line: 159, type: !836, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!836 = !DISubroutineType(types: !837)
!837 = !{!716}
!838 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !839, line: 141)
!839 = !DISubprogram(name: "tmpnam", scope: !708, file: !708, line: 173, type: !792, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!840 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !841, line: 143)
!841 = !DISubprogram(name: "ungetc", scope: !708, file: !708, line: 639, type: !750, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!842 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !843, line: 144)
!843 = !DISubprogram(name: "vfprintf", scope: !708, file: !708, line: 327, type: !844, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!844 = !DISubroutineType(types: !845)
!845 = !{!82, !733, !176, !444}
!846 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !847, line: 145)
!847 = !DISubprogram(name: "vprintf", scope: !708, file: !708, line: 333, type: !848, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!848 = !DISubroutineType(types: !849)
!849 = !{!82, !176, !444}
!850 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !851, line: 146)
!851 = !DISubprogram(name: "vsprintf", scope: !708, file: !708, line: 335, type: !852, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!852 = !DISubroutineType(types: !853)
!853 = !{!82, !219, !176, !444}
!854 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !855, line: 175)
!855 = !DISubprogram(name: "snprintf", scope: !708, file: !708, line: 340, type: !856, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!856 = !DISubroutineType(types: !857)
!857 = !{!82, !219, !125, !176, null}
!858 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !859, line: 176)
!859 = !DISubprogram(name: "vfscanf", scope: !708, file: !708, line: 420, type: !844, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!860 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !861, line: 177)
!861 = !DISubprogram(name: "vscanf", scope: !708, file: !708, line: 428, type: !848, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!862 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !863, line: 178)
!863 = !DISubprogram(name: "vsnprintf", scope: !708, file: !708, line: 344, type: !864, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!864 = !DISubroutineType(types: !865)
!865 = !{!82, !219, !125, !176, !444}
!866 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !867, line: 179)
!867 = !DISubprogram(name: "vsscanf", scope: !708, file: !708, line: 432, type: !868, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!868 = !DISubroutineType(types: !869)
!869 = !{!82, !176, !176, !444}
!870 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !855, line: 185)
!871 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !859, line: 186)
!872 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !861, line: 187)
!873 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !863, line: 188)
!874 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !867, line: 189)
!875 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !876, line: 83)
!876 = !DISubprogram(name: "acos", scope: !877, file: !877, line: 53, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!877 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/mathcalls.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!878 = !DISubroutineType(types: !879)
!879 = !{!108, !108}
!880 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !881, line: 102)
!881 = !DISubprogram(name: "asin", scope: !877, file: !877, line: 55, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!882 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !883, line: 121)
!883 = !DISubprogram(name: "atan", scope: !877, file: !877, line: 57, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!884 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !885, line: 140)
!885 = !DISubprogram(name: "atan2", scope: !877, file: !877, line: 59, type: !886, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!886 = !DISubroutineType(types: !887)
!887 = !{!108, !108, !108}
!888 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !889, line: 161)
!889 = !DISubprogram(name: "ceil", scope: !877, file: !877, line: 159, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!890 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !891, line: 180)
!891 = !DISubprogram(name: "cos", scope: !877, file: !877, line: 62, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!892 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !893, line: 199)
!893 = !DISubprogram(name: "cosh", scope: !877, file: !877, line: 71, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!894 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !895, line: 218)
!895 = !DISubprogram(name: "exp", scope: !877, file: !877, line: 95, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!896 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !897, line: 237)
!897 = !DISubprogram(name: "fabs", scope: !877, file: !877, line: 162, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!898 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !899, line: 256)
!899 = !DISubprogram(name: "floor", scope: !877, file: !877, line: 165, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!900 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !901, line: 275)
!901 = !DISubprogram(name: "fmod", scope: !877, file: !877, line: 168, type: !886, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!902 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !903, line: 296)
!903 = !DISubprogram(name: "frexp", scope: !877, file: !877, line: 98, type: !904, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!904 = !DISubroutineType(types: !905)
!905 = !{!108, !108, !906}
!906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !82, size: 64)
!907 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !908, line: 315)
!908 = !DISubprogram(name: "ldexp", scope: !877, file: !877, line: 101, type: !909, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!909 = !DISubroutineType(types: !910)
!910 = !{!108, !108, !82}
!911 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !912, line: 334)
!912 = !DISubprogram(name: "log", scope: !877, file: !877, line: 104, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!913 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !914, line: 353)
!914 = !DISubprogram(name: "log10", scope: !877, file: !877, line: 107, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!915 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !916, line: 372)
!916 = !DISubprogram(name: "modf", scope: !877, file: !877, line: 110, type: !917, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!917 = !DISubroutineType(types: !918)
!918 = !{!108, !108, !919}
!919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !108, size: 64)
!920 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !921, line: 384)
!921 = !DISubprogram(name: "pow", scope: !877, file: !877, line: 140, type: !886, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!922 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !923, line: 421)
!923 = !DISubprogram(name: "sin", scope: !877, file: !877, line: 64, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!924 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !925, line: 440)
!925 = !DISubprogram(name: "sinh", scope: !877, file: !877, line: 73, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!926 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !927, line: 459)
!927 = !DISubprogram(name: "sqrt", scope: !877, file: !877, line: 143, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!928 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !929, line: 478)
!929 = !DISubprogram(name: "tan", scope: !877, file: !877, line: 66, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!930 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !931, line: 497)
!931 = !DISubprogram(name: "tanh", scope: !877, file: !877, line: 75, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!932 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !933, line: 1080)
!933 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_t", file: !934, line: 150, baseType: !108)
!934 = !DIFile(filename: "/usr/include/math.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!935 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !936, line: 1081)
!936 = !DIDerivedType(tag: DW_TAG_typedef, name: "float_t", file: !934, line: 149, baseType: !262)
!937 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !938, line: 1084)
!938 = !DISubprogram(name: "acosh", scope: !877, file: !877, line: 85, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!939 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !940, line: 1085)
!940 = !DISubprogram(name: "acoshf", scope: !877, file: !877, line: 85, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!941 = !DISubroutineType(types: !942)
!942 = !{!262, !262}
!943 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !944, line: 1086)
!944 = !DISubprogram(name: "acoshl", scope: !877, file: !877, line: 85, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!945 = !DISubroutineType(types: !946)
!946 = !{!267, !267}
!947 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !948, line: 1088)
!948 = !DISubprogram(name: "asinh", scope: !877, file: !877, line: 87, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!949 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !950, line: 1089)
!950 = !DISubprogram(name: "asinhf", scope: !877, file: !877, line: 87, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!951 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !952, line: 1090)
!952 = !DISubprogram(name: "asinhl", scope: !877, file: !877, line: 87, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!953 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !954, line: 1092)
!954 = !DISubprogram(name: "atanh", scope: !877, file: !877, line: 89, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!955 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !956, line: 1093)
!956 = !DISubprogram(name: "atanhf", scope: !877, file: !877, line: 89, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!957 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !958, line: 1094)
!958 = !DISubprogram(name: "atanhl", scope: !877, file: !877, line: 89, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!959 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !960, line: 1096)
!960 = !DISubprogram(name: "cbrt", scope: !877, file: !877, line: 152, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!961 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !962, line: 1097)
!962 = !DISubprogram(name: "cbrtf", scope: !877, file: !877, line: 152, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!963 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !964, line: 1098)
!964 = !DISubprogram(name: "cbrtl", scope: !877, file: !877, line: 152, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!965 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !966, line: 1100)
!966 = !DISubprogram(name: "copysign", scope: !877, file: !877, line: 196, type: !886, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!967 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !968, line: 1101)
!968 = !DISubprogram(name: "copysignf", scope: !877, file: !877, line: 196, type: !969, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!969 = !DISubroutineType(types: !970)
!970 = !{!262, !262, !262}
!971 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !972, line: 1102)
!972 = !DISubprogram(name: "copysignl", scope: !877, file: !877, line: 196, type: !973, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!973 = !DISubroutineType(types: !974)
!974 = !{!267, !267, !267}
!975 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !976, line: 1104)
!976 = !DISubprogram(name: "erf", scope: !877, file: !877, line: 228, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!977 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !978, line: 1105)
!978 = !DISubprogram(name: "erff", scope: !877, file: !877, line: 228, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!979 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !980, line: 1106)
!980 = !DISubprogram(name: "erfl", scope: !877, file: !877, line: 228, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!981 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !982, line: 1108)
!982 = !DISubprogram(name: "erfc", scope: !877, file: !877, line: 229, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!983 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !984, line: 1109)
!984 = !DISubprogram(name: "erfcf", scope: !877, file: !877, line: 229, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!985 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !986, line: 1110)
!986 = !DISubprogram(name: "erfcl", scope: !877, file: !877, line: 229, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!987 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !988, line: 1112)
!988 = !DISubprogram(name: "exp2", scope: !877, file: !877, line: 130, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!989 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !990, line: 1113)
!990 = !DISubprogram(name: "exp2f", scope: !877, file: !877, line: 130, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!991 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !992, line: 1114)
!992 = !DISubprogram(name: "exp2l", scope: !877, file: !877, line: 130, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!993 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !994, line: 1116)
!994 = !DISubprogram(name: "expm1", scope: !877, file: !877, line: 119, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!995 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !996, line: 1117)
!996 = !DISubprogram(name: "expm1f", scope: !877, file: !877, line: 119, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!997 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !998, line: 1118)
!998 = !DISubprogram(name: "expm1l", scope: !877, file: !877, line: 119, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!999 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1000, line: 1120)
!1000 = !DISubprogram(name: "fdim", scope: !877, file: !877, line: 326, type: !886, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1001 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1002, line: 1121)
!1002 = !DISubprogram(name: "fdimf", scope: !877, file: !877, line: 326, type: !969, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1003 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1004, line: 1122)
!1004 = !DISubprogram(name: "fdiml", scope: !877, file: !877, line: 326, type: !973, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1005 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1006, line: 1124)
!1006 = !DISubprogram(name: "fma", scope: !877, file: !877, line: 335, type: !1007, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1007 = !DISubroutineType(types: !1008)
!1008 = !{!108, !108, !108, !108}
!1009 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1010, line: 1125)
!1010 = !DISubprogram(name: "fmaf", scope: !877, file: !877, line: 335, type: !1011, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1011 = !DISubroutineType(types: !1012)
!1012 = !{!262, !262, !262, !262}
!1013 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1014, line: 1126)
!1014 = !DISubprogram(name: "fmal", scope: !877, file: !877, line: 335, type: !1015, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1015 = !DISubroutineType(types: !1016)
!1016 = !{!267, !267, !267, !267}
!1017 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1018, line: 1128)
!1018 = !DISubprogram(name: "fmax", scope: !877, file: !877, line: 329, type: !886, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1019 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1020, line: 1129)
!1020 = !DISubprogram(name: "fmaxf", scope: !877, file: !877, line: 329, type: !969, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1021 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1022, line: 1130)
!1022 = !DISubprogram(name: "fmaxl", scope: !877, file: !877, line: 329, type: !973, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1023 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1024, line: 1132)
!1024 = !DISubprogram(name: "fmin", scope: !877, file: !877, line: 332, type: !886, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1025 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1026, line: 1133)
!1026 = !DISubprogram(name: "fminf", scope: !877, file: !877, line: 332, type: !969, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1027 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1028, line: 1134)
!1028 = !DISubprogram(name: "fminl", scope: !877, file: !877, line: 332, type: !973, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1029 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1030, line: 1136)
!1030 = !DISubprogram(name: "hypot", scope: !877, file: !877, line: 147, type: !886, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1031 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1032, line: 1137)
!1032 = !DISubprogram(name: "hypotf", scope: !877, file: !877, line: 147, type: !969, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1033 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1034, line: 1138)
!1034 = !DISubprogram(name: "hypotl", scope: !877, file: !877, line: 147, type: !973, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1035 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1036, line: 1140)
!1036 = !DISubprogram(name: "ilogb", scope: !877, file: !877, line: 280, type: !1037, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1037 = !DISubroutineType(types: !1038)
!1038 = !{!82, !108}
!1039 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1040, line: 1141)
!1040 = !DISubprogram(name: "ilogbf", scope: !877, file: !877, line: 280, type: !1041, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1041 = !DISubroutineType(types: !1042)
!1042 = !{!82, !262}
!1043 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1044, line: 1142)
!1044 = !DISubprogram(name: "ilogbl", scope: !877, file: !877, line: 280, type: !1045, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1045 = !DISubroutineType(types: !1046)
!1046 = !{!82, !267}
!1047 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1048, line: 1144)
!1048 = !DISubprogram(name: "lgamma", scope: !877, file: !877, line: 230, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1049 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1050, line: 1145)
!1050 = !DISubprogram(name: "lgammaf", scope: !877, file: !877, line: 230, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1051 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1052, line: 1146)
!1052 = !DISubprogram(name: "lgammal", scope: !877, file: !877, line: 230, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1053 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1054, line: 1149)
!1054 = !DISubprogram(name: "llrint", scope: !877, file: !877, line: 316, type: !1055, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1055 = !DISubroutineType(types: !1056)
!1056 = !{!233, !108}
!1057 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1058, line: 1150)
!1058 = !DISubprogram(name: "llrintf", scope: !877, file: !877, line: 316, type: !1059, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1059 = !DISubroutineType(types: !1060)
!1060 = !{!233, !262}
!1061 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1062, line: 1151)
!1062 = !DISubprogram(name: "llrintl", scope: !877, file: !877, line: 316, type: !1063, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1063 = !DISubroutineType(types: !1064)
!1064 = !{!233, !267}
!1065 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1066, line: 1153)
!1066 = !DISubprogram(name: "llround", scope: !877, file: !877, line: 322, type: !1055, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1067 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1068, line: 1154)
!1068 = !DISubprogram(name: "llroundf", scope: !877, file: !877, line: 322, type: !1059, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1069 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1070, line: 1155)
!1070 = !DISubprogram(name: "llroundl", scope: !877, file: !877, line: 322, type: !1063, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1071 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1072, line: 1158)
!1072 = !DISubprogram(name: "log1p", scope: !877, file: !877, line: 122, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1073 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1074, line: 1159)
!1074 = !DISubprogram(name: "log1pf", scope: !877, file: !877, line: 122, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1075 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1076, line: 1160)
!1076 = !DISubprogram(name: "log1pl", scope: !877, file: !877, line: 122, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1077 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1078, line: 1162)
!1078 = !DISubprogram(name: "log2", scope: !877, file: !877, line: 133, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1079 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1080, line: 1163)
!1080 = !DISubprogram(name: "log2f", scope: !877, file: !877, line: 133, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1081 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1082, line: 1164)
!1082 = !DISubprogram(name: "log2l", scope: !877, file: !877, line: 133, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1083 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1084, line: 1166)
!1084 = !DISubprogram(name: "logb", scope: !877, file: !877, line: 125, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1085 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1086, line: 1167)
!1086 = !DISubprogram(name: "logbf", scope: !877, file: !877, line: 125, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1087 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1088, line: 1168)
!1088 = !DISubprogram(name: "logbl", scope: !877, file: !877, line: 125, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1089 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1090, line: 1170)
!1090 = !DISubprogram(name: "lrint", scope: !877, file: !877, line: 314, type: !1091, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1091 = !DISubroutineType(types: !1092)
!1092 = !{!91, !108}
!1093 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1094, line: 1171)
!1094 = !DISubprogram(name: "lrintf", scope: !877, file: !877, line: 314, type: !1095, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1095 = !DISubroutineType(types: !1096)
!1096 = !{!91, !262}
!1097 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1098, line: 1172)
!1098 = !DISubprogram(name: "lrintl", scope: !877, file: !877, line: 314, type: !1099, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1099 = !DISubroutineType(types: !1100)
!1100 = !{!91, !267}
!1101 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1102, line: 1174)
!1102 = !DISubprogram(name: "lround", scope: !877, file: !877, line: 320, type: !1091, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1103 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1104, line: 1175)
!1104 = !DISubprogram(name: "lroundf", scope: !877, file: !877, line: 320, type: !1095, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1105 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1106, line: 1176)
!1106 = !DISubprogram(name: "lroundl", scope: !877, file: !877, line: 320, type: !1099, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1107 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1108, line: 1178)
!1108 = !DISubprogram(name: "nan", scope: !877, file: !877, line: 201, type: !106, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1109 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1110, line: 1179)
!1110 = !DISubprogram(name: "nanf", scope: !877, file: !877, line: 201, type: !1111, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1111 = !DISubroutineType(types: !1112)
!1112 = !{!262, !109}
!1113 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1114, line: 1180)
!1114 = !DISubprogram(name: "nanl", scope: !877, file: !877, line: 201, type: !1115, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1115 = !DISubroutineType(types: !1116)
!1116 = !{!267, !109}
!1117 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1118, line: 1182)
!1118 = !DISubprogram(name: "nearbyint", scope: !877, file: !877, line: 294, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1119 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1120, line: 1183)
!1120 = !DISubprogram(name: "nearbyintf", scope: !877, file: !877, line: 294, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1121 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1122, line: 1184)
!1122 = !DISubprogram(name: "nearbyintl", scope: !877, file: !877, line: 294, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1123 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1124, line: 1186)
!1124 = !DISubprogram(name: "nextafter", scope: !877, file: !877, line: 259, type: !886, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1125 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1126, line: 1187)
!1126 = !DISubprogram(name: "nextafterf", scope: !877, file: !877, line: 259, type: !969, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1127 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1128, line: 1188)
!1128 = !DISubprogram(name: "nextafterl", scope: !877, file: !877, line: 259, type: !973, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1129 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1130, line: 1190)
!1130 = !DISubprogram(name: "nexttoward", scope: !877, file: !877, line: 261, type: !1131, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1131 = !DISubroutineType(types: !1132)
!1132 = !{!108, !108, !267}
!1133 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1134, line: 1191)
!1134 = !DISubprogram(name: "nexttowardf", scope: !877, file: !877, line: 261, type: !1135, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1135 = !DISubroutineType(types: !1136)
!1136 = !{!262, !262, !267}
!1137 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1138, line: 1192)
!1138 = !DISubprogram(name: "nexttowardl", scope: !877, file: !877, line: 261, type: !973, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1139 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1140, line: 1194)
!1140 = !DISubprogram(name: "remainder", scope: !877, file: !877, line: 272, type: !886, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1141 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1142, line: 1195)
!1142 = !DISubprogram(name: "remainderf", scope: !877, file: !877, line: 272, type: !969, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1143 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1144, line: 1196)
!1144 = !DISubprogram(name: "remainderl", scope: !877, file: !877, line: 272, type: !973, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1145 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1146, line: 1198)
!1146 = !DISubprogram(name: "remquo", scope: !877, file: !877, line: 307, type: !1147, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1147 = !DISubroutineType(types: !1148)
!1148 = !{!108, !108, !108, !906}
!1149 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1150, line: 1199)
!1150 = !DISubprogram(name: "remquof", scope: !877, file: !877, line: 307, type: !1151, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1151 = !DISubroutineType(types: !1152)
!1152 = !{!262, !262, !262, !906}
!1153 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1154, line: 1200)
!1154 = !DISubprogram(name: "remquol", scope: !877, file: !877, line: 307, type: !1155, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1155 = !DISubroutineType(types: !1156)
!1156 = !{!267, !267, !267, !906}
!1157 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1158, line: 1202)
!1158 = !DISubprogram(name: "rint", scope: !877, file: !877, line: 256, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1159 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1160, line: 1203)
!1160 = !DISubprogram(name: "rintf", scope: !877, file: !877, line: 256, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1161 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1162, line: 1204)
!1162 = !DISubprogram(name: "rintl", scope: !877, file: !877, line: 256, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1163 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1164, line: 1206)
!1164 = !DISubprogram(name: "round", scope: !877, file: !877, line: 298, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1165 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1166, line: 1207)
!1166 = !DISubprogram(name: "roundf", scope: !877, file: !877, line: 298, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1167 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1168, line: 1208)
!1168 = !DISubprogram(name: "roundl", scope: !877, file: !877, line: 298, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1169 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1170, line: 1210)
!1170 = !DISubprogram(name: "scalbln", scope: !877, file: !877, line: 290, type: !1171, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1171 = !DISubroutineType(types: !1172)
!1172 = !{!108, !108, !91}
!1173 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1174, line: 1211)
!1174 = !DISubprogram(name: "scalblnf", scope: !877, file: !877, line: 290, type: !1175, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1175 = !DISubroutineType(types: !1176)
!1176 = !{!262, !262, !91}
!1177 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1178, line: 1212)
!1178 = !DISubprogram(name: "scalblnl", scope: !877, file: !877, line: 290, type: !1179, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1179 = !DISubroutineType(types: !1180)
!1180 = !{!267, !267, !91}
!1181 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1182, line: 1214)
!1182 = !DISubprogram(name: "scalbn", scope: !877, file: !877, line: 276, type: !909, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1183 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1184, line: 1215)
!1184 = !DISubprogram(name: "scalbnf", scope: !877, file: !877, line: 276, type: !1185, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1185 = !DISubroutineType(types: !1186)
!1186 = !{!262, !262, !82}
!1187 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1188, line: 1216)
!1188 = !DISubprogram(name: "scalbnl", scope: !877, file: !877, line: 276, type: !1189, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1189 = !DISubroutineType(types: !1190)
!1190 = !{!267, !267, !82}
!1191 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1192, line: 1218)
!1192 = !DISubprogram(name: "tgamma", scope: !877, file: !877, line: 235, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1193 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1194, line: 1219)
!1194 = !DISubprogram(name: "tgammaf", scope: !877, file: !877, line: 235, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1195 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1196, line: 1220)
!1196 = !DISubprogram(name: "tgammal", scope: !877, file: !877, line: 235, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1197 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1198, line: 1222)
!1198 = !DISubprogram(name: "trunc", scope: !877, file: !877, line: 302, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1199 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1200, line: 1223)
!1200 = !DISubprogram(name: "truncf", scope: !877, file: !877, line: 302, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1201 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1202, line: 1224)
!1202 = !DISubprogram(name: "truncl", scope: !877, file: !877, line: 302, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1203 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1204, line: 58)
!1204 = !DIDerivedType(tag: DW_TAG_typedef, name: "fenv_t", file: !1205, line: 94, baseType: !1206)
!1205 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/fenv.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!1206 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1205, line: 75, flags: DIFlagFwdDecl, identifier: "_ZTS6fenv_t")
!1207 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1208, line: 59)
!1208 = !DIDerivedType(tag: DW_TAG_typedef, name: "fexcept_t", file: !1205, line: 68, baseType: !29)
!1209 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1210, line: 62)
!1210 = !DISubprogram(name: "feclearexcept", scope: !1211, file: !1211, line: 71, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1211 = !DIFile(filename: "/usr/include/fenv.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!1212 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1213, line: 63)
!1213 = !DISubprogram(name: "fegetexceptflag", scope: !1211, file: !1211, line: 75, type: !1214, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1214 = !DISubroutineType(types: !1215)
!1215 = !{!82, !1216, !82}
!1216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1208, size: 64)
!1217 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1218, line: 64)
!1218 = !DISubprogram(name: "feraiseexcept", scope: !1211, file: !1211, line: 78, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1219 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1220, line: 65)
!1220 = !DISubprogram(name: "fesetexceptflag", scope: !1211, file: !1211, line: 88, type: !1221, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1221 = !DISubroutineType(types: !1222)
!1222 = !{!82, !1223, !82}
!1223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1224, size: 64)
!1224 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1208)
!1225 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1226, line: 66)
!1226 = !DISubprogram(name: "fetestexcept", scope: !1211, file: !1211, line: 92, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1227 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1228, line: 68)
!1228 = !DISubprogram(name: "fegetround", scope: !1211, file: !1211, line: 104, type: !189, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1229 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1230, line: 69)
!1230 = !DISubprogram(name: "fesetround", scope: !1211, file: !1211, line: 107, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1231 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1232, line: 71)
!1232 = !DISubprogram(name: "fegetenv", scope: !1211, file: !1211, line: 114, type: !1233, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1233 = !DISubroutineType(types: !1234)
!1234 = !{!82, !1235}
!1235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1204, size: 64)
!1236 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1237, line: 72)
!1237 = !DISubprogram(name: "feholdexcept", scope: !1211, file: !1211, line: 119, type: !1233, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1238 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1239, line: 73)
!1239 = !DISubprogram(name: "fesetenv", scope: !1211, file: !1211, line: 123, type: !1240, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1240 = !DISubroutineType(types: !1241)
!1241 = !{!82, !1242}
!1242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1243, size: 64)
!1243 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1204)
!1244 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1245, line: 74)
!1245 = !DISubprogram(name: "feupdateenv", scope: !1211, file: !1211, line: 128, type: !1240, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1246 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1204, line: 61)
!1247 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1208, line: 62)
!1248 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1210, line: 65)
!1249 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1213, line: 66)
!1250 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1218, line: 67)
!1251 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1220, line: 68)
!1252 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1226, line: 69)
!1253 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1228, line: 71)
!1254 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1230, line: 72)
!1255 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1232, line: 74)
!1256 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1237, line: 75)
!1257 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1239, line: 76)
!1258 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1245, line: 77)
!1259 = !{i32 2, !"Dwarf Version", i32 4}
!1260 = !{i32 2, !"Debug Info Version", i32 3}
!1261 = distinct !DISubprogram(name: "__remill_basic_block", scope: !2, file: !2, line: 52, type: !1262, isLocal: false, isDefinition: true, scopeLine: 52, flags: DIFlagPrototyped, isOptimized: false, unit: !1, variables: !7)
!1262 = !DISubroutineType(types: !1263)
!1263 = !{!1264, !1267, !1950, !1264}
!1264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1265, size: 64)
!1265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Memory", file: !1266, line: 36, flags: DIFlagFwdDecl, identifier: "_ZTS6Memory")
!1266 = !DIFile(filename: "/home/ubuntu/Github/remill/remill/Arch/Runtime/Types.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!1267 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !1268, size: 64)
!1268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "State", file: !27, line: 742, size: 27008, align: 128, elements: !1269, identifier: "_ZTS5State")
!1269 = !{!1270, !1282, !1491, !1511, !1541, !1566, !1595, !1632, !1642, !1703, !1728, !1752, !1932}
!1270 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !1268, baseType: !1271)
!1271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ArchState", file: !1272, line: 21, size: 128, elements: !1273, identifier: "_ZTS9ArchState")
!1272 = !DIFile(filename: "/home/ubuntu/Github/remill/remill/Arch/Runtime/State.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!1273 = !{!1274, !1275, !1276}
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "hyper_call", scope: !1271, file: !1272, line: 23, baseType: !4, size: 32)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "_0", scope: !1271, file: !1272, line: 25, baseType: !8, size: 32, offset: 32)
!1276 = !DIDerivedType(tag: DW_TAG_member, scope: !1271, file: !1272, line: 31, baseType: !1277, size: 64, offset: 64)
!1277 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1271, file: !1272, line: 31, size: 64, elements: !1278, identifier: "_ZTSN9ArchStateUt_E")
!1278 = !{!1279, !1280, !1281}
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "addr_to_load", scope: !1277, file: !1272, line: 32, baseType: !637, size: 64)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "addr_to_store", scope: !1277, file: !1272, line: 33, baseType: !637, size: 64)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "hyper_call_vector", scope: !1277, file: !1272, line: 34, baseType: !8, size: 32)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1268, file: !27, line: 747, baseType: !1283, size: 16384, offset: 128)
!1283 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1284, size: 16384, elements: !1369)
!1284 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "VectorReg", file: !27, line: 636, size: 512, align: 128, elements: !1285, identifier: "_ZTS9VectorReg")
!1285 = !{!1286, !1361, !1426}
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "xmm", scope: !1284, file: !27, line: 637, baseType: !1287, size: 128, align: 128)
!1287 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "vec128_t", file: !1266, line: 317, size: 128, elements: !1288, identifier: "_ZTS8vec128_t")
!1288 = !{!1289, !1298, !1305, !1312, !1317, !1324, !1329, !1334, !1339, !1344, !1349, !1354}
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "dqwords", scope: !1287, file: !1266, line: 321, baseType: !1290, size: 128)
!1290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint128v1_t", file: !1266, line: 205, size: 128, elements: !1291, identifier: "_ZTS11uint128v1_t")
!1291 = !{!1292}
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1290, file: !1266, line: 205, baseType: !1293, size: 128)
!1293 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1294, size: 128, elements: !1296)
!1294 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint128_t", file: !1266, line: 46, baseType: !1295)
!1295 = !DIBasicType(name: "unsigned __int128", size: 128, encoding: DW_ATE_unsigned)
!1296 = !{!1297}
!1297 = !DISubrange(count: 1)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !1287, file: !1266, line: 323, baseType: !1299, size: 128)
!1299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint8v16_t", file: !1266, line: 182, size: 128, elements: !1300, identifier: "_ZTS10uint8v16_t")
!1300 = !{!1301}
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1299, file: !1266, line: 182, baseType: !1302, size: 128)
!1302 = !DICompositeType(tag: DW_TAG_array_type, baseType: !62, size: 128, elements: !1303)
!1303 = !{!1304}
!1304 = !DISubrange(count: 16)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !1287, file: !1266, line: 324, baseType: !1306, size: 128)
!1306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint16v8_t", file: !1266, line: 189, size: 128, elements: !1307, identifier: "_ZTS10uint16v8_t")
!1307 = !{!1308}
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1306, file: !1266, line: 189, baseType: !1309, size: 128)
!1309 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 128, elements: !1310)
!1310 = !{!1311}
!1311 = !DISubrange(count: 8)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "dwords", scope: !1287, file: !1266, line: 325, baseType: !1313, size: 128)
!1313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint32v4_t", file: !1266, line: 195, size: 128, elements: !1314, identifier: "_ZTS10uint32v4_t")
!1314 = !{!1315}
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1313, file: !1266, line: 195, baseType: !1316, size: 128)
!1316 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 128, elements: !353)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "qwords", scope: !1287, file: !1266, line: 326, baseType: !1318, size: 128)
!1318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint64v2_t", file: !1266, line: 200, size: 128, elements: !1319, identifier: "_ZTS10uint64v2_t")
!1319 = !{!1320}
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1318, file: !1266, line: 200, baseType: !1321, size: 128)
!1321 = !DICompositeType(tag: DW_TAG_array_type, baseType: !637, size: 128, elements: !1322)
!1322 = !{!1323}
!1323 = !DISubrange(count: 2)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "floats", scope: !1287, file: !1266, line: 327, baseType: !1325, size: 128)
!1325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "float32v4_t", file: !1266, line: 242, size: 128, elements: !1326, identifier: "_ZTS11float32v4_t")
!1326 = !{!1327}
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1325, file: !1266, line: 242, baseType: !1328, size: 128)
!1328 = !DICompositeType(tag: DW_TAG_array_type, baseType: !262, size: 128, elements: !353)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "doubles", scope: !1287, file: !1266, line: 328, baseType: !1330, size: 128)
!1330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "float64v2_t", file: !1266, line: 247, size: 128, elements: !1331, identifier: "_ZTS11float64v2_t")
!1331 = !{!1332}
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1330, file: !1266, line: 247, baseType: !1333, size: 128)
!1333 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 128, elements: !1322)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "sbytes", scope: !1287, file: !1266, line: 330, baseType: !1335, size: 128)
!1335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int8v16_t", file: !1266, line: 213, size: 128, elements: !1336, identifier: "_ZTS9int8v16_t")
!1336 = !{!1337}
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1335, file: !1266, line: 213, baseType: !1338, size: 128)
!1338 = !DICompositeType(tag: DW_TAG_array_type, baseType: !604, size: 128, elements: !1303)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "swords", scope: !1287, file: !1266, line: 331, baseType: !1340, size: 128)
!1340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int16v8_t", file: !1266, line: 220, size: 128, elements: !1341, identifier: "_ZTS9int16v8_t")
!1341 = !{!1342}
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1340, file: !1266, line: 220, baseType: !1343, size: 128)
!1343 = !DICompositeType(tag: DW_TAG_array_type, baseType: !607, size: 128, elements: !1310)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "sdwords", scope: !1287, file: !1266, line: 332, baseType: !1345, size: 128)
!1345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int32v4_t", file: !1266, line: 226, size: 128, elements: !1346, identifier: "_ZTS9int32v4_t")
!1346 = !{!1347}
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1345, file: !1266, line: 226, baseType: !1348, size: 128)
!1348 = !DICompositeType(tag: DW_TAG_array_type, baseType: !610, size: 128, elements: !353)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "sqwords", scope: !1287, file: !1266, line: 333, baseType: !1350, size: 128)
!1350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int64v2_t", file: !1266, line: 231, size: 128, elements: !1351, identifier: "_ZTS9int64v2_t")
!1351 = !{!1352}
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1350, file: !1266, line: 231, baseType: !1353, size: 128)
!1353 = !DICompositeType(tag: DW_TAG_array_type, baseType: !612, size: 128, elements: !1322)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "sdqwords", scope: !1287, file: !1266, line: 334, baseType: !1355, size: 128)
!1355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int128v1_t", file: !1266, line: 236, size: 128, elements: !1356, identifier: "_ZTS10int128v1_t")
!1356 = !{!1357}
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1355, file: !1266, line: 236, baseType: !1358, size: 128)
!1358 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1359, size: 128, elements: !1296)
!1359 = !DIDerivedType(tag: DW_TAG_typedef, name: "int128_t", file: !1266, line: 47, baseType: !1360)
!1360 = !DIBasicType(name: "__int128", size: 128, encoding: DW_ATE_signed)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "ymm", scope: !1284, file: !27, line: 638, baseType: !1362, size: 256, align: 128)
!1362 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "vec256_t", file: !1266, line: 340, size: 256, elements: !1363, identifier: "_ZTS8vec256_t")
!1363 = !{!1364, !1371, !1376, !1381, !1386, !1391, !1396, !1401, !1406, !1411, !1416, !1421}
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !1362, file: !1266, line: 341, baseType: !1365, size: 256)
!1365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint8v32_t", file: !1266, line: 183, size: 256, elements: !1366, identifier: "_ZTS10uint8v32_t")
!1366 = !{!1367}
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1365, file: !1266, line: 183, baseType: !1368, size: 256)
!1368 = !DICompositeType(tag: DW_TAG_array_type, baseType: !62, size: 256, elements: !1369)
!1369 = !{!1370}
!1370 = !DISubrange(count: 32)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !1362, file: !1266, line: 342, baseType: !1372, size: 256)
!1372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint16v16_t", file: !1266, line: 190, size: 256, elements: !1373, identifier: "_ZTS11uint16v16_t")
!1373 = !{!1374}
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1372, file: !1266, line: 190, baseType: !1375, size: 256)
!1375 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 256, elements: !1303)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "dwords", scope: !1362, file: !1266, line: 343, baseType: !1377, size: 256)
!1377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint32v8_t", file: !1266, line: 196, size: 256, elements: !1378, identifier: "_ZTS10uint32v8_t")
!1378 = !{!1379}
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1377, file: !1266, line: 196, baseType: !1380, size: 256)
!1380 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 256, elements: !1310)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "qwords", scope: !1362, file: !1266, line: 344, baseType: !1382, size: 256)
!1382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint64v4_t", file: !1266, line: 201, size: 256, elements: !1383, identifier: "_ZTS10uint64v4_t")
!1383 = !{!1384}
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1382, file: !1266, line: 201, baseType: !1385, size: 256)
!1385 = !DICompositeType(tag: DW_TAG_array_type, baseType: !637, size: 256, elements: !353)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "dqwords", scope: !1362, file: !1266, line: 345, baseType: !1387, size: 256)
!1387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint128v2_t", file: !1266, line: 206, size: 256, elements: !1388, identifier: "_ZTS11uint128v2_t")
!1388 = !{!1389}
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1387, file: !1266, line: 206, baseType: !1390, size: 256)
!1390 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1294, size: 256, elements: !1322)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "floats", scope: !1362, file: !1266, line: 346, baseType: !1392, size: 256)
!1392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "float32v8_t", file: !1266, line: 243, size: 256, elements: !1393, identifier: "_ZTS11float32v8_t")
!1393 = !{!1394}
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1392, file: !1266, line: 243, baseType: !1395, size: 256)
!1395 = !DICompositeType(tag: DW_TAG_array_type, baseType: !262, size: 256, elements: !1310)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "doubles", scope: !1362, file: !1266, line: 347, baseType: !1397, size: 256)
!1397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "float64v4_t", file: !1266, line: 248, size: 256, elements: !1398, identifier: "_ZTS11float64v4_t")
!1398 = !{!1399}
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1397, file: !1266, line: 248, baseType: !1400, size: 256)
!1400 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 256, elements: !353)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "sbytes", scope: !1362, file: !1266, line: 349, baseType: !1402, size: 256)
!1402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int8v32_t", file: !1266, line: 214, size: 256, elements: !1403, identifier: "_ZTS9int8v32_t")
!1403 = !{!1404}
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1402, file: !1266, line: 214, baseType: !1405, size: 256)
!1405 = !DICompositeType(tag: DW_TAG_array_type, baseType: !604, size: 256, elements: !1369)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "swords", scope: !1362, file: !1266, line: 350, baseType: !1407, size: 256)
!1407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int16v16_t", file: !1266, line: 221, size: 256, elements: !1408, identifier: "_ZTS10int16v16_t")
!1408 = !{!1409}
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1407, file: !1266, line: 221, baseType: !1410, size: 256)
!1410 = !DICompositeType(tag: DW_TAG_array_type, baseType: !607, size: 256, elements: !1303)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "sdwords", scope: !1362, file: !1266, line: 351, baseType: !1412, size: 256)
!1412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int32v8_t", file: !1266, line: 227, size: 256, elements: !1413, identifier: "_ZTS9int32v8_t")
!1413 = !{!1414}
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1412, file: !1266, line: 227, baseType: !1415, size: 256)
!1415 = !DICompositeType(tag: DW_TAG_array_type, baseType: !610, size: 256, elements: !1310)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "sqwords", scope: !1362, file: !1266, line: 352, baseType: !1417, size: 256)
!1417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int64v4_t", file: !1266, line: 232, size: 256, elements: !1418, identifier: "_ZTS9int64v4_t")
!1418 = !{!1419}
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1417, file: !1266, line: 232, baseType: !1420, size: 256)
!1420 = !DICompositeType(tag: DW_TAG_array_type, baseType: !612, size: 256, elements: !353)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "sdqwords", scope: !1362, file: !1266, line: 353, baseType: !1422, size: 256)
!1422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int128v2_t", file: !1266, line: 237, size: 256, elements: !1423, identifier: "_ZTS10int128v2_t")
!1423 = !{!1424}
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1422, file: !1266, line: 237, baseType: !1425, size: 256)
!1425 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1359, size: 256, elements: !1322)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "zmm", scope: !1284, file: !27, line: 639, baseType: !1427, size: 512, align: 128)
!1427 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "vec512_t", file: !1266, line: 359, size: 512, elements: !1428, identifier: "_ZTS8vec512_t")
!1428 = !{!1429, !1436, !1441, !1446, !1451, !1456, !1461, !1466, !1471, !1476, !1481, !1486}
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !1427, file: !1266, line: 360, baseType: !1430, size: 512)
!1430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint8v64_t", file: !1266, line: 184, size: 512, elements: !1431, identifier: "_ZTS10uint8v64_t")
!1431 = !{!1432}
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1430, file: !1266, line: 184, baseType: !1433, size: 512)
!1433 = !DICompositeType(tag: DW_TAG_array_type, baseType: !62, size: 512, elements: !1434)
!1434 = !{!1435}
!1435 = !DISubrange(count: 64)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !1427, file: !1266, line: 361, baseType: !1437, size: 512)
!1437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint16v32_t", file: !1266, line: 191, size: 512, elements: !1438, identifier: "_ZTS11uint16v32_t")
!1438 = !{!1439}
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1437, file: !1266, line: 191, baseType: !1440, size: 512)
!1440 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 512, elements: !1369)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "dwords", scope: !1427, file: !1266, line: 362, baseType: !1442, size: 512)
!1442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint32v16_t", file: !1266, line: 197, size: 512, elements: !1443, identifier: "_ZTS11uint32v16_t")
!1443 = !{!1444}
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1442, file: !1266, line: 197, baseType: !1445, size: 512)
!1445 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 512, elements: !1303)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "qwords", scope: !1427, file: !1266, line: 363, baseType: !1447, size: 512)
!1447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint64v8_t", file: !1266, line: 202, size: 512, elements: !1448, identifier: "_ZTS10uint64v8_t")
!1448 = !{!1449}
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1447, file: !1266, line: 202, baseType: !1450, size: 512)
!1450 = !DICompositeType(tag: DW_TAG_array_type, baseType: !637, size: 512, elements: !1310)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "dqwords", scope: !1427, file: !1266, line: 364, baseType: !1452, size: 512)
!1452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint128v4_t", file: !1266, line: 207, size: 512, elements: !1453, identifier: "_ZTS11uint128v4_t")
!1453 = !{!1454}
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1452, file: !1266, line: 207, baseType: !1455, size: 512)
!1455 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1294, size: 512, elements: !353)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "floats", scope: !1427, file: !1266, line: 365, baseType: !1457, size: 512)
!1457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "float32v16_t", file: !1266, line: 244, size: 512, elements: !1458, identifier: "_ZTS12float32v16_t")
!1458 = !{!1459}
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1457, file: !1266, line: 244, baseType: !1460, size: 512)
!1460 = !DICompositeType(tag: DW_TAG_array_type, baseType: !262, size: 512, elements: !1303)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "doubles", scope: !1427, file: !1266, line: 366, baseType: !1462, size: 512)
!1462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "float64v8_t", file: !1266, line: 249, size: 512, elements: !1463, identifier: "_ZTS11float64v8_t")
!1463 = !{!1464}
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1462, file: !1266, line: 249, baseType: !1465, size: 512)
!1465 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 512, elements: !1310)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "sbytes", scope: !1427, file: !1266, line: 368, baseType: !1467, size: 512)
!1467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int8v64_t", file: !1266, line: 215, size: 512, elements: !1468, identifier: "_ZTS9int8v64_t")
!1468 = !{!1469}
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1467, file: !1266, line: 215, baseType: !1470, size: 512)
!1470 = !DICompositeType(tag: DW_TAG_array_type, baseType: !604, size: 512, elements: !1434)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "swords", scope: !1427, file: !1266, line: 369, baseType: !1472, size: 512)
!1472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int16v32_t", file: !1266, line: 222, size: 512, elements: !1473, identifier: "_ZTS10int16v32_t")
!1473 = !{!1474}
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1472, file: !1266, line: 222, baseType: !1475, size: 512)
!1475 = !DICompositeType(tag: DW_TAG_array_type, baseType: !607, size: 512, elements: !1369)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "sdwords", scope: !1427, file: !1266, line: 370, baseType: !1477, size: 512)
!1477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int32v16_t", file: !1266, line: 228, size: 512, elements: !1478, identifier: "_ZTS10int32v16_t")
!1478 = !{!1479}
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1477, file: !1266, line: 228, baseType: !1480, size: 512)
!1480 = !DICompositeType(tag: DW_TAG_array_type, baseType: !610, size: 512, elements: !1303)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "sqwords", scope: !1427, file: !1266, line: 371, baseType: !1482, size: 512)
!1482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int64v8_t", file: !1266, line: 233, size: 512, elements: !1483, identifier: "_ZTS9int64v8_t")
!1483 = !{!1484}
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1482, file: !1266, line: 233, baseType: !1485, size: 512)
!1485 = !DICompositeType(tag: DW_TAG_array_type, baseType: !612, size: 512, elements: !1310)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "sdqwords", scope: !1427, file: !1266, line: 372, baseType: !1487, size: 512)
!1487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int128v4_t", file: !1266, line: 238, size: 512, elements: !1488, identifier: "_ZTS10int128v4_t")
!1488 = !{!1489}
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1487, file: !1266, line: 238, baseType: !1490, size: 512)
!1490 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1359, size: 512, elements: !353)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "aflag", scope: !1268, file: !27, line: 751, baseType: !1492, size: 128, align: 64, offset: 16512)
!1492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ArithFlags", file: !27, line: 402, size: 128, align: 64, elements: !1493, identifier: "_ZTS10ArithFlags")
!1493 = !{!1494, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510}
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "_0", scope: !1492, file: !27, line: 404, baseType: !1495, size: 8)
!1495 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !62)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "cf", scope: !1492, file: !27, line: 405, baseType: !62, size: 8, offset: 8)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "_1", scope: !1492, file: !27, line: 406, baseType: !1495, size: 8, offset: 16)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "pf", scope: !1492, file: !27, line: 407, baseType: !62, size: 8, offset: 24)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "_2", scope: !1492, file: !27, line: 408, baseType: !1495, size: 8, offset: 32)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "af", scope: !1492, file: !27, line: 409, baseType: !62, size: 8, offset: 40)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "_3", scope: !1492, file: !27, line: 410, baseType: !1495, size: 8, offset: 48)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "zf", scope: !1492, file: !27, line: 411, baseType: !62, size: 8, offset: 56)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "_4", scope: !1492, file: !27, line: 412, baseType: !1495, size: 8, offset: 64)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !1492, file: !27, line: 413, baseType: !62, size: 8, offset: 72)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "_5", scope: !1492, file: !27, line: 414, baseType: !1495, size: 8, offset: 80)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "df", scope: !1492, file: !27, line: 415, baseType: !62, size: 8, offset: 88)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "_6", scope: !1492, file: !27, line: 416, baseType: !1495, size: 8, offset: 96)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "of", scope: !1492, file: !27, line: 417, baseType: !62, size: 8, offset: 104)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "_7", scope: !1492, file: !27, line: 418, baseType: !1495, size: 8, offset: 112)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "_8", scope: !1492, file: !27, line: 419, baseType: !1495, size: 8, offset: 120)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "rflag", scope: !1268, file: !27, line: 752, baseType: !1512, size: 64, align: 64, offset: 16640)
!1512 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "Flags", file: !27, line: 366, size: 64, align: 64, elements: !1513, identifier: "_ZTS5Flags")
!1513 = !{!1514, !1515}
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "flat", scope: !1512, file: !27, line: 367, baseType: !637, size: 64)
!1515 = !DIDerivedType(tag: DW_TAG_member, scope: !1512, file: !27, line: 368, baseType: !1516, size: 64)
!1516 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1512, file: !27, line: 368, size: 64, elements: !1517, identifier: "_ZTSN5FlagsUt_E")
!1517 = !{!1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540}
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "cf", scope: !1516, file: !27, line: 369, baseType: !8, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "must_be_1", scope: !1516, file: !27, line: 370, baseType: !8, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "pf", scope: !1516, file: !27, line: 371, baseType: !8, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "must_be_0a", scope: !1516, file: !27, line: 372, baseType: !8, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "af", scope: !1516, file: !27, line: 374, baseType: !8, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "must_be_0b", scope: !1516, file: !27, line: 375, baseType: !8, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "zf", scope: !1516, file: !27, line: 376, baseType: !8, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !1516, file: !27, line: 377, baseType: !8, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "tf", scope: !1516, file: !27, line: 379, baseType: !8, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "_if", scope: !1516, file: !27, line: 380, baseType: !8, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "df", scope: !1516, file: !27, line: 381, baseType: !8, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "of", scope: !1516, file: !27, line: 382, baseType: !8, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "iopl", scope: !1516, file: !27, line: 384, baseType: !8, size: 2, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "nt", scope: !1516, file: !27, line: 385, baseType: !8, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "must_be_0c", scope: !1516, file: !27, line: 386, baseType: !8, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "rf", scope: !1516, file: !27, line: 388, baseType: !8, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "vm", scope: !1516, file: !27, line: 389, baseType: !8, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "ac", scope: !1516, file: !27, line: 390, baseType: !8, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "vif", scope: !1516, file: !27, line: 391, baseType: !8, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "vip", scope: !1516, file: !27, line: 393, baseType: !8, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1516, file: !27, line: 394, baseType: !8, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_eflags", scope: !1516, file: !27, line: 395, baseType: !8, size: 10, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_rflags", scope: !1516, file: !27, line: 396, baseType: !8, size: 32, offset: 32)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "seg", scope: !1268, file: !27, line: 753, baseType: !1542, size: 192, align: 64, offset: 16704)
!1542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Segments", file: !27, line: 451, size: 192, align: 64, elements: !1543, identifier: "_ZTS8Segments")
!1543 = !{!1544, !1546, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565}
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "_0", scope: !1542, file: !27, line: 452, baseType: !1545, size: 16)
!1545 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !28)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !1542, file: !27, line: 453, baseType: !1547, size: 16, offset: 16)
!1547 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "SegmentSelector", file: !27, line: 76, size: 16, elements: !1548, identifier: "_ZTS15SegmentSelector")
!1548 = !{!1549, !1550}
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "flat", scope: !1547, file: !27, line: 77, baseType: !28, size: 16)
!1550 = !DIDerivedType(tag: DW_TAG_member, scope: !1547, file: !27, line: 78, baseType: !1551, size: 16)
!1551 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1547, file: !27, line: 78, size: 16, elements: !1552, identifier: "_ZTSN15SegmentSelectorUt_E")
!1552 = !{!1553, !1554, !1555}
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "rpi", scope: !1551, file: !27, line: 79, baseType: !26, size: 2, flags: DIFlagBitField, extraData: i64 0)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "ti", scope: !1551, file: !27, line: 80, baseType: !35, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1551, file: !27, line: 81, baseType: !28, size: 13, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "_1", scope: !1542, file: !27, line: 454, baseType: !1545, size: 16, offset: 32)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !1542, file: !27, line: 455, baseType: !1547, size: 16, offset: 48)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "_2", scope: !1542, file: !27, line: 456, baseType: !1545, size: 16, offset: 64)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "gs", scope: !1542, file: !27, line: 457, baseType: !1547, size: 16, offset: 80)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "_3", scope: !1542, file: !27, line: 458, baseType: !1545, size: 16, offset: 96)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1542, file: !27, line: 459, baseType: !1547, size: 16, offset: 112)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "_4", scope: !1542, file: !27, line: 460, baseType: !1545, size: 16, offset: 128)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1542, file: !27, line: 461, baseType: !1547, size: 16, offset: 144)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "_5", scope: !1542, file: !27, line: 462, baseType: !1545, size: 16, offset: 160)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !1542, file: !27, line: 463, baseType: !1547, size: 16, offset: 176)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !1268, file: !27, line: 754, baseType: !1567, size: 768, align: 64, offset: 16896)
!1567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AddressSpace", file: !27, line: 654, size: 768, align: 64, elements: !1568, identifier: "_ZTS12AddressSpace")
!1568 = !{!1569, !1571, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594}
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "_0", scope: !1567, file: !27, line: 655, baseType: !1570, size: 64)
!1570 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !637)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "ss_base", scope: !1567, file: !27, line: 656, baseType: !1572, size: 64, offset: 64)
!1572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Reg", file: !27, line: 610, size: 64, elements: !1573, identifier: "_ZTS3Reg")
!1573 = !{!1574}
!1574 = !DIDerivedType(tag: DW_TAG_member, scope: !1572, file: !27, line: 611, baseType: !1575, size: 64)
!1575 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1572, file: !27, line: 611, size: 64, elements: !1576, identifier: "_ZTSN3RegUt_E")
!1576 = !{!1577, !1582, !1583, !1584}
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "byte", scope: !1575, file: !27, line: 615, baseType: !1578, size: 16, align: 8)
!1578 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1575, file: !27, line: 612, size: 16, elements: !1579, identifier: "_ZTSN3RegUt_Ut_E")
!1579 = !{!1580, !1581}
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !1578, file: !27, line: 613, baseType: !62, size: 8)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !1578, file: !27, line: 614, baseType: !62, size: 8, offset: 8)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "word", scope: !1575, file: !27, line: 616, baseType: !28, size: 16, align: 16)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "dword", scope: !1575, file: !27, line: 617, baseType: !8, size: 32, align: 32)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "qword", scope: !1575, file: !27, line: 618, baseType: !637, size: 64, align: 64)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "_1", scope: !1567, file: !27, line: 657, baseType: !1570, size: 64, offset: 128)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "es_base", scope: !1567, file: !27, line: 658, baseType: !1572, size: 64, offset: 192)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "_2", scope: !1567, file: !27, line: 659, baseType: !1570, size: 64, offset: 256)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "gs_base", scope: !1567, file: !27, line: 660, baseType: !1572, size: 64, offset: 320)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "_3", scope: !1567, file: !27, line: 661, baseType: !1570, size: 64, offset: 384)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "fs_base", scope: !1567, file: !27, line: 662, baseType: !1572, size: 64, offset: 448)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "_4", scope: !1567, file: !27, line: 663, baseType: !1570, size: 64, offset: 512)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "ds_base", scope: !1567, file: !27, line: 664, baseType: !1572, size: 64, offset: 576)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "_5", scope: !1567, file: !27, line: 665, baseType: !1570, size: 64, offset: 640)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "cs_base", scope: !1567, file: !27, line: 666, baseType: !1572, size: 64, offset: 704)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "gpr", scope: !1268, file: !27, line: 755, baseType: !1596, size: 2176, align: 64, offset: 17664)
!1596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GPR", file: !27, line: 677, size: 2176, align: 64, elements: !1597, identifier: "_ZTS3GPR")
!1597 = !{!1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1631}
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "_0", scope: !1596, file: !27, line: 679, baseType: !1570, size: 64)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "rax", scope: !1596, file: !27, line: 680, baseType: !1572, size: 64, offset: 64)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "_1", scope: !1596, file: !27, line: 681, baseType: !1570, size: 64, offset: 128)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "rbx", scope: !1596, file: !27, line: 682, baseType: !1572, size: 64, offset: 192)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "_2", scope: !1596, file: !27, line: 683, baseType: !1570, size: 64, offset: 256)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "rcx", scope: !1596, file: !27, line: 684, baseType: !1572, size: 64, offset: 320)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "_3", scope: !1596, file: !27, line: 685, baseType: !1570, size: 64, offset: 384)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "rdx", scope: !1596, file: !27, line: 686, baseType: !1572, size: 64, offset: 448)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "_4", scope: !1596, file: !27, line: 687, baseType: !1570, size: 64, offset: 512)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "rsi", scope: !1596, file: !27, line: 688, baseType: !1572, size: 64, offset: 576)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "_5", scope: !1596, file: !27, line: 689, baseType: !1570, size: 64, offset: 640)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "rdi", scope: !1596, file: !27, line: 690, baseType: !1572, size: 64, offset: 704)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "_6", scope: !1596, file: !27, line: 691, baseType: !1570, size: 64, offset: 768)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "rsp", scope: !1596, file: !27, line: 692, baseType: !1572, size: 64, offset: 832)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "_7", scope: !1596, file: !27, line: 693, baseType: !1570, size: 64, offset: 896)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "rbp", scope: !1596, file: !27, line: 694, baseType: !1572, size: 64, offset: 960)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "_8", scope: !1596, file: !27, line: 695, baseType: !1570, size: 64, offset: 1024)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !1596, file: !27, line: 696, baseType: !1572, size: 64, offset: 1088)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "_9", scope: !1596, file: !27, line: 697, baseType: !1570, size: 64, offset: 1152)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !1596, file: !27, line: 698, baseType: !1572, size: 64, offset: 1216)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "_10", scope: !1596, file: !27, line: 699, baseType: !1570, size: 64, offset: 1280)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !1596, file: !27, line: 700, baseType: !1572, size: 64, offset: 1344)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "_11", scope: !1596, file: !27, line: 701, baseType: !1570, size: 64, offset: 1408)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !1596, file: !27, line: 702, baseType: !1572, size: 64, offset: 1472)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "_12", scope: !1596, file: !27, line: 703, baseType: !1570, size: 64, offset: 1536)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !1596, file: !27, line: 704, baseType: !1572, size: 64, offset: 1600)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "_13", scope: !1596, file: !27, line: 705, baseType: !1570, size: 64, offset: 1664)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !1596, file: !27, line: 706, baseType: !1572, size: 64, offset: 1728)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "_14", scope: !1596, file: !27, line: 707, baseType: !1570, size: 64, offset: 1792)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !1596, file: !27, line: 708, baseType: !1572, size: 64, offset: 1856)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "_15", scope: !1596, file: !27, line: 709, baseType: !1570, size: 64, offset: 1920)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !1596, file: !27, line: 710, baseType: !1572, size: 64, offset: 1984)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "_16", scope: !1596, file: !27, line: 711, baseType: !1570, size: 64, offset: 2048)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !1596, file: !27, line: 714, baseType: !1572, size: 64, offset: 2112)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "st", scope: !1268, file: !27, line: 756, baseType: !1633, size: 1024, align: 64, offset: 19840)
!1633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "X87Stack", file: !27, line: 719, size: 1024, align: 64, elements: !1634, identifier: "_ZTS8X87Stack")
!1634 = !{!1635}
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1633, file: !27, line: 723, baseType: !1636, size: 1024)
!1636 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1637, size: 1024, elements: !1310)
!1637 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1633, file: !27, line: 720, size: 128, align: 64, elements: !1638, identifier: "_ZTSN8X87StackUt_E")
!1638 = !{!1639, !1640}
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "_0", scope: !1637, file: !27, line: 721, baseType: !637, size: 64)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1637, file: !27, line: 722, baseType: !1641, size: 64, offset: 64)
!1641 = !DIDerivedType(tag: DW_TAG_typedef, name: "float64_t", file: !1266, line: 61, baseType: !108)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "mmx", scope: !1268, file: !27, line: 757, baseType: !1643, size: 1024, align: 64, offset: 20864)
!1643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MMX", file: !27, line: 729, size: 1024, align: 64, elements: !1644, identifier: "_ZTS3MMX")
!1644 = !{!1645}
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1643, file: !27, line: 733, baseType: !1646, size: 1024)
!1646 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1647, size: 1024, elements: !1310)
!1647 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1643, file: !27, line: 730, size: 128, align: 64, elements: !1648, identifier: "_ZTSN3MMXUt_E")
!1648 = !{!1649, !1650}
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "_0", scope: !1647, file: !27, line: 731, baseType: !637, size: 64)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1647, file: !27, line: 732, baseType: !1651, size: 64, offset: 64)
!1651 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "vec64_t", file: !1266, line: 294, size: 64, elements: !1652, identifier: "_ZTS7vec64_t")
!1652 = !{!1653, !1658, !1663, !1668, !1673, !1678, !1683, !1688, !1693, !1698}
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "qwords", scope: !1651, file: !1266, line: 298, baseType: !1654, size: 64)
!1654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint64v1_t", file: !1266, line: 199, size: 64, elements: !1655, identifier: "_ZTS10uint64v1_t")
!1655 = !{!1656}
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1654, file: !1266, line: 199, baseType: !1657, size: 64)
!1657 = !DICompositeType(tag: DW_TAG_array_type, baseType: !637, size: 64, elements: !1296)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !1651, file: !1266, line: 300, baseType: !1659, size: 64)
!1659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint8v8_t", file: !1266, line: 181, size: 64, elements: !1660, identifier: "_ZTS9uint8v8_t")
!1660 = !{!1661}
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1659, file: !1266, line: 181, baseType: !1662, size: 64)
!1662 = !DICompositeType(tag: DW_TAG_array_type, baseType: !62, size: 64, elements: !1310)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !1651, file: !1266, line: 301, baseType: !1664, size: 64)
!1664 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint16v4_t", file: !1266, line: 188, size: 64, elements: !1665, identifier: "_ZTS10uint16v4_t")
!1665 = !{!1666}
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1664, file: !1266, line: 188, baseType: !1667, size: 64)
!1667 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 64, elements: !353)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "dwords", scope: !1651, file: !1266, line: 302, baseType: !1669, size: 64)
!1669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint32v2_t", file: !1266, line: 194, size: 64, elements: !1670, identifier: "_ZTS10uint32v2_t")
!1670 = !{!1671}
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1669, file: !1266, line: 194, baseType: !1672, size: 64)
!1672 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 64, elements: !1322)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "floats", scope: !1651, file: !1266, line: 303, baseType: !1674, size: 64)
!1674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "float32v2_t", file: !1266, line: 241, size: 64, elements: !1675, identifier: "_ZTS11float32v2_t")
!1675 = !{!1676}
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1674, file: !1266, line: 241, baseType: !1677, size: 64)
!1677 = !DICompositeType(tag: DW_TAG_array_type, baseType: !262, size: 64, elements: !1322)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "doubles", scope: !1651, file: !1266, line: 304, baseType: !1679, size: 64)
!1679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "float64v1_t", file: !1266, line: 246, size: 64, elements: !1680, identifier: "_ZTS11float64v1_t")
!1680 = !{!1681}
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1679, file: !1266, line: 246, baseType: !1682, size: 64)
!1682 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 64, elements: !1296)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "sbytes", scope: !1651, file: !1266, line: 306, baseType: !1684, size: 64)
!1684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int8v8_t", file: !1266, line: 212, size: 64, elements: !1685, identifier: "_ZTS8int8v8_t")
!1685 = !{!1686}
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1684, file: !1266, line: 212, baseType: !1687, size: 64)
!1687 = !DICompositeType(tag: DW_TAG_array_type, baseType: !604, size: 64, elements: !1310)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "swords", scope: !1651, file: !1266, line: 307, baseType: !1689, size: 64)
!1689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int16v4_t", file: !1266, line: 219, size: 64, elements: !1690, identifier: "_ZTS9int16v4_t")
!1690 = !{!1691}
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1689, file: !1266, line: 219, baseType: !1692, size: 64)
!1692 = !DICompositeType(tag: DW_TAG_array_type, baseType: !607, size: 64, elements: !353)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "sdwords", scope: !1651, file: !1266, line: 308, baseType: !1694, size: 64)
!1694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int32v2_t", file: !1266, line: 225, size: 64, elements: !1695, identifier: "_ZTS9int32v2_t")
!1695 = !{!1696}
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1694, file: !1266, line: 225, baseType: !1697, size: 64)
!1697 = !DICompositeType(tag: DW_TAG_array_type, baseType: !610, size: 64, elements: !1322)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "sqwords", scope: !1651, file: !1266, line: 309, baseType: !1699, size: 64)
!1699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int64v1_t", file: !1266, line: 230, size: 64, elements: !1700, identifier: "_ZTS9int64v1_t")
!1700 = !{!1701}
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1699, file: !1266, line: 230, baseType: !1702, size: 64)
!1702 = !DICompositeType(tag: DW_TAG_array_type, baseType: !612, size: 64, elements: !1296)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "sw", scope: !1268, file: !27, line: 758, baseType: !1704, size: 192, offset: 21888)
!1704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FPUStatusFlags", file: !27, line: 332, size: 192, elements: !1705, identifier: "_ZTS14FPUStatusFlags")
!1705 = !{!1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726}
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "_0", scope: !1704, file: !27, line: 333, baseType: !62, size: 8)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "c0", scope: !1704, file: !27, line: 334, baseType: !62, size: 8, offset: 8)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "_1", scope: !1704, file: !27, line: 335, baseType: !62, size: 8, offset: 16)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "c1", scope: !1704, file: !27, line: 336, baseType: !62, size: 8, offset: 24)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "_2", scope: !1704, file: !27, line: 337, baseType: !62, size: 8, offset: 32)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "c2", scope: !1704, file: !27, line: 338, baseType: !62, size: 8, offset: 40)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "_3", scope: !1704, file: !27, line: 339, baseType: !62, size: 8, offset: 48)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "c3", scope: !1704, file: !27, line: 340, baseType: !62, size: 8, offset: 56)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "_4", scope: !1704, file: !27, line: 342, baseType: !62, size: 8, offset: 64)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "pe", scope: !1704, file: !27, line: 343, baseType: !62, size: 8, offset: 72)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "_5", scope: !1704, file: !27, line: 345, baseType: !62, size: 8, offset: 80)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "ue", scope: !1704, file: !27, line: 346, baseType: !62, size: 8, offset: 88)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "_6", scope: !1704, file: !27, line: 348, baseType: !62, size: 8, offset: 96)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "oe", scope: !1704, file: !27, line: 349, baseType: !62, size: 8, offset: 104)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "_7", scope: !1704, file: !27, line: 351, baseType: !62, size: 8, offset: 112)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "ze", scope: !1704, file: !27, line: 352, baseType: !62, size: 8, offset: 120)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "_8", scope: !1704, file: !27, line: 354, baseType: !62, size: 8, offset: 128)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "de", scope: !1704, file: !27, line: 355, baseType: !62, size: 8, offset: 136)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "_9", scope: !1704, file: !27, line: 357, baseType: !62, size: 8, offset: 144)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "ie", scope: !1704, file: !27, line: 358, baseType: !62, size: 8, offset: 152)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "_padding", scope: !1704, file: !27, line: 360, baseType: !1727, size: 32, offset: 160)
!1727 = !DICompositeType(tag: DW_TAG_array_type, baseType: !62, size: 32, elements: !353)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "xcr0", scope: !1268, file: !27, line: 759, baseType: !1729, size: 64, offset: 22080)
!1729 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "XCR0", file: !27, line: 424, size: 64, elements: !1730, identifier: "_ZTS4XCR0")
!1730 = !{!1731, !1732, !1737}
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "flat", scope: !1729, file: !27, line: 425, baseType: !637, size: 64)
!1732 = !DIDerivedType(tag: DW_TAG_member, scope: !1729, file: !27, line: 427, baseType: !1733, size: 64)
!1733 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1729, file: !27, line: 427, size: 64, elements: !1734, identifier: "_ZTSN4XCR0Ut_E")
!1734 = !{!1735, !1736}
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "eax", scope: !1733, file: !27, line: 428, baseType: !8, size: 32)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "edx", scope: !1733, file: !27, line: 429, baseType: !8, size: 32, offset: 32)
!1737 = !DIDerivedType(tag: DW_TAG_member, scope: !1729, file: !27, line: 433, baseType: !1738, size: 64)
!1738 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1729, file: !27, line: 433, size: 64, elements: !1739, identifier: "_ZTSN4XCR0Ut0_E")
!1739 = !{!1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751}
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "x87_fpu_mmx", scope: !1738, file: !27, line: 434, baseType: !637, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "xmm", scope: !1738, file: !27, line: 435, baseType: !637, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "ymm", scope: !1738, file: !27, line: 436, baseType: !637, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "bndreg", scope: !1738, file: !27, line: 437, baseType: !637, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "bndcsr", scope: !1738, file: !27, line: 438, baseType: !637, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "opmask", scope: !1738, file: !27, line: 439, baseType: !637, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "zmm_hi256", scope: !1738, file: !27, line: 440, baseType: !637, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "hi16_zmm", scope: !1738, file: !27, line: 441, baseType: !637, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "pkru", scope: !1738, file: !27, line: 442, baseType: !637, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "_reserved0", scope: !1738, file: !27, line: 443, baseType: !637, size: 53, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "lwp", scope: !1738, file: !27, line: 444, baseType: !637, size: 1, offset: 62, flags: DIFlagBitField, extraData: i64 0)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "_reserved1", scope: !1738, file: !27, line: 445, baseType: !637, size: 1, offset: 63, flags: DIFlagBitField, extraData: i64 0)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "x87", scope: !1268, file: !27, line: 760, baseType: !1753, size: 4096, align: 128, offset: 22144)
!1753 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "FPU", file: !27, line: 314, size: 4096, align: 128, elements: !1754, identifier: "_ZTS3FPU")
!1754 = !{!1755, !1851, !1914}
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !1753, file: !27, line: 317, baseType: !1756, size: 4096)
!1756 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1753, file: !27, line: 315, size: 4096, elements: !1757, identifier: "_ZTSN3FPUUt_E")
!1757 = !{!1758, !1847}
!1758 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !1756, baseType: !1759)
!1759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FpuFSAVE", file: !27, line: 263, size: 1248, elements: !1760, identifier: "_ZTS8FpuFSAVE")
!1760 = !{!1761, !1779, !1780, !1801, !1802, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824}
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !1759, file: !27, line: 264, baseType: !1762, size: 16)
!1762 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "FPUControlWord", file: !27, line: 142, size: 16, elements: !1763, identifier: "_ZTS14FPUControlWord")
!1763 = !{!1764, !1765}
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "flat", scope: !1762, file: !27, line: 143, baseType: !28, size: 16)
!1765 = !DIDerivedType(tag: DW_TAG_member, scope: !1762, file: !27, line: 144, baseType: !1766, size: 16)
!1766 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1762, file: !27, line: 144, size: 16, elements: !1767, identifier: "_ZTSN14FPUControlWordUt_E")
!1767 = !{!1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778}
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "im", scope: !1766, file: !27, line: 145, baseType: !28, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "dm", scope: !1766, file: !27, line: 146, baseType: !28, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "zm", scope: !1766, file: !27, line: 147, baseType: !28, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "om", scope: !1766, file: !27, line: 148, baseType: !28, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "um", scope: !1766, file: !27, line: 149, baseType: !28, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !1766, file: !27, line: 150, baseType: !28, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd0", scope: !1766, file: !27, line: 151, baseType: !28, size: 2, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !1766, file: !27, line: 152, baseType: !39, size: 2, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "rc", scope: !1766, file: !27, line: 153, baseType: !45, size: 2, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1766, file: !27, line: 154, baseType: !51, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd1", scope: !1766, file: !27, line: 155, baseType: !28, size: 3, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd0", scope: !1759, file: !27, line: 265, baseType: !28, size: 16, offset: 16)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !1759, file: !27, line: 266, baseType: !1781, size: 16, offset: 32)
!1781 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "FPUStatusWord", file: !27, line: 100, size: 16, elements: !1782, identifier: "_ZTS13FPUStatusWord")
!1782 = !{!1783, !1784}
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "flat", scope: !1781, file: !27, line: 101, baseType: !28, size: 16)
!1784 = !DIDerivedType(tag: DW_TAG_member, scope: !1781, file: !27, line: 102, baseType: !1785, size: 16)
!1785 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1781, file: !27, line: 102, size: 16, elements: !1786, identifier: "_ZTSN13FPUStatusWordUt_E")
!1786 = !{!1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800}
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "ie", scope: !1785, file: !27, line: 103, baseType: !28, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "de", scope: !1785, file: !27, line: 104, baseType: !28, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "ze", scope: !1785, file: !27, line: 105, baseType: !28, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "oe", scope: !1785, file: !27, line: 106, baseType: !28, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "ue", scope: !1785, file: !27, line: 107, baseType: !28, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "pe", scope: !1785, file: !27, line: 108, baseType: !28, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !1785, file: !27, line: 109, baseType: !28, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !1785, file: !27, line: 110, baseType: !28, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "c0", scope: !1785, file: !27, line: 111, baseType: !28, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "c1", scope: !1785, file: !27, line: 112, baseType: !28, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "c2", scope: !1785, file: !27, line: 113, baseType: !28, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !1785, file: !27, line: 114, baseType: !28, size: 3, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "c3", scope: !1785, file: !27, line: 115, baseType: !28, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !1785, file: !27, line: 116, baseType: !28, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd1", scope: !1759, file: !27, line: 267, baseType: !28, size: 16, offset: 48)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "ftw", scope: !1759, file: !27, line: 268, baseType: !1803, size: 16, offset: 64)
!1803 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "FPUTagWord", file: !27, line: 227, size: 16, elements: !1804, identifier: "_ZTS10FPUTagWord")
!1804 = !{!1805, !1806}
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "flat", scope: !1803, file: !27, line: 228, baseType: !28, size: 16)
!1806 = !DIDerivedType(tag: DW_TAG_member, scope: !1803, file: !27, line: 229, baseType: !1807, size: 16)
!1807 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1803, file: !27, line: 229, size: 16, elements: !1808, identifier: "_ZTSN10FPUTagWordUt_E")
!1808 = !{!1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816}
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "tag0", scope: !1807, file: !27, line: 230, baseType: !55, size: 2, flags: DIFlagBitField, extraData: i64 0)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "tag1", scope: !1807, file: !27, line: 231, baseType: !55, size: 2, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "tag2", scope: !1807, file: !27, line: 232, baseType: !55, size: 2, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "tag3", scope: !1807, file: !27, line: 233, baseType: !55, size: 2, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "tag4", scope: !1807, file: !27, line: 234, baseType: !55, size: 2, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "tag5", scope: !1807, file: !27, line: 235, baseType: !55, size: 2, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "tag6", scope: !1807, file: !27, line: 236, baseType: !55, size: 2, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "tag7", scope: !1807, file: !27, line: 237, baseType: !55, size: 2, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !1759, file: !27, line: 269, baseType: !28, size: 16, offset: 80)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !1759, file: !27, line: 270, baseType: !8, size: 32, offset: 96)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !1759, file: !27, line: 271, baseType: !1547, size: 16, offset: 128)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd2", scope: !1759, file: !27, line: 272, baseType: !28, size: 16, offset: 144)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "dp", scope: !1759, file: !27, line: 273, baseType: !8, size: 32, offset: 160)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1759, file: !27, line: 274, baseType: !1547, size: 16, offset: 192)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd3", scope: !1759, file: !27, line: 275, baseType: !28, size: 16, offset: 208)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "st", scope: !1759, file: !27, line: 276, baseType: !1825, size: 1024, offset: 224)
!1825 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1826, size: 1024, elements: !1310)
!1826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FPUStackElem", file: !27, line: 162, size: 128, elements: !1827, identifier: "_ZTS12FPUStackElem")
!1827 = !{!1828, !1843}
!1828 = !DIDerivedType(tag: DW_TAG_member, scope: !1826, file: !27, line: 163, baseType: !1829, size: 80)
!1829 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1826, file: !27, line: 163, size: 80, elements: !1830, identifier: "_ZTSN12FPUStackElemUt_E")
!1830 = !{!1831, !1838}
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "st", scope: !1829, file: !27, line: 164, baseType: !1832, size: 80)
!1832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "float80_t", file: !1266, line: 65, size: 80, elements: !1833, identifier: "_ZTS9float80_t")
!1833 = !{!1834}
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1832, file: !1266, line: 66, baseType: !1835, size: 80)
!1835 = !DICompositeType(tag: DW_TAG_array_type, baseType: !62, size: 80, elements: !1836)
!1836 = !{!1837}
!1837 = !DISubrange(count: 10)
!1838 = !DIDerivedType(tag: DW_TAG_member, scope: !1829, file: !27, line: 165, baseType: !1839, size: 80)
!1839 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1829, file: !27, line: 165, size: 80, elements: !1840, identifier: "_ZTSN12FPUStackElemUt_Ut_E")
!1840 = !{!1841, !1842}
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "mmx", scope: !1839, file: !27, line: 166, baseType: !637, size: 64)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "infinity", scope: !1839, file: !27, line: 167, baseType: !28, size: 16, offset: 64)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd", scope: !1826, file: !27, line: 170, baseType: !1844, size: 48, offset: 80)
!1844 = !DICompositeType(tag: DW_TAG_array_type, baseType: !62, size: 48, elements: !1845)
!1845 = !{!1846}
!1846 = !DISubrange(count: 6)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "_padding0", scope: !1756, file: !27, line: 316, baseType: !1848, size: 2848, offset: 1248)
!1848 = !DICompositeType(tag: DW_TAG_array_type, baseType: !62, size: 2848, elements: !1849)
!1849 = !{!1850}
!1850 = !DISubrange(count: 356)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave32", scope: !1753, file: !27, line: 321, baseType: !1852, size: 4096)
!1852 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1753, file: !27, line: 319, size: 4096, elements: !1853, identifier: "_ZTSN3FPUUt0_E")
!1853 = !{!1854, !1910}
!1854 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !1852, baseType: !1855)
!1855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FpuFXSAVE", file: !27, line: 280, size: 3328, elements: !1856, identifier: "_ZTS9FpuFXSAVE")
!1856 = !{!1857, !1858, !1859, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1906, !1907, !1908}
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !1855, file: !27, line: 281, baseType: !1762, size: 16)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !1855, file: !27, line: 282, baseType: !1781, size: 16, offset: 16)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "ftw", scope: !1855, file: !27, line: 283, baseType: !1860, size: 8, offset: 32)
!1860 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "FPUAbridgedTagWord", file: !27, line: 245, size: 8, elements: !1861, identifier: "_ZTS18FPUAbridgedTagWord")
!1861 = !{!1862, !1863}
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "flat", scope: !1860, file: !27, line: 246, baseType: !62, size: 8)
!1863 = !DIDerivedType(tag: DW_TAG_member, scope: !1860, file: !27, line: 247, baseType: !1864, size: 8)
!1864 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1860, file: !27, line: 247, size: 8, elements: !1865, identifier: "_ZTSN18FPUAbridgedTagWordUt_E")
!1865 = !{!1866, !1867, !1868, !1869, !1870, !1871, !1872, !1873}
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !1864, file: !27, line: 248, baseType: !61, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !1864, file: !27, line: 249, baseType: !61, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !1864, file: !27, line: 250, baseType: !61, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !1864, file: !27, line: 251, baseType: !61, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "r4", scope: !1864, file: !27, line: 252, baseType: !61, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "r5", scope: !1864, file: !27, line: 253, baseType: !61, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "r6", scope: !1864, file: !27, line: 254, baseType: !61, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "r7", scope: !1864, file: !27, line: 255, baseType: !61, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd0", scope: !1855, file: !27, line: 284, baseType: !62, size: 8, offset: 40)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !1855, file: !27, line: 285, baseType: !28, size: 16, offset: 48)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !1855, file: !27, line: 286, baseType: !8, size: 32, offset: 64)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !1855, file: !27, line: 287, baseType: !1547, size: 16, offset: 96)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd1", scope: !1855, file: !27, line: 288, baseType: !28, size: 16, offset: 112)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "dp", scope: !1855, file: !27, line: 289, baseType: !8, size: 32, offset: 128)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1855, file: !27, line: 290, baseType: !1547, size: 16, offset: 160)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd2", scope: !1855, file: !27, line: 291, baseType: !28, size: 16, offset: 176)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !1855, file: !27, line: 292, baseType: !1883, size: 32, offset: 192)
!1883 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "FPUControlStatus", file: !27, line: 188, size: 32, elements: !1884, identifier: "_ZTS16FPUControlStatus")
!1884 = !{!1885, !1886}
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "flat", scope: !1883, file: !27, line: 189, baseType: !8, size: 32)
!1886 = !DIDerivedType(tag: DW_TAG_member, scope: !1883, file: !27, line: 190, baseType: !1887, size: 32)
!1887 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1883, file: !27, line: 190, size: 32, elements: !1888, identifier: "_ZTSN16FPUControlStatusUt_E")
!1888 = !{!1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905}
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "ie", scope: !1887, file: !27, line: 191, baseType: !8, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "de", scope: !1887, file: !27, line: 192, baseType: !8, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "ze", scope: !1887, file: !27, line: 193, baseType: !8, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "oe", scope: !1887, file: !27, line: 194, baseType: !8, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "ue", scope: !1887, file: !27, line: 195, baseType: !8, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "pe", scope: !1887, file: !27, line: 196, baseType: !8, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "daz", scope: !1887, file: !27, line: 197, baseType: !8, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "im", scope: !1887, file: !27, line: 198, baseType: !8, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "dm", scope: !1887, file: !27, line: 199, baseType: !8, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "zm", scope: !1887, file: !27, line: 200, baseType: !8, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "om", scope: !1887, file: !27, line: 201, baseType: !8, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "um", scope: !1887, file: !27, line: 202, baseType: !8, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !1887, file: !27, line: 203, baseType: !8, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "rn", scope: !1887, file: !27, line: 204, baseType: !8, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "rp", scope: !1887, file: !27, line: 205, baseType: !8, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "fz", scope: !1887, file: !27, line: 206, baseType: !8, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd", scope: !1887, file: !27, line: 207, baseType: !8, size: 16, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !1855, file: !27, line: 293, baseType: !1883, size: 32, offset: 224)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "st", scope: !1855, file: !27, line: 294, baseType: !1825, size: 1024, offset: 256)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "xmm", scope: !1855, file: !27, line: 295, baseType: !1909, size: 2048, offset: 1280)
!1909 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1287, size: 2048, elements: !1303)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "_padding0", scope: !1852, file: !27, line: 320, baseType: !1911, size: 768, offset: 3328)
!1911 = !DICompositeType(tag: DW_TAG_array_type, baseType: !62, size: 768, elements: !1912)
!1912 = !{!1913}
!1913 = !DISubrange(count: 96)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave64", scope: !1753, file: !27, line: 325, baseType: !1915, size: 4096)
!1915 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1753, file: !27, line: 323, size: 4096, elements: !1916, identifier: "_ZTSN3FPUUt1_E")
!1916 = !{!1917, !1931}
!1917 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !1915, baseType: !1918)
!1918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FpuFXSAVE64", file: !27, line: 299, size: 3328, elements: !1919, identifier: "_ZTS11FpuFXSAVE64")
!1919 = !{!1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930}
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !1918, file: !27, line: 300, baseType: !1762, size: 16)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !1918, file: !27, line: 301, baseType: !1781, size: 16, offset: 16)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "ftw", scope: !1918, file: !27, line: 302, baseType: !1860, size: 8, offset: 32)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd0", scope: !1918, file: !27, line: 303, baseType: !62, size: 8, offset: 40)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !1918, file: !27, line: 304, baseType: !28, size: 16, offset: 48)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !1918, file: !27, line: 305, baseType: !637, size: 64, offset: 64)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "dp", scope: !1918, file: !27, line: 306, baseType: !637, size: 64, offset: 128)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !1918, file: !27, line: 307, baseType: !1883, size: 32, offset: 192)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !1918, file: !27, line: 308, baseType: !1883, size: 32, offset: 224)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "st", scope: !1918, file: !27, line: 309, baseType: !1825, size: 1024, offset: 256)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "xmm", scope: !1918, file: !27, line: 310, baseType: !1909, size: 2048, offset: 1280)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "_padding0", scope: !1915, file: !27, line: 324, baseType: !1911, size: 768, offset: 3328)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "seg_caches", scope: !1268, file: !27, line: 761, baseType: !1933, size: 768, align: 64, offset: 26240)
!1933 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SegmentCaches", file: !27, line: 468, size: 768, align: 64, elements: !1934, identifier: "_ZTS13SegmentCaches")
!1934 = !{!1935, !1945, !1946, !1947, !1948, !1949}
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !1933, file: !27, line: 469, baseType: !1936, size: 128)
!1936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SegmentShadow", file: !27, line: 88, size: 128, elements: !1937, identifier: "_ZTS13SegmentShadow")
!1937 = !{!1938, !1943, !1944}
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1936, file: !27, line: 92, baseType: !1939, size: 64)
!1939 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1936, file: !27, line: 89, size: 64, elements: !1940, identifier: "_ZTSN13SegmentShadowUt_E")
!1940 = !{!1941, !1942}
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "dword", scope: !1939, file: !27, line: 90, baseType: !8, size: 32)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "qword", scope: !1939, file: !27, line: 91, baseType: !637, size: 64)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !1936, file: !27, line: 93, baseType: !8, size: 32, offset: 64)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1936, file: !27, line: 94, baseType: !8, size: 32, offset: 96)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !1933, file: !27, line: 470, baseType: !1936, size: 128, offset: 128)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1933, file: !27, line: 471, baseType: !1936, size: 128, offset: 256)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !1933, file: !27, line: 472, baseType: !1936, size: 128, offset: 384)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1933, file: !27, line: 473, baseType: !1936, size: 128, offset: 512)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "gs", scope: !1933, file: !27, line: 474, baseType: !1936, size: 128, offset: 640)
!1950 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_t", file: !1266, line: 42, baseType: !1951)
!1951 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr64_t", file: !1266, line: 41, baseType: !637)
!1952 = !DILocation(line: 54, column: 8, scope: !1261)
!1953 = !DILocation(line: 55, column: 10, scope: !1261)
!1954 = !DILocation(line: 56, column: 10, scope: !1261)
!1955 = !DILocation(line: 57, column: 10, scope: !1261)
!1956 = !DILocation(line: 58, column: 10, scope: !1261)
!1957 = !DILocation(line: 61, column: 9, scope: !1261)
!1958 = !DILocation(line: 62, column: 9, scope: !1261)
!1959 = !DILocation(line: 63, column: 20, scope: !1261)
!1960 = !DILocation(line: 63, column: 24, scope: !1261)
!1961 = !DILocation(line: 63, column: 28, scope: !1261)
!1962 = !DILocation(line: 69, column: 6, scope: !1261)
!1963 = !DILocation(line: 74, column: 20, scope: !1261)
!1964 = !DILocation(line: 74, column: 24, scope: !1261)
!1965 = !DILocation(line: 74, column: 28, scope: !1261)
!1966 = !DILocation(line: 74, column: 33, scope: !1261)
!1967 = !DILocation(line: 75, column: 20, scope: !1261)
!1968 = !DILocation(line: 75, column: 24, scope: !1261)
!1969 = !DILocation(line: 75, column: 28, scope: !1261)
!1970 = !DILocation(line: 75, column: 33, scope: !1261)
!1971 = !DILocation(line: 76, column: 20, scope: !1261)
!1972 = !DILocation(line: 76, column: 24, scope: !1261)
!1973 = !DILocation(line: 76, column: 28, scope: !1261)
!1974 = !DILocation(line: 76, column: 33, scope: !1261)
!1975 = !DILocation(line: 77, column: 20, scope: !1261)
!1976 = !DILocation(line: 77, column: 24, scope: !1261)
!1977 = !DILocation(line: 77, column: 28, scope: !1261)
!1978 = !DILocation(line: 77, column: 33, scope: !1261)
!1979 = !DILocation(line: 78, column: 20, scope: !1261)
!1980 = !DILocation(line: 78, column: 24, scope: !1261)
!1981 = !DILocation(line: 78, column: 28, scope: !1261)
!1982 = !DILocation(line: 78, column: 33, scope: !1261)
!1983 = !DILocation(line: 79, column: 20, scope: !1261)
!1984 = !DILocation(line: 79, column: 24, scope: !1261)
!1985 = !DILocation(line: 79, column: 28, scope: !1261)
!1986 = !DILocation(line: 79, column: 33, scope: !1261)
!1987 = !DILocation(line: 80, column: 20, scope: !1261)
!1988 = !DILocation(line: 80, column: 24, scope: !1261)
!1989 = !DILocation(line: 80, column: 28, scope: !1261)
!1990 = !DILocation(line: 80, column: 33, scope: !1261)
!1991 = !DILocation(line: 81, column: 20, scope: !1261)
!1992 = !DILocation(line: 81, column: 24, scope: !1261)
!1993 = !DILocation(line: 81, column: 28, scope: !1261)
!1994 = !DILocation(line: 81, column: 33, scope: !1261)
!1995 = !DILocation(line: 83, column: 21, scope: !1261)
!1996 = !DILocation(line: 83, column: 25, scope: !1261)
!1997 = !DILocation(line: 83, column: 29, scope: !1261)
!1998 = !DILocation(line: 83, column: 34, scope: !1261)
!1999 = !DILocation(line: 84, column: 21, scope: !1261)
!2000 = !DILocation(line: 84, column: 25, scope: !1261)
!2001 = !DILocation(line: 84, column: 29, scope: !1261)
!2002 = !DILocation(line: 84, column: 34, scope: !1261)
!2003 = !DILocation(line: 85, column: 21, scope: !1261)
!2004 = !DILocation(line: 85, column: 25, scope: !1261)
!2005 = !DILocation(line: 85, column: 29, scope: !1261)
!2006 = !DILocation(line: 85, column: 34, scope: !1261)
!2007 = !DILocation(line: 86, column: 21, scope: !1261)
!2008 = !DILocation(line: 86, column: 25, scope: !1261)
!2009 = !DILocation(line: 86, column: 29, scope: !1261)
!2010 = !DILocation(line: 86, column: 34, scope: !1261)
!2011 = !DILocation(line: 87, column: 21, scope: !1261)
!2012 = !DILocation(line: 87, column: 25, scope: !1261)
!2013 = !DILocation(line: 87, column: 28, scope: !1261)
!2014 = !DILocation(line: 87, column: 33, scope: !1261)
!2015 = !DILocation(line: 88, column: 21, scope: !1261)
!2016 = !DILocation(line: 88, column: 25, scope: !1261)
!2017 = !DILocation(line: 88, column: 28, scope: !1261)
!2018 = !DILocation(line: 88, column: 33, scope: !1261)
!2019 = !DILocation(line: 89, column: 22, scope: !1261)
!2020 = !DILocation(line: 89, column: 26, scope: !1261)
!2021 = !DILocation(line: 89, column: 30, scope: !1261)
!2022 = !DILocation(line: 89, column: 35, scope: !1261)
!2023 = !DILocation(line: 90, column: 22, scope: !1261)
!2024 = !DILocation(line: 90, column: 26, scope: !1261)
!2025 = !DILocation(line: 90, column: 30, scope: !1261)
!2026 = !DILocation(line: 90, column: 35, scope: !1261)
!2027 = !DILocation(line: 91, column: 22, scope: !1261)
!2028 = !DILocation(line: 91, column: 26, scope: !1261)
!2029 = !DILocation(line: 91, column: 30, scope: !1261)
!2030 = !DILocation(line: 91, column: 35, scope: !1261)
!2031 = !DILocation(line: 92, column: 22, scope: !1261)
!2032 = !DILocation(line: 92, column: 26, scope: !1261)
!2033 = !DILocation(line: 92, column: 30, scope: !1261)
!2034 = !DILocation(line: 92, column: 35, scope: !1261)
!2035 = !DILocation(line: 93, column: 22, scope: !1261)
!2036 = !DILocation(line: 93, column: 26, scope: !1261)
!2037 = !DILocation(line: 93, column: 30, scope: !1261)
!2038 = !DILocation(line: 93, column: 35, scope: !1261)
!2039 = !DILocation(line: 94, column: 22, scope: !1261)
!2040 = !DILocation(line: 94, column: 26, scope: !1261)
!2041 = !DILocation(line: 94, column: 30, scope: !1261)
!2042 = !DILocation(line: 94, column: 35, scope: !1261)
!2043 = !DILocation(line: 96, column: 20, scope: !1261)
!2044 = !DILocation(line: 96, column: 24, scope: !1261)
!2045 = !DILocation(line: 96, column: 28, scope: !1261)
!2046 = !DILocation(line: 97, column: 20, scope: !1261)
!2047 = !DILocation(line: 97, column: 24, scope: !1261)
!2048 = !DILocation(line: 97, column: 28, scope: !1261)
!2049 = !DILocation(line: 98, column: 20, scope: !1261)
!2050 = !DILocation(line: 98, column: 24, scope: !1261)
!2051 = !DILocation(line: 98, column: 28, scope: !1261)
!2052 = !DILocation(line: 99, column: 20, scope: !1261)
!2053 = !DILocation(line: 99, column: 24, scope: !1261)
!2054 = !DILocation(line: 99, column: 28, scope: !1261)
!2055 = !DILocation(line: 100, column: 20, scope: !1261)
!2056 = !DILocation(line: 100, column: 24, scope: !1261)
!2057 = !DILocation(line: 100, column: 28, scope: !1261)
!2058 = !DILocation(line: 101, column: 20, scope: !1261)
!2059 = !DILocation(line: 101, column: 24, scope: !1261)
!2060 = !DILocation(line: 101, column: 28, scope: !1261)
!2061 = !DILocation(line: 102, column: 20, scope: !1261)
!2062 = !DILocation(line: 102, column: 24, scope: !1261)
!2063 = !DILocation(line: 102, column: 28, scope: !1261)
!2064 = !DILocation(line: 103, column: 20, scope: !1261)
!2065 = !DILocation(line: 103, column: 24, scope: !1261)
!2066 = !DILocation(line: 103, column: 28, scope: !1261)
!2067 = !DILocation(line: 105, column: 21, scope: !1261)
!2068 = !DILocation(line: 105, column: 25, scope: !1261)
!2069 = !DILocation(line: 105, column: 28, scope: !1261)
!2070 = !DILocation(line: 106, column: 21, scope: !1261)
!2071 = !DILocation(line: 106, column: 25, scope: !1261)
!2072 = !DILocation(line: 106, column: 28, scope: !1261)
!2073 = !DILocation(line: 107, column: 22, scope: !1261)
!2074 = !DILocation(line: 107, column: 26, scope: !1261)
!2075 = !DILocation(line: 107, column: 30, scope: !1261)
!2076 = !DILocation(line: 108, column: 22, scope: !1261)
!2077 = !DILocation(line: 108, column: 26, scope: !1261)
!2078 = !DILocation(line: 108, column: 30, scope: !1261)
!2079 = !DILocation(line: 109, column: 22, scope: !1261)
!2080 = !DILocation(line: 109, column: 26, scope: !1261)
!2081 = !DILocation(line: 109, column: 30, scope: !1261)
!2082 = !DILocation(line: 110, column: 22, scope: !1261)
!2083 = !DILocation(line: 110, column: 26, scope: !1261)
!2084 = !DILocation(line: 110, column: 30, scope: !1261)
!2085 = !DILocation(line: 111, column: 22, scope: !1261)
!2086 = !DILocation(line: 111, column: 26, scope: !1261)
!2087 = !DILocation(line: 111, column: 30, scope: !1261)
!2088 = !DILocation(line: 112, column: 22, scope: !1261)
!2089 = !DILocation(line: 112, column: 26, scope: !1261)
!2090 = !DILocation(line: 112, column: 30, scope: !1261)
!2091 = !DILocation(line: 114, column: 20, scope: !1261)
!2092 = !DILocation(line: 114, column: 24, scope: !1261)
!2093 = !DILocation(line: 114, column: 28, scope: !1261)
!2094 = !DILocation(line: 116, column: 21, scope: !1261)
!2095 = !DILocation(line: 116, column: 25, scope: !1261)
!2096 = !DILocation(line: 116, column: 29, scope: !1261)
!2097 = !DILocation(line: 117, column: 21, scope: !1261)
!2098 = !DILocation(line: 117, column: 25, scope: !1261)
!2099 = !DILocation(line: 117, column: 29, scope: !1261)
!2100 = !DILocation(line: 118, column: 21, scope: !1261)
!2101 = !DILocation(line: 118, column: 25, scope: !1261)
!2102 = !DILocation(line: 118, column: 29, scope: !1261)
!2103 = !DILocation(line: 119, column: 21, scope: !1261)
!2104 = !DILocation(line: 119, column: 25, scope: !1261)
!2105 = !DILocation(line: 119, column: 29, scope: !1261)
!2106 = !DILocation(line: 120, column: 21, scope: !1261)
!2107 = !DILocation(line: 120, column: 25, scope: !1261)
!2108 = !DILocation(line: 120, column: 29, scope: !1261)
!2109 = !DILocation(line: 121, column: 21, scope: !1261)
!2110 = !DILocation(line: 121, column: 25, scope: !1261)
!2111 = !DILocation(line: 121, column: 29, scope: !1261)
!2112 = !DILocation(line: 122, column: 21, scope: !1261)
!2113 = !DILocation(line: 122, column: 25, scope: !1261)
!2114 = !DILocation(line: 122, column: 29, scope: !1261)
!2115 = !DILocation(line: 123, column: 21, scope: !1261)
!2116 = !DILocation(line: 123, column: 25, scope: !1261)
!2117 = !DILocation(line: 123, column: 29, scope: !1261)
!2118 = !DILocation(line: 124, column: 21, scope: !1261)
!2119 = !DILocation(line: 124, column: 25, scope: !1261)
!2120 = !DILocation(line: 124, column: 29, scope: !1261)
!2121 = !DILocation(line: 127, column: 21, scope: !1261)
!2122 = !DILocation(line: 127, column: 25, scope: !1261)
!2123 = !DILocation(line: 127, column: 28, scope: !1261)
!2124 = !DILocation(line: 128, column: 21, scope: !1261)
!2125 = !DILocation(line: 128, column: 25, scope: !1261)
!2126 = !DILocation(line: 128, column: 28, scope: !1261)
!2127 = !DILocation(line: 129, column: 22, scope: !1261)
!2128 = !DILocation(line: 129, column: 26, scope: !1261)
!2129 = !DILocation(line: 129, column: 30, scope: !1261)
!2130 = !DILocation(line: 130, column: 22, scope: !1261)
!2131 = !DILocation(line: 130, column: 26, scope: !1261)
!2132 = !DILocation(line: 130, column: 30, scope: !1261)
!2133 = !DILocation(line: 131, column: 22, scope: !1261)
!2134 = !DILocation(line: 131, column: 26, scope: !1261)
!2135 = !DILocation(line: 131, column: 30, scope: !1261)
!2136 = !DILocation(line: 132, column: 22, scope: !1261)
!2137 = !DILocation(line: 132, column: 26, scope: !1261)
!2138 = !DILocation(line: 132, column: 30, scope: !1261)
!2139 = !DILocation(line: 133, column: 22, scope: !1261)
!2140 = !DILocation(line: 133, column: 26, scope: !1261)
!2141 = !DILocation(line: 133, column: 30, scope: !1261)
!2142 = !DILocation(line: 134, column: 22, scope: !1261)
!2143 = !DILocation(line: 134, column: 26, scope: !1261)
!2144 = !DILocation(line: 134, column: 30, scope: !1261)
!2145 = !DILocation(line: 136, column: 21, scope: !1261)
!2146 = !DILocation(line: 136, column: 25, scope: !1261)
!2147 = !DILocation(line: 136, column: 29, scope: !1261)
!2148 = !DILocation(line: 137, column: 21, scope: !1261)
!2149 = !DILocation(line: 137, column: 25, scope: !1261)
!2150 = !DILocation(line: 137, column: 29, scope: !1261)
!2151 = !DILocation(line: 138, column: 21, scope: !1261)
!2152 = !DILocation(line: 138, column: 25, scope: !1261)
!2153 = !DILocation(line: 138, column: 29, scope: !1261)
!2154 = !DILocation(line: 139, column: 21, scope: !1261)
!2155 = !DILocation(line: 139, column: 25, scope: !1261)
!2156 = !DILocation(line: 139, column: 29, scope: !1261)
!2157 = !DILocation(line: 140, column: 21, scope: !1261)
!2158 = !DILocation(line: 140, column: 25, scope: !1261)
!2159 = !DILocation(line: 140, column: 29, scope: !1261)
!2160 = !DILocation(line: 141, column: 21, scope: !1261)
!2161 = !DILocation(line: 141, column: 25, scope: !1261)
!2162 = !DILocation(line: 141, column: 29, scope: !1261)
!2163 = !DILocation(line: 142, column: 21, scope: !1261)
!2164 = !DILocation(line: 142, column: 25, scope: !1261)
!2165 = !DILocation(line: 142, column: 29, scope: !1261)
!2166 = !DILocation(line: 143, column: 21, scope: !1261)
!2167 = !DILocation(line: 143, column: 25, scope: !1261)
!2168 = !DILocation(line: 143, column: 29, scope: !1261)
!2169 = !DILocation(line: 144, column: 20, scope: !1261)
!2170 = !DILocation(line: 144, column: 24, scope: !1261)
!2171 = !DILocation(line: 144, column: 27, scope: !1261)
!2172 = !DILocation(line: 145, column: 20, scope: !1261)
!2173 = !DILocation(line: 145, column: 24, scope: !1261)
!2174 = !DILocation(line: 145, column: 27, scope: !1261)
!2175 = !DILocation(line: 146, column: 21, scope: !1261)
!2176 = !DILocation(line: 146, column: 25, scope: !1261)
!2177 = !DILocation(line: 146, column: 29, scope: !1261)
!2178 = !DILocation(line: 147, column: 21, scope: !1261)
!2179 = !DILocation(line: 147, column: 25, scope: !1261)
!2180 = !DILocation(line: 147, column: 29, scope: !1261)
!2181 = !DILocation(line: 148, column: 21, scope: !1261)
!2182 = !DILocation(line: 148, column: 25, scope: !1261)
!2183 = !DILocation(line: 148, column: 29, scope: !1261)
!2184 = !DILocation(line: 149, column: 21, scope: !1261)
!2185 = !DILocation(line: 149, column: 25, scope: !1261)
!2186 = !DILocation(line: 149, column: 29, scope: !1261)
!2187 = !DILocation(line: 150, column: 21, scope: !1261)
!2188 = !DILocation(line: 150, column: 25, scope: !1261)
!2189 = !DILocation(line: 150, column: 29, scope: !1261)
!2190 = !DILocation(line: 151, column: 21, scope: !1261)
!2191 = !DILocation(line: 151, column: 25, scope: !1261)
!2192 = !DILocation(line: 151, column: 29, scope: !1261)
!2193 = !DILocation(line: 152, column: 21, scope: !1261)
!2194 = !DILocation(line: 152, column: 25, scope: !1261)
!2195 = !DILocation(line: 152, column: 29, scope: !1261)
!2196 = !DILocation(line: 155, column: 20, scope: !1261)
!2197 = !DILocation(line: 155, column: 24, scope: !1261)
!2198 = !DILocation(line: 155, column: 27, scope: !1261)
!2199 = !DILocation(line: 156, column: 20, scope: !1261)
!2200 = !DILocation(line: 156, column: 24, scope: !1261)
!2201 = !DILocation(line: 156, column: 27, scope: !1261)
!2202 = !DILocation(line: 157, column: 20, scope: !1261)
!2203 = !DILocation(line: 157, column: 24, scope: !1261)
!2204 = !DILocation(line: 157, column: 27, scope: !1261)
!2205 = !DILocation(line: 158, column: 20, scope: !1261)
!2206 = !DILocation(line: 158, column: 24, scope: !1261)
!2207 = !DILocation(line: 158, column: 27, scope: !1261)
!2208 = !DILocation(line: 159, column: 20, scope: !1261)
!2209 = !DILocation(line: 159, column: 24, scope: !1261)
!2210 = !DILocation(line: 159, column: 27, scope: !1261)
!2211 = !DILocation(line: 160, column: 20, scope: !1261)
!2212 = !DILocation(line: 160, column: 24, scope: !1261)
!2213 = !DILocation(line: 160, column: 27, scope: !1261)
!2214 = !DILocation(line: 164, column: 25, scope: !1261)
!2215 = !DILocation(line: 164, column: 30, scope: !1261)
!2216 = !DILocation(line: 164, column: 38, scope: !1261)
!2217 = !DILocation(line: 165, column: 25, scope: !1261)
!2218 = !DILocation(line: 165, column: 30, scope: !1261)
!2219 = !DILocation(line: 165, column: 38, scope: !1261)
!2220 = !DILocation(line: 205, column: 22, scope: !1261)
!2221 = !DILocation(line: 205, column: 16, scope: !1261)
!2222 = !DILocation(line: 205, column: 29, scope: !1261)
!2223 = !DILocation(line: 206, column: 22, scope: !1261)
!2224 = !DILocation(line: 206, column: 16, scope: !1261)
!2225 = !DILocation(line: 206, column: 29, scope: !1261)
!2226 = !DILocation(line: 207, column: 22, scope: !1261)
!2227 = !DILocation(line: 207, column: 16, scope: !1261)
!2228 = !DILocation(line: 207, column: 29, scope: !1261)
!2229 = !DILocation(line: 208, column: 22, scope: !1261)
!2230 = !DILocation(line: 208, column: 16, scope: !1261)
!2231 = !DILocation(line: 208, column: 29, scope: !1261)
!2232 = !DILocation(line: 209, column: 22, scope: !1261)
!2233 = !DILocation(line: 209, column: 16, scope: !1261)
!2234 = !DILocation(line: 209, column: 29, scope: !1261)
!2235 = !DILocation(line: 210, column: 22, scope: !1261)
!2236 = !DILocation(line: 210, column: 16, scope: !1261)
!2237 = !DILocation(line: 210, column: 29, scope: !1261)
!2238 = !DILocation(line: 211, column: 22, scope: !1261)
!2239 = !DILocation(line: 211, column: 16, scope: !1261)
!2240 = !DILocation(line: 211, column: 29, scope: !1261)
!2241 = !DILocation(line: 212, column: 22, scope: !1261)
!2242 = !DILocation(line: 212, column: 16, scope: !1261)
!2243 = !DILocation(line: 212, column: 29, scope: !1261)
!2244 = !DILocation(line: 214, column: 22, scope: !1261)
!2245 = !DILocation(line: 214, column: 16, scope: !1261)
!2246 = !DILocation(line: 214, column: 29, scope: !1261)
!2247 = !DILocation(line: 215, column: 22, scope: !1261)
!2248 = !DILocation(line: 215, column: 16, scope: !1261)
!2249 = !DILocation(line: 215, column: 29, scope: !1261)
!2250 = !DILocation(line: 216, column: 23, scope: !1261)
!2251 = !DILocation(line: 216, column: 17, scope: !1261)
!2252 = !DILocation(line: 216, column: 31, scope: !1261)
!2253 = !DILocation(line: 217, column: 23, scope: !1261)
!2254 = !DILocation(line: 217, column: 17, scope: !1261)
!2255 = !DILocation(line: 217, column: 31, scope: !1261)
!2256 = !DILocation(line: 218, column: 23, scope: !1261)
!2257 = !DILocation(line: 218, column: 17, scope: !1261)
!2258 = !DILocation(line: 218, column: 31, scope: !1261)
!2259 = !DILocation(line: 219, column: 23, scope: !1261)
!2260 = !DILocation(line: 219, column: 17, scope: !1261)
!2261 = !DILocation(line: 219, column: 31, scope: !1261)
!2262 = !DILocation(line: 220, column: 23, scope: !1261)
!2263 = !DILocation(line: 220, column: 17, scope: !1261)
!2264 = !DILocation(line: 220, column: 31, scope: !1261)
!2265 = !DILocation(line: 221, column: 23, scope: !1261)
!2266 = !DILocation(line: 221, column: 17, scope: !1261)
!2267 = !DILocation(line: 221, column: 31, scope: !1261)
!2268 = !DILocation(line: 245, column: 22, scope: !1261)
!2269 = !DILocation(line: 245, column: 16, scope: !1261)
!2270 = !DILocation(line: 245, column: 29, scope: !1261)
!2271 = !DILocation(line: 246, column: 22, scope: !1261)
!2272 = !DILocation(line: 246, column: 16, scope: !1261)
!2273 = !DILocation(line: 246, column: 29, scope: !1261)
!2274 = !DILocation(line: 247, column: 22, scope: !1261)
!2275 = !DILocation(line: 247, column: 16, scope: !1261)
!2276 = !DILocation(line: 247, column: 29, scope: !1261)
!2277 = !DILocation(line: 248, column: 22, scope: !1261)
!2278 = !DILocation(line: 248, column: 16, scope: !1261)
!2279 = !DILocation(line: 248, column: 29, scope: !1261)
!2280 = !DILocation(line: 249, column: 22, scope: !1261)
!2281 = !DILocation(line: 249, column: 16, scope: !1261)
!2282 = !DILocation(line: 249, column: 29, scope: !1261)
!2283 = !DILocation(line: 250, column: 22, scope: !1261)
!2284 = !DILocation(line: 250, column: 16, scope: !1261)
!2285 = !DILocation(line: 250, column: 29, scope: !1261)
!2286 = !DILocation(line: 251, column: 22, scope: !1261)
!2287 = !DILocation(line: 251, column: 16, scope: !1261)
!2288 = !DILocation(line: 251, column: 29, scope: !1261)
!2289 = !DILocation(line: 252, column: 22, scope: !1261)
!2290 = !DILocation(line: 252, column: 16, scope: !1261)
!2291 = !DILocation(line: 252, column: 29, scope: !1261)
!2292 = !DILocation(line: 255, column: 22, scope: !1261)
!2293 = !DILocation(line: 255, column: 16, scope: !1261)
!2294 = !DILocation(line: 255, column: 29, scope: !1261)
!2295 = !DILocation(line: 256, column: 22, scope: !1261)
!2296 = !DILocation(line: 256, column: 16, scope: !1261)
!2297 = !DILocation(line: 256, column: 29, scope: !1261)
!2298 = !DILocation(line: 257, column: 23, scope: !1261)
!2299 = !DILocation(line: 257, column: 17, scope: !1261)
!2300 = !DILocation(line: 257, column: 31, scope: !1261)
!2301 = !DILocation(line: 258, column: 23, scope: !1261)
!2302 = !DILocation(line: 258, column: 17, scope: !1261)
!2303 = !DILocation(line: 258, column: 31, scope: !1261)
!2304 = !DILocation(line: 259, column: 23, scope: !1261)
!2305 = !DILocation(line: 259, column: 17, scope: !1261)
!2306 = !DILocation(line: 259, column: 31, scope: !1261)
!2307 = !DILocation(line: 260, column: 23, scope: !1261)
!2308 = !DILocation(line: 260, column: 17, scope: !1261)
!2309 = !DILocation(line: 260, column: 31, scope: !1261)
!2310 = !DILocation(line: 261, column: 23, scope: !1261)
!2311 = !DILocation(line: 261, column: 17, scope: !1261)
!2312 = !DILocation(line: 261, column: 31, scope: !1261)
!2313 = !DILocation(line: 262, column: 23, scope: !1261)
!2314 = !DILocation(line: 262, column: 17, scope: !1261)
!2315 = !DILocation(line: 262, column: 31, scope: !1261)
!2316 = !DILocation(line: 285, column: 21, scope: !1261)
!2317 = !DILocation(line: 285, column: 24, scope: !1261)
!2318 = !DILocation(line: 285, column: 15, scope: !1261)
!2319 = !DILocation(line: 285, column: 33, scope: !1261)
!2320 = !DILocation(line: 286, column: 21, scope: !1261)
!2321 = !DILocation(line: 286, column: 24, scope: !1261)
!2322 = !DILocation(line: 286, column: 15, scope: !1261)
!2323 = !DILocation(line: 286, column: 33, scope: !1261)
!2324 = !DILocation(line: 287, column: 21, scope: !1261)
!2325 = !DILocation(line: 287, column: 24, scope: !1261)
!2326 = !DILocation(line: 287, column: 15, scope: !1261)
!2327 = !DILocation(line: 287, column: 33, scope: !1261)
!2328 = !DILocation(line: 288, column: 21, scope: !1261)
!2329 = !DILocation(line: 288, column: 24, scope: !1261)
!2330 = !DILocation(line: 288, column: 15, scope: !1261)
!2331 = !DILocation(line: 288, column: 33, scope: !1261)
!2332 = !DILocation(line: 289, column: 21, scope: !1261)
!2333 = !DILocation(line: 289, column: 24, scope: !1261)
!2334 = !DILocation(line: 289, column: 15, scope: !1261)
!2335 = !DILocation(line: 289, column: 33, scope: !1261)
!2336 = !DILocation(line: 290, column: 21, scope: !1261)
!2337 = !DILocation(line: 290, column: 24, scope: !1261)
!2338 = !DILocation(line: 290, column: 15, scope: !1261)
!2339 = !DILocation(line: 290, column: 33, scope: !1261)
!2340 = !DILocation(line: 291, column: 21, scope: !1261)
!2341 = !DILocation(line: 291, column: 24, scope: !1261)
!2342 = !DILocation(line: 291, column: 15, scope: !1261)
!2343 = !DILocation(line: 291, column: 33, scope: !1261)
!2344 = !DILocation(line: 292, column: 21, scope: !1261)
!2345 = !DILocation(line: 292, column: 24, scope: !1261)
!2346 = !DILocation(line: 292, column: 15, scope: !1261)
!2347 = !DILocation(line: 292, column: 33, scope: !1261)
!2348 = !DILocation(line: 318, column: 21, scope: !1261)
!2349 = !DILocation(line: 318, column: 25, scope: !1261)
!2350 = !DILocation(line: 318, column: 15, scope: !1261)
!2351 = !DILocation(line: 318, column: 34, scope: !1261)
!2352 = !DILocation(line: 318, column: 38, scope: !1261)
!2353 = !DILocation(line: 318, column: 45, scope: !1261)
!2354 = !DILocation(line: 319, column: 21, scope: !1261)
!2355 = !DILocation(line: 319, column: 25, scope: !1261)
!2356 = !DILocation(line: 319, column: 15, scope: !1261)
!2357 = !DILocation(line: 319, column: 34, scope: !1261)
!2358 = !DILocation(line: 319, column: 38, scope: !1261)
!2359 = !DILocation(line: 319, column: 45, scope: !1261)
!2360 = !DILocation(line: 320, column: 21, scope: !1261)
!2361 = !DILocation(line: 320, column: 25, scope: !1261)
!2362 = !DILocation(line: 320, column: 15, scope: !1261)
!2363 = !DILocation(line: 320, column: 34, scope: !1261)
!2364 = !DILocation(line: 320, column: 38, scope: !1261)
!2365 = !DILocation(line: 320, column: 45, scope: !1261)
!2366 = !DILocation(line: 321, column: 21, scope: !1261)
!2367 = !DILocation(line: 321, column: 25, scope: !1261)
!2368 = !DILocation(line: 321, column: 15, scope: !1261)
!2369 = !DILocation(line: 321, column: 34, scope: !1261)
!2370 = !DILocation(line: 321, column: 38, scope: !1261)
!2371 = !DILocation(line: 321, column: 45, scope: !1261)
!2372 = !DILocation(line: 322, column: 21, scope: !1261)
!2373 = !DILocation(line: 322, column: 25, scope: !1261)
!2374 = !DILocation(line: 322, column: 15, scope: !1261)
!2375 = !DILocation(line: 322, column: 34, scope: !1261)
!2376 = !DILocation(line: 322, column: 38, scope: !1261)
!2377 = !DILocation(line: 322, column: 45, scope: !1261)
!2378 = !DILocation(line: 323, column: 21, scope: !1261)
!2379 = !DILocation(line: 323, column: 25, scope: !1261)
!2380 = !DILocation(line: 323, column: 15, scope: !1261)
!2381 = !DILocation(line: 323, column: 34, scope: !1261)
!2382 = !DILocation(line: 323, column: 38, scope: !1261)
!2383 = !DILocation(line: 323, column: 45, scope: !1261)
!2384 = !DILocation(line: 324, column: 21, scope: !1261)
!2385 = !DILocation(line: 324, column: 25, scope: !1261)
!2386 = !DILocation(line: 324, column: 15, scope: !1261)
!2387 = !DILocation(line: 324, column: 34, scope: !1261)
!2388 = !DILocation(line: 324, column: 38, scope: !1261)
!2389 = !DILocation(line: 324, column: 45, scope: !1261)
!2390 = !DILocation(line: 325, column: 21, scope: !1261)
!2391 = !DILocation(line: 325, column: 25, scope: !1261)
!2392 = !DILocation(line: 325, column: 15, scope: !1261)
!2393 = !DILocation(line: 325, column: 34, scope: !1261)
!2394 = !DILocation(line: 325, column: 38, scope: !1261)
!2395 = !DILocation(line: 325, column: 45, scope: !1261)
!2396 = !DILocation(line: 328, column: 20, scope: !1261)
!2397 = !DILocation(line: 328, column: 26, scope: !1261)
!2398 = !DILocation(line: 329, column: 20, scope: !1261)
!2399 = !DILocation(line: 329, column: 26, scope: !1261)
!2400 = !DILocation(line: 330, column: 20, scope: !1261)
!2401 = !DILocation(line: 330, column: 26, scope: !1261)
!2402 = !DILocation(line: 331, column: 20, scope: !1261)
!2403 = !DILocation(line: 331, column: 26, scope: !1261)
!2404 = !DILocation(line: 332, column: 20, scope: !1261)
!2405 = !DILocation(line: 332, column: 26, scope: !1261)
!2406 = !DILocation(line: 333, column: 20, scope: !1261)
!2407 = !DILocation(line: 333, column: 26, scope: !1261)
!2408 = !DILocation(line: 334, column: 20, scope: !1261)
!2409 = !DILocation(line: 334, column: 26, scope: !1261)
!2410 = !DILocation(line: 337, column: 9, scope: !1261)
!2411 = !DILocation(line: 338, column: 9, scope: !1261)
!2412 = !DILocation(line: 339, column: 9, scope: !1261)
!2413 = !DILocation(line: 340, column: 9, scope: !1261)
!2414 = !DILocation(line: 341, column: 9, scope: !1261)
!2415 = !DILocation(line: 342, column: 9, scope: !1261)
!2416 = !DILocation(line: 343, column: 9, scope: !1261)
!2417 = !DILocation(line: 344, column: 9, scope: !1261)
!2418 = !DILocation(line: 347, column: 9, scope: !1261)
!2419 = !DILocation(line: 348, column: 9, scope: !1261)
!2420 = !DILocation(line: 349, column: 9, scope: !1261)
!2421 = !DILocation(line: 350, column: 9, scope: !1261)
!2422 = !DILocation(line: 351, column: 9, scope: !1261)
!2423 = !DILocation(line: 353, column: 9, scope: !1261)
!2424 = !DILocation(line: 357, column: 3, scope: !1261)
!2425 = distinct !DISubprogram(name: "__remill_intrinsics", scope: !2426, file: !2426, line: 35, type: !95, isLocal: false, isDefinition: true, scopeLine: 35, flags: DIFlagPrototyped, isOptimized: false, unit: !1, variables: !7)
!2426 = !DIFile(filename: "/home/ubuntu/Github/remill/remill/Arch/Runtime/Intrinsics.cpp", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!2427 = !DILocation(line: 116, column: 1, scope: !2425)
!2428 = !{!2429, !2429, i64 0}
!2429 = !{!"long", !2430, i64 0}
!2430 = !{!"omnipotent char", !2431, i64 0}
!2431 = !{!"Simple C++ TBAA"}
!2432 = !{!2433, !2430, i64 2065}
!2433 = !{!"_ZTS5State", !2430, i64 16, !2434, i64 2064, !2430, i64 2080, !2435, i64 2088, !2437, i64 2112, !2439, i64 2208, !2440, i64 2480, !2441, i64 2608, !2442, i64 2736, !2430, i64 2760, !2430, i64 2768, !2443, i64 3280}
!2434 = !{!"_ZTS10ArithFlags", !2430, i64 0, !2430, i64 1, !2430, i64 2, !2430, i64 3, !2430, i64 4, !2430, i64 5, !2430, i64 6, !2430, i64 7, !2430, i64 8, !2430, i64 9, !2430, i64 10, !2430, i64 11, !2430, i64 12, !2430, i64 13, !2430, i64 14, !2430, i64 15}
!2435 = !{!"_ZTS8Segments", !2436, i64 0, !2430, i64 2, !2436, i64 4, !2430, i64 6, !2436, i64 8, !2430, i64 10, !2436, i64 12, !2430, i64 14, !2436, i64 16, !2430, i64 18, !2436, i64 20, !2430, i64 22}
!2436 = !{!"short", !2430, i64 0}
!2437 = !{!"_ZTS12AddressSpace", !2429, i64 0, !2438, i64 8, !2429, i64 16, !2438, i64 24, !2429, i64 32, !2438, i64 40, !2429, i64 48, !2438, i64 56, !2429, i64 64, !2438, i64 72, !2429, i64 80, !2438, i64 88}
!2438 = !{!"_ZTS3Reg", !2430, i64 0}
!2439 = !{!"_ZTS3GPR", !2429, i64 0, !2438, i64 8, !2429, i64 16, !2438, i64 24, !2429, i64 32, !2438, i64 40, !2429, i64 48, !2438, i64 56, !2429, i64 64, !2438, i64 72, !2429, i64 80, !2438, i64 88, !2429, i64 96, !2438, i64 104, !2429, i64 112, !2438, i64 120, !2429, i64 128, !2438, i64 136, !2429, i64 144, !2438, i64 152, !2429, i64 160, !2438, i64 168, !2429, i64 176, !2438, i64 184, !2429, i64 192, !2438, i64 200, !2429, i64 208, !2438, i64 216, !2429, i64 224, !2438, i64 232, !2429, i64 240, !2438, i64 248, !2429, i64 256, !2438, i64 264}
!2440 = !{!"_ZTS8X87Stack", !2430, i64 0}
!2441 = !{!"_ZTS3MMX", !2430, i64 0}
!2442 = !{!"_ZTS14FPUStatusFlags", !2430, i64 0, !2430, i64 1, !2430, i64 2, !2430, i64 3, !2430, i64 4, !2430, i64 5, !2430, i64 6, !2430, i64 7, !2430, i64 8, !2430, i64 9, !2430, i64 10, !2430, i64 11, !2430, i64 12, !2430, i64 13, !2430, i64 14, !2430, i64 15, !2430, i64 16, !2430, i64 17, !2430, i64 18, !2430, i64 19, !2430, i64 20}
!2443 = !{!"_ZTS13SegmentCaches", !2444, i64 0, !2444, i64 16, !2444, i64 32, !2444, i64 48, !2444, i64 64, !2444, i64 80}
!2444 = !{!"_ZTS13SegmentShadow", !2430, i64 0, !2445, i64 8, !2445, i64 12}
!2445 = !{!"int", !2430, i64 0}
!2446 = !{!2433, !2430, i64 2067}
!2447 = !{!2433, !2430, i64 2071}
!2448 = !{!2433, !2430, i64 2073}
!2449 = !{!2433, !2430, i64 2077}
!2450 = !{!2433, !2430, i64 2069}
!2451 = !{!2452, !2452, i64 0}
!2452 = !{!"double", !2430, i64 0}
!2453 = !{!2430, !2430, i64 0}
!2454 = !{!2455, !2457}
!2455 = distinct !{!2455, !2456, !"ext_602140_sqrt: argument 0"}
!2456 = distinct !{!2456, !"ext_602140_sqrt"}
!2457 = distinct !{!2457, !2456, !"ext_602140_sqrt: argument 1"}
!2458 = !{!2455}
!2459 = !{!2457}
!2460 = !{!2461, !2461, i64 0}
!2461 = !{!"float", !2430, i64 0}
!2462 = !{!2463, !2465}
!2463 = distinct !{!2463, !2464, !"ext_400700_sin: argument 0"}
!2464 = distinct !{!2464, !"ext_400700_sin"}
!2465 = distinct !{!2465, !2464, !"ext_400700_sin: argument 1"}
!2466 = !{!2463}
!2467 = !{!2465}
!2468 = !{!2469, !2471}
!2469 = distinct !{!2469, !2470, !"ext_602110_cos: argument 0"}
!2470 = distinct !{!2470, !"ext_602110_cos"}
!2471 = distinct !{!2471, !2470, !"ext_602110_cos: argument 1"}
!2472 = !{!2469}
!2473 = !{!2471}
!2474 = !{!2475, !2477}
!2475 = distinct !{!2475, !2476, !"ext_602110_cos: argument 0"}
!2476 = distinct !{!2476, !"ext_602110_cos"}
!2477 = distinct !{!2477, !2476, !"ext_602110_cos: argument 1"}
!2478 = !{!2475}
!2479 = !{!2477}
!2480 = !{!2481, !2483}
!2481 = distinct !{!2481, !2482, !"ext_602110_cos: argument 0"}
!2482 = distinct !{!2482, !"ext_602110_cos"}
!2483 = distinct !{!2483, !2482, !"ext_602110_cos: argument 1"}
!2484 = !{!2481}
!2485 = !{!2483}
!2486 = !{!2487, !2489}
!2487 = distinct !{!2487, !2488, !"ext_6020f8_atan: argument 0"}
!2488 = distinct !{!2488, !"ext_6020f8_atan"}
!2489 = distinct !{!2489, !2488, !"ext_6020f8_atan: argument 1"}
!2490 = !{!2487}
!2491 = !{!2489}
!2492 = !{!2493, !2495}
!2493 = distinct !{!2493, !2494, !"ext_400700_sin: argument 0"}
!2494 = distinct !{!2494, !"ext_400700_sin"}
!2495 = distinct !{!2495, !2494, !"ext_400700_sin: argument 1"}
!2496 = !{!2493}
!2497 = !{!2495}
!2498 = !{!2499, !2501}
!2499 = distinct !{!2499, !2500, !"ext_602110_cos: argument 0"}
!2500 = distinct !{!2500, !"ext_602110_cos"}
!2501 = distinct !{!2501, !2500, !"ext_602110_cos: argument 1"}
!2502 = !{!2499}
!2503 = !{!2501}
!2504 = !{!2505, !2507}
!2505 = distinct !{!2505, !2506, !"ext_602110_cos: argument 0"}
!2506 = distinct !{!2506, !"ext_602110_cos"}
!2507 = distinct !{!2507, !2506, !"ext_602110_cos: argument 1"}
!2508 = !{!2505}
!2509 = !{!2507}
!2510 = !{!2511, !2513}
!2511 = distinct !{!2511, !2512, !"ext_602110_cos: argument 0"}
!2512 = distinct !{!2512, !"ext_602110_cos"}
!2513 = distinct !{!2513, !2512, !"ext_602110_cos: argument 1"}
!2514 = !{!2511}
!2515 = !{!2513}
!2516 = !{!2517, !2519}
!2517 = distinct !{!2517, !2518, !"ext_6020f8_atan: argument 0"}
!2518 = distinct !{!2518, !"ext_6020f8_atan"}
!2519 = distinct !{!2519, !2518, !"ext_6020f8_atan: argument 1"}
!2520 = !{!2517}
!2521 = !{!2519}
