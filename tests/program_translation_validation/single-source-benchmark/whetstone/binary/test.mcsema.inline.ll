; ModuleID = 'binary/test.mcsema.calls_renamed.ll'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"

%union.anon = type { i64 }
%seg_400698__init_type = type <{ [23 x i8] }>
%seg_4006b0__plt_type = type <{ [192 x i8] }>
%seg_400770__text_type = type <{ [4482 x i8] }>
%seg_4018f4__fini_type = type <{ [9 x i8] }>
%seg_401900__rodata_type = type <{ [72 x i8], [3 x i8], [28 x i8], [44 x i8] }>
%seg_401994__eh_frame_hdr_type = type <{ [92 x i8] }>
%seg_4019f0__eh_frame_type = type <{ [368 x i8] }>
%seg_601de0__init_array_type = type <{ i64, i64 }>
%seg_601ff0__got_type = type <{ i64, i64 }>
%seg_602000__got_plt_type = type <{ [24 x i8], i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }>
%seg_602070__data_type = type <{ [16 x i8] }>
%seg_602080__bss_type = type <{ [8 x i8], [8 x i8] }>
%J_type = type <{ [8 x i8] }>
%T_type = type <{ [8 x i8] }>
%T1_type = type <{ [8 x i8] }>
%L_type = type <{ [4 x i8] }>
%K_type = type <{ [4 x i8] }>
%T2_type = type <{ [16 x i8] }>
%E1_type = type <{ [40 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque
%struct.anon.2 = type { i8, i8 }
%"class.std::bitset" = type { %struct.uint64v4_t }
%struct.uint64v4_t = type { [4 x i64] }

@switch.table = private unnamed_addr constant [4 x i32] [i32 2048, i32 3072, i32 0, i32 1024]
@DR0 = external global i64, align 8
@DR1 = external global i64, align 8
@DR2 = external global i64, align 8
@DR3 = external global i64, align 8
@DR4 = external global i64, align 8
@DR5 = external global i64, align 8
@DR6 = external global i64, align 8
@DR7 = external global i64, align 8
@gCR0 = external global %union.anon, align 1
@gCR1 = external global %union.anon, align 1
@gCR2 = external global %union.anon, align 1
@gCR3 = external global %union.anon, align 1
@gCR4 = external global %union.anon, align 1
@gCR8 = external global %union.anon, align 1
@stderr = external global i64, align 128
@seg_400698__init = internal constant %seg_400698__init_type <{ [23 x i8] c"H\83\EC\08H\8B\05U\19 \00H\85\C0t\02\FF\D0H\83\C4\08\C3" }>
@seg_4006b0__plt = internal constant %seg_4006b0__plt_type <{ [192 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\FF%R\19 \00\00\00\00\00\00\00\00\00\00\00\FF%J\19 \00\00\00\00\00\00\00\00\00\00\00\FF%B\19 \00\00\00\00\00\00\00\00\00\00\00\FF%:\19 \00\00\00\00\00\00\00\00\00\00\00\FF%2\19 \00\00\00\00\00\00\00\00\00\00\00\FF%*\19 \00\00\00\00\00\00\00\00\00\00\00\FF%\22\19 \00\00\00\00\00\00\00\00\00\00\00\FF%\1A\19 \00\00\00\00\00\00\00\00\00\00\00\FF%\12\19 \00\00\00\00\00\00\00\00\00\00\00\FF%\0A\19 \00\00\00\00\00\00\00\00\00\00\00\FF%\02\19 \00\00\00\00\00\00\00\00\00\00\00" }>
@seg_400770__text = internal constant %seg_400770__text_type <{ [4482 x i8] c"1\EDI\89\D1^H\89\E2H\83\E4\F0PTI\C7\C0\F0\18@\00H\C7\C1\80\18@\00H\C7\C7`\08@\00\FF\15V\18 \00\F4\0F\1FD\00\00\F3\C3f.\0F\1F\84\00\00\00\00\00\0F\1F@\00U\B8\80 `\00H=\80 `\00H\89\E5t\17\B8\00\00\00\00H\85\C0t\0D]\BF\80 `\00\FF\E0\0F\1FD\00\00]\C3f\0F\1FD\00\00\BE\80 `\00UH\81\EE\80 `\00H\89\E5H\C1\FE\03H\89\F0H\C1\E8?H\01\C6H\D1\FEt\15\B8\00\00\00\00H\85\C0t\0B]\BF\80 `\00\FF\E0\0F\1F\00]\C3f\0F\1FD\00\00\80=a\18 \00\00u\17UH\89\E5\E8~\FF\FF\FF\C6\05O\18 \00\01]\C3\0F\1FD\00\00\F3\C3\0F\1F@\00f.\0F\1F\84\00\00\00\00\00UH\89\E5]\EB\89f\0F\1F\84\00\00\00\00\00UH\89\E5H\81\EC@\01\00\00\C7E\FC\00\00\00\00\89}\F8H\89u\F0H\C7\85H\FF\FF\FF\A0\86\01\00\C7\850\FF\FF\FF\00\00\00\00\C7\85T\FF\FF\FF\01\00\00\00\8B\85T\FF\FF\FF;E\F8\0F\8D\DA\00\00\00H\BEH\19@\00\00\00\00\00\B8\02\00\00\00\89\C2H\8BM\F0Hc\BDT\FF\FF\FFH\8B<\F9\E8\F4\FD\FF\FF\83\F8\00\0F\84\1B\00\00\00H\8BE\F0Hc\8DT\FF\FF\FFH\8B\04\C8\0F\BE\10\83\FAc\0F\85\0F\00\00\00\C7\850\FF\FF\FF\01\00\00\00\E9n\00\00\00H\8BE\F0Hc\8DT\FF\FF\FFH\8B<\C8\E8-\FE\FF\FFH\83\F8\00\0F\8E \00\00\00H\8BE\F0Hc\8DT\FF\FF\FFH\8B<\C8\E8\0F\FE\FF\FFH\89\85H\FF\FF\FF\E9+\00\00\00H\BEK\19@\00\00\00\00\00H\8B<%\80 `\00\B0\00\E8\CA\FD\FF\FF\C7E\FC\01\00\00\00\89\85,\FF\FF\FF\E9x\0C\00\00\E9\00\00\00\00\8B\85T\FF\FF\FF\83\C0\01\89\85T\FF\FF\FF\E9\17\FF\FF\FF\E9\00\00\00\001\C0\89\C7\E8\A1\FD\FF\FF\F2\0F\10\05q\0F\00\00\F2\0F\10\0Dq\0F\00\00\F2\0F\10\15q\0F\00\00H\89\85@\FF\FF\FF\F2\0F\11\14%\98 `\00\F2\0F\11\0C%\A0 `\00\F2\0F\11\04%\B0 `\00H\8B\85H\FF\FF\FFH\89\85X\FF\FF\FF\C7\85T\FF\FF\FF\01\00\00\00\C7\85P\FF\FF\FF\01\00\00\00\F2\0F\10\05-\0F\00\00\F2\0F\10\0D-\0F\00\00H\C7E\E0\00\00\00\00Hk\85X\FF\FF\FF\0CH\89E\D8Hk\85X\FF\FF\FF\0EH\89E\D0Hi\85X\FF\FF\FFY\01\00\00H\89E\C8Hi\85X\FF\FF\FF\D2\00\00\00H\89E\C0H\8B\85X\FF\FF\FFH\C1\E0\05H\89E\B8Hi\85X\FF\FF\FF\83\03\00\00H\89E\B0Hi\85X\FF\FF\FFh\02\00\00H\89E\A8H\C7E\A0\00\00\00\00Hk\85X\FF\FF\FF]H\89E\98\F2\0F\11M\90\F2\0F\11E\88\F2\0F\11E\80\F2\0F\11\85x\FF\FF\FFH\C7E\E8\01\00\00\00H\8BE\E8H;E\E0\0F\8F\BF\00\00\00H\B8\00\00\00\00\00\00\00\80\F2\0F\10E\90\F2\0FXE\88\F2\0FXE\80\F2\0F\5C\85x\FF\FF\FF\F2\0FY\04%\98 `\00\F2\0F\11E\90\F2\0F\10E\90\F2\0FXE\88\F2\0F\5CE\80\F2\0FX\85x\FF\FF\FF\F2\0FY\04%\98 `\00\F2\0F\11E\88\F2\0F\10E\90\F2\0F\5CE\88\F2\0FXE\80\F2\0FX\85x\FF\FF\FF\F2\0FY\04%\98 `\00\F2\0F\11E\80\F2\0F\10E\90fH\0F~\C1H1\C1fH\0Fn\C1\F2\0FXE\88\F2\0FXE\80\F2\0FX\85x\FF\FF\FF\F2\0FY\04%\98 `\00\F2\0F\11\85x\FF\FF\FFH\8BE\E8H\83\C0\01H\89E\E8\E93\FF\FF\FF\8B\85P\FF\FF\FF;\85T\FF\FF\FF\0F\85(\00\00\00H\8B}\E0H\8Bu\E0H\8BU\E0\F2\0F\10E\90\F2\0F\10M\88\F2\0F\10U\80\F2\0F\10\9Dx\FF\FF\FF\E8P\0A\00\00\F2\0F\10\05x\0D\00\00\F2\0F\10\0Dx\0D\00\00\F2\0F\11\0C%\C8 `\00\F2\0F\11\04%\D0 `\00\F2\0F\11\04%\D8 `\00\F2\0F\11\04%\E0 `\00H\C7E\E8\01\00\00\00H\8BE\E8H;E\D8\0F\8F\00\01\00\00H\B8\00\00\00\00\00\00\00\80\F2\0F\10\04%\C8 `\00\F2\0FX\04%\D0 `\00\F2\0FX\04%\D8 `\00\F2\0F\5C\04%\E0 `\00\F2\0FY\04%\98 `\00\F2\0F\11\04%\C8 `\00\F2\0F\10\04%\C8 `\00\F2\0FX\04%\D0 `\00\F2\0F\5C\04%\D8 `\00\F2\0FX\04%\E0 `\00\F2\0FY\04%\98 `\00\F2\0F\11\04%\D0 `\00\F2\0F\10\04%\C8 `\00\F2\0F\5C\04%\D0 `\00\F2\0FX\04%\D8 `\00\F2\0FX\04%\E0 `\00\F2\0FY\04%\98 `\00\F2\0F\11\04%\D8 `\00\F2\0F\10\04%\C8 `\00fH\0F~\C1H1\C1fH\0Fn\C1\F2\0FX\04%\D0 `\00\F2\0FX\04%\D8 `\00\F2\0FX\04%\E0 `\00\F2\0FY\04%\98 `\00\F2\0F\11\04%\E0 `\00H\8BE\E8H\83\C0\01H\89E\E8\E9\F2\FE\FF\FF\8B\85P\FF\FF\FF;\85T\FF\FF\FF\0F\855\00\00\00H\8B}\D8H\8Bu\D0H\8BU\D8\F2\0F\10\04%\C8 `\00\F2\0F\10\0C%\D0 `\00\F2\0F\10\14%\D8 `\00\F2\0F\10\1C%\E0 `\00\E8\BF\08\00\00H\C7E\E8\01\00\00\00H\8BE\E8H;E\D0\0F\8F \00\00\00H\BF\C0 `\00\00\00\00\00\E8\0A\09\00\00H\8BE\E8H\83\C0\01H\89E\E8\E9\D2\FF\FF\FF\8B\85P\FF\FF\FF;\85T\FF\FF\FF\0F\855\00\00\00H\8B}\D0H\8Bu\D8H\8BU\D8\F2\0F\10\04%\C8 `\00\F2\0F\10\0C%\D0 `\00\F2\0F\10\14%\D8 `\00\F2\0F\10\1C%\E0 `\00\E8B\08\00\00\C7\04%\90 `\00\01\00\00\00H\C7E\E8\01\00\00\00H\8BE\E8H;E\C8\0F\8F\91\00\00\00\83<%\90 `\00\01\0F\85\10\00\00\00\C7\04%\90 `\00\02\00\00\00\E9\0B\00\00\00\C7\04%\90 `\00\03\00\00\00\83<%\90 `\00\02\0F\8E\10\00\00\00\C7\04%\90 `\00\00\00\00\00\E9\0B\00\00\00\C7\04%\90 `\00\01\00\00\00\83<%\90 `\00\01\0F\8D\10\00\00\00\C7\04%\90 `\00\01\00\00\00\E9\0B\00\00\00\C7\04%\90 `\00\00\00\00\00\E9\00\00\00\00H\8BE\E8H\83\C0\01H\89E\E8\E9a\FF\FF\FF\8B\85P\FF\FF\FF;\85T\FF\FF\FF\0F\850\00\00\00H\8B}\C8Hc4%\90 `\00Hc\14%\90 `\00\F2\0F\10E\90\F2\0F\10M\88\F2\0F\10U\80\F2\0F\10\9Dx\FF\FF\FF\E8N\07\00\00\C7\04%\90 `\00\01\00\00\00\C7\04%\AC `\00\02\00\00\00\C7\04%\A8 `\00\03\00\00\00H\C7E\E8\01\00\00\00H\8BE\E8H;E\C0\0F\8F\F5\00\00\00\8B\04%\90 `\00\8B\0C%\AC `\00+\0C%\90 `\00\0F\AF\C1\8B\0C%\A8 `\00+\0C%\AC `\00\0F\AF\C1\89\04%\90 `\00\8B\04%\A8 `\00\0F\AF\04%\AC `\00\8B\0C%\A8 `\00+\0C%\90 `\00\0F\AF\0C%\AC `\00)\C8\89\04%\AC `\00\8B\04%\A8 `\00+\04%\AC `\00\8B\0C%\AC `\00\03\0C%\90 `\00\0F\AF\C1\89\04%\A8 `\00\8B\04%\90 `\00\03\04%\AC `\00\03\04%\A8 `\00\F2\0F*\C0\8B\04%\A8 `\00\83\E8\01Hc\D0\F2\0F\11\04\D5\C0 `\00\8B\04%\90 `\00\0F\AF\04%\AC `\00\0F\AF\04%\A8 `\00\F2\0F*\C0\8B\04%\AC `\00\83\E8\01Hc\D0\F2\0F\11\04\D5\C0 `\00H\8BE\E8H\83\C0\01H\89E\E8\E9\FD\FE\FF\FF\8B\85P\FF\FF\FF;\85T\FF\FF\FF\0F\85=\00\00\00H\8B}\C0Hc4%\90 `\00Hc\14%\AC `\00\F2\0F\10\04%\C8 `\00\F2\0F\10\0C%\D0 `\00\F2\0F\10\14%\D8 `\00\F2\0F\10\1C%\E0 `\00\E8\D3\05\00\00\F2\0F\10\05\0B\09\00\00\F2\0F\11\85p\FF\FF\FF\F2\0F\11\85h\FF\FF\FFH\C7E\E8\01\00\00\00H\8BE\E8H;E\B8\0F\8F\E9\01\00\00\F2\0F\10\05\D5\08\00\00\F2\0F\10\0C%\98 `\00\F2\0F\10\14%\B0 `\00\F2\0F\10\9Dp\FF\FF\FF\F2\0F\11\85 \FF\FF\FF\0F(\C3\F2\0F\11\95\18\FF\FF\FF\F2\0F\11\8D\10\FF\FF\FF\E8\C3\F6\FF\FF\F2\0F\10\8D\18\FF\FF\FF\F2\0FY\C8\F2\0F\10\85p\FF\FF\FF\F2\0F\11\8D\08\FF\FF\FF\E8b\F6\FF\FF\F2\0F\10\8D\08\FF\FF\FF\F2\0FY\C8\F2\0F\10\85p\FF\FF\FF\F2\0FX\85h\FF\FF\FF\F2\0F\11\8D\00\FF\FF\FF\E89\F6\FF\FF\F2\0F\10\8Dp\FF\FF\FF\F2\0F\5C\8Dh\FF\FF\FF\F2\0F\11\85\F8\FE\FF\FF\0F(\C1\E8\19\F6\FF\FF\F2\0F\10\8D\F8\FE\FF\FF\F2\0FX\C8\F2\0F\10\85 \FF\FF\FF\F2\0F\5C\C8\F2\0F\10\95\00\FF\FF\FF\F2\0F^\D1\0F(\C2\E8\BD\F5\FF\FF\F2\0F\10\0D\FD\07\00\00\F2\0F\10\95\10\FF\FF\FF\F2\0FY\D0\F2\0F\11\95p\FF\FF\FF\F2\0F\10\04%\98 `\00\F2\0F\10\14%\B0 `\00\F2\0F\10\9Dh\FF\FF\FF\F2\0F\11\85\F0\FE\FF\FF\0F(\C3\F2\0F\11\8D\E8\FE\FF\FF\F2\0F\11\95\E0\FE\FF\FF\E8\D7\F5\FF\FF\F2\0F\10\8D\E0\FE\FF\FF\F2\0FY\C8\F2\0F\10\85h\FF\FF\FF\F2\0F\11\8D\D8\FE\FF\FF\E8v\F5\FF\FF\F2\0F\10\8D\D8\FE\FF\FF\F2\0FY\C8\F2\0F\10\85p\FF\FF\FF\F2\0FX\85h\FF\FF\FF\F2\0F\11\8D\D0\FE\FF\FF\E8M\F5\FF\FF\F2\0F\10\8Dp\FF\FF\FF\F2\0F\5C\8Dh\FF\FF\FF\F2\0F\11\85\C8\FE\FF\FF\0F(\C1\E8-\F5\FF\FF\F2\0F\10\8D\C8\FE\FF\FF\F2\0FX\C8\F2\0F\10\85\E8\FE\FF\FF\F2\0F\5C\C8\F2\0F\10\95\D0\FE\FF\FF\F2\0F^\D1\0F(\C2\E8\D1\F4\FF\FF\F2\0F\10\8D\F0\FE\FF\FF\F2\0FY\C8\F2\0F\11\8Dh\FF\FF\FFH\8BE\E8H\83\C0\01H\89E\E8\E9\09\FE\FF\FF\8B\85P\FF\FF\FF;\85T\FF\FF\FF\0F\859\00\00\00H\8B}\B8Hc4%\90 `\00Hc\14%\AC `\00\F2\0F\10\85p\FF\FF\FF\F2\0F\10\8Dp\FF\FF\FF\F2\0F\10\95h\FF\FF\FF\F2\0F\10\9Dh\FF\FF\FF\E8q\03\00\00\F2\0F\10\05\A1\06\00\00\F2\0F\11\85p\FF\FF\FF\F2\0F\11\85h\FF\FF\FF\F2\0F\11\85`\FF\FF\FFH\C7E\E8\01\00\00\00H\8BE\E8H;E\B0\0F\8F-\00\00\00H\8D\BD`\FF\FF\FF\F2\0F\10\85p\FF\FF\FF\F2\0F\10\8Dh\FF\FF\FF\E8\BF\04\00\00H\8BE\E8H\83\C0\01H\89E\E8\E9\C5\FF\FF\FF\8B\85P\FF\FF\FF;\85T\FF\FF\FF\0F\859\00\00\00H\8B}\B0Hc4%\90 `\00Hc\14%\AC `\00\F2\0F\10\85p\FF\FF\FF\F2\0F\10\8Dh\FF\FF\FF\F2\0F\10\95`\FF\FF\FF\F2\0F\10\9D`\FF\FF\FF\E8\C3\02\00\00\F2\0F\10\05\03\06\00\00\F2\0F\10\0D\CB\05\00\00\F2\0F\10\15\E3\05\00\00\C7\04%\90 `\00\01\00\00\00\C7\04%\AC `\00\02\00\00\00\C7\04%\A8 `\00\03\00\00\00\F2\0F\11\14%\C8 `\00\F2\0F\11\0C%\D0 `\00\F2\0F\11\04%\D8 `\00H\C7E\E8\01\00\00\00H\8BE\E8H;E\A8\0F\8F\16\00\00\00\E8t\04\00\00H\8BE\E8H\83\C0\01H\89E\E8\E9\DC\FF\FF\FF\8B\85P\FF\FF\FF;\85T\FF\FF\FF\0F\85=\00\00\00H\8B}\A8Hc4%\90 `\00Hc\14%\AC `\00\F2\0F\10\04%\C8 `\00\F2\0F\10\0C%\D0 `\00\F2\0F\10\14%\D8 `\00\F2\0F\10\1C%\E0 `\00\E8\F4\01\00\00\C7\04%\90 `\00\02\00\00\00\C7\04%\AC `\00\03\00\00\00H\C7E\E8\01\00\00\00H\8BE\E8H;E\A0\0F\8Fl\00\00\00\8B\04%\90 `\00\03\04%\AC `\00\89\04%\90 `\00\8B\04%\90 `\00\03\04%\AC `\00\89\04%\AC `\00\8B\04%\AC `\00+\04%\90 `\00\89\04%\90 `\00\8B\04%\AC `\00+\04%\90 `\00+\04%\90 `\00\89\04%\AC `\00H\8BE\E8H\83\C0\01H\89E\E8\E9\86\FF\FF\FF\8B\85P\FF\FF\FF;\85T\FF\FF\FF\0F\850\00\00\00H\8B}\A0Hc4%\90 `\00Hc\14%\AC `\00\F2\0F\10E\90\F2\0F\10M\88\F2\0F\10U\80\F2\0F\10\9Dx\FF\FF\FF\E8\1A\01\00\00\F2\0F\10\05b\04\00\00\F2\0F\11\85p\FF\FF\FFH\C7E\E8\01\00\00\00H\8BE\E8H;E\98\0F\8F9\00\00\00\F2\0F\10\85p\FF\FF\FF\E8\F7\F1\FF\FF\F2\0F^\04%\A0 `\00\E8\B9\F1\FF\FF\E8D\F2\FF\FF\F2\0F\11\85p\FF\FF\FFH\8BE\E8H\83\C0\01H\89E\E8\E9\B9\FF\FF\FF\8B\85P\FF\FF\FF;\85T\FF\FF\FF\0F\859\00\00\00H\8B}\98Hc4%\90 `\00Hc\14%\AC `\00\F2\0F\10\85p\FF\FF\FF\F2\0F\10\8Dp\FF\FF\FF\F2\0F\10\95p\FF\FF\FF\F2\0F\10\9Dp\FF\FF\FF\E8p\00\00\00\8B\85P\FF\FF\FF\83\C0\01\89\85P\FF\FF\FF;\85T\FF\FF\FF\0F\8F\05\00\00\00\E9K\F4\FF\FF1\C0\89\C7\E8\87\F1\FF\FFH\BFe\19@\00\00\00\00\00H\89\858\FF\FF\FF\B0\00\E8/\F1\FF\FF\83\BD0\FF\FF\FF\00\89\85\C4\FE\FF\FF\0F\84\05\00\00\00\E9\AD\F3\FF\FF\C7E\FC\00\00\00\00\8BE\FCH\81\C4@\01\00\00]\C3\0F\1F@\00UH\89\E5H\83\EC@H\B8g\19@\00\00\00\00\00H\89}\F8H\89u\F0H\89U\E8\F2\0F\11E\E0\F2\0F\11M\D8\F2\0F\11U\D0\F2\0F\11]\C8H\8Bu\F8H\8BU\F0H\8BM\E8\F2\0F\10E\E0\F2\0F\10M\D8\F2\0F\10U\D0\F2\0F\10]\C8H\89\C7\B0\04\E8\A4\F0\FF\FF\89E\C4H\83\C4@]\C3ff.\0F\1F\84\00\00\00\00\00UH\89\E5H\89}\F8\C7\04%\90 `\00\00\00\00\00H\B8\00\00\00\00\00\00\00\80H\8BM\F8\F2\0F\10A\08H\8BM\F8\F2\0FXA\10H\8BM\F8\F2\0FXA\18H\8BM\F8\F2\0F\5CA \F2\0FY\04%\98 `\00H\8BM\F8\F2\0F\11A\08H\8BM\F8\F2\0F\10A\08H\8BM\F8\F2\0FXA\10H\8BM\F8\F2\0F\5CA\18H\8BM\F8\F2\0FXA \F2\0FY\04%\98 `\00H\8BM\F8\F2\0F\11A\10H\8BM\F8\F2\0F\10A\08H\8BM\F8\F2\0F\5CA\10H\8BM\F8\F2\0FXA\18H\8BM\F8\F2\0FXA \F2\0FY\04%\98 `\00H\8BM\F8\F2\0F\11A\18H\8BM\F8\F2\0F\10A\08fH\0F~\C1H1\C1fH\0Fn\C1H\8BE\F8\F2\0FX@\10H\8BE\F8\F2\0FX@\18H\8BE\F8\F2\0FX@ \F2\0F^\04%\B0 `\00H\8BE\F8\F2\0F\11@ \8B\14%\90 `\00\83\C2\01\89\14%\90 `\00\83<%\90 `\00\06\0F\8D\05\00\00\00\E9\ED\FE\FF\FF]\C3\0F\1F\84\00\00\00\00\00UH\89\E5\F2\0F\11E\F8\F2\0F\11M\F0H\89}\E8\F2\0F\10E\F8\F2\0F\11E\E0\F2\0F\10E\F0\F2\0F\11E\D8\F2\0F\10\04%\98 `\00\F2\0F\10M\E0\F2\0FXM\D8\F2\0FY\C1\F2\0F\11E\E0\F2\0F\10\04%\98 `\00\F2\0F\10M\E0\F2\0FXM\D8\F2\0FY\C1\F2\0F\11E\D8\F2\0F\10E\E0\F2\0FXE\D8\F2\0F^\04%\B0 `\00H\8B}\E8\F2\0F\11\07]\C3\0F\1FD\00\00UH\89\E5Hc\04%\AC `\00\F2\0F\10\04\C5\C0 `\00Hc\04%\90 `\00\F2\0F\11\04\C5\C0 `\00Hc\04%\A8 `\00\F2\0F\10\04\C5\C0 `\00Hc\04%\AC `\00\F2\0F\11\04\C5\C0 `\00Hc\04%\90 `\00\F2\0F\10\04\C5\C0 `\00Hc\04%\A8 `\00\F2\0F\11\04\C5\C0 `\00]\C3\0F\1F@\00AWAVI\89\D7AUATL\8D%N\05 \00UH\8D-N\05 \00SA\89\FDI\89\F6L)\E5H\83\EC\08H\C1\FD\03\E8\E7\ED\FF\FFH\85\EDt 1\DB\0F\1F\84\00\00\00\00\00L\89\FAL\89\F6D\89\EFA\FF\14\DCH\83\C3\01H9\DDu\EAH\83\C4\08[]A\5CA]A^A_\C3\90f.\0F\1F\84\00\00\00\00\00\F3\C3" }>
@seg_4018f4__fini = internal constant %seg_4018f4__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_401900__rodata = internal constant %seg_401900__rodata_type <{ [72 x i8] c"\01\00\02\00\00\00\00\00\00\00\00\00\00\00\00@5^\BAI\0C\02\E0?\8FSt$\97\FF\DF?\00\00\00\00\00\00\F0\BF\00\00\00\00\00\00\F0?\00\00\00\00\00\00\E0?\00\00\00\00\00\00\08@\00\00\00\00\00\00\E8?", [3 x i8] c"-c\00", [28 x i8] c"usage: whetdc [-c] [loops]\0A\00", [44 x i8] c"%7ld %7ld %7ld %12.4e %12.4e %12.4e %12.4e\0A\00" }>
@seg_401994__eh_frame_hdr = internal constant %seg_401994__eh_frame_hdr_type <{ [92 x i8] c"\01\1B\03;X\00\00\00\0A\00\00\00\1C\ED\FF\FF\B4\00\00\00\DC\ED\FF\FFt\00\00\00\0C\EE\FF\FF\A0\00\00\00\CC\EE\FF\FF\DC\00\00\00\5C\FC\FF\FF\F8\00\00\00\CC\FC\FF\FF\14\01\00\00\FC\FD\FF\FF0\01\00\00|\FE\FF\FFL\01\00\00\EC\FE\FF\FFl\01\00\00\5C\FF\FF\FF\B4\01\00\00" }>
@seg_4019f0__eh_frame = internal constant %seg_4019f0__eh_frame_type <{ [368 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\00`\ED\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00d\ED\FF\FF\02\00\00\00\00\00\00\00$\00\00\000\00\00\00`\EC\FF\FF\C0\00\00\00\00\0E\10F\0E\18J\0F\0Bw\08\80\00?\1A;*3$\22\00\00\00\00\18\00\00\00X\00\00\00\E8\ED\FF\FF\8C\0D\00\00\00A\0E\10\86\02C\0D\06\00\00\00\18\00\00\00t\00\00\00\5C\FB\FF\FFe\00\00\00\00A\0E\10\86\02C\0D\06\00\00\00\18\00\00\00\90\00\00\00\B0\FB\FF\FF(\01\00\00\00A\0E\10\86\02C\0D\06\00\00\00\18\00\00\00\AC\00\00\00\C4\FC\FF\FF{\00\00\00\00A\0E\10\86\02C\0D\06\00\00\00\1C\00\00\00\C8\00\00\00(\FD\FF\FFl\00\00\00\00A\0E\10\86\02C\0D\06\00\00\00\00\00\00\00D\00\00\00\E8\00\00\00x\FD\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\000\01\00\00\A0\FD\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@seg_601de0__init_array = internal global %seg_601de0__init_array_type <{ i64 ptrtoint (void ()* @callback_sub_400850_frame_dummy to i64), i64 ptrtoint (void ()* @callback_sub_400820___do_global_dtors_aux to i64) }>
@seg_601ff0__got = internal global %seg_601ff0__got_type <{ i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64)* @__libc_start_main to i64), i64 ptrtoint (i64 ()* @__gmon_start__ to i64) }>
@seg_602000__got_plt = internal global %seg_602000__got_plt_type <{ [24 x i8] zeroinitializer, i64 ptrtoint (i64 (i64, i64, i64)* @strncmp to i64), i64 ptrtoint (i64 (i64)* @exp to i64), i64 ptrtoint (double (double)* @atan to i64), i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), i64 ptrtoint (i64 (i64)* @log to i64), i64 ptrtoint (double (double)* @cos to i64), i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @fprintf to i64), i64 ptrtoint (i64 (i64)* @time to i64), i64 ptrtoint (i64 (i64)* @atol to i64), i64 ptrtoint (double (double)* @sin to i64), i64 ptrtoint (double (double)* @sqrt to i64) }>
@seg_602070__data = internal global %seg_602070__data_type zeroinitializer
@seg_602080__bss = internal global %seg_602080__bss_type zeroinitializer
@J = global %J_type zeroinitializer
@T = global %T_type zeroinitializer
@T1 = global %T1_type zeroinitializer
@L = global %L_type zeroinitializer
@K = global %K_type zeroinitializer
@T2 = global %T2_type zeroinitializer
@E1 = global %E1_type zeroinitializer
@0 = internal global i1 false
@1 = internal constant %struct.Memory* (%struct.State*, i64, %struct.Memory*)* @callback_sub_400850_frame_dummy_wrapper
@2 = internal constant void ()* @__mcsema_attach_call
@3 = internal constant %struct.Memory* (%struct.State*, i64, %struct.Memory*)* @callback_sub_400820___do_global_dtors_aux_wrapper
@4 = internal constant %struct.Memory* (%struct.State*, i64, %struct.Memory*)* @callback_sub_4018f0___libc_csu_fini_wrapper
@5 = internal constant %struct.Memory* (%struct.State*, i64, %struct.Memory*)* @callback_sub_401880___libc_csu_init_wrapper
@6 = internal constant %struct.Memory* (%struct.State*, i64, %struct.Memory*)* @main_wrapper
@7 = internal constant %struct.Memory* (%struct.State*, i64, %struct.Memory*)* @PA_wrapper
@8 = internal constant %struct.Memory* (%struct.State*, i64, %struct.Memory*)* @.term_proc_wrapper
@9 = internal constant %struct.Memory* (%struct.State*, i64, %struct.Memory*)* @.init_proc_wrapper
@10 = internal constant %struct.Memory* (%struct.State*, i64, %struct.Memory*)* @P0_wrapper
@11 = internal constant %struct.Memory* (%struct.State*, i64, %struct.Memory*)* @POUT_wrapper
@12 = internal constant %struct.Memory* (%struct.State*, i64, %struct.Memory*)* @P3_wrapper
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 101, void ()* @__mcsema_constructor, i8* null }]
@llvm.global_dtors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 101, void ()* @__mcsema_destructor, i8* null }]

declare %struct.Memory* @sub_401660_PA_renamed_(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_400698__init_proc_renamed_(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_4015f0_POUT_renamed_(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_401810_P0_renamed_(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_401790_P3_renamed_(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_4007b0_deregister_tm_clones_renamed_(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @__remill_sync_hyper_call(%struct.State* dereferenceable(3376), %struct.Memory*, i32) #0

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #1

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare zeroext i8 @__remill_read_memory_8(%struct.Memory*, i64) #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_write_memory_8(%struct.Memory*, i64, i8 zeroext) #2

; Function Attrs: nounwind readnone
declare i32 @llvm.ctpop.i32(i32) #3

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare zeroext i16 @__remill_read_memory_16(%struct.Memory*, i64) #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_write_memory_16(%struct.Memory*, i64, i16 zeroext) #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare i32 @__remill_read_memory_32(%struct.Memory*, i64) #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_write_memory_32(%struct.Memory*, i64, i32) #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare i64 @__remill_read_memory_64(%struct.Memory*, i64) #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_write_memory_64(%struct.Memory*, i64, i64) #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare float @__remill_read_memory_f32(%struct.Memory*, i64) #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare double @__remill_read_memory_f64(%struct.Memory*, i64) #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare zeroext i8 @__remill_undefined_8() #2

; Function Attrs: noduplicate noinline nounwind optnone
declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*) #4

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #3

; Function Attrs: nounwind readnone
declare i64 @llvm.bswap.i64(i64) #3

; Function Attrs: nounwind readnone
declare i32 @llvm.cttz.i32(i32, i1) #3

; Function Attrs: nounwind readnone
declare i64 @llvm.cttz.i64(i64, i1) #3

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #3

; Function Attrs: nounwind readnone
declare i64 @llvm.ctlz.i64(i64, i1) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #1

; Function Attrs: nounwind readnone
declare double @llvm.nearbyint.f64(double) #3

; Function Attrs: nounwind readnone
declare double @llvm.fabs.f64(double) #3

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.nearbyint.v4f64(<4 x double>) #3

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.fabs.v4f64(<4 x double>) #3

; Function Attrs: nounwind readnone
declare double @llvm.trunc.f64(double) #3

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.trunc.v4f64(<4 x double>) #3

; Function Attrs: nounwind readnone
declare float @llvm.nearbyint.f32(float) #3

; Function Attrs: nounwind readnone
declare float @llvm.fabs.f32(float) #3

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.nearbyint.v4f32(<4 x float>) #3

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.fabs.v4f32(<4 x float>) #3

; Function Attrs: nounwind readnone
declare float @llvm.trunc.f32(float) #3

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.trunc.v4f32(<4 x float>) #3

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_write_memory_f32(%struct.Memory*, i64, float) #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_write_memory_f64(%struct.Memory*, i64, double) #2

; Function Attrs: nounwind readnone
declare zeroext i8 @__remill_read_io_port_8(%struct.Memory*, i64) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare zeroext i16 @__remill_read_io_port_16(%struct.Memory*, i64) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare i32 @__remill_read_io_port_32(%struct.Memory*, i64) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare %struct.Memory* @__remill_write_io_port_8(%struct.Memory*, i64, i8 zeroext) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare %struct.Memory* @__remill_write_io_port_16(%struct.Memory*, i64, i16 zeroext) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare %struct.Memory* @__remill_write_io_port_32(%struct.Memory*, i64, i32) local_unnamed_addr #5

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_barrier_store_load(%struct.Memory*) #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_barrier_store_store(%struct.Memory*) #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_barrier_load_load(%struct.Memory*) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #1

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare i64 @__remill_undefined_64() #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare double @__remill_undefined_f64() #2

declare %struct.Memory* @__remill_compare_exchange_memory_8(%struct.Memory*, i64, i8* dereferenceable(1), i8 zeroext) #0

declare %struct.Memory* @__remill_compare_exchange_memory_16(%struct.Memory*, i64, i16* dereferenceable(2), i16 zeroext) #0

declare %struct.Memory* @__remill_compare_exchange_memory_32(%struct.Memory*, i64, i32* dereferenceable(4), i32) #0

declare %struct.Memory* @__remill_compare_exchange_memory_64(%struct.Memory*, i64, i64* dereferenceable(8), i64) #0

declare %struct.Memory* @__remill_compare_exchange_memory_128(%struct.Memory*, i64, i128* dereferenceable(16), i128* dereferenceable(16)) local_unnamed_addr #0

declare %struct.Memory* @__remill_fetch_and_add_8(%struct.Memory*, i64, i8* dereferenceable(1)) #0

declare %struct.Memory* @__remill_fetch_and_add_16(%struct.Memory*, i64, i16* dereferenceable(2)) #0

declare %struct.Memory* @__remill_fetch_and_add_32(%struct.Memory*, i64, i32* dereferenceable(4)) #0

declare %struct.Memory* @__remill_fetch_and_add_64(%struct.Memory*, i64, i64* dereferenceable(8)) #0

; Function Attrs: nounwind readnone
declare float @sqrtf(float) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare double @sqrt(double) local_unnamed_addr #5

; Function Attrs: nounwind
declare i32 @fesetround(i32) local_unnamed_addr #6

; Function Attrs: nounwind readonly
declare i32 @fegetround() local_unnamed_addr #7

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare double @__remill_read_memory_f80(%struct.Memory*, i64) #2

; Function Attrs: nounwind
declare i32 @fetestexcept(i32) local_unnamed_addr #6

; Function Attrs: nounwind
declare i32 @feraiseexcept(i32) local_unnamed_addr #6

; Function Attrs: nounwind
declare i32 @feclearexcept(i32) local_unnamed_addr #6

; Function Attrs: nounwind readnone
declare i32 @__remill_fpu_exception_test_and_clear(i32, i32) #5

; Function Attrs: nounwind readnone
declare double @cos(double) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare double @sin(double) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare double @tan(double) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare double @atan(double) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare double @exp2(double) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare double @remainder(double, double) local_unnamed_addr #5

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_write_memory_f80(%struct.Memory*, i64, double) #2

; Function Attrs: nounwind readnone
declare double @log2(double) local_unnamed_addr #5

; Function Attrs: noinline nounwind optnone
define %struct.Memory* @__remill_basic_block(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #8 !dbg !1261 {
  %state = alloca %struct.State*, align 8
  %curr_pc = alloca i64, align 8
  %memory = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  %SS_BASE = alloca i64, align 8
  %ES_BASE = alloca i64, align 8
  %DS_BASE = alloca i64, align 8
  %CS_BASE = alloca i64, align 8
  %STATE = alloca %struct.State*, align 8
  %MEMORY = alloca %struct.Memory*, align 8
  %_DR0 = alloca i64*, align 8
  %_DR1 = alloca i64*, align 8
  %_DR2 = alloca i64*, align 8
  %_DR3 = alloca i64*, align 8
  %_DR4 = alloca i64*, align 8
  %_DR5 = alloca i64*, align 8
  %_DR6 = alloca i64*, align 8
  %_DR7 = alloca i64*, align 8
  %CR0 = alloca i64*, align 8
  %CR1 = alloca i64*, align 8
  %CR2 = alloca i64*, align 8
  %CR3 = alloca i64*, align 8
  %CR4 = alloca i64*, align 8
  %CR8 = alloca i64*, align 8
  store %struct.State* %0, %struct.State** %state, align 8
  store i64 %1, i64* %curr_pc, align 8
  store %struct.Memory* %2, %struct.Memory** %memory, align 8
  store i8 0, i8* %BRANCH_TAKEN, align 1, !dbg !1952
  store i64 0, i64* %SS_BASE, align 8, !dbg !1953
  store i64 0, i64* %ES_BASE, align 8, !dbg !1954
  store i64 0, i64* %DS_BASE, align 8, !dbg !1955
  store i64 0, i64* %CS_BASE, align 8, !dbg !1956
  store %struct.State* %0, %struct.State** %STATE, align 8, !dbg !1957
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8, !dbg !1958
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !1959
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33, !dbg !1960
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0, !dbg !1961
  %PC = bitcast %union.anon* %6 to i64*, !dbg !1961
  store i64 %1, i64* %PC, align 8, !dbg !1962
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !1963
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 1, !dbg !1964
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0, !dbg !1965
  %10 = bitcast %union.anon* %9 to %struct.anon.2*, !dbg !1965
  %AH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10, i32 0, i32 1, !dbg !1966
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !1967
  %12 = getelementptr inbounds %struct.GPR, %struct.GPR* %11, i32 0, i32 3, !dbg !1968
  %13 = getelementptr inbounds %struct.Reg, %struct.Reg* %12, i32 0, i32 0, !dbg !1969
  %14 = bitcast %union.anon* %13 to %struct.anon.2*, !dbg !1969
  %BH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %14, i32 0, i32 1, !dbg !1970
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !1971
  %16 = getelementptr inbounds %struct.GPR, %struct.GPR* %15, i32 0, i32 5, !dbg !1972
  %17 = getelementptr inbounds %struct.Reg, %struct.Reg* %16, i32 0, i32 0, !dbg !1973
  %18 = bitcast %union.anon* %17 to %struct.anon.2*, !dbg !1973
  %CH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %18, i32 0, i32 1, !dbg !1974
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !1975
  %20 = getelementptr inbounds %struct.GPR, %struct.GPR* %19, i32 0, i32 7, !dbg !1976
  %21 = getelementptr inbounds %struct.Reg, %struct.Reg* %20, i32 0, i32 0, !dbg !1977
  %22 = bitcast %union.anon* %21 to %struct.anon.2*, !dbg !1977
  %DH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %22, i32 0, i32 1, !dbg !1978
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !1979
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 1, !dbg !1980
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0, !dbg !1981
  %26 = bitcast %union.anon* %25 to %struct.anon.2*, !dbg !1981
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %26, i32 0, i32 0, !dbg !1982
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !1983
  %28 = getelementptr inbounds %struct.GPR, %struct.GPR* %27, i32 0, i32 3, !dbg !1984
  %29 = getelementptr inbounds %struct.Reg, %struct.Reg* %28, i32 0, i32 0, !dbg !1985
  %30 = bitcast %union.anon* %29 to %struct.anon.2*, !dbg !1985
  %BL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %30, i32 0, i32 0, !dbg !1986
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !1987
  %32 = getelementptr inbounds %struct.GPR, %struct.GPR* %31, i32 0, i32 5, !dbg !1988
  %33 = getelementptr inbounds %struct.Reg, %struct.Reg* %32, i32 0, i32 0, !dbg !1989
  %34 = bitcast %union.anon* %33 to %struct.anon.2*, !dbg !1989
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %34, i32 0, i32 0, !dbg !1990
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !1991
  %36 = getelementptr inbounds %struct.GPR, %struct.GPR* %35, i32 0, i32 7, !dbg !1992
  %37 = getelementptr inbounds %struct.Reg, %struct.Reg* %36, i32 0, i32 0, !dbg !1993
  %38 = bitcast %union.anon* %37 to %struct.anon.2*, !dbg !1993
  %DL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %38, i32 0, i32 0, !dbg !1994
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !1995
  %40 = getelementptr inbounds %struct.GPR, %struct.GPR* %39, i32 0, i32 9, !dbg !1996
  %41 = getelementptr inbounds %struct.Reg, %struct.Reg* %40, i32 0, i32 0, !dbg !1997
  %42 = bitcast %union.anon* %41 to %struct.anon.2*, !dbg !1997
  %SIL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %42, i32 0, i32 0, !dbg !1998
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !1999
  %44 = getelementptr inbounds %struct.GPR, %struct.GPR* %43, i32 0, i32 11, !dbg !2000
  %45 = getelementptr inbounds %struct.Reg, %struct.Reg* %44, i32 0, i32 0, !dbg !2001
  %46 = bitcast %union.anon* %45 to %struct.anon.2*, !dbg !2001
  %DIL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %46, i32 0, i32 0, !dbg !2002
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2003
  %48 = getelementptr inbounds %struct.GPR, %struct.GPR* %47, i32 0, i32 13, !dbg !2004
  %49 = getelementptr inbounds %struct.Reg, %struct.Reg* %48, i32 0, i32 0, !dbg !2005
  %50 = bitcast %union.anon* %49 to %struct.anon.2*, !dbg !2005
  %SPL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %50, i32 0, i32 0, !dbg !2006
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2007
  %52 = getelementptr inbounds %struct.GPR, %struct.GPR* %51, i32 0, i32 15, !dbg !2008
  %53 = getelementptr inbounds %struct.Reg, %struct.Reg* %52, i32 0, i32 0, !dbg !2009
  %54 = bitcast %union.anon* %53 to %struct.anon.2*, !dbg !2009
  %BPL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %54, i32 0, i32 0, !dbg !2010
  %55 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2011
  %56 = getelementptr inbounds %struct.GPR, %struct.GPR* %55, i32 0, i32 17, !dbg !2012
  %57 = getelementptr inbounds %struct.Reg, %struct.Reg* %56, i32 0, i32 0, !dbg !2013
  %58 = bitcast %union.anon* %57 to %struct.anon.2*, !dbg !2013
  %R8B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %58, i32 0, i32 0, !dbg !2014
  %59 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2015
  %60 = getelementptr inbounds %struct.GPR, %struct.GPR* %59, i32 0, i32 19, !dbg !2016
  %61 = getelementptr inbounds %struct.Reg, %struct.Reg* %60, i32 0, i32 0, !dbg !2017
  %62 = bitcast %union.anon* %61 to %struct.anon.2*, !dbg !2017
  %R9B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %62, i32 0, i32 0, !dbg !2018
  %63 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2019
  %64 = getelementptr inbounds %struct.GPR, %struct.GPR* %63, i32 0, i32 21, !dbg !2020
  %65 = getelementptr inbounds %struct.Reg, %struct.Reg* %64, i32 0, i32 0, !dbg !2021
  %66 = bitcast %union.anon* %65 to %struct.anon.2*, !dbg !2021
  %R10B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %66, i32 0, i32 0, !dbg !2022
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2023
  %68 = getelementptr inbounds %struct.GPR, %struct.GPR* %67, i32 0, i32 23, !dbg !2024
  %69 = getelementptr inbounds %struct.Reg, %struct.Reg* %68, i32 0, i32 0, !dbg !2025
  %70 = bitcast %union.anon* %69 to %struct.anon.2*, !dbg !2025
  %R11B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %70, i32 0, i32 0, !dbg !2026
  %71 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2027
  %72 = getelementptr inbounds %struct.GPR, %struct.GPR* %71, i32 0, i32 25, !dbg !2028
  %73 = getelementptr inbounds %struct.Reg, %struct.Reg* %72, i32 0, i32 0, !dbg !2029
  %74 = bitcast %union.anon* %73 to %struct.anon.2*, !dbg !2029
  %R12B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %74, i32 0, i32 0, !dbg !2030
  %75 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2031
  %76 = getelementptr inbounds %struct.GPR, %struct.GPR* %75, i32 0, i32 27, !dbg !2032
  %77 = getelementptr inbounds %struct.Reg, %struct.Reg* %76, i32 0, i32 0, !dbg !2033
  %78 = bitcast %union.anon* %77 to %struct.anon.2*, !dbg !2033
  %R13B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %78, i32 0, i32 0, !dbg !2034
  %79 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2035
  %80 = getelementptr inbounds %struct.GPR, %struct.GPR* %79, i32 0, i32 29, !dbg !2036
  %81 = getelementptr inbounds %struct.Reg, %struct.Reg* %80, i32 0, i32 0, !dbg !2037
  %82 = bitcast %union.anon* %81 to %struct.anon.2*, !dbg !2037
  %R14B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %82, i32 0, i32 0, !dbg !2038
  %83 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2039
  %84 = getelementptr inbounds %struct.GPR, %struct.GPR* %83, i32 0, i32 31, !dbg !2040
  %85 = getelementptr inbounds %struct.Reg, %struct.Reg* %84, i32 0, i32 0, !dbg !2041
  %86 = bitcast %union.anon* %85 to %struct.anon.2*, !dbg !2041
  %R15B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %86, i32 0, i32 0, !dbg !2042
  %87 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2043
  %88 = getelementptr inbounds %struct.GPR, %struct.GPR* %87, i32 0, i32 1, !dbg !2044
  %89 = getelementptr inbounds %struct.Reg, %struct.Reg* %88, i32 0, i32 0, !dbg !2045
  %AX = bitcast %union.anon* %89 to i16*, !dbg !2045
  %90 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2046
  %91 = getelementptr inbounds %struct.GPR, %struct.GPR* %90, i32 0, i32 3, !dbg !2047
  %92 = getelementptr inbounds %struct.Reg, %struct.Reg* %91, i32 0, i32 0, !dbg !2048
  %BX = bitcast %union.anon* %92 to i16*, !dbg !2048
  %93 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2049
  %94 = getelementptr inbounds %struct.GPR, %struct.GPR* %93, i32 0, i32 5, !dbg !2050
  %95 = getelementptr inbounds %struct.Reg, %struct.Reg* %94, i32 0, i32 0, !dbg !2051
  %CX = bitcast %union.anon* %95 to i16*, !dbg !2051
  %96 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2052
  %97 = getelementptr inbounds %struct.GPR, %struct.GPR* %96, i32 0, i32 7, !dbg !2053
  %98 = getelementptr inbounds %struct.Reg, %struct.Reg* %97, i32 0, i32 0, !dbg !2054
  %DX = bitcast %union.anon* %98 to i16*, !dbg !2054
  %99 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2055
  %100 = getelementptr inbounds %struct.GPR, %struct.GPR* %99, i32 0, i32 9, !dbg !2056
  %101 = getelementptr inbounds %struct.Reg, %struct.Reg* %100, i32 0, i32 0, !dbg !2057
  %SI = bitcast %union.anon* %101 to i16*, !dbg !2057
  %102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2058
  %103 = getelementptr inbounds %struct.GPR, %struct.GPR* %102, i32 0, i32 11, !dbg !2059
  %104 = getelementptr inbounds %struct.Reg, %struct.Reg* %103, i32 0, i32 0, !dbg !2060
  %DI = bitcast %union.anon* %104 to i16*, !dbg !2060
  %105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2061
  %106 = getelementptr inbounds %struct.GPR, %struct.GPR* %105, i32 0, i32 13, !dbg !2062
  %107 = getelementptr inbounds %struct.Reg, %struct.Reg* %106, i32 0, i32 0, !dbg !2063
  %SP = bitcast %union.anon* %107 to i16*, !dbg !2063
  %108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2064
  %109 = getelementptr inbounds %struct.GPR, %struct.GPR* %108, i32 0, i32 15, !dbg !2065
  %110 = getelementptr inbounds %struct.Reg, %struct.Reg* %109, i32 0, i32 0, !dbg !2066
  %BP = bitcast %union.anon* %110 to i16*, !dbg !2066
  %111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2067
  %112 = getelementptr inbounds %struct.GPR, %struct.GPR* %111, i32 0, i32 17, !dbg !2068
  %113 = getelementptr inbounds %struct.Reg, %struct.Reg* %112, i32 0, i32 0, !dbg !2069
  %R8W = bitcast %union.anon* %113 to i16*, !dbg !2069
  %114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2070
  %115 = getelementptr inbounds %struct.GPR, %struct.GPR* %114, i32 0, i32 19, !dbg !2071
  %116 = getelementptr inbounds %struct.Reg, %struct.Reg* %115, i32 0, i32 0, !dbg !2072
  %R9W = bitcast %union.anon* %116 to i16*, !dbg !2072
  %117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2073
  %118 = getelementptr inbounds %struct.GPR, %struct.GPR* %117, i32 0, i32 21, !dbg !2074
  %119 = getelementptr inbounds %struct.Reg, %struct.Reg* %118, i32 0, i32 0, !dbg !2075
  %R10W = bitcast %union.anon* %119 to i16*, !dbg !2075
  %120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2076
  %121 = getelementptr inbounds %struct.GPR, %struct.GPR* %120, i32 0, i32 23, !dbg !2077
  %122 = getelementptr inbounds %struct.Reg, %struct.Reg* %121, i32 0, i32 0, !dbg !2078
  %R11W = bitcast %union.anon* %122 to i16*, !dbg !2078
  %123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2079
  %124 = getelementptr inbounds %struct.GPR, %struct.GPR* %123, i32 0, i32 25, !dbg !2080
  %125 = getelementptr inbounds %struct.Reg, %struct.Reg* %124, i32 0, i32 0, !dbg !2081
  %R12W = bitcast %union.anon* %125 to i16*, !dbg !2081
  %126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2082
  %127 = getelementptr inbounds %struct.GPR, %struct.GPR* %126, i32 0, i32 27, !dbg !2083
  %128 = getelementptr inbounds %struct.Reg, %struct.Reg* %127, i32 0, i32 0, !dbg !2084
  %R13W = bitcast %union.anon* %128 to i16*, !dbg !2084
  %129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2085
  %130 = getelementptr inbounds %struct.GPR, %struct.GPR* %129, i32 0, i32 29, !dbg !2086
  %131 = getelementptr inbounds %struct.Reg, %struct.Reg* %130, i32 0, i32 0, !dbg !2087
  %R14W = bitcast %union.anon* %131 to i16*, !dbg !2087
  %132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2088
  %133 = getelementptr inbounds %struct.GPR, %struct.GPR* %132, i32 0, i32 31, !dbg !2089
  %134 = getelementptr inbounds %struct.Reg, %struct.Reg* %133, i32 0, i32 0, !dbg !2090
  %R15W = bitcast %union.anon* %134 to i16*, !dbg !2090
  %135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2091
  %136 = getelementptr inbounds %struct.GPR, %struct.GPR* %135, i32 0, i32 33, !dbg !2092
  %137 = getelementptr inbounds %struct.Reg, %struct.Reg* %136, i32 0, i32 0, !dbg !2093
  %IP = bitcast %union.anon* %137 to i16*, !dbg !2093
  %138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2094
  %139 = getelementptr inbounds %struct.GPR, %struct.GPR* %138, i32 0, i32 1, !dbg !2095
  %140 = getelementptr inbounds %struct.Reg, %struct.Reg* %139, i32 0, i32 0, !dbg !2096
  %EAX = bitcast %union.anon* %140 to i32*, !dbg !2096
  %141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2097
  %142 = getelementptr inbounds %struct.GPR, %struct.GPR* %141, i32 0, i32 3, !dbg !2098
  %143 = getelementptr inbounds %struct.Reg, %struct.Reg* %142, i32 0, i32 0, !dbg !2099
  %EBX = bitcast %union.anon* %143 to i32*, !dbg !2099
  %144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2100
  %145 = getelementptr inbounds %struct.GPR, %struct.GPR* %144, i32 0, i32 5, !dbg !2101
  %146 = getelementptr inbounds %struct.Reg, %struct.Reg* %145, i32 0, i32 0, !dbg !2102
  %ECX = bitcast %union.anon* %146 to i32*, !dbg !2102
  %147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2103
  %148 = getelementptr inbounds %struct.GPR, %struct.GPR* %147, i32 0, i32 7, !dbg !2104
  %149 = getelementptr inbounds %struct.Reg, %struct.Reg* %148, i32 0, i32 0, !dbg !2105
  %EDX = bitcast %union.anon* %149 to i32*, !dbg !2105
  %150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2106
  %151 = getelementptr inbounds %struct.GPR, %struct.GPR* %150, i32 0, i32 9, !dbg !2107
  %152 = getelementptr inbounds %struct.Reg, %struct.Reg* %151, i32 0, i32 0, !dbg !2108
  %ESI = bitcast %union.anon* %152 to i32*, !dbg !2108
  %153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2109
  %154 = getelementptr inbounds %struct.GPR, %struct.GPR* %153, i32 0, i32 11, !dbg !2110
  %155 = getelementptr inbounds %struct.Reg, %struct.Reg* %154, i32 0, i32 0, !dbg !2111
  %EDI = bitcast %union.anon* %155 to i32*, !dbg !2111
  %156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2112
  %157 = getelementptr inbounds %struct.GPR, %struct.GPR* %156, i32 0, i32 13, !dbg !2113
  %158 = getelementptr inbounds %struct.Reg, %struct.Reg* %157, i32 0, i32 0, !dbg !2114
  %ESP = bitcast %union.anon* %158 to i32*, !dbg !2114
  %159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2115
  %160 = getelementptr inbounds %struct.GPR, %struct.GPR* %159, i32 0, i32 15, !dbg !2116
  %161 = getelementptr inbounds %struct.Reg, %struct.Reg* %160, i32 0, i32 0, !dbg !2117
  %EBP = bitcast %union.anon* %161 to i32*, !dbg !2117
  %162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2118
  %163 = getelementptr inbounds %struct.GPR, %struct.GPR* %162, i32 0, i32 33, !dbg !2119
  %164 = getelementptr inbounds %struct.Reg, %struct.Reg* %163, i32 0, i32 0, !dbg !2120
  %EIP = bitcast %union.anon* %164 to i32*, !dbg !2120
  %165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2121
  %166 = getelementptr inbounds %struct.GPR, %struct.GPR* %165, i32 0, i32 17, !dbg !2122
  %167 = getelementptr inbounds %struct.Reg, %struct.Reg* %166, i32 0, i32 0, !dbg !2123
  %R8D = bitcast %union.anon* %167 to i32*, !dbg !2123
  %168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2124
  %169 = getelementptr inbounds %struct.GPR, %struct.GPR* %168, i32 0, i32 19, !dbg !2125
  %170 = getelementptr inbounds %struct.Reg, %struct.Reg* %169, i32 0, i32 0, !dbg !2126
  %R9D = bitcast %union.anon* %170 to i32*, !dbg !2126
  %171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2127
  %172 = getelementptr inbounds %struct.GPR, %struct.GPR* %171, i32 0, i32 21, !dbg !2128
  %173 = getelementptr inbounds %struct.Reg, %struct.Reg* %172, i32 0, i32 0, !dbg !2129
  %R10D = bitcast %union.anon* %173 to i32*, !dbg !2129
  %174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2130
  %175 = getelementptr inbounds %struct.GPR, %struct.GPR* %174, i32 0, i32 23, !dbg !2131
  %176 = getelementptr inbounds %struct.Reg, %struct.Reg* %175, i32 0, i32 0, !dbg !2132
  %R11D = bitcast %union.anon* %176 to i32*, !dbg !2132
  %177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2133
  %178 = getelementptr inbounds %struct.GPR, %struct.GPR* %177, i32 0, i32 25, !dbg !2134
  %179 = getelementptr inbounds %struct.Reg, %struct.Reg* %178, i32 0, i32 0, !dbg !2135
  %R12D = bitcast %union.anon* %179 to i32*, !dbg !2135
  %180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2136
  %181 = getelementptr inbounds %struct.GPR, %struct.GPR* %180, i32 0, i32 27, !dbg !2137
  %182 = getelementptr inbounds %struct.Reg, %struct.Reg* %181, i32 0, i32 0, !dbg !2138
  %R13D = bitcast %union.anon* %182 to i32*, !dbg !2138
  %183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2139
  %184 = getelementptr inbounds %struct.GPR, %struct.GPR* %183, i32 0, i32 29, !dbg !2140
  %185 = getelementptr inbounds %struct.Reg, %struct.Reg* %184, i32 0, i32 0, !dbg !2141
  %R14D = bitcast %union.anon* %185 to i32*, !dbg !2141
  %186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2142
  %187 = getelementptr inbounds %struct.GPR, %struct.GPR* %186, i32 0, i32 31, !dbg !2143
  %188 = getelementptr inbounds %struct.Reg, %struct.Reg* %187, i32 0, i32 0, !dbg !2144
  %R15D = bitcast %union.anon* %188 to i32*, !dbg !2144
  %189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2145
  %190 = getelementptr inbounds %struct.GPR, %struct.GPR* %189, i32 0, i32 1, !dbg !2146
  %191 = getelementptr inbounds %struct.Reg, %struct.Reg* %190, i32 0, i32 0, !dbg !2147
  %RAX = bitcast %union.anon* %191 to i64*, !dbg !2147
  %192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2148
  %193 = getelementptr inbounds %struct.GPR, %struct.GPR* %192, i32 0, i32 3, !dbg !2149
  %194 = getelementptr inbounds %struct.Reg, %struct.Reg* %193, i32 0, i32 0, !dbg !2150
  %RBX = bitcast %union.anon* %194 to i64*, !dbg !2150
  %195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2151
  %196 = getelementptr inbounds %struct.GPR, %struct.GPR* %195, i32 0, i32 5, !dbg !2152
  %197 = getelementptr inbounds %struct.Reg, %struct.Reg* %196, i32 0, i32 0, !dbg !2153
  %RCX = bitcast %union.anon* %197 to i64*, !dbg !2153
  %198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2154
  %199 = getelementptr inbounds %struct.GPR, %struct.GPR* %198, i32 0, i32 7, !dbg !2155
  %200 = getelementptr inbounds %struct.Reg, %struct.Reg* %199, i32 0, i32 0, !dbg !2156
  %RDX = bitcast %union.anon* %200 to i64*, !dbg !2156
  %201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2157
  %202 = getelementptr inbounds %struct.GPR, %struct.GPR* %201, i32 0, i32 9, !dbg !2158
  %203 = getelementptr inbounds %struct.Reg, %struct.Reg* %202, i32 0, i32 0, !dbg !2159
  %RSI = bitcast %union.anon* %203 to i64*, !dbg !2159
  %204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2160
  %205 = getelementptr inbounds %struct.GPR, %struct.GPR* %204, i32 0, i32 11, !dbg !2161
  %206 = getelementptr inbounds %struct.Reg, %struct.Reg* %205, i32 0, i32 0, !dbg !2162
  %RDI = bitcast %union.anon* %206 to i64*, !dbg !2162
  %207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2163
  %208 = getelementptr inbounds %struct.GPR, %struct.GPR* %207, i32 0, i32 13, !dbg !2164
  %209 = getelementptr inbounds %struct.Reg, %struct.Reg* %208, i32 0, i32 0, !dbg !2165
  %RSP = bitcast %union.anon* %209 to i64*, !dbg !2165
  %210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2166
  %211 = getelementptr inbounds %struct.GPR, %struct.GPR* %210, i32 0, i32 15, !dbg !2167
  %212 = getelementptr inbounds %struct.Reg, %struct.Reg* %211, i32 0, i32 0, !dbg !2168
  %RBP = bitcast %union.anon* %212 to i64*, !dbg !2168
  %213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2169
  %214 = getelementptr inbounds %struct.GPR, %struct.GPR* %213, i32 0, i32 17, !dbg !2170
  %215 = getelementptr inbounds %struct.Reg, %struct.Reg* %214, i32 0, i32 0, !dbg !2171
  %R8 = bitcast %union.anon* %215 to i64*, !dbg !2171
  %216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2172
  %217 = getelementptr inbounds %struct.GPR, %struct.GPR* %216, i32 0, i32 19, !dbg !2173
  %218 = getelementptr inbounds %struct.Reg, %struct.Reg* %217, i32 0, i32 0, !dbg !2174
  %R9 = bitcast %union.anon* %218 to i64*, !dbg !2174
  %219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2175
  %220 = getelementptr inbounds %struct.GPR, %struct.GPR* %219, i32 0, i32 21, !dbg !2176
  %221 = getelementptr inbounds %struct.Reg, %struct.Reg* %220, i32 0, i32 0, !dbg !2177
  %R10 = bitcast %union.anon* %221 to i64*, !dbg !2177
  %222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2178
  %223 = getelementptr inbounds %struct.GPR, %struct.GPR* %222, i32 0, i32 23, !dbg !2179
  %224 = getelementptr inbounds %struct.Reg, %struct.Reg* %223, i32 0, i32 0, !dbg !2180
  %R11 = bitcast %union.anon* %224 to i64*, !dbg !2180
  %225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2181
  %226 = getelementptr inbounds %struct.GPR, %struct.GPR* %225, i32 0, i32 25, !dbg !2182
  %227 = getelementptr inbounds %struct.Reg, %struct.Reg* %226, i32 0, i32 0, !dbg !2183
  %R12 = bitcast %union.anon* %227 to i64*, !dbg !2183
  %228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2184
  %229 = getelementptr inbounds %struct.GPR, %struct.GPR* %228, i32 0, i32 27, !dbg !2185
  %230 = getelementptr inbounds %struct.Reg, %struct.Reg* %229, i32 0, i32 0, !dbg !2186
  %R13 = bitcast %union.anon* %230 to i64*, !dbg !2186
  %231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2187
  %232 = getelementptr inbounds %struct.GPR, %struct.GPR* %231, i32 0, i32 29, !dbg !2188
  %233 = getelementptr inbounds %struct.Reg, %struct.Reg* %232, i32 0, i32 0, !dbg !2189
  %R14 = bitcast %union.anon* %233 to i64*, !dbg !2189
  %234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2190
  %235 = getelementptr inbounds %struct.GPR, %struct.GPR* %234, i32 0, i32 31, !dbg !2191
  %236 = getelementptr inbounds %struct.Reg, %struct.Reg* %235, i32 0, i32 0, !dbg !2192
  %R15 = bitcast %union.anon* %236 to i64*, !dbg !2192
  %237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2193
  %238 = getelementptr inbounds %struct.GPR, %struct.GPR* %237, i32 0, i32 33, !dbg !2194
  %239 = getelementptr inbounds %struct.Reg, %struct.Reg* %238, i32 0, i32 0, !dbg !2195
  %RIP = bitcast %union.anon* %239 to i64*, !dbg !2195
  %240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4, !dbg !2196
  %241 = getelementptr inbounds %struct.Segments, %struct.Segments* %240, i32 0, i32 1, !dbg !2197
  %SS = bitcast %union.SegmentSelector* %241 to i16*, !dbg !2198
  %242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4, !dbg !2199
  %243 = getelementptr inbounds %struct.Segments, %struct.Segments* %242, i32 0, i32 3, !dbg !2200
  %ES = bitcast %union.SegmentSelector* %243 to i16*, !dbg !2201
  %244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4, !dbg !2202
  %245 = getelementptr inbounds %struct.Segments, %struct.Segments* %244, i32 0, i32 5, !dbg !2203
  %GS = bitcast %union.SegmentSelector* %245 to i16*, !dbg !2204
  %246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4, !dbg !2205
  %247 = getelementptr inbounds %struct.Segments, %struct.Segments* %246, i32 0, i32 7, !dbg !2206
  %FS = bitcast %union.SegmentSelector* %247 to i16*, !dbg !2207
  %248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4, !dbg !2208
  %249 = getelementptr inbounds %struct.Segments, %struct.Segments* %248, i32 0, i32 9, !dbg !2209
  %DS = bitcast %union.SegmentSelector* %249 to i16*, !dbg !2210
  %250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4, !dbg !2211
  %251 = getelementptr inbounds %struct.Segments, %struct.Segments* %250, i32 0, i32 11, !dbg !2212
  %CS = bitcast %union.SegmentSelector* %251 to i16*, !dbg !2213
  %252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5, !dbg !2214
  %253 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %252, i32 0, i32 5, !dbg !2215
  %254 = getelementptr inbounds %struct.Reg, %struct.Reg* %253, i32 0, i32 0, !dbg !2216
  %GS_BASE = bitcast %union.anon* %254 to i64*, !dbg !2216
  %255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5, !dbg !2217
  %256 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %255, i32 0, i32 7, !dbg !2218
  %257 = getelementptr inbounds %struct.Reg, %struct.Reg* %256, i32 0, i32 0, !dbg !2219
  %FS_BASE = bitcast %union.anon* %257 to i64*, !dbg !2219
  %258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2220
  %259 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %258, i64 0, i64 0, !dbg !2221
  %YMM0 = bitcast %union.VectorReg* %259 to %"class.std::bitset"*, !dbg !2222
  %260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2223
  %261 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %260, i64 0, i64 1, !dbg !2224
  %YMM1 = bitcast %union.VectorReg* %261 to %"class.std::bitset"*, !dbg !2225
  %262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2226
  %263 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %262, i64 0, i64 2, !dbg !2227
  %YMM2 = bitcast %union.VectorReg* %263 to %"class.std::bitset"*, !dbg !2228
  %264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2229
  %265 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %264, i64 0, i64 3, !dbg !2230
  %YMM3 = bitcast %union.VectorReg* %265 to %"class.std::bitset"*, !dbg !2231
  %266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2232
  %267 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %266, i64 0, i64 4, !dbg !2233
  %YMM4 = bitcast %union.VectorReg* %267 to %"class.std::bitset"*, !dbg !2234
  %268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2235
  %269 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %268, i64 0, i64 5, !dbg !2236
  %YMM5 = bitcast %union.VectorReg* %269 to %"class.std::bitset"*, !dbg !2237
  %270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2238
  %271 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %270, i64 0, i64 6, !dbg !2239
  %YMM6 = bitcast %union.VectorReg* %271 to %"class.std::bitset"*, !dbg !2240
  %272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2241
  %273 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %272, i64 0, i64 7, !dbg !2242
  %YMM7 = bitcast %union.VectorReg* %273 to %"class.std::bitset"*, !dbg !2243
  %274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2244
  %275 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %274, i64 0, i64 8, !dbg !2245
  %YMM8 = bitcast %union.VectorReg* %275 to %"class.std::bitset"*, !dbg !2246
  %276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2247
  %277 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %276, i64 0, i64 9, !dbg !2248
  %YMM9 = bitcast %union.VectorReg* %277 to %"class.std::bitset"*, !dbg !2249
  %278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2250
  %279 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %278, i64 0, i64 10, !dbg !2251
  %YMM10 = bitcast %union.VectorReg* %279 to %"class.std::bitset"*, !dbg !2252
  %280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2253
  %281 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %280, i64 0, i64 11, !dbg !2254
  %YMM11 = bitcast %union.VectorReg* %281 to %"class.std::bitset"*, !dbg !2255
  %282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2256
  %283 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %282, i64 0, i64 12, !dbg !2257
  %YMM12 = bitcast %union.VectorReg* %283 to %"class.std::bitset"*, !dbg !2258
  %284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2259
  %285 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %284, i64 0, i64 13, !dbg !2260
  %YMM13 = bitcast %union.VectorReg* %285 to %"class.std::bitset"*, !dbg !2261
  %286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2262
  %287 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %286, i64 0, i64 14, !dbg !2263
  %YMM14 = bitcast %union.VectorReg* %287 to %"class.std::bitset"*, !dbg !2264
  %288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2265
  %289 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %288, i64 0, i64 15, !dbg !2266
  %YMM15 = bitcast %union.VectorReg* %289 to %"class.std::bitset"*, !dbg !2267
  %290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2268
  %291 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %290, i64 0, i64 0, !dbg !2269
  %XMM0 = bitcast %union.VectorReg* %291 to %union.vec128_t*, !dbg !2270
  %292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2271
  %293 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %292, i64 0, i64 1, !dbg !2272
  %XMM1 = bitcast %union.VectorReg* %293 to %union.vec128_t*, !dbg !2273
  %294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2274
  %295 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %294, i64 0, i64 2, !dbg !2275
  %XMM2 = bitcast %union.VectorReg* %295 to %union.vec128_t*, !dbg !2276
  %296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2277
  %297 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %296, i64 0, i64 3, !dbg !2278
  %XMM3 = bitcast %union.VectorReg* %297 to %union.vec128_t*, !dbg !2279
  %298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2280
  %299 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %298, i64 0, i64 4, !dbg !2281
  %XMM4 = bitcast %union.VectorReg* %299 to %union.vec128_t*, !dbg !2282
  %300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2283
  %301 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %300, i64 0, i64 5, !dbg !2284
  %XMM5 = bitcast %union.VectorReg* %301 to %union.vec128_t*, !dbg !2285
  %302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2286
  %303 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %302, i64 0, i64 6, !dbg !2287
  %XMM6 = bitcast %union.VectorReg* %303 to %union.vec128_t*, !dbg !2288
  %304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2289
  %305 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %304, i64 0, i64 7, !dbg !2290
  %XMM7 = bitcast %union.VectorReg* %305 to %union.vec128_t*, !dbg !2291
  %306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2292
  %307 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %306, i64 0, i64 8, !dbg !2293
  %XMM8 = bitcast %union.VectorReg* %307 to %union.vec128_t*, !dbg !2294
  %308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2295
  %309 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %308, i64 0, i64 9, !dbg !2296
  %XMM9 = bitcast %union.VectorReg* %309 to %union.vec128_t*, !dbg !2297
  %310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2298
  %311 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %310, i64 0, i64 10, !dbg !2299
  %XMM10 = bitcast %union.VectorReg* %311 to %union.vec128_t*, !dbg !2300
  %312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2301
  %313 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %312, i64 0, i64 11, !dbg !2302
  %XMM11 = bitcast %union.VectorReg* %313 to %union.vec128_t*, !dbg !2303
  %314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2304
  %315 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %314, i64 0, i64 12, !dbg !2305
  %XMM12 = bitcast %union.VectorReg* %315 to %union.vec128_t*, !dbg !2306
  %316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2307
  %317 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %316, i64 0, i64 13, !dbg !2308
  %XMM13 = bitcast %union.VectorReg* %317 to %union.vec128_t*, !dbg !2309
  %318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2310
  %319 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %318, i64 0, i64 14, !dbg !2311
  %XMM14 = bitcast %union.VectorReg* %319 to %union.vec128_t*, !dbg !2312
  %320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2313
  %321 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %320, i64 0, i64 15, !dbg !2314
  %XMM15 = bitcast %union.VectorReg* %321 to %union.vec128_t*, !dbg !2315
  %322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7, !dbg !2316
  %323 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %322, i32 0, i32 0, !dbg !2317
  %324 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %323, i64 0, i64 0, !dbg !2318
  %ST0 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %324, i32 0, i32 1, !dbg !2319
  %325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7, !dbg !2320
  %326 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %325, i32 0, i32 0, !dbg !2321
  %327 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %326, i64 0, i64 1, !dbg !2322
  %ST1 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %327, i32 0, i32 1, !dbg !2323
  %328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7, !dbg !2324
  %329 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %328, i32 0, i32 0, !dbg !2325
  %330 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %329, i64 0, i64 2, !dbg !2326
  %ST2 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %330, i32 0, i32 1, !dbg !2327
  %331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7, !dbg !2328
  %332 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %331, i32 0, i32 0, !dbg !2329
  %333 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %332, i64 0, i64 3, !dbg !2330
  %ST3 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %333, i32 0, i32 1, !dbg !2331
  %334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7, !dbg !2332
  %335 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %334, i32 0, i32 0, !dbg !2333
  %336 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %335, i64 0, i64 4, !dbg !2334
  %ST4 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %336, i32 0, i32 1, !dbg !2335
  %337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7, !dbg !2336
  %338 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %337, i32 0, i32 0, !dbg !2337
  %339 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %338, i64 0, i64 5, !dbg !2338
  %ST5 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %339, i32 0, i32 1, !dbg !2339
  %340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7, !dbg !2340
  %341 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %340, i32 0, i32 0, !dbg !2341
  %342 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %341, i64 0, i64 6, !dbg !2342
  %ST6 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %342, i32 0, i32 1, !dbg !2343
  %343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7, !dbg !2344
  %344 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %343, i32 0, i32 0, !dbg !2345
  %345 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %344, i64 0, i64 7, !dbg !2346
  %ST7 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %345, i32 0, i32 1, !dbg !2347
  %346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8, !dbg !2348
  %347 = getelementptr inbounds %struct.MMX, %struct.MMX* %346, i32 0, i32 0, !dbg !2349
  %348 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %347, i64 0, i64 0, !dbg !2350
  %349 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %348, i32 0, i32 1, !dbg !2351
  %350 = bitcast %union.vec64_t* %349 to %struct.uint64v1_t*, !dbg !2352
  %351 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %350, i32 0, i32 0, !dbg !2353
  %MM0 = getelementptr inbounds [1 x i64], [1 x i64]* %351, i64 0, i64 0, !dbg !2350
  %352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8, !dbg !2354
  %353 = getelementptr inbounds %struct.MMX, %struct.MMX* %352, i32 0, i32 0, !dbg !2355
  %354 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %353, i64 0, i64 1, !dbg !2356
  %355 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %354, i32 0, i32 1, !dbg !2357
  %356 = bitcast %union.vec64_t* %355 to %struct.uint64v1_t*, !dbg !2358
  %357 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %356, i32 0, i32 0, !dbg !2359
  %MM1 = getelementptr inbounds [1 x i64], [1 x i64]* %357, i64 0, i64 0, !dbg !2356
  %358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8, !dbg !2360
  %359 = getelementptr inbounds %struct.MMX, %struct.MMX* %358, i32 0, i32 0, !dbg !2361
  %360 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %359, i64 0, i64 2, !dbg !2362
  %361 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %360, i32 0, i32 1, !dbg !2363
  %362 = bitcast %union.vec64_t* %361 to %struct.uint64v1_t*, !dbg !2364
  %363 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %362, i32 0, i32 0, !dbg !2365
  %MM2 = getelementptr inbounds [1 x i64], [1 x i64]* %363, i64 0, i64 0, !dbg !2362
  %364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8, !dbg !2366
  %365 = getelementptr inbounds %struct.MMX, %struct.MMX* %364, i32 0, i32 0, !dbg !2367
  %366 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %365, i64 0, i64 3, !dbg !2368
  %367 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %366, i32 0, i32 1, !dbg !2369
  %368 = bitcast %union.vec64_t* %367 to %struct.uint64v1_t*, !dbg !2370
  %369 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %368, i32 0, i32 0, !dbg !2371
  %MM3 = getelementptr inbounds [1 x i64], [1 x i64]* %369, i64 0, i64 0, !dbg !2368
  %370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8, !dbg !2372
  %371 = getelementptr inbounds %struct.MMX, %struct.MMX* %370, i32 0, i32 0, !dbg !2373
  %372 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %371, i64 0, i64 4, !dbg !2374
  %373 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %372, i32 0, i32 1, !dbg !2375
  %374 = bitcast %union.vec64_t* %373 to %struct.uint64v1_t*, !dbg !2376
  %375 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %374, i32 0, i32 0, !dbg !2377
  %MM4 = getelementptr inbounds [1 x i64], [1 x i64]* %375, i64 0, i64 0, !dbg !2374
  %376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8, !dbg !2378
  %377 = getelementptr inbounds %struct.MMX, %struct.MMX* %376, i32 0, i32 0, !dbg !2379
  %378 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %377, i64 0, i64 5, !dbg !2380
  %379 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %378, i32 0, i32 1, !dbg !2381
  %380 = bitcast %union.vec64_t* %379 to %struct.uint64v1_t*, !dbg !2382
  %381 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %380, i32 0, i32 0, !dbg !2383
  %MM5 = getelementptr inbounds [1 x i64], [1 x i64]* %381, i64 0, i64 0, !dbg !2380
  %382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8, !dbg !2384
  %383 = getelementptr inbounds %struct.MMX, %struct.MMX* %382, i32 0, i32 0, !dbg !2385
  %384 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %383, i64 0, i64 6, !dbg !2386
  %385 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %384, i32 0, i32 1, !dbg !2387
  %386 = bitcast %union.vec64_t* %385 to %struct.uint64v1_t*, !dbg !2388
  %387 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %386, i32 0, i32 0, !dbg !2389
  %MM6 = getelementptr inbounds [1 x i64], [1 x i64]* %387, i64 0, i64 0, !dbg !2386
  %388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8, !dbg !2390
  %389 = getelementptr inbounds %struct.MMX, %struct.MMX* %388, i32 0, i32 0, !dbg !2391
  %390 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %389, i64 0, i64 7, !dbg !2392
  %391 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %390, i32 0, i32 1, !dbg !2393
  %392 = bitcast %union.vec64_t* %391 to %struct.uint64v1_t*, !dbg !2394
  %393 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %392, i32 0, i32 0, !dbg !2395
  %MM7 = getelementptr inbounds [1 x i64], [1 x i64]* %393, i64 0, i64 0, !dbg !2392
  %394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2, !dbg !2396
  %AF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %394, i32 0, i32 5, !dbg !2397
  %395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2, !dbg !2398
  %CF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %395, i32 0, i32 1, !dbg !2399
  %396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2, !dbg !2400
  %DF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %396, i32 0, i32 11, !dbg !2401
  %397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2, !dbg !2402
  %OF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %397, i32 0, i32 13, !dbg !2403
  %398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2, !dbg !2404
  %PF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %398, i32 0, i32 3, !dbg !2405
  %399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2, !dbg !2406
  %SF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %399, i32 0, i32 9, !dbg !2407
  %400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2, !dbg !2408
  %ZF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %400, i32 0, i32 7, !dbg !2409
  store i64* @DR0, i64** %_DR0, align 8, !dbg !2410
  store i64* @DR1, i64** %_DR1, align 8, !dbg !2411
  store i64* @DR2, i64** %_DR2, align 8, !dbg !2412
  store i64* @DR3, i64** %_DR3, align 8, !dbg !2413
  store i64* @DR4, i64** %_DR4, align 8, !dbg !2414
  store i64* @DR5, i64** %_DR5, align 8, !dbg !2415
  store i64* @DR6, i64** %_DR6, align 8, !dbg !2416
  store i64* @DR7, i64** %_DR7, align 8, !dbg !2417
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0, align 8, !dbg !2418
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1, align 8, !dbg !2419
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2, align 8, !dbg !2420
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3, align 8, !dbg !2421
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4, align 8, !dbg !2422
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8, align 8, !dbg !2423
  ret %struct.Memory* %2, !dbg !2424
}

; Function Attrs: noduplicate noinline nounwind optnone
define void @__remill_intrinsics() #9 !dbg !2425 {
  ret void, !dbg !2427
}

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_barrier_load_store(%struct.Memory*) #10

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_atomic_begin(%struct.Memory*) #10

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_atomic_end(%struct.Memory*) #10

declare %struct.Memory* @__remill_fetch_and_sub_8(%struct.Memory*, i64, i8* dereferenceable(1)) #11

declare %struct.Memory* @__remill_fetch_and_sub_16(%struct.Memory*, i64, i16* dereferenceable(2)) #11

declare %struct.Memory* @__remill_fetch_and_sub_32(%struct.Memory*, i64, i32* dereferenceable(4)) #11

declare %struct.Memory* @__remill_fetch_and_sub_64(%struct.Memory*, i64, i64* dereferenceable(8)) #11

declare %struct.Memory* @__remill_fetch_and_or_8(%struct.Memory*, i64, i8* dereferenceable(1)) #11

declare %struct.Memory* @__remill_fetch_and_or_16(%struct.Memory*, i64, i16* dereferenceable(2)) #11

declare %struct.Memory* @__remill_fetch_and_or_32(%struct.Memory*, i64, i32* dereferenceable(4)) #11

declare %struct.Memory* @__remill_fetch_and_or_64(%struct.Memory*, i64, i64* dereferenceable(8)) #11

declare %struct.Memory* @__remill_fetch_and_and_8(%struct.Memory*, i64, i8* dereferenceable(1)) #11

declare %struct.Memory* @__remill_fetch_and_and_16(%struct.Memory*, i64, i16* dereferenceable(2)) #11

declare %struct.Memory* @__remill_fetch_and_and_32(%struct.Memory*, i64, i32* dereferenceable(4)) #11

declare %struct.Memory* @__remill_fetch_and_and_64(%struct.Memory*, i64, i64* dereferenceable(8)) #11

declare %struct.Memory* @__remill_fetch_and_xor_8(%struct.Memory*, i64, i8* dereferenceable(1)) #11

declare %struct.Memory* @__remill_fetch_and_xor_16(%struct.Memory*, i64, i16* dereferenceable(2)) #11

declare %struct.Memory* @__remill_fetch_and_xor_32(%struct.Memory*, i64, i32* dereferenceable(4)) #11

declare %struct.Memory* @__remill_fetch_and_xor_64(%struct.Memory*, i64, i64* dereferenceable(8)) #11

; Function Attrs: noduplicate noinline nounwind optnone
declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*) #12

; Function Attrs: noduplicate noinline nounwind optnone
declare %struct.Memory* @__remill_function_return(%struct.State* dereferenceable(3376), i64, %struct.Memory*) #12

; Function Attrs: noduplicate noinline nounwind optnone
declare %struct.Memory* @__remill_jump(%struct.State* dereferenceable(3376), i64, %struct.Memory*) #12

; Function Attrs: noduplicate noinline nounwind optnone
declare %struct.Memory* @__remill_missing_block(%struct.State* dereferenceable(3376), i64, %struct.Memory*) #12

; Function Attrs: noduplicate noinline nounwind optnone
declare %struct.Memory* @__remill_async_hyper_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*) #12

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare zeroext i16 @__remill_undefined_16() #10

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare i32 @__remill_undefined_32() #10

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare float @__remill_undefined_f32() #10

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: noinline
declare extern_weak x86_64_sysvcc i64 @__gmon_start__() #13

; Function Attrs: noinline
declare extern_weak x86_64_sysvcc i64 @log(i64) #13

; Function Attrs: noinline
declare extern_weak x86_64_sysvcc i64 @printf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #13

; Function Attrs: noinline
declare extern_weak x86_64_sysvcc i64 @time(i64) #13

; Function Attrs: noinline
declare extern_weak x86_64_sysvcc i64 @__libc_start_main(i64, i64, i64, i64, i64, i64, i64, i64) #13

; Function Attrs: noinline
declare extern_weak x86_64_sysvcc i64 @atol(i64) #13

; Function Attrs: noinline
declare extern_weak x86_64_sysvcc i64 @fprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #13

; Function Attrs: noinline
declare extern_weak x86_64_sysvcc i64 @exp(i64) #13

; Function Attrs: noinline
declare extern_weak x86_64_sysvcc i64 @strncmp(i64, i64, i64) #13

; Function Attrs: noinline
define %struct.Memory* @sub_4007a0__dl_relocate_static_pie(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_4007a0:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 2
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10 = load i64, i64* %9, align 8, !tbaa !2428
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11
  store i64 %12, i64* %8, align 8, !tbaa !2428
  %13 = add i64 %10, 8
  store i64 %13, i64* %9, align 8, !tbaa !2428
  ret %struct.Memory* %2
}

; Function Attrs: noinline
define %struct.Memory* @sub_401790_P3(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_401790:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 13
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSP = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %16 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %15, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %16 to %"class.std::bitset"*
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %18 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %17, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %18 to %"class.std::bitset"*
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %20 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %19, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %20 to %union.vec128_t*
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %22 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %21, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %22 to %union.vec128_t*
  %23 = load i64, i64* %RBP
  %24 = load i64, i64* %PC
  %25 = add i64 %24, 1
  store i64 %25, i64* %PC
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %27 = load i64, i64* %26, align 8, !tbaa !2428
  %28 = add i64 %27, -8
  %29 = inttoptr i64 %28 to i64*
  store i64 %23, i64* %29
  store i64 %28, i64* %26, align 8, !tbaa !2428
  %30 = load i64, i64* %RSP
  %31 = load i64, i64* %PC
  %32 = add i64 %31, 3
  store i64 %32, i64* %PC
  store i64 %30, i64* %RBP, align 8, !tbaa !2428
  %33 = load i64, i64* %RBP
  %34 = sub i64 %33, 8
  %35 = bitcast %union.vec128_t* %XMM0 to i8*
  %36 = load i64, i64* %PC
  %37 = add i64 %36, 5
  store i64 %37, i64* %PC
  %38 = bitcast i8* %35 to double*
  %39 = load double, double* %38, align 1
  %40 = inttoptr i64 %34 to double*
  store double %39, double* %40
  %41 = load i64, i64* %RBP
  %42 = sub i64 %41, 16
  %43 = bitcast %union.vec128_t* %XMM1 to i8*
  %44 = load i64, i64* %PC
  %45 = add i64 %44, 5
  store i64 %45, i64* %PC
  %46 = bitcast i8* %43 to double*
  %47 = load double, double* %46, align 1
  %48 = inttoptr i64 %42 to double*
  store double %47, double* %48
  %49 = load i64, i64* %RBP
  %50 = sub i64 %49, 24
  %51 = load i64, i64* %RDI
  %52 = load i64, i64* %PC
  %53 = add i64 %52, 4
  store i64 %53, i64* %PC
  %54 = inttoptr i64 %50 to i64*
  store i64 %51, i64* %54
  %55 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %56 = load i64, i64* %RBP
  %57 = sub i64 %56, 8
  %58 = load i64, i64* %PC
  %59 = add i64 %58, 5
  store i64 %59, i64* %PC
  %60 = inttoptr i64 %57 to double*
  %61 = load double, double* %60
  %62 = bitcast i8* %55 to double*
  store double %61, double* %62, align 1, !tbaa !2432
  %63 = getelementptr inbounds i8, i8* %55, i64 8
  %64 = bitcast i8* %63 to double*
  store double 0.000000e+00, double* %64, align 1, !tbaa !2432
  %65 = load i64, i64* %RBP
  %66 = sub i64 %65, 32
  %67 = bitcast %union.vec128_t* %XMM0 to i8*
  %68 = load i64, i64* %PC
  %69 = add i64 %68, 5
  store i64 %69, i64* %PC
  %70 = bitcast i8* %67 to double*
  %71 = load double, double* %70, align 1
  %72 = inttoptr i64 %66 to double*
  store double %71, double* %72
  %73 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %74 = load i64, i64* %RBP
  %75 = sub i64 %74, 16
  %76 = load i64, i64* %PC
  %77 = add i64 %76, 5
  store i64 %77, i64* %PC
  %78 = inttoptr i64 %75 to double*
  %79 = load double, double* %78
  %80 = bitcast i8* %73 to double*
  store double %79, double* %80, align 1, !tbaa !2432
  %81 = getelementptr inbounds i8, i8* %73, i64 8
  %82 = bitcast i8* %81 to double*
  store double 0.000000e+00, double* %82, align 1, !tbaa !2432
  %83 = load i64, i64* %RBP
  %84 = sub i64 %83, 40
  %85 = bitcast %union.vec128_t* %XMM0 to i8*
  %86 = load i64, i64* %PC
  %87 = add i64 %86, 5
  store i64 %87, i64* %PC
  %88 = bitcast i8* %85 to double*
  %89 = load double, double* %88, align 1
  %90 = inttoptr i64 %84 to double*
  store double %89, double* %90
  %91 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %92 = load i64, i64* %PC
  %93 = add i64 %92, 9
  store i64 %93, i64* %PC
  %94 = load double, double* bitcast (%T_type* @T to double*)
  %95 = bitcast i8* %91 to double*
  store double %94, double* %95, align 1, !tbaa !2432
  %96 = getelementptr inbounds i8, i8* %91, i64 8
  %97 = bitcast i8* %96 to double*
  store double 0.000000e+00, double* %97, align 1, !tbaa !2432
  %98 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %99 = load i64, i64* %RBP
  %100 = sub i64 %99, 32
  %101 = load i64, i64* %PC
  %102 = add i64 %101, 5
  store i64 %102, i64* %PC
  %103 = inttoptr i64 %100 to double*
  %104 = load double, double* %103
  %105 = bitcast i8* %98 to double*
  store double %104, double* %105, align 1, !tbaa !2432
  %106 = getelementptr inbounds i8, i8* %98, i64 8
  %107 = bitcast i8* %106 to double*
  store double 0.000000e+00, double* %107, align 1, !tbaa !2432
  %108 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %109 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %110 = load i64, i64* %RBP
  %111 = sub i64 %110, 40
  %112 = load i64, i64* %PC
  %113 = add i64 %112, 5
  store i64 %113, i64* %PC
  %114 = bitcast i8* %109 to double*
  %115 = load double, double* %114, align 1
  %116 = getelementptr inbounds i8, i8* %109, i64 8
  %117 = bitcast i8* %116 to i64*
  %118 = load i64, i64* %117, align 1
  %119 = inttoptr i64 %111 to double*
  %120 = load double, double* %119
  %121 = fadd double %115, %120
  %122 = bitcast i8* %108 to double*
  store double %121, double* %122, align 1, !tbaa !2432
  %123 = getelementptr inbounds i8, i8* %108, i64 8
  %124 = bitcast i8* %123 to i64*
  store i64 %118, i64* %124, align 1, !tbaa !2432
  %125 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %126 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %127 = bitcast %union.vec128_t* %XMM1 to i8*
  %128 = load i64, i64* %PC
  %129 = add i64 %128, 4
  store i64 %129, i64* %PC
  %130 = bitcast i8* %126 to double*
  %131 = load double, double* %130, align 1
  %132 = getelementptr inbounds i8, i8* %126, i64 8
  %133 = bitcast i8* %132 to i64*
  %134 = load i64, i64* %133, align 1
  %135 = bitcast i8* %127 to double*
  %136 = load double, double* %135, align 1
  %137 = fmul double %131, %136
  %138 = bitcast i8* %125 to double*
  store double %137, double* %138, align 1, !tbaa !2432
  %139 = getelementptr inbounds i8, i8* %125, i64 8
  %140 = bitcast i8* %139 to i64*
  store i64 %134, i64* %140, align 1, !tbaa !2432
  %141 = load i64, i64* %RBP
  %142 = sub i64 %141, 32
  %143 = bitcast %union.vec128_t* %XMM0 to i8*
  %144 = load i64, i64* %PC
  %145 = add i64 %144, 5
  store i64 %145, i64* %PC
  %146 = bitcast i8* %143 to double*
  %147 = load double, double* %146, align 1
  %148 = inttoptr i64 %142 to double*
  store double %147, double* %148
  %149 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %150 = load i64, i64* %PC
  %151 = add i64 %150, 9
  store i64 %151, i64* %PC
  %152 = load double, double* bitcast (%T_type* @T to double*)
  %153 = bitcast i8* %149 to double*
  store double %152, double* %153, align 1, !tbaa !2432
  %154 = getelementptr inbounds i8, i8* %149, i64 8
  %155 = bitcast i8* %154 to double*
  store double 0.000000e+00, double* %155, align 1, !tbaa !2432
  %156 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %157 = load i64, i64* %RBP
  %158 = sub i64 %157, 32
  %159 = load i64, i64* %PC
  %160 = add i64 %159, 5
  store i64 %160, i64* %PC
  %161 = inttoptr i64 %158 to double*
  %162 = load double, double* %161
  %163 = bitcast i8* %156 to double*
  store double %162, double* %163, align 1, !tbaa !2432
  %164 = getelementptr inbounds i8, i8* %156, i64 8
  %165 = bitcast i8* %164 to double*
  store double 0.000000e+00, double* %165, align 1, !tbaa !2432
  %166 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %167 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %168 = load i64, i64* %RBP
  %169 = sub i64 %168, 40
  %170 = load i64, i64* %PC
  %171 = add i64 %170, 5
  store i64 %171, i64* %PC
  %172 = bitcast i8* %167 to double*
  %173 = load double, double* %172, align 1
  %174 = getelementptr inbounds i8, i8* %167, i64 8
  %175 = bitcast i8* %174 to i64*
  %176 = load i64, i64* %175, align 1
  %177 = inttoptr i64 %169 to double*
  %178 = load double, double* %177
  %179 = fadd double %173, %178
  %180 = bitcast i8* %166 to double*
  store double %179, double* %180, align 1, !tbaa !2432
  %181 = getelementptr inbounds i8, i8* %166, i64 8
  %182 = bitcast i8* %181 to i64*
  store i64 %176, i64* %182, align 1, !tbaa !2432
  %183 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %184 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %185 = bitcast %union.vec128_t* %XMM1 to i8*
  %186 = load i64, i64* %PC
  %187 = add i64 %186, 4
  store i64 %187, i64* %PC
  %188 = bitcast i8* %184 to double*
  %189 = load double, double* %188, align 1
  %190 = getelementptr inbounds i8, i8* %184, i64 8
  %191 = bitcast i8* %190 to i64*
  %192 = load i64, i64* %191, align 1
  %193 = bitcast i8* %185 to double*
  %194 = load double, double* %193, align 1
  %195 = fmul double %189, %194
  %196 = bitcast i8* %183 to double*
  store double %195, double* %196, align 1, !tbaa !2432
  %197 = getelementptr inbounds i8, i8* %183, i64 8
  %198 = bitcast i8* %197 to i64*
  store i64 %192, i64* %198, align 1, !tbaa !2432
  %199 = load i64, i64* %RBP
  %200 = sub i64 %199, 40
  %201 = bitcast %union.vec128_t* %XMM0 to i8*
  %202 = load i64, i64* %PC
  %203 = add i64 %202, 5
  store i64 %203, i64* %PC
  %204 = bitcast i8* %201 to double*
  %205 = load double, double* %204, align 1
  %206 = inttoptr i64 %200 to double*
  store double %205, double* %206
  %207 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %208 = load i64, i64* %RBP
  %209 = sub i64 %208, 32
  %210 = load i64, i64* %PC
  %211 = add i64 %210, 5
  store i64 %211, i64* %PC
  %212 = inttoptr i64 %209 to double*
  %213 = load double, double* %212
  %214 = bitcast i8* %207 to double*
  store double %213, double* %214, align 1, !tbaa !2432
  %215 = getelementptr inbounds i8, i8* %207, i64 8
  %216 = bitcast i8* %215 to double*
  store double 0.000000e+00, double* %216, align 1, !tbaa !2432
  %217 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %218 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %219 = load i64, i64* %RBP
  %220 = sub i64 %219, 40
  %221 = load i64, i64* %PC
  %222 = add i64 %221, 5
  store i64 %222, i64* %PC
  %223 = bitcast i8* %218 to double*
  %224 = load double, double* %223, align 1
  %225 = getelementptr inbounds i8, i8* %218, i64 8
  %226 = bitcast i8* %225 to i64*
  %227 = load i64, i64* %226, align 1
  %228 = inttoptr i64 %220 to double*
  %229 = load double, double* %228
  %230 = fadd double %224, %229
  %231 = bitcast i8* %217 to double*
  store double %230, double* %231, align 1, !tbaa !2432
  %232 = getelementptr inbounds i8, i8* %217, i64 8
  %233 = bitcast i8* %232 to i64*
  store i64 %227, i64* %233, align 1, !tbaa !2432
  %234 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %235 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %236 = load i64, i64* %PC
  %237 = add i64 %236, 9
  store i64 %237, i64* %PC
  %238 = bitcast i8* %235 to double*
  %239 = load double, double* %238, align 1
  %240 = getelementptr inbounds i8, i8* %235, i64 8
  %241 = bitcast i8* %240 to i64*
  %242 = load i64, i64* %241, align 1
  %243 = load double, double* bitcast (%T2_type* @T2 to double*)
  %244 = fdiv double %239, %243
  %245 = bitcast i8* %234 to double*
  store double %244, double* %245, align 1, !tbaa !2432
  %246 = getelementptr inbounds i8, i8* %234, i64 8
  %247 = bitcast i8* %246 to i64*
  store i64 %242, i64* %247, align 1, !tbaa !2432
  %248 = load i64, i64* %RBP
  %249 = sub i64 %248, 24
  %250 = load i64, i64* %PC
  %251 = add i64 %250, 4
  store i64 %251, i64* %PC
  %252 = inttoptr i64 %249 to i64*
  %253 = load i64, i64* %252
  store i64 %253, i64* %RDI, align 8, !tbaa !2428
  %254 = load i64, i64* %RDI
  %255 = bitcast %union.vec128_t* %XMM0 to i8*
  %256 = load i64, i64* %PC
  %257 = add i64 %256, 4
  store i64 %257, i64* %PC
  %258 = bitcast i8* %255 to double*
  %259 = load double, double* %258, align 1
  %260 = inttoptr i64 %254 to double*
  store double %259, double* %260
  %261 = load i64, i64* %PC
  %262 = add i64 %261, 1
  store i64 %262, i64* %PC
  %263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %264 = load i64, i64* %263, align 8, !tbaa !2428
  %265 = add i64 %264, 8
  %266 = inttoptr i64 %264 to i64*
  %267 = load i64, i64* %266
  store i64 %267, i64* %RBP, align 8, !tbaa !2428
  store i64 %265, i64* %263, align 8, !tbaa !2428
  %268 = load i64, i64* %PC
  %269 = add i64 %268, 1
  store i64 %269, i64* %PC
  %270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %271 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %272 = load i64, i64* %271, align 8, !tbaa !2428
  %273 = inttoptr i64 %272 to i64*
  %274 = load i64, i64* %273
  store i64 %274, i64* %270, align 8, !tbaa !2428
  %275 = add i64 %272, 8
  store i64 %275, i64* %271, align 8, !tbaa !2428
  ret %struct.Memory* %2
}

; Function Attrs: noinline
define %struct.Memory* @sub_4015f0_POUT(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_4015f0:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 1
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %EAX = bitcast %union.anon* %12 to i32*
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14 = getelementptr inbounds %struct.GPR, %struct.GPR* %13, i32 0, i32 1
  %15 = getelementptr inbounds %struct.Reg, %struct.Reg* %14, i32 0, i32 0
  %RAX = bitcast %union.anon* %15 to i64*
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17 = getelementptr inbounds %struct.GPR, %struct.GPR* %16, i32 0, i32 5
  %18 = getelementptr inbounds %struct.Reg, %struct.Reg* %17, i32 0, i32 0
  %RCX = bitcast %union.anon* %18 to i64*
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20 = getelementptr inbounds %struct.GPR, %struct.GPR* %19, i32 0, i32 7
  %21 = getelementptr inbounds %struct.Reg, %struct.Reg* %20, i32 0, i32 0
  %RDX = bitcast %union.anon* %21 to i64*
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23 = getelementptr inbounds %struct.GPR, %struct.GPR* %22, i32 0, i32 9
  %24 = getelementptr inbounds %struct.Reg, %struct.Reg* %23, i32 0, i32 0
  %RSI = bitcast %union.anon* %24 to i64*
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26 = getelementptr inbounds %struct.GPR, %struct.GPR* %25, i32 0, i32 11
  %27 = getelementptr inbounds %struct.Reg, %struct.Reg* %26, i32 0, i32 0
  %RDI = bitcast %union.anon* %27 to i64*
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29 = getelementptr inbounds %struct.GPR, %struct.GPR* %28, i32 0, i32 13
  %30 = getelementptr inbounds %struct.Reg, %struct.Reg* %29, i32 0, i32 0
  %RSP = bitcast %union.anon* %30 to i64*
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32 = getelementptr inbounds %struct.GPR, %struct.GPR* %31, i32 0, i32 15
  %33 = getelementptr inbounds %struct.Reg, %struct.Reg* %32, i32 0, i32 0
  %RBP = bitcast %union.anon* %33 to i64*
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %35 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %34, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %35 to %"class.std::bitset"*
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %37 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %36, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %37 to %"class.std::bitset"*
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %39 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %38, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %39 to %"class.std::bitset"*
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %41 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %40, i64 0, i64 3
  %YMM3 = bitcast %union.VectorReg* %41 to %"class.std::bitset"*
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %43 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %42, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %43 to %union.vec128_t*
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %45 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %44, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %45 to %union.vec128_t*
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %47 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %46, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %47 to %union.vec128_t*
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %49 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %48, i64 0, i64 3
  %XMM3 = bitcast %union.VectorReg* %49 to %union.vec128_t*
  %50 = load i64, i64* %RBP
  %51 = load i64, i64* %PC
  %52 = add i64 %51, 1
  store i64 %52, i64* %PC
  %53 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %54 = load i64, i64* %53, align 8, !tbaa !2428
  %55 = add i64 %54, -8
  %56 = inttoptr i64 %55 to i64*
  store i64 %50, i64* %56
  store i64 %55, i64* %53, align 8, !tbaa !2428
  %57 = load i64, i64* %RSP
  %58 = load i64, i64* %PC
  %59 = add i64 %58, 3
  store i64 %59, i64* %PC
  store i64 %57, i64* %RBP, align 8, !tbaa !2428
  %60 = load i64, i64* %RSP
  %61 = load i64, i64* %PC
  %62 = add i64 %61, 4
  store i64 %62, i64* %PC
  %63 = sub i64 %60, 64
  store i64 %63, i64* %RSP, align 8, !tbaa !2428
  %64 = icmp ult i64 %60, 64
  %65 = zext i1 %64 to i8
  %66 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %65, i8* %66, align 1, !tbaa !2434
  %67 = trunc i64 %63 to i32
  %68 = and i32 %67, 255
  %69 = call i32 @llvm.ctpop.i32(i32 %68) #17
  %70 = trunc i32 %69 to i8
  %71 = and i8 %70, 1
  %72 = xor i8 %71, 1
  %73 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %72, i8* %73, align 1, !tbaa !2448
  %74 = xor i64 64, %60
  %75 = xor i64 %74, %63
  %76 = lshr i64 %75, 4
  %77 = trunc i64 %76 to i8
  %78 = and i8 %77, 1
  %79 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %78, i8* %79, align 1, !tbaa !2449
  %80 = icmp eq i64 %63, 0
  %81 = zext i1 %80 to i8
  %82 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %81, i8* %82, align 1, !tbaa !2450
  %83 = lshr i64 %63, 63
  %84 = trunc i64 %83 to i8
  %85 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %84, i8* %85, align 1, !tbaa !2451
  %86 = lshr i64 %60, 63
  %87 = xor i64 %83, %86
  %88 = add nuw nsw i64 %87, %86
  %89 = icmp eq i64 %88, 2
  %90 = zext i1 %89 to i8
  %91 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %90, i8* %91, align 1, !tbaa !2452
  %92 = load i64, i64* %PC
  %93 = add i64 %92, 10
  store i64 %93, i64* %PC
  store i64 add (i64 ptrtoint (%seg_401900__rodata_type* @seg_401900__rodata to i64), i64 103), i64* %RAX, align 8, !tbaa !2428
  %94 = load i64, i64* %RBP
  %95 = sub i64 %94, 8
  %96 = load i64, i64* %RDI
  %97 = load i64, i64* %PC
  %98 = add i64 %97, 4
  store i64 %98, i64* %PC
  %99 = inttoptr i64 %95 to i64*
  store i64 %96, i64* %99
  %100 = load i64, i64* %RBP
  %101 = sub i64 %100, 16
  %102 = load i64, i64* %RSI
  %103 = load i64, i64* %PC
  %104 = add i64 %103, 4
  store i64 %104, i64* %PC
  %105 = inttoptr i64 %101 to i64*
  store i64 %102, i64* %105
  %106 = load i64, i64* %RBP
  %107 = sub i64 %106, 24
  %108 = load i64, i64* %RDX
  %109 = load i64, i64* %PC
  %110 = add i64 %109, 4
  store i64 %110, i64* %PC
  %111 = inttoptr i64 %107 to i64*
  store i64 %108, i64* %111
  %112 = load i64, i64* %RBP
  %113 = sub i64 %112, 32
  %114 = bitcast %union.vec128_t* %XMM0 to i8*
  %115 = load i64, i64* %PC
  %116 = add i64 %115, 5
  store i64 %116, i64* %PC
  %117 = bitcast i8* %114 to double*
  %118 = load double, double* %117, align 1
  %119 = inttoptr i64 %113 to double*
  store double %118, double* %119
  %120 = load i64, i64* %RBP
  %121 = sub i64 %120, 40
  %122 = bitcast %union.vec128_t* %XMM1 to i8*
  %123 = load i64, i64* %PC
  %124 = add i64 %123, 5
  store i64 %124, i64* %PC
  %125 = bitcast i8* %122 to double*
  %126 = load double, double* %125, align 1
  %127 = inttoptr i64 %121 to double*
  store double %126, double* %127
  %128 = load i64, i64* %RBP
  %129 = sub i64 %128, 48
  %130 = bitcast %union.vec128_t* %XMM2 to i8*
  %131 = load i64, i64* %PC
  %132 = add i64 %131, 5
  store i64 %132, i64* %PC
  %133 = bitcast i8* %130 to double*
  %134 = load double, double* %133, align 1
  %135 = inttoptr i64 %129 to double*
  store double %134, double* %135
  %136 = load i64, i64* %RBP
  %137 = sub i64 %136, 56
  %138 = bitcast %union.vec128_t* %XMM3 to i8*
  %139 = load i64, i64* %PC
  %140 = add i64 %139, 5
  store i64 %140, i64* %PC
  %141 = bitcast i8* %138 to double*
  %142 = load double, double* %141, align 1
  %143 = inttoptr i64 %137 to double*
  store double %142, double* %143
  %144 = load i64, i64* %RBP
  %145 = sub i64 %144, 8
  %146 = load i64, i64* %PC
  %147 = add i64 %146, 4
  store i64 %147, i64* %PC
  %148 = inttoptr i64 %145 to i64*
  %149 = load i64, i64* %148
  store i64 %149, i64* %RSI, align 8, !tbaa !2428
  %150 = load i64, i64* %RBP
  %151 = sub i64 %150, 16
  %152 = load i64, i64* %PC
  %153 = add i64 %152, 4
  store i64 %153, i64* %PC
  %154 = inttoptr i64 %151 to i64*
  %155 = load i64, i64* %154
  store i64 %155, i64* %RDX, align 8, !tbaa !2428
  %156 = load i64, i64* %RBP
  %157 = sub i64 %156, 24
  %158 = load i64, i64* %PC
  %159 = add i64 %158, 4
  store i64 %159, i64* %PC
  %160 = inttoptr i64 %157 to i64*
  %161 = load i64, i64* %160
  store i64 %161, i64* %RCX, align 8, !tbaa !2428
  %162 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %163 = load i64, i64* %RBP
  %164 = sub i64 %163, 32
  %165 = load i64, i64* %PC
  %166 = add i64 %165, 5
  store i64 %166, i64* %PC
  %167 = inttoptr i64 %164 to double*
  %168 = load double, double* %167
  %169 = bitcast i8* %162 to double*
  store double %168, double* %169, align 1, !tbaa !2432
  %170 = getelementptr inbounds i8, i8* %162, i64 8
  %171 = bitcast i8* %170 to double*
  store double 0.000000e+00, double* %171, align 1, !tbaa !2432
  %172 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %173 = load i64, i64* %RBP
  %174 = sub i64 %173, 40
  %175 = load i64, i64* %PC
  %176 = add i64 %175, 5
  store i64 %176, i64* %PC
  %177 = inttoptr i64 %174 to double*
  %178 = load double, double* %177
  %179 = bitcast i8* %172 to double*
  store double %178, double* %179, align 1, !tbaa !2432
  %180 = getelementptr inbounds i8, i8* %172, i64 8
  %181 = bitcast i8* %180 to double*
  store double 0.000000e+00, double* %181, align 1, !tbaa !2432
  %182 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %183 = load i64, i64* %RBP
  %184 = sub i64 %183, 48
  %185 = load i64, i64* %PC
  %186 = add i64 %185, 5
  store i64 %186, i64* %PC
  %187 = inttoptr i64 %184 to double*
  %188 = load double, double* %187
  %189 = bitcast i8* %182 to double*
  store double %188, double* %189, align 1, !tbaa !2432
  %190 = getelementptr inbounds i8, i8* %182, i64 8
  %191 = bitcast i8* %190 to double*
  store double 0.000000e+00, double* %191, align 1, !tbaa !2432
  %192 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %193 = load i64, i64* %RBP
  %194 = sub i64 %193, 56
  %195 = load i64, i64* %PC
  %196 = add i64 %195, 5
  store i64 %196, i64* %PC
  %197 = inttoptr i64 %194 to double*
  %198 = load double, double* %197
  %199 = bitcast i8* %192 to double*
  store double %198, double* %199, align 1, !tbaa !2432
  %200 = getelementptr inbounds i8, i8* %192, i64 8
  %201 = bitcast i8* %200 to double*
  store double 0.000000e+00, double* %201, align 1, !tbaa !2432
  %202 = load i64, i64* %RAX
  %203 = load i64, i64* %PC
  %204 = add i64 %203, 3
  store i64 %204, i64* %PC
  store i64 %202, i64* %RDI, align 8, !tbaa !2428
  %205 = load i64, i64* %PC
  %206 = add i64 %205, 2
  store i64 %206, i64* %PC
  store i8 4, i8* %AL, align 1, !tbaa !2453
  %207 = load i64, i64* %PC
  %208 = sub i64 %207, 3927
  %209 = load i64, i64* %PC
  %210 = add i64 %209, 5
  %211 = load i64, i64* %PC
  %212 = add i64 %211, 5
  store i64 %212, i64* %PC
  %213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %214 = load i64, i64* %213, align 8, !tbaa !2428
  %215 = add i64 %214, -8
  %216 = inttoptr i64 %215 to i64*
  store i64 %210, i64* %216
  store i64 %215, i64* %213, align 8, !tbaa !2428
  %217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %208, i64* %217, align 8, !tbaa !2428
  %218 = load i64, i64* %PC
  %219 = call %struct.Memory* @ext_4006f0_printf(%struct.State* %0, i64 %218, %struct.Memory* %2)
  %220 = load i64, i64* %RBP
  %221 = sub i64 %220, 60
  %222 = load i32, i32* %EAX
  %223 = zext i32 %222 to i64
  %224 = load i64, i64* %PC
  %225 = add i64 %224, 3
  store i64 %225, i64* %PC
  %226 = inttoptr i64 %221 to i32*
  store i32 %222, i32* %226
  %227 = load i64, i64* %RSP
  %228 = load i64, i64* %PC
  %229 = add i64 %228, 4
  store i64 %229, i64* %PC
  %230 = add i64 64, %227
  store i64 %230, i64* %RSP, align 8, !tbaa !2428
  %231 = icmp ult i64 %230, %227
  %232 = icmp ult i64 %230, 64
  %233 = or i1 %231, %232
  %234 = zext i1 %233 to i8
  %235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %234, i8* %235, align 1, !tbaa !2434
  %236 = trunc i64 %230 to i32
  %237 = and i32 %236, 255
  %238 = call i32 @llvm.ctpop.i32(i32 %237) #17
  %239 = trunc i32 %238 to i8
  %240 = and i8 %239, 1
  %241 = xor i8 %240, 1
  %242 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %241, i8* %242, align 1, !tbaa !2448
  %243 = xor i64 64, %227
  %244 = xor i64 %243, %230
  %245 = lshr i64 %244, 4
  %246 = trunc i64 %245 to i8
  %247 = and i8 %246, 1
  %248 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %247, i8* %248, align 1, !tbaa !2449
  %249 = icmp eq i64 %230, 0
  %250 = zext i1 %249 to i8
  %251 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %250, i8* %251, align 1, !tbaa !2450
  %252 = lshr i64 %230, 63
  %253 = trunc i64 %252 to i8
  %254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %253, i8* %254, align 1, !tbaa !2451
  %255 = lshr i64 %227, 63
  %256 = xor i64 %252, %255
  %257 = add nuw nsw i64 %256, %252
  %258 = icmp eq i64 %257, 2
  %259 = zext i1 %258 to i8
  %260 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %259, i8* %260, align 1, !tbaa !2452
  %261 = load i64, i64* %PC
  %262 = add i64 %261, 1
  store i64 %262, i64* %PC
  %263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %264 = load i64, i64* %263, align 8, !tbaa !2428
  %265 = add i64 %264, 8
  %266 = inttoptr i64 %264 to i64*
  %267 = load i64, i64* %266
  store i64 %267, i64* %RBP, align 8, !tbaa !2428
  store i64 %265, i64* %263, align 8, !tbaa !2428
  %268 = load i64, i64* %PC
  %269 = add i64 %268, 1
  store i64 %269, i64* %PC
  %270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %271 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %272 = load i64, i64* %271, align 8, !tbaa !2428
  %273 = inttoptr i64 %272 to i64*
  %274 = load i64, i64* %273
  store i64 %274, i64* %270, align 8, !tbaa !2428
  %275 = add i64 %272, 8
  store i64 %275, i64* %271, align 8, !tbaa !2428
  ret %struct.Memory* %219
}

; Function Attrs: noinline
define %struct.Memory* @sub_400820___do_global_dtors_aux(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_400820:
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 7
  store i64 %13, i64* %PC
  %14 = load i8, i8* inttoptr (i64 add (i64 ptrtoint (%seg_602080__bss_type* @seg_602080__bss to i64), i64 8) to i8*)
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1, !tbaa !2434
  %16 = zext i8 %14 to i32
  %17 = call i32 @llvm.ctpop.i32(i32 %16) #17
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1, !tbaa !2448
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1, !tbaa !2449
  %23 = icmp eq i8 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1, !tbaa !2450
  %26 = lshr i8 %14, 7
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26, i8* %27, align 1, !tbaa !2451
  %28 = lshr i8 %14, 7
  %29 = xor i8 %26, %28
  %30 = add nuw nsw i8 %29, %28
  %31 = icmp eq i8 %30, 2
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %32, i8* %33, align 1, !tbaa !2452
  %34 = load i64, i64* %PC
  %35 = add i64 %34, 25
  %36 = load i64, i64* %PC
  %37 = add i64 %36, 2
  %38 = load i64, i64* %PC
  %39 = add i64 %38, 2
  store i64 %39, i64* %PC
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %41 = load i8, i8* %40, align 1, !tbaa !2450
  %42 = icmp eq i8 %41, 0
  %43 = zext i1 %42 to i8
  store i8 %43, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %45 = select i1 %42, i64 %35, i64 %37
  store i64 %45, i64* %44, align 8, !tbaa !2428
  %46 = load i8, i8* %BRANCH_TAKEN
  %47 = icmp eq i8 %46, 1
  br i1 %47, label %block_400840, label %block_400829

block_400840:                                     ; preds = %block_400820
  %48 = load i64, i64* %PC
  %49 = add i64 %48, 2
  store i64 %49, i64* %PC
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %52 = load i64, i64* %51, align 8, !tbaa !2428
  %53 = inttoptr i64 %52 to i64*
  %54 = load i64, i64* %53
  store i64 %54, i64* %50, align 8, !tbaa !2428
  %55 = add i64 %52, 8
  store i64 %55, i64* %51, align 8, !tbaa !2428
  ret %struct.Memory* %2

block_400829:                                     ; preds = %block_400820
  %56 = load i64, i64* %RBP
  %57 = load i64, i64* %PC
  %58 = add i64 %57, 1
  store i64 %58, i64* %PC
  %59 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %60 = load i64, i64* %59, align 8, !tbaa !2428
  %61 = add i64 %60, -8
  %62 = inttoptr i64 %61 to i64*
  store i64 %56, i64* %62
  store i64 %61, i64* %59, align 8, !tbaa !2428
  %63 = load i64, i64* %RSP
  %64 = load i64, i64* %PC
  %65 = add i64 %64, 3
  store i64 %65, i64* %PC
  store i64 %63, i64* %RBP, align 8, !tbaa !2428
  %66 = load i64, i64* %PC
  %67 = sub i64 %66, 125
  %68 = load i64, i64* %PC
  %69 = add i64 %68, 5
  %70 = load i64, i64* %PC
  %71 = add i64 %70, 5
  store i64 %71, i64* %PC
  %72 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %73 = load i64, i64* %72, align 8, !tbaa !2428
  %74 = add i64 %73, -8
  %75 = inttoptr i64 %74 to i64*
  store i64 %69, i64* %75
  store i64 %74, i64* %72, align 8, !tbaa !2428
  %76 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %67, i64* %76, align 8, !tbaa !2428
  %77 = load i64, i64* %PC
  %78 = call %struct.Memory* @sub_4007b0_deregister_tm_clones_renamed_(%struct.State* %0, i64 %77, %struct.Memory* %2)
  %79 = load i64, i64* %PC
  %80 = add i64 %79, 7
  store i64 %80, i64* %PC
  store i8 1, i8* inttoptr (i64 add (i64 ptrtoint (%seg_602080__bss_type* @seg_602080__bss to i64), i64 8) to i8*)
  %81 = load i64, i64* %PC
  %82 = add i64 %81, 1
  store i64 %82, i64* %PC
  %83 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %84 = load i64, i64* %83, align 8, !tbaa !2428
  %85 = add i64 %84, 8
  %86 = inttoptr i64 %84 to i64*
  %87 = load i64, i64* %86
  store i64 %87, i64* %RBP, align 8, !tbaa !2428
  store i64 %85, i64* %83, align 8, !tbaa !2428
  %88 = load i64, i64* %PC
  %89 = add i64 %88, 1
  store i64 %89, i64* %PC
  %90 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %91 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %92 = load i64, i64* %91, align 8, !tbaa !2428
  %93 = inttoptr i64 %92 to i64*
  %94 = load i64, i64* %93
  store i64 %94, i64* %90, align 8, !tbaa !2428
  %95 = add i64 %92, 8
  store i64 %95, i64* %91, align 8, !tbaa !2428
  ret %struct.Memory* %78
}

; Function Attrs: noinline
define %struct.Memory* @sub_4007b0_deregister_tm_clones(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_4007b0:
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %EAX = bitcast %union.anon* %11 to i32*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 1
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RAX = bitcast %union.anon* %14 to i64*
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16 = getelementptr inbounds %struct.GPR, %struct.GPR* %15, i32 0, i32 11
  %17 = getelementptr inbounds %struct.Reg, %struct.Reg* %16, i32 0, i32 0
  %RDI = bitcast %union.anon* %17 to i64*
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19 = getelementptr inbounds %struct.GPR, %struct.GPR* %18, i32 0, i32 13
  %20 = getelementptr inbounds %struct.Reg, %struct.Reg* %19, i32 0, i32 0
  %RSP = bitcast %union.anon* %20 to i64*
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22 = getelementptr inbounds %struct.GPR, %struct.GPR* %21, i32 0, i32 15
  %23 = getelementptr inbounds %struct.Reg, %struct.Reg* %22, i32 0, i32 0
  %RBP = bitcast %union.anon* %23 to i64*
  %24 = load i64, i64* %RBP
  %25 = load i64, i64* %PC
  %26 = add i64 %25, 1
  store i64 %26, i64* %PC
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %28 = load i64, i64* %27, align 8, !tbaa !2428
  %29 = add i64 %28, -8
  %30 = inttoptr i64 %29 to i64*
  store i64 %24, i64* %30
  store i64 %29, i64* %27, align 8, !tbaa !2428
  %31 = load i64, i64* %PC
  %32 = add i64 %31, 5
  store i64 %32, i64* %PC
  store i64 and (i64 ptrtoint (i64* @stderr to i64), i64 4294967295), i64* %RAX, align 8, !tbaa !2428
  %33 = load i64, i64* %RAX
  %34 = load i64, i64* %PC
  %35 = add i64 %34, 6
  store i64 %35, i64* %PC
  %36 = sub i64 %33, ptrtoint (i64* @stderr to i64)
  %37 = icmp ult i64 %33, ptrtoint (i64* @stderr to i64)
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %38, i8* %39, align 1, !tbaa !2434
  %40 = trunc i64 %36 to i32
  %41 = and i32 %40, 255
  %42 = call i32 @llvm.ctpop.i32(i32 %41) #17
  %43 = trunc i32 %42 to i8
  %44 = and i8 %43, 1
  %45 = xor i8 %44, 1
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %45, i8* %46, align 1, !tbaa !2448
  %47 = xor i64 ptrtoint (i64* @stderr to i64), %33
  %48 = xor i64 %47, %36
  %49 = lshr i64 %48, 4
  %50 = trunc i64 %49 to i8
  %51 = and i8 %50, 1
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %51, i8* %52, align 1, !tbaa !2449
  %53 = icmp eq i64 %36, 0
  %54 = zext i1 %53 to i8
  %55 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %54, i8* %55, align 1, !tbaa !2450
  %56 = lshr i64 %36, 63
  %57 = trunc i64 %56 to i8
  %58 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %57, i8* %58, align 1, !tbaa !2451
  %59 = lshr i64 %33, 63
  %60 = xor i64 lshr (i64 ptrtoint (i64* @stderr to i64), i64 63), %59
  %61 = xor i64 %56, %59
  %62 = add nuw nsw i64 %61, %60
  %63 = icmp eq i64 %62, 2
  %64 = zext i1 %63 to i8
  %65 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %64, i8* %65, align 1, !tbaa !2452
  %66 = load i64, i64* %RSP
  %67 = load i64, i64* %PC
  %68 = add i64 %67, 3
  store i64 %68, i64* %PC
  store i64 %66, i64* %RBP, align 8, !tbaa !2428
  %69 = load i64, i64* %PC
  %70 = add i64 %69, 25
  %71 = load i64, i64* %PC
  %72 = add i64 %71, 2
  %73 = load i64, i64* %PC
  %74 = add i64 %73, 2
  store i64 %74, i64* %PC
  %75 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %76 = load i8, i8* %75, align 1, !tbaa !2450
  store i8 %76, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %77 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %78 = icmp ne i8 %76, 0
  %79 = select i1 %78, i64 %70, i64 %72
  store i64 %79, i64* %77, align 8, !tbaa !2428
  %80 = load i8, i8* %BRANCH_TAKEN
  %81 = icmp eq i8 %80, 1
  br i1 %81, label %block_4007d8, label %block_4007c1

block_4007d8:                                     ; preds = %block_4007c1, %block_4007d3, %block_4007b0
  %MEMORY.0 = phi %struct.Memory* [ %2, %block_4007b0 ], [ %2, %block_4007c1 ], [ %2, %block_4007d3 ]
  %82 = load i64, i64* %PC
  %83 = add i64 %82, 1
  store i64 %83, i64* %PC
  %84 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %85 = load i64, i64* %84, align 8, !tbaa !2428
  %86 = add i64 %85, 8
  %87 = inttoptr i64 %85 to i64*
  %88 = load i64, i64* %87
  store i64 %88, i64* %RBP, align 8, !tbaa !2428
  store i64 %86, i64* %84, align 8, !tbaa !2428
  %89 = load i64, i64* %PC
  %90 = add i64 %89, 1
  store i64 %90, i64* %PC
  %91 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %92 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %93 = load i64, i64* %92, align 8, !tbaa !2428
  %94 = inttoptr i64 %93 to i64*
  %95 = load i64, i64* %94
  store i64 %95, i64* %91, align 8, !tbaa !2428
  %96 = add i64 %93, 8
  store i64 %96, i64* %92, align 8, !tbaa !2428
  ret %struct.Memory* %MEMORY.0

block_4007da:                                     ; preds = %block_4007cb
  %97 = load i64, i64* %RAX
  %98 = load i64, i64* %RAX
  %99 = add i64 %98, %97
  %100 = load i16, i16* %AX
  %101 = zext i16 %100 to i64
  %102 = load i64, i64* %PC
  %103 = add i64 %102, 6
  store i64 %103, i64* %PC
  %104 = load i64, i64* %PC
  %105 = tail call %struct.Memory* @sub_4007e0_register_tm_clones(%struct.State* %0, i64 %104, %struct.Memory* %2)
  ret %struct.Memory* %105

block_4007d3:                                     ; preds = %block_4007cb
  %106 = load i64, i64* %RAX
  %107 = load i64, i64* %RAX
  %108 = add i64 %107, %106
  %109 = load i32, i32* %EAX
  %110 = zext i32 %109 to i64
  %111 = load i64, i64* %PC
  %112 = add i64 %111, 5
  store i64 %112, i64* %PC
  br label %block_4007d8

block_4007cb:                                     ; preds = %block_4007c1
  %113 = load i64, i64* %PC
  %114 = add i64 %113, 1
  store i64 %114, i64* %PC
  %115 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %116 = load i64, i64* %115, align 8, !tbaa !2428
  %117 = add i64 %116, 8
  %118 = inttoptr i64 %116 to i64*
  %119 = load i64, i64* %118
  store i64 %119, i64* %RBP, align 8, !tbaa !2428
  store i64 %117, i64* %115, align 8, !tbaa !2428
  %120 = load i64, i64* %PC
  %121 = add i64 %120, 5
  store i64 %121, i64* %PC
  store i64 and (i64 ptrtoint (i64* @stderr to i64), i64 4294967295), i64* %RDI, align 8, !tbaa !2428
  %122 = load i64, i64* %RAX
  %123 = load i64, i64* %PC
  %124 = add i64 %123, 2
  store i64 %124, i64* %PC
  %125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %122, i64* %125, align 8, !tbaa !2428
  %126 = load i64, i64* %PC
  switch i64 %126, label %163 [
    i64 4196314, label %block_4007da
    i64 4196307, label %block_4007d3
  ]

block_4007c1:                                     ; preds = %block_4007b0
  %127 = load i64, i64* %PC
  %128 = add i64 %127, 5
  store i64 %128, i64* %PC
  store i64 0, i64* %RAX, align 8, !tbaa !2428
  %129 = load i64, i64* %RAX
  %130 = load i64, i64* %RAX
  %131 = load i64, i64* %PC
  %132 = add i64 %131, 3
  store i64 %132, i64* %PC
  %133 = and i64 %130, %129
  %134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %134, align 1, !tbaa !2434
  %135 = trunc i64 %133 to i32
  %136 = and i32 %135, 255
  %137 = call i32 @llvm.ctpop.i32(i32 %136) #17
  %138 = trunc i32 %137 to i8
  %139 = and i8 %138, 1
  %140 = xor i8 %139, 1
  %141 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %140, i8* %141, align 1, !tbaa !2448
  %142 = icmp eq i64 %133, 0
  %143 = zext i1 %142 to i8
  %144 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %143, i8* %144, align 1, !tbaa !2450
  %145 = lshr i64 %133, 63
  %146 = trunc i64 %145 to i8
  %147 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %146, i8* %147, align 1, !tbaa !2451
  %148 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %148, align 1, !tbaa !2452
  %149 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %149, align 1, !tbaa !2449
  %150 = load i64, i64* %PC
  %151 = add i64 %150, 15
  %152 = load i64, i64* %PC
  %153 = add i64 %152, 2
  %154 = load i64, i64* %PC
  %155 = add i64 %154, 2
  store i64 %155, i64* %PC
  %156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %157 = load i8, i8* %156, align 1, !tbaa !2450
  store i8 %157, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %158 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %159 = icmp ne i8 %157, 0
  %160 = select i1 %159, i64 %151, i64 %153
  store i64 %160, i64* %158, align 8, !tbaa !2428
  %161 = load i8, i8* %BRANCH_TAKEN
  %162 = icmp eq i8 %161, 1
  br i1 %162, label %block_4007d8, label %block_4007cb

; <label>:163:                                    ; preds = %block_4007cb
  %164 = load i64, i64* %PC
  %165 = tail call %struct.Memory* @__remill_jump(%struct.State* %0, i64 %164, %struct.Memory* %2)
  ret %struct.Memory* %165
}

; Function Attrs: noinline
define %struct.Memory* @sub_4018f4__term_proc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_4018f4:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = sub i64 %9, 8
  store i64 %12, i64* %RSP, align 8, !tbaa !2428
  %13 = icmp ult i64 %9, 8
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14, i8* %15, align 1, !tbaa !2434
  %16 = trunc i64 %12 to i32
  %17 = and i32 %16, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17) #17
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1, !tbaa !2448
  %23 = xor i64 8, %9
  %24 = xor i64 %23, %12
  %25 = lshr i64 %24, 4
  %26 = trunc i64 %25 to i8
  %27 = and i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27, i8* %28, align 1, !tbaa !2449
  %29 = icmp eq i64 %12, 0
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30, i8* %31, align 1, !tbaa !2450
  %32 = lshr i64 %12, 63
  %33 = trunc i64 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33, i8* %34, align 1, !tbaa !2451
  %35 = lshr i64 %9, 63
  %36 = xor i64 %32, %35
  %37 = add nuw nsw i64 %36, %35
  %38 = icmp eq i64 %37, 2
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %39, i8* %40, align 1, !tbaa !2452
  %41 = load i64, i64* %RSP
  %42 = load i64, i64* %PC
  %43 = add i64 %42, 4
  store i64 %43, i64* %PC
  %44 = add i64 8, %41
  store i64 %44, i64* %RSP, align 8, !tbaa !2428
  %45 = icmp ult i64 %44, %41
  %46 = icmp ult i64 %44, 8
  %47 = or i1 %45, %46
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %48, i8* %49, align 1, !tbaa !2434
  %50 = trunc i64 %44 to i32
  %51 = and i32 %50, 255
  %52 = call i32 @llvm.ctpop.i32(i32 %51) #17
  %53 = trunc i32 %52 to i8
  %54 = and i8 %53, 1
  %55 = xor i8 %54, 1
  %56 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %55, i8* %56, align 1, !tbaa !2448
  %57 = xor i64 8, %41
  %58 = xor i64 %57, %44
  %59 = lshr i64 %58, 4
  %60 = trunc i64 %59 to i8
  %61 = and i8 %60, 1
  %62 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %61, i8* %62, align 1, !tbaa !2449
  %63 = icmp eq i64 %44, 0
  %64 = zext i1 %63 to i8
  %65 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %64, i8* %65, align 1, !tbaa !2450
  %66 = lshr i64 %44, 63
  %67 = trunc i64 %66 to i8
  %68 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %67, i8* %68, align 1, !tbaa !2451
  %69 = lshr i64 %41, 63
  %70 = xor i64 %66, %69
  %71 = add nuw nsw i64 %70, %66
  %72 = icmp eq i64 %71, 2
  %73 = zext i1 %72 to i8
  %74 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %73, i8* %74, align 1, !tbaa !2452
  %75 = load i64, i64* %PC
  %76 = add i64 %75, 1
  store i64 %76, i64* %PC
  %77 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %78 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %79 = load i64, i64* %78, align 8, !tbaa !2428
  %80 = inttoptr i64 %79 to i64*
  %81 = load i64, i64* %80
  store i64 %81, i64* %77, align 8, !tbaa !2428
  %82 = add i64 %79, 8
  store i64 %82, i64* %78, align 8, !tbaa !2428
  ret %struct.Memory* %2
}

; Function Attrs: noinline
define %struct.Memory* @sub_400698__init_proc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_400698:
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 13
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = sub i64 %12, 8
  store i64 %15, i64* %RSP, align 8, !tbaa !2428
  %16 = icmp ult i64 %12, 8
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1, !tbaa !2434
  %19 = trunc i64 %15 to i32
  %20 = and i32 %19, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20) #17
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1, !tbaa !2448
  %26 = xor i64 8, %12
  %27 = xor i64 %26, %15
  %28 = lshr i64 %27, 4
  %29 = trunc i64 %28 to i8
  %30 = and i8 %29, 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %30, i8* %31, align 1, !tbaa !2449
  %32 = icmp eq i64 %15, 0
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %33, i8* %34, align 1, !tbaa !2450
  %35 = lshr i64 %15, 63
  %36 = trunc i64 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %36, i8* %37, align 1, !tbaa !2451
  %38 = lshr i64 %12, 63
  %39 = xor i64 %35, %38
  %40 = add nuw nsw i64 %39, %38
  %41 = icmp eq i64 %40, 2
  %42 = zext i1 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %42, i8* %43, align 1, !tbaa !2452
  %44 = load i64, i64* %PC
  %45 = add i64 %44, 7
  store i64 %45, i64* %PC
  %46 = load i64, i64* inttoptr (i64 add (i64 ptrtoint (%seg_601ff0__got_type* @seg_601ff0__got to i64), i64 8) to i64*)
  store i64 %46, i64* %RAX, align 8, !tbaa !2428
  %47 = load i64, i64* %RAX
  %48 = load i64, i64* %RAX
  %49 = load i64, i64* %PC
  %50 = add i64 %49, 3
  store i64 %50, i64* %PC
  %51 = and i64 %48, %47
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %52, align 1, !tbaa !2434
  %53 = trunc i64 %51 to i32
  %54 = and i32 %53, 255
  %55 = call i32 @llvm.ctpop.i32(i32 %54) #17
  %56 = trunc i32 %55 to i8
  %57 = and i8 %56, 1
  %58 = xor i8 %57, 1
  %59 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %58, i8* %59, align 1, !tbaa !2448
  %60 = icmp eq i64 %51, 0
  %61 = zext i1 %60 to i8
  %62 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %61, i8* %62, align 1, !tbaa !2450
  %63 = lshr i64 %51, 63
  %64 = trunc i64 %63 to i8
  %65 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %64, i8* %65, align 1, !tbaa !2451
  %66 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %66, align 1, !tbaa !2452
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %67, align 1, !tbaa !2449
  %68 = load i64, i64* %PC
  %69 = add i64 %68, 4
  %70 = load i64, i64* %PC
  %71 = add i64 %70, 2
  %72 = load i64, i64* %PC
  %73 = add i64 %72, 2
  store i64 %73, i64* %PC
  %74 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %75 = load i8, i8* %74, align 1, !tbaa !2450
  store i8 %75, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %76 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %77 = icmp ne i8 %75, 0
  %78 = select i1 %77, i64 %69, i64 %71
  store i64 %78, i64* %76, align 8, !tbaa !2428
  %79 = load i8, i8* %BRANCH_TAKEN
  %80 = icmp eq i8 %79, 1
  br i1 %80, label %block_4006aa, label %block_4006a8

block_4006a8:                                     ; preds = %block_400698
  %81 = load i64, i64* %RAX
  %82 = load i64, i64* %PC
  %83 = add i64 %82, 2
  %84 = load i64, i64* %PC
  %85 = add i64 %84, 2
  store i64 %85, i64* %PC
  %86 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %87 = load i64, i64* %86, align 8, !tbaa !2428
  %88 = add i64 %87, -8
  %89 = inttoptr i64 %88 to i64*
  store i64 %83, i64* %89
  store i64 %88, i64* %86, align 8, !tbaa !2428
  %90 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %81, i64* %90, align 8, !tbaa !2428
  %91 = load i64, i64* %PC
  %92 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 %91, %struct.Memory* %2)
  br label %block_4006aa

block_4006aa:                                     ; preds = %block_4006a8, %block_400698
  %MEMORY.0 = phi %struct.Memory* [ %2, %block_400698 ], [ %92, %block_4006a8 ]
  %93 = load i64, i64* %RSP
  %94 = load i64, i64* %PC
  %95 = add i64 %94, 4
  store i64 %95, i64* %PC
  %96 = add i64 8, %93
  store i64 %96, i64* %RSP, align 8, !tbaa !2428
  %97 = icmp ult i64 %96, %93
  %98 = icmp ult i64 %96, 8
  %99 = or i1 %97, %98
  %100 = zext i1 %99 to i8
  %101 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %100, i8* %101, align 1, !tbaa !2434
  %102 = trunc i64 %96 to i32
  %103 = and i32 %102, 255
  %104 = call i32 @llvm.ctpop.i32(i32 %103) #17
  %105 = trunc i32 %104 to i8
  %106 = and i8 %105, 1
  %107 = xor i8 %106, 1
  %108 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %107, i8* %108, align 1, !tbaa !2448
  %109 = xor i64 8, %93
  %110 = xor i64 %109, %96
  %111 = lshr i64 %110, 4
  %112 = trunc i64 %111 to i8
  %113 = and i8 %112, 1
  %114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %113, i8* %114, align 1, !tbaa !2449
  %115 = icmp eq i64 %96, 0
  %116 = zext i1 %115 to i8
  %117 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %116, i8* %117, align 1, !tbaa !2450
  %118 = lshr i64 %96, 63
  %119 = trunc i64 %118 to i8
  %120 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %119, i8* %120, align 1, !tbaa !2451
  %121 = lshr i64 %93, 63
  %122 = xor i64 %118, %121
  %123 = add nuw nsw i64 %122, %118
  %124 = icmp eq i64 %123, 2
  %125 = zext i1 %124 to i8
  %126 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %125, i8* %126, align 1, !tbaa !2452
  %127 = load i64, i64* %PC
  %128 = add i64 %127, 1
  store i64 %128, i64* %PC
  %129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %130 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %131 = load i64, i64* %130, align 8, !tbaa !2428
  %132 = inttoptr i64 %131 to i64*
  %133 = load i64, i64* %132
  store i64 %133, i64* %129, align 8, !tbaa !2428
  %134 = add i64 %131, 8
  store i64 %134, i64* %130, align 8, !tbaa !2428
  ret %struct.Memory* %MEMORY.0
}

; Function Attrs: noinline
define %struct.Memory* @sub_401660_PA(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_401660:
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 5
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RCX = bitcast %union.anon* %14 to i64*
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16 = getelementptr inbounds %struct.GPR, %struct.GPR* %15, i32 0, i32 7
  %17 = getelementptr inbounds %struct.Reg, %struct.Reg* %16, i32 0, i32 0
  %RDX = bitcast %union.anon* %17 to i64*
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19 = getelementptr inbounds %struct.GPR, %struct.GPR* %18, i32 0, i32 11
  %20 = getelementptr inbounds %struct.Reg, %struct.Reg* %19, i32 0, i32 0
  %RDI = bitcast %union.anon* %20 to i64*
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22 = getelementptr inbounds %struct.GPR, %struct.GPR* %21, i32 0, i32 13
  %23 = getelementptr inbounds %struct.Reg, %struct.Reg* %22, i32 0, i32 0
  %RSP = bitcast %union.anon* %23 to i64*
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25 = getelementptr inbounds %struct.GPR, %struct.GPR* %24, i32 0, i32 15
  %26 = getelementptr inbounds %struct.Reg, %struct.Reg* %25, i32 0, i32 0
  %RBP = bitcast %union.anon* %26 to i64*
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %28 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %27, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %28 to %"class.std::bitset"*
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %30 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %29, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %30 to %union.vec128_t*
  %31 = load i64, i64* %RBP
  %32 = load i64, i64* %PC
  %33 = add i64 %32, 1
  store i64 %33, i64* %PC
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %35 = load i64, i64* %34, align 8, !tbaa !2428
  %36 = add i64 %35, -8
  %37 = inttoptr i64 %36 to i64*
  store i64 %31, i64* %37
  store i64 %36, i64* %34, align 8, !tbaa !2428
  %38 = load i64, i64* %RSP
  %39 = load i64, i64* %PC
  %40 = add i64 %39, 3
  store i64 %40, i64* %PC
  store i64 %38, i64* %RBP, align 8, !tbaa !2428
  %41 = load i64, i64* %RBP
  %42 = sub i64 %41, 8
  %43 = load i64, i64* %RDI
  %44 = load i64, i64* %PC
  %45 = add i64 %44, 4
  store i64 %45, i64* %PC
  %46 = inttoptr i64 %42 to i64*
  store i64 %43, i64* %46
  %47 = load i64, i64* %PC
  %48 = add i64 %47, 11
  store i64 %48, i64* %PC
  store i32 0, i32* bitcast (%J_type* @J to i32*)
  br label %block_401673

block_401786:                                     ; preds = %block_401673
  %49 = add i64 %644, 1
  store i64 %49, i64* %PC
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %51 = load i64, i64* %50, align 8, !tbaa !2428
  %52 = add i64 %51, 8
  %53 = inttoptr i64 %51 to i64*
  %54 = load i64, i64* %53
  store i64 %54, i64* %RBP, align 8, !tbaa !2428
  store i64 %52, i64* %50, align 8, !tbaa !2428
  %55 = load i64, i64* %PC
  %56 = add i64 %55, 1
  store i64 %56, i64* %PC
  %57 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %58 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %59 = load i64, i64* %58, align 8, !tbaa !2428
  %60 = inttoptr i64 %59 to i64*
  %61 = load i64, i64* %60
  store i64 %61, i64* %57, align 8, !tbaa !2428
  %62 = add i64 %59, 8
  store i64 %62, i64* %58, align 8, !tbaa !2428
  ret %struct.Memory* %MEMORY.0

block_401673:                                     ; preds = %block_401781, %block_401660
  %MEMORY.0 = phi %struct.Memory* [ %2, %block_401660 ], [ %MEMORY.0, %block_401781 ]
  %63 = load i64, i64* %PC
  %64 = add i64 %63, 10
  store i64 %64, i64* %PC
  store i64 -9223372036854775808, i64* %RAX, align 8, !tbaa !2428
  %65 = load i64, i64* %RBP
  %66 = sub i64 %65, 8
  %67 = load i64, i64* %PC
  %68 = add i64 %67, 4
  store i64 %68, i64* %PC
  %69 = inttoptr i64 %66 to i64*
  %70 = load i64, i64* %69
  store i64 %70, i64* %RCX, align 8, !tbaa !2428
  %71 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %72 = load i64, i64* %RCX
  %73 = add i64 %72, 8
  %74 = load i64, i64* %PC
  %75 = add i64 %74, 5
  store i64 %75, i64* %PC
  %76 = inttoptr i64 %73 to double*
  %77 = load double, double* %76
  %78 = bitcast i8* %71 to double*
  store double %77, double* %78, align 1, !tbaa !2432
  %79 = getelementptr inbounds i8, i8* %71, i64 8
  %80 = bitcast i8* %79 to double*
  store double 0.000000e+00, double* %80, align 1, !tbaa !2432
  %81 = load i64, i64* %RBP
  %82 = sub i64 %81, 8
  %83 = load i64, i64* %PC
  %84 = add i64 %83, 4
  store i64 %84, i64* %PC
  %85 = inttoptr i64 %82 to i64*
  %86 = load i64, i64* %85
  store i64 %86, i64* %RCX, align 8, !tbaa !2428
  %87 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %88 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %89 = load i64, i64* %RCX
  %90 = add i64 %89, 16
  %91 = load i64, i64* %PC
  %92 = add i64 %91, 5
  store i64 %92, i64* %PC
  %93 = bitcast i8* %88 to double*
  %94 = load double, double* %93, align 1
  %95 = getelementptr inbounds i8, i8* %88, i64 8
  %96 = bitcast i8* %95 to i64*
  %97 = load i64, i64* %96, align 1
  %98 = inttoptr i64 %90 to double*
  %99 = load double, double* %98
  %100 = fadd double %94, %99
  %101 = bitcast i8* %87 to double*
  store double %100, double* %101, align 1, !tbaa !2432
  %102 = getelementptr inbounds i8, i8* %87, i64 8
  %103 = bitcast i8* %102 to i64*
  store i64 %97, i64* %103, align 1, !tbaa !2432
  %104 = load i64, i64* %RBP
  %105 = sub i64 %104, 8
  %106 = load i64, i64* %PC
  %107 = add i64 %106, 4
  store i64 %107, i64* %PC
  %108 = inttoptr i64 %105 to i64*
  %109 = load i64, i64* %108
  store i64 %109, i64* %RCX, align 8, !tbaa !2428
  %110 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %111 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %112 = load i64, i64* %RCX
  %113 = add i64 %112, 24
  %114 = load i64, i64* %PC
  %115 = add i64 %114, 5
  store i64 %115, i64* %PC
  %116 = bitcast i8* %111 to double*
  %117 = load double, double* %116, align 1
  %118 = getelementptr inbounds i8, i8* %111, i64 8
  %119 = bitcast i8* %118 to i64*
  %120 = load i64, i64* %119, align 1
  %121 = inttoptr i64 %113 to double*
  %122 = load double, double* %121
  %123 = fadd double %117, %122
  %124 = bitcast i8* %110 to double*
  store double %123, double* %124, align 1, !tbaa !2432
  %125 = getelementptr inbounds i8, i8* %110, i64 8
  %126 = bitcast i8* %125 to i64*
  store i64 %120, i64* %126, align 1, !tbaa !2432
  %127 = load i64, i64* %RBP
  %128 = sub i64 %127, 8
  %129 = load i64, i64* %PC
  %130 = add i64 %129, 4
  store i64 %130, i64* %PC
  %131 = inttoptr i64 %128 to i64*
  %132 = load i64, i64* %131
  store i64 %132, i64* %RCX, align 8, !tbaa !2428
  %133 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %134 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %135 = load i64, i64* %RCX
  %136 = add i64 %135, 32
  %137 = load i64, i64* %PC
  %138 = add i64 %137, 5
  store i64 %138, i64* %PC
  %139 = bitcast i8* %134 to double*
  %140 = load double, double* %139, align 1
  %141 = getelementptr inbounds i8, i8* %134, i64 8
  %142 = bitcast i8* %141 to i64*
  %143 = load i64, i64* %142, align 1
  %144 = inttoptr i64 %136 to double*
  %145 = load double, double* %144
  %146 = fsub double %140, %145
  %147 = bitcast i8* %133 to double*
  store double %146, double* %147, align 1, !tbaa !2432
  %148 = getelementptr inbounds i8, i8* %133, i64 8
  %149 = bitcast i8* %148 to i64*
  store i64 %143, i64* %149, align 1, !tbaa !2432
  %150 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %151 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %152 = load i64, i64* %PC
  %153 = add i64 %152, 9
  store i64 %153, i64* %PC
  %154 = bitcast i8* %151 to double*
  %155 = load double, double* %154, align 1
  %156 = getelementptr inbounds i8, i8* %151, i64 8
  %157 = bitcast i8* %156 to i64*
  %158 = load i64, i64* %157, align 1
  %159 = load double, double* bitcast (%T_type* @T to double*)
  %160 = fmul double %155, %159
  %161 = bitcast i8* %150 to double*
  store double %160, double* %161, align 1, !tbaa !2432
  %162 = getelementptr inbounds i8, i8* %150, i64 8
  %163 = bitcast i8* %162 to i64*
  store i64 %158, i64* %163, align 1, !tbaa !2432
  %164 = load i64, i64* %RBP
  %165 = sub i64 %164, 8
  %166 = load i64, i64* %PC
  %167 = add i64 %166, 4
  store i64 %167, i64* %PC
  %168 = inttoptr i64 %165 to i64*
  %169 = load i64, i64* %168
  store i64 %169, i64* %RCX, align 8, !tbaa !2428
  %170 = load i64, i64* %RCX
  %171 = add i64 %170, 8
  %172 = bitcast %union.vec128_t* %XMM0 to i8*
  %173 = load i64, i64* %PC
  %174 = add i64 %173, 5
  store i64 %174, i64* %PC
  %175 = bitcast i8* %172 to double*
  %176 = load double, double* %175, align 1
  %177 = inttoptr i64 %171 to double*
  store double %176, double* %177
  %178 = load i64, i64* %RBP
  %179 = sub i64 %178, 8
  %180 = load i64, i64* %PC
  %181 = add i64 %180, 4
  store i64 %181, i64* %PC
  %182 = inttoptr i64 %179 to i64*
  %183 = load i64, i64* %182
  store i64 %183, i64* %RCX, align 8, !tbaa !2428
  %184 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %185 = load i64, i64* %RCX
  %186 = add i64 %185, 8
  %187 = load i64, i64* %PC
  %188 = add i64 %187, 5
  store i64 %188, i64* %PC
  %189 = inttoptr i64 %186 to double*
  %190 = load double, double* %189
  %191 = bitcast i8* %184 to double*
  store double %190, double* %191, align 1, !tbaa !2432
  %192 = getelementptr inbounds i8, i8* %184, i64 8
  %193 = bitcast i8* %192 to double*
  store double 0.000000e+00, double* %193, align 1, !tbaa !2432
  %194 = load i64, i64* %RBP
  %195 = sub i64 %194, 8
  %196 = load i64, i64* %PC
  %197 = add i64 %196, 4
  store i64 %197, i64* %PC
  %198 = inttoptr i64 %195 to i64*
  %199 = load i64, i64* %198
  store i64 %199, i64* %RCX, align 8, !tbaa !2428
  %200 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %201 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %202 = load i64, i64* %RCX
  %203 = add i64 %202, 16
  %204 = load i64, i64* %PC
  %205 = add i64 %204, 5
  store i64 %205, i64* %PC
  %206 = bitcast i8* %201 to double*
  %207 = load double, double* %206, align 1
  %208 = getelementptr inbounds i8, i8* %201, i64 8
  %209 = bitcast i8* %208 to i64*
  %210 = load i64, i64* %209, align 1
  %211 = inttoptr i64 %203 to double*
  %212 = load double, double* %211
  %213 = fadd double %207, %212
  %214 = bitcast i8* %200 to double*
  store double %213, double* %214, align 1, !tbaa !2432
  %215 = getelementptr inbounds i8, i8* %200, i64 8
  %216 = bitcast i8* %215 to i64*
  store i64 %210, i64* %216, align 1, !tbaa !2432
  %217 = load i64, i64* %RBP
  %218 = sub i64 %217, 8
  %219 = load i64, i64* %PC
  %220 = add i64 %219, 4
  store i64 %220, i64* %PC
  %221 = inttoptr i64 %218 to i64*
  %222 = load i64, i64* %221
  store i64 %222, i64* %RCX, align 8, !tbaa !2428
  %223 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %224 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %225 = load i64, i64* %RCX
  %226 = add i64 %225, 24
  %227 = load i64, i64* %PC
  %228 = add i64 %227, 5
  store i64 %228, i64* %PC
  %229 = bitcast i8* %224 to double*
  %230 = load double, double* %229, align 1
  %231 = getelementptr inbounds i8, i8* %224, i64 8
  %232 = bitcast i8* %231 to i64*
  %233 = load i64, i64* %232, align 1
  %234 = inttoptr i64 %226 to double*
  %235 = load double, double* %234
  %236 = fsub double %230, %235
  %237 = bitcast i8* %223 to double*
  store double %236, double* %237, align 1, !tbaa !2432
  %238 = getelementptr inbounds i8, i8* %223, i64 8
  %239 = bitcast i8* %238 to i64*
  store i64 %233, i64* %239, align 1, !tbaa !2432
  %240 = load i64, i64* %RBP
  %241 = sub i64 %240, 8
  %242 = load i64, i64* %PC
  %243 = add i64 %242, 4
  store i64 %243, i64* %PC
  %244 = inttoptr i64 %241 to i64*
  %245 = load i64, i64* %244
  store i64 %245, i64* %RCX, align 8, !tbaa !2428
  %246 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %247 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %248 = load i64, i64* %RCX
  %249 = add i64 %248, 32
  %250 = load i64, i64* %PC
  %251 = add i64 %250, 5
  store i64 %251, i64* %PC
  %252 = bitcast i8* %247 to double*
  %253 = load double, double* %252, align 1
  %254 = getelementptr inbounds i8, i8* %247, i64 8
  %255 = bitcast i8* %254 to i64*
  %256 = load i64, i64* %255, align 1
  %257 = inttoptr i64 %249 to double*
  %258 = load double, double* %257
  %259 = fadd double %253, %258
  %260 = bitcast i8* %246 to double*
  store double %259, double* %260, align 1, !tbaa !2432
  %261 = getelementptr inbounds i8, i8* %246, i64 8
  %262 = bitcast i8* %261 to i64*
  store i64 %256, i64* %262, align 1, !tbaa !2432
  %263 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %264 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %265 = load i64, i64* %PC
  %266 = add i64 %265, 9
  store i64 %266, i64* %PC
  %267 = bitcast i8* %264 to double*
  %268 = load double, double* %267, align 1
  %269 = getelementptr inbounds i8, i8* %264, i64 8
  %270 = bitcast i8* %269 to i64*
  %271 = load i64, i64* %270, align 1
  %272 = load double, double* bitcast (%T_type* @T to double*)
  %273 = fmul double %268, %272
  %274 = bitcast i8* %263 to double*
  store double %273, double* %274, align 1, !tbaa !2432
  %275 = getelementptr inbounds i8, i8* %263, i64 8
  %276 = bitcast i8* %275 to i64*
  store i64 %271, i64* %276, align 1, !tbaa !2432
  %277 = load i64, i64* %RBP
  %278 = sub i64 %277, 8
  %279 = load i64, i64* %PC
  %280 = add i64 %279, 4
  store i64 %280, i64* %PC
  %281 = inttoptr i64 %278 to i64*
  %282 = load i64, i64* %281
  store i64 %282, i64* %RCX, align 8, !tbaa !2428
  %283 = load i64, i64* %RCX
  %284 = add i64 %283, 16
  %285 = bitcast %union.vec128_t* %XMM0 to i8*
  %286 = load i64, i64* %PC
  %287 = add i64 %286, 5
  store i64 %287, i64* %PC
  %288 = bitcast i8* %285 to double*
  %289 = load double, double* %288, align 1
  %290 = inttoptr i64 %284 to double*
  store double %289, double* %290
  %291 = load i64, i64* %RBP
  %292 = sub i64 %291, 8
  %293 = load i64, i64* %PC
  %294 = add i64 %293, 4
  store i64 %294, i64* %PC
  %295 = inttoptr i64 %292 to i64*
  %296 = load i64, i64* %295
  store i64 %296, i64* %RCX, align 8, !tbaa !2428
  %297 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %298 = load i64, i64* %RCX
  %299 = add i64 %298, 8
  %300 = load i64, i64* %PC
  %301 = add i64 %300, 5
  store i64 %301, i64* %PC
  %302 = inttoptr i64 %299 to double*
  %303 = load double, double* %302
  %304 = bitcast i8* %297 to double*
  store double %303, double* %304, align 1, !tbaa !2432
  %305 = getelementptr inbounds i8, i8* %297, i64 8
  %306 = bitcast i8* %305 to double*
  store double 0.000000e+00, double* %306, align 1, !tbaa !2432
  %307 = load i64, i64* %RBP
  %308 = sub i64 %307, 8
  %309 = load i64, i64* %PC
  %310 = add i64 %309, 4
  store i64 %310, i64* %PC
  %311 = inttoptr i64 %308 to i64*
  %312 = load i64, i64* %311
  store i64 %312, i64* %RCX, align 8, !tbaa !2428
  %313 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %314 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %315 = load i64, i64* %RCX
  %316 = add i64 %315, 16
  %317 = load i64, i64* %PC
  %318 = add i64 %317, 5
  store i64 %318, i64* %PC
  %319 = bitcast i8* %314 to double*
  %320 = load double, double* %319, align 1
  %321 = getelementptr inbounds i8, i8* %314, i64 8
  %322 = bitcast i8* %321 to i64*
  %323 = load i64, i64* %322, align 1
  %324 = inttoptr i64 %316 to double*
  %325 = load double, double* %324
  %326 = fsub double %320, %325
  %327 = bitcast i8* %313 to double*
  store double %326, double* %327, align 1, !tbaa !2432
  %328 = getelementptr inbounds i8, i8* %313, i64 8
  %329 = bitcast i8* %328 to i64*
  store i64 %323, i64* %329, align 1, !tbaa !2432
  %330 = load i64, i64* %RBP
  %331 = sub i64 %330, 8
  %332 = load i64, i64* %PC
  %333 = add i64 %332, 4
  store i64 %333, i64* %PC
  %334 = inttoptr i64 %331 to i64*
  %335 = load i64, i64* %334
  store i64 %335, i64* %RCX, align 8, !tbaa !2428
  %336 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %337 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %338 = load i64, i64* %RCX
  %339 = add i64 %338, 24
  %340 = load i64, i64* %PC
  %341 = add i64 %340, 5
  store i64 %341, i64* %PC
  %342 = bitcast i8* %337 to double*
  %343 = load double, double* %342, align 1
  %344 = getelementptr inbounds i8, i8* %337, i64 8
  %345 = bitcast i8* %344 to i64*
  %346 = load i64, i64* %345, align 1
  %347 = inttoptr i64 %339 to double*
  %348 = load double, double* %347
  %349 = fadd double %343, %348
  %350 = bitcast i8* %336 to double*
  store double %349, double* %350, align 1, !tbaa !2432
  %351 = getelementptr inbounds i8, i8* %336, i64 8
  %352 = bitcast i8* %351 to i64*
  store i64 %346, i64* %352, align 1, !tbaa !2432
  %353 = load i64, i64* %RBP
  %354 = sub i64 %353, 8
  %355 = load i64, i64* %PC
  %356 = add i64 %355, 4
  store i64 %356, i64* %PC
  %357 = inttoptr i64 %354 to i64*
  %358 = load i64, i64* %357
  store i64 %358, i64* %RCX, align 8, !tbaa !2428
  %359 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %360 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %361 = load i64, i64* %RCX
  %362 = add i64 %361, 32
  %363 = load i64, i64* %PC
  %364 = add i64 %363, 5
  store i64 %364, i64* %PC
  %365 = bitcast i8* %360 to double*
  %366 = load double, double* %365, align 1
  %367 = getelementptr inbounds i8, i8* %360, i64 8
  %368 = bitcast i8* %367 to i64*
  %369 = load i64, i64* %368, align 1
  %370 = inttoptr i64 %362 to double*
  %371 = load double, double* %370
  %372 = fadd double %366, %371
  %373 = bitcast i8* %359 to double*
  store double %372, double* %373, align 1, !tbaa !2432
  %374 = getelementptr inbounds i8, i8* %359, i64 8
  %375 = bitcast i8* %374 to i64*
  store i64 %369, i64* %375, align 1, !tbaa !2432
  %376 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %377 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %378 = load i64, i64* %PC
  %379 = add i64 %378, 9
  store i64 %379, i64* %PC
  %380 = bitcast i8* %377 to double*
  %381 = load double, double* %380, align 1
  %382 = getelementptr inbounds i8, i8* %377, i64 8
  %383 = bitcast i8* %382 to i64*
  %384 = load i64, i64* %383, align 1
  %385 = load double, double* bitcast (%T_type* @T to double*)
  %386 = fmul double %381, %385
  %387 = bitcast i8* %376 to double*
  store double %386, double* %387, align 1, !tbaa !2432
  %388 = getelementptr inbounds i8, i8* %376, i64 8
  %389 = bitcast i8* %388 to i64*
  store i64 %384, i64* %389, align 1, !tbaa !2432
  %390 = load i64, i64* %RBP
  %391 = sub i64 %390, 8
  %392 = load i64, i64* %PC
  %393 = add i64 %392, 4
  store i64 %393, i64* %PC
  %394 = inttoptr i64 %391 to i64*
  %395 = load i64, i64* %394
  store i64 %395, i64* %RCX, align 8, !tbaa !2428
  %396 = load i64, i64* %RCX
  %397 = add i64 %396, 24
  %398 = bitcast %union.vec128_t* %XMM0 to i8*
  %399 = load i64, i64* %PC
  %400 = add i64 %399, 5
  store i64 %400, i64* %PC
  %401 = bitcast i8* %398 to double*
  %402 = load double, double* %401, align 1
  %403 = inttoptr i64 %397 to double*
  store double %402, double* %403
  %404 = load i64, i64* %RBP
  %405 = sub i64 %404, 8
  %406 = load i64, i64* %PC
  %407 = add i64 %406, 4
  store i64 %407, i64* %PC
  %408 = inttoptr i64 %405 to i64*
  %409 = load i64, i64* %408
  store i64 %409, i64* %RCX, align 8, !tbaa !2428
  %410 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %411 = load i64, i64* %RCX
  %412 = add i64 %411, 8
  %413 = load i64, i64* %PC
  %414 = add i64 %413, 5
  store i64 %414, i64* %PC
  %415 = inttoptr i64 %412 to double*
  %416 = load double, double* %415
  %417 = bitcast i8* %410 to double*
  store double %416, double* %417, align 1, !tbaa !2432
  %418 = getelementptr inbounds i8, i8* %410, i64 8
  %419 = bitcast i8* %418 to double*
  store double 0.000000e+00, double* %419, align 1, !tbaa !2432
  %420 = bitcast %union.vec128_t* %XMM0 to i8*
  %421 = load i64, i64* %PC
  %422 = add i64 %421, 5
  store i64 %422, i64* %PC
  %423 = bitcast i8* %420 to i64*
  %424 = load i64, i64* %423, align 1
  store i64 %424, i64* %RCX, align 1, !tbaa !2428
  %425 = load i64, i64* %RCX
  %426 = load i64, i64* %RAX
  %427 = load i64, i64* %PC
  %428 = add i64 %427, 3
  store i64 %428, i64* %PC
  %429 = xor i64 %426, %425
  store i64 %429, i64* %RCX, align 8, !tbaa !2428
  %430 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %430, align 1, !tbaa !2434
  %431 = trunc i64 %429 to i32
  %432 = and i32 %431, 255
  %433 = call i32 @llvm.ctpop.i32(i32 %432) #17
  %434 = trunc i32 %433 to i8
  %435 = and i8 %434, 1
  %436 = xor i8 %435, 1
  %437 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %436, i8* %437, align 1, !tbaa !2448
  %438 = icmp eq i64 %429, 0
  %439 = zext i1 %438 to i8
  %440 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %439, i8* %440, align 1, !tbaa !2450
  %441 = lshr i64 %429, 63
  %442 = trunc i64 %441 to i8
  %443 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %442, i8* %443, align 1, !tbaa !2451
  %444 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %444, align 1, !tbaa !2452
  %445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %445, align 1, !tbaa !2449
  %446 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %447 = load i64, i64* %RCX
  %448 = load i64, i64* %PC
  %449 = add i64 %448, 5
  store i64 %449, i64* %PC
  %450 = bitcast i8* %446 to i64*
  store i64 %447, i64* %450, align 1, !tbaa !2428
  %451 = getelementptr inbounds i8, i8* %446, i64 8
  %452 = bitcast i8* %451 to i64*
  store i64 0, i64* %452, align 1, !tbaa !2428
  %453 = load i64, i64* %RBP
  %454 = sub i64 %453, 8
  %455 = load i64, i64* %PC
  %456 = add i64 %455, 4
  store i64 %456, i64* %PC
  %457 = inttoptr i64 %454 to i64*
  %458 = load i64, i64* %457
  store i64 %458, i64* %RAX, align 8, !tbaa !2428
  %459 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %460 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %461 = load i64, i64* %RAX
  %462 = add i64 %461, 16
  %463 = load i64, i64* %PC
  %464 = add i64 %463, 5
  store i64 %464, i64* %PC
  %465 = bitcast i8* %460 to double*
  %466 = load double, double* %465, align 1
  %467 = getelementptr inbounds i8, i8* %460, i64 8
  %468 = bitcast i8* %467 to i64*
  %469 = load i64, i64* %468, align 1
  %470 = inttoptr i64 %462 to double*
  %471 = load double, double* %470
  %472 = fadd double %466, %471
  %473 = bitcast i8* %459 to double*
  store double %472, double* %473, align 1, !tbaa !2432
  %474 = getelementptr inbounds i8, i8* %459, i64 8
  %475 = bitcast i8* %474 to i64*
  store i64 %469, i64* %475, align 1, !tbaa !2432
  %476 = load i64, i64* %RBP
  %477 = sub i64 %476, 8
  %478 = load i64, i64* %PC
  %479 = add i64 %478, 4
  store i64 %479, i64* %PC
  %480 = inttoptr i64 %477 to i64*
  %481 = load i64, i64* %480
  store i64 %481, i64* %RAX, align 8, !tbaa !2428
  %482 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %483 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %484 = load i64, i64* %RAX
  %485 = add i64 %484, 24
  %486 = load i64, i64* %PC
  %487 = add i64 %486, 5
  store i64 %487, i64* %PC
  %488 = bitcast i8* %483 to double*
  %489 = load double, double* %488, align 1
  %490 = getelementptr inbounds i8, i8* %483, i64 8
  %491 = bitcast i8* %490 to i64*
  %492 = load i64, i64* %491, align 1
  %493 = inttoptr i64 %485 to double*
  %494 = load double, double* %493
  %495 = fadd double %489, %494
  %496 = bitcast i8* %482 to double*
  store double %495, double* %496, align 1, !tbaa !2432
  %497 = getelementptr inbounds i8, i8* %482, i64 8
  %498 = bitcast i8* %497 to i64*
  store i64 %492, i64* %498, align 1, !tbaa !2432
  %499 = load i64, i64* %RBP
  %500 = sub i64 %499, 8
  %501 = load i64, i64* %PC
  %502 = add i64 %501, 4
  store i64 %502, i64* %PC
  %503 = inttoptr i64 %500 to i64*
  %504 = load i64, i64* %503
  store i64 %504, i64* %RAX, align 8, !tbaa !2428
  %505 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %506 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %507 = load i64, i64* %RAX
  %508 = add i64 %507, 32
  %509 = load i64, i64* %PC
  %510 = add i64 %509, 5
  store i64 %510, i64* %PC
  %511 = bitcast i8* %506 to double*
  %512 = load double, double* %511, align 1
  %513 = getelementptr inbounds i8, i8* %506, i64 8
  %514 = bitcast i8* %513 to i64*
  %515 = load i64, i64* %514, align 1
  %516 = inttoptr i64 %508 to double*
  %517 = load double, double* %516
  %518 = fadd double %512, %517
  %519 = bitcast i8* %505 to double*
  store double %518, double* %519, align 1, !tbaa !2432
  %520 = getelementptr inbounds i8, i8* %505, i64 8
  %521 = bitcast i8* %520 to i64*
  store i64 %515, i64* %521, align 1, !tbaa !2432
  %522 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %523 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %524 = load i64, i64* %PC
  %525 = add i64 %524, 9
  store i64 %525, i64* %PC
  %526 = bitcast i8* %523 to double*
  %527 = load double, double* %526, align 1
  %528 = getelementptr inbounds i8, i8* %523, i64 8
  %529 = bitcast i8* %528 to i64*
  %530 = load i64, i64* %529, align 1
  %531 = load double, double* bitcast (%T2_type* @T2 to double*)
  %532 = fdiv double %527, %531
  %533 = bitcast i8* %522 to double*
  store double %532, double* %533, align 1, !tbaa !2432
  %534 = getelementptr inbounds i8, i8* %522, i64 8
  %535 = bitcast i8* %534 to i64*
  store i64 %530, i64* %535, align 1, !tbaa !2432
  %536 = load i64, i64* %RBP
  %537 = sub i64 %536, 8
  %538 = load i64, i64* %PC
  %539 = add i64 %538, 4
  store i64 %539, i64* %PC
  %540 = inttoptr i64 %537 to i64*
  %541 = load i64, i64* %540
  store i64 %541, i64* %RAX, align 8, !tbaa !2428
  %542 = load i64, i64* %RAX
  %543 = add i64 %542, 32
  %544 = bitcast %union.vec128_t* %XMM0 to i8*
  %545 = load i64, i64* %PC
  %546 = add i64 %545, 5
  store i64 %546, i64* %PC
  %547 = bitcast i8* %544 to double*
  %548 = load double, double* %547, align 1
  %549 = inttoptr i64 %543 to double*
  store double %548, double* %549
  %550 = load i64, i64* %PC
  %551 = add i64 %550, 7
  store i64 %551, i64* %PC
  %552 = load i32, i32* bitcast (%J_type* @J to i32*)
  %553 = zext i32 %552 to i64
  store i64 %553, i64* %RDX, align 8, !tbaa !2428
  %554 = load i64, i64* %RDX
  %555 = load i64, i64* %PC
  %556 = add i64 %555, 3
  store i64 %556, i64* %PC
  %557 = trunc i64 %554 to i32
  %558 = add i32 1, %557
  %559 = zext i32 %558 to i64
  store i64 %559, i64* %RDX, align 8, !tbaa !2428
  %560 = icmp ult i32 %558, %557
  %561 = icmp ult i32 %558, 1
  %562 = or i1 %560, %561
  %563 = zext i1 %562 to i8
  %564 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %563, i8* %564, align 1, !tbaa !2434
  %565 = and i32 %558, 255
  %566 = call i32 @llvm.ctpop.i32(i32 %565) #17
  %567 = trunc i32 %566 to i8
  %568 = and i8 %567, 1
  %569 = xor i8 %568, 1
  %570 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %569, i8* %570, align 1, !tbaa !2448
  %571 = xor i64 1, %554
  %572 = trunc i64 %571 to i32
  %573 = xor i32 %572, %558
  %574 = lshr i32 %573, 4
  %575 = trunc i32 %574 to i8
  %576 = and i8 %575, 1
  %577 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %576, i8* %577, align 1, !tbaa !2449
  %578 = icmp eq i32 %558, 0
  %579 = zext i1 %578 to i8
  %580 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %579, i8* %580, align 1, !tbaa !2450
  %581 = lshr i32 %558, 31
  %582 = trunc i32 %581 to i8
  %583 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %582, i8* %583, align 1, !tbaa !2451
  %584 = lshr i32 %557, 31
  %585 = xor i32 %581, %584
  %586 = add nuw nsw i32 %585, %581
  %587 = icmp eq i32 %586, 2
  %588 = zext i1 %587 to i8
  %589 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %588, i8* %589, align 1, !tbaa !2452
  %590 = load i32, i32* %EDX
  %591 = zext i32 %590 to i64
  %592 = load i64, i64* %PC
  %593 = add i64 %592, 7
  store i64 %593, i64* %PC
  store i32 %590, i32* bitcast (%J_type* @J to i32*)
  %594 = load i64, i64* %PC
  %595 = add i64 %594, 8
  store i64 %595, i64* %PC
  %596 = load i32, i32* bitcast (%J_type* @J to i32*)
  %597 = sub i32 %596, 6
  %598 = icmp ult i32 %596, 6
  %599 = zext i1 %598 to i8
  %600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %599, i8* %600, align 1, !tbaa !2434
  %601 = and i32 %597, 255
  %602 = call i32 @llvm.ctpop.i32(i32 %601) #17
  %603 = trunc i32 %602 to i8
  %604 = and i8 %603, 1
  %605 = xor i8 %604, 1
  %606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %605, i8* %606, align 1, !tbaa !2448
  %607 = xor i32 %596, 6
  %608 = xor i32 %607, %597
  %609 = lshr i32 %608, 4
  %610 = trunc i32 %609 to i8
  %611 = and i8 %610, 1
  %612 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %611, i8* %612, align 1, !tbaa !2449
  %613 = icmp eq i32 %597, 0
  %614 = zext i1 %613 to i8
  %615 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %614, i8* %615, align 1, !tbaa !2450
  %616 = lshr i32 %597, 31
  %617 = trunc i32 %616 to i8
  %618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %617, i8* %618, align 1, !tbaa !2451
  %619 = lshr i32 %596, 31
  %620 = xor i32 %616, %619
  %621 = add nuw nsw i32 %620, %619
  %622 = icmp eq i32 %621, 2
  %623 = zext i1 %622 to i8
  %624 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %623, i8* %624, align 1, !tbaa !2452
  %625 = load i64, i64* %PC
  %626 = add i64 %625, 11
  %627 = load i64, i64* %PC
  %628 = add i64 %627, 6
  %629 = load i64, i64* %PC
  %630 = add i64 %629, 6
  store i64 %630, i64* %PC
  %631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %632 = load i8, i8* %631, align 1, !tbaa !2451
  %633 = icmp ne i8 %632, 0
  %634 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %635 = load i8, i8* %634, align 1, !tbaa !2452
  %636 = icmp ne i8 %635, 0
  %637 = xor i1 %633, %636
  %638 = xor i1 %637, true
  %639 = zext i1 %638 to i8
  store i8 %639, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %640 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %641 = select i1 %637, i64 %628, i64 %626
  store i64 %641, i64* %640, align 8, !tbaa !2428
  %642 = load i8, i8* %BRANCH_TAKEN
  %643 = icmp eq i8 %642, 1
  %644 = load i64, i64* %PC
  br i1 %643, label %block_401786, label %block_401781

block_401781:                                     ; preds = %block_401673
  %645 = sub i64 %644, 270
  %646 = load i64, i64* %PC
  %647 = add i64 %646, 5
  store i64 %647, i64* %PC
  %648 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %645, i64* %648, align 8, !tbaa !2428
  br label %block_401673
}

; Function Attrs: noinline
define %struct.Memory* @sub_401810_P0(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_401810:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 13
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSP = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %16 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %15, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %16 to %"class.std::bitset"*
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %18 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %17, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %18 to %union.vec128_t*
  %19 = load i64, i64* %RBP
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 1
  store i64 %21, i64* %PC
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %23 = load i64, i64* %22, align 8, !tbaa !2428
  %24 = add i64 %23, -8
  %25 = inttoptr i64 %24 to i64*
  store i64 %19, i64* %25
  store i64 %24, i64* %22, align 8, !tbaa !2428
  %26 = load i64, i64* %RSP
  %27 = load i64, i64* %PC
  %28 = add i64 %27, 3
  store i64 %28, i64* %PC
  store i64 %26, i64* %RBP, align 8, !tbaa !2428
  %29 = load i64, i64* %PC
  %30 = add i64 %29, 8
  store i64 %30, i64* %PC
  %31 = load i32, i32* bitcast (%K_type* @K to i32*)
  %32 = sext i32 %31 to i64
  store i64 %32, i64* %RAX, align 8, !tbaa !2428
  %33 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %34 = load i64, i64* %RAX
  %35 = mul i64 %34, 8
  %36 = add i64 %35, ptrtoint (%E1_type* @E1 to i64)
  %37 = load i64, i64* %PC
  %38 = add i64 %37, 9
  store i64 %38, i64* %PC
  %39 = inttoptr i64 %36 to double*
  %40 = load double, double* %39
  %41 = bitcast i8* %33 to double*
  store double %40, double* %41, align 1, !tbaa !2432
  %42 = getelementptr inbounds i8, i8* %33, i64 8
  %43 = bitcast i8* %42 to double*
  store double 0.000000e+00, double* %43, align 1, !tbaa !2432
  %44 = load i64, i64* %PC
  %45 = add i64 %44, 8
  store i64 %45, i64* %PC
  %46 = load i32, i32* bitcast (%J_type* @J to i32*)
  %47 = sext i32 %46 to i64
  store i64 %47, i64* %RAX, align 8, !tbaa !2428
  %48 = load i64, i64* %RAX
  %49 = mul i64 %48, 8
  %50 = add i64 %49, ptrtoint (%E1_type* @E1 to i64)
  %51 = bitcast %union.vec128_t* %XMM0 to i8*
  %52 = load i64, i64* %PC
  %53 = add i64 %52, 9
  store i64 %53, i64* %PC
  %54 = bitcast i8* %51 to double*
  %55 = load double, double* %54, align 1
  %56 = inttoptr i64 %50 to double*
  store double %55, double* %56
  %57 = load i64, i64* %PC
  %58 = add i64 %57, 8
  store i64 %58, i64* %PC
  %59 = load i32, i32* bitcast (%L_type* @L to i32*)
  %60 = sext i32 %59 to i64
  store i64 %60, i64* %RAX, align 8, !tbaa !2428
  %61 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %62 = load i64, i64* %RAX
  %63 = mul i64 %62, 8
  %64 = add i64 %63, ptrtoint (%E1_type* @E1 to i64)
  %65 = load i64, i64* %PC
  %66 = add i64 %65, 9
  store i64 %66, i64* %PC
  %67 = inttoptr i64 %64 to double*
  %68 = load double, double* %67
  %69 = bitcast i8* %61 to double*
  store double %68, double* %69, align 1, !tbaa !2432
  %70 = getelementptr inbounds i8, i8* %61, i64 8
  %71 = bitcast i8* %70 to double*
  store double 0.000000e+00, double* %71, align 1, !tbaa !2432
  %72 = load i64, i64* %PC
  %73 = add i64 %72, 8
  store i64 %73, i64* %PC
  %74 = load i32, i32* bitcast (%K_type* @K to i32*)
  %75 = sext i32 %74 to i64
  store i64 %75, i64* %RAX, align 8, !tbaa !2428
  %76 = load i64, i64* %RAX
  %77 = mul i64 %76, 8
  %78 = add i64 %77, ptrtoint (%E1_type* @E1 to i64)
  %79 = bitcast %union.vec128_t* %XMM0 to i8*
  %80 = load i64, i64* %PC
  %81 = add i64 %80, 9
  store i64 %81, i64* %PC
  %82 = bitcast i8* %79 to double*
  %83 = load double, double* %82, align 1
  %84 = inttoptr i64 %78 to double*
  store double %83, double* %84
  %85 = load i64, i64* %PC
  %86 = add i64 %85, 8
  store i64 %86, i64* %PC
  %87 = load i32, i32* bitcast (%J_type* @J to i32*)
  %88 = sext i32 %87 to i64
  store i64 %88, i64* %RAX, align 8, !tbaa !2428
  %89 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %90 = load i64, i64* %RAX
  %91 = mul i64 %90, 8
  %92 = add i64 %91, ptrtoint (%E1_type* @E1 to i64)
  %93 = load i64, i64* %PC
  %94 = add i64 %93, 9
  store i64 %94, i64* %PC
  %95 = inttoptr i64 %92 to double*
  %96 = load double, double* %95
  %97 = bitcast i8* %89 to double*
  store double %96, double* %97, align 1, !tbaa !2432
  %98 = getelementptr inbounds i8, i8* %89, i64 8
  %99 = bitcast i8* %98 to double*
  store double 0.000000e+00, double* %99, align 1, !tbaa !2432
  %100 = load i64, i64* %PC
  %101 = add i64 %100, 8
  store i64 %101, i64* %PC
  %102 = load i32, i32* bitcast (%L_type* @L to i32*)
  %103 = sext i32 %102 to i64
  store i64 %103, i64* %RAX, align 8, !tbaa !2428
  %104 = load i64, i64* %RAX
  %105 = mul i64 %104, 8
  %106 = add i64 %105, ptrtoint (%E1_type* @E1 to i64)
  %107 = bitcast %union.vec128_t* %XMM0 to i8*
  %108 = load i64, i64* %PC
  %109 = add i64 %108, 9
  store i64 %109, i64* %PC
  %110 = bitcast i8* %107 to double*
  %111 = load double, double* %110, align 1
  %112 = inttoptr i64 %106 to double*
  store double %111, double* %112
  %113 = load i64, i64* %PC
  %114 = add i64 %113, 1
  store i64 %114, i64* %PC
  %115 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %116 = load i64, i64* %115, align 8, !tbaa !2428
  %117 = add i64 %116, 8
  %118 = inttoptr i64 %116 to i64*
  %119 = load i64, i64* %118
  store i64 %119, i64* %RBP, align 8, !tbaa !2428
  store i64 %117, i64* %115, align 8, !tbaa !2428
  %120 = load i64, i64* %PC
  %121 = add i64 %120, 1
  store i64 %121, i64* %PC
  %122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %124 = load i64, i64* %123, align 8, !tbaa !2428
  %125 = inttoptr i64 %124 to i64*
  %126 = load i64, i64* %125
  store i64 %126, i64* %122, align 8, !tbaa !2428
  %127 = add i64 %124, 8
  store i64 %127, i64* %123, align 8, !tbaa !2428
  ret %struct.Memory* %2
}

; Function Attrs: noinline
define %struct.Memory* @sub_4007e0_register_tm_clones(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_4007e0:
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %EAX = bitcast %union.anon* %11 to i32*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 1
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RAX = bitcast %union.anon* %14 to i64*
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16 = getelementptr inbounds %struct.GPR, %struct.GPR* %15, i32 0, i32 9
  %17 = getelementptr inbounds %struct.Reg, %struct.Reg* %16, i32 0, i32 0
  %RSI = bitcast %union.anon* %17 to i64*
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19 = getelementptr inbounds %struct.GPR, %struct.GPR* %18, i32 0, i32 11
  %20 = getelementptr inbounds %struct.Reg, %struct.Reg* %19, i32 0, i32 0
  %RDI = bitcast %union.anon* %20 to i64*
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22 = getelementptr inbounds %struct.GPR, %struct.GPR* %21, i32 0, i32 13
  %23 = getelementptr inbounds %struct.Reg, %struct.Reg* %22, i32 0, i32 0
  %RSP = bitcast %union.anon* %23 to i64*
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25 = getelementptr inbounds %struct.GPR, %struct.GPR* %24, i32 0, i32 15
  %26 = getelementptr inbounds %struct.Reg, %struct.Reg* %25, i32 0, i32 0
  %RBP = bitcast %union.anon* %26 to i64*
  %27 = load i64, i64* %PC
  %28 = add i64 %27, 5
  store i64 %28, i64* %PC
  store i64 and (i64 ptrtoint (i64* @stderr to i64), i64 4294967295), i64* %RSI, align 8, !tbaa !2428
  %29 = load i64, i64* %RBP
  %30 = load i64, i64* %PC
  %31 = add i64 %30, 1
  store i64 %31, i64* %PC
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %33 = load i64, i64* %32, align 8, !tbaa !2428
  %34 = add i64 %33, -8
  %35 = inttoptr i64 %34 to i64*
  store i64 %29, i64* %35
  store i64 %34, i64* %32, align 8, !tbaa !2428
  %36 = load i64, i64* %RSI
  %37 = load i64, i64* %PC
  %38 = add i64 %37, 7
  store i64 %38, i64* %PC
  %39 = sub i64 %36, ptrtoint (i64* @stderr to i64)
  store i64 %39, i64* %RSI, align 8, !tbaa !2428
  %40 = icmp ult i64 %36, ptrtoint (i64* @stderr to i64)
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %41, i8* %42, align 1, !tbaa !2434
  %43 = trunc i64 %39 to i32
  %44 = and i32 %43, 255
  %45 = call i32 @llvm.ctpop.i32(i32 %44) #17
  %46 = trunc i32 %45 to i8
  %47 = and i8 %46, 1
  %48 = xor i8 %47, 1
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %48, i8* %49, align 1, !tbaa !2448
  %50 = xor i64 ptrtoint (i64* @stderr to i64), %36
  %51 = xor i64 %50, %39
  %52 = lshr i64 %51, 4
  %53 = trunc i64 %52 to i8
  %54 = and i8 %53, 1
  %55 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %54, i8* %55, align 1, !tbaa !2449
  %56 = icmp eq i64 %39, 0
  %57 = zext i1 %56 to i8
  %58 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %57, i8* %58, align 1, !tbaa !2450
  %59 = lshr i64 %39, 63
  %60 = trunc i64 %59 to i8
  %61 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %60, i8* %61, align 1, !tbaa !2451
  %62 = lshr i64 %36, 63
  %63 = xor i64 lshr (i64 ptrtoint (i64* @stderr to i64), i64 63), %62
  %64 = xor i64 %59, %62
  %65 = add nuw nsw i64 %64, %63
  %66 = icmp eq i64 %65, 2
  %67 = zext i1 %66 to i8
  %68 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %67, i8* %68, align 1, !tbaa !2452
  %69 = load i64, i64* %RSP
  %70 = load i64, i64* %PC
  %71 = add i64 %70, 3
  store i64 %71, i64* %PC
  store i64 %69, i64* %RBP, align 8, !tbaa !2428
  %72 = load i64, i64* %RSI
  %73 = load i64, i64* %PC
  %74 = add i64 %73, 4
  store i64 %74, i64* %PC
  %75 = ashr i64 %72, 2
  %76 = trunc i64 %75 to i8
  %77 = and i8 %76, 1
  %78 = ashr i64 %75, 1
  store i64 %78, i64* %RSI, align 8, !tbaa !2428
  %79 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %77, i8* %79, align 1, !tbaa !2453
  %80 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %81 = trunc i64 %78 to i32
  %82 = and i32 %81, 255
  %83 = call i32 @llvm.ctpop.i32(i32 %82) #17
  %84 = trunc i32 %83 to i8
  %85 = and i8 %84, 1
  %86 = xor i8 %85, 1
  store i8 %86, i8* %80, align 1, !tbaa !2453
  %87 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %87, align 1, !tbaa !2453
  %88 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %89 = icmp eq i64 %78, 0
  %90 = zext i1 %89 to i8
  store i8 %90, i8* %88, align 1, !tbaa !2453
  %91 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %92 = lshr i64 %78, 63
  %93 = trunc i64 %92 to i8
  store i8 %93, i8* %91, align 1, !tbaa !2453
  %94 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %94, align 1, !tbaa !2453
  %95 = load i64, i64* %RSI
  %96 = load i64, i64* %PC
  %97 = add i64 %96, 3
  store i64 %97, i64* %PC
  store i64 %95, i64* %RAX, align 8, !tbaa !2428
  %98 = load i64, i64* %RAX
  %99 = load i64, i64* %PC
  %100 = add i64 %99, 4
  store i64 %100, i64* %PC
  %101 = lshr i64 %98, 62
  %102 = trunc i64 %101 to i8
  %103 = and i8 %102, 1
  %104 = lshr i64 %101, 1
  store i64 %104, i64* %RAX, align 8, !tbaa !2428
  %105 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %103, i8* %105, align 1, !tbaa !2453
  %106 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %107 = trunc i64 %104 to i32
  %108 = and i32 %107, 255
  %109 = call i32 @llvm.ctpop.i32(i32 %108) #17
  %110 = trunc i32 %109 to i8
  %111 = and i8 %110, 1
  %112 = xor i8 %111, 1
  store i8 %112, i8* %106, align 1, !tbaa !2453
  %113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %113, align 1, !tbaa !2453
  %114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %115 = icmp eq i64 %104, 0
  %116 = zext i1 %115 to i8
  store i8 %116, i8* %114, align 1, !tbaa !2453
  %117 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %117, align 1, !tbaa !2453
  %118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %118, align 1, !tbaa !2453
  %119 = load i64, i64* %RSI
  %120 = load i64, i64* %RAX
  %121 = load i64, i64* %PC
  %122 = add i64 %121, 3
  store i64 %122, i64* %PC
  %123 = add i64 %120, %119
  store i64 %123, i64* %RSI, align 8, !tbaa !2428
  %124 = icmp ult i64 %123, %119
  %125 = icmp ult i64 %123, %120
  %126 = or i1 %124, %125
  %127 = zext i1 %126 to i8
  %128 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %127, i8* %128, align 1, !tbaa !2434
  %129 = trunc i64 %123 to i32
  %130 = and i32 %129, 255
  %131 = call i32 @llvm.ctpop.i32(i32 %130) #17
  %132 = trunc i32 %131 to i8
  %133 = and i8 %132, 1
  %134 = xor i8 %133, 1
  %135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %134, i8* %135, align 1, !tbaa !2448
  %136 = xor i64 %120, %119
  %137 = xor i64 %136, %123
  %138 = lshr i64 %137, 4
  %139 = trunc i64 %138 to i8
  %140 = and i8 %139, 1
  %141 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %140, i8* %141, align 1, !tbaa !2449
  %142 = icmp eq i64 %123, 0
  %143 = zext i1 %142 to i8
  %144 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %143, i8* %144, align 1, !tbaa !2450
  %145 = lshr i64 %123, 63
  %146 = trunc i64 %145 to i8
  %147 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %146, i8* %147, align 1, !tbaa !2451
  %148 = lshr i64 %119, 63
  %149 = lshr i64 %120, 63
  %150 = xor i64 %145, %148
  %151 = xor i64 %145, %149
  %152 = add nuw nsw i64 %150, %151
  %153 = icmp eq i64 %152, 2
  %154 = zext i1 %153 to i8
  %155 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %154, i8* %155, align 1, !tbaa !2452
  %156 = load i64, i64* %RSI
  %157 = load i64, i64* %PC
  %158 = add i64 %157, 3
  store i64 %158, i64* %PC
  %159 = trunc i64 %156 to i8
  %160 = and i8 %159, 1
  %161 = ashr i64 %156, 1
  store i64 %161, i64* %RSI, align 8, !tbaa !2428
  %162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %160, i8* %162, align 1, !tbaa !2453
  %163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %164 = trunc i64 %161 to i32
  %165 = and i32 %164, 255
  %166 = call i32 @llvm.ctpop.i32(i32 %165) #17
  %167 = trunc i32 %166 to i8
  %168 = and i8 %167, 1
  %169 = xor i8 %168, 1
  store i8 %169, i8* %163, align 1, !tbaa !2453
  %170 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %170, align 1, !tbaa !2453
  %171 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %172 = icmp eq i64 %161, 0
  %173 = zext i1 %172 to i8
  store i8 %173, i8* %171, align 1, !tbaa !2453
  %174 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %175 = lshr i64 %161, 63
  %176 = trunc i64 %175 to i8
  store i8 %176, i8* %174, align 1, !tbaa !2453
  %177 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %177, align 1, !tbaa !2453
  %178 = load i64, i64* %PC
  %179 = add i64 %178, 23
  %180 = load i64, i64* %PC
  %181 = add i64 %180, 2
  %182 = load i64, i64* %PC
  %183 = add i64 %182, 2
  store i64 %183, i64* %PC
  %184 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %185 = load i8, i8* %184, align 1, !tbaa !2450
  store i8 %185, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %186 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %187 = icmp ne i8 %185, 0
  %188 = select i1 %187, i64 %179, i64 %181
  store i64 %188, i64* %186, align 8, !tbaa !2428
  %189 = load i8, i8* %BRANCH_TAKEN
  %190 = icmp eq i8 %189, 1
  br i1 %190, label %block_400818, label %block_400803

block_40081a:                                     ; preds = %block_40080d
  %191 = load i64, i64* %RAX
  %192 = load i64, i64* %RAX
  %193 = add i64 %192, %191
  %194 = load i16, i16* %AX
  %195 = zext i16 %194 to i64
  %196 = load i64, i64* %PC
  %197 = add i64 %196, 6
  store i64 %197, i64* %PC
  %198 = load i64, i64* %PC
  %199 = tail call %struct.Memory* @sub_400820___do_global_dtors_aux(%struct.State* %0, i64 %198, %struct.Memory* %2)
  ret %struct.Memory* %199

block_400815:                                     ; preds = %block_40080d
  %200 = load i64, i64* %RAX
  %201 = load i32, i32* %EAX
  %202 = zext i32 %201 to i64
  %203 = load i64, i64* %PC
  %204 = add i64 %203, 3
  store i64 %204, i64* %PC
  br label %block_400818

block_40080d:                                     ; preds = %block_400803
  %205 = load i64, i64* %PC
  %206 = add i64 %205, 1
  store i64 %206, i64* %PC
  %207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %208 = load i64, i64* %207, align 8, !tbaa !2428
  %209 = add i64 %208, 8
  %210 = inttoptr i64 %208 to i64*
  %211 = load i64, i64* %210
  store i64 %211, i64* %RBP, align 8, !tbaa !2428
  store i64 %209, i64* %207, align 8, !tbaa !2428
  %212 = load i64, i64* %PC
  %213 = add i64 %212, 5
  store i64 %213, i64* %PC
  store i64 and (i64 ptrtoint (i64* @stderr to i64), i64 4294967295), i64* %RDI, align 8, !tbaa !2428
  %214 = load i64, i64* %RAX
  %215 = load i64, i64* %PC
  %216 = add i64 %215, 2
  store i64 %216, i64* %PC
  %217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %214, i64* %217, align 8, !tbaa !2428
  %218 = load i64, i64* %PC
  switch i64 %218, label %270 [
    i64 4196378, label %block_40081a
    i64 4196373, label %block_400815
  ]

block_400818:                                     ; preds = %block_400803, %block_400815, %block_4007e0
  %MEMORY.0 = phi %struct.Memory* [ %2, %block_4007e0 ], [ %2, %block_400803 ], [ %2, %block_400815 ]
  %219 = load i64, i64* %PC
  %220 = add i64 %219, 1
  store i64 %220, i64* %PC
  %221 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %222 = load i64, i64* %221, align 8, !tbaa !2428
  %223 = add i64 %222, 8
  %224 = inttoptr i64 %222 to i64*
  %225 = load i64, i64* %224
  store i64 %225, i64* %RBP, align 8, !tbaa !2428
  store i64 %223, i64* %221, align 8, !tbaa !2428
  %226 = load i64, i64* %PC
  %227 = add i64 %226, 1
  store i64 %227, i64* %PC
  %228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %229 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %230 = load i64, i64* %229, align 8, !tbaa !2428
  %231 = inttoptr i64 %230 to i64*
  %232 = load i64, i64* %231
  store i64 %232, i64* %228, align 8, !tbaa !2428
  %233 = add i64 %230, 8
  store i64 %233, i64* %229, align 8, !tbaa !2428
  ret %struct.Memory* %MEMORY.0

block_400803:                                     ; preds = %block_4007e0
  %234 = load i64, i64* %PC
  %235 = add i64 %234, 5
  store i64 %235, i64* %PC
  store i64 0, i64* %RAX, align 8, !tbaa !2428
  %236 = load i64, i64* %RAX
  %237 = load i64, i64* %RAX
  %238 = load i64, i64* %PC
  %239 = add i64 %238, 3
  store i64 %239, i64* %PC
  %240 = and i64 %237, %236
  %241 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %241, align 1, !tbaa !2434
  %242 = trunc i64 %240 to i32
  %243 = and i32 %242, 255
  %244 = call i32 @llvm.ctpop.i32(i32 %243) #17
  %245 = trunc i32 %244 to i8
  %246 = and i8 %245, 1
  %247 = xor i8 %246, 1
  %248 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %247, i8* %248, align 1, !tbaa !2448
  %249 = icmp eq i64 %240, 0
  %250 = zext i1 %249 to i8
  %251 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %250, i8* %251, align 1, !tbaa !2450
  %252 = lshr i64 %240, 63
  %253 = trunc i64 %252 to i8
  %254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %253, i8* %254, align 1, !tbaa !2451
  %255 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %255, align 1, !tbaa !2452
  %256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %256, align 1, !tbaa !2449
  %257 = load i64, i64* %PC
  %258 = add i64 %257, 13
  %259 = load i64, i64* %PC
  %260 = add i64 %259, 2
  %261 = load i64, i64* %PC
  %262 = add i64 %261, 2
  store i64 %262, i64* %PC
  %263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %264 = load i8, i8* %263, align 1, !tbaa !2450
  store i8 %264, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %265 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %266 = icmp ne i8 %264, 0
  %267 = select i1 %266, i64 %258, i64 %260
  store i64 %267, i64* %265, align 8, !tbaa !2428
  %268 = load i8, i8* %BRANCH_TAKEN
  %269 = icmp eq i8 %268, 1
  br i1 %269, label %block_400818, label %block_40080d

; <label>:270:                                    ; preds = %block_40080d
  %271 = load i64, i64* %PC
  %272 = tail call %struct.Memory* @__remill_jump(%struct.State* %0, i64 %271, %struct.Memory* %2)
  ret %struct.Memory* %272
}

; Function Attrs: noinline
define %struct.Memory* @sub_401880___libc_csu_init(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_401880:
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 3
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %EBX = bitcast %union.anon* %11 to i32*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %EDI = bitcast %union.anon* %14 to i32*
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16 = getelementptr inbounds %struct.GPR, %struct.GPR* %15, i32 0, i32 27
  %17 = getelementptr inbounds %struct.Reg, %struct.Reg* %16, i32 0, i32 0
  %R13D = bitcast %union.anon* %17 to i32*
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19 = getelementptr inbounds %struct.GPR, %struct.GPR* %18, i32 0, i32 1
  %20 = getelementptr inbounds %struct.Reg, %struct.Reg* %19, i32 0, i32 0
  %RAX = bitcast %union.anon* %20 to i64*
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22 = getelementptr inbounds %struct.GPR, %struct.GPR* %21, i32 0, i32 3
  %23 = getelementptr inbounds %struct.Reg, %struct.Reg* %22, i32 0, i32 0
  %RBX = bitcast %union.anon* %23 to i64*
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25 = getelementptr inbounds %struct.GPR, %struct.GPR* %24, i32 0, i32 7
  %26 = getelementptr inbounds %struct.Reg, %struct.Reg* %25, i32 0, i32 0
  %RDX = bitcast %union.anon* %26 to i64*
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28 = getelementptr inbounds %struct.GPR, %struct.GPR* %27, i32 0, i32 9
  %29 = getelementptr inbounds %struct.Reg, %struct.Reg* %28, i32 0, i32 0
  %RSI = bitcast %union.anon* %29 to i64*
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31 = getelementptr inbounds %struct.GPR, %struct.GPR* %30, i32 0, i32 11
  %32 = getelementptr inbounds %struct.Reg, %struct.Reg* %31, i32 0, i32 0
  %RDI = bitcast %union.anon* %32 to i64*
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34 = getelementptr inbounds %struct.GPR, %struct.GPR* %33, i32 0, i32 13
  %35 = getelementptr inbounds %struct.Reg, %struct.Reg* %34, i32 0, i32 0
  %RSP = bitcast %union.anon* %35 to i64*
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %37 = getelementptr inbounds %struct.GPR, %struct.GPR* %36, i32 0, i32 15
  %38 = getelementptr inbounds %struct.Reg, %struct.Reg* %37, i32 0, i32 0
  %RBP = bitcast %union.anon* %38 to i64*
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %40 = getelementptr inbounds %struct.GPR, %struct.GPR* %39, i32 0, i32 25
  %41 = getelementptr inbounds %struct.Reg, %struct.Reg* %40, i32 0, i32 0
  %R12 = bitcast %union.anon* %41 to i64*
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %43 = getelementptr inbounds %struct.GPR, %struct.GPR* %42, i32 0, i32 27
  %44 = getelementptr inbounds %struct.Reg, %struct.Reg* %43, i32 0, i32 0
  %R13 = bitcast %union.anon* %44 to i64*
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %46 = getelementptr inbounds %struct.GPR, %struct.GPR* %45, i32 0, i32 29
  %47 = getelementptr inbounds %struct.Reg, %struct.Reg* %46, i32 0, i32 0
  %R14 = bitcast %union.anon* %47 to i64*
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %49 = getelementptr inbounds %struct.GPR, %struct.GPR* %48, i32 0, i32 31
  %50 = getelementptr inbounds %struct.Reg, %struct.Reg* %49, i32 0, i32 0
  %R15 = bitcast %union.anon* %50 to i64*
  %51 = load i64, i64* %R15
  %52 = load i64, i64* %PC
  %53 = add i64 %52, 2
  store i64 %53, i64* %PC
  %54 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %55 = load i64, i64* %54, align 8, !tbaa !2428
  %56 = add i64 %55, -8
  %57 = inttoptr i64 %56 to i64*
  store i64 %51, i64* %57
  store i64 %56, i64* %54, align 8, !tbaa !2428
  %58 = load i64, i64* %R14
  %59 = load i64, i64* %PC
  %60 = add i64 %59, 2
  store i64 %60, i64* %PC
  %61 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %62 = load i64, i64* %61, align 8, !tbaa !2428
  %63 = add i64 %62, -8
  %64 = inttoptr i64 %63 to i64*
  store i64 %58, i64* %64
  store i64 %63, i64* %61, align 8, !tbaa !2428
  %65 = load i64, i64* %RDX
  %66 = load i64, i64* %PC
  %67 = add i64 %66, 3
  store i64 %67, i64* %PC
  store i64 %65, i64* %R15, align 8, !tbaa !2428
  %68 = load i64, i64* %R13
  %69 = load i64, i64* %PC
  %70 = add i64 %69, 2
  store i64 %70, i64* %PC
  %71 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %72 = load i64, i64* %71, align 8, !tbaa !2428
  %73 = add i64 %72, -8
  %74 = inttoptr i64 %73 to i64*
  store i64 %68, i64* %74
  store i64 %73, i64* %71, align 8, !tbaa !2428
  %75 = load i64, i64* %R12
  %76 = load i64, i64* %PC
  %77 = add i64 %76, 2
  store i64 %77, i64* %PC
  %78 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %79 = load i64, i64* %78, align 8, !tbaa !2428
  %80 = add i64 %79, -8
  %81 = inttoptr i64 %80 to i64*
  store i64 %75, i64* %81
  store i64 %80, i64* %78, align 8, !tbaa !2428
  %82 = load i64, i64* %PC
  %83 = add i64 %82, 7
  store i64 %83, i64* %PC
  store i64 ptrtoint (%seg_601de0__init_array_type* @seg_601de0__init_array to i64), i64* %R12, align 8, !tbaa !2428
  %84 = load i64, i64* %RBP
  %85 = load i64, i64* %PC
  %86 = add i64 %85, 1
  store i64 %86, i64* %PC
  %87 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %88 = load i64, i64* %87, align 8, !tbaa !2428
  %89 = add i64 %88, -8
  %90 = inttoptr i64 %89 to i64*
  store i64 %84, i64* %90
  store i64 %89, i64* %87, align 8, !tbaa !2428
  %91 = load i64, i64* %PC
  %92 = add i64 %91, 7
  store i64 %92, i64* %PC
  store i64 add (i64 ptrtoint (%seg_601de0__init_array_type* @seg_601de0__init_array to i64), i64 8), i64* %RBP, align 8, !tbaa !2428
  %93 = load i64, i64* %RBX
  %94 = load i64, i64* %PC
  %95 = add i64 %94, 1
  store i64 %95, i64* %PC
  %96 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %97 = load i64, i64* %96, align 8, !tbaa !2428
  %98 = add i64 %97, -8
  %99 = inttoptr i64 %98 to i64*
  store i64 %93, i64* %99
  store i64 %98, i64* %96, align 8, !tbaa !2428
  %100 = bitcast i32* %R13D to i64*
  %101 = load i32, i32* %EDI
  %102 = zext i32 %101 to i64
  %103 = load i64, i64* %PC
  %104 = add i64 %103, 3
  store i64 %104, i64* %PC
  %105 = and i64 %102, 4294967295
  store i64 %105, i64* %100, align 8, !tbaa !2428
  %106 = load i64, i64* %RSI
  %107 = load i64, i64* %PC
  %108 = add i64 %107, 3
  store i64 %108, i64* %PC
  store i64 %106, i64* %R14, align 8, !tbaa !2428
  %109 = load i64, i64* %RBP
  %110 = load i64, i64* %R12
  %111 = load i64, i64* %PC
  %112 = add i64 %111, 3
  store i64 %112, i64* %PC
  %113 = sub i64 %109, %110
  store i64 %113, i64* %RBP, align 8, !tbaa !2428
  %114 = icmp ult i64 %109, %110
  %115 = zext i1 %114 to i8
  %116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %115, i8* %116, align 1, !tbaa !2434
  %117 = trunc i64 %113 to i32
  %118 = and i32 %117, 255
  %119 = call i32 @llvm.ctpop.i32(i32 %118) #17
  %120 = trunc i32 %119 to i8
  %121 = and i8 %120, 1
  %122 = xor i8 %121, 1
  %123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %122, i8* %123, align 1, !tbaa !2448
  %124 = xor i64 %110, %109
  %125 = xor i64 %124, %113
  %126 = lshr i64 %125, 4
  %127 = trunc i64 %126 to i8
  %128 = and i8 %127, 1
  %129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %128, i8* %129, align 1, !tbaa !2449
  %130 = icmp eq i64 %113, 0
  %131 = zext i1 %130 to i8
  %132 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %131, i8* %132, align 1, !tbaa !2450
  %133 = lshr i64 %113, 63
  %134 = trunc i64 %133 to i8
  %135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %134, i8* %135, align 1, !tbaa !2451
  %136 = lshr i64 %109, 63
  %137 = lshr i64 %110, 63
  %138 = xor i64 %137, %136
  %139 = xor i64 %133, %136
  %140 = add nuw nsw i64 %139, %138
  %141 = icmp eq i64 %140, 2
  %142 = zext i1 %141 to i8
  %143 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %142, i8* %143, align 1, !tbaa !2452
  %144 = load i64, i64* %RSP
  %145 = load i64, i64* %PC
  %146 = add i64 %145, 4
  store i64 %146, i64* %PC
  %147 = sub i64 %144, 8
  store i64 %147, i64* %RSP, align 8, !tbaa !2428
  %148 = icmp ult i64 %144, 8
  %149 = zext i1 %148 to i8
  %150 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %149, i8* %150, align 1, !tbaa !2434
  %151 = trunc i64 %147 to i32
  %152 = and i32 %151, 255
  %153 = call i32 @llvm.ctpop.i32(i32 %152) #17
  %154 = trunc i32 %153 to i8
  %155 = and i8 %154, 1
  %156 = xor i8 %155, 1
  %157 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %156, i8* %157, align 1, !tbaa !2448
  %158 = xor i64 8, %144
  %159 = xor i64 %158, %147
  %160 = lshr i64 %159, 4
  %161 = trunc i64 %160 to i8
  %162 = and i8 %161, 1
  %163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %162, i8* %163, align 1, !tbaa !2449
  %164 = icmp eq i64 %147, 0
  %165 = zext i1 %164 to i8
  %166 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %165, i8* %166, align 1, !tbaa !2450
  %167 = lshr i64 %147, 63
  %168 = trunc i64 %167 to i8
  %169 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %168, i8* %169, align 1, !tbaa !2451
  %170 = lshr i64 %144, 63
  %171 = xor i64 %167, %170
  %172 = add nuw nsw i64 %171, %170
  %173 = icmp eq i64 %172, 2
  %174 = zext i1 %173 to i8
  %175 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %174, i8* %175, align 1, !tbaa !2452
  %176 = load i64, i64* %RBP
  %177 = load i64, i64* %PC
  %178 = add i64 %177, 4
  store i64 %178, i64* %PC
  %179 = ashr i64 %176, 2
  %180 = trunc i64 %179 to i8
  %181 = and i8 %180, 1
  %182 = ashr i64 %179, 1
  store i64 %182, i64* %RBP, align 8, !tbaa !2428
  %183 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %181, i8* %183, align 1, !tbaa !2453
  %184 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %185 = trunc i64 %182 to i32
  %186 = and i32 %185, 255
  %187 = call i32 @llvm.ctpop.i32(i32 %186) #17
  %188 = trunc i32 %187 to i8
  %189 = and i8 %188, 1
  %190 = xor i8 %189, 1
  store i8 %190, i8* %184, align 1, !tbaa !2453
  %191 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %191, align 1, !tbaa !2453
  %192 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %193 = icmp eq i64 %182, 0
  %194 = zext i1 %193 to i8
  store i8 %194, i8* %192, align 1, !tbaa !2453
  %195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %196 = lshr i64 %182, 63
  %197 = trunc i64 %196 to i8
  store i8 %197, i8* %195, align 1, !tbaa !2453
  %198 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %198, align 1, !tbaa !2453
  %199 = load i64, i64* %PC
  %200 = sub i64 %199, 4628
  %201 = load i64, i64* %PC
  %202 = add i64 %201, 5
  %203 = load i64, i64* %PC
  %204 = add i64 %203, 5
  store i64 %204, i64* %PC
  %205 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %206 = load i64, i64* %205, align 8, !tbaa !2428
  %207 = add i64 %206, -8
  %208 = inttoptr i64 %207 to i64*
  store i64 %202, i64* %208
  store i64 %207, i64* %205, align 8, !tbaa !2428
  %209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %200, i64* %209, align 8, !tbaa !2428
  %210 = load i64, i64* %PC
  %211 = call %struct.Memory* @sub_400698__init_proc_renamed_(%struct.State* %0, i64 %210, %struct.Memory* %2)
  %212 = load i64, i64* %RBP
  %213 = load i64, i64* %RBP
  %214 = load i64, i64* %PC
  %215 = add i64 %214, 3
  store i64 %215, i64* %PC
  %216 = and i64 %213, %212
  %217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %217, align 1, !tbaa !2434
  %218 = trunc i64 %216 to i32
  %219 = and i32 %218, 255
  %220 = call i32 @llvm.ctpop.i32(i32 %219) #17
  %221 = trunc i32 %220 to i8
  %222 = and i8 %221, 1
  %223 = xor i8 %222, 1
  %224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %223, i8* %224, align 1, !tbaa !2448
  %225 = icmp eq i64 %216, 0
  %226 = zext i1 %225 to i8
  %227 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %226, i8* %227, align 1, !tbaa !2450
  %228 = lshr i64 %216, 63
  %229 = trunc i64 %228 to i8
  %230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %229, i8* %230, align 1, !tbaa !2451
  %231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %231, align 1, !tbaa !2452
  %232 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %232, align 1, !tbaa !2449
  %233 = load i64, i64* %PC
  %234 = add i64 %233, 34
  %235 = load i64, i64* %PC
  %236 = add i64 %235, 2
  %237 = load i64, i64* %PC
  %238 = add i64 %237, 2
  store i64 %238, i64* %PC
  %239 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %240 = load i8, i8* %239, align 1, !tbaa !2450
  store i8 %240, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %241 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %242 = icmp ne i8 %240, 0
  %243 = select i1 %242, i64 %234, i64 %236
  store i64 %243, i64* %241, align 8, !tbaa !2428
  %244 = load i8, i8* %BRANCH_TAKEN
  %245 = icmp eq i8 %244, 1
  br i1 %245, label %block_4018d6, label %block_4018b6

block_4018d6:                                     ; preds = %block_4018c0, %block_401880
  %MEMORY.0 = phi %struct.Memory* [ %211, %block_401880 ], [ %387, %block_4018c0 ]
  %246 = load i64, i64* %RSP
  %247 = load i64, i64* %PC
  %248 = add i64 %247, 4
  store i64 %248, i64* %PC
  %249 = add i64 8, %246
  store i64 %249, i64* %RSP, align 8, !tbaa !2428
  %250 = icmp ult i64 %249, %246
  %251 = icmp ult i64 %249, 8
  %252 = or i1 %250, %251
  %253 = zext i1 %252 to i8
  %254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %253, i8* %254, align 1, !tbaa !2434
  %255 = trunc i64 %249 to i32
  %256 = and i32 %255, 255
  %257 = call i32 @llvm.ctpop.i32(i32 %256) #17
  %258 = trunc i32 %257 to i8
  %259 = and i8 %258, 1
  %260 = xor i8 %259, 1
  %261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %260, i8* %261, align 1, !tbaa !2448
  %262 = xor i64 8, %246
  %263 = xor i64 %262, %249
  %264 = lshr i64 %263, 4
  %265 = trunc i64 %264 to i8
  %266 = and i8 %265, 1
  %267 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %266, i8* %267, align 1, !tbaa !2449
  %268 = icmp eq i64 %249, 0
  %269 = zext i1 %268 to i8
  %270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %269, i8* %270, align 1, !tbaa !2450
  %271 = lshr i64 %249, 63
  %272 = trunc i64 %271 to i8
  %273 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %272, i8* %273, align 1, !tbaa !2451
  %274 = lshr i64 %246, 63
  %275 = xor i64 %271, %274
  %276 = add nuw nsw i64 %275, %271
  %277 = icmp eq i64 %276, 2
  %278 = zext i1 %277 to i8
  %279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %278, i8* %279, align 1, !tbaa !2452
  %280 = load i64, i64* %PC
  %281 = add i64 %280, 1
  store i64 %281, i64* %PC
  %282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %283 = load i64, i64* %282, align 8, !tbaa !2428
  %284 = add i64 %283, 8
  %285 = inttoptr i64 %283 to i64*
  %286 = load i64, i64* %285
  store i64 %286, i64* %RBX, align 8, !tbaa !2428
  store i64 %284, i64* %282, align 8, !tbaa !2428
  %287 = load i64, i64* %PC
  %288 = add i64 %287, 1
  store i64 %288, i64* %PC
  %289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %290 = load i64, i64* %289, align 8, !tbaa !2428
  %291 = add i64 %290, 8
  %292 = inttoptr i64 %290 to i64*
  %293 = load i64, i64* %292
  store i64 %293, i64* %RBP, align 8, !tbaa !2428
  store i64 %291, i64* %289, align 8, !tbaa !2428
  %294 = load i64, i64* %PC
  %295 = add i64 %294, 2
  store i64 %295, i64* %PC
  %296 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %297 = load i64, i64* %296, align 8, !tbaa !2428
  %298 = add i64 %297, 8
  %299 = inttoptr i64 %297 to i64*
  %300 = load i64, i64* %299
  store i64 %300, i64* %R12, align 8, !tbaa !2428
  store i64 %298, i64* %296, align 8, !tbaa !2428
  %301 = load i64, i64* %PC
  %302 = add i64 %301, 2
  store i64 %302, i64* %PC
  %303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %304 = load i64, i64* %303, align 8, !tbaa !2428
  %305 = add i64 %304, 8
  %306 = inttoptr i64 %304 to i64*
  %307 = load i64, i64* %306
  store i64 %307, i64* %R13, align 8, !tbaa !2428
  store i64 %305, i64* %303, align 8, !tbaa !2428
  %308 = load i64, i64* %PC
  %309 = add i64 %308, 2
  store i64 %309, i64* %PC
  %310 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %311 = load i64, i64* %310, align 8, !tbaa !2428
  %312 = add i64 %311, 8
  %313 = inttoptr i64 %311 to i64*
  %314 = load i64, i64* %313
  store i64 %314, i64* %R14, align 8, !tbaa !2428
  store i64 %312, i64* %310, align 8, !tbaa !2428
  %315 = load i64, i64* %PC
  %316 = add i64 %315, 2
  store i64 %316, i64* %PC
  %317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %318 = load i64, i64* %317, align 8, !tbaa !2428
  %319 = add i64 %318, 8
  %320 = inttoptr i64 %318 to i64*
  %321 = load i64, i64* %320
  store i64 %321, i64* %R15, align 8, !tbaa !2428
  store i64 %319, i64* %317, align 8, !tbaa !2428
  %322 = load i64, i64* %PC
  %323 = add i64 %322, 1
  store i64 %323, i64* %PC
  %324 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %325 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %326 = load i64, i64* %325, align 8, !tbaa !2428
  %327 = inttoptr i64 %326 to i64*
  %328 = load i64, i64* %327
  store i64 %328, i64* %324, align 8, !tbaa !2428
  %329 = add i64 %326, 8
  store i64 %329, i64* %325, align 8, !tbaa !2428
  ret %struct.Memory* %MEMORY.0

block_4018b6:                                     ; preds = %block_401880
  %330 = load i64, i64* %RBX
  %331 = load i32, i32* %EBX
  %332 = zext i32 %331 to i64
  %333 = load i64, i64* %PC
  %334 = add i64 %333, 2
  store i64 %334, i64* %PC
  %335 = xor i64 %332, %330
  %336 = trunc i64 %335 to i32
  %337 = and i64 %335, 4294967295
  store i64 %337, i64* %RBX, align 8, !tbaa !2428
  %338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %338, align 1, !tbaa !2434
  %339 = and i32 %336, 255
  %340 = call i32 @llvm.ctpop.i32(i32 %339) #17
  %341 = trunc i32 %340 to i8
  %342 = and i8 %341, 1
  %343 = xor i8 %342, 1
  %344 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %343, i8* %344, align 1, !tbaa !2448
  %345 = icmp eq i32 %336, 0
  %346 = zext i1 %345 to i8
  %347 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %346, i8* %347, align 1, !tbaa !2450
  %348 = lshr i32 %336, 31
  %349 = trunc i32 %348 to i8
  %350 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %349, i8* %350, align 1, !tbaa !2451
  %351 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %351, align 1, !tbaa !2452
  %352 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %352, align 1, !tbaa !2449
  %353 = load i64, i64* %RAX
  %354 = load i64, i64* %RAX
  %355 = add i64 %354, %353
  %356 = load i32, i32* %EAX
  %357 = zext i32 %356 to i64
  %358 = load i64, i64* %PC
  %359 = add i64 %358, 8
  store i64 %359, i64* %PC
  br label %block_4018c0

block_4018c0:                                     ; preds = %block_4018c0, %block_4018b6
  %MEMORY.1 = phi %struct.Memory* [ %211, %block_4018b6 ], [ %387, %block_4018c0 ]
  %360 = load i64, i64* %R15
  %361 = load i64, i64* %PC
  %362 = add i64 %361, 3
  store i64 %362, i64* %PC
  store i64 %360, i64* %RDX, align 8, !tbaa !2428
  %363 = load i64, i64* %R14
  %364 = load i64, i64* %PC
  %365 = add i64 %364, 3
  store i64 %365, i64* %PC
  store i64 %363, i64* %RSI, align 8, !tbaa !2428
  %366 = load i32, i32* %R13D
  %367 = zext i32 %366 to i64
  %368 = load i64, i64* %PC
  %369 = add i64 %368, 3
  store i64 %369, i64* %PC
  %370 = and i64 %367, 4294967295
  store i64 %370, i64* %RDI, align 8, !tbaa !2428
  %371 = load i64, i64* %R12
  %372 = load i64, i64* %RBX
  %373 = mul i64 %372, 8
  %374 = add i64 %373, %371
  %375 = load i64, i64* %PC
  %376 = add i64 %375, 4
  %377 = load i64, i64* %PC
  %378 = add i64 %377, 4
  store i64 %378, i64* %PC
  %379 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %380 = load i64, i64* %379, align 8, !tbaa !2428
  %381 = add i64 %380, -8
  %382 = inttoptr i64 %381 to i64*
  store i64 %376, i64* %382
  store i64 %381, i64* %379, align 8, !tbaa !2428
  %383 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %384 = inttoptr i64 %374 to i64*
  %385 = load i64, i64* %384
  store i64 %385, i64* %383, align 8, !tbaa !2428
  %386 = load i64, i64* %PC
  %387 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 %386, %struct.Memory* %MEMORY.1)
  %388 = load i64, i64* %RBX
  %389 = load i64, i64* %PC
  %390 = add i64 %389, 4
  store i64 %390, i64* %PC
  %391 = add i64 1, %388
  store i64 %391, i64* %RBX, align 8, !tbaa !2428
  %392 = icmp ult i64 %391, %388
  %393 = icmp ult i64 %391, 1
  %394 = or i1 %392, %393
  %395 = zext i1 %394 to i8
  %396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %395, i8* %396, align 1, !tbaa !2434
  %397 = trunc i64 %391 to i32
  %398 = and i32 %397, 255
  %399 = call i32 @llvm.ctpop.i32(i32 %398) #17
  %400 = trunc i32 %399 to i8
  %401 = and i8 %400, 1
  %402 = xor i8 %401, 1
  %403 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %402, i8* %403, align 1, !tbaa !2448
  %404 = xor i64 1, %388
  %405 = xor i64 %404, %391
  %406 = lshr i64 %405, 4
  %407 = trunc i64 %406 to i8
  %408 = and i8 %407, 1
  %409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %408, i8* %409, align 1, !tbaa !2449
  %410 = icmp eq i64 %391, 0
  %411 = zext i1 %410 to i8
  %412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %411, i8* %412, align 1, !tbaa !2450
  %413 = lshr i64 %391, 63
  %414 = trunc i64 %413 to i8
  %415 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %414, i8* %415, align 1, !tbaa !2451
  %416 = lshr i64 %388, 63
  %417 = xor i64 %413, %416
  %418 = add nuw nsw i64 %417, %413
  %419 = icmp eq i64 %418, 2
  %420 = zext i1 %419 to i8
  %421 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %420, i8* %421, align 1, !tbaa !2452
  %422 = load i64, i64* %RBP
  %423 = load i64, i64* %RBX
  %424 = load i64, i64* %PC
  %425 = add i64 %424, 3
  store i64 %425, i64* %PC
  %426 = sub i64 %422, %423
  %427 = icmp ult i64 %422, %423
  %428 = zext i1 %427 to i8
  %429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %428, i8* %429, align 1, !tbaa !2434
  %430 = trunc i64 %426 to i32
  %431 = and i32 %430, 255
  %432 = call i32 @llvm.ctpop.i32(i32 %431) #17
  %433 = trunc i32 %432 to i8
  %434 = and i8 %433, 1
  %435 = xor i8 %434, 1
  %436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %435, i8* %436, align 1, !tbaa !2448
  %437 = xor i64 %423, %422
  %438 = xor i64 %437, %426
  %439 = lshr i64 %438, 4
  %440 = trunc i64 %439 to i8
  %441 = and i8 %440, 1
  %442 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %441, i8* %442, align 1, !tbaa !2449
  %443 = icmp eq i64 %426, 0
  %444 = zext i1 %443 to i8
  %445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %444, i8* %445, align 1, !tbaa !2450
  %446 = lshr i64 %426, 63
  %447 = trunc i64 %446 to i8
  %448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %447, i8* %448, align 1, !tbaa !2451
  %449 = lshr i64 %422, 63
  %450 = lshr i64 %423, 63
  %451 = xor i64 %450, %449
  %452 = xor i64 %446, %449
  %453 = add nuw nsw i64 %452, %451
  %454 = icmp eq i64 %453, 2
  %455 = zext i1 %454 to i8
  %456 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %455, i8* %456, align 1, !tbaa !2452
  %457 = load i64, i64* %PC
  %458 = sub i64 %457, 20
  %459 = load i64, i64* %PC
  %460 = add i64 %459, 2
  %461 = load i64, i64* %PC
  %462 = add i64 %461, 2
  store i64 %462, i64* %PC
  %463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %464 = load i8, i8* %463, align 1, !tbaa !2450
  %465 = icmp eq i8 %464, 0
  %466 = zext i1 %465 to i8
  store i8 %466, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %468 = select i1 %465, i64 %458, i64 %460
  store i64 %468, i64* %467, align 8, !tbaa !2428
  %469 = load i8, i8* %BRANCH_TAKEN
  %470 = icmp eq i8 %469, 1
  br i1 %470, label %block_4018c0, label %block_4018d6
}

; Function Attrs: noinline
define %struct.Memory* @sub_400860_main(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_400860:
  %state.i1432 = alloca %struct.State*, align 8
  %curr_pc.i1433 = alloca i64, align 8
  %memory.i1434 = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN.i1435 = alloca i8, align 1
  %SS_BASE.i1436 = alloca i64, align 8
  %ES_BASE.i1437 = alloca i64, align 8
  %DS_BASE.i1438 = alloca i64, align 8
  %CS_BASE.i1439 = alloca i64, align 8
  %STATE.i1440 = alloca %struct.State*, align 8
  %MEMORY.i1441 = alloca %struct.Memory*, align 8
  %_DR0.i1442 = alloca i64*, align 8
  %_DR1.i1443 = alloca i64*, align 8
  %_DR2.i1444 = alloca i64*, align 8
  %_DR3.i1445 = alloca i64*, align 8
  %_DR4.i1446 = alloca i64*, align 8
  %_DR5.i1447 = alloca i64*, align 8
  %_DR6.i1448 = alloca i64*, align 8
  %_DR7.i1449 = alloca i64*, align 8
  %CR0.i1450 = alloca i64*, align 8
  %CR1.i1451 = alloca i64*, align 8
  %CR2.i1452 = alloca i64*, align 8
  %CR3.i1453 = alloca i64*, align 8
  %CR4.i1454 = alloca i64*, align 8
  %CR8.i1455 = alloca i64*, align 8
  %state.i1273 = alloca %struct.State*, align 8
  %curr_pc.i1274 = alloca i64, align 8
  %memory.i1275 = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN.i1276 = alloca i8, align 1
  %SS_BASE.i1277 = alloca i64, align 8
  %ES_BASE.i1278 = alloca i64, align 8
  %DS_BASE.i1279 = alloca i64, align 8
  %CS_BASE.i1280 = alloca i64, align 8
  %STATE.i1281 = alloca %struct.State*, align 8
  %MEMORY.i1282 = alloca %struct.Memory*, align 8
  %_DR0.i1283 = alloca i64*, align 8
  %_DR1.i1284 = alloca i64*, align 8
  %_DR2.i1285 = alloca i64*, align 8
  %_DR3.i1286 = alloca i64*, align 8
  %_DR4.i1287 = alloca i64*, align 8
  %_DR5.i1288 = alloca i64*, align 8
  %_DR6.i1289 = alloca i64*, align 8
  %_DR7.i1290 = alloca i64*, align 8
  %CR0.i1291 = alloca i64*, align 8
  %CR1.i1292 = alloca i64*, align 8
  %CR2.i1293 = alloca i64*, align 8
  %CR3.i1294 = alloca i64*, align 8
  %CR4.i1295 = alloca i64*, align 8
  %CR8.i1296 = alloca i64*, align 8
  %state.i1114 = alloca %struct.State*, align 8
  %curr_pc.i1115 = alloca i64, align 8
  %memory.i1116 = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN.i1117 = alloca i8, align 1
  %SS_BASE.i1118 = alloca i64, align 8
  %ES_BASE.i1119 = alloca i64, align 8
  %DS_BASE.i1120 = alloca i64, align 8
  %CS_BASE.i1121 = alloca i64, align 8
  %STATE.i1122 = alloca %struct.State*, align 8
  %MEMORY.i1123 = alloca %struct.Memory*, align 8
  %_DR0.i1124 = alloca i64*, align 8
  %_DR1.i1125 = alloca i64*, align 8
  %_DR2.i1126 = alloca i64*, align 8
  %_DR3.i1127 = alloca i64*, align 8
  %_DR4.i1128 = alloca i64*, align 8
  %_DR5.i1129 = alloca i64*, align 8
  %_DR6.i1130 = alloca i64*, align 8
  %_DR7.i1131 = alloca i64*, align 8
  %CR0.i1132 = alloca i64*, align 8
  %CR1.i1133 = alloca i64*, align 8
  %CR2.i1134 = alloca i64*, align 8
  %CR3.i1135 = alloca i64*, align 8
  %CR4.i1136 = alloca i64*, align 8
  %CR8.i1137 = alloca i64*, align 8
  %state.i955 = alloca %struct.State*, align 8
  %curr_pc.i956 = alloca i64, align 8
  %memory.i957 = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN.i958 = alloca i8, align 1
  %SS_BASE.i959 = alloca i64, align 8
  %ES_BASE.i960 = alloca i64, align 8
  %DS_BASE.i961 = alloca i64, align 8
  %CS_BASE.i962 = alloca i64, align 8
  %STATE.i963 = alloca %struct.State*, align 8
  %MEMORY.i964 = alloca %struct.Memory*, align 8
  %_DR0.i965 = alloca i64*, align 8
  %_DR1.i966 = alloca i64*, align 8
  %_DR2.i967 = alloca i64*, align 8
  %_DR3.i968 = alloca i64*, align 8
  %_DR4.i969 = alloca i64*, align 8
  %_DR5.i970 = alloca i64*, align 8
  %_DR6.i971 = alloca i64*, align 8
  %_DR7.i972 = alloca i64*, align 8
  %CR0.i973 = alloca i64*, align 8
  %CR1.i974 = alloca i64*, align 8
  %CR2.i975 = alloca i64*, align 8
  %CR3.i976 = alloca i64*, align 8
  %CR4.i977 = alloca i64*, align 8
  %CR8.i978 = alloca i64*, align 8
  %state.i796 = alloca %struct.State*, align 8
  %curr_pc.i797 = alloca i64, align 8
  %memory.i798 = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN.i799 = alloca i8, align 1
  %SS_BASE.i800 = alloca i64, align 8
  %ES_BASE.i801 = alloca i64, align 8
  %DS_BASE.i802 = alloca i64, align 8
  %CS_BASE.i803 = alloca i64, align 8
  %STATE.i804 = alloca %struct.State*, align 8
  %MEMORY.i805 = alloca %struct.Memory*, align 8
  %_DR0.i806 = alloca i64*, align 8
  %_DR1.i807 = alloca i64*, align 8
  %_DR2.i808 = alloca i64*, align 8
  %_DR3.i809 = alloca i64*, align 8
  %_DR4.i810 = alloca i64*, align 8
  %_DR5.i811 = alloca i64*, align 8
  %_DR6.i812 = alloca i64*, align 8
  %_DR7.i813 = alloca i64*, align 8
  %CR0.i814 = alloca i64*, align 8
  %CR1.i815 = alloca i64*, align 8
  %CR2.i816 = alloca i64*, align 8
  %CR3.i817 = alloca i64*, align 8
  %CR4.i818 = alloca i64*, align 8
  %CR8.i819 = alloca i64*, align 8
  %state.i637 = alloca %struct.State*, align 8
  %curr_pc.i638 = alloca i64, align 8
  %memory.i639 = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN.i640 = alloca i8, align 1
  %SS_BASE.i641 = alloca i64, align 8
  %ES_BASE.i642 = alloca i64, align 8
  %DS_BASE.i643 = alloca i64, align 8
  %CS_BASE.i644 = alloca i64, align 8
  %STATE.i645 = alloca %struct.State*, align 8
  %MEMORY.i646 = alloca %struct.Memory*, align 8
  %_DR0.i647 = alloca i64*, align 8
  %_DR1.i648 = alloca i64*, align 8
  %_DR2.i649 = alloca i64*, align 8
  %_DR3.i650 = alloca i64*, align 8
  %_DR4.i651 = alloca i64*, align 8
  %_DR5.i652 = alloca i64*, align 8
  %_DR6.i653 = alloca i64*, align 8
  %_DR7.i654 = alloca i64*, align 8
  %CR0.i655 = alloca i64*, align 8
  %CR1.i656 = alloca i64*, align 8
  %CR2.i657 = alloca i64*, align 8
  %CR3.i658 = alloca i64*, align 8
  %CR4.i659 = alloca i64*, align 8
  %CR8.i660 = alloca i64*, align 8
  %state.i478 = alloca %struct.State*, align 8
  %curr_pc.i479 = alloca i64, align 8
  %memory.i480 = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN.i481 = alloca i8, align 1
  %SS_BASE.i482 = alloca i64, align 8
  %ES_BASE.i483 = alloca i64, align 8
  %DS_BASE.i484 = alloca i64, align 8
  %CS_BASE.i485 = alloca i64, align 8
  %STATE.i486 = alloca %struct.State*, align 8
  %MEMORY.i487 = alloca %struct.Memory*, align 8
  %_DR0.i488 = alloca i64*, align 8
  %_DR1.i489 = alloca i64*, align 8
  %_DR2.i490 = alloca i64*, align 8
  %_DR3.i491 = alloca i64*, align 8
  %_DR4.i492 = alloca i64*, align 8
  %_DR5.i493 = alloca i64*, align 8
  %_DR6.i494 = alloca i64*, align 8
  %_DR7.i495 = alloca i64*, align 8
  %CR0.i496 = alloca i64*, align 8
  %CR1.i497 = alloca i64*, align 8
  %CR2.i498 = alloca i64*, align 8
  %CR3.i499 = alloca i64*, align 8
  %CR4.i500 = alloca i64*, align 8
  %CR8.i501 = alloca i64*, align 8
  %state.i319 = alloca %struct.State*, align 8
  %curr_pc.i320 = alloca i64, align 8
  %memory.i321 = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN.i322 = alloca i8, align 1
  %SS_BASE.i323 = alloca i64, align 8
  %ES_BASE.i324 = alloca i64, align 8
  %DS_BASE.i325 = alloca i64, align 8
  %CS_BASE.i326 = alloca i64, align 8
  %STATE.i327 = alloca %struct.State*, align 8
  %MEMORY.i328 = alloca %struct.Memory*, align 8
  %_DR0.i329 = alloca i64*, align 8
  %_DR1.i330 = alloca i64*, align 8
  %_DR2.i331 = alloca i64*, align 8
  %_DR3.i332 = alloca i64*, align 8
  %_DR4.i333 = alloca i64*, align 8
  %_DR5.i334 = alloca i64*, align 8
  %_DR6.i335 = alloca i64*, align 8
  %_DR7.i336 = alloca i64*, align 8
  %CR0.i337 = alloca i64*, align 8
  %CR1.i338 = alloca i64*, align 8
  %CR2.i339 = alloca i64*, align 8
  %CR3.i340 = alloca i64*, align 8
  %CR4.i341 = alloca i64*, align 8
  %CR8.i342 = alloca i64*, align 8
  %state.i160 = alloca %struct.State*, align 8
  %curr_pc.i161 = alloca i64, align 8
  %memory.i162 = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN.i163 = alloca i8, align 1
  %SS_BASE.i164 = alloca i64, align 8
  %ES_BASE.i165 = alloca i64, align 8
  %DS_BASE.i166 = alloca i64, align 8
  %CS_BASE.i167 = alloca i64, align 8
  %STATE.i168 = alloca %struct.State*, align 8
  %MEMORY.i169 = alloca %struct.Memory*, align 8
  %_DR0.i170 = alloca i64*, align 8
  %_DR1.i171 = alloca i64*, align 8
  %_DR2.i172 = alloca i64*, align 8
  %_DR3.i173 = alloca i64*, align 8
  %_DR4.i174 = alloca i64*, align 8
  %_DR5.i175 = alloca i64*, align 8
  %_DR6.i176 = alloca i64*, align 8
  %_DR7.i177 = alloca i64*, align 8
  %CR0.i178 = alloca i64*, align 8
  %CR1.i179 = alloca i64*, align 8
  %CR2.i180 = alloca i64*, align 8
  %CR3.i181 = alloca i64*, align 8
  %CR4.i182 = alloca i64*, align 8
  %CR8.i183 = alloca i64*, align 8
  %state.i1 = alloca %struct.State*, align 8
  %curr_pc.i2 = alloca i64, align 8
  %memory.i3 = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN.i4 = alloca i8, align 1
  %SS_BASE.i5 = alloca i64, align 8
  %ES_BASE.i6 = alloca i64, align 8
  %DS_BASE.i7 = alloca i64, align 8
  %CS_BASE.i8 = alloca i64, align 8
  %STATE.i9 = alloca %struct.State*, align 8
  %MEMORY.i10 = alloca %struct.Memory*, align 8
  %_DR0.i11 = alloca i64*, align 8
  %_DR1.i12 = alloca i64*, align 8
  %_DR2.i13 = alloca i64*, align 8
  %_DR3.i14 = alloca i64*, align 8
  %_DR4.i15 = alloca i64*, align 8
  %_DR5.i16 = alloca i64*, align 8
  %_DR6.i17 = alloca i64*, align 8
  %_DR7.i18 = alloca i64*, align 8
  %CR0.i19 = alloca i64*, align 8
  %CR1.i20 = alloca i64*, align 8
  %CR2.i21 = alloca i64*, align 8
  %CR3.i22 = alloca i64*, align 8
  %CR4.i23 = alloca i64*, align 8
  %CR8.i24 = alloca i64*, align 8
  %state.i = alloca %struct.State*, align 8
  %curr_pc.i = alloca i64, align 8
  %memory.i = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN.i = alloca i8, align 1
  %SS_BASE.i = alloca i64, align 8
  %ES_BASE.i = alloca i64, align 8
  %DS_BASE.i = alloca i64, align 8
  %CS_BASE.i = alloca i64, align 8
  %STATE.i = alloca %struct.State*, align 8
  %MEMORY.i = alloca %struct.Memory*, align 8
  %_DR0.i = alloca i64*, align 8
  %_DR1.i = alloca i64*, align 8
  %_DR2.i = alloca i64*, align 8
  %_DR3.i = alloca i64*, align 8
  %_DR4.i = alloca i64*, align 8
  %_DR5.i = alloca i64*, align 8
  %_DR6.i = alloca i64*, align 8
  %_DR7.i = alloca i64*, align 8
  %CR0.i = alloca i64*, align 8
  %CR1.i = alloca i64*, align 8
  %CR2.i = alloca i64*, align 8
  %CR3.i = alloca i64*, align 8
  %CR4.i = alloca i64*, align 8
  %CR8.i = alloca i64*, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 1
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %EAX = bitcast %union.anon* %12 to i32*
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14 = getelementptr inbounds %struct.GPR, %struct.GPR* %13, i32 0, i32 5
  %15 = getelementptr inbounds %struct.Reg, %struct.Reg* %14, i32 0, i32 0
  %ECX = bitcast %union.anon* %15 to i32*
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17 = getelementptr inbounds %struct.GPR, %struct.GPR* %16, i32 0, i32 7
  %18 = getelementptr inbounds %struct.Reg, %struct.Reg* %17, i32 0, i32 0
  %EDX = bitcast %union.anon* %18 to i32*
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20 = getelementptr inbounds %struct.GPR, %struct.GPR* %19, i32 0, i32 11
  %21 = getelementptr inbounds %struct.Reg, %struct.Reg* %20, i32 0, i32 0
  %EDI = bitcast %union.anon* %21 to i32*
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23 = getelementptr inbounds %struct.GPR, %struct.GPR* %22, i32 0, i32 1
  %24 = getelementptr inbounds %struct.Reg, %struct.Reg* %23, i32 0, i32 0
  %RAX = bitcast %union.anon* %24 to i64*
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26 = getelementptr inbounds %struct.GPR, %struct.GPR* %25, i32 0, i32 5
  %27 = getelementptr inbounds %struct.Reg, %struct.Reg* %26, i32 0, i32 0
  %RCX = bitcast %union.anon* %27 to i64*
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29 = getelementptr inbounds %struct.GPR, %struct.GPR* %28, i32 0, i32 7
  %30 = getelementptr inbounds %struct.Reg, %struct.Reg* %29, i32 0, i32 0
  %RDX = bitcast %union.anon* %30 to i64*
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32 = getelementptr inbounds %struct.GPR, %struct.GPR* %31, i32 0, i32 9
  %33 = getelementptr inbounds %struct.Reg, %struct.Reg* %32, i32 0, i32 0
  %RSI = bitcast %union.anon* %33 to i64*
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35 = getelementptr inbounds %struct.GPR, %struct.GPR* %34, i32 0, i32 11
  %36 = getelementptr inbounds %struct.Reg, %struct.Reg* %35, i32 0, i32 0
  %RDI = bitcast %union.anon* %36 to i64*
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %38 = getelementptr inbounds %struct.GPR, %struct.GPR* %37, i32 0, i32 13
  %39 = getelementptr inbounds %struct.Reg, %struct.Reg* %38, i32 0, i32 0
  %RSP = bitcast %union.anon* %39 to i64*
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %41 = getelementptr inbounds %struct.GPR, %struct.GPR* %40, i32 0, i32 15
  %42 = getelementptr inbounds %struct.Reg, %struct.Reg* %41, i32 0, i32 0
  %RBP = bitcast %union.anon* %42 to i64*
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %44 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %43, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %44 to %"class.std::bitset"*
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %46 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %45, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %46 to %"class.std::bitset"*
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %48 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %47, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %48 to %"class.std::bitset"*
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %50 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %49, i64 0, i64 3
  %YMM3 = bitcast %union.VectorReg* %50 to %"class.std::bitset"*
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %52 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %51, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %52 to %union.vec128_t*
  %53 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %54 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %53, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %54 to %union.vec128_t*
  %55 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %56 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %55, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %56 to %union.vec128_t*
  %57 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %58 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %57, i64 0, i64 3
  %XMM3 = bitcast %union.VectorReg* %58 to %union.vec128_t*
  %59 = load i64, i64* %RBP
  %60 = load i64, i64* %PC
  %61 = add i64 %60, 1
  store i64 %61, i64* %PC
  %62 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %63 = load i64, i64* %62, align 8, !tbaa !2428
  %64 = add i64 %63, -8
  %65 = inttoptr i64 %64 to i64*
  store i64 %59, i64* %65
  store i64 %64, i64* %62, align 8, !tbaa !2428
  %66 = load i64, i64* %RSP
  %67 = load i64, i64* %PC
  %68 = add i64 %67, 3
  store i64 %68, i64* %PC
  store i64 %66, i64* %RBP, align 8, !tbaa !2428
  %69 = load i64, i64* %RSP
  %70 = load i64, i64* %PC
  %71 = add i64 %70, 7
  store i64 %71, i64* %PC
  %72 = sub i64 %69, 320
  store i64 %72, i64* %RSP, align 8, !tbaa !2428
  %73 = icmp ult i64 %69, 320
  %74 = zext i1 %73 to i8
  %75 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %74, i8* %75, align 1, !tbaa !2434
  %76 = trunc i64 %72 to i32
  %77 = and i32 %76, 255
  %78 = call i32 @llvm.ctpop.i32(i32 %77) #17
  %79 = trunc i32 %78 to i8
  %80 = and i8 %79, 1
  %81 = xor i8 %80, 1
  %82 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %81, i8* %82, align 1, !tbaa !2448
  %83 = xor i64 320, %69
  %84 = xor i64 %83, %72
  %85 = lshr i64 %84, 4
  %86 = trunc i64 %85 to i8
  %87 = and i8 %86, 1
  %88 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %87, i8* %88, align 1, !tbaa !2449
  %89 = icmp eq i64 %72, 0
  %90 = zext i1 %89 to i8
  %91 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %90, i8* %91, align 1, !tbaa !2450
  %92 = lshr i64 %72, 63
  %93 = trunc i64 %92 to i8
  %94 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %93, i8* %94, align 1, !tbaa !2451
  %95 = lshr i64 %69, 63
  %96 = xor i64 %92, %95
  %97 = add nuw nsw i64 %96, %95
  %98 = icmp eq i64 %97, 2
  %99 = zext i1 %98 to i8
  %100 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %99, i8* %100, align 1, !tbaa !2452
  %101 = load i64, i64* %RBP
  %102 = sub i64 %101, 4
  %103 = load i64, i64* %PC
  %104 = add i64 %103, 7
  store i64 %104, i64* %PC
  %105 = inttoptr i64 %102 to i32*
  store i32 0, i32* %105
  %106 = load i64, i64* %RBP
  %107 = sub i64 %106, 8
  %108 = load i32, i32* %EDI
  %109 = zext i32 %108 to i64
  %110 = load i64, i64* %PC
  %111 = add i64 %110, 3
  store i64 %111, i64* %PC
  %112 = inttoptr i64 %107 to i32*
  store i32 %108, i32* %112
  %113 = load i64, i64* %RBP
  %114 = sub i64 %113, 16
  %115 = load i64, i64* %RSI
  %116 = load i64, i64* %PC
  %117 = add i64 %116, 4
  store i64 %117, i64* %PC
  %118 = inttoptr i64 %114 to i64*
  store i64 %115, i64* %118
  %119 = load i64, i64* %RBP
  %120 = sub i64 %119, 184
  %121 = load i64, i64* %PC
  %122 = add i64 %121, 11
  store i64 %122, i64* %PC
  %123 = inttoptr i64 %120 to i64*
  store i64 100000, i64* %123
  %124 = load i64, i64* %RBP
  %125 = sub i64 %124, 208
  %126 = load i64, i64* %PC
  %127 = add i64 %126, 10
  store i64 %127, i64* %PC
  %128 = inttoptr i64 %125 to i32*
  store i32 0, i32* %128
  %129 = load i64, i64* %RBP
  %130 = sub i64 %129, 172
  %131 = load i64, i64* %PC
  %132 = add i64 %131, 10
  store i64 %132, i64* %PC
  %133 = inttoptr i64 %130 to i32*
  store i32 1, i32* %133
  br label %block_400898

block_400bea:                                     ; preds = %block_400bdc
  %134 = load i64, i64* %PC
  %135 = add i64 %134, 10
  store i64 %135, i64* %PC
  store i64 -9223372036854775808, i64* %RAX, align 8, !tbaa !2428
  %136 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %137 = load i64, i64* %PC
  %138 = add i64 %137, 9
  store i64 %138, i64* %PC
  %139 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 8) to double*)
  %140 = bitcast i8* %136 to double*
  store double %139, double* %140, align 1, !tbaa !2432
  %141 = getelementptr inbounds i8, i8* %136, i64 8
  %142 = bitcast i8* %141 to double*
  store double 0.000000e+00, double* %142, align 1, !tbaa !2432
  %143 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %144 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %145 = load i64, i64* %PC
  %146 = add i64 %145, 9
  store i64 %146, i64* %PC
  %147 = bitcast i8* %144 to double*
  %148 = load double, double* %147, align 1
  %149 = getelementptr inbounds i8, i8* %144, i64 8
  %150 = bitcast i8* %149 to i64*
  %151 = load i64, i64* %150, align 1
  %152 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 16) to double*)
  %153 = fadd double %148, %152
  %154 = bitcast i8* %143 to double*
  store double %153, double* %154, align 1, !tbaa !2432
  %155 = getelementptr inbounds i8, i8* %143, i64 8
  %156 = bitcast i8* %155 to i64*
  store i64 %151, i64* %156, align 1, !tbaa !2432
  %157 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %158 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %159 = load i64, i64* %PC
  %160 = add i64 %159, 9
  store i64 %160, i64* %PC
  %161 = bitcast i8* %158 to double*
  %162 = load double, double* %161, align 1
  %163 = getelementptr inbounds i8, i8* %158, i64 8
  %164 = bitcast i8* %163 to i64*
  %165 = load i64, i64* %164, align 1
  %166 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 24) to double*)
  %167 = fadd double %162, %166
  %168 = bitcast i8* %157 to double*
  store double %167, double* %168, align 1, !tbaa !2432
  %169 = getelementptr inbounds i8, i8* %157, i64 8
  %170 = bitcast i8* %169 to i64*
  store i64 %165, i64* %170, align 1, !tbaa !2432
  %171 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %172 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %173 = load i64, i64* %PC
  %174 = add i64 %173, 9
  store i64 %174, i64* %PC
  %175 = bitcast i8* %172 to double*
  %176 = load double, double* %175, align 1
  %177 = getelementptr inbounds i8, i8* %172, i64 8
  %178 = bitcast i8* %177 to i64*
  %179 = load i64, i64* %178, align 1
  %180 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 32) to double*)
  %181 = fsub double %176, %180
  %182 = bitcast i8* %171 to double*
  store double %181, double* %182, align 1, !tbaa !2432
  %183 = getelementptr inbounds i8, i8* %171, i64 8
  %184 = bitcast i8* %183 to i64*
  store i64 %179, i64* %184, align 1, !tbaa !2432
  %185 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %186 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %187 = load i64, i64* %PC
  %188 = add i64 %187, 9
  store i64 %188, i64* %PC
  %189 = bitcast i8* %186 to double*
  %190 = load double, double* %189, align 1
  %191 = getelementptr inbounds i8, i8* %186, i64 8
  %192 = bitcast i8* %191 to i64*
  %193 = load i64, i64* %192, align 1
  %194 = load double, double* bitcast (%T_type* @T to double*)
  %195 = fmul double %190, %194
  %196 = bitcast i8* %185 to double*
  store double %195, double* %196, align 1, !tbaa !2432
  %197 = getelementptr inbounds i8, i8* %185, i64 8
  %198 = bitcast i8* %197 to i64*
  store i64 %193, i64* %198, align 1, !tbaa !2432
  %199 = bitcast %union.vec128_t* %XMM0 to i8*
  %200 = load i64, i64* %PC
  %201 = add i64 %200, 9
  store i64 %201, i64* %PC
  %202 = bitcast i8* %199 to double*
  %203 = load double, double* %202, align 1
  store double %203, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 8) to double*)
  %204 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %205 = load i64, i64* %PC
  %206 = add i64 %205, 9
  store i64 %206, i64* %PC
  %207 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 8) to double*)
  %208 = bitcast i8* %204 to double*
  store double %207, double* %208, align 1, !tbaa !2432
  %209 = getelementptr inbounds i8, i8* %204, i64 8
  %210 = bitcast i8* %209 to double*
  store double 0.000000e+00, double* %210, align 1, !tbaa !2432
  %211 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %212 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %213 = load i64, i64* %PC
  %214 = add i64 %213, 9
  store i64 %214, i64* %PC
  %215 = bitcast i8* %212 to double*
  %216 = load double, double* %215, align 1
  %217 = getelementptr inbounds i8, i8* %212, i64 8
  %218 = bitcast i8* %217 to i64*
  %219 = load i64, i64* %218, align 1
  %220 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 16) to double*)
  %221 = fadd double %216, %220
  %222 = bitcast i8* %211 to double*
  store double %221, double* %222, align 1, !tbaa !2432
  %223 = getelementptr inbounds i8, i8* %211, i64 8
  %224 = bitcast i8* %223 to i64*
  store i64 %219, i64* %224, align 1, !tbaa !2432
  %225 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %226 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %227 = load i64, i64* %PC
  %228 = add i64 %227, 9
  store i64 %228, i64* %PC
  %229 = bitcast i8* %226 to double*
  %230 = load double, double* %229, align 1
  %231 = getelementptr inbounds i8, i8* %226, i64 8
  %232 = bitcast i8* %231 to i64*
  %233 = load i64, i64* %232, align 1
  %234 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 24) to double*)
  %235 = fsub double %230, %234
  %236 = bitcast i8* %225 to double*
  store double %235, double* %236, align 1, !tbaa !2432
  %237 = getelementptr inbounds i8, i8* %225, i64 8
  %238 = bitcast i8* %237 to i64*
  store i64 %233, i64* %238, align 1, !tbaa !2432
  %239 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %240 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %241 = load i64, i64* %PC
  %242 = add i64 %241, 9
  store i64 %242, i64* %PC
  %243 = bitcast i8* %240 to double*
  %244 = load double, double* %243, align 1
  %245 = getelementptr inbounds i8, i8* %240, i64 8
  %246 = bitcast i8* %245 to i64*
  %247 = load i64, i64* %246, align 1
  %248 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 32) to double*)
  %249 = fadd double %244, %248
  %250 = bitcast i8* %239 to double*
  store double %249, double* %250, align 1, !tbaa !2432
  %251 = getelementptr inbounds i8, i8* %239, i64 8
  %252 = bitcast i8* %251 to i64*
  store i64 %247, i64* %252, align 1, !tbaa !2432
  %253 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %254 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %255 = load i64, i64* %PC
  %256 = add i64 %255, 9
  store i64 %256, i64* %PC
  %257 = bitcast i8* %254 to double*
  %258 = load double, double* %257, align 1
  %259 = getelementptr inbounds i8, i8* %254, i64 8
  %260 = bitcast i8* %259 to i64*
  %261 = load i64, i64* %260, align 1
  %262 = load double, double* bitcast (%T_type* @T to double*)
  %263 = fmul double %258, %262
  %264 = bitcast i8* %253 to double*
  store double %263, double* %264, align 1, !tbaa !2432
  %265 = getelementptr inbounds i8, i8* %253, i64 8
  %266 = bitcast i8* %265 to i64*
  store i64 %261, i64* %266, align 1, !tbaa !2432
  %267 = bitcast %union.vec128_t* %XMM0 to i8*
  %268 = load i64, i64* %PC
  %269 = add i64 %268, 9
  store i64 %269, i64* %PC
  %270 = bitcast i8* %267 to double*
  %271 = load double, double* %270, align 1
  store double %271, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 16) to double*)
  %272 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %273 = load i64, i64* %PC
  %274 = add i64 %273, 9
  store i64 %274, i64* %PC
  %275 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 8) to double*)
  %276 = bitcast i8* %272 to double*
  store double %275, double* %276, align 1, !tbaa !2432
  %277 = getelementptr inbounds i8, i8* %272, i64 8
  %278 = bitcast i8* %277 to double*
  store double 0.000000e+00, double* %278, align 1, !tbaa !2432
  %279 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %280 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %281 = load i64, i64* %PC
  %282 = add i64 %281, 9
  store i64 %282, i64* %PC
  %283 = bitcast i8* %280 to double*
  %284 = load double, double* %283, align 1
  %285 = getelementptr inbounds i8, i8* %280, i64 8
  %286 = bitcast i8* %285 to i64*
  %287 = load i64, i64* %286, align 1
  %288 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 16) to double*)
  %289 = fsub double %284, %288
  %290 = bitcast i8* %279 to double*
  store double %289, double* %290, align 1, !tbaa !2432
  %291 = getelementptr inbounds i8, i8* %279, i64 8
  %292 = bitcast i8* %291 to i64*
  store i64 %287, i64* %292, align 1, !tbaa !2432
  %293 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %294 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %295 = load i64, i64* %PC
  %296 = add i64 %295, 9
  store i64 %296, i64* %PC
  %297 = bitcast i8* %294 to double*
  %298 = load double, double* %297, align 1
  %299 = getelementptr inbounds i8, i8* %294, i64 8
  %300 = bitcast i8* %299 to i64*
  %301 = load i64, i64* %300, align 1
  %302 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 24) to double*)
  %303 = fadd double %298, %302
  %304 = bitcast i8* %293 to double*
  store double %303, double* %304, align 1, !tbaa !2432
  %305 = getelementptr inbounds i8, i8* %293, i64 8
  %306 = bitcast i8* %305 to i64*
  store i64 %301, i64* %306, align 1, !tbaa !2432
  %307 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %308 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %309 = load i64, i64* %PC
  %310 = add i64 %309, 9
  store i64 %310, i64* %PC
  %311 = bitcast i8* %308 to double*
  %312 = load double, double* %311, align 1
  %313 = getelementptr inbounds i8, i8* %308, i64 8
  %314 = bitcast i8* %313 to i64*
  %315 = load i64, i64* %314, align 1
  %316 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 32) to double*)
  %317 = fadd double %312, %316
  %318 = bitcast i8* %307 to double*
  store double %317, double* %318, align 1, !tbaa !2432
  %319 = getelementptr inbounds i8, i8* %307, i64 8
  %320 = bitcast i8* %319 to i64*
  store i64 %315, i64* %320, align 1, !tbaa !2432
  %321 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %322 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %323 = load i64, i64* %PC
  %324 = add i64 %323, 9
  store i64 %324, i64* %PC
  %325 = bitcast i8* %322 to double*
  %326 = load double, double* %325, align 1
  %327 = getelementptr inbounds i8, i8* %322, i64 8
  %328 = bitcast i8* %327 to i64*
  %329 = load i64, i64* %328, align 1
  %330 = load double, double* bitcast (%T_type* @T to double*)
  %331 = fmul double %326, %330
  %332 = bitcast i8* %321 to double*
  store double %331, double* %332, align 1, !tbaa !2432
  %333 = getelementptr inbounds i8, i8* %321, i64 8
  %334 = bitcast i8* %333 to i64*
  store i64 %329, i64* %334, align 1, !tbaa !2432
  %335 = bitcast %union.vec128_t* %XMM0 to i8*
  %336 = load i64, i64* %PC
  %337 = add i64 %336, 9
  store i64 %337, i64* %PC
  %338 = bitcast i8* %335 to double*
  %339 = load double, double* %338, align 1
  store double %339, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 24) to double*)
  %340 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %341 = load i64, i64* %PC
  %342 = add i64 %341, 9
  store i64 %342, i64* %PC
  %343 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 8) to double*)
  %344 = bitcast i8* %340 to double*
  store double %343, double* %344, align 1, !tbaa !2432
  %345 = getelementptr inbounds i8, i8* %340, i64 8
  %346 = bitcast i8* %345 to double*
  store double 0.000000e+00, double* %346, align 1, !tbaa !2432
  %347 = bitcast %union.vec128_t* %XMM0 to i8*
  %348 = load i64, i64* %PC
  %349 = add i64 %348, 5
  store i64 %349, i64* %PC
  %350 = bitcast i8* %347 to i64*
  %351 = load i64, i64* %350, align 1
  store i64 %351, i64* %RCX, align 1, !tbaa !2428
  %352 = load i64, i64* %RCX
  %353 = load i64, i64* %RAX
  %354 = load i64, i64* %PC
  %355 = add i64 %354, 3
  store i64 %355, i64* %PC
  %356 = xor i64 %353, %352
  store i64 %356, i64* %RCX, align 8, !tbaa !2428
  %357 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %357, align 1, !tbaa !2434
  %358 = trunc i64 %356 to i32
  %359 = and i32 %358, 255
  %360 = call i32 @llvm.ctpop.i32(i32 %359) #17
  %361 = trunc i32 %360 to i8
  %362 = and i8 %361, 1
  %363 = xor i8 %362, 1
  %364 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %363, i8* %364, align 1, !tbaa !2448
  %365 = icmp eq i64 %356, 0
  %366 = zext i1 %365 to i8
  %367 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %366, i8* %367, align 1, !tbaa !2450
  %368 = lshr i64 %356, 63
  %369 = trunc i64 %368 to i8
  %370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %369, i8* %370, align 1, !tbaa !2451
  %371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %371, align 1, !tbaa !2452
  %372 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %372, align 1, !tbaa !2449
  %373 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %374 = load i64, i64* %RCX
  %375 = load i64, i64* %PC
  %376 = add i64 %375, 5
  store i64 %376, i64* %PC
  %377 = bitcast i8* %373 to i64*
  store i64 %374, i64* %377, align 1, !tbaa !2428
  %378 = getelementptr inbounds i8, i8* %373, i64 8
  %379 = bitcast i8* %378 to i64*
  store i64 0, i64* %379, align 1, !tbaa !2428
  %380 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %381 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %382 = load i64, i64* %PC
  %383 = add i64 %382, 9
  store i64 %383, i64* %PC
  %384 = bitcast i8* %381 to double*
  %385 = load double, double* %384, align 1
  %386 = getelementptr inbounds i8, i8* %381, i64 8
  %387 = bitcast i8* %386 to i64*
  %388 = load i64, i64* %387, align 1
  %389 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 16) to double*)
  %390 = fadd double %385, %389
  %391 = bitcast i8* %380 to double*
  store double %390, double* %391, align 1, !tbaa !2432
  %392 = getelementptr inbounds i8, i8* %380, i64 8
  %393 = bitcast i8* %392 to i64*
  store i64 %388, i64* %393, align 1, !tbaa !2432
  %394 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %395 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %396 = load i64, i64* %PC
  %397 = add i64 %396, 9
  store i64 %397, i64* %PC
  %398 = bitcast i8* %395 to double*
  %399 = load double, double* %398, align 1
  %400 = getelementptr inbounds i8, i8* %395, i64 8
  %401 = bitcast i8* %400 to i64*
  %402 = load i64, i64* %401, align 1
  %403 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 24) to double*)
  %404 = fadd double %399, %403
  %405 = bitcast i8* %394 to double*
  store double %404, double* %405, align 1, !tbaa !2432
  %406 = getelementptr inbounds i8, i8* %394, i64 8
  %407 = bitcast i8* %406 to i64*
  store i64 %402, i64* %407, align 1, !tbaa !2432
  %408 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %409 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %410 = load i64, i64* %PC
  %411 = add i64 %410, 9
  store i64 %411, i64* %PC
  %412 = bitcast i8* %409 to double*
  %413 = load double, double* %412, align 1
  %414 = getelementptr inbounds i8, i8* %409, i64 8
  %415 = bitcast i8* %414 to i64*
  %416 = load i64, i64* %415, align 1
  %417 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 32) to double*)
  %418 = fadd double %413, %417
  %419 = bitcast i8* %408 to double*
  store double %418, double* %419, align 1, !tbaa !2432
  %420 = getelementptr inbounds i8, i8* %408, i64 8
  %421 = bitcast i8* %420 to i64*
  store i64 %416, i64* %421, align 1, !tbaa !2432
  %422 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %423 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %424 = load i64, i64* %PC
  %425 = add i64 %424, 9
  store i64 %425, i64* %PC
  %426 = bitcast i8* %423 to double*
  %427 = load double, double* %426, align 1
  %428 = getelementptr inbounds i8, i8* %423, i64 8
  %429 = bitcast i8* %428 to i64*
  %430 = load i64, i64* %429, align 1
  %431 = load double, double* bitcast (%T_type* @T to double*)
  %432 = fmul double %427, %431
  %433 = bitcast i8* %422 to double*
  store double %432, double* %433, align 1, !tbaa !2432
  %434 = getelementptr inbounds i8, i8* %422, i64 8
  %435 = bitcast i8* %434 to i64*
  store i64 %430, i64* %435, align 1, !tbaa !2432
  %436 = bitcast %union.vec128_t* %XMM0 to i8*
  %437 = load i64, i64* %PC
  %438 = add i64 %437, 9
  store i64 %438, i64* %PC
  %439 = bitcast i8* %436 to double*
  %440 = load double, double* %439, align 1
  store double %440, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 32) to double*)
  %441 = load i64, i64* %RBP
  %442 = sub i64 %441, 24
  %443 = load i64, i64* %PC
  %444 = add i64 %443, 4
  store i64 %444, i64* %PC
  %445 = inttoptr i64 %442 to i64*
  %446 = load i64, i64* %445
  store i64 %446, i64* %RAX, align 8, !tbaa !2428
  %447 = load i64, i64* %RAX
  %448 = load i64, i64* %PC
  %449 = add i64 %448, 4
  store i64 %449, i64* %PC
  %450 = add i64 1, %447
  store i64 %450, i64* %RAX, align 8, !tbaa !2428
  %451 = icmp ult i64 %450, %447
  %452 = icmp ult i64 %450, 1
  %453 = or i1 %451, %452
  %454 = zext i1 %453 to i8
  %455 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %454, i8* %455, align 1, !tbaa !2434
  %456 = trunc i64 %450 to i32
  %457 = and i32 %456, 255
  %458 = call i32 @llvm.ctpop.i32(i32 %457) #17
  %459 = trunc i32 %458 to i8
  %460 = and i8 %459, 1
  %461 = xor i8 %460, 1
  %462 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %461, i8* %462, align 1, !tbaa !2448
  %463 = xor i64 1, %447
  %464 = xor i64 %463, %450
  %465 = lshr i64 %464, 4
  %466 = trunc i64 %465 to i8
  %467 = and i8 %466, 1
  %468 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %467, i8* %468, align 1, !tbaa !2449
  %469 = icmp eq i64 %450, 0
  %470 = zext i1 %469 to i8
  %471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %470, i8* %471, align 1, !tbaa !2450
  %472 = lshr i64 %450, 63
  %473 = trunc i64 %472 to i8
  %474 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %473, i8* %474, align 1, !tbaa !2451
  %475 = lshr i64 %447, 63
  %476 = xor i64 %472, %475
  %477 = add nuw nsw i64 %476, %472
  %478 = icmp eq i64 %477, 2
  %479 = zext i1 %478 to i8
  %480 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %479, i8* %480, align 1, !tbaa !2452
  %481 = load i64, i64* %RBP
  %482 = sub i64 %481, 24
  %483 = load i64, i64* %RAX
  %484 = load i64, i64* %PC
  %485 = add i64 %484, 4
  store i64 %485, i64* %PC
  %486 = inttoptr i64 %482 to i64*
  store i64 %483, i64* %486
  %487 = load i64, i64* %PC
  %488 = sub i64 %487, 265
  %489 = load i64, i64* %PC
  %490 = add i64 %489, 5
  store i64 %490, i64* %PC
  %491 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %488, i64* %491, align 8, !tbaa !2428
  br label %block_400bdc

block_400d79:                                     ; preds = %block_400d67
  %492 = load i64, i64* %RBP
  %493 = sub i64 %492, 48
  %494 = load i64, i64* %PC
  %495 = add i64 %494, 4
  store i64 %495, i64* %PC
  %496 = inttoptr i64 %493 to i64*
  %497 = load i64, i64* %496
  store i64 %497, i64* %RDI, align 8, !tbaa !2428
  %498 = load i64, i64* %RBP
  %499 = sub i64 %498, 40
  %500 = load i64, i64* %PC
  %501 = add i64 %500, 4
  store i64 %501, i64* %PC
  %502 = inttoptr i64 %499 to i64*
  %503 = load i64, i64* %502
  store i64 %503, i64* %RSI, align 8, !tbaa !2428
  %504 = load i64, i64* %RBP
  %505 = sub i64 %504, 40
  %506 = load i64, i64* %PC
  %507 = add i64 %506, 4
  store i64 %507, i64* %PC
  %508 = inttoptr i64 %505 to i64*
  %509 = load i64, i64* %508
  store i64 %509, i64* %RDX, align 8, !tbaa !2428
  %510 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %511 = load i64, i64* %PC
  %512 = add i64 %511, 9
  store i64 %512, i64* %PC
  %513 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 8) to double*)
  %514 = bitcast i8* %510 to double*
  store double %513, double* %514, align 1, !tbaa !2432
  %515 = getelementptr inbounds i8, i8* %510, i64 8
  %516 = bitcast i8* %515 to double*
  store double 0.000000e+00, double* %516, align 1, !tbaa !2432
  %517 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %518 = load i64, i64* %PC
  %519 = add i64 %518, 9
  store i64 %519, i64* %PC
  %520 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 16) to double*)
  %521 = bitcast i8* %517 to double*
  store double %520, double* %521, align 1, !tbaa !2432
  %522 = getelementptr inbounds i8, i8* %517, i64 8
  %523 = bitcast i8* %522 to double*
  store double 0.000000e+00, double* %523, align 1, !tbaa !2432
  %524 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %525 = load i64, i64* %PC
  %526 = add i64 %525, 9
  store i64 %526, i64* %PC
  %527 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 24) to double*)
  %528 = bitcast i8* %524 to double*
  store double %527, double* %528, align 1, !tbaa !2432
  %529 = getelementptr inbounds i8, i8* %524, i64 8
  %530 = bitcast i8* %529 to double*
  store double 0.000000e+00, double* %530, align 1, !tbaa !2432
  %531 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %532 = load i64, i64* %PC
  %533 = add i64 %532, 9
  store i64 %533, i64* %PC
  %534 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 32) to double*)
  %535 = bitcast i8* %531 to double*
  store double %534, double* %535, align 1, !tbaa !2432
  %536 = getelementptr inbounds i8, i8* %531, i64 8
  %537 = bitcast i8* %536 to double*
  store double 0.000000e+00, double* %537, align 1, !tbaa !2432
  %538 = load i64, i64* %PC
  %539 = add i64 %538, 2119
  %540 = load i64, i64* %PC
  %541 = add i64 %540, 5
  %542 = load i64, i64* %PC
  %543 = add i64 %542, 5
  store i64 %543, i64* %PC
  %544 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %545 = load i64, i64* %544, align 8, !tbaa !2428
  %546 = add i64 %545, -8
  %547 = inttoptr i64 %546 to i64*
  store i64 %541, i64* %547
  store i64 %546, i64* %544, align 8, !tbaa !2428
  %548 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %539, i64* %548, align 8, !tbaa !2428
  %549 = load i64, i64* %PC
  %550 = call %struct.Memory* @sub_4015f0_POUT_renamed_(%struct.State* %0, i64 %549, %struct.Memory* %MEMORY.18)
  br label %block_400dae

block_400df8:                                     ; preds = %block_400ddd, %block_400ded
  %MEMORY.0 = phi %struct.Memory* [ %MEMORY.6, %block_400ded ], [ %MEMORY.6, %block_400ddd ]
  %551 = load i64, i64* %PC
  %552 = add i64 %551, 8
  store i64 %552, i64* %PC
  %553 = load i32, i32* bitcast (%J_type* @J to i32*)
  %554 = sub i32 %553, 2
  %555 = icmp ult i32 %553, 2
  %556 = zext i1 %555 to i8
  %557 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %556, i8* %557, align 1, !tbaa !2434
  %558 = and i32 %554, 255
  %559 = call i32 @llvm.ctpop.i32(i32 %558) #17
  %560 = trunc i32 %559 to i8
  %561 = and i8 %560, 1
  %562 = xor i8 %561, 1
  %563 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %562, i8* %563, align 1, !tbaa !2448
  %564 = xor i32 %553, 2
  %565 = xor i32 %564, %554
  %566 = lshr i32 %565, 4
  %567 = trunc i32 %566 to i8
  %568 = and i8 %567, 1
  %569 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %568, i8* %569, align 1, !tbaa !2449
  %570 = icmp eq i32 %554, 0
  %571 = zext i1 %570 to i8
  %572 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %571, i8* %572, align 1, !tbaa !2450
  %573 = lshr i32 %554, 31
  %574 = trunc i32 %573 to i8
  %575 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %574, i8* %575, align 1, !tbaa !2451
  %576 = lshr i32 %553, 31
  %577 = xor i32 %573, %576
  %578 = add nuw nsw i32 %577, %576
  %579 = icmp eq i32 %578, 2
  %580 = zext i1 %579 to i8
  %581 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %580, i8* %581, align 1, !tbaa !2452
  %582 = load i64, i64* %PC
  %583 = add i64 %582, 22
  %584 = load i64, i64* %PC
  %585 = add i64 %584, 6
  %586 = load i64, i64* %PC
  %587 = add i64 %586, 6
  store i64 %587, i64* %PC
  %588 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %589 = load i8, i8* %588, align 1, !tbaa !2450
  %590 = icmp ne i8 %589, 0
  %591 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %592 = load i8, i8* %591, align 1, !tbaa !2451
  %593 = icmp ne i8 %592, 0
  %594 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %595 = load i8, i8* %594, align 1, !tbaa !2452
  %596 = icmp ne i8 %595, 0
  %597 = xor i1 %593, %596
  %598 = or i1 %590, %597
  %599 = zext i1 %598 to i8
  store i8 %599, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %601 = select i1 %598, i64 %583, i64 %585
  store i64 %601, i64* %600, align 8, !tbaa !2428
  %602 = load i8, i8* %BRANCH_TAKEN
  %603 = icmp eq i8 %602, 1
  %604 = load i64, i64* %PC
  %605 = add i64 %604, 11
  store i64 %605, i64* %PC
  br i1 %603, label %block_400e16, label %block_400e06

block_40096d:                                     ; preds = %block_40091d, %block_4008f0
  %MEMORY.1 = phi %struct.Memory* [ %MEMORY.11, %block_4008f0 ], [ %4879, %block_40091d ]
  %606 = load i64, i64* %RBP
  %607 = sub i64 %606, 172
  %608 = load i64, i64* %PC
  %609 = add i64 %608, 6
  store i64 %609, i64* %PC
  %610 = inttoptr i64 %607 to i32*
  %611 = load i32, i32* %610
  %612 = zext i32 %611 to i64
  store i64 %612, i64* %RAX, align 8, !tbaa !2428
  %613 = load i64, i64* %RAX
  %614 = load i64, i64* %PC
  %615 = add i64 %614, 3
  store i64 %615, i64* %PC
  %616 = trunc i64 %613 to i32
  %617 = add i32 1, %616
  %618 = zext i32 %617 to i64
  store i64 %618, i64* %RAX, align 8, !tbaa !2428
  %619 = icmp ult i32 %617, %616
  %620 = icmp ult i32 %617, 1
  %621 = or i1 %619, %620
  %622 = zext i1 %621 to i8
  %623 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %622, i8* %623, align 1, !tbaa !2434
  %624 = and i32 %617, 255
  %625 = call i32 @llvm.ctpop.i32(i32 %624) #17
  %626 = trunc i32 %625 to i8
  %627 = and i8 %626, 1
  %628 = xor i8 %627, 1
  %629 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %628, i8* %629, align 1, !tbaa !2448
  %630 = xor i64 1, %613
  %631 = trunc i64 %630 to i32
  %632 = xor i32 %631, %617
  %633 = lshr i32 %632, 4
  %634 = trunc i32 %633 to i8
  %635 = and i8 %634, 1
  %636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %635, i8* %636, align 1, !tbaa !2449
  %637 = icmp eq i32 %617, 0
  %638 = zext i1 %637 to i8
  %639 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %638, i8* %639, align 1, !tbaa !2450
  %640 = lshr i32 %617, 31
  %641 = trunc i32 %640 to i8
  %642 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %641, i8* %642, align 1, !tbaa !2451
  %643 = lshr i32 %616, 31
  %644 = xor i32 %640, %643
  %645 = add nuw nsw i32 %644, %640
  %646 = icmp eq i32 %645, 2
  %647 = zext i1 %646 to i8
  %648 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %647, i8* %648, align 1, !tbaa !2452
  %649 = load i64, i64* %RBP
  %650 = sub i64 %649, 172
  %651 = load i32, i32* %EAX
  %652 = zext i32 %651 to i64
  %653 = load i64, i64* %PC
  %654 = add i64 %653, 6
  store i64 %654, i64* %PC
  %655 = inttoptr i64 %650 to i32*
  store i32 %651, i32* %655
  %656 = load i64, i64* %PC
  %657 = sub i64 %656, 228
  %658 = load i64, i64* %PC
  %659 = add i64 %658, 5
  store i64 %659, i64* %PC
  %660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %657, i64* %660, align 8, !tbaa !2428
  br label %block_400898

block_4015e0:                                     ; preds = %block_4015d9, %block_40093d
  %MEMORY.2 = phi %struct.Memory* [ %2581, %block_4015d9 ], [ %3315, %block_40093d ]
  %661 = load i64, i64* %RBP
  %662 = sub i64 %661, 4
  %663 = load i64, i64* %PC
  %664 = add i64 %663, 3
  store i64 %664, i64* %PC
  %665 = inttoptr i64 %662 to i32*
  %666 = load i32, i32* %665
  %667 = zext i32 %666 to i64
  store i64 %667, i64* %RAX, align 8, !tbaa !2428
  %668 = load i64, i64* %RSP
  %669 = load i64, i64* %PC
  %670 = add i64 %669, 7
  store i64 %670, i64* %PC
  %671 = add i64 320, %668
  store i64 %671, i64* %RSP, align 8, !tbaa !2428
  %672 = icmp ult i64 %671, %668
  %673 = icmp ult i64 %671, 320
  %674 = or i1 %672, %673
  %675 = zext i1 %674 to i8
  %676 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %675, i8* %676, align 1, !tbaa !2434
  %677 = trunc i64 %671 to i32
  %678 = and i32 %677, 255
  %679 = call i32 @llvm.ctpop.i32(i32 %678) #17
  %680 = trunc i32 %679 to i8
  %681 = and i8 %680, 1
  %682 = xor i8 %681, 1
  %683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %682, i8* %683, align 1, !tbaa !2448
  %684 = xor i64 320, %668
  %685 = xor i64 %684, %671
  %686 = lshr i64 %685, 4
  %687 = trunc i64 %686 to i8
  %688 = and i8 %687, 1
  %689 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %688, i8* %689, align 1, !tbaa !2449
  %690 = icmp eq i64 %671, 0
  %691 = zext i1 %690 to i8
  %692 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %691, i8* %692, align 1, !tbaa !2450
  %693 = lshr i64 %671, 63
  %694 = trunc i64 %693 to i8
  %695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %694, i8* %695, align 1, !tbaa !2451
  %696 = lshr i64 %668, 63
  %697 = xor i64 %693, %696
  %698 = add nuw nsw i64 %697, %693
  %699 = icmp eq i64 %698, 2
  %700 = zext i1 %699 to i8
  %701 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %700, i8* %701, align 1, !tbaa !2452
  %702 = load i64, i64* %PC
  %703 = add i64 %702, 1
  store i64 %703, i64* %PC
  %704 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %705 = load i64, i64* %704, align 8, !tbaa !2428
  %706 = add i64 %705, 8
  %707 = inttoptr i64 %705 to i64*
  %708 = load i64, i64* %707
  store i64 %708, i64* %RBP, align 8, !tbaa !2428
  store i64 %706, i64* %704, align 8, !tbaa !2428
  %709 = load i64, i64* %PC
  %710 = add i64 %709, 1
  store i64 %710, i64* %PC
  %711 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %712 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %713 = load i64, i64* %712, align 8, !tbaa !2428
  %714 = inttoptr i64 %713 to i64*
  %715 = load i64, i64* %714
  store i64 %715, i64* %711, align 8, !tbaa !2428
  %716 = add i64 %713, 8
  store i64 %716, i64* %712, align 8, !tbaa !2428
  ret %struct.Memory* %MEMORY.2

block_400e72:                                     ; preds = %block_400e60
  %717 = load i64, i64* %RBP
  %718 = sub i64 %717, 56
  %719 = load i64, i64* %PC
  %720 = add i64 %719, 4
  store i64 %720, i64* %PC
  %721 = inttoptr i64 %718 to i64*
  %722 = load i64, i64* %721
  store i64 %722, i64* %RDI, align 8, !tbaa !2428
  %723 = load i64, i64* %PC
  %724 = add i64 %723, 8
  store i64 %724, i64* %PC
  %725 = load i32, i32* bitcast (%J_type* @J to i32*)
  %726 = sext i32 %725 to i64
  store i64 %726, i64* %RSI, align 8, !tbaa !2428
  %727 = load i64, i64* %PC
  %728 = add i64 %727, 8
  store i64 %728, i64* %PC
  %729 = load i32, i32* bitcast (%J_type* @J to i32*)
  %730 = sext i32 %729 to i64
  store i64 %730, i64* %RDX, align 8, !tbaa !2428
  %731 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %732 = load i64, i64* %RBP
  %733 = sub i64 %732, 112
  %734 = load i64, i64* %PC
  %735 = add i64 %734, 5
  store i64 %735, i64* %PC
  %736 = inttoptr i64 %733 to double*
  %737 = load double, double* %736
  %738 = bitcast i8* %731 to double*
  store double %737, double* %738, align 1, !tbaa !2432
  %739 = getelementptr inbounds i8, i8* %731, i64 8
  %740 = bitcast i8* %739 to double*
  store double 0.000000e+00, double* %740, align 1, !tbaa !2432
  %741 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %742 = load i64, i64* %RBP
  %743 = sub i64 %742, 120
  %744 = load i64, i64* %PC
  %745 = add i64 %744, 5
  store i64 %745, i64* %PC
  %746 = inttoptr i64 %743 to double*
  %747 = load double, double* %746
  %748 = bitcast i8* %741 to double*
  store double %747, double* %748, align 1, !tbaa !2432
  %749 = getelementptr inbounds i8, i8* %741, i64 8
  %750 = bitcast i8* %749 to double*
  store double 0.000000e+00, double* %750, align 1, !tbaa !2432
  %751 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %752 = load i64, i64* %RBP
  %753 = sub i64 %752, 128
  %754 = load i64, i64* %PC
  %755 = add i64 %754, 5
  store i64 %755, i64* %PC
  %756 = inttoptr i64 %753 to double*
  %757 = load double, double* %756
  %758 = bitcast i8* %751 to double*
  store double %757, double* %758, align 1, !tbaa !2432
  %759 = getelementptr inbounds i8, i8* %751, i64 8
  %760 = bitcast i8* %759 to double*
  store double 0.000000e+00, double* %760, align 1, !tbaa !2432
  %761 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %762 = load i64, i64* %RBP
  %763 = sub i64 %762, 136
  %764 = load i64, i64* %PC
  %765 = add i64 %764, 8
  store i64 %765, i64* %PC
  %766 = inttoptr i64 %763 to double*
  %767 = load double, double* %766
  %768 = bitcast i8* %761 to double*
  store double %767, double* %768, align 1, !tbaa !2432
  %769 = getelementptr inbounds i8, i8* %761, i64 8
  %770 = bitcast i8* %769 to double*
  store double 0.000000e+00, double* %770, align 1, !tbaa !2432
  %771 = load i64, i64* %PC
  %772 = add i64 %771, 1875
  %773 = load i64, i64* %PC
  %774 = add i64 %773, 5
  %775 = load i64, i64* %PC
  %776 = add i64 %775, 5
  store i64 %776, i64* %PC
  %777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %778 = load i64, i64* %777, align 8, !tbaa !2428
  %779 = add i64 %778, -8
  %780 = inttoptr i64 %779 to i64*
  store i64 %774, i64* %780
  store i64 %779, i64* %777, align 8, !tbaa !2428
  %781 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %772, i64* %781, align 8, !tbaa !2428
  %782 = load i64, i64* %PC
  %783 = call %struct.Memory* @sub_4015f0_POUT_renamed_(%struct.State* %0, i64 %782, %struct.Memory* %MEMORY.6)
  br label %block_400ea2

block_4014ee:                                     ; preds = %block_4014d6, %block_4014fc
  %MEMORY.3 = phi %struct.Memory* [ %MEMORY.13, %block_4014d6 ], [ %2052, %block_4014fc ]
  %784 = load i64, i64* %RBP
  %785 = sub i64 %784, 24
  %786 = load i64, i64* %PC
  %787 = add i64 %786, 4
  store i64 %787, i64* %PC
  %788 = inttoptr i64 %785 to i64*
  %789 = load i64, i64* %788
  store i64 %789, i64* %RAX, align 8, !tbaa !2428
  %790 = load i64, i64* %RAX
  %791 = load i64, i64* %RBP
  %792 = sub i64 %791, 104
  %793 = load i64, i64* %PC
  %794 = add i64 %793, 4
  store i64 %794, i64* %PC
  %795 = inttoptr i64 %792 to i64*
  %796 = load i64, i64* %795
  %797 = sub i64 %790, %796
  %798 = icmp ugt i64 %796, %790
  %799 = zext i1 %798 to i8
  %800 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %799, i8* %800, align 1, !tbaa !2434
  %801 = trunc i64 %797 to i32
  %802 = and i32 %801, 255
  %803 = call i32 @llvm.ctpop.i32(i32 %802) #17
  %804 = trunc i32 %803 to i8
  %805 = and i8 %804, 1
  %806 = xor i8 %805, 1
  %807 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %806, i8* %807, align 1, !tbaa !2448
  %808 = xor i64 %796, %790
  %809 = xor i64 %808, %797
  %810 = lshr i64 %809, 4
  %811 = trunc i64 %810 to i8
  %812 = and i8 %811, 1
  %813 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %812, i8* %813, align 1, !tbaa !2449
  %814 = icmp eq i64 %797, 0
  %815 = zext i1 %814 to i8
  %816 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %815, i8* %816, align 1, !tbaa !2450
  %817 = lshr i64 %797, 63
  %818 = trunc i64 %817 to i8
  %819 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %818, i8* %819, align 1, !tbaa !2451
  %820 = lshr i64 %790, 63
  %821 = lshr i64 %796, 63
  %822 = xor i64 %821, %820
  %823 = xor i64 %817, %820
  %824 = add nuw nsw i64 %823, %822
  %825 = icmp eq i64 %824, 2
  %826 = zext i1 %825 to i8
  %827 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %826, i8* %827, align 1, !tbaa !2452
  %828 = load i64, i64* %PC
  %829 = add i64 %828, 63
  %830 = load i64, i64* %PC
  %831 = add i64 %830, 6
  %832 = load i64, i64* %PC
  %833 = add i64 %832, 6
  store i64 %833, i64* %PC
  %834 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %835 = load i8, i8* %834, align 1, !tbaa !2450
  %836 = icmp eq i8 %835, 0
  %837 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %838 = load i8, i8* %837, align 1, !tbaa !2451
  %839 = icmp ne i8 %838, 0
  %840 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %841 = load i8, i8* %840, align 1, !tbaa !2452
  %842 = icmp ne i8 %841, 0
  %843 = xor i1 %839, %842
  %844 = xor i1 %843, true
  %845 = and i1 %836, %844
  %846 = zext i1 %845 to i8
  store i8 %846, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %847 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %848 = select i1 %845, i64 %829, i64 %831
  store i64 %848, i64* %847, align 8, !tbaa !2428
  %849 = load i8, i8* %BRANCH_TAKEN
  %850 = icmp eq i8 %849, 1
  br i1 %850, label %block_401535, label %block_4014fc

block_400ded:                                     ; preds = %block_400dcf
  store i32 3, i32* bitcast (%J_type* @J to i32*)
  br label %block_400df8

block_400ed9:                                     ; preds = %block_400ecb
  %851 = load i64, i64* %PC
  %852 = add i64 %851, 7
  store i64 %852, i64* %PC
  %853 = load i32, i32* bitcast (%J_type* @J to i32*)
  %854 = zext i32 %853 to i64
  store i64 %854, i64* %RAX, align 8, !tbaa !2428
  %855 = load i64, i64* %PC
  %856 = add i64 %855, 7
  store i64 %856, i64* %PC
  %857 = load i32, i32* bitcast (%K_type* @K to i32*)
  %858 = zext i32 %857 to i64
  store i64 %858, i64* %RCX, align 8, !tbaa !2428
  %859 = load i64, i64* %RCX
  %860 = load i64, i64* %PC
  %861 = add i64 %860, 7
  store i64 %861, i64* %PC
  %862 = trunc i64 %859 to i32
  %863 = load i32, i32* bitcast (%J_type* @J to i32*)
  %864 = sub i32 %862, %863
  %865 = zext i32 %864 to i64
  store i64 %865, i64* %RCX, align 8, !tbaa !2428
  %866 = icmp ult i32 %862, %863
  %867 = zext i1 %866 to i8
  %868 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %867, i8* %868, align 1, !tbaa !2434
  %869 = and i32 %864, 255
  %870 = call i32 @llvm.ctpop.i32(i32 %869) #17
  %871 = trunc i32 %870 to i8
  %872 = and i8 %871, 1
  %873 = xor i8 %872, 1
  %874 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %873, i8* %874, align 1, !tbaa !2448
  %875 = xor i32 %863, %862
  %876 = xor i32 %875, %864
  %877 = lshr i32 %876, 4
  %878 = trunc i32 %877 to i8
  %879 = and i8 %878, 1
  %880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %879, i8* %880, align 1, !tbaa !2449
  %881 = icmp eq i32 %864, 0
  %882 = zext i1 %881 to i8
  %883 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %882, i8* %883, align 1, !tbaa !2450
  %884 = lshr i32 %864, 31
  %885 = trunc i32 %884 to i8
  %886 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %885, i8* %886, align 1, !tbaa !2451
  %887 = lshr i32 %862, 31
  %888 = lshr i32 %863, 31
  %889 = xor i32 %888, %887
  %890 = xor i32 %884, %887
  %891 = add nuw nsw i32 %890, %889
  %892 = icmp eq i32 %891, 2
  %893 = zext i1 %892 to i8
  %894 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %893, i8* %894, align 1, !tbaa !2452
  %895 = load i64, i64* %RAX
  %896 = load i32, i32* %ECX
  %897 = zext i32 %896 to i64
  %898 = load i64, i64* %PC
  %899 = add i64 %898, 3
  store i64 %899, i64* %PC
  %900 = shl i64 %895, 32
  %901 = ashr exact i64 %900, 32
  %902 = shl i64 %897, 32
  %903 = ashr exact i64 %902, 32
  %904 = mul nsw i64 %903, %901
  %905 = trunc i64 %904 to i32
  %906 = and i64 %904, 4294967295
  store i64 %906, i64* %RAX, align 8, !tbaa !2428
  %907 = shl i64 %904, 32
  %908 = ashr exact i64 %907, 32
  %909 = icmp ne i64 %908, %904
  %910 = zext i1 %909 to i8
  %911 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %910, i8* %911, align 1, !tbaa !2434
  %912 = and i32 %905, 255
  %913 = call i32 @llvm.ctpop.i32(i32 %912) #17
  %914 = trunc i32 %913 to i8
  %915 = and i8 %914, 1
  %916 = xor i8 %915, 1
  %917 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %916, i8* %917, align 1, !tbaa !2448
  %918 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %918, align 1, !tbaa !2449
  %919 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %919, align 1, !tbaa !2450
  %920 = lshr i32 %905, 31
  %921 = trunc i32 %920 to i8
  %922 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %921, i8* %922, align 1, !tbaa !2451
  %923 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %910, i8* %923, align 1, !tbaa !2452
  %924 = load i64, i64* %PC
  %925 = add i64 %924, 7
  store i64 %925, i64* %PC
  %926 = load i32, i32* bitcast (%L_type* @L to i32*)
  %927 = zext i32 %926 to i64
  store i64 %927, i64* %RCX, align 8, !tbaa !2428
  %928 = load i64, i64* %RCX
  %929 = load i64, i64* %PC
  %930 = add i64 %929, 7
  store i64 %930, i64* %PC
  %931 = trunc i64 %928 to i32
  %932 = load i32, i32* bitcast (%K_type* @K to i32*)
  %933 = sub i32 %931, %932
  %934 = zext i32 %933 to i64
  store i64 %934, i64* %RCX, align 8, !tbaa !2428
  %935 = icmp ult i32 %931, %932
  %936 = zext i1 %935 to i8
  %937 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %936, i8* %937, align 1, !tbaa !2434
  %938 = and i32 %933, 255
  %939 = call i32 @llvm.ctpop.i32(i32 %938) #17
  %940 = trunc i32 %939 to i8
  %941 = and i8 %940, 1
  %942 = xor i8 %941, 1
  %943 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %942, i8* %943, align 1, !tbaa !2448
  %944 = xor i32 %932, %931
  %945 = xor i32 %944, %933
  %946 = lshr i32 %945, 4
  %947 = trunc i32 %946 to i8
  %948 = and i8 %947, 1
  %949 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %948, i8* %949, align 1, !tbaa !2449
  %950 = icmp eq i32 %933, 0
  %951 = zext i1 %950 to i8
  %952 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %951, i8* %952, align 1, !tbaa !2450
  %953 = lshr i32 %933, 31
  %954 = trunc i32 %953 to i8
  %955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %954, i8* %955, align 1, !tbaa !2451
  %956 = lshr i32 %931, 31
  %957 = lshr i32 %932, 31
  %958 = xor i32 %957, %956
  %959 = xor i32 %953, %956
  %960 = add nuw nsw i32 %959, %958
  %961 = icmp eq i32 %960, 2
  %962 = zext i1 %961 to i8
  %963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %962, i8* %963, align 1, !tbaa !2452
  %964 = load i64, i64* %RAX
  %965 = load i32, i32* %ECX
  %966 = zext i32 %965 to i64
  %967 = load i64, i64* %PC
  %968 = add i64 %967, 3
  store i64 %968, i64* %PC
  %969 = shl i64 %964, 32
  %970 = ashr exact i64 %969, 32
  %971 = shl i64 %966, 32
  %972 = ashr exact i64 %971, 32
  %973 = mul nsw i64 %972, %970
  %974 = trunc i64 %973 to i32
  %975 = and i64 %973, 4294967295
  store i64 %975, i64* %RAX, align 8, !tbaa !2428
  %976 = shl i64 %973, 32
  %977 = ashr exact i64 %976, 32
  %978 = icmp ne i64 %977, %973
  %979 = zext i1 %978 to i8
  %980 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %979, i8* %980, align 1, !tbaa !2434
  %981 = and i32 %974, 255
  %982 = call i32 @llvm.ctpop.i32(i32 %981) #17
  %983 = trunc i32 %982 to i8
  %984 = and i8 %983, 1
  %985 = xor i8 %984, 1
  %986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %985, i8* %986, align 1, !tbaa !2448
  %987 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %987, align 1, !tbaa !2449
  %988 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %988, align 1, !tbaa !2450
  %989 = lshr i32 %974, 31
  %990 = trunc i32 %989 to i8
  %991 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %990, i8* %991, align 1, !tbaa !2451
  %992 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %979, i8* %992, align 1, !tbaa !2452
  %993 = load i32, i32* %EAX
  %994 = zext i32 %993 to i64
  %995 = load i64, i64* %PC
  %996 = add i64 %995, 7
  store i64 %996, i64* %PC
  store i32 %993, i32* bitcast (%J_type* @J to i32*)
  %997 = load i64, i64* %PC
  %998 = add i64 %997, 7
  store i64 %998, i64* %PC
  %999 = load i32, i32* bitcast (%L_type* @L to i32*)
  %1000 = zext i32 %999 to i64
  store i64 %1000, i64* %RAX, align 8, !tbaa !2428
  %1001 = load i64, i64* %RAX
  %1002 = load i64, i64* %PC
  %1003 = add i64 %1002, 8
  store i64 %1003, i64* %PC
  %1004 = load i32, i32* bitcast (%K_type* @K to i32*)
  %1005 = shl i64 %1001, 32
  %1006 = ashr exact i64 %1005, 32
  %1007 = sext i32 %1004 to i64
  %1008 = mul nsw i64 %1007, %1006
  %1009 = trunc i64 %1008 to i32
  %1010 = and i64 %1008, 4294967295
  store i64 %1010, i64* %RAX, align 8, !tbaa !2428
  %1011 = shl i64 %1008, 32
  %1012 = ashr exact i64 %1011, 32
  %1013 = icmp ne i64 %1012, %1008
  %1014 = zext i1 %1013 to i8
  %1015 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1014, i8* %1015, align 1, !tbaa !2434
  %1016 = and i32 %1009, 255
  %1017 = call i32 @llvm.ctpop.i32(i32 %1016) #17
  %1018 = trunc i32 %1017 to i8
  %1019 = and i8 %1018, 1
  %1020 = xor i8 %1019, 1
  %1021 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1020, i8* %1021, align 1, !tbaa !2448
  %1022 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1022, align 1, !tbaa !2449
  %1023 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1023, align 1, !tbaa !2450
  %1024 = lshr i32 %1009, 31
  %1025 = trunc i32 %1024 to i8
  %1026 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1025, i8* %1026, align 1, !tbaa !2451
  %1027 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1014, i8* %1027, align 1, !tbaa !2452
  %1028 = load i64, i64* %PC
  %1029 = add i64 %1028, 7
  store i64 %1029, i64* %PC
  %1030 = load i32, i32* bitcast (%L_type* @L to i32*)
  %1031 = zext i32 %1030 to i64
  store i64 %1031, i64* %RCX, align 8, !tbaa !2428
  %1032 = load i64, i64* %RCX
  %1033 = load i64, i64* %PC
  %1034 = add i64 %1033, 7
  store i64 %1034, i64* %PC
  %1035 = trunc i64 %1032 to i32
  %1036 = load i32, i32* bitcast (%J_type* @J to i32*)
  %1037 = sub i32 %1035, %1036
  %1038 = zext i32 %1037 to i64
  store i64 %1038, i64* %RCX, align 8, !tbaa !2428
  %1039 = icmp ult i32 %1035, %1036
  %1040 = zext i1 %1039 to i8
  %1041 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1040, i8* %1041, align 1, !tbaa !2434
  %1042 = and i32 %1037, 255
  %1043 = call i32 @llvm.ctpop.i32(i32 %1042) #17
  %1044 = trunc i32 %1043 to i8
  %1045 = and i8 %1044, 1
  %1046 = xor i8 %1045, 1
  %1047 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1046, i8* %1047, align 1, !tbaa !2448
  %1048 = xor i32 %1036, %1035
  %1049 = xor i32 %1048, %1037
  %1050 = lshr i32 %1049, 4
  %1051 = trunc i32 %1050 to i8
  %1052 = and i8 %1051, 1
  %1053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1052, i8* %1053, align 1, !tbaa !2449
  %1054 = icmp eq i32 %1037, 0
  %1055 = zext i1 %1054 to i8
  %1056 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1055, i8* %1056, align 1, !tbaa !2450
  %1057 = lshr i32 %1037, 31
  %1058 = trunc i32 %1057 to i8
  %1059 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1058, i8* %1059, align 1, !tbaa !2451
  %1060 = lshr i32 %1035, 31
  %1061 = lshr i32 %1036, 31
  %1062 = xor i32 %1061, %1060
  %1063 = xor i32 %1057, %1060
  %1064 = add nuw nsw i32 %1063, %1062
  %1065 = icmp eq i32 %1064, 2
  %1066 = zext i1 %1065 to i8
  %1067 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1066, i8* %1067, align 1, !tbaa !2452
  %1068 = load i64, i64* %RCX
  %1069 = load i64, i64* %PC
  %1070 = add i64 %1069, 8
  store i64 %1070, i64* %PC
  %1071 = load i32, i32* bitcast (%K_type* @K to i32*)
  %1072 = shl i64 %1068, 32
  %1073 = ashr exact i64 %1072, 32
  %1074 = sext i32 %1071 to i64
  %1075 = mul nsw i64 %1074, %1073
  %1076 = trunc i64 %1075 to i32
  %1077 = and i64 %1075, 4294967295
  store i64 %1077, i64* %RCX, align 8, !tbaa !2428
  %1078 = shl i64 %1075, 32
  %1079 = ashr exact i64 %1078, 32
  %1080 = icmp ne i64 %1079, %1075
  %1081 = zext i1 %1080 to i8
  %1082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1081, i8* %1082, align 1, !tbaa !2434
  %1083 = and i32 %1076, 255
  %1084 = call i32 @llvm.ctpop.i32(i32 %1083) #17
  %1085 = trunc i32 %1084 to i8
  %1086 = and i8 %1085, 1
  %1087 = xor i8 %1086, 1
  %1088 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1087, i8* %1088, align 1, !tbaa !2448
  %1089 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1089, align 1, !tbaa !2449
  %1090 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1090, align 1, !tbaa !2450
  %1091 = lshr i32 %1076, 31
  %1092 = trunc i32 %1091 to i8
  %1093 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1092, i8* %1093, align 1, !tbaa !2451
  %1094 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1081, i8* %1094, align 1, !tbaa !2452
  %1095 = load i64, i64* %RAX
  %1096 = load i32, i32* %ECX
  %1097 = zext i32 %1096 to i64
  %1098 = load i64, i64* %PC
  %1099 = add i64 %1098, 2
  store i64 %1099, i64* %PC
  %1100 = trunc i64 %1095 to i32
  %1101 = sub i32 %1100, %1096
  %1102 = zext i32 %1101 to i64
  store i64 %1102, i64* %RAX, align 8, !tbaa !2428
  %1103 = icmp ult i32 %1100, %1096
  %1104 = zext i1 %1103 to i8
  %1105 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1104, i8* %1105, align 1, !tbaa !2434
  %1106 = and i32 %1101, 255
  %1107 = call i32 @llvm.ctpop.i32(i32 %1106) #17
  %1108 = trunc i32 %1107 to i8
  %1109 = and i8 %1108, 1
  %1110 = xor i8 %1109, 1
  %1111 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1110, i8* %1111, align 1, !tbaa !2448
  %1112 = xor i64 %1097, %1095
  %1113 = trunc i64 %1112 to i32
  %1114 = xor i32 %1113, %1101
  %1115 = lshr i32 %1114, 4
  %1116 = trunc i32 %1115 to i8
  %1117 = and i8 %1116, 1
  %1118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1117, i8* %1118, align 1, !tbaa !2449
  %1119 = icmp eq i32 %1101, 0
  %1120 = zext i1 %1119 to i8
  %1121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1120, i8* %1121, align 1, !tbaa !2450
  %1122 = lshr i32 %1101, 31
  %1123 = trunc i32 %1122 to i8
  %1124 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1123, i8* %1124, align 1, !tbaa !2451
  %1125 = lshr i32 %1100, 31
  %1126 = lshr i32 %1096, 31
  %1127 = xor i32 %1126, %1125
  %1128 = xor i32 %1122, %1125
  %1129 = add nuw nsw i32 %1128, %1127
  %1130 = icmp eq i32 %1129, 2
  %1131 = zext i1 %1130 to i8
  %1132 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1131, i8* %1132, align 1, !tbaa !2452
  %1133 = load i32, i32* %EAX
  %1134 = zext i32 %1133 to i64
  %1135 = load i64, i64* %PC
  %1136 = add i64 %1135, 7
  store i64 %1136, i64* %PC
  store i32 %1133, i32* bitcast (%K_type* @K to i32*)
  %1137 = load i64, i64* %PC
  %1138 = add i64 %1137, 7
  store i64 %1138, i64* %PC
  %1139 = load i32, i32* bitcast (%L_type* @L to i32*)
  %1140 = zext i32 %1139 to i64
  store i64 %1140, i64* %RAX, align 8, !tbaa !2428
  %1141 = load i64, i64* %RAX
  %1142 = load i64, i64* %PC
  %1143 = add i64 %1142, 7
  store i64 %1143, i64* %PC
  %1144 = trunc i64 %1141 to i32
  %1145 = load i32, i32* bitcast (%K_type* @K to i32*)
  %1146 = sub i32 %1144, %1145
  %1147 = zext i32 %1146 to i64
  store i64 %1147, i64* %RAX, align 8, !tbaa !2428
  %1148 = icmp ult i32 %1144, %1145
  %1149 = zext i1 %1148 to i8
  %1150 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1149, i8* %1150, align 1, !tbaa !2434
  %1151 = and i32 %1146, 255
  %1152 = call i32 @llvm.ctpop.i32(i32 %1151) #17
  %1153 = trunc i32 %1152 to i8
  %1154 = and i8 %1153, 1
  %1155 = xor i8 %1154, 1
  %1156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1155, i8* %1156, align 1, !tbaa !2448
  %1157 = xor i32 %1145, %1144
  %1158 = xor i32 %1157, %1146
  %1159 = lshr i32 %1158, 4
  %1160 = trunc i32 %1159 to i8
  %1161 = and i8 %1160, 1
  %1162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1161, i8* %1162, align 1, !tbaa !2449
  %1163 = icmp eq i32 %1146, 0
  %1164 = zext i1 %1163 to i8
  %1165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1164, i8* %1165, align 1, !tbaa !2450
  %1166 = lshr i32 %1146, 31
  %1167 = trunc i32 %1166 to i8
  %1168 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1167, i8* %1168, align 1, !tbaa !2451
  %1169 = lshr i32 %1144, 31
  %1170 = lshr i32 %1145, 31
  %1171 = xor i32 %1170, %1169
  %1172 = xor i32 %1166, %1169
  %1173 = add nuw nsw i32 %1172, %1171
  %1174 = icmp eq i32 %1173, 2
  %1175 = zext i1 %1174 to i8
  %1176 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1175, i8* %1176, align 1, !tbaa !2452
  %1177 = load i64, i64* %PC
  %1178 = add i64 %1177, 7
  store i64 %1178, i64* %PC
  %1179 = load i32, i32* bitcast (%K_type* @K to i32*)
  %1180 = zext i32 %1179 to i64
  store i64 %1180, i64* %RCX, align 8, !tbaa !2428
  %1181 = load i64, i64* %RCX
  %1182 = load i64, i64* %PC
  %1183 = add i64 %1182, 7
  store i64 %1183, i64* %PC
  %1184 = trunc i64 %1181 to i32
  %1185 = load i32, i32* bitcast (%J_type* @J to i32*)
  %1186 = add i32 %1185, %1184
  %1187 = zext i32 %1186 to i64
  store i64 %1187, i64* %RCX, align 8, !tbaa !2428
  %1188 = icmp ult i32 %1186, %1184
  %1189 = icmp ult i32 %1186, %1185
  %1190 = or i1 %1188, %1189
  %1191 = zext i1 %1190 to i8
  %1192 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1191, i8* %1192, align 1, !tbaa !2434
  %1193 = and i32 %1186, 255
  %1194 = call i32 @llvm.ctpop.i32(i32 %1193) #17
  %1195 = trunc i32 %1194 to i8
  %1196 = and i8 %1195, 1
  %1197 = xor i8 %1196, 1
  %1198 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1197, i8* %1198, align 1, !tbaa !2448
  %1199 = xor i32 %1185, %1184
  %1200 = xor i32 %1199, %1186
  %1201 = lshr i32 %1200, 4
  %1202 = trunc i32 %1201 to i8
  %1203 = and i8 %1202, 1
  %1204 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1203, i8* %1204, align 1, !tbaa !2449
  %1205 = icmp eq i32 %1186, 0
  %1206 = zext i1 %1205 to i8
  %1207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1206, i8* %1207, align 1, !tbaa !2450
  %1208 = lshr i32 %1186, 31
  %1209 = trunc i32 %1208 to i8
  %1210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1209, i8* %1210, align 1, !tbaa !2451
  %1211 = lshr i32 %1184, 31
  %1212 = lshr i32 %1185, 31
  %1213 = xor i32 %1208, %1211
  %1214 = xor i32 %1208, %1212
  %1215 = add nuw nsw i32 %1213, %1214
  %1216 = icmp eq i32 %1215, 2
  %1217 = zext i1 %1216 to i8
  %1218 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1217, i8* %1218, align 1, !tbaa !2452
  %1219 = load i64, i64* %RAX
  %1220 = load i32, i32* %ECX
  %1221 = zext i32 %1220 to i64
  %1222 = load i64, i64* %PC
  %1223 = add i64 %1222, 3
  store i64 %1223, i64* %PC
  %1224 = shl i64 %1219, 32
  %1225 = ashr exact i64 %1224, 32
  %1226 = shl i64 %1221, 32
  %1227 = ashr exact i64 %1226, 32
  %1228 = mul nsw i64 %1227, %1225
  %1229 = trunc i64 %1228 to i32
  %1230 = and i64 %1228, 4294967295
  store i64 %1230, i64* %RAX, align 8, !tbaa !2428
  %1231 = shl i64 %1228, 32
  %1232 = ashr exact i64 %1231, 32
  %1233 = icmp ne i64 %1232, %1228
  %1234 = zext i1 %1233 to i8
  %1235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1234, i8* %1235, align 1, !tbaa !2434
  %1236 = and i32 %1229, 255
  %1237 = call i32 @llvm.ctpop.i32(i32 %1236) #17
  %1238 = trunc i32 %1237 to i8
  %1239 = and i8 %1238, 1
  %1240 = xor i8 %1239, 1
  %1241 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1240, i8* %1241, align 1, !tbaa !2448
  %1242 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1242, align 1, !tbaa !2449
  %1243 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1243, align 1, !tbaa !2450
  %1244 = lshr i32 %1229, 31
  %1245 = trunc i32 %1244 to i8
  %1246 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1245, i8* %1246, align 1, !tbaa !2451
  %1247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1234, i8* %1247, align 1, !tbaa !2452
  %1248 = load i32, i32* %EAX
  %1249 = zext i32 %1248 to i64
  %1250 = load i64, i64* %PC
  %1251 = add i64 %1250, 7
  store i64 %1251, i64* %PC
  store i32 %1248, i32* bitcast (%L_type* @L to i32*)
  %1252 = load i64, i64* %PC
  %1253 = add i64 %1252, 7
  store i64 %1253, i64* %PC
  %1254 = load i32, i32* bitcast (%J_type* @J to i32*)
  %1255 = zext i32 %1254 to i64
  store i64 %1255, i64* %RAX, align 8, !tbaa !2428
  %1256 = load i64, i64* %RAX
  %1257 = load i64, i64* %PC
  %1258 = add i64 %1257, 7
  store i64 %1258, i64* %PC
  %1259 = trunc i64 %1256 to i32
  %1260 = load i32, i32* bitcast (%K_type* @K to i32*)
  %1261 = add i32 %1260, %1259
  %1262 = zext i32 %1261 to i64
  store i64 %1262, i64* %RAX, align 8, !tbaa !2428
  %1263 = icmp ult i32 %1261, %1259
  %1264 = icmp ult i32 %1261, %1260
  %1265 = or i1 %1263, %1264
  %1266 = zext i1 %1265 to i8
  %1267 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1266, i8* %1267, align 1, !tbaa !2434
  %1268 = and i32 %1261, 255
  %1269 = call i32 @llvm.ctpop.i32(i32 %1268) #17
  %1270 = trunc i32 %1269 to i8
  %1271 = and i8 %1270, 1
  %1272 = xor i8 %1271, 1
  %1273 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1272, i8* %1273, align 1, !tbaa !2448
  %1274 = xor i32 %1260, %1259
  %1275 = xor i32 %1274, %1261
  %1276 = lshr i32 %1275, 4
  %1277 = trunc i32 %1276 to i8
  %1278 = and i8 %1277, 1
  %1279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1278, i8* %1279, align 1, !tbaa !2449
  %1280 = icmp eq i32 %1261, 0
  %1281 = zext i1 %1280 to i8
  %1282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1281, i8* %1282, align 1, !tbaa !2450
  %1283 = lshr i32 %1261, 31
  %1284 = trunc i32 %1283 to i8
  %1285 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1284, i8* %1285, align 1, !tbaa !2451
  %1286 = lshr i32 %1259, 31
  %1287 = lshr i32 %1260, 31
  %1288 = xor i32 %1283, %1286
  %1289 = xor i32 %1283, %1287
  %1290 = add nuw nsw i32 %1288, %1289
  %1291 = icmp eq i32 %1290, 2
  %1292 = zext i1 %1291 to i8
  %1293 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1292, i8* %1293, align 1, !tbaa !2452
  %1294 = load i64, i64* %RAX
  %1295 = load i64, i64* %PC
  %1296 = add i64 %1295, 7
  store i64 %1296, i64* %PC
  %1297 = trunc i64 %1294 to i32
  %1298 = load i32, i32* bitcast (%L_type* @L to i32*)
  %1299 = add i32 %1298, %1297
  %1300 = zext i32 %1299 to i64
  store i64 %1300, i64* %RAX, align 8, !tbaa !2428
  %1301 = icmp ult i32 %1299, %1297
  %1302 = icmp ult i32 %1299, %1298
  %1303 = or i1 %1301, %1302
  %1304 = zext i1 %1303 to i8
  %1305 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1304, i8* %1305, align 1, !tbaa !2434
  %1306 = and i32 %1299, 255
  %1307 = call i32 @llvm.ctpop.i32(i32 %1306) #17
  %1308 = trunc i32 %1307 to i8
  %1309 = and i8 %1308, 1
  %1310 = xor i8 %1309, 1
  %1311 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1310, i8* %1311, align 1, !tbaa !2448
  %1312 = xor i32 %1298, %1297
  %1313 = xor i32 %1312, %1299
  %1314 = lshr i32 %1313, 4
  %1315 = trunc i32 %1314 to i8
  %1316 = and i8 %1315, 1
  %1317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1316, i8* %1317, align 1, !tbaa !2449
  %1318 = icmp eq i32 %1299, 0
  %1319 = zext i1 %1318 to i8
  %1320 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1319, i8* %1320, align 1, !tbaa !2450
  %1321 = lshr i32 %1299, 31
  %1322 = trunc i32 %1321 to i8
  %1323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1322, i8* %1323, align 1, !tbaa !2451
  %1324 = lshr i32 %1297, 31
  %1325 = lshr i32 %1298, 31
  %1326 = xor i32 %1321, %1324
  %1327 = xor i32 %1321, %1325
  %1328 = add nuw nsw i32 %1326, %1327
  %1329 = icmp eq i32 %1328, 2
  %1330 = zext i1 %1329 to i8
  %1331 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1330, i8* %1331, align 1, !tbaa !2452
  %1332 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1333 = load i32, i32* %EAX
  %1334 = zext i32 %1333 to i64
  %1335 = load i64, i64* %PC
  %1336 = add i64 %1335, 4
  store i64 %1336, i64* %PC
  %1337 = sitofp i32 %1333 to double
  %1338 = bitcast i8* %1332 to double*
  store double %1337, double* %1338, align 1, !tbaa !2432
  %1339 = load i64, i64* %PC
  %1340 = add i64 %1339, 7
  store i64 %1340, i64* %PC
  %1341 = load i32, i32* bitcast (%L_type* @L to i32*)
  %1342 = zext i32 %1341 to i64
  store i64 %1342, i64* %RAX, align 8, !tbaa !2428
  %1343 = load i64, i64* %RAX
  %1344 = load i64, i64* %PC
  %1345 = add i64 %1344, 3
  store i64 %1345, i64* %PC
  %1346 = trunc i64 %1343 to i32
  %1347 = sub i32 %1346, 1
  %1348 = zext i32 %1347 to i64
  store i64 %1348, i64* %RAX, align 8, !tbaa !2428
  %1349 = icmp ult i32 %1346, 1
  %1350 = zext i1 %1349 to i8
  %1351 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1350, i8* %1351, align 1, !tbaa !2434
  %1352 = and i32 %1347, 255
  %1353 = call i32 @llvm.ctpop.i32(i32 %1352) #17
  %1354 = trunc i32 %1353 to i8
  %1355 = and i8 %1354, 1
  %1356 = xor i8 %1355, 1
  %1357 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1356, i8* %1357, align 1, !tbaa !2448
  %1358 = xor i64 1, %1343
  %1359 = trunc i64 %1358 to i32
  %1360 = xor i32 %1359, %1347
  %1361 = lshr i32 %1360, 4
  %1362 = trunc i32 %1361 to i8
  %1363 = and i8 %1362, 1
  %1364 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1363, i8* %1364, align 1, !tbaa !2449
  %1365 = icmp eq i32 %1347, 0
  %1366 = zext i1 %1365 to i8
  %1367 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1366, i8* %1367, align 1, !tbaa !2450
  %1368 = lshr i32 %1347, 31
  %1369 = trunc i32 %1368 to i8
  %1370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1369, i8* %1370, align 1, !tbaa !2451
  %1371 = lshr i32 %1346, 31
  %1372 = xor i32 %1368, %1371
  %1373 = add nuw nsw i32 %1372, %1371
  %1374 = icmp eq i32 %1373, 2
  %1375 = zext i1 %1374 to i8
  %1376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1375, i8* %1376, align 1, !tbaa !2452
  %1377 = load i32, i32* %EAX
  %1378 = zext i32 %1377 to i64
  %1379 = load i64, i64* %PC
  %1380 = add i64 %1379, 3
  store i64 %1380, i64* %PC
  %1381 = shl i64 %1378, 32
  %1382 = ashr exact i64 %1381, 32
  store i64 %1382, i64* %RDX, align 8, !tbaa !2428
  %1383 = load i64, i64* %RDX
  %1384 = mul i64 %1383, 8
  %1385 = add i64 %1384, ptrtoint (%E1_type* @E1 to i64)
  %1386 = bitcast %union.vec128_t* %XMM0 to i8*
  %1387 = load i64, i64* %PC
  %1388 = add i64 %1387, 9
  store i64 %1388, i64* %PC
  %1389 = bitcast i8* %1386 to double*
  %1390 = load double, double* %1389, align 1
  %1391 = inttoptr i64 %1385 to double*
  store double %1390, double* %1391
  %1392 = load i64, i64* %PC
  %1393 = add i64 %1392, 7
  store i64 %1393, i64* %PC
  %1394 = load i32, i32* bitcast (%J_type* @J to i32*)
  %1395 = zext i32 %1394 to i64
  store i64 %1395, i64* %RAX, align 8, !tbaa !2428
  %1396 = load i64, i64* %RAX
  %1397 = load i64, i64* %PC
  %1398 = add i64 %1397, 8
  store i64 %1398, i64* %PC
  %1399 = load i32, i32* bitcast (%K_type* @K to i32*)
  %1400 = shl i64 %1396, 32
  %1401 = ashr exact i64 %1400, 32
  %1402 = sext i32 %1399 to i64
  %1403 = mul nsw i64 %1402, %1401
  %1404 = trunc i64 %1403 to i32
  %1405 = and i64 %1403, 4294967295
  store i64 %1405, i64* %RAX, align 8, !tbaa !2428
  %1406 = shl i64 %1403, 32
  %1407 = ashr exact i64 %1406, 32
  %1408 = icmp ne i64 %1407, %1403
  %1409 = zext i1 %1408 to i8
  %1410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1409, i8* %1410, align 1, !tbaa !2434
  %1411 = and i32 %1404, 255
  %1412 = call i32 @llvm.ctpop.i32(i32 %1411) #17
  %1413 = trunc i32 %1412 to i8
  %1414 = and i8 %1413, 1
  %1415 = xor i8 %1414, 1
  %1416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1415, i8* %1416, align 1, !tbaa !2448
  %1417 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1417, align 1, !tbaa !2449
  %1418 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1418, align 1, !tbaa !2450
  %1419 = lshr i32 %1404, 31
  %1420 = trunc i32 %1419 to i8
  %1421 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1420, i8* %1421, align 1, !tbaa !2451
  %1422 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1409, i8* %1422, align 1, !tbaa !2452
  %1423 = load i64, i64* %RAX
  %1424 = load i64, i64* %PC
  %1425 = add i64 %1424, 8
  store i64 %1425, i64* %PC
  %1426 = load i32, i32* bitcast (%L_type* @L to i32*)
  %1427 = shl i64 %1423, 32
  %1428 = ashr exact i64 %1427, 32
  %1429 = sext i32 %1426 to i64
  %1430 = mul nsw i64 %1429, %1428
  %1431 = trunc i64 %1430 to i32
  %1432 = and i64 %1430, 4294967295
  store i64 %1432, i64* %RAX, align 8, !tbaa !2428
  %1433 = shl i64 %1430, 32
  %1434 = ashr exact i64 %1433, 32
  %1435 = icmp ne i64 %1434, %1430
  %1436 = zext i1 %1435 to i8
  %1437 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1436, i8* %1437, align 1, !tbaa !2434
  %1438 = and i32 %1431, 255
  %1439 = call i32 @llvm.ctpop.i32(i32 %1438) #17
  %1440 = trunc i32 %1439 to i8
  %1441 = and i8 %1440, 1
  %1442 = xor i8 %1441, 1
  %1443 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1442, i8* %1443, align 1, !tbaa !2448
  %1444 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1444, align 1, !tbaa !2449
  %1445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1445, align 1, !tbaa !2450
  %1446 = lshr i32 %1431, 31
  %1447 = trunc i32 %1446 to i8
  %1448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1447, i8* %1448, align 1, !tbaa !2451
  %1449 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1436, i8* %1449, align 1, !tbaa !2452
  %1450 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1451 = load i32, i32* %EAX
  %1452 = zext i32 %1451 to i64
  %1453 = load i64, i64* %PC
  %1454 = add i64 %1453, 4
  store i64 %1454, i64* %PC
  %1455 = sitofp i32 %1451 to double
  %1456 = bitcast i8* %1450 to double*
  store double %1455, double* %1456, align 1, !tbaa !2432
  %1457 = load i64, i64* %PC
  %1458 = add i64 %1457, 7
  store i64 %1458, i64* %PC
  %1459 = load i32, i32* bitcast (%K_type* @K to i32*)
  %1460 = zext i32 %1459 to i64
  store i64 %1460, i64* %RAX, align 8, !tbaa !2428
  %1461 = load i64, i64* %RAX
  %1462 = load i64, i64* %PC
  %1463 = add i64 %1462, 3
  store i64 %1463, i64* %PC
  %1464 = trunc i64 %1461 to i32
  %1465 = sub i32 %1464, 1
  %1466 = zext i32 %1465 to i64
  store i64 %1466, i64* %RAX, align 8, !tbaa !2428
  %1467 = icmp ult i32 %1464, 1
  %1468 = zext i1 %1467 to i8
  %1469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1468, i8* %1469, align 1, !tbaa !2434
  %1470 = and i32 %1465, 255
  %1471 = call i32 @llvm.ctpop.i32(i32 %1470) #17
  %1472 = trunc i32 %1471 to i8
  %1473 = and i8 %1472, 1
  %1474 = xor i8 %1473, 1
  %1475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1474, i8* %1475, align 1, !tbaa !2448
  %1476 = xor i64 1, %1461
  %1477 = trunc i64 %1476 to i32
  %1478 = xor i32 %1477, %1465
  %1479 = lshr i32 %1478, 4
  %1480 = trunc i32 %1479 to i8
  %1481 = and i8 %1480, 1
  %1482 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1481, i8* %1482, align 1, !tbaa !2449
  %1483 = icmp eq i32 %1465, 0
  %1484 = zext i1 %1483 to i8
  %1485 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1484, i8* %1485, align 1, !tbaa !2450
  %1486 = lshr i32 %1465, 31
  %1487 = trunc i32 %1486 to i8
  %1488 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1487, i8* %1488, align 1, !tbaa !2451
  %1489 = lshr i32 %1464, 31
  %1490 = xor i32 %1486, %1489
  %1491 = add nuw nsw i32 %1490, %1489
  %1492 = icmp eq i32 %1491, 2
  %1493 = zext i1 %1492 to i8
  %1494 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1493, i8* %1494, align 1, !tbaa !2452
  %1495 = load i32, i32* %EAX
  %1496 = zext i32 %1495 to i64
  %1497 = load i64, i64* %PC
  %1498 = add i64 %1497, 3
  store i64 %1498, i64* %PC
  %1499 = shl i64 %1496, 32
  %1500 = ashr exact i64 %1499, 32
  store i64 %1500, i64* %RDX, align 8, !tbaa !2428
  %1501 = load i64, i64* %RDX
  %1502 = mul i64 %1501, 8
  %1503 = add i64 %1502, ptrtoint (%E1_type* @E1 to i64)
  %1504 = bitcast %union.vec128_t* %XMM0 to i8*
  %1505 = load i64, i64* %PC
  %1506 = add i64 %1505, 9
  store i64 %1506, i64* %PC
  %1507 = bitcast i8* %1504 to double*
  %1508 = load double, double* %1507, align 1
  %1509 = inttoptr i64 %1503 to double*
  store double %1508, double* %1509
  %1510 = load i64, i64* %RBP
  %1511 = sub i64 %1510, 24
  %1512 = load i64, i64* %PC
  %1513 = add i64 %1512, 4
  store i64 %1513, i64* %PC
  %1514 = inttoptr i64 %1511 to i64*
  %1515 = load i64, i64* %1514
  store i64 %1515, i64* %RAX, align 8, !tbaa !2428
  %1516 = load i64, i64* %RAX
  %1517 = load i64, i64* %PC
  %1518 = add i64 %1517, 4
  store i64 %1518, i64* %PC
  %1519 = add i64 1, %1516
  store i64 %1519, i64* %RAX, align 8, !tbaa !2428
  %1520 = icmp ult i64 %1519, %1516
  %1521 = icmp ult i64 %1519, 1
  %1522 = or i1 %1520, %1521
  %1523 = zext i1 %1522 to i8
  %1524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1523, i8* %1524, align 1, !tbaa !2434
  %1525 = trunc i64 %1519 to i32
  %1526 = and i32 %1525, 255
  %1527 = call i32 @llvm.ctpop.i32(i32 %1526) #17
  %1528 = trunc i32 %1527 to i8
  %1529 = and i8 %1528, 1
  %1530 = xor i8 %1529, 1
  %1531 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1530, i8* %1531, align 1, !tbaa !2448
  %1532 = xor i64 1, %1516
  %1533 = xor i64 %1532, %1519
  %1534 = lshr i64 %1533, 4
  %1535 = trunc i64 %1534 to i8
  %1536 = and i8 %1535, 1
  %1537 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1536, i8* %1537, align 1, !tbaa !2449
  %1538 = icmp eq i64 %1519, 0
  %1539 = zext i1 %1538 to i8
  %1540 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1539, i8* %1540, align 1, !tbaa !2450
  %1541 = lshr i64 %1519, 63
  %1542 = trunc i64 %1541 to i8
  %1543 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1542, i8* %1543, align 1, !tbaa !2451
  %1544 = lshr i64 %1516, 63
  %1545 = xor i64 %1541, %1544
  %1546 = add nuw nsw i64 %1545, %1541
  %1547 = icmp eq i64 %1546, 2
  %1548 = zext i1 %1547 to i8
  %1549 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1548, i8* %1549, align 1, !tbaa !2452
  %1550 = load i64, i64* %RBP
  %1551 = sub i64 %1550, 24
  %1552 = load i64, i64* %RAX
  %1553 = load i64, i64* %PC
  %1554 = add i64 %1553, 4
  store i64 %1554, i64* %PC
  %1555 = inttoptr i64 %1551 to i64*
  store i64 %1552, i64* %1555
  %1556 = load i64, i64* %PC
  %1557 = sub i64 %1556, 254
  %1558 = load i64, i64* %PC
  %1559 = add i64 %1558, 5
  store i64 %1559, i64* %PC
  %1560 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1557, i64* %1560, align 8, !tbaa !2428
  br label %block_400ecb

block_4014fc:                                     ; preds = %block_4014ee
  %1561 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1562 = load i64, i64* %RBP
  %1563 = sub i64 %1562, 144
  %1564 = load i64, i64* %PC
  %1565 = add i64 %1564, 8
  store i64 %1565, i64* %PC
  %1566 = inttoptr i64 %1563 to double*
  %1567 = load double, double* %1566
  %1568 = bitcast i8* %1561 to double*
  store double %1567, double* %1568, align 1, !tbaa !2432
  %1569 = getelementptr inbounds i8, i8* %1561, i64 8
  %1570 = bitcast i8* %1569 to double*
  store double 0.000000e+00, double* %1570, align 1, !tbaa !2432
  %1571 = load i64, i64* %PC
  %1572 = sub i64 %1571, 3588
  %1573 = load i64, i64* %PC
  %1574 = add i64 %1573, 5
  %1575 = load i64, i64* %PC
  %1576 = add i64 %1575, 5
  store i64 %1576, i64* %PC
  %1577 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %1578 = load i64, i64* %1577, align 8, !tbaa !2428
  %1579 = add i64 %1578, -8
  %1580 = inttoptr i64 %1579 to i64*
  store i64 %1574, i64* %1580
  store i64 %1579, i64* %1577, align 8, !tbaa !2428
  %1581 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1572, i64* %1581, align 8, !tbaa !2428
  %1582 = load i64, i64* %PC
  %1583 = call %struct.Memory* @ext_602168_log(%struct.State* %0, i64 %1582, %struct.Memory* %MEMORY.3)
  %1584 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1585 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1586 = load i64, i64* %PC
  %1587 = add i64 %1586, 9
  store i64 %1587, i64* %PC
  %1588 = bitcast i8* %1585 to double*
  %1589 = load double, double* %1588, align 1
  %1590 = getelementptr inbounds i8, i8* %1585, i64 8
  %1591 = bitcast i8* %1590 to i64*
  %1592 = load i64, i64* %1591, align 1
  %1593 = load double, double* bitcast (%T1_type* @T1 to double*)
  %1594 = fdiv double %1589, %1593
  %1595 = bitcast i8* %1584 to double*
  store double %1594, double* %1595, align 1, !tbaa !2432
  %1596 = getelementptr inbounds i8, i8* %1584, i64 8
  %1597 = bitcast i8* %1596 to i64*
  store i64 %1592, i64* %1597, align 1, !tbaa !2432
  %1598 = load i64, i64* %PC
  %1599 = sub i64 %1598, 3650
  %1600 = load i64, i64* %PC
  %1601 = add i64 %1600, 5
  %1602 = load i64, i64* %PC
  %1603 = add i64 %1602, 5
  store i64 %1603, i64* %PC
  %1604 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %1605 = load i64, i64* %1604, align 8, !tbaa !2428
  %1606 = add i64 %1605, -8
  %1607 = inttoptr i64 %1606 to i64*
  store i64 %1601, i64* %1607
  store i64 %1606, i64* %1604, align 8, !tbaa !2428
  %1608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1599, i64* %1608, align 8, !tbaa !2428
  %1609 = load i64, i64* %PC
  %1610 = call %struct.Memory* @ext_6020f0_exp(%struct.State* %0, i64 %1609, %struct.Memory* %1583)
  %1611 = load i64, i64* %PC
  %1612 = sub i64 %1611, 3511
  %1613 = load i64, i64* %PC
  %1614 = add i64 %1613, 5
  %1615 = load i64, i64* %PC
  %1616 = add i64 %1615, 5
  store i64 %1616, i64* %PC
  %1617 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %1618 = load i64, i64* %1617, align 8, !tbaa !2428
  %1619 = add i64 %1618, -8
  %1620 = inttoptr i64 %1619 to i64*
  store i64 %1614, i64* %1620
  store i64 %1619, i64* %1617, align 8, !tbaa !2428
  %1621 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1612, i64* %1621, align 8, !tbaa !2428
  %1622 = load i64, i64* %PC
  %1623 = bitcast %struct.State** %state.i1432 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1623)
  %1624 = bitcast i64* %curr_pc.i1433 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1624)
  %1625 = bitcast %struct.Memory** %memory.i1434 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1625)
  call void @llvm.lifetime.start(i64 1, i8* %BRANCH_TAKEN.i1435)
  %1626 = bitcast i64* %SS_BASE.i1436 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1626)
  %1627 = bitcast i64* %ES_BASE.i1437 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1627)
  %1628 = bitcast i64* %DS_BASE.i1438 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1628)
  %1629 = bitcast i64* %CS_BASE.i1439 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1629)
  %1630 = bitcast %struct.State** %STATE.i1440 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1630)
  %1631 = bitcast %struct.Memory** %MEMORY.i1441 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1631)
  %1632 = bitcast i64** %_DR0.i1442 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1632)
  %1633 = bitcast i64** %_DR1.i1443 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1633)
  %1634 = bitcast i64** %_DR2.i1444 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1634)
  %1635 = bitcast i64** %_DR3.i1445 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1635)
  %1636 = bitcast i64** %_DR4.i1446 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1636)
  %1637 = bitcast i64** %_DR5.i1447 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1637)
  %1638 = bitcast i64** %_DR6.i1448 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1638)
  %1639 = bitcast i64** %_DR7.i1449 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1639)
  %1640 = bitcast i64** %CR0.i1450 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1640)
  %1641 = bitcast i64** %CR1.i1451 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1641)
  %1642 = bitcast i64** %CR2.i1452 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1642)
  %1643 = bitcast i64** %CR3.i1453 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1643)
  %1644 = bitcast i64** %CR4.i1454 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1644)
  %1645 = bitcast i64** %CR8.i1455 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1645)
  store %struct.State* %0, %struct.State** %state.i1432, align 8, !noalias !2454
  store i64 %1622, i64* %curr_pc.i1433, align 8, !noalias !2454
  store %struct.Memory* %1610, %struct.Memory** %memory.i1434, align 8, !noalias !2454
  store i8 0, i8* %BRANCH_TAKEN.i1435, align 1, !noalias !2454
  store i64 0, i64* %SS_BASE.i1436, align 8, !noalias !2454
  store i64 0, i64* %ES_BASE.i1437, align 8, !noalias !2454
  store i64 0, i64* %DS_BASE.i1438, align 8, !noalias !2454
  store i64 0, i64* %CS_BASE.i1439, align 8, !noalias !2454
  store %struct.State* %0, %struct.State** %STATE.i1440, align 8, !noalias !2454
  store %struct.Memory* %1610, %struct.Memory** %MEMORY.i1441, align 8, !noalias !2454
  %1646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1647 = getelementptr inbounds %struct.GPR, %struct.GPR* %1646, i32 0, i32 33
  %1648 = getelementptr inbounds %struct.Reg, %struct.Reg* %1647, i32 0, i32 0
  %PC.i1456 = bitcast %union.anon* %1648 to i64*
  store i64 %1622, i64* %PC.i1456, align 8, !alias.scope !2458, !noalias !2459
  %1649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1650 = getelementptr inbounds %struct.GPR, %struct.GPR* %1649, i32 0, i32 1
  %1651 = getelementptr inbounds %struct.Reg, %struct.Reg* %1650, i32 0, i32 0
  %1652 = bitcast %union.anon* %1651 to %struct.anon.2*
  %AH.i1457 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1652, i32 0, i32 1
  %1653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1654 = getelementptr inbounds %struct.GPR, %struct.GPR* %1653, i32 0, i32 3
  %1655 = getelementptr inbounds %struct.Reg, %struct.Reg* %1654, i32 0, i32 0
  %1656 = bitcast %union.anon* %1655 to %struct.anon.2*
  %BH.i1458 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1656, i32 0, i32 1
  %1657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1658 = getelementptr inbounds %struct.GPR, %struct.GPR* %1657, i32 0, i32 5
  %1659 = getelementptr inbounds %struct.Reg, %struct.Reg* %1658, i32 0, i32 0
  %1660 = bitcast %union.anon* %1659 to %struct.anon.2*
  %CH.i1459 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1660, i32 0, i32 1
  %1661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1662 = getelementptr inbounds %struct.GPR, %struct.GPR* %1661, i32 0, i32 7
  %1663 = getelementptr inbounds %struct.Reg, %struct.Reg* %1662, i32 0, i32 0
  %1664 = bitcast %union.anon* %1663 to %struct.anon.2*
  %DH.i1460 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1664, i32 0, i32 1
  %1665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1666 = getelementptr inbounds %struct.GPR, %struct.GPR* %1665, i32 0, i32 1
  %1667 = getelementptr inbounds %struct.Reg, %struct.Reg* %1666, i32 0, i32 0
  %1668 = bitcast %union.anon* %1667 to %struct.anon.2*
  %AL.i1461 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1668, i32 0, i32 0
  %1669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1670 = getelementptr inbounds %struct.GPR, %struct.GPR* %1669, i32 0, i32 3
  %1671 = getelementptr inbounds %struct.Reg, %struct.Reg* %1670, i32 0, i32 0
  %1672 = bitcast %union.anon* %1671 to %struct.anon.2*
  %BL.i1462 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1672, i32 0, i32 0
  %1673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1674 = getelementptr inbounds %struct.GPR, %struct.GPR* %1673, i32 0, i32 5
  %1675 = getelementptr inbounds %struct.Reg, %struct.Reg* %1674, i32 0, i32 0
  %1676 = bitcast %union.anon* %1675 to %struct.anon.2*
  %CL.i1463 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1676, i32 0, i32 0
  %1677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1678 = getelementptr inbounds %struct.GPR, %struct.GPR* %1677, i32 0, i32 7
  %1679 = getelementptr inbounds %struct.Reg, %struct.Reg* %1678, i32 0, i32 0
  %1680 = bitcast %union.anon* %1679 to %struct.anon.2*
  %DL.i1464 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1680, i32 0, i32 0
  %1681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1682 = getelementptr inbounds %struct.GPR, %struct.GPR* %1681, i32 0, i32 9
  %1683 = getelementptr inbounds %struct.Reg, %struct.Reg* %1682, i32 0, i32 0
  %1684 = bitcast %union.anon* %1683 to %struct.anon.2*
  %SIL.i1465 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1684, i32 0, i32 0
  %1685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1686 = getelementptr inbounds %struct.GPR, %struct.GPR* %1685, i32 0, i32 11
  %1687 = getelementptr inbounds %struct.Reg, %struct.Reg* %1686, i32 0, i32 0
  %1688 = bitcast %union.anon* %1687 to %struct.anon.2*
  %DIL.i1466 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1688, i32 0, i32 0
  %1689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1690 = getelementptr inbounds %struct.GPR, %struct.GPR* %1689, i32 0, i32 13
  %1691 = getelementptr inbounds %struct.Reg, %struct.Reg* %1690, i32 0, i32 0
  %1692 = bitcast %union.anon* %1691 to %struct.anon.2*
  %SPL.i1467 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1692, i32 0, i32 0
  %1693 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1694 = getelementptr inbounds %struct.GPR, %struct.GPR* %1693, i32 0, i32 15
  %1695 = getelementptr inbounds %struct.Reg, %struct.Reg* %1694, i32 0, i32 0
  %1696 = bitcast %union.anon* %1695 to %struct.anon.2*
  %BPL.i1468 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1696, i32 0, i32 0
  %1697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1698 = getelementptr inbounds %struct.GPR, %struct.GPR* %1697, i32 0, i32 17
  %1699 = getelementptr inbounds %struct.Reg, %struct.Reg* %1698, i32 0, i32 0
  %1700 = bitcast %union.anon* %1699 to %struct.anon.2*
  %R8B.i1469 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1700, i32 0, i32 0
  %1701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1702 = getelementptr inbounds %struct.GPR, %struct.GPR* %1701, i32 0, i32 19
  %1703 = getelementptr inbounds %struct.Reg, %struct.Reg* %1702, i32 0, i32 0
  %1704 = bitcast %union.anon* %1703 to %struct.anon.2*
  %R9B.i1470 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1704, i32 0, i32 0
  %1705 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1706 = getelementptr inbounds %struct.GPR, %struct.GPR* %1705, i32 0, i32 21
  %1707 = getelementptr inbounds %struct.Reg, %struct.Reg* %1706, i32 0, i32 0
  %1708 = bitcast %union.anon* %1707 to %struct.anon.2*
  %R10B.i1471 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1708, i32 0, i32 0
  %1709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1710 = getelementptr inbounds %struct.GPR, %struct.GPR* %1709, i32 0, i32 23
  %1711 = getelementptr inbounds %struct.Reg, %struct.Reg* %1710, i32 0, i32 0
  %1712 = bitcast %union.anon* %1711 to %struct.anon.2*
  %R11B.i1472 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1712, i32 0, i32 0
  %1713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1714 = getelementptr inbounds %struct.GPR, %struct.GPR* %1713, i32 0, i32 25
  %1715 = getelementptr inbounds %struct.Reg, %struct.Reg* %1714, i32 0, i32 0
  %1716 = bitcast %union.anon* %1715 to %struct.anon.2*
  %R12B.i1473 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1716, i32 0, i32 0
  %1717 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1718 = getelementptr inbounds %struct.GPR, %struct.GPR* %1717, i32 0, i32 27
  %1719 = getelementptr inbounds %struct.Reg, %struct.Reg* %1718, i32 0, i32 0
  %1720 = bitcast %union.anon* %1719 to %struct.anon.2*
  %R13B.i1474 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1720, i32 0, i32 0
  %1721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1722 = getelementptr inbounds %struct.GPR, %struct.GPR* %1721, i32 0, i32 29
  %1723 = getelementptr inbounds %struct.Reg, %struct.Reg* %1722, i32 0, i32 0
  %1724 = bitcast %union.anon* %1723 to %struct.anon.2*
  %R14B.i1475 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1724, i32 0, i32 0
  %1725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1726 = getelementptr inbounds %struct.GPR, %struct.GPR* %1725, i32 0, i32 31
  %1727 = getelementptr inbounds %struct.Reg, %struct.Reg* %1726, i32 0, i32 0
  %1728 = bitcast %union.anon* %1727 to %struct.anon.2*
  %R15B.i1476 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1728, i32 0, i32 0
  %1729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1730 = getelementptr inbounds %struct.GPR, %struct.GPR* %1729, i32 0, i32 1
  %1731 = getelementptr inbounds %struct.Reg, %struct.Reg* %1730, i32 0, i32 0
  %AX.i1477 = bitcast %union.anon* %1731 to i16*
  %1732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1733 = getelementptr inbounds %struct.GPR, %struct.GPR* %1732, i32 0, i32 3
  %1734 = getelementptr inbounds %struct.Reg, %struct.Reg* %1733, i32 0, i32 0
  %BX.i1478 = bitcast %union.anon* %1734 to i16*
  %1735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1736 = getelementptr inbounds %struct.GPR, %struct.GPR* %1735, i32 0, i32 5
  %1737 = getelementptr inbounds %struct.Reg, %struct.Reg* %1736, i32 0, i32 0
  %CX.i1479 = bitcast %union.anon* %1737 to i16*
  %1738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1739 = getelementptr inbounds %struct.GPR, %struct.GPR* %1738, i32 0, i32 7
  %1740 = getelementptr inbounds %struct.Reg, %struct.Reg* %1739, i32 0, i32 0
  %DX.i1480 = bitcast %union.anon* %1740 to i16*
  %1741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1742 = getelementptr inbounds %struct.GPR, %struct.GPR* %1741, i32 0, i32 9
  %1743 = getelementptr inbounds %struct.Reg, %struct.Reg* %1742, i32 0, i32 0
  %SI.i1481 = bitcast %union.anon* %1743 to i16*
  %1744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1745 = getelementptr inbounds %struct.GPR, %struct.GPR* %1744, i32 0, i32 11
  %1746 = getelementptr inbounds %struct.Reg, %struct.Reg* %1745, i32 0, i32 0
  %DI.i1482 = bitcast %union.anon* %1746 to i16*
  %1747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1748 = getelementptr inbounds %struct.GPR, %struct.GPR* %1747, i32 0, i32 13
  %1749 = getelementptr inbounds %struct.Reg, %struct.Reg* %1748, i32 0, i32 0
  %SP.i1483 = bitcast %union.anon* %1749 to i16*
  %1750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1751 = getelementptr inbounds %struct.GPR, %struct.GPR* %1750, i32 0, i32 15
  %1752 = getelementptr inbounds %struct.Reg, %struct.Reg* %1751, i32 0, i32 0
  %BP.i1484 = bitcast %union.anon* %1752 to i16*
  %1753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1754 = getelementptr inbounds %struct.GPR, %struct.GPR* %1753, i32 0, i32 17
  %1755 = getelementptr inbounds %struct.Reg, %struct.Reg* %1754, i32 0, i32 0
  %R8W.i1485 = bitcast %union.anon* %1755 to i16*
  %1756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1757 = getelementptr inbounds %struct.GPR, %struct.GPR* %1756, i32 0, i32 19
  %1758 = getelementptr inbounds %struct.Reg, %struct.Reg* %1757, i32 0, i32 0
  %R9W.i1486 = bitcast %union.anon* %1758 to i16*
  %1759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1760 = getelementptr inbounds %struct.GPR, %struct.GPR* %1759, i32 0, i32 21
  %1761 = getelementptr inbounds %struct.Reg, %struct.Reg* %1760, i32 0, i32 0
  %R10W.i1487 = bitcast %union.anon* %1761 to i16*
  %1762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1763 = getelementptr inbounds %struct.GPR, %struct.GPR* %1762, i32 0, i32 23
  %1764 = getelementptr inbounds %struct.Reg, %struct.Reg* %1763, i32 0, i32 0
  %R11W.i1488 = bitcast %union.anon* %1764 to i16*
  %1765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1766 = getelementptr inbounds %struct.GPR, %struct.GPR* %1765, i32 0, i32 25
  %1767 = getelementptr inbounds %struct.Reg, %struct.Reg* %1766, i32 0, i32 0
  %R12W.i1489 = bitcast %union.anon* %1767 to i16*
  %1768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1769 = getelementptr inbounds %struct.GPR, %struct.GPR* %1768, i32 0, i32 27
  %1770 = getelementptr inbounds %struct.Reg, %struct.Reg* %1769, i32 0, i32 0
  %R13W.i1490 = bitcast %union.anon* %1770 to i16*
  %1771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1772 = getelementptr inbounds %struct.GPR, %struct.GPR* %1771, i32 0, i32 29
  %1773 = getelementptr inbounds %struct.Reg, %struct.Reg* %1772, i32 0, i32 0
  %R14W.i1491 = bitcast %union.anon* %1773 to i16*
  %1774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1775 = getelementptr inbounds %struct.GPR, %struct.GPR* %1774, i32 0, i32 31
  %1776 = getelementptr inbounds %struct.Reg, %struct.Reg* %1775, i32 0, i32 0
  %R15W.i1492 = bitcast %union.anon* %1776 to i16*
  %1777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1778 = getelementptr inbounds %struct.GPR, %struct.GPR* %1777, i32 0, i32 33
  %1779 = getelementptr inbounds %struct.Reg, %struct.Reg* %1778, i32 0, i32 0
  %IP.i1493 = bitcast %union.anon* %1779 to i16*
  %1780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1781 = getelementptr inbounds %struct.GPR, %struct.GPR* %1780, i32 0, i32 1
  %1782 = getelementptr inbounds %struct.Reg, %struct.Reg* %1781, i32 0, i32 0
  %EAX.i1494 = bitcast %union.anon* %1782 to i32*
  %1783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1784 = getelementptr inbounds %struct.GPR, %struct.GPR* %1783, i32 0, i32 3
  %1785 = getelementptr inbounds %struct.Reg, %struct.Reg* %1784, i32 0, i32 0
  %EBX.i1495 = bitcast %union.anon* %1785 to i32*
  %1786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1787 = getelementptr inbounds %struct.GPR, %struct.GPR* %1786, i32 0, i32 5
  %1788 = getelementptr inbounds %struct.Reg, %struct.Reg* %1787, i32 0, i32 0
  %ECX.i1496 = bitcast %union.anon* %1788 to i32*
  %1789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1790 = getelementptr inbounds %struct.GPR, %struct.GPR* %1789, i32 0, i32 7
  %1791 = getelementptr inbounds %struct.Reg, %struct.Reg* %1790, i32 0, i32 0
  %EDX.i1497 = bitcast %union.anon* %1791 to i32*
  %1792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1793 = getelementptr inbounds %struct.GPR, %struct.GPR* %1792, i32 0, i32 9
  %1794 = getelementptr inbounds %struct.Reg, %struct.Reg* %1793, i32 0, i32 0
  %ESI.i1498 = bitcast %union.anon* %1794 to i32*
  %1795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1796 = getelementptr inbounds %struct.GPR, %struct.GPR* %1795, i32 0, i32 11
  %1797 = getelementptr inbounds %struct.Reg, %struct.Reg* %1796, i32 0, i32 0
  %EDI.i1499 = bitcast %union.anon* %1797 to i32*
  %1798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1799 = getelementptr inbounds %struct.GPR, %struct.GPR* %1798, i32 0, i32 13
  %1800 = getelementptr inbounds %struct.Reg, %struct.Reg* %1799, i32 0, i32 0
  %ESP.i1500 = bitcast %union.anon* %1800 to i32*
  %1801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1802 = getelementptr inbounds %struct.GPR, %struct.GPR* %1801, i32 0, i32 15
  %1803 = getelementptr inbounds %struct.Reg, %struct.Reg* %1802, i32 0, i32 0
  %EBP.i1501 = bitcast %union.anon* %1803 to i32*
  %1804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1805 = getelementptr inbounds %struct.GPR, %struct.GPR* %1804, i32 0, i32 33
  %1806 = getelementptr inbounds %struct.Reg, %struct.Reg* %1805, i32 0, i32 0
  %EIP.i1502 = bitcast %union.anon* %1806 to i32*
  %1807 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1808 = getelementptr inbounds %struct.GPR, %struct.GPR* %1807, i32 0, i32 17
  %1809 = getelementptr inbounds %struct.Reg, %struct.Reg* %1808, i32 0, i32 0
  %R8D.i1503 = bitcast %union.anon* %1809 to i32*
  %1810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1811 = getelementptr inbounds %struct.GPR, %struct.GPR* %1810, i32 0, i32 19
  %1812 = getelementptr inbounds %struct.Reg, %struct.Reg* %1811, i32 0, i32 0
  %R9D.i1504 = bitcast %union.anon* %1812 to i32*
  %1813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1814 = getelementptr inbounds %struct.GPR, %struct.GPR* %1813, i32 0, i32 21
  %1815 = getelementptr inbounds %struct.Reg, %struct.Reg* %1814, i32 0, i32 0
  %R10D.i1505 = bitcast %union.anon* %1815 to i32*
  %1816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1817 = getelementptr inbounds %struct.GPR, %struct.GPR* %1816, i32 0, i32 23
  %1818 = getelementptr inbounds %struct.Reg, %struct.Reg* %1817, i32 0, i32 0
  %R11D.i1506 = bitcast %union.anon* %1818 to i32*
  %1819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1820 = getelementptr inbounds %struct.GPR, %struct.GPR* %1819, i32 0, i32 25
  %1821 = getelementptr inbounds %struct.Reg, %struct.Reg* %1820, i32 0, i32 0
  %R12D.i1507 = bitcast %union.anon* %1821 to i32*
  %1822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1823 = getelementptr inbounds %struct.GPR, %struct.GPR* %1822, i32 0, i32 27
  %1824 = getelementptr inbounds %struct.Reg, %struct.Reg* %1823, i32 0, i32 0
  %R13D.i1508 = bitcast %union.anon* %1824 to i32*
  %1825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1826 = getelementptr inbounds %struct.GPR, %struct.GPR* %1825, i32 0, i32 29
  %1827 = getelementptr inbounds %struct.Reg, %struct.Reg* %1826, i32 0, i32 0
  %R14D.i1509 = bitcast %union.anon* %1827 to i32*
  %1828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1829 = getelementptr inbounds %struct.GPR, %struct.GPR* %1828, i32 0, i32 31
  %1830 = getelementptr inbounds %struct.Reg, %struct.Reg* %1829, i32 0, i32 0
  %R15D.i1510 = bitcast %union.anon* %1830 to i32*
  %1831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1832 = getelementptr inbounds %struct.GPR, %struct.GPR* %1831, i32 0, i32 1
  %1833 = getelementptr inbounds %struct.Reg, %struct.Reg* %1832, i32 0, i32 0
  %RAX.i1511 = bitcast %union.anon* %1833 to i64*
  %1834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1835 = getelementptr inbounds %struct.GPR, %struct.GPR* %1834, i32 0, i32 3
  %1836 = getelementptr inbounds %struct.Reg, %struct.Reg* %1835, i32 0, i32 0
  %RBX.i1512 = bitcast %union.anon* %1836 to i64*
  %1837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1838 = getelementptr inbounds %struct.GPR, %struct.GPR* %1837, i32 0, i32 5
  %1839 = getelementptr inbounds %struct.Reg, %struct.Reg* %1838, i32 0, i32 0
  %RCX.i1513 = bitcast %union.anon* %1839 to i64*
  %1840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1841 = getelementptr inbounds %struct.GPR, %struct.GPR* %1840, i32 0, i32 7
  %1842 = getelementptr inbounds %struct.Reg, %struct.Reg* %1841, i32 0, i32 0
  %RDX.i1514 = bitcast %union.anon* %1842 to i64*
  %1843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1844 = getelementptr inbounds %struct.GPR, %struct.GPR* %1843, i32 0, i32 9
  %1845 = getelementptr inbounds %struct.Reg, %struct.Reg* %1844, i32 0, i32 0
  %RSI.i1515 = bitcast %union.anon* %1845 to i64*
  %1846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1847 = getelementptr inbounds %struct.GPR, %struct.GPR* %1846, i32 0, i32 11
  %1848 = getelementptr inbounds %struct.Reg, %struct.Reg* %1847, i32 0, i32 0
  %RDI.i1516 = bitcast %union.anon* %1848 to i64*
  %1849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1850 = getelementptr inbounds %struct.GPR, %struct.GPR* %1849, i32 0, i32 13
  %1851 = getelementptr inbounds %struct.Reg, %struct.Reg* %1850, i32 0, i32 0
  %RSP.i1517 = bitcast %union.anon* %1851 to i64*
  %1852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1853 = getelementptr inbounds %struct.GPR, %struct.GPR* %1852, i32 0, i32 15
  %1854 = getelementptr inbounds %struct.Reg, %struct.Reg* %1853, i32 0, i32 0
  %RBP.i1518 = bitcast %union.anon* %1854 to i64*
  %1855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1856 = getelementptr inbounds %struct.GPR, %struct.GPR* %1855, i32 0, i32 17
  %1857 = getelementptr inbounds %struct.Reg, %struct.Reg* %1856, i32 0, i32 0
  %R8.i1519 = bitcast %union.anon* %1857 to i64*
  %1858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1859 = getelementptr inbounds %struct.GPR, %struct.GPR* %1858, i32 0, i32 19
  %1860 = getelementptr inbounds %struct.Reg, %struct.Reg* %1859, i32 0, i32 0
  %R9.i1520 = bitcast %union.anon* %1860 to i64*
  %1861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1862 = getelementptr inbounds %struct.GPR, %struct.GPR* %1861, i32 0, i32 21
  %1863 = getelementptr inbounds %struct.Reg, %struct.Reg* %1862, i32 0, i32 0
  %R10.i1521 = bitcast %union.anon* %1863 to i64*
  %1864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1865 = getelementptr inbounds %struct.GPR, %struct.GPR* %1864, i32 0, i32 23
  %1866 = getelementptr inbounds %struct.Reg, %struct.Reg* %1865, i32 0, i32 0
  %R11.i1522 = bitcast %union.anon* %1866 to i64*
  %1867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1868 = getelementptr inbounds %struct.GPR, %struct.GPR* %1867, i32 0, i32 25
  %1869 = getelementptr inbounds %struct.Reg, %struct.Reg* %1868, i32 0, i32 0
  %R12.i1523 = bitcast %union.anon* %1869 to i64*
  %1870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1871 = getelementptr inbounds %struct.GPR, %struct.GPR* %1870, i32 0, i32 27
  %1872 = getelementptr inbounds %struct.Reg, %struct.Reg* %1871, i32 0, i32 0
  %R13.i1524 = bitcast %union.anon* %1872 to i64*
  %1873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1874 = getelementptr inbounds %struct.GPR, %struct.GPR* %1873, i32 0, i32 29
  %1875 = getelementptr inbounds %struct.Reg, %struct.Reg* %1874, i32 0, i32 0
  %R14.i1525 = bitcast %union.anon* %1875 to i64*
  %1876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1877 = getelementptr inbounds %struct.GPR, %struct.GPR* %1876, i32 0, i32 31
  %1878 = getelementptr inbounds %struct.Reg, %struct.Reg* %1877, i32 0, i32 0
  %R15.i1526 = bitcast %union.anon* %1878 to i64*
  %1879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1880 = getelementptr inbounds %struct.GPR, %struct.GPR* %1879, i32 0, i32 33
  %1881 = getelementptr inbounds %struct.Reg, %struct.Reg* %1880, i32 0, i32 0
  %RIP.i1527 = bitcast %union.anon* %1881 to i64*
  %1882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %1883 = getelementptr inbounds %struct.Segments, %struct.Segments* %1882, i32 0, i32 1
  %SS.i1528 = bitcast %union.SegmentSelector* %1883 to i16*
  %1884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %1885 = getelementptr inbounds %struct.Segments, %struct.Segments* %1884, i32 0, i32 3
  %ES.i1529 = bitcast %union.SegmentSelector* %1885 to i16*
  %1886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %1887 = getelementptr inbounds %struct.Segments, %struct.Segments* %1886, i32 0, i32 5
  %GS.i1530 = bitcast %union.SegmentSelector* %1887 to i16*
  %1888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %1889 = getelementptr inbounds %struct.Segments, %struct.Segments* %1888, i32 0, i32 7
  %FS.i1531 = bitcast %union.SegmentSelector* %1889 to i16*
  %1890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %1891 = getelementptr inbounds %struct.Segments, %struct.Segments* %1890, i32 0, i32 9
  %DS.i1532 = bitcast %union.SegmentSelector* %1891 to i16*
  %1892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %1893 = getelementptr inbounds %struct.Segments, %struct.Segments* %1892, i32 0, i32 11
  %CS.i1533 = bitcast %union.SegmentSelector* %1893 to i16*
  %1894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %1895 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %1894, i32 0, i32 5
  %1896 = getelementptr inbounds %struct.Reg, %struct.Reg* %1895, i32 0, i32 0
  %GS_BASE.i1534 = bitcast %union.anon* %1896 to i64*
  %1897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %1898 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %1897, i32 0, i32 7
  %1899 = getelementptr inbounds %struct.Reg, %struct.Reg* %1898, i32 0, i32 0
  %FS_BASE.i1535 = bitcast %union.anon* %1899 to i64*
  %1900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1901 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1900, i64 0, i64 0
  %YMM0.i1536 = bitcast %union.VectorReg* %1901 to %"class.std::bitset"*
  %1902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1903 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1902, i64 0, i64 1
  %YMM1.i1537 = bitcast %union.VectorReg* %1903 to %"class.std::bitset"*
  %1904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1905 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1904, i64 0, i64 2
  %YMM2.i1538 = bitcast %union.VectorReg* %1905 to %"class.std::bitset"*
  %1906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1907 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1906, i64 0, i64 3
  %YMM3.i1539 = bitcast %union.VectorReg* %1907 to %"class.std::bitset"*
  %1908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1909 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1908, i64 0, i64 4
  %YMM4.i1540 = bitcast %union.VectorReg* %1909 to %"class.std::bitset"*
  %1910 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1911 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1910, i64 0, i64 5
  %YMM5.i1541 = bitcast %union.VectorReg* %1911 to %"class.std::bitset"*
  %1912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1913 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1912, i64 0, i64 6
  %YMM6.i1542 = bitcast %union.VectorReg* %1913 to %"class.std::bitset"*
  %1914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1915 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1914, i64 0, i64 7
  %YMM7.i1543 = bitcast %union.VectorReg* %1915 to %"class.std::bitset"*
  %1916 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1917 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1916, i64 0, i64 8
  %YMM8.i1544 = bitcast %union.VectorReg* %1917 to %"class.std::bitset"*
  %1918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1919 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1918, i64 0, i64 9
  %YMM9.i1545 = bitcast %union.VectorReg* %1919 to %"class.std::bitset"*
  %1920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1921 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1920, i64 0, i64 10
  %YMM10.i1546 = bitcast %union.VectorReg* %1921 to %"class.std::bitset"*
  %1922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1923 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1922, i64 0, i64 11
  %YMM11.i1547 = bitcast %union.VectorReg* %1923 to %"class.std::bitset"*
  %1924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1925 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1924, i64 0, i64 12
  %YMM12.i1548 = bitcast %union.VectorReg* %1925 to %"class.std::bitset"*
  %1926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1927 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1926, i64 0, i64 13
  %YMM13.i1549 = bitcast %union.VectorReg* %1927 to %"class.std::bitset"*
  %1928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1929 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1928, i64 0, i64 14
  %YMM14.i1550 = bitcast %union.VectorReg* %1929 to %"class.std::bitset"*
  %1930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1931 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1930, i64 0, i64 15
  %YMM15.i1551 = bitcast %union.VectorReg* %1931 to %"class.std::bitset"*
  %1932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1933 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1932, i64 0, i64 0
  %XMM0.i1552 = bitcast %union.VectorReg* %1933 to %union.vec128_t*
  %1934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1935 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1934, i64 0, i64 1
  %XMM1.i1553 = bitcast %union.VectorReg* %1935 to %union.vec128_t*
  %1936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1937 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1936, i64 0, i64 2
  %XMM2.i1554 = bitcast %union.VectorReg* %1937 to %union.vec128_t*
  %1938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1939 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1938, i64 0, i64 3
  %XMM3.i1555 = bitcast %union.VectorReg* %1939 to %union.vec128_t*
  %1940 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1941 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1940, i64 0, i64 4
  %XMM4.i1556 = bitcast %union.VectorReg* %1941 to %union.vec128_t*
  %1942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1943 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1942, i64 0, i64 5
  %XMM5.i1557 = bitcast %union.VectorReg* %1943 to %union.vec128_t*
  %1944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1945 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1944, i64 0, i64 6
  %XMM6.i1558 = bitcast %union.VectorReg* %1945 to %union.vec128_t*
  %1946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1947 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1946, i64 0, i64 7
  %XMM7.i1559 = bitcast %union.VectorReg* %1947 to %union.vec128_t*
  %1948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1949 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1948, i64 0, i64 8
  %XMM8.i1560 = bitcast %union.VectorReg* %1949 to %union.vec128_t*
  %1950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1951 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1950, i64 0, i64 9
  %XMM9.i1561 = bitcast %union.VectorReg* %1951 to %union.vec128_t*
  %1952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1953 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1952, i64 0, i64 10
  %XMM10.i1562 = bitcast %union.VectorReg* %1953 to %union.vec128_t*
  %1954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1955 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1954, i64 0, i64 11
  %XMM11.i1563 = bitcast %union.VectorReg* %1955 to %union.vec128_t*
  %1956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1957 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1956, i64 0, i64 12
  %XMM12.i1564 = bitcast %union.VectorReg* %1957 to %union.vec128_t*
  %1958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1959 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1958, i64 0, i64 13
  %XMM13.i1565 = bitcast %union.VectorReg* %1959 to %union.vec128_t*
  %1960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1961 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1960, i64 0, i64 14
  %XMM14.i1566 = bitcast %union.VectorReg* %1961 to %union.vec128_t*
  %1962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1963 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1962, i64 0, i64 15
  %XMM15.i1567 = bitcast %union.VectorReg* %1963 to %union.vec128_t*
  %1964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1965 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1964, i32 0, i32 0
  %1966 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1965, i64 0, i64 0
  %ST0.i1568 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1966, i32 0, i32 1
  %1967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1968 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1967, i32 0, i32 0
  %1969 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1968, i64 0, i64 1
  %ST1.i1569 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1969, i32 0, i32 1
  %1970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1971 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1970, i32 0, i32 0
  %1972 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1971, i64 0, i64 2
  %ST2.i1570 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1972, i32 0, i32 1
  %1973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1974 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1973, i32 0, i32 0
  %1975 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1974, i64 0, i64 3
  %ST3.i1571 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1975, i32 0, i32 1
  %1976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1977 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1976, i32 0, i32 0
  %1978 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1977, i64 0, i64 4
  %ST4.i1572 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1978, i32 0, i32 1
  %1979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1980 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1979, i32 0, i32 0
  %1981 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1980, i64 0, i64 5
  %ST5.i1573 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1981, i32 0, i32 1
  %1982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1983 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1982, i32 0, i32 0
  %1984 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1983, i64 0, i64 6
  %ST6.i1574 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1984, i32 0, i32 1
  %1985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1986 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1985, i32 0, i32 0
  %1987 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1986, i64 0, i64 7
  %ST7.i1575 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1987, i32 0, i32 1
  %1988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1989 = getelementptr inbounds %struct.MMX, %struct.MMX* %1988, i32 0, i32 0
  %1990 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1989, i64 0, i64 0
  %1991 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1990, i32 0, i32 1
  %1992 = bitcast %union.vec64_t* %1991 to %struct.uint64v1_t*
  %1993 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1992, i32 0, i32 0
  %MM0.i1576 = getelementptr inbounds [1 x i64], [1 x i64]* %1993, i64 0, i64 0
  %1994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1995 = getelementptr inbounds %struct.MMX, %struct.MMX* %1994, i32 0, i32 0
  %1996 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1995, i64 0, i64 1
  %1997 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1996, i32 0, i32 1
  %1998 = bitcast %union.vec64_t* %1997 to %struct.uint64v1_t*
  %1999 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1998, i32 0, i32 0
  %MM1.i1577 = getelementptr inbounds [1 x i64], [1 x i64]* %1999, i64 0, i64 0
  %2000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %2001 = getelementptr inbounds %struct.MMX, %struct.MMX* %2000, i32 0, i32 0
  %2002 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %2001, i64 0, i64 2
  %2003 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %2002, i32 0, i32 1
  %2004 = bitcast %union.vec64_t* %2003 to %struct.uint64v1_t*
  %2005 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %2004, i32 0, i32 0
  %MM2.i1578 = getelementptr inbounds [1 x i64], [1 x i64]* %2005, i64 0, i64 0
  %2006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %2007 = getelementptr inbounds %struct.MMX, %struct.MMX* %2006, i32 0, i32 0
  %2008 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %2007, i64 0, i64 3
  %2009 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %2008, i32 0, i32 1
  %2010 = bitcast %union.vec64_t* %2009 to %struct.uint64v1_t*
  %2011 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %2010, i32 0, i32 0
  %MM3.i1579 = getelementptr inbounds [1 x i64], [1 x i64]* %2011, i64 0, i64 0
  %2012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %2013 = getelementptr inbounds %struct.MMX, %struct.MMX* %2012, i32 0, i32 0
  %2014 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %2013, i64 0, i64 4
  %2015 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %2014, i32 0, i32 1
  %2016 = bitcast %union.vec64_t* %2015 to %struct.uint64v1_t*
  %2017 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %2016, i32 0, i32 0
  %MM4.i1580 = getelementptr inbounds [1 x i64], [1 x i64]* %2017, i64 0, i64 0
  %2018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %2019 = getelementptr inbounds %struct.MMX, %struct.MMX* %2018, i32 0, i32 0
  %2020 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %2019, i64 0, i64 5
  %2021 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %2020, i32 0, i32 1
  %2022 = bitcast %union.vec64_t* %2021 to %struct.uint64v1_t*
  %2023 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %2022, i32 0, i32 0
  %MM5.i1581 = getelementptr inbounds [1 x i64], [1 x i64]* %2023, i64 0, i64 0
  %2024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %2025 = getelementptr inbounds %struct.MMX, %struct.MMX* %2024, i32 0, i32 0
  %2026 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %2025, i64 0, i64 6
  %2027 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %2026, i32 0, i32 1
  %2028 = bitcast %union.vec64_t* %2027 to %struct.uint64v1_t*
  %2029 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %2028, i32 0, i32 0
  %MM6.i1582 = getelementptr inbounds [1 x i64], [1 x i64]* %2029, i64 0, i64 0
  %2030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %2031 = getelementptr inbounds %struct.MMX, %struct.MMX* %2030, i32 0, i32 0
  %2032 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %2031, i64 0, i64 7
  %2033 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %2032, i32 0, i32 1
  %2034 = bitcast %union.vec64_t* %2033 to %struct.uint64v1_t*
  %2035 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %2034, i32 0, i32 0
  %MM7.i1583 = getelementptr inbounds [1 x i64], [1 x i64]* %2035, i64 0, i64 0
  %2036 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF.i1584 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %2036, i32 0, i32 5
  %2037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF.i1585 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %2037, i32 0, i32 1
  %2038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF.i1586 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %2038, i32 0, i32 11
  %2039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF.i1587 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %2039, i32 0, i32 13
  %2040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF.i1588 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %2040, i32 0, i32 3
  %2041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF.i1589 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %2041, i32 0, i32 9
  %2042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF.i1590 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %2042, i32 0, i32 7
  store i64* @DR0, i64** %_DR0.i1442, align 8, !noalias !2454
  store i64* @DR1, i64** %_DR1.i1443, align 8, !noalias !2454
  store i64* @DR2, i64** %_DR2.i1444, align 8, !noalias !2454
  store i64* @DR3, i64** %_DR3.i1445, align 8, !noalias !2454
  store i64* @DR4, i64** %_DR4.i1446, align 8, !noalias !2454
  store i64* @DR5, i64** %_DR5.i1447, align 8, !noalias !2454
  store i64* @DR6, i64** %_DR6.i1448, align 8, !noalias !2454
  store i64* @DR7, i64** %_DR7.i1449, align 8, !noalias !2454
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0.i1450, align 8, !noalias !2454
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1.i1451, align 8, !noalias !2454
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2.i1452, align 8, !noalias !2454
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3.i1453, align 8, !noalias !2454
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4.i1454, align 8, !noalias !2454
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8.i1455, align 8, !noalias !2454
  %2043 = bitcast %"class.std::bitset"* %YMM0.i1536 to double*
  %2044 = load double, double* %2043, !alias.scope !2458, !noalias !2459
  %2045 = load i64, i64* %RSP.i1517, !alias.scope !2458, !noalias !2459
  %2046 = load %struct.Memory*, %struct.Memory** %MEMORY.i1441, !noalias !2454
  %2047 = inttoptr i64 %2045 to i64*
  %2048 = load i64, i64* %2047
  store i64 %2048, i64* %PC.i1456, !alias.scope !2458, !noalias !2459
  %2049 = add i64 %2045, 8
  store i64 %2049, i64* %RSP.i1517, !alias.scope !2458, !noalias !2459
  %2050 = call double @sqrt(double %2044)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0.i1536, !alias.scope !2458, !noalias !2459
  %2051 = bitcast %"class.std::bitset"* %YMM0.i1536 to double*
  store double %2050, double* %2051, !alias.scope !2458, !noalias !2459
  %2052 = load %struct.Memory*, %struct.Memory** %MEMORY.i1441, !noalias !2454
  %2053 = bitcast %struct.State** %state.i1432 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2053)
  %2054 = bitcast i64* %curr_pc.i1433 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2054)
  %2055 = bitcast %struct.Memory** %memory.i1434 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2055)
  call void @llvm.lifetime.end(i64 1, i8* %BRANCH_TAKEN.i1435)
  %2056 = bitcast i64* %SS_BASE.i1436 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2056)
  %2057 = bitcast i64* %ES_BASE.i1437 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2057)
  %2058 = bitcast i64* %DS_BASE.i1438 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2058)
  %2059 = bitcast i64* %CS_BASE.i1439 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2059)
  %2060 = bitcast %struct.State** %STATE.i1440 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2060)
  %2061 = bitcast %struct.Memory** %MEMORY.i1441 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2061)
  %2062 = bitcast i64** %_DR0.i1442 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2062)
  %2063 = bitcast i64** %_DR1.i1443 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2063)
  %2064 = bitcast i64** %_DR2.i1444 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2064)
  %2065 = bitcast i64** %_DR3.i1445 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2065)
  %2066 = bitcast i64** %_DR4.i1446 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2066)
  %2067 = bitcast i64** %_DR5.i1447 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2067)
  %2068 = bitcast i64** %_DR6.i1448 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2068)
  %2069 = bitcast i64** %_DR7.i1449 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2069)
  %2070 = bitcast i64** %CR0.i1450 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2070)
  %2071 = bitcast i64** %CR1.i1451 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2071)
  %2072 = bitcast i64** %CR2.i1452 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2072)
  %2073 = bitcast i64** %CR3.i1453 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2073)
  %2074 = bitcast i64** %CR4.i1454 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2074)
  %2075 = bitcast i64** %CR8.i1455 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2075)
  %2076 = load i64, i64* %RBP
  %2077 = sub i64 %2076, 144
  %2078 = bitcast %union.vec128_t* %XMM0 to i8*
  %2079 = load i64, i64* %PC
  %2080 = add i64 %2079, 8
  store i64 %2080, i64* %PC
  %2081 = bitcast i8* %2078 to double*
  %2082 = load double, double* %2081, align 1
  %2083 = inttoptr i64 %2077 to double*
  store double %2082, double* %2083
  %2084 = load i64, i64* %RBP
  %2085 = sub i64 %2084, 24
  %2086 = load i64, i64* %PC
  %2087 = add i64 %2086, 4
  store i64 %2087, i64* %PC
  %2088 = inttoptr i64 %2085 to i64*
  %2089 = load i64, i64* %2088
  store i64 %2089, i64* %RAX, align 8, !tbaa !2428
  %2090 = load i64, i64* %RAX
  %2091 = load i64, i64* %PC
  %2092 = add i64 %2091, 4
  store i64 %2092, i64* %PC
  %2093 = add i64 1, %2090
  store i64 %2093, i64* %RAX, align 8, !tbaa !2428
  %2094 = icmp ult i64 %2093, %2090
  %2095 = icmp ult i64 %2093, 1
  %2096 = or i1 %2094, %2095
  %2097 = zext i1 %2096 to i8
  %2098 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2097, i8* %2098, align 1, !tbaa !2434
  %2099 = trunc i64 %2093 to i32
  %2100 = and i32 %2099, 255
  %2101 = call i32 @llvm.ctpop.i32(i32 %2100) #17
  %2102 = trunc i32 %2101 to i8
  %2103 = and i8 %2102, 1
  %2104 = xor i8 %2103, 1
  %2105 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2104, i8* %2105, align 1, !tbaa !2448
  %2106 = xor i64 1, %2090
  %2107 = xor i64 %2106, %2093
  %2108 = lshr i64 %2107, 4
  %2109 = trunc i64 %2108 to i8
  %2110 = and i8 %2109, 1
  %2111 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2110, i8* %2111, align 1, !tbaa !2449
  %2112 = icmp eq i64 %2093, 0
  %2113 = zext i1 %2112 to i8
  %2114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2113, i8* %2114, align 1, !tbaa !2450
  %2115 = lshr i64 %2093, 63
  %2116 = trunc i64 %2115 to i8
  %2117 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2116, i8* %2117, align 1, !tbaa !2451
  %2118 = lshr i64 %2090, 63
  %2119 = xor i64 %2115, %2118
  %2120 = add nuw nsw i64 %2119, %2115
  %2121 = icmp eq i64 %2120, 2
  %2122 = zext i1 %2121 to i8
  %2123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2122, i8* %2123, align 1, !tbaa !2452
  %2124 = load i64, i64* %RBP
  %2125 = sub i64 %2124, 24
  %2126 = load i64, i64* %RAX
  %2127 = load i64, i64* %PC
  %2128 = add i64 %2127, 4
  store i64 %2128, i64* %PC
  %2129 = inttoptr i64 %2125 to i64*
  store i64 %2126, i64* %2129
  %2130 = load i64, i64* %PC
  %2131 = sub i64 %2130, 66
  %2132 = load i64, i64* %PC
  %2133 = add i64 %2132, 5
  store i64 %2133, i64* %PC
  %2134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2131, i64* %2134, align 8, !tbaa !2428
  br label %block_4014ee

block_401535:                                     ; preds = %block_4014ee
  %2135 = load i64, i64* %RBP
  %2136 = sub i64 %2135, 176
  %2137 = load i64, i64* %PC
  %2138 = add i64 %2137, 6
  store i64 %2138, i64* %PC
  %2139 = inttoptr i64 %2136 to i32*
  %2140 = load i32, i32* %2139
  %2141 = zext i32 %2140 to i64
  store i64 %2141, i64* %RAX, align 8, !tbaa !2428
  %2142 = load i32, i32* %EAX
  %2143 = zext i32 %2142 to i64
  %2144 = load i64, i64* %RBP
  %2145 = sub i64 %2144, 172
  %2146 = load i64, i64* %PC
  %2147 = add i64 %2146, 6
  store i64 %2147, i64* %PC
  %2148 = inttoptr i64 %2145 to i32*
  %2149 = load i32, i32* %2148
  %2150 = sub i32 %2142, %2149
  %2151 = icmp ult i32 %2142, %2149
  %2152 = zext i1 %2151 to i8
  %2153 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2152, i8* %2153, align 1, !tbaa !2434
  %2154 = and i32 %2150, 255
  %2155 = call i32 @llvm.ctpop.i32(i32 %2154) #17
  %2156 = trunc i32 %2155 to i8
  %2157 = and i8 %2156, 1
  %2158 = xor i8 %2157, 1
  %2159 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2158, i8* %2159, align 1, !tbaa !2448
  %2160 = xor i32 %2149, %2142
  %2161 = xor i32 %2160, %2150
  %2162 = lshr i32 %2161, 4
  %2163 = trunc i32 %2162 to i8
  %2164 = and i8 %2163, 1
  %2165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2164, i8* %2165, align 1, !tbaa !2449
  %2166 = icmp eq i32 %2150, 0
  %2167 = zext i1 %2166 to i8
  %2168 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2167, i8* %2168, align 1, !tbaa !2450
  %2169 = lshr i32 %2150, 31
  %2170 = trunc i32 %2169 to i8
  %2171 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2170, i8* %2171, align 1, !tbaa !2451
  %2172 = lshr i32 %2142, 31
  %2173 = lshr i32 %2149, 31
  %2174 = xor i32 %2173, %2172
  %2175 = xor i32 %2169, %2172
  %2176 = add nuw nsw i32 %2175, %2174
  %2177 = icmp eq i32 %2176, 2
  %2178 = zext i1 %2177 to i8
  %2179 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2178, i8* %2179, align 1, !tbaa !2452
  %2180 = load i64, i64* %PC
  %2181 = add i64 %2180, 63
  %2182 = load i64, i64* %PC
  %2183 = add i64 %2182, 6
  %2184 = load i64, i64* %PC
  %2185 = add i64 %2184, 6
  store i64 %2185, i64* %PC
  %2186 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2187 = load i8, i8* %2186, align 1, !tbaa !2450
  %2188 = icmp eq i8 %2187, 0
  %2189 = zext i1 %2188 to i8
  store i8 %2189, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %2190 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2191 = select i1 %2188, i64 %2181, i64 %2183
  store i64 %2191, i64* %2190, align 8, !tbaa !2428
  %2192 = load i8, i8* %BRANCH_TAKEN
  %2193 = icmp eq i8 %2192, 1
  br i1 %2193, label %block_401580, label %block_401547

block_4012e2:                                     ; preds = %block_4012a7
  %2194 = sub i64 %4710, 176
  %2195 = load i64, i64* %PC
  %2196 = add i64 %2195, 6
  store i64 %2196, i64* %PC
  %2197 = inttoptr i64 %2194 to i32*
  %2198 = load i32, i32* %2197
  %2199 = zext i32 %2198 to i64
  store i64 %2199, i64* %RAX, align 8, !tbaa !2428
  %2200 = load i32, i32* %EAX
  %2201 = zext i32 %2200 to i64
  %2202 = load i64, i64* %RBP
  %2203 = sub i64 %2202, 172
  %2204 = load i64, i64* %PC
  %2205 = add i64 %2204, 6
  store i64 %2205, i64* %PC
  %2206 = inttoptr i64 %2203 to i32*
  %2207 = load i32, i32* %2206
  %2208 = sub i32 %2200, %2207
  %2209 = icmp ult i32 %2200, %2207
  %2210 = zext i1 %2209 to i8
  %2211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2210, i8* %2211, align 1, !tbaa !2434
  %2212 = and i32 %2208, 255
  %2213 = call i32 @llvm.ctpop.i32(i32 %2212) #17
  %2214 = trunc i32 %2213 to i8
  %2215 = and i8 %2214, 1
  %2216 = xor i8 %2215, 1
  %2217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2216, i8* %2217, align 1, !tbaa !2448
  %2218 = xor i32 %2207, %2200
  %2219 = xor i32 %2218, %2208
  %2220 = lshr i32 %2219, 4
  %2221 = trunc i32 %2220 to i8
  %2222 = and i8 %2221, 1
  %2223 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2222, i8* %2223, align 1, !tbaa !2449
  %2224 = icmp eq i32 %2208, 0
  %2225 = zext i1 %2224 to i8
  %2226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2225, i8* %2226, align 1, !tbaa !2450
  %2227 = lshr i32 %2208, 31
  %2228 = trunc i32 %2227 to i8
  %2229 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2228, i8* %2229, align 1, !tbaa !2451
  %2230 = lshr i32 %2200, 31
  %2231 = lshr i32 %2207, 31
  %2232 = xor i32 %2231, %2230
  %2233 = xor i32 %2227, %2230
  %2234 = add nuw nsw i32 %2233, %2232
  %2235 = icmp eq i32 %2234, 2
  %2236 = zext i1 %2235 to i8
  %2237 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2236, i8* %2237, align 1, !tbaa !2452
  %2238 = load i64, i64* %PC
  %2239 = add i64 %2238, 63
  %2240 = load i64, i64* %PC
  %2241 = add i64 %2240, 6
  %2242 = load i64, i64* %PC
  %2243 = add i64 %2242, 6
  store i64 %2243, i64* %PC
  %2244 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2245 = load i8, i8* %2244, align 1, !tbaa !2450
  %2246 = icmp eq i8 %2245, 0
  %2247 = zext i1 %2246 to i8
  store i8 %2247, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %2248 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2249 = select i1 %2246, i64 %2239, i64 %2241
  store i64 %2249, i64* %2248, align 8, !tbaa !2428
  %2250 = load i8, i8* %BRANCH_TAKEN
  %2251 = icmp eq i8 %2250, 1
  br i1 %2251, label %block_40132d, label %block_4012f4

block_400e60:                                     ; preds = %block_400dc1
  %2252 = load i64, i64* %RBP
  %2253 = sub i64 %2252, 176
  %2254 = load i64, i64* %PC
  %2255 = add i64 %2254, 6
  store i64 %2255, i64* %PC
  %2256 = inttoptr i64 %2253 to i32*
  %2257 = load i32, i32* %2256
  %2258 = zext i32 %2257 to i64
  store i64 %2258, i64* %RAX, align 8, !tbaa !2428
  %2259 = load i32, i32* %EAX
  %2260 = zext i32 %2259 to i64
  %2261 = load i64, i64* %RBP
  %2262 = sub i64 %2261, 172
  %2263 = load i64, i64* %PC
  %2264 = add i64 %2263, 6
  store i64 %2264, i64* %PC
  %2265 = inttoptr i64 %2262 to i32*
  %2266 = load i32, i32* %2265
  %2267 = sub i32 %2259, %2266
  %2268 = icmp ult i32 %2259, %2266
  %2269 = zext i1 %2268 to i8
  %2270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2269, i8* %2270, align 1, !tbaa !2434
  %2271 = and i32 %2267, 255
  %2272 = call i32 @llvm.ctpop.i32(i32 %2271) #17
  %2273 = trunc i32 %2272 to i8
  %2274 = and i8 %2273, 1
  %2275 = xor i8 %2274, 1
  %2276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2275, i8* %2276, align 1, !tbaa !2448
  %2277 = xor i32 %2266, %2259
  %2278 = xor i32 %2277, %2267
  %2279 = lshr i32 %2278, 4
  %2280 = trunc i32 %2279 to i8
  %2281 = and i8 %2280, 1
  %2282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2281, i8* %2282, align 1, !tbaa !2449
  %2283 = icmp eq i32 %2267, 0
  %2284 = zext i1 %2283 to i8
  %2285 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2284, i8* %2285, align 1, !tbaa !2450
  %2286 = lshr i32 %2267, 31
  %2287 = trunc i32 %2286 to i8
  %2288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2287, i8* %2288, align 1, !tbaa !2451
  %2289 = lshr i32 %2259, 31
  %2290 = lshr i32 %2266, 31
  %2291 = xor i32 %2290, %2289
  %2292 = xor i32 %2286, %2289
  %2293 = add nuw nsw i32 %2292, %2291
  %2294 = icmp eq i32 %2293, 2
  %2295 = zext i1 %2294 to i8
  %2296 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2295, i8* %2296, align 1, !tbaa !2452
  %2297 = load i64, i64* %PC
  %2298 = add i64 %2297, 54
  %2299 = load i64, i64* %PC
  %2300 = add i64 %2299, 6
  %2301 = load i64, i64* %PC
  %2302 = add i64 %2301, 6
  store i64 %2302, i64* %PC
  %2303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2304 = load i8, i8* %2303, align 1, !tbaa !2450
  %2305 = icmp eq i8 %2304, 0
  %2306 = zext i1 %2305 to i8
  store i8 %2306, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %2307 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2308 = select i1 %2305, i64 %2298, i64 %2300
  store i64 %2308, i64* %2307, align 8, !tbaa !2428
  %2309 = load i8, i8* %BRANCH_TAKEN
  %2310 = icmp eq i8 %2309, 1
  br i1 %2310, label %block_400ea2, label %block_400e72

block_400ddd:                                     ; preds = %block_400dcf
  store i32 2, i32* bitcast (%J_type* @J to i32*)
  %2311 = load i64, i64* %PC
  %2312 = add i64 %2311, 16
  %2313 = load i64, i64* %PC
  %2314 = add i64 %2313, 5
  store i64 %2314, i64* %PC
  %2315 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2312, i64* %2315, align 8, !tbaa !2428
  br label %block_400df8

block_400d67:                                     ; preds = %block_400d39
  %2316 = load i64, i64* %RBP
  %2317 = sub i64 %2316, 176
  %2318 = load i64, i64* %PC
  %2319 = add i64 %2318, 6
  store i64 %2319, i64* %PC
  %2320 = inttoptr i64 %2317 to i32*
  %2321 = load i32, i32* %2320
  %2322 = zext i32 %2321 to i64
  store i64 %2322, i64* %RAX, align 8, !tbaa !2428
  %2323 = load i32, i32* %EAX
  %2324 = zext i32 %2323 to i64
  %2325 = load i64, i64* %RBP
  %2326 = sub i64 %2325, 172
  %2327 = load i64, i64* %PC
  %2328 = add i64 %2327, 6
  store i64 %2328, i64* %PC
  %2329 = inttoptr i64 %2326 to i32*
  %2330 = load i32, i32* %2329
  %2331 = sub i32 %2323, %2330
  %2332 = icmp ult i32 %2323, %2330
  %2333 = zext i1 %2332 to i8
  %2334 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2333, i8* %2334, align 1, !tbaa !2434
  %2335 = and i32 %2331, 255
  %2336 = call i32 @llvm.ctpop.i32(i32 %2335) #17
  %2337 = trunc i32 %2336 to i8
  %2338 = and i8 %2337, 1
  %2339 = xor i8 %2338, 1
  %2340 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2339, i8* %2340, align 1, !tbaa !2448
  %2341 = xor i32 %2330, %2323
  %2342 = xor i32 %2341, %2331
  %2343 = lshr i32 %2342, 4
  %2344 = trunc i32 %2343 to i8
  %2345 = and i8 %2344, 1
  %2346 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2345, i8* %2346, align 1, !tbaa !2449
  %2347 = icmp eq i32 %2331, 0
  %2348 = zext i1 %2347 to i8
  %2349 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2348, i8* %2349, align 1, !tbaa !2450
  %2350 = lshr i32 %2331, 31
  %2351 = trunc i32 %2350 to i8
  %2352 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2351, i8* %2352, align 1, !tbaa !2451
  %2353 = lshr i32 %2323, 31
  %2354 = lshr i32 %2330, 31
  %2355 = xor i32 %2354, %2353
  %2356 = xor i32 %2350, %2353
  %2357 = add nuw nsw i32 %2356, %2355
  %2358 = icmp eq i32 %2357, 2
  %2359 = zext i1 %2358 to i8
  %2360 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2359, i8* %2360, align 1, !tbaa !2452
  %2361 = load i64, i64* %PC
  %2362 = add i64 %2361, 59
  %2363 = load i64, i64* %PC
  %2364 = add i64 %2363, 6
  %2365 = load i64, i64* %PC
  %2366 = add i64 %2365, 6
  store i64 %2366, i64* %PC
  %2367 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2368 = load i8, i8* %2367, align 1, !tbaa !2450
  %2369 = icmp eq i8 %2368, 0
  %2370 = zext i1 %2369 to i8
  store i8 %2370, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %2371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2372 = select i1 %2369, i64 %2362, i64 %2364
  store i64 %2372, i64* %2371, align 8, !tbaa !2428
  %2373 = load i8, i8* %BRANCH_TAKEN
  %2374 = icmp eq i8 %2373, 1
  br i1 %2374, label %block_400dae, label %block_400d79

block_400bdc:                                     ; preds = %block_400ba0, %block_400bea
  %MEMORY.4 = phi %struct.Memory* [ %MEMORY.27, %block_400ba0 ], [ %MEMORY.4, %block_400bea ]
  %2375 = load i64, i64* %RBP
  %2376 = sub i64 %2375, 24
  %2377 = load i64, i64* %PC
  %2378 = add i64 %2377, 4
  store i64 %2378, i64* %PC
  %2379 = inttoptr i64 %2376 to i64*
  %2380 = load i64, i64* %2379
  store i64 %2380, i64* %RAX, align 8, !tbaa !2428
  %2381 = load i64, i64* %RAX
  %2382 = load i64, i64* %RBP
  %2383 = sub i64 %2382, 40
  %2384 = load i64, i64* %PC
  %2385 = add i64 %2384, 4
  store i64 %2385, i64* %PC
  %2386 = inttoptr i64 %2383 to i64*
  %2387 = load i64, i64* %2386
  %2388 = sub i64 %2381, %2387
  %2389 = icmp ugt i64 %2387, %2381
  %2390 = zext i1 %2389 to i8
  %2391 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2390, i8* %2391, align 1, !tbaa !2434
  %2392 = trunc i64 %2388 to i32
  %2393 = and i32 %2392, 255
  %2394 = call i32 @llvm.ctpop.i32(i32 %2393) #17
  %2395 = trunc i32 %2394 to i8
  %2396 = and i8 %2395, 1
  %2397 = xor i8 %2396, 1
  %2398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2397, i8* %2398, align 1, !tbaa !2448
  %2399 = xor i64 %2387, %2381
  %2400 = xor i64 %2399, %2388
  %2401 = lshr i64 %2400, 4
  %2402 = trunc i64 %2401 to i8
  %2403 = and i8 %2402, 1
  %2404 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2403, i8* %2404, align 1, !tbaa !2449
  %2405 = icmp eq i64 %2388, 0
  %2406 = zext i1 %2405 to i8
  %2407 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2406, i8* %2407, align 1, !tbaa !2450
  %2408 = lshr i64 %2388, 63
  %2409 = trunc i64 %2408 to i8
  %2410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2409, i8* %2410, align 1, !tbaa !2451
  %2411 = lshr i64 %2381, 63
  %2412 = lshr i64 %2387, 63
  %2413 = xor i64 %2412, %2411
  %2414 = xor i64 %2408, %2411
  %2415 = add nuw nsw i64 %2414, %2413
  %2416 = icmp eq i64 %2415, 2
  %2417 = zext i1 %2416 to i8
  %2418 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2417, i8* %2418, align 1, !tbaa !2452
  %2419 = load i64, i64* %PC
  %2420 = add i64 %2419, 262
  %2421 = load i64, i64* %PC
  %2422 = add i64 %2421, 6
  %2423 = load i64, i64* %PC
  %2424 = add i64 %2423, 6
  store i64 %2424, i64* %PC
  %2425 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2426 = load i8, i8* %2425, align 1, !tbaa !2450
  %2427 = icmp eq i8 %2426, 0
  %2428 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2429 = load i8, i8* %2428, align 1, !tbaa !2451
  %2430 = icmp ne i8 %2429, 0
  %2431 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2432 = load i8, i8* %2431, align 1, !tbaa !2452
  %2433 = icmp ne i8 %2432, 0
  %2434 = xor i1 %2430, %2433
  %2435 = xor i1 %2434, true
  %2436 = and i1 %2427, %2435
  %2437 = zext i1 %2436 to i8
  store i8 %2437, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %2438 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2439 = select i1 %2436, i64 %2420, i64 %2422
  store i64 %2439, i64* %2438, align 8, !tbaa !2428
  %2440 = load i8, i8* %BRANCH_TAKEN
  %2441 = icmp eq i8 %2440, 1
  br i1 %2441, label %block_400cea, label %block_400bea

block_4015d4:                                     ; preds = %block_4015a0
  %2442 = load i64, i64* %PC
  %2443 = sub i64 %2442, 3150
  %2444 = load i64, i64* %PC
  %2445 = add i64 %2444, 5
  store i64 %2445, i64* %PC
  %2446 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2443, i64* %2446, align 8, !tbaa !2428
  br label %block_400986

block_400e3f:                                     ; preds = %block_400e21
  store i32 0, i32* bitcast (%J_type* @J to i32*)
  br label %block_400e4a

block_400b78:                                     ; preds = %block_400b66
  %2447 = load i64, i64* %RBP
  %2448 = sub i64 %2447, 32
  %2449 = load i64, i64* %PC
  %2450 = add i64 %2449, 4
  store i64 %2450, i64* %PC
  %2451 = inttoptr i64 %2448 to i64*
  %2452 = load i64, i64* %2451
  store i64 %2452, i64* %RDI, align 8, !tbaa !2428
  %2453 = load i64, i64* %RBP
  %2454 = sub i64 %2453, 32
  %2455 = load i64, i64* %PC
  %2456 = add i64 %2455, 4
  store i64 %2456, i64* %PC
  %2457 = inttoptr i64 %2454 to i64*
  %2458 = load i64, i64* %2457
  store i64 %2458, i64* %RSI, align 8, !tbaa !2428
  %2459 = load i64, i64* %RBP
  %2460 = sub i64 %2459, 32
  %2461 = load i64, i64* %PC
  %2462 = add i64 %2461, 4
  store i64 %2462, i64* %PC
  %2463 = inttoptr i64 %2460 to i64*
  %2464 = load i64, i64* %2463
  store i64 %2464, i64* %RDX, align 8, !tbaa !2428
  %2465 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2466 = load i64, i64* %RBP
  %2467 = sub i64 %2466, 112
  %2468 = load i64, i64* %PC
  %2469 = add i64 %2468, 5
  store i64 %2469, i64* %PC
  %2470 = inttoptr i64 %2467 to double*
  %2471 = load double, double* %2470
  %2472 = bitcast i8* %2465 to double*
  store double %2471, double* %2472, align 1, !tbaa !2432
  %2473 = getelementptr inbounds i8, i8* %2465, i64 8
  %2474 = bitcast i8* %2473 to double*
  store double 0.000000e+00, double* %2474, align 1, !tbaa !2432
  %2475 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %2476 = load i64, i64* %RBP
  %2477 = sub i64 %2476, 120
  %2478 = load i64, i64* %PC
  %2479 = add i64 %2478, 5
  store i64 %2479, i64* %PC
  %2480 = inttoptr i64 %2477 to double*
  %2481 = load double, double* %2480
  %2482 = bitcast i8* %2475 to double*
  store double %2481, double* %2482, align 1, !tbaa !2432
  %2483 = getelementptr inbounds i8, i8* %2475, i64 8
  %2484 = bitcast i8* %2483 to double*
  store double 0.000000e+00, double* %2484, align 1, !tbaa !2432
  %2485 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %2486 = load i64, i64* %RBP
  %2487 = sub i64 %2486, 128
  %2488 = load i64, i64* %PC
  %2489 = add i64 %2488, 5
  store i64 %2489, i64* %PC
  %2490 = inttoptr i64 %2487 to double*
  %2491 = load double, double* %2490
  %2492 = bitcast i8* %2485 to double*
  store double %2491, double* %2492, align 1, !tbaa !2432
  %2493 = getelementptr inbounds i8, i8* %2485, i64 8
  %2494 = bitcast i8* %2493 to double*
  store double 0.000000e+00, double* %2494, align 1, !tbaa !2432
  %2495 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %2496 = load i64, i64* %RBP
  %2497 = sub i64 %2496, 136
  %2498 = load i64, i64* %PC
  %2499 = add i64 %2498, 8
  store i64 %2499, i64* %PC
  %2500 = inttoptr i64 %2497 to double*
  %2501 = load double, double* %2500
  %2502 = bitcast i8* %2495 to double*
  store double %2501, double* %2502, align 1, !tbaa !2432
  %2503 = getelementptr inbounds i8, i8* %2495, i64 8
  %2504 = bitcast i8* %2503 to double*
  store double 0.000000e+00, double* %2504, align 1, !tbaa !2432
  %2505 = load i64, i64* %PC
  %2506 = add i64 %2505, 2645
  %2507 = load i64, i64* %PC
  %2508 = add i64 %2507, 5
  %2509 = load i64, i64* %PC
  %2510 = add i64 %2509, 5
  store i64 %2510, i64* %PC
  %2511 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %2512 = load i64, i64* %2511, align 8, !tbaa !2428
  %2513 = add i64 %2512, -8
  %2514 = inttoptr i64 %2513 to i64*
  store i64 %2508, i64* %2514
  store i64 %2513, i64* %2511, align 8, !tbaa !2428
  %2515 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2506, i64* %2515, align 8, !tbaa !2428
  %2516 = load i64, i64* %PC
  %2517 = call %struct.Memory* @sub_4015f0_POUT_renamed_(%struct.State* %0, i64 %2516, %struct.Memory* %MEMORY.17)
  br label %block_400ba0

block_4015a0:                                     ; preds = %block_401580
  %2518 = load i64, i64* %RAX
  %2519 = load i32, i32* %EAX
  %2520 = zext i32 %2519 to i64
  %2521 = load i64, i64* %PC
  %2522 = add i64 %2521, 2
  store i64 %2522, i64* %PC
  %2523 = xor i64 %2520, %2518
  %2524 = trunc i64 %2523 to i32
  %2525 = and i64 %2523, 4294967295
  store i64 %2525, i64* %RAX, align 8, !tbaa !2428
  %2526 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2526, align 1, !tbaa !2434
  %2527 = and i32 %2524, 255
  %2528 = call i32 @llvm.ctpop.i32(i32 %2527) #17
  %2529 = trunc i32 %2528 to i8
  %2530 = and i8 %2529, 1
  %2531 = xor i8 %2530, 1
  %2532 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2531, i8* %2532, align 1, !tbaa !2448
  %2533 = icmp eq i32 %2524, 0
  %2534 = zext i1 %2533 to i8
  %2535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2534, i8* %2535, align 1, !tbaa !2450
  %2536 = lshr i32 %2524, 31
  %2537 = trunc i32 %2536 to i8
  %2538 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2537, i8* %2538, align 1, !tbaa !2451
  %2539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2539, align 1, !tbaa !2452
  %2540 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2540, align 1, !tbaa !2449
  %2541 = load i32, i32* %EAX
  %2542 = zext i32 %2541 to i64
  %2543 = load i64, i64* %PC
  %2544 = add i64 %2543, 2
  store i64 %2544, i64* %PC
  %2545 = and i64 %2542, 4294967295
  store i64 %2545, i64* %RDI, align 8, !tbaa !2428
  %2546 = load i64, i64* %PC
  %2547 = sub i64 %2546, 3700
  %2548 = load i64, i64* %PC
  %2549 = add i64 %2548, 5
  %2550 = load i64, i64* %PC
  %2551 = add i64 %2550, 5
  store i64 %2551, i64* %PC
  %2552 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %2553 = load i64, i64* %2552, align 8, !tbaa !2428
  %2554 = add i64 %2553, -8
  %2555 = inttoptr i64 %2554 to i64*
  store i64 %2549, i64* %2555
  store i64 %2554, i64* %2552, align 8, !tbaa !2428
  %2556 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2547, i64* %2556, align 8, !tbaa !2428
  %2557 = load i64, i64* %PC
  %2558 = call %struct.Memory* @ext_602128_time(%struct.State* %0, i64 %2557, %struct.Memory* %MEMORY.28)
  %2559 = load i64, i64* %PC
  %2560 = add i64 %2559, 10
  store i64 %2560, i64* %PC
  store i64 add (i64 ptrtoint (%seg_401900__rodata_type* @seg_401900__rodata to i64), i64 101), i64* %RDI, align 8, !tbaa !2428
  %2561 = load i64, i64* %RBP
  %2562 = sub i64 %2561, 200
  %2563 = load i64, i64* %RAX
  %2564 = load i64, i64* %PC
  %2565 = add i64 %2564, 7
  store i64 %2565, i64* %PC
  %2566 = inttoptr i64 %2562 to i64*
  store i64 %2563, i64* %2566
  %2567 = load i64, i64* %PC
  %2568 = add i64 %2567, 2
  store i64 %2568, i64* %PC
  store i8 0, i8* %AL, align 1, !tbaa !2453
  %2569 = load i64, i64* %PC
  %2570 = sub i64 %2569, 3788
  %2571 = load i64, i64* %PC
  %2572 = add i64 %2571, 5
  %2573 = load i64, i64* %PC
  %2574 = add i64 %2573, 5
  store i64 %2574, i64* %PC
  %2575 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %2576 = load i64, i64* %2575, align 8, !tbaa !2428
  %2577 = add i64 %2576, -8
  %2578 = inttoptr i64 %2577 to i64*
  store i64 %2572, i64* %2578
  store i64 %2577, i64* %2575, align 8, !tbaa !2428
  %2579 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2570, i64* %2579, align 8, !tbaa !2428
  %2580 = load i64, i64* %PC
  %2581 = call %struct.Memory* @ext_4006f0_printf(%struct.State* %0, i64 %2580, %struct.Memory* %2558)
  %2582 = load i64, i64* %RBP
  %2583 = sub i64 %2582, 208
  %2584 = load i64, i64* %PC
  %2585 = add i64 %2584, 7
  store i64 %2585, i64* %PC
  %2586 = inttoptr i64 %2583 to i32*
  %2587 = load i32, i32* %2586
  %2588 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2588, align 1, !tbaa !2434
  %2589 = and i32 %2587, 255
  %2590 = call i32 @llvm.ctpop.i32(i32 %2589) #17
  %2591 = trunc i32 %2590 to i8
  %2592 = and i8 %2591, 1
  %2593 = xor i8 %2592, 1
  %2594 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2593, i8* %2594, align 1, !tbaa !2448
  %2595 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2595, align 1, !tbaa !2449
  %2596 = icmp eq i32 %2587, 0
  %2597 = zext i1 %2596 to i8
  %2598 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2597, i8* %2598, align 1, !tbaa !2450
  %2599 = lshr i32 %2587, 31
  %2600 = trunc i32 %2599 to i8
  %2601 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2600, i8* %2601, align 1, !tbaa !2451
  %2602 = lshr i32 %2587, 31
  %2603 = xor i32 %2599, %2602
  %2604 = add nuw nsw i32 %2603, %2602
  %2605 = icmp eq i32 %2604, 2
  %2606 = zext i1 %2605 to i8
  %2607 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2606, i8* %2607, align 1, !tbaa !2452
  %2608 = load i64, i64* %RBP
  %2609 = sub i64 %2608, 316
  %2610 = load i32, i32* %EAX
  %2611 = zext i32 %2610 to i64
  %2612 = load i64, i64* %PC
  %2613 = add i64 %2612, 6
  store i64 %2613, i64* %PC
  %2614 = inttoptr i64 %2609 to i32*
  store i32 %2610, i32* %2614
  %2615 = load i64, i64* %PC
  %2616 = add i64 %2615, 11
  %2617 = load i64, i64* %PC
  %2618 = add i64 %2617, 6
  %2619 = load i64, i64* %PC
  %2620 = add i64 %2619, 6
  store i64 %2620, i64* %PC
  %2621 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2622 = load i8, i8* %2621, align 1, !tbaa !2450
  store i8 %2622, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %2623 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2624 = icmp ne i8 %2622, 0
  %2625 = select i1 %2624, i64 %2616, i64 %2618
  store i64 %2625, i64* %2623, align 8, !tbaa !2428
  %2626 = load i8, i8* %BRANCH_TAKEN
  %2627 = icmp eq i8 %2626, 1
  br i1 %2627, label %block_4015d9, label %block_4015d4

block_400cfc:                                     ; preds = %block_400cea
  %2628 = load i64, i64* %RBP
  %2629 = sub i64 %2628, 40
  %2630 = load i64, i64* %PC
  %2631 = add i64 %2630, 4
  store i64 %2631, i64* %PC
  %2632 = inttoptr i64 %2629 to i64*
  %2633 = load i64, i64* %2632
  store i64 %2633, i64* %RDI, align 8, !tbaa !2428
  %2634 = load i64, i64* %RBP
  %2635 = sub i64 %2634, 48
  %2636 = load i64, i64* %PC
  %2637 = add i64 %2636, 4
  store i64 %2637, i64* %PC
  %2638 = inttoptr i64 %2635 to i64*
  %2639 = load i64, i64* %2638
  store i64 %2639, i64* %RSI, align 8, !tbaa !2428
  %2640 = load i64, i64* %RBP
  %2641 = sub i64 %2640, 40
  %2642 = load i64, i64* %PC
  %2643 = add i64 %2642, 4
  store i64 %2643, i64* %PC
  %2644 = inttoptr i64 %2641 to i64*
  %2645 = load i64, i64* %2644
  store i64 %2645, i64* %RDX, align 8, !tbaa !2428
  %2646 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2647 = load i64, i64* %PC
  %2648 = add i64 %2647, 9
  store i64 %2648, i64* %PC
  %2649 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 8) to double*)
  %2650 = bitcast i8* %2646 to double*
  store double %2649, double* %2650, align 1, !tbaa !2432
  %2651 = getelementptr inbounds i8, i8* %2646, i64 8
  %2652 = bitcast i8* %2651 to double*
  store double 0.000000e+00, double* %2652, align 1, !tbaa !2432
  %2653 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %2654 = load i64, i64* %PC
  %2655 = add i64 %2654, 9
  store i64 %2655, i64* %PC
  %2656 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 16) to double*)
  %2657 = bitcast i8* %2653 to double*
  store double %2656, double* %2657, align 1, !tbaa !2432
  %2658 = getelementptr inbounds i8, i8* %2653, i64 8
  %2659 = bitcast i8* %2658 to double*
  store double 0.000000e+00, double* %2659, align 1, !tbaa !2432
  %2660 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %2661 = load i64, i64* %PC
  %2662 = add i64 %2661, 9
  store i64 %2662, i64* %PC
  %2663 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 24) to double*)
  %2664 = bitcast i8* %2660 to double*
  store double %2663, double* %2664, align 1, !tbaa !2432
  %2665 = getelementptr inbounds i8, i8* %2660, i64 8
  %2666 = bitcast i8* %2665 to double*
  store double 0.000000e+00, double* %2666, align 1, !tbaa !2432
  %2667 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %2668 = load i64, i64* %PC
  %2669 = add i64 %2668, 9
  store i64 %2669, i64* %PC
  %2670 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 32) to double*)
  %2671 = bitcast i8* %2667 to double*
  store double %2670, double* %2671, align 1, !tbaa !2432
  %2672 = getelementptr inbounds i8, i8* %2667, i64 8
  %2673 = bitcast i8* %2672 to double*
  store double 0.000000e+00, double* %2673, align 1, !tbaa !2432
  %2674 = load i64, i64* %PC
  %2675 = add i64 %2674, 2244
  %2676 = load i64, i64* %PC
  %2677 = add i64 %2676, 5
  %2678 = load i64, i64* %PC
  %2679 = add i64 %2678, 5
  store i64 %2679, i64* %PC
  %2680 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %2681 = load i64, i64* %2680, align 8, !tbaa !2428
  %2682 = add i64 %2681, -8
  %2683 = inttoptr i64 %2682 to i64*
  store i64 %2677, i64* %2683
  store i64 %2682, i64* %2680, align 8, !tbaa !2428
  %2684 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2675, i64* %2684, align 8, !tbaa !2428
  %2685 = load i64, i64* %PC
  %2686 = call %struct.Memory* @sub_4015f0_POUT_renamed_(%struct.State* %0, i64 %2685, %struct.Memory* %MEMORY.4)
  br label %block_400d31

block_4008ff:                                     ; preds = %block_4008d5
  %2687 = load i64, i64* %RBP
  %2688 = sub i64 %2687, 16
  %2689 = load i64, i64* %PC
  %2690 = add i64 %2689, 4
  store i64 %2690, i64* %PC
  %2691 = inttoptr i64 %2688 to i64*
  %2692 = load i64, i64* %2691
  store i64 %2692, i64* %RAX, align 8, !tbaa !2428
  %2693 = load i64, i64* %RBP
  %2694 = sub i64 %2693, 172
  %2695 = load i64, i64* %PC
  %2696 = add i64 %2695, 7
  store i64 %2696, i64* %PC
  %2697 = inttoptr i64 %2694 to i32*
  %2698 = load i32, i32* %2697
  %2699 = sext i32 %2698 to i64
  store i64 %2699, i64* %RCX, align 8, !tbaa !2428
  %2700 = load i64, i64* %RAX
  %2701 = load i64, i64* %RCX
  %2702 = mul i64 %2701, 8
  %2703 = add i64 %2702, %2700
  %2704 = load i64, i64* %PC
  %2705 = add i64 %2704, 4
  store i64 %2705, i64* %PC
  %2706 = inttoptr i64 %2703 to i64*
  %2707 = load i64, i64* %2706
  store i64 %2707, i64* %RDI, align 8, !tbaa !2428
  %2708 = load i64, i64* %PC
  %2709 = sub i64 %2708, 462
  %2710 = load i64, i64* %PC
  %2711 = add i64 %2710, 5
  %2712 = load i64, i64* %PC
  %2713 = add i64 %2712, 5
  store i64 %2713, i64* %PC
  %2714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %2715 = load i64, i64* %2714, align 8, !tbaa !2428
  %2716 = add i64 %2715, -8
  %2717 = inttoptr i64 %2716 to i64*
  store i64 %2711, i64* %2717
  store i64 %2716, i64* %2714, align 8, !tbaa !2428
  %2718 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2709, i64* %2718, align 8, !tbaa !2428
  %2719 = load i64, i64* %PC
  %2720 = call %struct.Memory* @ext_602190_atol(%struct.State* %0, i64 %2719, %struct.Memory* %3096)
  %2721 = load i64, i64* %RAX
  %2722 = load i64, i64* %PC
  %2723 = add i64 %2722, 4
  store i64 %2723, i64* %PC
  %2724 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2724, align 1, !tbaa !2434
  %2725 = trunc i64 %2721 to i32
  %2726 = and i32 %2725, 255
  %2727 = call i32 @llvm.ctpop.i32(i32 %2726) #17
  %2728 = trunc i32 %2727 to i8
  %2729 = and i8 %2728, 1
  %2730 = xor i8 %2729, 1
  %2731 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2730, i8* %2731, align 1, !tbaa !2448
  %2732 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2732, align 1, !tbaa !2449
  %2733 = icmp eq i64 %2721, 0
  %2734 = zext i1 %2733 to i8
  %2735 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2734, i8* %2735, align 1, !tbaa !2450
  %2736 = lshr i64 %2721, 63
  %2737 = trunc i64 %2736 to i8
  %2738 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2737, i8* %2738, align 1, !tbaa !2451
  %2739 = lshr i64 %2721, 63
  %2740 = xor i64 %2736, %2739
  %2741 = add nuw nsw i64 %2740, %2739
  %2742 = icmp eq i64 %2741, 2
  %2743 = zext i1 %2742 to i8
  %2744 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2743, i8* %2744, align 1, !tbaa !2452
  %2745 = load i64, i64* %PC
  %2746 = add i64 %2745, 38
  %2747 = load i64, i64* %PC
  %2748 = add i64 %2747, 6
  %2749 = load i64, i64* %PC
  %2750 = add i64 %2749, 6
  store i64 %2750, i64* %PC
  %2751 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2752 = load i8, i8* %2751, align 1, !tbaa !2450
  %2753 = icmp ne i8 %2752, 0
  %2754 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2755 = load i8, i8* %2754, align 1, !tbaa !2451
  %2756 = icmp ne i8 %2755, 0
  %2757 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2758 = load i8, i8* %2757, align 1, !tbaa !2452
  %2759 = icmp ne i8 %2758, 0
  %2760 = xor i1 %2756, %2759
  %2761 = or i1 %2753, %2760
  %2762 = zext i1 %2761 to i8
  store i8 %2762, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %2763 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2764 = select i1 %2761, i64 %2746, i64 %2748
  store i64 %2764, i64* %2763, align 8, !tbaa !2428
  %2765 = load i8, i8* %BRANCH_TAKEN
  %2766 = icmp eq i8 %2765, 1
  br i1 %2766, label %block_40093d, label %block_40091d

block_401547:                                     ; preds = %block_401535
  %2767 = load i64, i64* %RBP
  %2768 = sub i64 %2767, 104
  %2769 = load i64, i64* %PC
  %2770 = add i64 %2769, 4
  store i64 %2770, i64* %PC
  %2771 = inttoptr i64 %2768 to i64*
  %2772 = load i64, i64* %2771
  store i64 %2772, i64* %RDI, align 8, !tbaa !2428
  %2773 = load i64, i64* %PC
  %2774 = add i64 %2773, 8
  store i64 %2774, i64* %PC
  %2775 = load i32, i32* bitcast (%J_type* @J to i32*)
  %2776 = sext i32 %2775 to i64
  store i64 %2776, i64* %RSI, align 8, !tbaa !2428
  %2777 = load i64, i64* %PC
  %2778 = add i64 %2777, 8
  store i64 %2778, i64* %PC
  %2779 = load i32, i32* bitcast (%K_type* @K to i32*)
  %2780 = sext i32 %2779 to i64
  store i64 %2780, i64* %RDX, align 8, !tbaa !2428
  %2781 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2782 = load i64, i64* %RBP
  %2783 = sub i64 %2782, 144
  %2784 = load i64, i64* %PC
  %2785 = add i64 %2784, 8
  store i64 %2785, i64* %PC
  %2786 = inttoptr i64 %2783 to double*
  %2787 = load double, double* %2786
  %2788 = bitcast i8* %2781 to double*
  store double %2787, double* %2788, align 1, !tbaa !2432
  %2789 = getelementptr inbounds i8, i8* %2781, i64 8
  %2790 = bitcast i8* %2789 to double*
  store double 0.000000e+00, double* %2790, align 1, !tbaa !2432
  %2791 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %2792 = load i64, i64* %RBP
  %2793 = sub i64 %2792, 144
  %2794 = load i64, i64* %PC
  %2795 = add i64 %2794, 8
  store i64 %2795, i64* %PC
  %2796 = inttoptr i64 %2793 to double*
  %2797 = load double, double* %2796
  %2798 = bitcast i8* %2791 to double*
  store double %2797, double* %2798, align 1, !tbaa !2432
  %2799 = getelementptr inbounds i8, i8* %2791, i64 8
  %2800 = bitcast i8* %2799 to double*
  store double 0.000000e+00, double* %2800, align 1, !tbaa !2432
  %2801 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %2802 = load i64, i64* %RBP
  %2803 = sub i64 %2802, 144
  %2804 = load i64, i64* %PC
  %2805 = add i64 %2804, 8
  store i64 %2805, i64* %PC
  %2806 = inttoptr i64 %2803 to double*
  %2807 = load double, double* %2806
  %2808 = bitcast i8* %2801 to double*
  store double %2807, double* %2808, align 1, !tbaa !2432
  %2809 = getelementptr inbounds i8, i8* %2801, i64 8
  %2810 = bitcast i8* %2809 to double*
  store double 0.000000e+00, double* %2810, align 1, !tbaa !2432
  %2811 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %2812 = load i64, i64* %RBP
  %2813 = sub i64 %2812, 144
  %2814 = load i64, i64* %PC
  %2815 = add i64 %2814, 8
  store i64 %2815, i64* %PC
  %2816 = inttoptr i64 %2813 to double*
  %2817 = load double, double* %2816
  %2818 = bitcast i8* %2811 to double*
  store double %2817, double* %2818, align 1, !tbaa !2432
  %2819 = getelementptr inbounds i8, i8* %2811, i64 8
  %2820 = bitcast i8* %2819 to double*
  store double 0.000000e+00, double* %2820, align 1, !tbaa !2432
  %2821 = load i64, i64* %PC
  %2822 = add i64 %2821, 117
  %2823 = load i64, i64* %PC
  %2824 = add i64 %2823, 5
  %2825 = load i64, i64* %PC
  %2826 = add i64 %2825, 5
  store i64 %2826, i64* %PC
  %2827 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %2828 = load i64, i64* %2827, align 8, !tbaa !2428
  %2829 = add i64 %2828, -8
  %2830 = inttoptr i64 %2829 to i64*
  store i64 %2824, i64* %2830
  store i64 %2829, i64* %2827, align 8, !tbaa !2428
  %2831 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2822, i64* %2831, align 8, !tbaa !2428
  %2832 = load i64, i64* %PC
  %2833 = call %struct.Memory* @sub_4015f0_POUT_renamed_(%struct.State* %0, i64 %2832, %struct.Memory* %MEMORY.3)
  br label %block_401580

block_40101d:                                     ; preds = %block_400fe0, %block_400fce
  %MEMORY.5 = phi %struct.Memory* [ %MEMORY.8, %block_400fce ], [ %4642, %block_400fe0 ]
  %2834 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2835 = load i64, i64* %PC
  %2836 = add i64 %2835, 8
  store i64 %2836, i64* %PC
  %2837 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_401900__rodata_type* @seg_401900__rodata to i64), i64 48) to double*)
  %2838 = bitcast i8* %2834 to double*
  store double %2837, double* %2838, align 1, !tbaa !2432
  %2839 = getelementptr inbounds i8, i8* %2834, i64 8
  %2840 = bitcast i8* %2839 to double*
  store double 0.000000e+00, double* %2840, align 1, !tbaa !2432
  %2841 = load i64, i64* %RBP
  %2842 = sub i64 %2841, 144
  %2843 = bitcast %union.vec128_t* %XMM0 to i8*
  %2844 = load i64, i64* %PC
  %2845 = add i64 %2844, 8
  store i64 %2845, i64* %PC
  %2846 = bitcast i8* %2843 to double*
  %2847 = load double, double* %2846, align 1
  %2848 = inttoptr i64 %2842 to double*
  store double %2847, double* %2848
  %2849 = load i64, i64* %RBP
  %2850 = sub i64 %2849, 152
  %2851 = bitcast %union.vec128_t* %XMM0 to i8*
  %2852 = load i64, i64* %PC
  %2853 = add i64 %2852, 8
  store i64 %2853, i64* %PC
  %2854 = bitcast i8* %2851 to double*
  %2855 = load double, double* %2854, align 1
  %2856 = inttoptr i64 %2850 to double*
  store double %2855, double* %2856
  %2857 = load i64, i64* %RBP
  %2858 = sub i64 %2857, 24
  %2859 = load i64, i64* %PC
  %2860 = add i64 %2859, 8
  store i64 %2860, i64* %PC
  %2861 = inttoptr i64 %2858 to i64*
  store i64 1, i64* %2861
  br label %block_40103d

block_400fce:                                     ; preds = %block_400ecb
  %2862 = load i64, i64* %RBP
  %2863 = sub i64 %2862, 176
  %2864 = load i64, i64* %PC
  %2865 = add i64 %2864, 6
  store i64 %2865, i64* %PC
  %2866 = inttoptr i64 %2863 to i32*
  %2867 = load i32, i32* %2866
  %2868 = zext i32 %2867 to i64
  store i64 %2868, i64* %RAX, align 8, !tbaa !2428
  %2869 = load i32, i32* %EAX
  %2870 = zext i32 %2869 to i64
  %2871 = load i64, i64* %RBP
  %2872 = sub i64 %2871, 172
  %2873 = load i64, i64* %PC
  %2874 = add i64 %2873, 6
  store i64 %2874, i64* %PC
  %2875 = inttoptr i64 %2872 to i32*
  %2876 = load i32, i32* %2875
  %2877 = sub i32 %2869, %2876
  %2878 = icmp ult i32 %2869, %2876
  %2879 = zext i1 %2878 to i8
  %2880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2879, i8* %2880, align 1, !tbaa !2434
  %2881 = and i32 %2877, 255
  %2882 = call i32 @llvm.ctpop.i32(i32 %2881) #17
  %2883 = trunc i32 %2882 to i8
  %2884 = and i8 %2883, 1
  %2885 = xor i8 %2884, 1
  %2886 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2885, i8* %2886, align 1, !tbaa !2448
  %2887 = xor i32 %2876, %2869
  %2888 = xor i32 %2887, %2877
  %2889 = lshr i32 %2888, 4
  %2890 = trunc i32 %2889 to i8
  %2891 = and i8 %2890, 1
  %2892 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2891, i8* %2892, align 1, !tbaa !2449
  %2893 = icmp eq i32 %2877, 0
  %2894 = zext i1 %2893 to i8
  %2895 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2894, i8* %2895, align 1, !tbaa !2450
  %2896 = lshr i32 %2877, 31
  %2897 = trunc i32 %2896 to i8
  %2898 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2897, i8* %2898, align 1, !tbaa !2451
  %2899 = lshr i32 %2869, 31
  %2900 = lshr i32 %2876, 31
  %2901 = xor i32 %2900, %2899
  %2902 = xor i32 %2896, %2899
  %2903 = add nuw nsw i32 %2902, %2901
  %2904 = icmp eq i32 %2903, 2
  %2905 = zext i1 %2904 to i8
  %2906 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2905, i8* %2906, align 1, !tbaa !2452
  %2907 = load i64, i64* %PC
  %2908 = add i64 %2907, 67
  %2909 = load i64, i64* %PC
  %2910 = add i64 %2909, 6
  %2911 = load i64, i64* %PC
  %2912 = add i64 %2911, 6
  store i64 %2912, i64* %PC
  %2913 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2914 = load i8, i8* %2913, align 1, !tbaa !2450
  %2915 = icmp eq i8 %2914, 0
  %2916 = zext i1 %2915 to i8
  store i8 %2916, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %2917 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2918 = select i1 %2915, i64 %2908, i64 %2910
  store i64 %2918, i64* %2917, align 8, !tbaa !2428
  %2919 = load i8, i8* %BRANCH_TAKEN
  %2920 = icmp eq i8 %2919, 1
  br i1 %2920, label %block_40101d, label %block_400fe0

block_401246:                                     ; preds = %block_401234
  %2921 = load i64, i64* %RBP
  %2922 = sub i64 %2921, 72
  %2923 = load i64, i64* %PC
  %2924 = add i64 %2923, 4
  store i64 %2924, i64* %PC
  %2925 = inttoptr i64 %2922 to i64*
  %2926 = load i64, i64* %2925
  store i64 %2926, i64* %RDI, align 8, !tbaa !2428
  %2927 = load i64, i64* %PC
  %2928 = add i64 %2927, 8
  store i64 %2928, i64* %PC
  %2929 = load i32, i32* bitcast (%J_type* @J to i32*)
  %2930 = sext i32 %2929 to i64
  store i64 %2930, i64* %RSI, align 8, !tbaa !2428
  %2931 = load i64, i64* %PC
  %2932 = add i64 %2931, 8
  store i64 %2932, i64* %PC
  %2933 = load i32, i32* bitcast (%K_type* @K to i32*)
  %2934 = sext i32 %2933 to i64
  store i64 %2934, i64* %RDX, align 8, !tbaa !2428
  %2935 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2936 = load i64, i64* %RBP
  %2937 = sub i64 %2936, 144
  %2938 = load i64, i64* %PC
  %2939 = add i64 %2938, 8
  store i64 %2939, i64* %PC
  %2940 = inttoptr i64 %2937 to double*
  %2941 = load double, double* %2940
  %2942 = bitcast i8* %2935 to double*
  store double %2941, double* %2942, align 1, !tbaa !2432
  %2943 = getelementptr inbounds i8, i8* %2935, i64 8
  %2944 = bitcast i8* %2943 to double*
  store double 0.000000e+00, double* %2944, align 1, !tbaa !2432
  %2945 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %2946 = load i64, i64* %RBP
  %2947 = sub i64 %2946, 144
  %2948 = load i64, i64* %PC
  %2949 = add i64 %2948, 8
  store i64 %2949, i64* %PC
  %2950 = inttoptr i64 %2947 to double*
  %2951 = load double, double* %2950
  %2952 = bitcast i8* %2945 to double*
  store double %2951, double* %2952, align 1, !tbaa !2432
  %2953 = getelementptr inbounds i8, i8* %2945, i64 8
  %2954 = bitcast i8* %2953 to double*
  store double 0.000000e+00, double* %2954, align 1, !tbaa !2432
  %2955 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %2956 = load i64, i64* %RBP
  %2957 = sub i64 %2956, 152
  %2958 = load i64, i64* %PC
  %2959 = add i64 %2958, 8
  store i64 %2959, i64* %PC
  %2960 = inttoptr i64 %2957 to double*
  %2961 = load double, double* %2960
  %2962 = bitcast i8* %2955 to double*
  store double %2961, double* %2962, align 1, !tbaa !2432
  %2963 = getelementptr inbounds i8, i8* %2955, i64 8
  %2964 = bitcast i8* %2963 to double*
  store double 0.000000e+00, double* %2964, align 1, !tbaa !2432
  %2965 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %2966 = load i64, i64* %RBP
  %2967 = sub i64 %2966, 152
  %2968 = load i64, i64* %PC
  %2969 = add i64 %2968, 8
  store i64 %2969, i64* %PC
  %2970 = inttoptr i64 %2967 to double*
  %2971 = load double, double* %2970
  %2972 = bitcast i8* %2965 to double*
  store double %2971, double* %2972, align 1, !tbaa !2432
  %2973 = getelementptr inbounds i8, i8* %2965, i64 8
  %2974 = bitcast i8* %2973 to double*
  store double 0.000000e+00, double* %2974, align 1, !tbaa !2432
  %2975 = load i64, i64* %PC
  %2976 = add i64 %2975, 886
  %2977 = load i64, i64* %PC
  %2978 = add i64 %2977, 5
  %2979 = load i64, i64* %PC
  %2980 = add i64 %2979, 5
  store i64 %2980, i64* %PC
  %2981 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %2982 = load i64, i64* %2981, align 8, !tbaa !2428
  %2983 = add i64 %2982, -8
  %2984 = inttoptr i64 %2983 to i64*
  store i64 %2978, i64* %2984
  store i64 %2983, i64* %2981, align 8, !tbaa !2428
  %2985 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2976, i64* %2985, align 8, !tbaa !2428
  %2986 = load i64, i64* %PC
  %2987 = call %struct.Memory* @sub_4015f0_POUT_renamed_(%struct.State* %0, i64 %2986, %struct.Memory* %MEMORY.9)
  br label %block_40127f

block_400dc1:                                     ; preds = %block_400e4a, %block_400dae
  %MEMORY.6 = phi %struct.Memory* [ %MEMORY.12, %block_400dae ], [ %MEMORY.24, %block_400e4a ]
  %2988 = load i64, i64* %RBP
  %2989 = sub i64 %2988, 24
  %2990 = load i64, i64* %PC
  %2991 = add i64 %2990, 4
  store i64 %2991, i64* %PC
  %2992 = inttoptr i64 %2989 to i64*
  %2993 = load i64, i64* %2992
  store i64 %2993, i64* %RAX, align 8, !tbaa !2428
  %2994 = load i64, i64* %RAX
  %2995 = load i64, i64* %RBP
  %2996 = sub i64 %2995, 56
  %2997 = load i64, i64* %PC
  %2998 = add i64 %2997, 4
  store i64 %2998, i64* %PC
  %2999 = inttoptr i64 %2996 to i64*
  %3000 = load i64, i64* %2999
  %3001 = sub i64 %2994, %3000
  %3002 = icmp ugt i64 %3000, %2994
  %3003 = zext i1 %3002 to i8
  %3004 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3003, i8* %3004, align 1, !tbaa !2434
  %3005 = trunc i64 %3001 to i32
  %3006 = and i32 %3005, 255
  %3007 = call i32 @llvm.ctpop.i32(i32 %3006) #17
  %3008 = trunc i32 %3007 to i8
  %3009 = and i8 %3008, 1
  %3010 = xor i8 %3009, 1
  %3011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3010, i8* %3011, align 1, !tbaa !2448
  %3012 = xor i64 %3000, %2994
  %3013 = xor i64 %3012, %3001
  %3014 = lshr i64 %3013, 4
  %3015 = trunc i64 %3014 to i8
  %3016 = and i8 %3015, 1
  %3017 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3016, i8* %3017, align 1, !tbaa !2449
  %3018 = icmp eq i64 %3001, 0
  %3019 = zext i1 %3018 to i8
  %3020 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3019, i8* %3020, align 1, !tbaa !2450
  %3021 = lshr i64 %3001, 63
  %3022 = trunc i64 %3021 to i8
  %3023 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3022, i8* %3023, align 1, !tbaa !2451
  %3024 = lshr i64 %2994, 63
  %3025 = lshr i64 %3000, 63
  %3026 = xor i64 %3025, %3024
  %3027 = xor i64 %3021, %3024
  %3028 = add nuw nsw i64 %3027, %3026
  %3029 = icmp eq i64 %3028, 2
  %3030 = zext i1 %3029 to i8
  %3031 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3030, i8* %3031, align 1, !tbaa !2452
  %3032 = load i64, i64* %PC
  %3033 = add i64 %3032, 151
  %3034 = load i64, i64* %PC
  %3035 = add i64 %3034, 6
  %3036 = load i64, i64* %PC
  %3037 = add i64 %3036, 6
  store i64 %3037, i64* %PC
  %3038 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3039 = load i8, i8* %3038, align 1, !tbaa !2450
  %3040 = icmp eq i8 %3039, 0
  %3041 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3042 = load i8, i8* %3041, align 1, !tbaa !2451
  %3043 = icmp ne i8 %3042, 0
  %3044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3045 = load i8, i8* %3044, align 1, !tbaa !2452
  %3046 = icmp ne i8 %3045, 0
  %3047 = xor i1 %3043, %3046
  %3048 = xor i1 %3047, true
  %3049 = and i1 %3040, %3048
  %3050 = zext i1 %3049 to i8
  store i8 %3050, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %3051 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3052 = select i1 %3049, i64 %3033, i64 %3035
  store i64 %3052, i64* %3051, align 8, !tbaa !2428
  %3053 = load i8, i8* %BRANCH_TAKEN
  %3054 = icmp eq i8 %3053, 1
  br i1 %3054, label %block_400e60, label %block_400dcf

block_4008a7:                                     ; preds = %block_400898
  %3055 = add i64 %5158, 10
  store i64 %3055, i64* %PC
  store i64 add (i64 ptrtoint (%seg_401900__rodata_type* @seg_401900__rodata to i64), i64 72), i64* %RSI, align 8, !tbaa !2428
  %3056 = load i64, i64* %PC
  %3057 = add i64 %3056, 5
  store i64 %3057, i64* %PC
  store i64 2, i64* %RAX, align 8, !tbaa !2428
  %3058 = load i32, i32* %EAX
  %3059 = zext i32 %3058 to i64
  %3060 = load i64, i64* %PC
  %3061 = add i64 %3060, 2
  store i64 %3061, i64* %PC
  %3062 = and i64 %3059, 4294967295
  store i64 %3062, i64* %RDX, align 8, !tbaa !2428
  %3063 = load i64, i64* %RBP
  %3064 = sub i64 %3063, 16
  %3065 = load i64, i64* %PC
  %3066 = add i64 %3065, 4
  store i64 %3066, i64* %PC
  %3067 = inttoptr i64 %3064 to i64*
  %3068 = load i64, i64* %3067
  store i64 %3068, i64* %RCX, align 8, !tbaa !2428
  %3069 = load i64, i64* %RBP
  %3070 = sub i64 %3069, 172
  %3071 = load i64, i64* %PC
  %3072 = add i64 %3071, 7
  store i64 %3072, i64* %PC
  %3073 = inttoptr i64 %3070 to i32*
  %3074 = load i32, i32* %3073
  %3075 = sext i32 %3074 to i64
  store i64 %3075, i64* %RDI, align 8, !tbaa !2428
  %3076 = load i64, i64* %RCX
  %3077 = load i64, i64* %RDI
  %3078 = mul i64 %3077, 8
  %3079 = add i64 %3078, %3076
  %3080 = load i64, i64* %PC
  %3081 = add i64 %3080, 4
  store i64 %3081, i64* %PC
  %3082 = inttoptr i64 %3079 to i64*
  %3083 = load i64, i64* %3082
  store i64 %3083, i64* %RDI, align 8, !tbaa !2428
  %3084 = load i64, i64* %PC
  %3085 = sub i64 %3084, 519
  %3086 = load i64, i64* %PC
  %3087 = add i64 %3086, 5
  %3088 = load i64, i64* %PC
  %3089 = add i64 %3088, 5
  store i64 %3089, i64* %PC
  %3090 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3091 = load i64, i64* %3090, align 8, !tbaa !2428
  %3092 = add i64 %3091, -8
  %3093 = inttoptr i64 %3092 to i64*
  store i64 %3087, i64* %3093
  store i64 %3092, i64* %3090, align 8, !tbaa !2428
  %3094 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3085, i64* %3094, align 8, !tbaa !2428
  %3095 = load i64, i64* %PC
  %3096 = call %struct.Memory* @ext_6020e8_strncmp(%struct.State* %0, i64 %3095, %struct.Memory* %MEMORY.19)
  %3097 = load i32, i32* %EAX
  %3098 = zext i32 %3097 to i64
  %3099 = load i64, i64* %PC
  %3100 = add i64 %3099, 3
  store i64 %3100, i64* %PC
  %3101 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3101, align 1, !tbaa !2434
  %3102 = and i32 %3097, 255
  %3103 = call i32 @llvm.ctpop.i32(i32 %3102) #17
  %3104 = trunc i32 %3103 to i8
  %3105 = and i8 %3104, 1
  %3106 = xor i8 %3105, 1
  %3107 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3106, i8* %3107, align 1, !tbaa !2448
  %3108 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3108, align 1, !tbaa !2449
  %3109 = icmp eq i32 %3097, 0
  %3110 = zext i1 %3109 to i8
  %3111 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3110, i8* %3111, align 1, !tbaa !2450
  %3112 = lshr i32 %3097, 31
  %3113 = trunc i32 %3112 to i8
  %3114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3113, i8* %3114, align 1, !tbaa !2451
  %3115 = lshr i32 %3097, 31
  %3116 = xor i32 %3112, %3115
  %3117 = add nuw nsw i32 %3116, %3115
  %3118 = icmp eq i32 %3117, 2
  %3119 = zext i1 %3118 to i8
  %3120 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3119, i8* %3120, align 1, !tbaa !2452
  %3121 = load i64, i64* %PC
  %3122 = add i64 %3121, 33
  %3123 = load i64, i64* %PC
  %3124 = add i64 %3123, 6
  %3125 = load i64, i64* %PC
  %3126 = add i64 %3125, 6
  store i64 %3126, i64* %PC
  %3127 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3128 = load i8, i8* %3127, align 1, !tbaa !2450
  store i8 %3128, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %3129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3130 = icmp ne i8 %3128, 0
  %3131 = select i1 %3130, i64 %3122, i64 %3124
  store i64 %3131, i64* %3129, align 8, !tbaa !2428
  %3132 = load i8, i8* %BRANCH_TAKEN
  %3133 = icmp eq i8 %3132, 1
  br i1 %3133, label %block_4008f0, label %block_4008d5

block_40127f:                                     ; preds = %block_401234, %block_401246
  %MEMORY.7 = phi %struct.Memory* [ %MEMORY.9, %block_401234 ], [ %2987, %block_401246 ]
  %3134 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %3135 = load i64, i64* %PC
  %3136 = add i64 %3135, 8
  store i64 %3136, i64* %PC
  %3137 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_401900__rodata_type* @seg_401900__rodata to i64), i64 40) to double*)
  %3138 = bitcast i8* %3134 to double*
  store double %3137, double* %3138, align 1, !tbaa !2432
  %3139 = getelementptr inbounds i8, i8* %3134, i64 8
  %3140 = bitcast i8* %3139 to double*
  store double 0.000000e+00, double* %3140, align 1, !tbaa !2432
  %3141 = load i64, i64* %RBP
  %3142 = sub i64 %3141, 144
  %3143 = bitcast %union.vec128_t* %XMM0 to i8*
  %3144 = load i64, i64* %PC
  %3145 = add i64 %3144, 8
  store i64 %3145, i64* %PC
  %3146 = bitcast i8* %3143 to double*
  %3147 = load double, double* %3146, align 1
  %3148 = inttoptr i64 %3142 to double*
  store double %3147, double* %3148
  %3149 = load i64, i64* %RBP
  %3150 = sub i64 %3149, 152
  %3151 = bitcast %union.vec128_t* %XMM0 to i8*
  %3152 = load i64, i64* %PC
  %3153 = add i64 %3152, 8
  store i64 %3153, i64* %PC
  %3154 = bitcast i8* %3151 to double*
  %3155 = load double, double* %3154, align 1
  %3156 = inttoptr i64 %3150 to double*
  store double %3155, double* %3156
  %3157 = load i64, i64* %RBP
  %3158 = sub i64 %3157, 160
  %3159 = bitcast %union.vec128_t* %XMM0 to i8*
  %3160 = load i64, i64* %PC
  %3161 = add i64 %3160, 8
  store i64 %3161, i64* %PC
  %3162 = bitcast i8* %3159 to double*
  %3163 = load double, double* %3162, align 1
  %3164 = inttoptr i64 %3158 to double*
  store double %3163, double* %3164
  %3165 = load i64, i64* %RBP
  %3166 = sub i64 %3165, 24
  %3167 = load i64, i64* %PC
  %3168 = add i64 %3167, 8
  store i64 %3168, i64* %PC
  %3169 = inttoptr i64 %3166 to i64*
  store i64 1, i64* %3169
  br label %block_4012a7

block_400b66:                                     ; preds = %block_400a99
  %3170 = load i64, i64* %RBP
  %3171 = sub i64 %3170, 176
  %3172 = load i64, i64* %PC
  %3173 = add i64 %3172, 6
  store i64 %3173, i64* %PC
  %3174 = inttoptr i64 %3171 to i32*
  %3175 = load i32, i32* %3174
  %3176 = zext i32 %3175 to i64
  store i64 %3176, i64* %RAX, align 8, !tbaa !2428
  %3177 = load i32, i32* %EAX
  %3178 = zext i32 %3177 to i64
  %3179 = load i64, i64* %RBP
  %3180 = sub i64 %3179, 172
  %3181 = load i64, i64* %PC
  %3182 = add i64 %3181, 6
  store i64 %3182, i64* %PC
  %3183 = inttoptr i64 %3180 to i32*
  %3184 = load i32, i32* %3183
  %3185 = sub i32 %3177, %3184
  %3186 = icmp ult i32 %3177, %3184
  %3187 = zext i1 %3186 to i8
  %3188 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3187, i8* %3188, align 1, !tbaa !2434
  %3189 = and i32 %3185, 255
  %3190 = call i32 @llvm.ctpop.i32(i32 %3189) #17
  %3191 = trunc i32 %3190 to i8
  %3192 = and i8 %3191, 1
  %3193 = xor i8 %3192, 1
  %3194 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3193, i8* %3194, align 1, !tbaa !2448
  %3195 = xor i32 %3184, %3177
  %3196 = xor i32 %3195, %3185
  %3197 = lshr i32 %3196, 4
  %3198 = trunc i32 %3197 to i8
  %3199 = and i8 %3198, 1
  %3200 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3199, i8* %3200, align 1, !tbaa !2449
  %3201 = icmp eq i32 %3185, 0
  %3202 = zext i1 %3201 to i8
  %3203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3202, i8* %3203, align 1, !tbaa !2450
  %3204 = lshr i32 %3185, 31
  %3205 = trunc i32 %3204 to i8
  %3206 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3205, i8* %3206, align 1, !tbaa !2451
  %3207 = lshr i32 %3177, 31
  %3208 = lshr i32 %3184, 31
  %3209 = xor i32 %3208, %3207
  %3210 = xor i32 %3204, %3207
  %3211 = add nuw nsw i32 %3210, %3209
  %3212 = icmp eq i32 %3211, 2
  %3213 = zext i1 %3212 to i8
  %3214 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3213, i8* %3214, align 1, !tbaa !2452
  %3215 = load i64, i64* %PC
  %3216 = add i64 %3215, 46
  %3217 = load i64, i64* %PC
  %3218 = add i64 %3217, 6
  %3219 = load i64, i64* %PC
  %3220 = add i64 %3219, 6
  store i64 %3220, i64* %PC
  %3221 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3222 = load i8, i8* %3221, align 1, !tbaa !2450
  %3223 = icmp eq i8 %3222, 0
  %3224 = zext i1 %3223 to i8
  store i8 %3224, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %3225 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3226 = select i1 %3223, i64 %3216, i64 %3218
  store i64 %3226, i64* %3225, align 8, !tbaa !2428
  %3227 = load i8, i8* %BRANCH_TAKEN
  %3228 = icmp eq i8 %3227, 1
  br i1 %3228, label %block_400ba0, label %block_400b78

block_400ecb:                                     ; preds = %block_400ea2, %block_400ed9
  %MEMORY.8 = phi %struct.Memory* [ %MEMORY.15, %block_400ea2 ], [ %MEMORY.8, %block_400ed9 ]
  %3229 = load i64, i64* %RBP
  %3230 = sub i64 %3229, 24
  %3231 = load i64, i64* %PC
  %3232 = add i64 %3231, 4
  store i64 %3232, i64* %PC
  %3233 = inttoptr i64 %3230 to i64*
  %3234 = load i64, i64* %3233
  store i64 %3234, i64* %RAX, align 8, !tbaa !2428
  %3235 = load i64, i64* %RAX
  %3236 = load i64, i64* %RBP
  %3237 = sub i64 %3236, 64
  %3238 = load i64, i64* %PC
  %3239 = add i64 %3238, 4
  store i64 %3239, i64* %PC
  %3240 = inttoptr i64 %3237 to i64*
  %3241 = load i64, i64* %3240
  %3242 = sub i64 %3235, %3241
  %3243 = icmp ugt i64 %3241, %3235
  %3244 = zext i1 %3243 to i8
  %3245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3244, i8* %3245, align 1, !tbaa !2434
  %3246 = trunc i64 %3242 to i32
  %3247 = and i32 %3246, 255
  %3248 = call i32 @llvm.ctpop.i32(i32 %3247) #17
  %3249 = trunc i32 %3248 to i8
  %3250 = and i8 %3249, 1
  %3251 = xor i8 %3250, 1
  %3252 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3251, i8* %3252, align 1, !tbaa !2448
  %3253 = xor i64 %3241, %3235
  %3254 = xor i64 %3253, %3242
  %3255 = lshr i64 %3254, 4
  %3256 = trunc i64 %3255 to i8
  %3257 = and i8 %3256, 1
  %3258 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3257, i8* %3258, align 1, !tbaa !2449
  %3259 = icmp eq i64 %3242, 0
  %3260 = zext i1 %3259 to i8
  %3261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3260, i8* %3261, align 1, !tbaa !2450
  %3262 = lshr i64 %3242, 63
  %3263 = trunc i64 %3262 to i8
  %3264 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3263, i8* %3264, align 1, !tbaa !2451
  %3265 = lshr i64 %3235, 63
  %3266 = lshr i64 %3241, 63
  %3267 = xor i64 %3266, %3265
  %3268 = xor i64 %3262, %3265
  %3269 = add nuw nsw i64 %3268, %3267
  %3270 = icmp eq i64 %3269, 2
  %3271 = zext i1 %3270 to i8
  %3272 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3271, i8* %3272, align 1, !tbaa !2452
  %3273 = load i64, i64* %PC
  %3274 = add i64 %3273, 251
  %3275 = load i64, i64* %PC
  %3276 = add i64 %3275, 6
  %3277 = load i64, i64* %PC
  %3278 = add i64 %3277, 6
  store i64 %3278, i64* %PC
  %3279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3280 = load i8, i8* %3279, align 1, !tbaa !2450
  %3281 = icmp eq i8 %3280, 0
  %3282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3283 = load i8, i8* %3282, align 1, !tbaa !2451
  %3284 = icmp ne i8 %3283, 0
  %3285 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3286 = load i8, i8* %3285, align 1, !tbaa !2452
  %3287 = icmp ne i8 %3286, 0
  %3288 = xor i1 %3284, %3287
  %3289 = xor i1 %3288, true
  %3290 = and i1 %3281, %3289
  %3291 = zext i1 %3290 to i8
  store i8 %3291, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %3292 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3293 = select i1 %3290, i64 %3274, i64 %3276
  store i64 %3293, i64* %3292, align 8, !tbaa !2428
  %3294 = load i8, i8* %BRANCH_TAKEN
  %3295 = icmp eq i8 %3294, 1
  br i1 %3295, label %block_400fce, label %block_400ed9

block_40093d:                                     ; preds = %block_4008ff
  %3296 = load i64, i64* %PC
  %3297 = add i64 %3296, 10
  store i64 %3297, i64* %PC
  store i64 add (i64 ptrtoint (%seg_401900__rodata_type* @seg_401900__rodata to i64), i64 75), i64* %RSI, align 8, !tbaa !2428
  %3298 = load i64, i64* %PC
  %3299 = add i64 %3298, 8
  store i64 %3299, i64* %PC
  %3300 = load i64, i64* @stderr
  store i64 %3300, i64* %RDI, align 8, !tbaa !2428
  %3301 = load i64, i64* %PC
  %3302 = add i64 %3301, 2
  store i64 %3302, i64* %PC
  store i8 0, i8* %AL, align 1, !tbaa !2453
  %3303 = load i64, i64* %PC
  %3304 = sub i64 %3303, 561
  %3305 = load i64, i64* %PC
  %3306 = add i64 %3305, 5
  %3307 = load i64, i64* %PC
  %3308 = add i64 %3307, 5
  store i64 %3308, i64* %PC
  %3309 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3310 = load i64, i64* %3309, align 8, !tbaa !2428
  %3311 = add i64 %3310, -8
  %3312 = inttoptr i64 %3311 to i64*
  store i64 %3306, i64* %3312
  store i64 %3311, i64* %3309, align 8, !tbaa !2428
  %3313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3304, i64* %3313, align 8, !tbaa !2428
  %3314 = load i64, i64* %PC
  %3315 = call %struct.Memory* @ext_400720_fprintf(%struct.State* %0, i64 %3314, %struct.Memory* %2720)
  %3316 = load i64, i64* %RBP
  %3317 = sub i64 %3316, 4
  %3318 = load i64, i64* %PC
  %3319 = add i64 %3318, 7
  store i64 %3319, i64* %PC
  %3320 = inttoptr i64 %3317 to i32*
  store i32 1, i32* %3320
  %3321 = load i64, i64* %RBP
  %3322 = sub i64 %3321, 212
  %3323 = load i32, i32* %EAX
  %3324 = zext i32 %3323 to i64
  %3325 = load i64, i64* %PC
  %3326 = add i64 %3325, 6
  store i64 %3326, i64* %PC
  %3327 = inttoptr i64 %3322 to i32*
  store i32 %3323, i32* %3327
  %3328 = load i64, i64* %PC
  %3329 = add i64 %3328, 3197
  %3330 = load i64, i64* %PC
  %3331 = add i64 %3330, 5
  store i64 %3331, i64* %PC
  %3332 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3329, i64* %3332, align 8, !tbaa !2428
  br label %block_4015e0

block_40103d:                                     ; preds = %block_40104b, %block_40101d
  %MEMORY.9 = phi %struct.Memory* [ %MEMORY.5, %block_40101d ], [ %11364, %block_40104b ]
  %3333 = load i64, i64* %RBP
  %3334 = sub i64 %3333, 24
  %3335 = load i64, i64* %PC
  %3336 = add i64 %3335, 4
  store i64 %3336, i64* %PC
  %3337 = inttoptr i64 %3334 to i64*
  %3338 = load i64, i64* %3337
  store i64 %3338, i64* %RAX, align 8, !tbaa !2428
  %3339 = load i64, i64* %RAX
  %3340 = load i64, i64* %RBP
  %3341 = sub i64 %3340, 72
  %3342 = load i64, i64* %PC
  %3343 = add i64 %3342, 4
  store i64 %3343, i64* %PC
  %3344 = inttoptr i64 %3341 to i64*
  %3345 = load i64, i64* %3344
  %3346 = sub i64 %3339, %3345
  %3347 = icmp ugt i64 %3345, %3339
  %3348 = zext i1 %3347 to i8
  %3349 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3348, i8* %3349, align 1, !tbaa !2434
  %3350 = trunc i64 %3346 to i32
  %3351 = and i32 %3350, 255
  %3352 = call i32 @llvm.ctpop.i32(i32 %3351) #17
  %3353 = trunc i32 %3352 to i8
  %3354 = and i8 %3353, 1
  %3355 = xor i8 %3354, 1
  %3356 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3355, i8* %3356, align 1, !tbaa !2448
  %3357 = xor i64 %3345, %3339
  %3358 = xor i64 %3357, %3346
  %3359 = lshr i64 %3358, 4
  %3360 = trunc i64 %3359 to i8
  %3361 = and i8 %3360, 1
  %3362 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3361, i8* %3362, align 1, !tbaa !2449
  %3363 = icmp eq i64 %3346, 0
  %3364 = zext i1 %3363 to i8
  %3365 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3364, i8* %3365, align 1, !tbaa !2450
  %3366 = lshr i64 %3346, 63
  %3367 = trunc i64 %3366 to i8
  %3368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3367, i8* %3368, align 1, !tbaa !2451
  %3369 = lshr i64 %3339, 63
  %3370 = lshr i64 %3345, 63
  %3371 = xor i64 %3370, %3369
  %3372 = xor i64 %3366, %3369
  %3373 = add nuw nsw i64 %3372, %3371
  %3374 = icmp eq i64 %3373, 2
  %3375 = zext i1 %3374 to i8
  %3376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3375, i8* %3376, align 1, !tbaa !2452
  %3377 = load i64, i64* %PC
  %3378 = add i64 %3377, 495
  %3379 = load i64, i64* %PC
  %3380 = add i64 %3379, 6
  %3381 = load i64, i64* %PC
  %3382 = add i64 %3381, 6
  store i64 %3382, i64* %PC
  %3383 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3384 = load i8, i8* %3383, align 1, !tbaa !2450
  %3385 = icmp eq i8 %3384, 0
  %3386 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3387 = load i8, i8* %3386, align 1, !tbaa !2451
  %3388 = icmp ne i8 %3387, 0
  %3389 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3390 = load i8, i8* %3389, align 1, !tbaa !2452
  %3391 = icmp ne i8 %3390, 0
  %3392 = xor i1 %3388, %3391
  %3393 = xor i1 %3392, true
  %3394 = and i1 %3385, %3393
  %3395 = zext i1 %3394 to i8
  store i8 %3395, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %3396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3397 = select i1 %3394, i64 %3378, i64 %3380
  store i64 %3397, i64* %3396, align 8, !tbaa !2428
  %3398 = load i8, i8* %BRANCH_TAKEN
  %3399 = icmp eq i8 %3398, 1
  br i1 %3399, label %block_401234, label %block_40104b

block_4008d5:                                     ; preds = %block_4008a7
  %3400 = load i64, i64* %RBP
  %3401 = sub i64 %3400, 16
  %3402 = load i64, i64* %PC
  %3403 = add i64 %3402, 4
  store i64 %3403, i64* %PC
  %3404 = inttoptr i64 %3401 to i64*
  %3405 = load i64, i64* %3404
  store i64 %3405, i64* %RAX, align 8, !tbaa !2428
  %3406 = load i64, i64* %RBP
  %3407 = sub i64 %3406, 172
  %3408 = load i64, i64* %PC
  %3409 = add i64 %3408, 7
  store i64 %3409, i64* %PC
  %3410 = inttoptr i64 %3407 to i32*
  %3411 = load i32, i32* %3410
  %3412 = sext i32 %3411 to i64
  store i64 %3412, i64* %RCX, align 8, !tbaa !2428
  %3413 = load i64, i64* %RAX
  %3414 = load i64, i64* %RCX
  %3415 = mul i64 %3414, 8
  %3416 = add i64 %3415, %3413
  %3417 = load i64, i64* %PC
  %3418 = add i64 %3417, 4
  store i64 %3418, i64* %PC
  %3419 = inttoptr i64 %3416 to i64*
  %3420 = load i64, i64* %3419
  store i64 %3420, i64* %RAX, align 8, !tbaa !2428
  %3421 = load i64, i64* %RAX
  %3422 = load i64, i64* %PC
  %3423 = add i64 %3422, 3
  store i64 %3423, i64* %PC
  %3424 = inttoptr i64 %3421 to i8*
  %3425 = load i8, i8* %3424
  %3426 = sext i8 %3425 to i64
  %3427 = and i64 %3426, 4294967295
  store i64 %3427, i64* %RDX, align 8, !tbaa !2428
  %3428 = load i32, i32* %EDX
  %3429 = zext i32 %3428 to i64
  %3430 = load i64, i64* %PC
  %3431 = add i64 %3430, 3
  store i64 %3431, i64* %PC
  %3432 = sub i32 %3428, 99
  %3433 = icmp ult i32 %3428, 99
  %3434 = zext i1 %3433 to i8
  %3435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3434, i8* %3435, align 1, !tbaa !2434
  %3436 = and i32 %3432, 255
  %3437 = call i32 @llvm.ctpop.i32(i32 %3436) #17
  %3438 = trunc i32 %3437 to i8
  %3439 = and i8 %3438, 1
  %3440 = xor i8 %3439, 1
  %3441 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3440, i8* %3441, align 1, !tbaa !2448
  %3442 = xor i64 99, %3429
  %3443 = trunc i64 %3442 to i32
  %3444 = xor i32 %3443, %3432
  %3445 = lshr i32 %3444, 4
  %3446 = trunc i32 %3445 to i8
  %3447 = and i8 %3446, 1
  %3448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3447, i8* %3448, align 1, !tbaa !2449
  %3449 = icmp eq i32 %3432, 0
  %3450 = zext i1 %3449 to i8
  %3451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3450, i8* %3451, align 1, !tbaa !2450
  %3452 = lshr i32 %3432, 31
  %3453 = trunc i32 %3452 to i8
  %3454 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3453, i8* %3454, align 1, !tbaa !2451
  %3455 = lshr i32 %3428, 31
  %3456 = xor i32 %3452, %3455
  %3457 = add nuw nsw i32 %3456, %3455
  %3458 = icmp eq i32 %3457, 2
  %3459 = zext i1 %3458 to i8
  %3460 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3459, i8* %3460, align 1, !tbaa !2452
  %3461 = load i64, i64* %PC
  %3462 = add i64 %3461, 21
  %3463 = load i64, i64* %PC
  %3464 = add i64 %3463, 6
  %3465 = load i64, i64* %PC
  %3466 = add i64 %3465, 6
  store i64 %3466, i64* %PC
  %3467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3468 = load i8, i8* %3467, align 1, !tbaa !2450
  %3469 = icmp eq i8 %3468, 0
  %3470 = zext i1 %3469 to i8
  store i8 %3470, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %3471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3472 = select i1 %3469, i64 %3462, i64 %3464
  store i64 %3472, i64* %3471, align 8, !tbaa !2428
  %3473 = load i8, i8* %BRANCH_TAKEN
  %3474 = icmp eq i8 %3473, 1
  br i1 %3474, label %block_4008ff, label %block_4008f0

block_4012b5:                                     ; preds = %block_4012a7
  %3475 = sub i64 %4710, 160
  %3476 = load i64, i64* %PC
  %3477 = add i64 %3476, 7
  store i64 %3477, i64* %PC
  store i64 %3475, i64* %RDI, align 8, !tbaa !2428
  %3478 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %3479 = load i64, i64* %RBP
  %3480 = sub i64 %3479, 144
  %3481 = load i64, i64* %PC
  %3482 = add i64 %3481, 8
  store i64 %3482, i64* %PC
  %3483 = inttoptr i64 %3480 to double*
  %3484 = load double, double* %3483
  %3485 = bitcast i8* %3478 to double*
  store double %3484, double* %3485, align 1, !tbaa !2432
  %3486 = getelementptr inbounds i8, i8* %3478, i64 8
  %3487 = bitcast i8* %3486 to double*
  store double 0.000000e+00, double* %3487, align 1, !tbaa !2432
  %3488 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %3489 = load i64, i64* %RBP
  %3490 = sub i64 %3489, 152
  %3491 = load i64, i64* %PC
  %3492 = add i64 %3491, 8
  store i64 %3492, i64* %PC
  %3493 = inttoptr i64 %3490 to double*
  %3494 = load double, double* %3493
  %3495 = bitcast i8* %3488 to double*
  store double %3494, double* %3495, align 1, !tbaa !2432
  %3496 = getelementptr inbounds i8, i8* %3488, i64 8
  %3497 = bitcast i8* %3496 to double*
  store double 0.000000e+00, double* %3497, align 1, !tbaa !2432
  %3498 = load i64, i64* %PC
  %3499 = add i64 %3498, 1220
  %3500 = load i64, i64* %PC
  %3501 = add i64 %3500, 5
  %3502 = load i64, i64* %PC
  %3503 = add i64 %3502, 5
  store i64 %3503, i64* %PC
  %3504 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3505 = load i64, i64* %3504, align 8, !tbaa !2428
  %3506 = add i64 %3505, -8
  %3507 = inttoptr i64 %3506 to i64*
  store i64 %3501, i64* %3507
  store i64 %3506, i64* %3504, align 8, !tbaa !2428
  %3508 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3499, i64* %3508, align 8, !tbaa !2428
  %3509 = load i64, i64* %PC
  %3510 = call %struct.Memory* @sub_401790_P3_renamed_(%struct.State* %0, i64 %3509, %struct.Memory* %MEMORY.14)
  %3511 = load i64, i64* %RBP
  %3512 = sub i64 %3511, 24
  %3513 = load i64, i64* %PC
  %3514 = add i64 %3513, 4
  store i64 %3514, i64* %PC
  %3515 = inttoptr i64 %3512 to i64*
  %3516 = load i64, i64* %3515
  store i64 %3516, i64* %RAX, align 8, !tbaa !2428
  %3517 = load i64, i64* %RAX
  %3518 = load i64, i64* %PC
  %3519 = add i64 %3518, 4
  store i64 %3519, i64* %PC
  %3520 = add i64 1, %3517
  store i64 %3520, i64* %RAX, align 8, !tbaa !2428
  %3521 = icmp ult i64 %3520, %3517
  %3522 = icmp ult i64 %3520, 1
  %3523 = or i1 %3521, %3522
  %3524 = zext i1 %3523 to i8
  %3525 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3524, i8* %3525, align 1, !tbaa !2434
  %3526 = trunc i64 %3520 to i32
  %3527 = and i32 %3526, 255
  %3528 = call i32 @llvm.ctpop.i32(i32 %3527) #17
  %3529 = trunc i32 %3528 to i8
  %3530 = and i8 %3529, 1
  %3531 = xor i8 %3530, 1
  %3532 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3531, i8* %3532, align 1, !tbaa !2448
  %3533 = xor i64 1, %3517
  %3534 = xor i64 %3533, %3520
  %3535 = lshr i64 %3534, 4
  %3536 = trunc i64 %3535 to i8
  %3537 = and i8 %3536, 1
  %3538 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3537, i8* %3538, align 1, !tbaa !2449
  %3539 = icmp eq i64 %3520, 0
  %3540 = zext i1 %3539 to i8
  %3541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3540, i8* %3541, align 1, !tbaa !2450
  %3542 = lshr i64 %3520, 63
  %3543 = trunc i64 %3542 to i8
  %3544 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3543, i8* %3544, align 1, !tbaa !2451
  %3545 = lshr i64 %3517, 63
  %3546 = xor i64 %3542, %3545
  %3547 = add nuw nsw i64 %3546, %3542
  %3548 = icmp eq i64 %3547, 2
  %3549 = zext i1 %3548 to i8
  %3550 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3549, i8* %3550, align 1, !tbaa !2452
  %3551 = load i64, i64* %RBP
  %3552 = sub i64 %3551, 24
  %3553 = load i64, i64* %RAX
  %3554 = load i64, i64* %PC
  %3555 = add i64 %3554, 4
  store i64 %3555, i64* %PC
  %3556 = inttoptr i64 %3552 to i64*
  store i64 %3553, i64* %3556
  %3557 = load i64, i64* %PC
  %3558 = sub i64 %3557, 54
  %3559 = load i64, i64* %PC
  %3560 = add i64 %3559, 5
  store i64 %3560, i64* %PC
  %3561 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3558, i64* %3561, align 8, !tbaa !2428
  br label %block_4012a7

block_4013bf:                                     ; preds = %block_4013ad
  %3562 = load i64, i64* %RBP
  %3563 = sub i64 %3562, 88
  %3564 = load i64, i64* %PC
  %3565 = add i64 %3564, 4
  store i64 %3565, i64* %PC
  %3566 = inttoptr i64 %3563 to i64*
  %3567 = load i64, i64* %3566
  store i64 %3567, i64* %RDI, align 8, !tbaa !2428
  %3568 = load i64, i64* %PC
  %3569 = add i64 %3568, 8
  store i64 %3569, i64* %PC
  %3570 = load i32, i32* bitcast (%J_type* @J to i32*)
  %3571 = sext i32 %3570 to i64
  store i64 %3571, i64* %RSI, align 8, !tbaa !2428
  %3572 = load i64, i64* %PC
  %3573 = add i64 %3572, 8
  store i64 %3573, i64* %PC
  %3574 = load i32, i32* bitcast (%K_type* @K to i32*)
  %3575 = sext i32 %3574 to i64
  store i64 %3575, i64* %RDX, align 8, !tbaa !2428
  %3576 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %3577 = load i64, i64* %PC
  %3578 = add i64 %3577, 9
  store i64 %3578, i64* %PC
  %3579 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 8) to double*)
  %3580 = bitcast i8* %3576 to double*
  store double %3579, double* %3580, align 1, !tbaa !2432
  %3581 = getelementptr inbounds i8, i8* %3576, i64 8
  %3582 = bitcast i8* %3581 to double*
  store double 0.000000e+00, double* %3582, align 1, !tbaa !2432
  %3583 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %3584 = load i64, i64* %PC
  %3585 = add i64 %3584, 9
  store i64 %3585, i64* %PC
  %3586 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 16) to double*)
  %3587 = bitcast i8* %3583 to double*
  store double %3586, double* %3587, align 1, !tbaa !2432
  %3588 = getelementptr inbounds i8, i8* %3583, i64 8
  %3589 = bitcast i8* %3588 to double*
  store double 0.000000e+00, double* %3589, align 1, !tbaa !2432
  %3590 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %3591 = load i64, i64* %PC
  %3592 = add i64 %3591, 9
  store i64 %3592, i64* %PC
  %3593 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 24) to double*)
  %3594 = bitcast i8* %3590 to double*
  store double %3593, double* %3594, align 1, !tbaa !2432
  %3595 = getelementptr inbounds i8, i8* %3590, i64 8
  %3596 = bitcast i8* %3595 to double*
  store double 0.000000e+00, double* %3596, align 1, !tbaa !2432
  %3597 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %3598 = load i64, i64* %PC
  %3599 = add i64 %3598, 9
  store i64 %3599, i64* %PC
  %3600 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 32) to double*)
  %3601 = bitcast i8* %3597 to double*
  store double %3600, double* %3601, align 1, !tbaa !2432
  %3602 = getelementptr inbounds i8, i8* %3597, i64 8
  %3603 = bitcast i8* %3602 to double*
  store double 0.000000e+00, double* %3603, align 1, !tbaa !2432
  %3604 = load i64, i64* %PC
  %3605 = add i64 %3604, 505
  %3606 = load i64, i64* %PC
  %3607 = add i64 %3606, 5
  %3608 = load i64, i64* %PC
  %3609 = add i64 %3608, 5
  store i64 %3609, i64* %PC
  %3610 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3611 = load i64, i64* %3610, align 8, !tbaa !2428
  %3612 = add i64 %3611, -8
  %3613 = inttoptr i64 %3612 to i64*
  store i64 %3607, i64* %3613
  store i64 %3612, i64* %3610, align 8, !tbaa !2428
  %3614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3605, i64* %3614, align 8, !tbaa !2428
  %3615 = load i64, i64* %PC
  %3616 = call %struct.Memory* @sub_4015f0_POUT_renamed_(%struct.State* %0, i64 %3615, %struct.Memory* %MEMORY.25)
  br label %block_4013fc

block_401234:                                     ; preds = %block_40103d
  %3617 = load i64, i64* %RBP
  %3618 = sub i64 %3617, 176
  %3619 = load i64, i64* %PC
  %3620 = add i64 %3619, 6
  store i64 %3620, i64* %PC
  %3621 = inttoptr i64 %3618 to i32*
  %3622 = load i32, i32* %3621
  %3623 = zext i32 %3622 to i64
  store i64 %3623, i64* %RAX, align 8, !tbaa !2428
  %3624 = load i32, i32* %EAX
  %3625 = zext i32 %3624 to i64
  %3626 = load i64, i64* %RBP
  %3627 = sub i64 %3626, 172
  %3628 = load i64, i64* %PC
  %3629 = add i64 %3628, 6
  store i64 %3629, i64* %PC
  %3630 = inttoptr i64 %3627 to i32*
  %3631 = load i32, i32* %3630
  %3632 = sub i32 %3624, %3631
  %3633 = icmp ult i32 %3624, %3631
  %3634 = zext i1 %3633 to i8
  %3635 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3634, i8* %3635, align 1, !tbaa !2434
  %3636 = and i32 %3632, 255
  %3637 = call i32 @llvm.ctpop.i32(i32 %3636) #17
  %3638 = trunc i32 %3637 to i8
  %3639 = and i8 %3638, 1
  %3640 = xor i8 %3639, 1
  %3641 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3640, i8* %3641, align 1, !tbaa !2448
  %3642 = xor i32 %3631, %3624
  %3643 = xor i32 %3642, %3632
  %3644 = lshr i32 %3643, 4
  %3645 = trunc i32 %3644 to i8
  %3646 = and i8 %3645, 1
  %3647 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3646, i8* %3647, align 1, !tbaa !2449
  %3648 = icmp eq i32 %3632, 0
  %3649 = zext i1 %3648 to i8
  %3650 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3649, i8* %3650, align 1, !tbaa !2450
  %3651 = lshr i32 %3632, 31
  %3652 = trunc i32 %3651 to i8
  %3653 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3652, i8* %3653, align 1, !tbaa !2451
  %3654 = lshr i32 %3624, 31
  %3655 = lshr i32 %3631, 31
  %3656 = xor i32 %3655, %3654
  %3657 = xor i32 %3651, %3654
  %3658 = add nuw nsw i32 %3657, %3656
  %3659 = icmp eq i32 %3658, 2
  %3660 = zext i1 %3659 to i8
  %3661 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3660, i8* %3661, align 1, !tbaa !2452
  %3662 = load i64, i64* %PC
  %3663 = add i64 %3662, 63
  %3664 = load i64, i64* %PC
  %3665 = add i64 %3664, 6
  %3666 = load i64, i64* %PC
  %3667 = add i64 %3666, 6
  store i64 %3667, i64* %PC
  %3668 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3669 = load i8, i8* %3668, align 1, !tbaa !2450
  %3670 = icmp eq i8 %3669, 0
  %3671 = zext i1 %3670 to i8
  store i8 %3671, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %3672 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3673 = select i1 %3670, i64 %3663, i64 %3665
  store i64 %3673, i64* %3672, align 8, !tbaa !2428
  %3674 = load i8, i8* %BRANCH_TAKEN
  %3675 = icmp eq i8 %3674, 1
  br i1 %3675, label %block_40127f, label %block_401246

block_400dcf:                                     ; preds = %block_400dc1
  %3676 = load i64, i64* %PC
  %3677 = add i64 %3676, 8
  store i64 %3677, i64* %PC
  %3678 = load i32, i32* bitcast (%J_type* @J to i32*)
  %3679 = sub i32 %3678, 1
  %3680 = icmp ult i32 %3678, 1
  %3681 = zext i1 %3680 to i8
  %3682 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3681, i8* %3682, align 1, !tbaa !2434
  %3683 = and i32 %3679, 255
  %3684 = call i32 @llvm.ctpop.i32(i32 %3683) #17
  %3685 = trunc i32 %3684 to i8
  %3686 = and i8 %3685, 1
  %3687 = xor i8 %3686, 1
  %3688 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3687, i8* %3688, align 1, !tbaa !2448
  %3689 = xor i32 %3678, 1
  %3690 = xor i32 %3689, %3679
  %3691 = lshr i32 %3690, 4
  %3692 = trunc i32 %3691 to i8
  %3693 = and i8 %3692, 1
  %3694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3693, i8* %3694, align 1, !tbaa !2449
  %3695 = icmp eq i32 %3679, 0
  %3696 = zext i1 %3695 to i8
  %3697 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3696, i8* %3697, align 1, !tbaa !2450
  %3698 = lshr i32 %3679, 31
  %3699 = trunc i32 %3698 to i8
  %3700 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3699, i8* %3700, align 1, !tbaa !2451
  %3701 = lshr i32 %3678, 31
  %3702 = xor i32 %3698, %3701
  %3703 = add nuw nsw i32 %3702, %3701
  %3704 = icmp eq i32 %3703, 2
  %3705 = zext i1 %3704 to i8
  %3706 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3705, i8* %3706, align 1, !tbaa !2452
  %3707 = load i64, i64* %PC
  %3708 = add i64 %3707, 22
  %3709 = load i64, i64* %PC
  %3710 = add i64 %3709, 6
  %3711 = load i64, i64* %PC
  %3712 = add i64 %3711, 6
  store i64 %3712, i64* %PC
  %3713 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3714 = load i8, i8* %3713, align 1, !tbaa !2450
  %3715 = icmp eq i8 %3714, 0
  %3716 = zext i1 %3715 to i8
  store i8 %3716, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %3717 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3718 = select i1 %3715, i64 %3708, i64 %3710
  store i64 %3718, i64* %3717, align 8, !tbaa !2428
  %3719 = load i8, i8* %BRANCH_TAKEN
  %3720 = icmp eq i8 %3719, 1
  %3721 = load i64, i64* %PC
  %3722 = add i64 %3721, 11
  store i64 %3722, i64* %PC
  br i1 %3720, label %block_400ded, label %block_400ddd

block_400d31:                                     ; preds = %block_400cea, %block_400cfc
  %MEMORY.10 = phi %struct.Memory* [ %MEMORY.4, %block_400cea ], [ %2686, %block_400cfc ]
  %3723 = load i64, i64* %RBP
  %3724 = sub i64 %3723, 24
  %3725 = load i64, i64* %PC
  %3726 = add i64 %3725, 8
  store i64 %3726, i64* %PC
  %3727 = inttoptr i64 %3724 to i64*
  store i64 1, i64* %3727
  br label %block_400d39

block_4008f0:                                     ; preds = %block_4008d5, %block_4008a7
  %MEMORY.11 = phi %struct.Memory* [ %3096, %block_4008a7 ], [ %3096, %block_4008d5 ]
  %3728 = load i64, i64* %RBP
  %3729 = sub i64 %3728, 208
  %3730 = load i64, i64* %PC
  %3731 = add i64 %3730, 10
  store i64 %3731, i64* %PC
  %3732 = inttoptr i64 %3729 to i32*
  store i32 1, i32* %3732
  %3733 = load i64, i64* %PC
  %3734 = add i64 %3733, 115
  %3735 = load i64, i64* %PC
  %3736 = add i64 %3735, 5
  store i64 %3736, i64* %PC
  %3737 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3734, i64* %3737, align 8, !tbaa !2428
  br label %block_40096d

block_400e2f:                                     ; preds = %block_400e21
  store i32 1, i32* bitcast (%J_type* @J to i32*)
  %3738 = load i64, i64* %PC
  %3739 = add i64 %3738, 16
  %3740 = load i64, i64* %PC
  %3741 = add i64 %3740, 5
  store i64 %3741, i64* %PC
  %3742 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3739, i64* %3742, align 8, !tbaa !2428
  br label %block_400e4a

block_400dae:                                     ; preds = %block_400d67, %block_400d79
  %MEMORY.12 = phi %struct.Memory* [ %MEMORY.18, %block_400d67 ], [ %550, %block_400d79 ]
  %3743 = load i64, i64* %PC
  %3744 = add i64 %3743, 11
  store i64 %3744, i64* %PC
  store i32 1, i32* bitcast (%J_type* @J to i32*)
  %3745 = load i64, i64* %RBP
  %3746 = sub i64 %3745, 24
  %3747 = load i64, i64* %PC
  %3748 = add i64 %3747, 8
  store i64 %3748, i64* %PC
  %3749 = inttoptr i64 %3746 to i64*
  store i64 1, i64* %3749
  br label %block_400dc1

block_400d47:                                     ; preds = %block_400d39
  %3750 = load i64, i64* %PC
  %3751 = add i64 %3750, 10
  store i64 %3751, i64* %PC
  store i64 ptrtoint (%E1_type* @E1 to i64), i64* %RDI, align 8, !tbaa !2428
  %3752 = load i64, i64* %PC
  %3753 = add i64 %3752, 2319
  %3754 = load i64, i64* %PC
  %3755 = add i64 %3754, 5
  %3756 = load i64, i64* %PC
  %3757 = add i64 %3756, 5
  store i64 %3757, i64* %PC
  %3758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3759 = load i64, i64* %3758, align 8, !tbaa !2428
  %3760 = add i64 %3759, -8
  %3761 = inttoptr i64 %3760 to i64*
  store i64 %3755, i64* %3761
  store i64 %3760, i64* %3758, align 8, !tbaa !2428
  %3762 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3753, i64* %3762, align 8, !tbaa !2428
  %3763 = load i64, i64* %PC
  %3764 = call %struct.Memory* @sub_401660_PA_renamed_(%struct.State* %0, i64 %3763, %struct.Memory* %MEMORY.18)
  %3765 = load i64, i64* %RBP
  %3766 = sub i64 %3765, 24
  %3767 = load i64, i64* %PC
  %3768 = add i64 %3767, 4
  store i64 %3768, i64* %PC
  %3769 = inttoptr i64 %3766 to i64*
  %3770 = load i64, i64* %3769
  store i64 %3770, i64* %RAX, align 8, !tbaa !2428
  %3771 = load i64, i64* %RAX
  %3772 = load i64, i64* %PC
  %3773 = add i64 %3772, 4
  store i64 %3773, i64* %PC
  %3774 = add i64 1, %3771
  store i64 %3774, i64* %RAX, align 8, !tbaa !2428
  %3775 = icmp ult i64 %3774, %3771
  %3776 = icmp ult i64 %3774, 1
  %3777 = or i1 %3775, %3776
  %3778 = zext i1 %3777 to i8
  %3779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3778, i8* %3779, align 1, !tbaa !2434
  %3780 = trunc i64 %3774 to i32
  %3781 = and i32 %3780, 255
  %3782 = call i32 @llvm.ctpop.i32(i32 %3781) #17
  %3783 = trunc i32 %3782 to i8
  %3784 = and i8 %3783, 1
  %3785 = xor i8 %3784, 1
  %3786 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3785, i8* %3786, align 1, !tbaa !2448
  %3787 = xor i64 1, %3771
  %3788 = xor i64 %3787, %3774
  %3789 = lshr i64 %3788, 4
  %3790 = trunc i64 %3789 to i8
  %3791 = and i8 %3790, 1
  %3792 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3791, i8* %3792, align 1, !tbaa !2449
  %3793 = icmp eq i64 %3774, 0
  %3794 = zext i1 %3793 to i8
  %3795 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3794, i8* %3795, align 1, !tbaa !2450
  %3796 = lshr i64 %3774, 63
  %3797 = trunc i64 %3796 to i8
  %3798 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3797, i8* %3798, align 1, !tbaa !2451
  %3799 = lshr i64 %3771, 63
  %3800 = xor i64 %3796, %3799
  %3801 = add nuw nsw i64 %3800, %3796
  %3802 = icmp eq i64 %3801, 2
  %3803 = zext i1 %3802 to i8
  %3804 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3803, i8* %3804, align 1, !tbaa !2452
  %3805 = load i64, i64* %RBP
  %3806 = sub i64 %3805, 24
  %3807 = load i64, i64* %RAX
  %3808 = load i64, i64* %PC
  %3809 = add i64 %3808, 4
  store i64 %3809, i64* %PC
  %3810 = inttoptr i64 %3806 to i64*
  store i64 %3807, i64* %3810
  %3811 = load i64, i64* %PC
  %3812 = sub i64 %3811, 41
  %3813 = load i64, i64* %PC
  %3814 = add i64 %3813, 5
  store i64 %3814, i64* %PC
  %3815 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3812, i64* %3815, align 8, !tbaa !2428
  br label %block_400d39

block_401428:                                     ; preds = %block_40141a
  %3816 = load i64, i64* %PC
  %3817 = add i64 %3816, 7
  store i64 %3817, i64* %PC
  %3818 = load i32, i32* bitcast (%J_type* @J to i32*)
  %3819 = zext i32 %3818 to i64
  store i64 %3819, i64* %RAX, align 8, !tbaa !2428
  %3820 = load i64, i64* %RAX
  %3821 = load i64, i64* %PC
  %3822 = add i64 %3821, 7
  store i64 %3822, i64* %PC
  %3823 = trunc i64 %3820 to i32
  %3824 = load i32, i32* bitcast (%K_type* @K to i32*)
  %3825 = add i32 %3824, %3823
  %3826 = zext i32 %3825 to i64
  store i64 %3826, i64* %RAX, align 8, !tbaa !2428
  %3827 = icmp ult i32 %3825, %3823
  %3828 = icmp ult i32 %3825, %3824
  %3829 = or i1 %3827, %3828
  %3830 = zext i1 %3829 to i8
  %3831 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3830, i8* %3831, align 1, !tbaa !2434
  %3832 = and i32 %3825, 255
  %3833 = call i32 @llvm.ctpop.i32(i32 %3832) #17
  %3834 = trunc i32 %3833 to i8
  %3835 = and i8 %3834, 1
  %3836 = xor i8 %3835, 1
  %3837 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3836, i8* %3837, align 1, !tbaa !2448
  %3838 = xor i32 %3824, %3823
  %3839 = xor i32 %3838, %3825
  %3840 = lshr i32 %3839, 4
  %3841 = trunc i32 %3840 to i8
  %3842 = and i8 %3841, 1
  %3843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3842, i8* %3843, align 1, !tbaa !2449
  %3844 = icmp eq i32 %3825, 0
  %3845 = zext i1 %3844 to i8
  %3846 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3845, i8* %3846, align 1, !tbaa !2450
  %3847 = lshr i32 %3825, 31
  %3848 = trunc i32 %3847 to i8
  %3849 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3848, i8* %3849, align 1, !tbaa !2451
  %3850 = lshr i32 %3823, 31
  %3851 = lshr i32 %3824, 31
  %3852 = xor i32 %3847, %3850
  %3853 = xor i32 %3847, %3851
  %3854 = add nuw nsw i32 %3852, %3853
  %3855 = icmp eq i32 %3854, 2
  %3856 = zext i1 %3855 to i8
  %3857 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3856, i8* %3857, align 1, !tbaa !2452
  %3858 = load i32, i32* %EAX
  %3859 = zext i32 %3858 to i64
  %3860 = load i64, i64* %PC
  %3861 = add i64 %3860, 7
  store i64 %3861, i64* %PC
  store i32 %3858, i32* bitcast (%J_type* @J to i32*)
  %3862 = load i64, i64* %PC
  %3863 = add i64 %3862, 7
  store i64 %3863, i64* %PC
  %3864 = load i32, i32* bitcast (%J_type* @J to i32*)
  %3865 = zext i32 %3864 to i64
  store i64 %3865, i64* %RAX, align 8, !tbaa !2428
  %3866 = load i64, i64* %RAX
  %3867 = load i64, i64* %PC
  %3868 = add i64 %3867, 7
  store i64 %3868, i64* %PC
  %3869 = trunc i64 %3866 to i32
  %3870 = load i32, i32* bitcast (%K_type* @K to i32*)
  %3871 = add i32 %3870, %3869
  %3872 = zext i32 %3871 to i64
  store i64 %3872, i64* %RAX, align 8, !tbaa !2428
  %3873 = icmp ult i32 %3871, %3869
  %3874 = icmp ult i32 %3871, %3870
  %3875 = or i1 %3873, %3874
  %3876 = zext i1 %3875 to i8
  %3877 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3876, i8* %3877, align 1, !tbaa !2434
  %3878 = and i32 %3871, 255
  %3879 = call i32 @llvm.ctpop.i32(i32 %3878) #17
  %3880 = trunc i32 %3879 to i8
  %3881 = and i8 %3880, 1
  %3882 = xor i8 %3881, 1
  %3883 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3882, i8* %3883, align 1, !tbaa !2448
  %3884 = xor i32 %3870, %3869
  %3885 = xor i32 %3884, %3871
  %3886 = lshr i32 %3885, 4
  %3887 = trunc i32 %3886 to i8
  %3888 = and i8 %3887, 1
  %3889 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3888, i8* %3889, align 1, !tbaa !2449
  %3890 = icmp eq i32 %3871, 0
  %3891 = zext i1 %3890 to i8
  %3892 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3891, i8* %3892, align 1, !tbaa !2450
  %3893 = lshr i32 %3871, 31
  %3894 = trunc i32 %3893 to i8
  %3895 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3894, i8* %3895, align 1, !tbaa !2451
  %3896 = lshr i32 %3869, 31
  %3897 = lshr i32 %3870, 31
  %3898 = xor i32 %3893, %3896
  %3899 = xor i32 %3893, %3897
  %3900 = add nuw nsw i32 %3898, %3899
  %3901 = icmp eq i32 %3900, 2
  %3902 = zext i1 %3901 to i8
  %3903 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3902, i8* %3903, align 1, !tbaa !2452
  %3904 = load i32, i32* %EAX
  %3905 = zext i32 %3904 to i64
  %3906 = load i64, i64* %PC
  %3907 = add i64 %3906, 7
  store i64 %3907, i64* %PC
  store i32 %3904, i32* bitcast (%K_type* @K to i32*)
  %3908 = load i64, i64* %PC
  %3909 = add i64 %3908, 7
  store i64 %3909, i64* %PC
  %3910 = load i32, i32* bitcast (%K_type* @K to i32*)
  %3911 = zext i32 %3910 to i64
  store i64 %3911, i64* %RAX, align 8, !tbaa !2428
  %3912 = load i64, i64* %RAX
  %3913 = load i64, i64* %PC
  %3914 = add i64 %3913, 7
  store i64 %3914, i64* %PC
  %3915 = trunc i64 %3912 to i32
  %3916 = load i32, i32* bitcast (%J_type* @J to i32*)
  %3917 = sub i32 %3915, %3916
  %3918 = zext i32 %3917 to i64
  store i64 %3918, i64* %RAX, align 8, !tbaa !2428
  %3919 = icmp ult i32 %3915, %3916
  %3920 = zext i1 %3919 to i8
  %3921 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3920, i8* %3921, align 1, !tbaa !2434
  %3922 = and i32 %3917, 255
  %3923 = call i32 @llvm.ctpop.i32(i32 %3922) #17
  %3924 = trunc i32 %3923 to i8
  %3925 = and i8 %3924, 1
  %3926 = xor i8 %3925, 1
  %3927 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3926, i8* %3927, align 1, !tbaa !2448
  %3928 = xor i32 %3916, %3915
  %3929 = xor i32 %3928, %3917
  %3930 = lshr i32 %3929, 4
  %3931 = trunc i32 %3930 to i8
  %3932 = and i8 %3931, 1
  %3933 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3932, i8* %3933, align 1, !tbaa !2449
  %3934 = icmp eq i32 %3917, 0
  %3935 = zext i1 %3934 to i8
  %3936 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3935, i8* %3936, align 1, !tbaa !2450
  %3937 = lshr i32 %3917, 31
  %3938 = trunc i32 %3937 to i8
  %3939 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3938, i8* %3939, align 1, !tbaa !2451
  %3940 = lshr i32 %3915, 31
  %3941 = lshr i32 %3916, 31
  %3942 = xor i32 %3941, %3940
  %3943 = xor i32 %3937, %3940
  %3944 = add nuw nsw i32 %3943, %3942
  %3945 = icmp eq i32 %3944, 2
  %3946 = zext i1 %3945 to i8
  %3947 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3946, i8* %3947, align 1, !tbaa !2452
  %3948 = load i32, i32* %EAX
  %3949 = zext i32 %3948 to i64
  %3950 = load i64, i64* %PC
  %3951 = add i64 %3950, 7
  store i64 %3951, i64* %PC
  store i32 %3948, i32* bitcast (%J_type* @J to i32*)
  %3952 = load i64, i64* %PC
  %3953 = add i64 %3952, 7
  store i64 %3953, i64* %PC
  %3954 = load i32, i32* bitcast (%K_type* @K to i32*)
  %3955 = zext i32 %3954 to i64
  store i64 %3955, i64* %RAX, align 8, !tbaa !2428
  %3956 = load i64, i64* %RAX
  %3957 = load i64, i64* %PC
  %3958 = add i64 %3957, 7
  store i64 %3958, i64* %PC
  %3959 = trunc i64 %3956 to i32
  %3960 = load i32, i32* bitcast (%J_type* @J to i32*)
  %3961 = sub i32 %3959, %3960
  %3962 = zext i32 %3961 to i64
  store i64 %3962, i64* %RAX, align 8, !tbaa !2428
  %3963 = icmp ult i32 %3959, %3960
  %3964 = zext i1 %3963 to i8
  %3965 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3964, i8* %3965, align 1, !tbaa !2434
  %3966 = and i32 %3961, 255
  %3967 = call i32 @llvm.ctpop.i32(i32 %3966) #17
  %3968 = trunc i32 %3967 to i8
  %3969 = and i8 %3968, 1
  %3970 = xor i8 %3969, 1
  %3971 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3970, i8* %3971, align 1, !tbaa !2448
  %3972 = xor i32 %3960, %3959
  %3973 = xor i32 %3972, %3961
  %3974 = lshr i32 %3973, 4
  %3975 = trunc i32 %3974 to i8
  %3976 = and i8 %3975, 1
  %3977 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3976, i8* %3977, align 1, !tbaa !2449
  %3978 = icmp eq i32 %3961, 0
  %3979 = zext i1 %3978 to i8
  %3980 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3979, i8* %3980, align 1, !tbaa !2450
  %3981 = lshr i32 %3961, 31
  %3982 = trunc i32 %3981 to i8
  %3983 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3982, i8* %3983, align 1, !tbaa !2451
  %3984 = lshr i32 %3959, 31
  %3985 = lshr i32 %3960, 31
  %3986 = xor i32 %3985, %3984
  %3987 = xor i32 %3981, %3984
  %3988 = add nuw nsw i32 %3987, %3986
  %3989 = icmp eq i32 %3988, 2
  %3990 = zext i1 %3989 to i8
  %3991 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3990, i8* %3991, align 1, !tbaa !2452
  %3992 = load i64, i64* %RAX
  %3993 = load i64, i64* %PC
  %3994 = add i64 %3993, 7
  store i64 %3994, i64* %PC
  %3995 = trunc i64 %3992 to i32
  %3996 = load i32, i32* bitcast (%J_type* @J to i32*)
  %3997 = sub i32 %3995, %3996
  %3998 = zext i32 %3997 to i64
  store i64 %3998, i64* %RAX, align 8, !tbaa !2428
  %3999 = icmp ult i32 %3995, %3996
  %4000 = zext i1 %3999 to i8
  %4001 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4000, i8* %4001, align 1, !tbaa !2434
  %4002 = and i32 %3997, 255
  %4003 = call i32 @llvm.ctpop.i32(i32 %4002) #17
  %4004 = trunc i32 %4003 to i8
  %4005 = and i8 %4004, 1
  %4006 = xor i8 %4005, 1
  %4007 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4006, i8* %4007, align 1, !tbaa !2448
  %4008 = xor i32 %3996, %3995
  %4009 = xor i32 %4008, %3997
  %4010 = lshr i32 %4009, 4
  %4011 = trunc i32 %4010 to i8
  %4012 = and i8 %4011, 1
  %4013 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4012, i8* %4013, align 1, !tbaa !2449
  %4014 = icmp eq i32 %3997, 0
  %4015 = zext i1 %4014 to i8
  %4016 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4015, i8* %4016, align 1, !tbaa !2450
  %4017 = lshr i32 %3997, 31
  %4018 = trunc i32 %4017 to i8
  %4019 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4018, i8* %4019, align 1, !tbaa !2451
  %4020 = lshr i32 %3995, 31
  %4021 = lshr i32 %3996, 31
  %4022 = xor i32 %4021, %4020
  %4023 = xor i32 %4017, %4020
  %4024 = add nuw nsw i32 %4023, %4022
  %4025 = icmp eq i32 %4024, 2
  %4026 = zext i1 %4025 to i8
  %4027 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4026, i8* %4027, align 1, !tbaa !2452
  %4028 = load i32, i32* %EAX
  %4029 = zext i32 %4028 to i64
  %4030 = load i64, i64* %PC
  %4031 = add i64 %4030, 7
  store i64 %4031, i64* %PC
  store i32 %4028, i32* bitcast (%K_type* @K to i32*)
  %4032 = load i64, i64* %RBP
  %4033 = sub i64 %4032, 24
  %4034 = load i64, i64* %PC
  %4035 = add i64 %4034, 4
  store i64 %4035, i64* %PC
  %4036 = inttoptr i64 %4033 to i64*
  %4037 = load i64, i64* %4036
  store i64 %4037, i64* %RAX, align 8, !tbaa !2428
  %4038 = load i64, i64* %RAX
  %4039 = load i64, i64* %PC
  %4040 = add i64 %4039, 4
  store i64 %4040, i64* %PC
  %4041 = add i64 1, %4038
  store i64 %4041, i64* %RAX, align 8, !tbaa !2428
  %4042 = icmp ult i64 %4041, %4038
  %4043 = icmp ult i64 %4041, 1
  %4044 = or i1 %4042, %4043
  %4045 = zext i1 %4044 to i8
  %4046 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4045, i8* %4046, align 1, !tbaa !2434
  %4047 = trunc i64 %4041 to i32
  %4048 = and i32 %4047, 255
  %4049 = call i32 @llvm.ctpop.i32(i32 %4048) #17
  %4050 = trunc i32 %4049 to i8
  %4051 = and i8 %4050, 1
  %4052 = xor i8 %4051, 1
  %4053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4052, i8* %4053, align 1, !tbaa !2448
  %4054 = xor i64 1, %4038
  %4055 = xor i64 %4054, %4041
  %4056 = lshr i64 %4055, 4
  %4057 = trunc i64 %4056 to i8
  %4058 = and i8 %4057, 1
  %4059 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4058, i8* %4059, align 1, !tbaa !2449
  %4060 = icmp eq i64 %4041, 0
  %4061 = zext i1 %4060 to i8
  %4062 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4061, i8* %4062, align 1, !tbaa !2450
  %4063 = lshr i64 %4041, 63
  %4064 = trunc i64 %4063 to i8
  %4065 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4064, i8* %4065, align 1, !tbaa !2451
  %4066 = lshr i64 %4038, 63
  %4067 = xor i64 %4063, %4066
  %4068 = add nuw nsw i64 %4067, %4063
  %4069 = icmp eq i64 %4068, 2
  %4070 = zext i1 %4069 to i8
  %4071 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4070, i8* %4071, align 1, !tbaa !2452
  %4072 = load i64, i64* %RBP
  %4073 = sub i64 %4072, 24
  %4074 = load i64, i64* %RAX
  %4075 = load i64, i64* %PC
  %4076 = add i64 %4075, 4
  store i64 %4076, i64* %PC
  %4077 = inttoptr i64 %4073 to i64*
  store i64 %4074, i64* %4077
  %4078 = load i64, i64* %PC
  %4079 = sub i64 %4078, 117
  %4080 = load i64, i64* %PC
  %4081 = add i64 %4080, 5
  store i64 %4081, i64* %PC
  %4082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4079, i64* %4082, align 8, !tbaa !2428
  br label %block_40141a

block_4014d6:                                     ; preds = %block_401494, %block_4014a6
  %MEMORY.13 = phi %struct.Memory* [ %MEMORY.22, %block_401494 ], [ %4587, %block_4014a6 ]
  %4083 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4084 = load i64, i64* %PC
  %4085 = add i64 %4084, 8
  store i64 %4085, i64* %PC
  %4086 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_401900__rodata_type* @seg_401900__rodata to i64), i64 64) to double*)
  %4087 = bitcast i8* %4083 to double*
  store double %4086, double* %4087, align 1, !tbaa !2432
  %4088 = getelementptr inbounds i8, i8* %4083, i64 8
  %4089 = bitcast i8* %4088 to double*
  store double 0.000000e+00, double* %4089, align 1, !tbaa !2432
  %4090 = load i64, i64* %RBP
  %4091 = sub i64 %4090, 144
  %4092 = bitcast %union.vec128_t* %XMM0 to i8*
  %4093 = load i64, i64* %PC
  %4094 = add i64 %4093, 8
  store i64 %4094, i64* %PC
  %4095 = bitcast i8* %4092 to double*
  %4096 = load double, double* %4095, align 1
  %4097 = inttoptr i64 %4091 to double*
  store double %4096, double* %4097
  %4098 = load i64, i64* %RBP
  %4099 = sub i64 %4098, 24
  %4100 = load i64, i64* %PC
  %4101 = add i64 %4100, 8
  store i64 %4101, i64* %PC
  %4102 = inttoptr i64 %4099 to i64*
  store i64 1, i64* %4102
  br label %block_4014ee

block_400aa7:                                     ; preds = %block_400a99
  %4103 = load i64, i64* %PC
  %4104 = add i64 %4103, 10
  store i64 %4104, i64* %PC
  store i64 -9223372036854775808, i64* %RAX, align 8, !tbaa !2428
  %4105 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4106 = load i64, i64* %RBP
  %4107 = sub i64 %4106, 112
  %4108 = load i64, i64* %PC
  %4109 = add i64 %4108, 5
  store i64 %4109, i64* %PC
  %4110 = inttoptr i64 %4107 to double*
  %4111 = load double, double* %4110
  %4112 = bitcast i8* %4105 to double*
  store double %4111, double* %4112, align 1, !tbaa !2432
  %4113 = getelementptr inbounds i8, i8* %4105, i64 8
  %4114 = bitcast i8* %4113 to double*
  store double 0.000000e+00, double* %4114, align 1, !tbaa !2432
  %4115 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4116 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4117 = load i64, i64* %RBP
  %4118 = sub i64 %4117, 120
  %4119 = load i64, i64* %PC
  %4120 = add i64 %4119, 5
  store i64 %4120, i64* %PC
  %4121 = bitcast i8* %4116 to double*
  %4122 = load double, double* %4121, align 1
  %4123 = getelementptr inbounds i8, i8* %4116, i64 8
  %4124 = bitcast i8* %4123 to i64*
  %4125 = load i64, i64* %4124, align 1
  %4126 = inttoptr i64 %4118 to double*
  %4127 = load double, double* %4126
  %4128 = fadd double %4122, %4127
  %4129 = bitcast i8* %4115 to double*
  store double %4128, double* %4129, align 1, !tbaa !2432
  %4130 = getelementptr inbounds i8, i8* %4115, i64 8
  %4131 = bitcast i8* %4130 to i64*
  store i64 %4125, i64* %4131, align 1, !tbaa !2432
  %4132 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4133 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4134 = load i64, i64* %RBP
  %4135 = sub i64 %4134, 128
  %4136 = load i64, i64* %PC
  %4137 = add i64 %4136, 5
  store i64 %4137, i64* %PC
  %4138 = bitcast i8* %4133 to double*
  %4139 = load double, double* %4138, align 1
  %4140 = getelementptr inbounds i8, i8* %4133, i64 8
  %4141 = bitcast i8* %4140 to i64*
  %4142 = load i64, i64* %4141, align 1
  %4143 = inttoptr i64 %4135 to double*
  %4144 = load double, double* %4143
  %4145 = fadd double %4139, %4144
  %4146 = bitcast i8* %4132 to double*
  store double %4145, double* %4146, align 1, !tbaa !2432
  %4147 = getelementptr inbounds i8, i8* %4132, i64 8
  %4148 = bitcast i8* %4147 to i64*
  store i64 %4142, i64* %4148, align 1, !tbaa !2432
  %4149 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4150 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4151 = load i64, i64* %RBP
  %4152 = sub i64 %4151, 136
  %4153 = load i64, i64* %PC
  %4154 = add i64 %4153, 8
  store i64 %4154, i64* %PC
  %4155 = bitcast i8* %4150 to double*
  %4156 = load double, double* %4155, align 1
  %4157 = getelementptr inbounds i8, i8* %4150, i64 8
  %4158 = bitcast i8* %4157 to i64*
  %4159 = load i64, i64* %4158, align 1
  %4160 = inttoptr i64 %4152 to double*
  %4161 = load double, double* %4160
  %4162 = fsub double %4156, %4161
  %4163 = bitcast i8* %4149 to double*
  store double %4162, double* %4163, align 1, !tbaa !2432
  %4164 = getelementptr inbounds i8, i8* %4149, i64 8
  %4165 = bitcast i8* %4164 to i64*
  store i64 %4159, i64* %4165, align 1, !tbaa !2432
  %4166 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4167 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4168 = load i64, i64* %PC
  %4169 = add i64 %4168, 9
  store i64 %4169, i64* %PC
  %4170 = bitcast i8* %4167 to double*
  %4171 = load double, double* %4170, align 1
  %4172 = getelementptr inbounds i8, i8* %4167, i64 8
  %4173 = bitcast i8* %4172 to i64*
  %4174 = load i64, i64* %4173, align 1
  %4175 = load double, double* bitcast (%T_type* @T to double*)
  %4176 = fmul double %4171, %4175
  %4177 = bitcast i8* %4166 to double*
  store double %4176, double* %4177, align 1, !tbaa !2432
  %4178 = getelementptr inbounds i8, i8* %4166, i64 8
  %4179 = bitcast i8* %4178 to i64*
  store i64 %4174, i64* %4179, align 1, !tbaa !2432
  %4180 = load i64, i64* %RBP
  %4181 = sub i64 %4180, 112
  %4182 = bitcast %union.vec128_t* %XMM0 to i8*
  %4183 = load i64, i64* %PC
  %4184 = add i64 %4183, 5
  store i64 %4184, i64* %PC
  %4185 = bitcast i8* %4182 to double*
  %4186 = load double, double* %4185, align 1
  %4187 = inttoptr i64 %4181 to double*
  store double %4186, double* %4187
  %4188 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4189 = load i64, i64* %RBP
  %4190 = sub i64 %4189, 112
  %4191 = load i64, i64* %PC
  %4192 = add i64 %4191, 5
  store i64 %4192, i64* %PC
  %4193 = inttoptr i64 %4190 to double*
  %4194 = load double, double* %4193
  %4195 = bitcast i8* %4188 to double*
  store double %4194, double* %4195, align 1, !tbaa !2432
  %4196 = getelementptr inbounds i8, i8* %4188, i64 8
  %4197 = bitcast i8* %4196 to double*
  store double 0.000000e+00, double* %4197, align 1, !tbaa !2432
  %4198 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4199 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4200 = load i64, i64* %RBP
  %4201 = sub i64 %4200, 120
  %4202 = load i64, i64* %PC
  %4203 = add i64 %4202, 5
  store i64 %4203, i64* %PC
  %4204 = bitcast i8* %4199 to double*
  %4205 = load double, double* %4204, align 1
  %4206 = getelementptr inbounds i8, i8* %4199, i64 8
  %4207 = bitcast i8* %4206 to i64*
  %4208 = load i64, i64* %4207, align 1
  %4209 = inttoptr i64 %4201 to double*
  %4210 = load double, double* %4209
  %4211 = fadd double %4205, %4210
  %4212 = bitcast i8* %4198 to double*
  store double %4211, double* %4212, align 1, !tbaa !2432
  %4213 = getelementptr inbounds i8, i8* %4198, i64 8
  %4214 = bitcast i8* %4213 to i64*
  store i64 %4208, i64* %4214, align 1, !tbaa !2432
  %4215 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4216 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4217 = load i64, i64* %RBP
  %4218 = sub i64 %4217, 128
  %4219 = load i64, i64* %PC
  %4220 = add i64 %4219, 5
  store i64 %4220, i64* %PC
  %4221 = bitcast i8* %4216 to double*
  %4222 = load double, double* %4221, align 1
  %4223 = getelementptr inbounds i8, i8* %4216, i64 8
  %4224 = bitcast i8* %4223 to i64*
  %4225 = load i64, i64* %4224, align 1
  %4226 = inttoptr i64 %4218 to double*
  %4227 = load double, double* %4226
  %4228 = fsub double %4222, %4227
  %4229 = bitcast i8* %4215 to double*
  store double %4228, double* %4229, align 1, !tbaa !2432
  %4230 = getelementptr inbounds i8, i8* %4215, i64 8
  %4231 = bitcast i8* %4230 to i64*
  store i64 %4225, i64* %4231, align 1, !tbaa !2432
  %4232 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4233 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4234 = load i64, i64* %RBP
  %4235 = sub i64 %4234, 136
  %4236 = load i64, i64* %PC
  %4237 = add i64 %4236, 8
  store i64 %4237, i64* %PC
  %4238 = bitcast i8* %4233 to double*
  %4239 = load double, double* %4238, align 1
  %4240 = getelementptr inbounds i8, i8* %4233, i64 8
  %4241 = bitcast i8* %4240 to i64*
  %4242 = load i64, i64* %4241, align 1
  %4243 = inttoptr i64 %4235 to double*
  %4244 = load double, double* %4243
  %4245 = fadd double %4239, %4244
  %4246 = bitcast i8* %4232 to double*
  store double %4245, double* %4246, align 1, !tbaa !2432
  %4247 = getelementptr inbounds i8, i8* %4232, i64 8
  %4248 = bitcast i8* %4247 to i64*
  store i64 %4242, i64* %4248, align 1, !tbaa !2432
  %4249 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4250 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4251 = load i64, i64* %PC
  %4252 = add i64 %4251, 9
  store i64 %4252, i64* %PC
  %4253 = bitcast i8* %4250 to double*
  %4254 = load double, double* %4253, align 1
  %4255 = getelementptr inbounds i8, i8* %4250, i64 8
  %4256 = bitcast i8* %4255 to i64*
  %4257 = load i64, i64* %4256, align 1
  %4258 = load double, double* bitcast (%T_type* @T to double*)
  %4259 = fmul double %4254, %4258
  %4260 = bitcast i8* %4249 to double*
  store double %4259, double* %4260, align 1, !tbaa !2432
  %4261 = getelementptr inbounds i8, i8* %4249, i64 8
  %4262 = bitcast i8* %4261 to i64*
  store i64 %4257, i64* %4262, align 1, !tbaa !2432
  %4263 = load i64, i64* %RBP
  %4264 = sub i64 %4263, 120
  %4265 = bitcast %union.vec128_t* %XMM0 to i8*
  %4266 = load i64, i64* %PC
  %4267 = add i64 %4266, 5
  store i64 %4267, i64* %PC
  %4268 = bitcast i8* %4265 to double*
  %4269 = load double, double* %4268, align 1
  %4270 = inttoptr i64 %4264 to double*
  store double %4269, double* %4270
  %4271 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4272 = load i64, i64* %RBP
  %4273 = sub i64 %4272, 112
  %4274 = load i64, i64* %PC
  %4275 = add i64 %4274, 5
  store i64 %4275, i64* %PC
  %4276 = inttoptr i64 %4273 to double*
  %4277 = load double, double* %4276
  %4278 = bitcast i8* %4271 to double*
  store double %4277, double* %4278, align 1, !tbaa !2432
  %4279 = getelementptr inbounds i8, i8* %4271, i64 8
  %4280 = bitcast i8* %4279 to double*
  store double 0.000000e+00, double* %4280, align 1, !tbaa !2432
  %4281 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4282 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4283 = load i64, i64* %RBP
  %4284 = sub i64 %4283, 120
  %4285 = load i64, i64* %PC
  %4286 = add i64 %4285, 5
  store i64 %4286, i64* %PC
  %4287 = bitcast i8* %4282 to double*
  %4288 = load double, double* %4287, align 1
  %4289 = getelementptr inbounds i8, i8* %4282, i64 8
  %4290 = bitcast i8* %4289 to i64*
  %4291 = load i64, i64* %4290, align 1
  %4292 = inttoptr i64 %4284 to double*
  %4293 = load double, double* %4292
  %4294 = fsub double %4288, %4293
  %4295 = bitcast i8* %4281 to double*
  store double %4294, double* %4295, align 1, !tbaa !2432
  %4296 = getelementptr inbounds i8, i8* %4281, i64 8
  %4297 = bitcast i8* %4296 to i64*
  store i64 %4291, i64* %4297, align 1, !tbaa !2432
  %4298 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4299 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4300 = load i64, i64* %RBP
  %4301 = sub i64 %4300, 128
  %4302 = load i64, i64* %PC
  %4303 = add i64 %4302, 5
  store i64 %4303, i64* %PC
  %4304 = bitcast i8* %4299 to double*
  %4305 = load double, double* %4304, align 1
  %4306 = getelementptr inbounds i8, i8* %4299, i64 8
  %4307 = bitcast i8* %4306 to i64*
  %4308 = load i64, i64* %4307, align 1
  %4309 = inttoptr i64 %4301 to double*
  %4310 = load double, double* %4309
  %4311 = fadd double %4305, %4310
  %4312 = bitcast i8* %4298 to double*
  store double %4311, double* %4312, align 1, !tbaa !2432
  %4313 = getelementptr inbounds i8, i8* %4298, i64 8
  %4314 = bitcast i8* %4313 to i64*
  store i64 %4308, i64* %4314, align 1, !tbaa !2432
  %4315 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4316 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4317 = load i64, i64* %RBP
  %4318 = sub i64 %4317, 136
  %4319 = load i64, i64* %PC
  %4320 = add i64 %4319, 8
  store i64 %4320, i64* %PC
  %4321 = bitcast i8* %4316 to double*
  %4322 = load double, double* %4321, align 1
  %4323 = getelementptr inbounds i8, i8* %4316, i64 8
  %4324 = bitcast i8* %4323 to i64*
  %4325 = load i64, i64* %4324, align 1
  %4326 = inttoptr i64 %4318 to double*
  %4327 = load double, double* %4326
  %4328 = fadd double %4322, %4327
  %4329 = bitcast i8* %4315 to double*
  store double %4328, double* %4329, align 1, !tbaa !2432
  %4330 = getelementptr inbounds i8, i8* %4315, i64 8
  %4331 = bitcast i8* %4330 to i64*
  store i64 %4325, i64* %4331, align 1, !tbaa !2432
  %4332 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4333 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4334 = load i64, i64* %PC
  %4335 = add i64 %4334, 9
  store i64 %4335, i64* %PC
  %4336 = bitcast i8* %4333 to double*
  %4337 = load double, double* %4336, align 1
  %4338 = getelementptr inbounds i8, i8* %4333, i64 8
  %4339 = bitcast i8* %4338 to i64*
  %4340 = load i64, i64* %4339, align 1
  %4341 = load double, double* bitcast (%T_type* @T to double*)
  %4342 = fmul double %4337, %4341
  %4343 = bitcast i8* %4332 to double*
  store double %4342, double* %4343, align 1, !tbaa !2432
  %4344 = getelementptr inbounds i8, i8* %4332, i64 8
  %4345 = bitcast i8* %4344 to i64*
  store i64 %4340, i64* %4345, align 1, !tbaa !2432
  %4346 = load i64, i64* %RBP
  %4347 = sub i64 %4346, 128
  %4348 = bitcast %union.vec128_t* %XMM0 to i8*
  %4349 = load i64, i64* %PC
  %4350 = add i64 %4349, 5
  store i64 %4350, i64* %PC
  %4351 = bitcast i8* %4348 to double*
  %4352 = load double, double* %4351, align 1
  %4353 = inttoptr i64 %4347 to double*
  store double %4352, double* %4353
  %4354 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4355 = load i64, i64* %RBP
  %4356 = sub i64 %4355, 112
  %4357 = load i64, i64* %PC
  %4358 = add i64 %4357, 5
  store i64 %4358, i64* %PC
  %4359 = inttoptr i64 %4356 to double*
  %4360 = load double, double* %4359
  %4361 = bitcast i8* %4354 to double*
  store double %4360, double* %4361, align 1, !tbaa !2432
  %4362 = getelementptr inbounds i8, i8* %4354, i64 8
  %4363 = bitcast i8* %4362 to double*
  store double 0.000000e+00, double* %4363, align 1, !tbaa !2432
  %4364 = bitcast %union.vec128_t* %XMM0 to i8*
  %4365 = load i64, i64* %PC
  %4366 = add i64 %4365, 5
  store i64 %4366, i64* %PC
  %4367 = bitcast i8* %4364 to i64*
  %4368 = load i64, i64* %4367, align 1
  store i64 %4368, i64* %RCX, align 1, !tbaa !2428
  %4369 = load i64, i64* %RCX
  %4370 = load i64, i64* %RAX
  %4371 = load i64, i64* %PC
  %4372 = add i64 %4371, 3
  store i64 %4372, i64* %PC
  %4373 = xor i64 %4370, %4369
  store i64 %4373, i64* %RCX, align 8, !tbaa !2428
  %4374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4374, align 1, !tbaa !2434
  %4375 = trunc i64 %4373 to i32
  %4376 = and i32 %4375, 255
  %4377 = call i32 @llvm.ctpop.i32(i32 %4376) #17
  %4378 = trunc i32 %4377 to i8
  %4379 = and i8 %4378, 1
  %4380 = xor i8 %4379, 1
  %4381 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4380, i8* %4381, align 1, !tbaa !2448
  %4382 = icmp eq i64 %4373, 0
  %4383 = zext i1 %4382 to i8
  %4384 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4383, i8* %4384, align 1, !tbaa !2450
  %4385 = lshr i64 %4373, 63
  %4386 = trunc i64 %4385 to i8
  %4387 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4386, i8* %4387, align 1, !tbaa !2451
  %4388 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4388, align 1, !tbaa !2452
  %4389 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4389, align 1, !tbaa !2449
  %4390 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4391 = load i64, i64* %RCX
  %4392 = load i64, i64* %PC
  %4393 = add i64 %4392, 5
  store i64 %4393, i64* %PC
  %4394 = bitcast i8* %4390 to i64*
  store i64 %4391, i64* %4394, align 1, !tbaa !2428
  %4395 = getelementptr inbounds i8, i8* %4390, i64 8
  %4396 = bitcast i8* %4395 to i64*
  store i64 0, i64* %4396, align 1, !tbaa !2428
  %4397 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4398 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4399 = load i64, i64* %RBP
  %4400 = sub i64 %4399, 120
  %4401 = load i64, i64* %PC
  %4402 = add i64 %4401, 5
  store i64 %4402, i64* %PC
  %4403 = bitcast i8* %4398 to double*
  %4404 = load double, double* %4403, align 1
  %4405 = getelementptr inbounds i8, i8* %4398, i64 8
  %4406 = bitcast i8* %4405 to i64*
  %4407 = load i64, i64* %4406, align 1
  %4408 = inttoptr i64 %4400 to double*
  %4409 = load double, double* %4408
  %4410 = fadd double %4404, %4409
  %4411 = bitcast i8* %4397 to double*
  store double %4410, double* %4411, align 1, !tbaa !2432
  %4412 = getelementptr inbounds i8, i8* %4397, i64 8
  %4413 = bitcast i8* %4412 to i64*
  store i64 %4407, i64* %4413, align 1, !tbaa !2432
  %4414 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4415 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4416 = load i64, i64* %RBP
  %4417 = sub i64 %4416, 128
  %4418 = load i64, i64* %PC
  %4419 = add i64 %4418, 5
  store i64 %4419, i64* %PC
  %4420 = bitcast i8* %4415 to double*
  %4421 = load double, double* %4420, align 1
  %4422 = getelementptr inbounds i8, i8* %4415, i64 8
  %4423 = bitcast i8* %4422 to i64*
  %4424 = load i64, i64* %4423, align 1
  %4425 = inttoptr i64 %4417 to double*
  %4426 = load double, double* %4425
  %4427 = fadd double %4421, %4426
  %4428 = bitcast i8* %4414 to double*
  store double %4427, double* %4428, align 1, !tbaa !2432
  %4429 = getelementptr inbounds i8, i8* %4414, i64 8
  %4430 = bitcast i8* %4429 to i64*
  store i64 %4424, i64* %4430, align 1, !tbaa !2432
  %4431 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4432 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4433 = load i64, i64* %RBP
  %4434 = sub i64 %4433, 136
  %4435 = load i64, i64* %PC
  %4436 = add i64 %4435, 8
  store i64 %4436, i64* %PC
  %4437 = bitcast i8* %4432 to double*
  %4438 = load double, double* %4437, align 1
  %4439 = getelementptr inbounds i8, i8* %4432, i64 8
  %4440 = bitcast i8* %4439 to i64*
  %4441 = load i64, i64* %4440, align 1
  %4442 = inttoptr i64 %4434 to double*
  %4443 = load double, double* %4442
  %4444 = fadd double %4438, %4443
  %4445 = bitcast i8* %4431 to double*
  store double %4444, double* %4445, align 1, !tbaa !2432
  %4446 = getelementptr inbounds i8, i8* %4431, i64 8
  %4447 = bitcast i8* %4446 to i64*
  store i64 %4441, i64* %4447, align 1, !tbaa !2432
  %4448 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4449 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4450 = load i64, i64* %PC
  %4451 = add i64 %4450, 9
  store i64 %4451, i64* %PC
  %4452 = bitcast i8* %4449 to double*
  %4453 = load double, double* %4452, align 1
  %4454 = getelementptr inbounds i8, i8* %4449, i64 8
  %4455 = bitcast i8* %4454 to i64*
  %4456 = load i64, i64* %4455, align 1
  %4457 = load double, double* bitcast (%T_type* @T to double*)
  %4458 = fmul double %4453, %4457
  %4459 = bitcast i8* %4448 to double*
  store double %4458, double* %4459, align 1, !tbaa !2432
  %4460 = getelementptr inbounds i8, i8* %4448, i64 8
  %4461 = bitcast i8* %4460 to i64*
  store i64 %4456, i64* %4461, align 1, !tbaa !2432
  %4462 = load i64, i64* %RBP
  %4463 = sub i64 %4462, 136
  %4464 = bitcast %union.vec128_t* %XMM0 to i8*
  %4465 = load i64, i64* %PC
  %4466 = add i64 %4465, 8
  store i64 %4466, i64* %PC
  %4467 = bitcast i8* %4464 to double*
  %4468 = load double, double* %4467, align 1
  %4469 = inttoptr i64 %4463 to double*
  store double %4468, double* %4469
  %4470 = load i64, i64* %RBP
  %4471 = sub i64 %4470, 24
  %4472 = load i64, i64* %PC
  %4473 = add i64 %4472, 4
  store i64 %4473, i64* %PC
  %4474 = inttoptr i64 %4471 to i64*
  %4475 = load i64, i64* %4474
  store i64 %4475, i64* %RAX, align 8, !tbaa !2428
  %4476 = load i64, i64* %RAX
  %4477 = load i64, i64* %PC
  %4478 = add i64 %4477, 4
  store i64 %4478, i64* %PC
  %4479 = add i64 1, %4476
  store i64 %4479, i64* %RAX, align 8, !tbaa !2428
  %4480 = icmp ult i64 %4479, %4476
  %4481 = icmp ult i64 %4479, 1
  %4482 = or i1 %4480, %4481
  %4483 = zext i1 %4482 to i8
  %4484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4483, i8* %4484, align 1, !tbaa !2434
  %4485 = trunc i64 %4479 to i32
  %4486 = and i32 %4485, 255
  %4487 = call i32 @llvm.ctpop.i32(i32 %4486) #17
  %4488 = trunc i32 %4487 to i8
  %4489 = and i8 %4488, 1
  %4490 = xor i8 %4489, 1
  %4491 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4490, i8* %4491, align 1, !tbaa !2448
  %4492 = xor i64 1, %4476
  %4493 = xor i64 %4492, %4479
  %4494 = lshr i64 %4493, 4
  %4495 = trunc i64 %4494 to i8
  %4496 = and i8 %4495, 1
  %4497 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4496, i8* %4497, align 1, !tbaa !2449
  %4498 = icmp eq i64 %4479, 0
  %4499 = zext i1 %4498 to i8
  %4500 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4499, i8* %4500, align 1, !tbaa !2450
  %4501 = lshr i64 %4479, 63
  %4502 = trunc i64 %4501 to i8
  %4503 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4502, i8* %4503, align 1, !tbaa !2451
  %4504 = lshr i64 %4476, 63
  %4505 = xor i64 %4501, %4504
  %4506 = add nuw nsw i64 %4505, %4501
  %4507 = icmp eq i64 %4506, 2
  %4508 = zext i1 %4507 to i8
  %4509 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4508, i8* %4509, align 1, !tbaa !2452
  %4510 = load i64, i64* %RBP
  %4511 = sub i64 %4510, 24
  %4512 = load i64, i64* %RAX
  %4513 = load i64, i64* %PC
  %4514 = add i64 %4513, 4
  store i64 %4514, i64* %PC
  %4515 = inttoptr i64 %4511 to i64*
  store i64 %4512, i64* %4515
  %4516 = load i64, i64* %PC
  %4517 = sub i64 %4516, 200
  %4518 = load i64, i64* %PC
  %4519 = add i64 %4518, 5
  store i64 %4519, i64* %PC
  %4520 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4517, i64* %4520, align 8, !tbaa !2428
  br label %block_400a99

block_4014a6:                                     ; preds = %block_401494
  %4521 = load i64, i64* %RBP
  %4522 = sub i64 %4521, 96
  %4523 = load i64, i64* %PC
  %4524 = add i64 %4523, 4
  store i64 %4524, i64* %PC
  %4525 = inttoptr i64 %4522 to i64*
  %4526 = load i64, i64* %4525
  store i64 %4526, i64* %RDI, align 8, !tbaa !2428
  %4527 = load i64, i64* %PC
  %4528 = add i64 %4527, 8
  store i64 %4528, i64* %PC
  %4529 = load i32, i32* bitcast (%J_type* @J to i32*)
  %4530 = sext i32 %4529 to i64
  store i64 %4530, i64* %RSI, align 8, !tbaa !2428
  %4531 = load i64, i64* %PC
  %4532 = add i64 %4531, 8
  store i64 %4532, i64* %PC
  %4533 = load i32, i32* bitcast (%K_type* @K to i32*)
  %4534 = sext i32 %4533 to i64
  store i64 %4534, i64* %RDX, align 8, !tbaa !2428
  %4535 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4536 = load i64, i64* %RBP
  %4537 = sub i64 %4536, 112
  %4538 = load i64, i64* %PC
  %4539 = add i64 %4538, 5
  store i64 %4539, i64* %PC
  %4540 = inttoptr i64 %4537 to double*
  %4541 = load double, double* %4540
  %4542 = bitcast i8* %4535 to double*
  store double %4541, double* %4542, align 1, !tbaa !2432
  %4543 = getelementptr inbounds i8, i8* %4535, i64 8
  %4544 = bitcast i8* %4543 to double*
  store double 0.000000e+00, double* %4544, align 1, !tbaa !2432
  %4545 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %4546 = load i64, i64* %RBP
  %4547 = sub i64 %4546, 120
  %4548 = load i64, i64* %PC
  %4549 = add i64 %4548, 5
  store i64 %4549, i64* %PC
  %4550 = inttoptr i64 %4547 to double*
  %4551 = load double, double* %4550
  %4552 = bitcast i8* %4545 to double*
  store double %4551, double* %4552, align 1, !tbaa !2432
  %4553 = getelementptr inbounds i8, i8* %4545, i64 8
  %4554 = bitcast i8* %4553 to double*
  store double 0.000000e+00, double* %4554, align 1, !tbaa !2432
  %4555 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %4556 = load i64, i64* %RBP
  %4557 = sub i64 %4556, 128
  %4558 = load i64, i64* %PC
  %4559 = add i64 %4558, 5
  store i64 %4559, i64* %PC
  %4560 = inttoptr i64 %4557 to double*
  %4561 = load double, double* %4560
  %4562 = bitcast i8* %4555 to double*
  store double %4561, double* %4562, align 1, !tbaa !2432
  %4563 = getelementptr inbounds i8, i8* %4555, i64 8
  %4564 = bitcast i8* %4563 to double*
  store double 0.000000e+00, double* %4564, align 1, !tbaa !2432
  %4565 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %4566 = load i64, i64* %RBP
  %4567 = sub i64 %4566, 136
  %4568 = load i64, i64* %PC
  %4569 = add i64 %4568, 8
  store i64 %4569, i64* %PC
  %4570 = inttoptr i64 %4567 to double*
  %4571 = load double, double* %4570
  %4572 = bitcast i8* %4565 to double*
  store double %4571, double* %4572, align 1, !tbaa !2432
  %4573 = getelementptr inbounds i8, i8* %4565, i64 8
  %4574 = bitcast i8* %4573 to double*
  store double 0.000000e+00, double* %4574, align 1, !tbaa !2432
  %4575 = load i64, i64* %PC
  %4576 = add i64 %4575, 287
  %4577 = load i64, i64* %PC
  %4578 = add i64 %4577, 5
  %4579 = load i64, i64* %PC
  %4580 = add i64 %4579, 5
  store i64 %4580, i64* %PC
  %4581 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4582 = load i64, i64* %4581, align 8, !tbaa !2428
  %4583 = add i64 %4582, -8
  %4584 = inttoptr i64 %4583 to i64*
  store i64 %4578, i64* %4584
  store i64 %4583, i64* %4581, align 8, !tbaa !2428
  %4585 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4576, i64* %4585, align 8, !tbaa !2428
  %4586 = load i64, i64* %PC
  %4587 = call %struct.Memory* @sub_4015f0_POUT_renamed_(%struct.State* %0, i64 %4586, %struct.Memory* %MEMORY.22)
  br label %block_4014d6

block_400fe0:                                     ; preds = %block_400fce
  %4588 = load i64, i64* %RBP
  %4589 = sub i64 %4588, 64
  %4590 = load i64, i64* %PC
  %4591 = add i64 %4590, 4
  store i64 %4591, i64* %PC
  %4592 = inttoptr i64 %4589 to i64*
  %4593 = load i64, i64* %4592
  store i64 %4593, i64* %RDI, align 8, !tbaa !2428
  %4594 = load i64, i64* %PC
  %4595 = add i64 %4594, 8
  store i64 %4595, i64* %PC
  %4596 = load i32, i32* bitcast (%J_type* @J to i32*)
  %4597 = sext i32 %4596 to i64
  store i64 %4597, i64* %RSI, align 8, !tbaa !2428
  %4598 = load i64, i64* %PC
  %4599 = add i64 %4598, 8
  store i64 %4599, i64* %PC
  %4600 = load i32, i32* bitcast (%K_type* @K to i32*)
  %4601 = sext i32 %4600 to i64
  store i64 %4601, i64* %RDX, align 8, !tbaa !2428
  %4602 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4603 = load i64, i64* %PC
  %4604 = add i64 %4603, 9
  store i64 %4604, i64* %PC
  %4605 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 8) to double*)
  %4606 = bitcast i8* %4602 to double*
  store double %4605, double* %4606, align 1, !tbaa !2432
  %4607 = getelementptr inbounds i8, i8* %4602, i64 8
  %4608 = bitcast i8* %4607 to double*
  store double 0.000000e+00, double* %4608, align 1, !tbaa !2432
  %4609 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %4610 = load i64, i64* %PC
  %4611 = add i64 %4610, 9
  store i64 %4611, i64* %PC
  %4612 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 16) to double*)
  %4613 = bitcast i8* %4609 to double*
  store double %4612, double* %4613, align 1, !tbaa !2432
  %4614 = getelementptr inbounds i8, i8* %4609, i64 8
  %4615 = bitcast i8* %4614 to double*
  store double 0.000000e+00, double* %4615, align 1, !tbaa !2432
  %4616 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %4617 = load i64, i64* %PC
  %4618 = add i64 %4617, 9
  store i64 %4618, i64* %PC
  %4619 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 24) to double*)
  %4620 = bitcast i8* %4616 to double*
  store double %4619, double* %4620, align 1, !tbaa !2432
  %4621 = getelementptr inbounds i8, i8* %4616, i64 8
  %4622 = bitcast i8* %4621 to double*
  store double 0.000000e+00, double* %4622, align 1, !tbaa !2432
  %4623 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %4624 = load i64, i64* %PC
  %4625 = add i64 %4624, 9
  store i64 %4625, i64* %PC
  %4626 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 32) to double*)
  %4627 = bitcast i8* %4623 to double*
  store double %4626, double* %4627, align 1, !tbaa !2432
  %4628 = getelementptr inbounds i8, i8* %4623, i64 8
  %4629 = bitcast i8* %4628 to double*
  store double 0.000000e+00, double* %4629, align 1, !tbaa !2432
  %4630 = load i64, i64* %PC
  %4631 = add i64 %4630, 1496
  %4632 = load i64, i64* %PC
  %4633 = add i64 %4632, 5
  %4634 = load i64, i64* %PC
  %4635 = add i64 %4634, 5
  store i64 %4635, i64* %PC
  %4636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4637 = load i64, i64* %4636, align 8, !tbaa !2428
  %4638 = add i64 %4637, -8
  %4639 = inttoptr i64 %4638 to i64*
  store i64 %4633, i64* %4639
  store i64 %4638, i64* %4636, align 8, !tbaa !2428
  %4640 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4631, i64* %4640, align 8, !tbaa !2428
  %4641 = load i64, i64* %PC
  %4642 = call %struct.Memory* @sub_4015f0_POUT_renamed_(%struct.State* %0, i64 %4641, %struct.Memory* %MEMORY.8)
  br label %block_40101d

block_4012a7:                                     ; preds = %block_4012b5, %block_40127f
  %MEMORY.14 = phi %struct.Memory* [ %MEMORY.7, %block_40127f ], [ %3510, %block_4012b5 ]
  %4643 = load i64, i64* %RBP
  %4644 = sub i64 %4643, 24
  %4645 = load i64, i64* %PC
  %4646 = add i64 %4645, 4
  store i64 %4646, i64* %PC
  %4647 = inttoptr i64 %4644 to i64*
  %4648 = load i64, i64* %4647
  store i64 %4648, i64* %RAX, align 8, !tbaa !2428
  %4649 = load i64, i64* %RAX
  %4650 = load i64, i64* %RBP
  %4651 = sub i64 %4650, 80
  %4652 = load i64, i64* %PC
  %4653 = add i64 %4652, 4
  store i64 %4653, i64* %PC
  %4654 = inttoptr i64 %4651 to i64*
  %4655 = load i64, i64* %4654
  %4656 = sub i64 %4649, %4655
  %4657 = icmp ugt i64 %4655, %4649
  %4658 = zext i1 %4657 to i8
  %4659 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4658, i8* %4659, align 1, !tbaa !2434
  %4660 = trunc i64 %4656 to i32
  %4661 = and i32 %4660, 255
  %4662 = call i32 @llvm.ctpop.i32(i32 %4661) #17
  %4663 = trunc i32 %4662 to i8
  %4664 = and i8 %4663, 1
  %4665 = xor i8 %4664, 1
  %4666 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4665, i8* %4666, align 1, !tbaa !2448
  %4667 = xor i64 %4655, %4649
  %4668 = xor i64 %4667, %4656
  %4669 = lshr i64 %4668, 4
  %4670 = trunc i64 %4669 to i8
  %4671 = and i8 %4670, 1
  %4672 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4671, i8* %4672, align 1, !tbaa !2449
  %4673 = icmp eq i64 %4656, 0
  %4674 = zext i1 %4673 to i8
  %4675 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4674, i8* %4675, align 1, !tbaa !2450
  %4676 = lshr i64 %4656, 63
  %4677 = trunc i64 %4676 to i8
  %4678 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4677, i8* %4678, align 1, !tbaa !2451
  %4679 = lshr i64 %4649, 63
  %4680 = lshr i64 %4655, 63
  %4681 = xor i64 %4680, %4679
  %4682 = xor i64 %4676, %4679
  %4683 = add nuw nsw i64 %4682, %4681
  %4684 = icmp eq i64 %4683, 2
  %4685 = zext i1 %4684 to i8
  %4686 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4685, i8* %4686, align 1, !tbaa !2452
  %4687 = load i64, i64* %PC
  %4688 = add i64 %4687, 51
  %4689 = load i64, i64* %PC
  %4690 = add i64 %4689, 6
  %4691 = load i64, i64* %PC
  %4692 = add i64 %4691, 6
  store i64 %4692, i64* %PC
  %4693 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4694 = load i8, i8* %4693, align 1, !tbaa !2450
  %4695 = icmp eq i8 %4694, 0
  %4696 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4697 = load i8, i8* %4696, align 1, !tbaa !2451
  %4698 = icmp ne i8 %4697, 0
  %4699 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4700 = load i8, i8* %4699, align 1, !tbaa !2452
  %4701 = icmp ne i8 %4700, 0
  %4702 = xor i1 %4698, %4701
  %4703 = xor i1 %4702, true
  %4704 = and i1 %4695, %4703
  %4705 = zext i1 %4704 to i8
  store i8 %4705, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %4706 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4707 = select i1 %4704, i64 %4688, i64 %4690
  store i64 %4707, i64* %4706, align 8, !tbaa !2428
  %4708 = load i8, i8* %BRANCH_TAKEN
  %4709 = icmp eq i8 %4708, 1
  %4710 = load i64, i64* %RBP
  br i1 %4709, label %block_4012e2, label %block_4012b5

block_400e06:                                     ; preds = %block_400df8
  store i32 0, i32* bitcast (%J_type* @J to i32*)
  %4711 = load i64, i64* %PC
  %4712 = add i64 %4711, 16
  %4713 = load i64, i64* %PC
  %4714 = add i64 %4713, 5
  store i64 %4714, i64* %PC
  %4715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4712, i64* %4715, align 8, !tbaa !2428
  br label %block_400e21

block_4012f4:                                     ; preds = %block_4012e2
  %4716 = load i64, i64* %RBP
  %4717 = sub i64 %4716, 80
  %4718 = load i64, i64* %PC
  %4719 = add i64 %4718, 4
  store i64 %4719, i64* %PC
  %4720 = inttoptr i64 %4717 to i64*
  %4721 = load i64, i64* %4720
  store i64 %4721, i64* %RDI, align 8, !tbaa !2428
  %4722 = load i64, i64* %PC
  %4723 = add i64 %4722, 8
  store i64 %4723, i64* %PC
  %4724 = load i32, i32* bitcast (%J_type* @J to i32*)
  %4725 = sext i32 %4724 to i64
  store i64 %4725, i64* %RSI, align 8, !tbaa !2428
  %4726 = load i64, i64* %PC
  %4727 = add i64 %4726, 8
  store i64 %4727, i64* %PC
  %4728 = load i32, i32* bitcast (%K_type* @K to i32*)
  %4729 = sext i32 %4728 to i64
  store i64 %4729, i64* %RDX, align 8, !tbaa !2428
  %4730 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4731 = load i64, i64* %RBP
  %4732 = sub i64 %4731, 144
  %4733 = load i64, i64* %PC
  %4734 = add i64 %4733, 8
  store i64 %4734, i64* %PC
  %4735 = inttoptr i64 %4732 to double*
  %4736 = load double, double* %4735
  %4737 = bitcast i8* %4730 to double*
  store double %4736, double* %4737, align 1, !tbaa !2432
  %4738 = getelementptr inbounds i8, i8* %4730, i64 8
  %4739 = bitcast i8* %4738 to double*
  store double 0.000000e+00, double* %4739, align 1, !tbaa !2432
  %4740 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %4741 = load i64, i64* %RBP
  %4742 = sub i64 %4741, 152
  %4743 = load i64, i64* %PC
  %4744 = add i64 %4743, 8
  store i64 %4744, i64* %PC
  %4745 = inttoptr i64 %4742 to double*
  %4746 = load double, double* %4745
  %4747 = bitcast i8* %4740 to double*
  store double %4746, double* %4747, align 1, !tbaa !2432
  %4748 = getelementptr inbounds i8, i8* %4740, i64 8
  %4749 = bitcast i8* %4748 to double*
  store double 0.000000e+00, double* %4749, align 1, !tbaa !2432
  %4750 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %4751 = load i64, i64* %RBP
  %4752 = sub i64 %4751, 160
  %4753 = load i64, i64* %PC
  %4754 = add i64 %4753, 8
  store i64 %4754, i64* %PC
  %4755 = inttoptr i64 %4752 to double*
  %4756 = load double, double* %4755
  %4757 = bitcast i8* %4750 to double*
  store double %4756, double* %4757, align 1, !tbaa !2432
  %4758 = getelementptr inbounds i8, i8* %4750, i64 8
  %4759 = bitcast i8* %4758 to double*
  store double 0.000000e+00, double* %4759, align 1, !tbaa !2432
  %4760 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %4761 = load i64, i64* %RBP
  %4762 = sub i64 %4761, 160
  %4763 = load i64, i64* %PC
  %4764 = add i64 %4763, 8
  store i64 %4764, i64* %PC
  %4765 = inttoptr i64 %4762 to double*
  %4766 = load double, double* %4765
  %4767 = bitcast i8* %4760 to double*
  store double %4766, double* %4767, align 1, !tbaa !2432
  %4768 = getelementptr inbounds i8, i8* %4760, i64 8
  %4769 = bitcast i8* %4768 to double*
  store double 0.000000e+00, double* %4769, align 1, !tbaa !2432
  %4770 = load i64, i64* %PC
  %4771 = add i64 %4770, 712
  %4772 = load i64, i64* %PC
  %4773 = add i64 %4772, 5
  %4774 = load i64, i64* %PC
  %4775 = add i64 %4774, 5
  store i64 %4775, i64* %PC
  %4776 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4777 = load i64, i64* %4776, align 8, !tbaa !2428
  %4778 = add i64 %4777, -8
  %4779 = inttoptr i64 %4778 to i64*
  store i64 %4773, i64* %4779
  store i64 %4778, i64* %4776, align 8, !tbaa !2428
  %4780 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4771, i64* %4780, align 8, !tbaa !2428
  %4781 = load i64, i64* %PC
  %4782 = call %struct.Memory* @sub_4015f0_POUT_renamed_(%struct.State* %0, i64 %4781, %struct.Memory* %MEMORY.14)
  br label %block_40132d

block_400ea2:                                     ; preds = %block_400e60, %block_400e72
  %MEMORY.15 = phi %struct.Memory* [ %MEMORY.6, %block_400e60 ], [ %783, %block_400e72 ]
  %4783 = load i64, i64* %PC
  %4784 = add i64 %4783, 11
  store i64 %4784, i64* %PC
  store i32 1, i32* bitcast (%J_type* @J to i32*)
  %4785 = load i64, i64* %PC
  %4786 = add i64 %4785, 11
  store i64 %4786, i64* %PC
  store i32 2, i32* bitcast (%K_type* @K to i32*)
  %4787 = load i64, i64* %PC
  %4788 = add i64 %4787, 11
  store i64 %4788, i64* %PC
  store i32 3, i32* bitcast (%L_type* @L to i32*)
  %4789 = load i64, i64* %RBP
  %4790 = sub i64 %4789, 24
  %4791 = load i64, i64* %PC
  %4792 = add i64 %4791, 8
  store i64 %4792, i64* %PC
  %4793 = inttoptr i64 %4790 to i64*
  store i64 1, i64* %4793
  br label %block_400ecb

block_400e21:                                     ; preds = %block_400e16, %block_400e06
  %MEMORY.16 = phi %struct.Memory* [ %MEMORY.0, %block_400e16 ], [ %MEMORY.0, %block_400e06 ]
  %4794 = load i64, i64* %PC
  %4795 = add i64 %4794, 8
  store i64 %4795, i64* %PC
  %4796 = load i32, i32* bitcast (%J_type* @J to i32*)
  %4797 = sub i32 %4796, 1
  %4798 = icmp ult i32 %4796, 1
  %4799 = zext i1 %4798 to i8
  %4800 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4799, i8* %4800, align 1, !tbaa !2434
  %4801 = and i32 %4797, 255
  %4802 = call i32 @llvm.ctpop.i32(i32 %4801) #17
  %4803 = trunc i32 %4802 to i8
  %4804 = and i8 %4803, 1
  %4805 = xor i8 %4804, 1
  %4806 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4805, i8* %4806, align 1, !tbaa !2448
  %4807 = xor i32 %4796, 1
  %4808 = xor i32 %4807, %4797
  %4809 = lshr i32 %4808, 4
  %4810 = trunc i32 %4809 to i8
  %4811 = and i8 %4810, 1
  %4812 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4811, i8* %4812, align 1, !tbaa !2449
  %4813 = icmp eq i32 %4797, 0
  %4814 = zext i1 %4813 to i8
  %4815 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4814, i8* %4815, align 1, !tbaa !2450
  %4816 = lshr i32 %4797, 31
  %4817 = trunc i32 %4816 to i8
  %4818 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4817, i8* %4818, align 1, !tbaa !2451
  %4819 = lshr i32 %4796, 31
  %4820 = xor i32 %4816, %4819
  %4821 = add nuw nsw i32 %4820, %4819
  %4822 = icmp eq i32 %4821, 2
  %4823 = zext i1 %4822 to i8
  %4824 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4823, i8* %4824, align 1, !tbaa !2452
  %4825 = load i64, i64* %PC
  %4826 = add i64 %4825, 22
  %4827 = load i64, i64* %PC
  %4828 = add i64 %4827, 6
  %4829 = load i64, i64* %PC
  %4830 = add i64 %4829, 6
  store i64 %4830, i64* %PC
  %4831 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4832 = load i8, i8* %4831, align 1, !tbaa !2451
  %4833 = icmp ne i8 %4832, 0
  %4834 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4835 = load i8, i8* %4834, align 1, !tbaa !2452
  %4836 = icmp ne i8 %4835, 0
  %4837 = xor i1 %4833, %4836
  %4838 = xor i1 %4837, true
  %4839 = zext i1 %4838 to i8
  store i8 %4839, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %4840 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4841 = select i1 %4837, i64 %4828, i64 %4826
  store i64 %4841, i64* %4840, align 8, !tbaa !2428
  %4842 = load i8, i8* %BRANCH_TAKEN
  %4843 = icmp eq i8 %4842, 1
  %4844 = load i64, i64* %PC
  %4845 = add i64 %4844, 11
  store i64 %4845, i64* %PC
  br i1 %4843, label %block_400e3f, label %block_400e2f

block_40091d:                                     ; preds = %block_4008ff
  %4846 = load i64, i64* %RBP
  %4847 = sub i64 %4846, 16
  %4848 = load i64, i64* %PC
  %4849 = add i64 %4848, 4
  store i64 %4849, i64* %PC
  %4850 = inttoptr i64 %4847 to i64*
  %4851 = load i64, i64* %4850
  store i64 %4851, i64* %RAX, align 8, !tbaa !2428
  %4852 = load i64, i64* %RBP
  %4853 = sub i64 %4852, 172
  %4854 = load i64, i64* %PC
  %4855 = add i64 %4854, 7
  store i64 %4855, i64* %PC
  %4856 = inttoptr i64 %4853 to i32*
  %4857 = load i32, i32* %4856
  %4858 = sext i32 %4857 to i64
  store i64 %4858, i64* %RCX, align 8, !tbaa !2428
  %4859 = load i64, i64* %RAX
  %4860 = load i64, i64* %RCX
  %4861 = mul i64 %4860, 8
  %4862 = add i64 %4861, %4859
  %4863 = load i64, i64* %PC
  %4864 = add i64 %4863, 4
  store i64 %4864, i64* %PC
  %4865 = inttoptr i64 %4862 to i64*
  %4866 = load i64, i64* %4865
  store i64 %4866, i64* %RDI, align 8, !tbaa !2428
  %4867 = load i64, i64* %PC
  %4868 = sub i64 %4867, 492
  %4869 = load i64, i64* %PC
  %4870 = add i64 %4869, 5
  %4871 = load i64, i64* %PC
  %4872 = add i64 %4871, 5
  store i64 %4872, i64* %PC
  %4873 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4874 = load i64, i64* %4873, align 8, !tbaa !2428
  %4875 = add i64 %4874, -8
  %4876 = inttoptr i64 %4875 to i64*
  store i64 %4870, i64* %4876
  store i64 %4875, i64* %4873, align 8, !tbaa !2428
  %4877 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4868, i64* %4877, align 8, !tbaa !2428
  %4878 = load i64, i64* %PC
  %4879 = call %struct.Memory* @ext_602190_atol(%struct.State* %0, i64 %4878, %struct.Memory* %2720)
  %4880 = load i64, i64* %RBP
  %4881 = sub i64 %4880, 184
  %4882 = load i64, i64* %RAX
  %4883 = load i64, i64* %PC
  %4884 = add i64 %4883, 7
  store i64 %4884, i64* %PC
  %4885 = inttoptr i64 %4881 to i64*
  store i64 %4882, i64* %4885
  %4886 = load i64, i64* %PC
  %4887 = add i64 %4886, 48
  %4888 = load i64, i64* %PC
  %4889 = add i64 %4888, 5
  store i64 %4889, i64* %PC
  %4890 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4887, i64* %4890, align 8, !tbaa !2428
  %4891 = load i64, i64* %PC
  %4892 = add i64 %4891, 5
  %4893 = load i64, i64* %PC
  %4894 = add i64 %4893, 5
  store i64 %4894, i64* %PC
  %4895 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4892, i64* %4895, align 8, !tbaa !2428
  br label %block_40096d

block_40159b:                                     ; preds = %block_401580
  %4896 = load i64, i64* %PC
  %4897 = sub i64 %4896, 2992
  %4898 = load i64, i64* %PC
  %4899 = add i64 %4898, 5
  store i64 %4899, i64* %PC
  %4900 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4897, i64* %4900, align 8, !tbaa !2428
  br label %block_4009eb

block_400a99:                                     ; preds = %block_4009eb, %block_400aa7
  %MEMORY.17 = phi %struct.Memory* [ %MEMORY.21, %block_4009eb ], [ %MEMORY.17, %block_400aa7 ]
  %4901 = load i64, i64* %RBP
  %4902 = sub i64 %4901, 24
  %4903 = load i64, i64* %PC
  %4904 = add i64 %4903, 4
  store i64 %4904, i64* %PC
  %4905 = inttoptr i64 %4902 to i64*
  %4906 = load i64, i64* %4905
  store i64 %4906, i64* %RAX, align 8, !tbaa !2428
  %4907 = load i64, i64* %RAX
  %4908 = load i64, i64* %RBP
  %4909 = sub i64 %4908, 32
  %4910 = load i64, i64* %PC
  %4911 = add i64 %4910, 4
  store i64 %4911, i64* %PC
  %4912 = inttoptr i64 %4909 to i64*
  %4913 = load i64, i64* %4912
  %4914 = sub i64 %4907, %4913
  %4915 = icmp ugt i64 %4913, %4907
  %4916 = zext i1 %4915 to i8
  %4917 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4916, i8* %4917, align 1, !tbaa !2434
  %4918 = trunc i64 %4914 to i32
  %4919 = and i32 %4918, 255
  %4920 = call i32 @llvm.ctpop.i32(i32 %4919) #17
  %4921 = trunc i32 %4920 to i8
  %4922 = and i8 %4921, 1
  %4923 = xor i8 %4922, 1
  %4924 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4923, i8* %4924, align 1, !tbaa !2448
  %4925 = xor i64 %4913, %4907
  %4926 = xor i64 %4925, %4914
  %4927 = lshr i64 %4926, 4
  %4928 = trunc i64 %4927 to i8
  %4929 = and i8 %4928, 1
  %4930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4929, i8* %4930, align 1, !tbaa !2449
  %4931 = icmp eq i64 %4914, 0
  %4932 = zext i1 %4931 to i8
  %4933 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4932, i8* %4933, align 1, !tbaa !2450
  %4934 = lshr i64 %4914, 63
  %4935 = trunc i64 %4934 to i8
  %4936 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4935, i8* %4936, align 1, !tbaa !2451
  %4937 = lshr i64 %4907, 63
  %4938 = lshr i64 %4913, 63
  %4939 = xor i64 %4938, %4937
  %4940 = xor i64 %4934, %4937
  %4941 = add nuw nsw i64 %4940, %4939
  %4942 = icmp eq i64 %4941, 2
  %4943 = zext i1 %4942 to i8
  %4944 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4943, i8* %4944, align 1, !tbaa !2452
  %4945 = load i64, i64* %PC
  %4946 = add i64 %4945, 197
  %4947 = load i64, i64* %PC
  %4948 = add i64 %4947, 6
  %4949 = load i64, i64* %PC
  %4950 = add i64 %4949, 6
  store i64 %4950, i64* %PC
  %4951 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4952 = load i8, i8* %4951, align 1, !tbaa !2450
  %4953 = icmp eq i8 %4952, 0
  %4954 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4955 = load i8, i8* %4954, align 1, !tbaa !2451
  %4956 = icmp ne i8 %4955, 0
  %4957 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4958 = load i8, i8* %4957, align 1, !tbaa !2452
  %4959 = icmp ne i8 %4958, 0
  %4960 = xor i1 %4956, %4959
  %4961 = xor i1 %4960, true
  %4962 = and i1 %4953, %4961
  %4963 = zext i1 %4962 to i8
  store i8 %4963, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %4964 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4965 = select i1 %4962, i64 %4946, i64 %4948
  store i64 %4965, i64* %4964, align 8, !tbaa !2428
  %4966 = load i8, i8* %BRANCH_TAKEN
  %4967 = icmp eq i8 %4966, 1
  br i1 %4967, label %block_400b66, label %block_400aa7

block_400cea:                                     ; preds = %block_400bdc
  %4968 = load i64, i64* %RBP
  %4969 = sub i64 %4968, 176
  %4970 = load i64, i64* %PC
  %4971 = add i64 %4970, 6
  store i64 %4971, i64* %PC
  %4972 = inttoptr i64 %4969 to i32*
  %4973 = load i32, i32* %4972
  %4974 = zext i32 %4973 to i64
  store i64 %4974, i64* %RAX, align 8, !tbaa !2428
  %4975 = load i32, i32* %EAX
  %4976 = zext i32 %4975 to i64
  %4977 = load i64, i64* %RBP
  %4978 = sub i64 %4977, 172
  %4979 = load i64, i64* %PC
  %4980 = add i64 %4979, 6
  store i64 %4980, i64* %PC
  %4981 = inttoptr i64 %4978 to i32*
  %4982 = load i32, i32* %4981
  %4983 = sub i32 %4975, %4982
  %4984 = icmp ult i32 %4975, %4982
  %4985 = zext i1 %4984 to i8
  %4986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4985, i8* %4986, align 1, !tbaa !2434
  %4987 = and i32 %4983, 255
  %4988 = call i32 @llvm.ctpop.i32(i32 %4987) #17
  %4989 = trunc i32 %4988 to i8
  %4990 = and i8 %4989, 1
  %4991 = xor i8 %4990, 1
  %4992 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4991, i8* %4992, align 1, !tbaa !2448
  %4993 = xor i32 %4982, %4975
  %4994 = xor i32 %4993, %4983
  %4995 = lshr i32 %4994, 4
  %4996 = trunc i32 %4995 to i8
  %4997 = and i8 %4996, 1
  %4998 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4997, i8* %4998, align 1, !tbaa !2449
  %4999 = icmp eq i32 %4983, 0
  %5000 = zext i1 %4999 to i8
  %5001 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5000, i8* %5001, align 1, !tbaa !2450
  %5002 = lshr i32 %4983, 31
  %5003 = trunc i32 %5002 to i8
  %5004 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5003, i8* %5004, align 1, !tbaa !2451
  %5005 = lshr i32 %4975, 31
  %5006 = lshr i32 %4982, 31
  %5007 = xor i32 %5006, %5005
  %5008 = xor i32 %5002, %5005
  %5009 = add nuw nsw i32 %5008, %5007
  %5010 = icmp eq i32 %5009, 2
  %5011 = zext i1 %5010 to i8
  %5012 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5011, i8* %5012, align 1, !tbaa !2452
  %5013 = load i64, i64* %PC
  %5014 = add i64 %5013, 59
  %5015 = load i64, i64* %PC
  %5016 = add i64 %5015, 6
  %5017 = load i64, i64* %PC
  %5018 = add i64 %5017, 6
  store i64 %5018, i64* %PC
  %5019 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5020 = load i8, i8* %5019, align 1, !tbaa !2450
  %5021 = icmp eq i8 %5020, 0
  %5022 = zext i1 %5021 to i8
  store i8 %5022, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %5023 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5024 = select i1 %5021, i64 %5014, i64 %5016
  store i64 %5024, i64* %5023, align 8, !tbaa !2428
  %5025 = load i8, i8* %BRANCH_TAKEN
  %5026 = icmp eq i8 %5025, 1
  br i1 %5026, label %block_400d31, label %block_400cfc

block_400d39:                                     ; preds = %block_400d47, %block_400d31
  %MEMORY.18 = phi %struct.Memory* [ %MEMORY.10, %block_400d31 ], [ %3764, %block_400d47 ]
  %5027 = load i64, i64* %RBP
  %5028 = sub i64 %5027, 24
  %5029 = load i64, i64* %PC
  %5030 = add i64 %5029, 4
  store i64 %5030, i64* %PC
  %5031 = inttoptr i64 %5028 to i64*
  %5032 = load i64, i64* %5031
  store i64 %5032, i64* %RAX, align 8, !tbaa !2428
  %5033 = load i64, i64* %RAX
  %5034 = load i64, i64* %RBP
  %5035 = sub i64 %5034, 48
  %5036 = load i64, i64* %PC
  %5037 = add i64 %5036, 4
  store i64 %5037, i64* %PC
  %5038 = inttoptr i64 %5035 to i64*
  %5039 = load i64, i64* %5038
  %5040 = sub i64 %5033, %5039
  %5041 = icmp ugt i64 %5039, %5033
  %5042 = zext i1 %5041 to i8
  %5043 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5042, i8* %5043, align 1, !tbaa !2434
  %5044 = trunc i64 %5040 to i32
  %5045 = and i32 %5044, 255
  %5046 = call i32 @llvm.ctpop.i32(i32 %5045) #17
  %5047 = trunc i32 %5046 to i8
  %5048 = and i8 %5047, 1
  %5049 = xor i8 %5048, 1
  %5050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5049, i8* %5050, align 1, !tbaa !2448
  %5051 = xor i64 %5039, %5033
  %5052 = xor i64 %5051, %5040
  %5053 = lshr i64 %5052, 4
  %5054 = trunc i64 %5053 to i8
  %5055 = and i8 %5054, 1
  %5056 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5055, i8* %5056, align 1, !tbaa !2449
  %5057 = icmp eq i64 %5040, 0
  %5058 = zext i1 %5057 to i8
  %5059 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5058, i8* %5059, align 1, !tbaa !2450
  %5060 = lshr i64 %5040, 63
  %5061 = trunc i64 %5060 to i8
  %5062 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5061, i8* %5062, align 1, !tbaa !2451
  %5063 = lshr i64 %5033, 63
  %5064 = lshr i64 %5039, 63
  %5065 = xor i64 %5064, %5063
  %5066 = xor i64 %5060, %5063
  %5067 = add nuw nsw i64 %5066, %5065
  %5068 = icmp eq i64 %5067, 2
  %5069 = zext i1 %5068 to i8
  %5070 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5069, i8* %5070, align 1, !tbaa !2452
  %5071 = load i64, i64* %PC
  %5072 = add i64 %5071, 38
  %5073 = load i64, i64* %PC
  %5074 = add i64 %5073, 6
  %5075 = load i64, i64* %PC
  %5076 = add i64 %5075, 6
  store i64 %5076, i64* %PC
  %5077 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5078 = load i8, i8* %5077, align 1, !tbaa !2450
  %5079 = icmp eq i8 %5078, 0
  %5080 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5081 = load i8, i8* %5080, align 1, !tbaa !2451
  %5082 = icmp ne i8 %5081, 0
  %5083 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5084 = load i8, i8* %5083, align 1, !tbaa !2452
  %5085 = icmp ne i8 %5084, 0
  %5086 = xor i1 %5082, %5085
  %5087 = xor i1 %5086, true
  %5088 = and i1 %5079, %5087
  %5089 = zext i1 %5088 to i8
  store i8 %5089, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %5090 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5091 = select i1 %5088, i64 %5072, i64 %5074
  store i64 %5091, i64* %5090, align 8, !tbaa !2428
  %5092 = load i8, i8* %BRANCH_TAKEN
  %5093 = icmp eq i8 %5092, 1
  br i1 %5093, label %block_400d67, label %block_400d47

block_400898:                                     ; preds = %block_40096d, %block_400860
  %MEMORY.19 = phi %struct.Memory* [ %2, %block_400860 ], [ %MEMORY.1, %block_40096d ]
  %5094 = load i64, i64* %RBP
  %5095 = sub i64 %5094, 172
  %5096 = load i64, i64* %PC
  %5097 = add i64 %5096, 6
  store i64 %5097, i64* %PC
  %5098 = inttoptr i64 %5095 to i32*
  %5099 = load i32, i32* %5098
  %5100 = zext i32 %5099 to i64
  store i64 %5100, i64* %RAX, align 8, !tbaa !2428
  %5101 = load i32, i32* %EAX
  %5102 = zext i32 %5101 to i64
  %5103 = load i64, i64* %RBP
  %5104 = sub i64 %5103, 8
  %5105 = load i64, i64* %PC
  %5106 = add i64 %5105, 3
  store i64 %5106, i64* %PC
  %5107 = inttoptr i64 %5104 to i32*
  %5108 = load i32, i32* %5107
  %5109 = sub i32 %5101, %5108
  %5110 = icmp ult i32 %5101, %5108
  %5111 = zext i1 %5110 to i8
  %5112 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5111, i8* %5112, align 1, !tbaa !2434
  %5113 = and i32 %5109, 255
  %5114 = call i32 @llvm.ctpop.i32(i32 %5113) #17
  %5115 = trunc i32 %5114 to i8
  %5116 = and i8 %5115, 1
  %5117 = xor i8 %5116, 1
  %5118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5117, i8* %5118, align 1, !tbaa !2448
  %5119 = xor i32 %5108, %5101
  %5120 = xor i32 %5119, %5109
  %5121 = lshr i32 %5120, 4
  %5122 = trunc i32 %5121 to i8
  %5123 = and i8 %5122, 1
  %5124 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5123, i8* %5124, align 1, !tbaa !2449
  %5125 = icmp eq i32 %5109, 0
  %5126 = zext i1 %5125 to i8
  %5127 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5126, i8* %5127, align 1, !tbaa !2450
  %5128 = lshr i32 %5109, 31
  %5129 = trunc i32 %5128 to i8
  %5130 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5129, i8* %5130, align 1, !tbaa !2451
  %5131 = lshr i32 %5101, 31
  %5132 = lshr i32 %5108, 31
  %5133 = xor i32 %5132, %5131
  %5134 = xor i32 %5128, %5131
  %5135 = add nuw nsw i32 %5134, %5133
  %5136 = icmp eq i32 %5135, 2
  %5137 = zext i1 %5136 to i8
  %5138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5137, i8* %5138, align 1, !tbaa !2452
  %5139 = load i64, i64* %PC
  %5140 = add i64 %5139, 224
  %5141 = load i64, i64* %PC
  %5142 = add i64 %5141, 6
  %5143 = load i64, i64* %PC
  %5144 = add i64 %5143, 6
  store i64 %5144, i64* %PC
  %5145 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5146 = load i8, i8* %5145, align 1, !tbaa !2451
  %5147 = icmp ne i8 %5146, 0
  %5148 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5149 = load i8, i8* %5148, align 1, !tbaa !2452
  %5150 = icmp ne i8 %5149, 0
  %5151 = xor i1 %5147, %5150
  %5152 = xor i1 %5151, true
  %5153 = zext i1 %5152 to i8
  store i8 %5153, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %5154 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5155 = select i1 %5151, i64 %5142, i64 %5140
  store i64 %5155, i64* %5154, align 8, !tbaa !2428
  %5156 = load i8, i8* %BRANCH_TAKEN
  %5157 = icmp eq i8 %5156, 1
  %5158 = load i64, i64* %PC
  br i1 %5157, label %block_400981, label %block_4008a7

block_401397:                                     ; preds = %block_401389
  %5159 = load i64, i64* %PC
  %5160 = add i64 %5159, 1145
  %5161 = load i64, i64* %PC
  %5162 = add i64 %5161, 5
  %5163 = load i64, i64* %PC
  %5164 = add i64 %5163, 5
  store i64 %5164, i64* %PC
  %5165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %5166 = load i64, i64* %5165, align 8, !tbaa !2428
  %5167 = add i64 %5166, -8
  %5168 = inttoptr i64 %5167 to i64*
  store i64 %5162, i64* %5168
  store i64 %5167, i64* %5165, align 8, !tbaa !2428
  %5169 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5160, i64* %5169, align 8, !tbaa !2428
  %5170 = load i64, i64* %PC
  %5171 = call %struct.Memory* @sub_401810_P0_renamed_(%struct.State* %0, i64 %5170, %struct.Memory* %MEMORY.25)
  %5172 = load i64, i64* %RBP
  %5173 = sub i64 %5172, 24
  %5174 = load i64, i64* %PC
  %5175 = add i64 %5174, 4
  store i64 %5175, i64* %PC
  %5176 = inttoptr i64 %5173 to i64*
  %5177 = load i64, i64* %5176
  store i64 %5177, i64* %RAX, align 8, !tbaa !2428
  %5178 = load i64, i64* %RAX
  %5179 = load i64, i64* %PC
  %5180 = add i64 %5179, 4
  store i64 %5180, i64* %PC
  %5181 = add i64 1, %5178
  store i64 %5181, i64* %RAX, align 8, !tbaa !2428
  %5182 = icmp ult i64 %5181, %5178
  %5183 = icmp ult i64 %5181, 1
  %5184 = or i1 %5182, %5183
  %5185 = zext i1 %5184 to i8
  %5186 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5185, i8* %5186, align 1, !tbaa !2434
  %5187 = trunc i64 %5181 to i32
  %5188 = and i32 %5187, 255
  %5189 = call i32 @llvm.ctpop.i32(i32 %5188) #17
  %5190 = trunc i32 %5189 to i8
  %5191 = and i8 %5190, 1
  %5192 = xor i8 %5191, 1
  %5193 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5192, i8* %5193, align 1, !tbaa !2448
  %5194 = xor i64 1, %5178
  %5195 = xor i64 %5194, %5181
  %5196 = lshr i64 %5195, 4
  %5197 = trunc i64 %5196 to i8
  %5198 = and i8 %5197, 1
  %5199 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5198, i8* %5199, align 1, !tbaa !2449
  %5200 = icmp eq i64 %5181, 0
  %5201 = zext i1 %5200 to i8
  %5202 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5201, i8* %5202, align 1, !tbaa !2450
  %5203 = lshr i64 %5181, 63
  %5204 = trunc i64 %5203 to i8
  %5205 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5204, i8* %5205, align 1, !tbaa !2451
  %5206 = lshr i64 %5178, 63
  %5207 = xor i64 %5203, %5206
  %5208 = add nuw nsw i64 %5207, %5203
  %5209 = icmp eq i64 %5208, 2
  %5210 = zext i1 %5209 to i8
  %5211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5210, i8* %5211, align 1, !tbaa !2452
  %5212 = load i64, i64* %RBP
  %5213 = sub i64 %5212, 24
  %5214 = load i64, i64* %RAX
  %5215 = load i64, i64* %PC
  %5216 = add i64 %5215, 4
  store i64 %5216, i64* %PC
  %5217 = inttoptr i64 %5213 to i64*
  store i64 %5214, i64* %5217
  %5218 = load i64, i64* %PC
  %5219 = sub i64 %5218, 31
  %5220 = load i64, i64* %PC
  %5221 = add i64 %5220, 5
  store i64 %5221, i64* %PC
  %5222 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5219, i64* %5222, align 8, !tbaa !2428
  br label %block_401389

block_400e16:                                     ; preds = %block_400df8
  store i32 1, i32* bitcast (%J_type* @J to i32*)
  br label %block_400e21

block_401494:                                     ; preds = %block_40141a
  %5223 = load i64, i64* %RBP
  %5224 = sub i64 %5223, 176
  %5225 = load i64, i64* %PC
  %5226 = add i64 %5225, 6
  store i64 %5226, i64* %PC
  %5227 = inttoptr i64 %5224 to i32*
  %5228 = load i32, i32* %5227
  %5229 = zext i32 %5228 to i64
  store i64 %5229, i64* %RAX, align 8, !tbaa !2428
  %5230 = load i32, i32* %EAX
  %5231 = zext i32 %5230 to i64
  %5232 = load i64, i64* %RBP
  %5233 = sub i64 %5232, 172
  %5234 = load i64, i64* %PC
  %5235 = add i64 %5234, 6
  store i64 %5235, i64* %PC
  %5236 = inttoptr i64 %5233 to i32*
  %5237 = load i32, i32* %5236
  %5238 = sub i32 %5230, %5237
  %5239 = icmp ult i32 %5230, %5237
  %5240 = zext i1 %5239 to i8
  %5241 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5240, i8* %5241, align 1, !tbaa !2434
  %5242 = and i32 %5238, 255
  %5243 = call i32 @llvm.ctpop.i32(i32 %5242) #17
  %5244 = trunc i32 %5243 to i8
  %5245 = and i8 %5244, 1
  %5246 = xor i8 %5245, 1
  %5247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5246, i8* %5247, align 1, !tbaa !2448
  %5248 = xor i32 %5237, %5230
  %5249 = xor i32 %5248, %5238
  %5250 = lshr i32 %5249, 4
  %5251 = trunc i32 %5250 to i8
  %5252 = and i8 %5251, 1
  %5253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5252, i8* %5253, align 1, !tbaa !2449
  %5254 = icmp eq i32 %5238, 0
  %5255 = zext i1 %5254 to i8
  %5256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5255, i8* %5256, align 1, !tbaa !2450
  %5257 = lshr i32 %5238, 31
  %5258 = trunc i32 %5257 to i8
  %5259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5258, i8* %5259, align 1, !tbaa !2451
  %5260 = lshr i32 %5230, 31
  %5261 = lshr i32 %5237, 31
  %5262 = xor i32 %5261, %5260
  %5263 = xor i32 %5257, %5260
  %5264 = add nuw nsw i32 %5263, %5262
  %5265 = icmp eq i32 %5264, 2
  %5266 = zext i1 %5265 to i8
  %5267 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5266, i8* %5267, align 1, !tbaa !2452
  %5268 = load i64, i64* %PC
  %5269 = add i64 %5268, 54
  %5270 = load i64, i64* %PC
  %5271 = add i64 %5270, 6
  %5272 = load i64, i64* %PC
  %5273 = add i64 %5272, 6
  store i64 %5273, i64* %PC
  %5274 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5275 = load i8, i8* %5274, align 1, !tbaa !2450
  %5276 = icmp eq i8 %5275, 0
  %5277 = zext i1 %5276 to i8
  store i8 %5277, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %5278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5279 = select i1 %5276, i64 %5269, i64 %5271
  store i64 %5279, i64* %5278, align 8, !tbaa !2428
  %5280 = load i8, i8* %BRANCH_TAKEN
  %5281 = icmp eq i8 %5280, 1
  br i1 %5281, label %block_4014d6, label %block_4014a6

block_4013fc:                                     ; preds = %block_4013ad, %block_4013bf
  %MEMORY.20 = phi %struct.Memory* [ %MEMORY.25, %block_4013ad ], [ %3616, %block_4013bf ]
  %5282 = load i64, i64* %PC
  %5283 = add i64 %5282, 11
  store i64 %5283, i64* %PC
  store i32 2, i32* bitcast (%J_type* @J to i32*)
  %5284 = load i64, i64* %PC
  %5285 = add i64 %5284, 11
  store i64 %5285, i64* %PC
  store i32 3, i32* bitcast (%K_type* @K to i32*)
  %5286 = load i64, i64* %RBP
  %5287 = sub i64 %5286, 24
  %5288 = load i64, i64* %PC
  %5289 = add i64 %5288, 8
  store i64 %5289, i64* %PC
  %5290 = inttoptr i64 %5287 to i64*
  store i64 1, i64* %5290
  br label %block_40141a

block_4013ad:                                     ; preds = %block_401389
  %5291 = load i64, i64* %RBP
  %5292 = sub i64 %5291, 176
  %5293 = load i64, i64* %PC
  %5294 = add i64 %5293, 6
  store i64 %5294, i64* %PC
  %5295 = inttoptr i64 %5292 to i32*
  %5296 = load i32, i32* %5295
  %5297 = zext i32 %5296 to i64
  store i64 %5297, i64* %RAX, align 8, !tbaa !2428
  %5298 = load i32, i32* %EAX
  %5299 = zext i32 %5298 to i64
  %5300 = load i64, i64* %RBP
  %5301 = sub i64 %5300, 172
  %5302 = load i64, i64* %PC
  %5303 = add i64 %5302, 6
  store i64 %5303, i64* %PC
  %5304 = inttoptr i64 %5301 to i32*
  %5305 = load i32, i32* %5304
  %5306 = sub i32 %5298, %5305
  %5307 = icmp ult i32 %5298, %5305
  %5308 = zext i1 %5307 to i8
  %5309 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5308, i8* %5309, align 1, !tbaa !2434
  %5310 = and i32 %5306, 255
  %5311 = call i32 @llvm.ctpop.i32(i32 %5310) #17
  %5312 = trunc i32 %5311 to i8
  %5313 = and i8 %5312, 1
  %5314 = xor i8 %5313, 1
  %5315 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5314, i8* %5315, align 1, !tbaa !2448
  %5316 = xor i32 %5305, %5298
  %5317 = xor i32 %5316, %5306
  %5318 = lshr i32 %5317, 4
  %5319 = trunc i32 %5318 to i8
  %5320 = and i8 %5319, 1
  %5321 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5320, i8* %5321, align 1, !tbaa !2449
  %5322 = icmp eq i32 %5306, 0
  %5323 = zext i1 %5322 to i8
  %5324 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5323, i8* %5324, align 1, !tbaa !2450
  %5325 = lshr i32 %5306, 31
  %5326 = trunc i32 %5325 to i8
  %5327 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5326, i8* %5327, align 1, !tbaa !2451
  %5328 = lshr i32 %5298, 31
  %5329 = lshr i32 %5305, 31
  %5330 = xor i32 %5329, %5328
  %5331 = xor i32 %5325, %5328
  %5332 = add nuw nsw i32 %5331, %5330
  %5333 = icmp eq i32 %5332, 2
  %5334 = zext i1 %5333 to i8
  %5335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5334, i8* %5335, align 1, !tbaa !2452
  %5336 = load i64, i64* %PC
  %5337 = add i64 %5336, 67
  %5338 = load i64, i64* %PC
  %5339 = add i64 %5338, 6
  %5340 = load i64, i64* %PC
  %5341 = add i64 %5340, 6
  store i64 %5341, i64* %PC
  %5342 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5343 = load i8, i8* %5342, align 1, !tbaa !2450
  %5344 = icmp eq i8 %5343, 0
  %5345 = zext i1 %5344 to i8
  store i8 %5345, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %5346 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5347 = select i1 %5344, i64 %5337, i64 %5339
  store i64 %5347, i64* %5346, align 8, !tbaa !2428
  %5348 = load i8, i8* %BRANCH_TAKEN
  %5349 = icmp eq i8 %5348, 1
  br i1 %5349, label %block_4013fc, label %block_4013bf

block_4009eb:                                     ; preds = %block_400986, %block_40159b
  %MEMORY.21 = phi %struct.Memory* [ %5968, %block_400986 ], [ %MEMORY.28, %block_40159b ]
  %5350 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %5351 = load i64, i64* %PC
  %5352 = add i64 %5351, 8
  store i64 %5352, i64* %PC
  %5353 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_401900__rodata_type* @seg_401900__rodata to i64), i64 32) to double*)
  %5354 = bitcast i8* %5350 to double*
  store double %5353, double* %5354, align 1, !tbaa !2432
  %5355 = getelementptr inbounds i8, i8* %5350, i64 8
  %5356 = bitcast i8* %5355 to double*
  store double 0.000000e+00, double* %5356, align 1, !tbaa !2432
  %5357 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %5358 = load i64, i64* %PC
  %5359 = add i64 %5358, 8
  store i64 %5359, i64* %PC
  %5360 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_401900__rodata_type* @seg_401900__rodata to i64), i64 40) to double*)
  %5361 = bitcast i8* %5357 to double*
  store double %5360, double* %5361, align 1, !tbaa !2432
  %5362 = getelementptr inbounds i8, i8* %5357, i64 8
  %5363 = bitcast i8* %5362 to double*
  store double 0.000000e+00, double* %5363, align 1, !tbaa !2432
  %5364 = load i64, i64* %RBP
  %5365 = sub i64 %5364, 32
  %5366 = load i64, i64* %PC
  %5367 = add i64 %5366, 8
  store i64 %5367, i64* %PC
  %5368 = inttoptr i64 %5365 to i64*
  store i64 0, i64* %5368
  %5369 = load i64, i64* %RBP
  %5370 = sub i64 %5369, 168
  %5371 = load i64, i64* %PC
  %5372 = add i64 %5371, 8
  store i64 %5372, i64* %PC
  %5373 = inttoptr i64 %5370 to i64*
  %5374 = load i64, i64* %5373
  %5375 = sext i64 %5374 to i128
  %5376 = and i128 %5375, -18446744073709551616
  %5377 = zext i64 %5374 to i128
  %5378 = or i128 %5376, %5377
  %5379 = mul nsw i128 %5378, 12
  %5380 = trunc i128 %5379 to i64
  store i64 %5380, i64* %RAX, align 8, !tbaa !2428
  %5381 = sext i64 %5380 to i128
  %5382 = icmp ne i128 %5381, %5379
  %5383 = zext i1 %5382 to i8
  %5384 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5383, i8* %5384, align 1, !tbaa !2434
  %5385 = trunc i128 %5379 to i32
  %5386 = and i32 %5385, 255
  %5387 = call i32 @llvm.ctpop.i32(i32 %5386) #17
  %5388 = trunc i32 %5387 to i8
  %5389 = and i8 %5388, 1
  %5390 = xor i8 %5389, 1
  %5391 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5390, i8* %5391, align 1, !tbaa !2448
  %5392 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5392, align 1, !tbaa !2449
  %5393 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5393, align 1, !tbaa !2450
  %5394 = lshr i64 %5380, 63
  %5395 = trunc i64 %5394 to i8
  %5396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5395, i8* %5396, align 1, !tbaa !2451
  %5397 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5383, i8* %5397, align 1, !tbaa !2452
  %5398 = load i64, i64* %RBP
  %5399 = sub i64 %5398, 40
  %5400 = load i64, i64* %RAX
  %5401 = load i64, i64* %PC
  %5402 = add i64 %5401, 4
  store i64 %5402, i64* %PC
  %5403 = inttoptr i64 %5399 to i64*
  store i64 %5400, i64* %5403
  %5404 = load i64, i64* %RBP
  %5405 = sub i64 %5404, 168
  %5406 = load i64, i64* %PC
  %5407 = add i64 %5406, 8
  store i64 %5407, i64* %PC
  %5408 = inttoptr i64 %5405 to i64*
  %5409 = load i64, i64* %5408
  %5410 = sext i64 %5409 to i128
  %5411 = and i128 %5410, -18446744073709551616
  %5412 = zext i64 %5409 to i128
  %5413 = or i128 %5411, %5412
  %5414 = mul nsw i128 %5413, 14
  %5415 = trunc i128 %5414 to i64
  store i64 %5415, i64* %RAX, align 8, !tbaa !2428
  %5416 = sext i64 %5415 to i128
  %5417 = icmp ne i128 %5416, %5414
  %5418 = zext i1 %5417 to i8
  %5419 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5418, i8* %5419, align 1, !tbaa !2434
  %5420 = trunc i128 %5414 to i32
  %5421 = and i32 %5420, 255
  %5422 = call i32 @llvm.ctpop.i32(i32 %5421) #17
  %5423 = trunc i32 %5422 to i8
  %5424 = and i8 %5423, 1
  %5425 = xor i8 %5424, 1
  %5426 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5425, i8* %5426, align 1, !tbaa !2448
  %5427 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5427, align 1, !tbaa !2449
  %5428 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5428, align 1, !tbaa !2450
  %5429 = lshr i64 %5415, 63
  %5430 = trunc i64 %5429 to i8
  %5431 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5430, i8* %5431, align 1, !tbaa !2451
  %5432 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5418, i8* %5432, align 1, !tbaa !2452
  %5433 = load i64, i64* %RBP
  %5434 = sub i64 %5433, 48
  %5435 = load i64, i64* %RAX
  %5436 = load i64, i64* %PC
  %5437 = add i64 %5436, 4
  store i64 %5437, i64* %PC
  %5438 = inttoptr i64 %5434 to i64*
  store i64 %5435, i64* %5438
  %5439 = load i64, i64* %RBP
  %5440 = sub i64 %5439, 168
  %5441 = load i64, i64* %PC
  %5442 = add i64 %5441, 11
  store i64 %5442, i64* %PC
  %5443 = inttoptr i64 %5440 to i64*
  %5444 = load i64, i64* %5443
  %5445 = sext i64 %5444 to i128
  %5446 = and i128 %5445, -18446744073709551616
  %5447 = zext i64 %5444 to i128
  %5448 = or i128 %5446, %5447
  %5449 = mul nsw i128 %5448, 345
  %5450 = trunc i128 %5449 to i64
  store i64 %5450, i64* %RAX, align 8, !tbaa !2428
  %5451 = sext i64 %5450 to i128
  %5452 = icmp ne i128 %5451, %5449
  %5453 = zext i1 %5452 to i8
  %5454 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5453, i8* %5454, align 1, !tbaa !2434
  %5455 = trunc i128 %5449 to i32
  %5456 = and i32 %5455, 255
  %5457 = call i32 @llvm.ctpop.i32(i32 %5456) #17
  %5458 = trunc i32 %5457 to i8
  %5459 = and i8 %5458, 1
  %5460 = xor i8 %5459, 1
  %5461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5460, i8* %5461, align 1, !tbaa !2448
  %5462 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5462, align 1, !tbaa !2449
  %5463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5463, align 1, !tbaa !2450
  %5464 = lshr i64 %5450, 63
  %5465 = trunc i64 %5464 to i8
  %5466 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5465, i8* %5466, align 1, !tbaa !2451
  %5467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5453, i8* %5467, align 1, !tbaa !2452
  %5468 = load i64, i64* %RBP
  %5469 = sub i64 %5468, 56
  %5470 = load i64, i64* %RAX
  %5471 = load i64, i64* %PC
  %5472 = add i64 %5471, 4
  store i64 %5472, i64* %PC
  %5473 = inttoptr i64 %5469 to i64*
  store i64 %5470, i64* %5473
  %5474 = load i64, i64* %RBP
  %5475 = sub i64 %5474, 168
  %5476 = load i64, i64* %PC
  %5477 = add i64 %5476, 11
  store i64 %5477, i64* %PC
  %5478 = inttoptr i64 %5475 to i64*
  %5479 = load i64, i64* %5478
  %5480 = sext i64 %5479 to i128
  %5481 = and i128 %5480, -18446744073709551616
  %5482 = zext i64 %5479 to i128
  %5483 = or i128 %5481, %5482
  %5484 = mul nsw i128 %5483, 210
  %5485 = trunc i128 %5484 to i64
  store i64 %5485, i64* %RAX, align 8, !tbaa !2428
  %5486 = sext i64 %5485 to i128
  %5487 = icmp ne i128 %5486, %5484
  %5488 = zext i1 %5487 to i8
  %5489 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5488, i8* %5489, align 1, !tbaa !2434
  %5490 = trunc i128 %5484 to i32
  %5491 = and i32 %5490, 255
  %5492 = call i32 @llvm.ctpop.i32(i32 %5491) #17
  %5493 = trunc i32 %5492 to i8
  %5494 = and i8 %5493, 1
  %5495 = xor i8 %5494, 1
  %5496 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5495, i8* %5496, align 1, !tbaa !2448
  %5497 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5497, align 1, !tbaa !2449
  %5498 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5498, align 1, !tbaa !2450
  %5499 = lshr i64 %5485, 63
  %5500 = trunc i64 %5499 to i8
  %5501 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5500, i8* %5501, align 1, !tbaa !2451
  %5502 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5488, i8* %5502, align 1, !tbaa !2452
  %5503 = load i64, i64* %RBP
  %5504 = sub i64 %5503, 64
  %5505 = load i64, i64* %RAX
  %5506 = load i64, i64* %PC
  %5507 = add i64 %5506, 4
  store i64 %5507, i64* %PC
  %5508 = inttoptr i64 %5504 to i64*
  store i64 %5505, i64* %5508
  %5509 = load i64, i64* %RBP
  %5510 = sub i64 %5509, 168
  %5511 = load i64, i64* %PC
  %5512 = add i64 %5511, 7
  store i64 %5512, i64* %PC
  %5513 = inttoptr i64 %5510 to i64*
  %5514 = load i64, i64* %5513
  store i64 %5514, i64* %RAX, align 8, !tbaa !2428
  %5515 = load i64, i64* %RAX
  %5516 = load i64, i64* %PC
  %5517 = add i64 %5516, 4
  store i64 %5517, i64* %PC
  %5518 = shl i64 %5515, 4
  %5519 = icmp slt i64 %5518, 0
  %5520 = shl i64 %5518, 1
  store i64 %5520, i64* %RAX, align 8, !tbaa !2428
  %5521 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %5522 = zext i1 %5519 to i8
  store i8 %5522, i8* %5521, align 1, !tbaa !2453
  %5523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %5524 = trunc i64 %5520 to i32
  %5525 = and i32 %5524, 254
  %5526 = call i32 @llvm.ctpop.i32(i32 %5525) #17
  %5527 = trunc i32 %5526 to i8
  %5528 = and i8 %5527, 1
  %5529 = xor i8 %5528, 1
  store i8 %5529, i8* %5523, align 1, !tbaa !2453
  %5530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5530, align 1, !tbaa !2453
  %5531 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5532 = icmp eq i64 %5520, 0
  %5533 = zext i1 %5532 to i8
  store i8 %5533, i8* %5531, align 1, !tbaa !2453
  %5534 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5535 = lshr i64 %5520, 63
  %5536 = trunc i64 %5535 to i8
  store i8 %5536, i8* %5534, align 1, !tbaa !2453
  %5537 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5537, align 1, !tbaa !2453
  %5538 = load i64, i64* %RBP
  %5539 = sub i64 %5538, 72
  %5540 = load i64, i64* %RAX
  %5541 = load i64, i64* %PC
  %5542 = add i64 %5541, 4
  store i64 %5542, i64* %PC
  %5543 = inttoptr i64 %5539 to i64*
  store i64 %5540, i64* %5543
  %5544 = load i64, i64* %RBP
  %5545 = sub i64 %5544, 168
  %5546 = load i64, i64* %PC
  %5547 = add i64 %5546, 11
  store i64 %5547, i64* %PC
  %5548 = inttoptr i64 %5545 to i64*
  %5549 = load i64, i64* %5548
  %5550 = sext i64 %5549 to i128
  %5551 = and i128 %5550, -18446744073709551616
  %5552 = zext i64 %5549 to i128
  %5553 = or i128 %5551, %5552
  %5554 = mul nsw i128 %5553, 899
  %5555 = trunc i128 %5554 to i64
  store i64 %5555, i64* %RAX, align 8, !tbaa !2428
  %5556 = sext i64 %5555 to i128
  %5557 = icmp ne i128 %5556, %5554
  %5558 = zext i1 %5557 to i8
  %5559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5558, i8* %5559, align 1, !tbaa !2434
  %5560 = trunc i128 %5554 to i32
  %5561 = and i32 %5560, 255
  %5562 = call i32 @llvm.ctpop.i32(i32 %5561) #17
  %5563 = trunc i32 %5562 to i8
  %5564 = and i8 %5563, 1
  %5565 = xor i8 %5564, 1
  %5566 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5565, i8* %5566, align 1, !tbaa !2448
  %5567 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5567, align 1, !tbaa !2449
  %5568 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5568, align 1, !tbaa !2450
  %5569 = lshr i64 %5555, 63
  %5570 = trunc i64 %5569 to i8
  %5571 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5570, i8* %5571, align 1, !tbaa !2451
  %5572 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5558, i8* %5572, align 1, !tbaa !2452
  %5573 = load i64, i64* %RBP
  %5574 = sub i64 %5573, 80
  %5575 = load i64, i64* %RAX
  %5576 = load i64, i64* %PC
  %5577 = add i64 %5576, 4
  store i64 %5577, i64* %PC
  %5578 = inttoptr i64 %5574 to i64*
  store i64 %5575, i64* %5578
  %5579 = load i64, i64* %RBP
  %5580 = sub i64 %5579, 168
  %5581 = load i64, i64* %PC
  %5582 = add i64 %5581, 11
  store i64 %5582, i64* %PC
  %5583 = inttoptr i64 %5580 to i64*
  %5584 = load i64, i64* %5583
  %5585 = sext i64 %5584 to i128
  %5586 = and i128 %5585, -18446744073709551616
  %5587 = zext i64 %5584 to i128
  %5588 = or i128 %5586, %5587
  %5589 = mul nsw i128 %5588, 616
  %5590 = trunc i128 %5589 to i64
  store i64 %5590, i64* %RAX, align 8, !tbaa !2428
  %5591 = sext i64 %5590 to i128
  %5592 = icmp ne i128 %5591, %5589
  %5593 = zext i1 %5592 to i8
  %5594 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5593, i8* %5594, align 1, !tbaa !2434
  %5595 = trunc i128 %5589 to i32
  %5596 = and i32 %5595, 255
  %5597 = call i32 @llvm.ctpop.i32(i32 %5596) #17
  %5598 = trunc i32 %5597 to i8
  %5599 = and i8 %5598, 1
  %5600 = xor i8 %5599, 1
  %5601 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5600, i8* %5601, align 1, !tbaa !2448
  %5602 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5602, align 1, !tbaa !2449
  %5603 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5603, align 1, !tbaa !2450
  %5604 = lshr i64 %5590, 63
  %5605 = trunc i64 %5604 to i8
  %5606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5605, i8* %5606, align 1, !tbaa !2451
  %5607 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5593, i8* %5607, align 1, !tbaa !2452
  %5608 = load i64, i64* %RBP
  %5609 = sub i64 %5608, 88
  %5610 = load i64, i64* %RAX
  %5611 = load i64, i64* %PC
  %5612 = add i64 %5611, 4
  store i64 %5612, i64* %PC
  %5613 = inttoptr i64 %5609 to i64*
  store i64 %5610, i64* %5613
  %5614 = load i64, i64* %RBP
  %5615 = sub i64 %5614, 96
  %5616 = load i64, i64* %PC
  %5617 = add i64 %5616, 8
  store i64 %5617, i64* %PC
  %5618 = inttoptr i64 %5615 to i64*
  store i64 0, i64* %5618
  %5619 = load i64, i64* %RBP
  %5620 = sub i64 %5619, 168
  %5621 = load i64, i64* %PC
  %5622 = add i64 %5621, 8
  store i64 %5622, i64* %PC
  %5623 = inttoptr i64 %5620 to i64*
  %5624 = load i64, i64* %5623
  %5625 = sext i64 %5624 to i128
  %5626 = and i128 %5625, -18446744073709551616
  %5627 = zext i64 %5624 to i128
  %5628 = or i128 %5626, %5627
  %5629 = mul nsw i128 %5628, 93
  %5630 = trunc i128 %5629 to i64
  store i64 %5630, i64* %RAX, align 8, !tbaa !2428
  %5631 = sext i64 %5630 to i128
  %5632 = icmp ne i128 %5631, %5629
  %5633 = zext i1 %5632 to i8
  %5634 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5633, i8* %5634, align 1, !tbaa !2434
  %5635 = trunc i128 %5629 to i32
  %5636 = and i32 %5635, 255
  %5637 = call i32 @llvm.ctpop.i32(i32 %5636) #17
  %5638 = trunc i32 %5637 to i8
  %5639 = and i8 %5638, 1
  %5640 = xor i8 %5639, 1
  %5641 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5640, i8* %5641, align 1, !tbaa !2448
  %5642 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5642, align 1, !tbaa !2449
  %5643 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5643, align 1, !tbaa !2450
  %5644 = lshr i64 %5630, 63
  %5645 = trunc i64 %5644 to i8
  %5646 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5645, i8* %5646, align 1, !tbaa !2451
  %5647 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5633, i8* %5647, align 1, !tbaa !2452
  %5648 = load i64, i64* %RBP
  %5649 = sub i64 %5648, 104
  %5650 = load i64, i64* %RAX
  %5651 = load i64, i64* %PC
  %5652 = add i64 %5651, 4
  store i64 %5652, i64* %PC
  %5653 = inttoptr i64 %5649 to i64*
  store i64 %5650, i64* %5653
  %5654 = load i64, i64* %RBP
  %5655 = sub i64 %5654, 112
  %5656 = bitcast %union.vec128_t* %XMM1 to i8*
  %5657 = load i64, i64* %PC
  %5658 = add i64 %5657, 5
  store i64 %5658, i64* %PC
  %5659 = bitcast i8* %5656 to double*
  %5660 = load double, double* %5659, align 1
  %5661 = inttoptr i64 %5655 to double*
  store double %5660, double* %5661
  %5662 = load i64, i64* %RBP
  %5663 = sub i64 %5662, 120
  %5664 = bitcast %union.vec128_t* %XMM0 to i8*
  %5665 = load i64, i64* %PC
  %5666 = add i64 %5665, 5
  store i64 %5666, i64* %PC
  %5667 = bitcast i8* %5664 to double*
  %5668 = load double, double* %5667, align 1
  %5669 = inttoptr i64 %5663 to double*
  store double %5668, double* %5669
  %5670 = load i64, i64* %RBP
  %5671 = sub i64 %5670, 128
  %5672 = bitcast %union.vec128_t* %XMM0 to i8*
  %5673 = load i64, i64* %PC
  %5674 = add i64 %5673, 5
  store i64 %5674, i64* %PC
  %5675 = bitcast i8* %5672 to double*
  %5676 = load double, double* %5675, align 1
  %5677 = inttoptr i64 %5671 to double*
  store double %5676, double* %5677
  %5678 = load i64, i64* %RBP
  %5679 = sub i64 %5678, 136
  %5680 = bitcast %union.vec128_t* %XMM0 to i8*
  %5681 = load i64, i64* %PC
  %5682 = add i64 %5681, 8
  store i64 %5682, i64* %PC
  %5683 = bitcast i8* %5680 to double*
  %5684 = load double, double* %5683, align 1
  %5685 = inttoptr i64 %5679 to double*
  store double %5684, double* %5685
  %5686 = load i64, i64* %RBP
  %5687 = sub i64 %5686, 24
  %5688 = load i64, i64* %PC
  %5689 = add i64 %5688, 8
  store i64 %5689, i64* %PC
  %5690 = inttoptr i64 %5687 to i64*
  store i64 1, i64* %5690
  br label %block_400a99

block_40141a:                                     ; preds = %block_4013fc, %block_401428
  %MEMORY.22 = phi %struct.Memory* [ %MEMORY.20, %block_4013fc ], [ %MEMORY.22, %block_401428 ]
  %5691 = load i64, i64* %RBP
  %5692 = sub i64 %5691, 24
  %5693 = load i64, i64* %PC
  %5694 = add i64 %5693, 4
  store i64 %5694, i64* %PC
  %5695 = inttoptr i64 %5692 to i64*
  %5696 = load i64, i64* %5695
  store i64 %5696, i64* %RAX, align 8, !tbaa !2428
  %5697 = load i64, i64* %RAX
  %5698 = load i64, i64* %RBP
  %5699 = sub i64 %5698, 96
  %5700 = load i64, i64* %PC
  %5701 = add i64 %5700, 4
  store i64 %5701, i64* %PC
  %5702 = inttoptr i64 %5699 to i64*
  %5703 = load i64, i64* %5702
  %5704 = sub i64 %5697, %5703
  %5705 = icmp ugt i64 %5703, %5697
  %5706 = zext i1 %5705 to i8
  %5707 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5706, i8* %5707, align 1, !tbaa !2434
  %5708 = trunc i64 %5704 to i32
  %5709 = and i32 %5708, 255
  %5710 = call i32 @llvm.ctpop.i32(i32 %5709) #17
  %5711 = trunc i32 %5710 to i8
  %5712 = and i8 %5711, 1
  %5713 = xor i8 %5712, 1
  %5714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5713, i8* %5714, align 1, !tbaa !2448
  %5715 = xor i64 %5703, %5697
  %5716 = xor i64 %5715, %5704
  %5717 = lshr i64 %5716, 4
  %5718 = trunc i64 %5717 to i8
  %5719 = and i8 %5718, 1
  %5720 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5719, i8* %5720, align 1, !tbaa !2449
  %5721 = icmp eq i64 %5704, 0
  %5722 = zext i1 %5721 to i8
  %5723 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5722, i8* %5723, align 1, !tbaa !2450
  %5724 = lshr i64 %5704, 63
  %5725 = trunc i64 %5724 to i8
  %5726 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5725, i8* %5726, align 1, !tbaa !2451
  %5727 = lshr i64 %5697, 63
  %5728 = lshr i64 %5703, 63
  %5729 = xor i64 %5728, %5727
  %5730 = xor i64 %5724, %5727
  %5731 = add nuw nsw i64 %5730, %5729
  %5732 = icmp eq i64 %5731, 2
  %5733 = zext i1 %5732 to i8
  %5734 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5733, i8* %5734, align 1, !tbaa !2452
  %5735 = load i64, i64* %PC
  %5736 = add i64 %5735, 114
  %5737 = load i64, i64* %PC
  %5738 = add i64 %5737, 6
  %5739 = load i64, i64* %PC
  %5740 = add i64 %5739, 6
  store i64 %5740, i64* %PC
  %5741 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5742 = load i8, i8* %5741, align 1, !tbaa !2450
  %5743 = icmp eq i8 %5742, 0
  %5744 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5745 = load i8, i8* %5744, align 1, !tbaa !2451
  %5746 = icmp ne i8 %5745, 0
  %5747 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5748 = load i8, i8* %5747, align 1, !tbaa !2452
  %5749 = icmp ne i8 %5748, 0
  %5750 = xor i1 %5746, %5749
  %5751 = xor i1 %5750, true
  %5752 = and i1 %5743, %5751
  %5753 = zext i1 %5752 to i8
  store i8 %5753, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %5754 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5755 = select i1 %5752, i64 %5736, i64 %5738
  store i64 %5755, i64* %5754, align 8, !tbaa !2428
  %5756 = load i8, i8* %BRANCH_TAKEN
  %5757 = icmp eq i8 %5756, 1
  br i1 %5757, label %block_401494, label %block_401428

block_40132d:                                     ; preds = %block_4012f4, %block_4012e2
  %MEMORY.23 = phi %struct.Memory* [ %MEMORY.14, %block_4012e2 ], [ %4782, %block_4012f4 ]
  %5758 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %5759 = load i64, i64* %PC
  %5760 = add i64 %5759, 8
  store i64 %5760, i64* %PC
  %5761 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_401900__rodata_type* @seg_401900__rodata to i64), i64 56) to double*)
  %5762 = bitcast i8* %5758 to double*
  store double %5761, double* %5762, align 1, !tbaa !2432
  %5763 = getelementptr inbounds i8, i8* %5758, i64 8
  %5764 = bitcast i8* %5763 to double*
  store double 0.000000e+00, double* %5764, align 1, !tbaa !2432
  %5765 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %5766 = load i64, i64* %PC
  %5767 = add i64 %5766, 8
  store i64 %5767, i64* %PC
  %5768 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_401900__rodata_type* @seg_401900__rodata to i64), i64 8) to double*)
  %5769 = bitcast i8* %5765 to double*
  store double %5768, double* %5769, align 1, !tbaa !2432
  %5770 = getelementptr inbounds i8, i8* %5765, i64 8
  %5771 = bitcast i8* %5770 to double*
  store double 0.000000e+00, double* %5771, align 1, !tbaa !2432
  %5772 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %5773 = load i64, i64* %PC
  %5774 = add i64 %5773, 8
  store i64 %5774, i64* %PC
  %5775 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_401900__rodata_type* @seg_401900__rodata to i64), i64 40) to double*)
  %5776 = bitcast i8* %5772 to double*
  store double %5775, double* %5776, align 1, !tbaa !2432
  %5777 = getelementptr inbounds i8, i8* %5772, i64 8
  %5778 = bitcast i8* %5777 to double*
  store double 0.000000e+00, double* %5778, align 1, !tbaa !2432
  %5779 = load i64, i64* %PC
  %5780 = add i64 %5779, 11
  store i64 %5780, i64* %PC
  store i32 1, i32* bitcast (%J_type* @J to i32*)
  %5781 = load i64, i64* %PC
  %5782 = add i64 %5781, 11
  store i64 %5782, i64* %PC
  store i32 2, i32* bitcast (%K_type* @K to i32*)
  %5783 = load i64, i64* %PC
  %5784 = add i64 %5783, 11
  store i64 %5784, i64* %PC
  store i32 3, i32* bitcast (%L_type* @L to i32*)
  %5785 = bitcast %union.vec128_t* %XMM2 to i8*
  %5786 = load i64, i64* %PC
  %5787 = add i64 %5786, 9
  store i64 %5787, i64* %PC
  %5788 = bitcast i8* %5785 to double*
  %5789 = load double, double* %5788, align 1
  store double %5789, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 8) to double*)
  %5790 = bitcast %union.vec128_t* %XMM1 to i8*
  %5791 = load i64, i64* %PC
  %5792 = add i64 %5791, 9
  store i64 %5792, i64* %PC
  %5793 = bitcast i8* %5790 to double*
  %5794 = load double, double* %5793, align 1
  store double %5794, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 16) to double*)
  %5795 = bitcast %union.vec128_t* %XMM0 to i8*
  %5796 = load i64, i64* %PC
  %5797 = add i64 %5796, 9
  store i64 %5797, i64* %PC
  %5798 = bitcast i8* %5795 to double*
  %5799 = load double, double* %5798, align 1
  store double %5799, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 24) to double*)
  %5800 = load i64, i64* %RBP
  %5801 = sub i64 %5800, 24
  %5802 = load i64, i64* %PC
  %5803 = add i64 %5802, 8
  store i64 %5803, i64* %PC
  %5804 = inttoptr i64 %5801 to i64*
  store i64 1, i64* %5804
  br label %block_401389

block_400e4a:                                     ; preds = %block_400e2f, %block_400e3f
  %MEMORY.24 = phi %struct.Memory* [ %MEMORY.16, %block_400e3f ], [ %MEMORY.16, %block_400e2f ]
  %5805 = load i64, i64* %PC
  %5806 = add i64 %5805, 5
  %5807 = load i64, i64* %PC
  %5808 = add i64 %5807, 5
  store i64 %5808, i64* %PC
  %5809 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5806, i64* %5809, align 8, !tbaa !2428
  %5810 = load i64, i64* %RBP
  %5811 = sub i64 %5810, 24
  %5812 = load i64, i64* %PC
  %5813 = add i64 %5812, 4
  store i64 %5813, i64* %PC
  %5814 = inttoptr i64 %5811 to i64*
  %5815 = load i64, i64* %5814
  store i64 %5815, i64* %RAX, align 8, !tbaa !2428
  %5816 = load i64, i64* %RAX
  %5817 = load i64, i64* %PC
  %5818 = add i64 %5817, 4
  store i64 %5818, i64* %PC
  %5819 = add i64 1, %5816
  store i64 %5819, i64* %RAX, align 8, !tbaa !2428
  %5820 = icmp ult i64 %5819, %5816
  %5821 = icmp ult i64 %5819, 1
  %5822 = or i1 %5820, %5821
  %5823 = zext i1 %5822 to i8
  %5824 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5823, i8* %5824, align 1, !tbaa !2434
  %5825 = trunc i64 %5819 to i32
  %5826 = and i32 %5825, 255
  %5827 = call i32 @llvm.ctpop.i32(i32 %5826) #17
  %5828 = trunc i32 %5827 to i8
  %5829 = and i8 %5828, 1
  %5830 = xor i8 %5829, 1
  %5831 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5830, i8* %5831, align 1, !tbaa !2448
  %5832 = xor i64 1, %5816
  %5833 = xor i64 %5832, %5819
  %5834 = lshr i64 %5833, 4
  %5835 = trunc i64 %5834 to i8
  %5836 = and i8 %5835, 1
  %5837 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5836, i8* %5837, align 1, !tbaa !2449
  %5838 = icmp eq i64 %5819, 0
  %5839 = zext i1 %5838 to i8
  %5840 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5839, i8* %5840, align 1, !tbaa !2450
  %5841 = lshr i64 %5819, 63
  %5842 = trunc i64 %5841 to i8
  %5843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5842, i8* %5843, align 1, !tbaa !2451
  %5844 = lshr i64 %5816, 63
  %5845 = xor i64 %5841, %5844
  %5846 = add nuw nsw i64 %5845, %5841
  %5847 = icmp eq i64 %5846, 2
  %5848 = zext i1 %5847 to i8
  %5849 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5848, i8* %5849, align 1, !tbaa !2452
  %5850 = load i64, i64* %RBP
  %5851 = sub i64 %5850, 24
  %5852 = load i64, i64* %RAX
  %5853 = load i64, i64* %PC
  %5854 = add i64 %5853, 4
  store i64 %5854, i64* %PC
  %5855 = inttoptr i64 %5851 to i64*
  store i64 %5852, i64* %5855
  %5856 = load i64, i64* %PC
  %5857 = sub i64 %5856, 154
  %5858 = load i64, i64* %PC
  %5859 = add i64 %5858, 5
  store i64 %5859, i64* %PC
  %5860 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5857, i64* %5860, align 8, !tbaa !2428
  br label %block_400dc1

block_401389:                                     ; preds = %block_40132d, %block_401397
  %MEMORY.25 = phi %struct.Memory* [ %MEMORY.23, %block_40132d ], [ %5171, %block_401397 ]
  %5861 = load i64, i64* %RBP
  %5862 = sub i64 %5861, 24
  %5863 = load i64, i64* %PC
  %5864 = add i64 %5863, 4
  store i64 %5864, i64* %PC
  %5865 = inttoptr i64 %5862 to i64*
  %5866 = load i64, i64* %5865
  store i64 %5866, i64* %RAX, align 8, !tbaa !2428
  %5867 = load i64, i64* %RAX
  %5868 = load i64, i64* %RBP
  %5869 = sub i64 %5868, 88
  %5870 = load i64, i64* %PC
  %5871 = add i64 %5870, 4
  store i64 %5871, i64* %PC
  %5872 = inttoptr i64 %5869 to i64*
  %5873 = load i64, i64* %5872
  %5874 = sub i64 %5867, %5873
  %5875 = icmp ugt i64 %5873, %5867
  %5876 = zext i1 %5875 to i8
  %5877 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5876, i8* %5877, align 1, !tbaa !2434
  %5878 = trunc i64 %5874 to i32
  %5879 = and i32 %5878, 255
  %5880 = call i32 @llvm.ctpop.i32(i32 %5879) #17
  %5881 = trunc i32 %5880 to i8
  %5882 = and i8 %5881, 1
  %5883 = xor i8 %5882, 1
  %5884 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5883, i8* %5884, align 1, !tbaa !2448
  %5885 = xor i64 %5873, %5867
  %5886 = xor i64 %5885, %5874
  %5887 = lshr i64 %5886, 4
  %5888 = trunc i64 %5887 to i8
  %5889 = and i8 %5888, 1
  %5890 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5889, i8* %5890, align 1, !tbaa !2449
  %5891 = icmp eq i64 %5874, 0
  %5892 = zext i1 %5891 to i8
  %5893 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5892, i8* %5893, align 1, !tbaa !2450
  %5894 = lshr i64 %5874, 63
  %5895 = trunc i64 %5894 to i8
  %5896 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5895, i8* %5896, align 1, !tbaa !2451
  %5897 = lshr i64 %5867, 63
  %5898 = lshr i64 %5873, 63
  %5899 = xor i64 %5898, %5897
  %5900 = xor i64 %5894, %5897
  %5901 = add nuw nsw i64 %5900, %5899
  %5902 = icmp eq i64 %5901, 2
  %5903 = zext i1 %5902 to i8
  %5904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5903, i8* %5904, align 1, !tbaa !2452
  %5905 = load i64, i64* %PC
  %5906 = add i64 %5905, 28
  %5907 = load i64, i64* %PC
  %5908 = add i64 %5907, 6
  %5909 = load i64, i64* %PC
  %5910 = add i64 %5909, 6
  store i64 %5910, i64* %PC
  %5911 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5912 = load i8, i8* %5911, align 1, !tbaa !2450
  %5913 = icmp eq i8 %5912, 0
  %5914 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5915 = load i8, i8* %5914, align 1, !tbaa !2451
  %5916 = icmp ne i8 %5915, 0
  %5917 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5918 = load i8, i8* %5917, align 1, !tbaa !2452
  %5919 = icmp ne i8 %5918, 0
  %5920 = xor i1 %5916, %5919
  %5921 = xor i1 %5920, true
  %5922 = and i1 %5913, %5921
  %5923 = zext i1 %5922 to i8
  store i8 %5923, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %5924 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5925 = select i1 %5922, i64 %5906, i64 %5908
  store i64 %5925, i64* %5924, align 8, !tbaa !2428
  %5926 = load i8, i8* %BRANCH_TAKEN
  %5927 = icmp eq i8 %5926, 1
  br i1 %5927, label %block_4013ad, label %block_401397

block_400986:                                     ; preds = %block_400981, %block_4015d4
  %MEMORY.26 = phi %struct.Memory* [ %MEMORY.19, %block_400981 ], [ %2581, %block_4015d4 ]
  %5928 = load i64, i64* %RAX
  %5929 = load i32, i32* %EAX
  %5930 = zext i32 %5929 to i64
  %5931 = load i64, i64* %PC
  %5932 = add i64 %5931, 2
  store i64 %5932, i64* %PC
  %5933 = xor i64 %5930, %5928
  %5934 = trunc i64 %5933 to i32
  %5935 = and i64 %5933, 4294967295
  store i64 %5935, i64* %RAX, align 8, !tbaa !2428
  %5936 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5936, align 1, !tbaa !2434
  %5937 = and i32 %5934, 255
  %5938 = call i32 @llvm.ctpop.i32(i32 %5937) #17
  %5939 = trunc i32 %5938 to i8
  %5940 = and i8 %5939, 1
  %5941 = xor i8 %5940, 1
  %5942 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5941, i8* %5942, align 1, !tbaa !2448
  %5943 = icmp eq i32 %5934, 0
  %5944 = zext i1 %5943 to i8
  %5945 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5944, i8* %5945, align 1, !tbaa !2450
  %5946 = lshr i32 %5934, 31
  %5947 = trunc i32 %5946 to i8
  %5948 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5947, i8* %5948, align 1, !tbaa !2451
  %5949 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5949, align 1, !tbaa !2452
  %5950 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5950, align 1, !tbaa !2449
  %5951 = load i32, i32* %EAX
  %5952 = zext i32 %5951 to i64
  %5953 = load i64, i64* %PC
  %5954 = add i64 %5953, 2
  store i64 %5954, i64* %PC
  %5955 = and i64 %5952, 4294967295
  store i64 %5955, i64* %RDI, align 8, !tbaa !2428
  %5956 = load i64, i64* %PC
  %5957 = sub i64 %5956, 602
  %5958 = load i64, i64* %PC
  %5959 = add i64 %5958, 5
  %5960 = load i64, i64* %PC
  %5961 = add i64 %5960, 5
  store i64 %5961, i64* %PC
  %5962 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %5963 = load i64, i64* %5962, align 8, !tbaa !2428
  %5964 = add i64 %5963, -8
  %5965 = inttoptr i64 %5964 to i64*
  store i64 %5959, i64* %5965
  store i64 %5964, i64* %5962, align 8, !tbaa !2428
  %5966 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5957, i64* %5966, align 8, !tbaa !2428
  %5967 = load i64, i64* %PC
  %5968 = call %struct.Memory* @ext_602128_time(%struct.State* %0, i64 %5967, %struct.Memory* %MEMORY.26)
  %5969 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %5970 = load i64, i64* %PC
  %5971 = add i64 %5970, 8
  store i64 %5971, i64* %PC
  %5972 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_401900__rodata_type* @seg_401900__rodata to i64), i64 8) to double*)
  %5973 = bitcast i8* %5969 to double*
  store double %5972, double* %5973, align 1, !tbaa !2432
  %5974 = getelementptr inbounds i8, i8* %5969, i64 8
  %5975 = bitcast i8* %5974 to double*
  store double 0.000000e+00, double* %5975, align 1, !tbaa !2432
  %5976 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %5977 = load i64, i64* %PC
  %5978 = add i64 %5977, 8
  store i64 %5978, i64* %PC
  %5979 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_401900__rodata_type* @seg_401900__rodata to i64), i64 16) to double*)
  %5980 = bitcast i8* %5976 to double*
  store double %5979, double* %5980, align 1, !tbaa !2432
  %5981 = getelementptr inbounds i8, i8* %5976, i64 8
  %5982 = bitcast i8* %5981 to double*
  store double 0.000000e+00, double* %5982, align 1, !tbaa !2432
  %5983 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %5984 = load i64, i64* %PC
  %5985 = add i64 %5984, 8
  store i64 %5985, i64* %PC
  %5986 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_401900__rodata_type* @seg_401900__rodata to i64), i64 24) to double*)
  %5987 = bitcast i8* %5983 to double*
  store double %5986, double* %5987, align 1, !tbaa !2432
  %5988 = getelementptr inbounds i8, i8* %5983, i64 8
  %5989 = bitcast i8* %5988 to double*
  store double 0.000000e+00, double* %5989, align 1, !tbaa !2432
  %5990 = load i64, i64* %RBP
  %5991 = sub i64 %5990, 192
  %5992 = load i64, i64* %RAX
  %5993 = load i64, i64* %PC
  %5994 = add i64 %5993, 7
  store i64 %5994, i64* %PC
  %5995 = inttoptr i64 %5991 to i64*
  store i64 %5992, i64* %5995
  %5996 = bitcast %union.vec128_t* %XMM2 to i8*
  %5997 = load i64, i64* %PC
  %5998 = add i64 %5997, 9
  store i64 %5998, i64* %PC
  %5999 = bitcast i8* %5996 to double*
  %6000 = load double, double* %5999, align 1
  store double %6000, double* bitcast (%T_type* @T to double*)
  %6001 = bitcast %union.vec128_t* %XMM1 to i8*
  %6002 = load i64, i64* %PC
  %6003 = add i64 %6002, 9
  store i64 %6003, i64* %PC
  %6004 = bitcast i8* %6001 to double*
  %6005 = load double, double* %6004, align 1
  store double %6005, double* bitcast (%T1_type* @T1 to double*)
  %6006 = bitcast %union.vec128_t* %XMM0 to i8*
  %6007 = load i64, i64* %PC
  %6008 = add i64 %6007, 9
  store i64 %6008, i64* %PC
  %6009 = bitcast i8* %6006 to double*
  %6010 = load double, double* %6009, align 1
  store double %6010, double* bitcast (%T2_type* @T2 to double*)
  %6011 = load i64, i64* %RBP
  %6012 = sub i64 %6011, 184
  %6013 = load i64, i64* %PC
  %6014 = add i64 %6013, 7
  store i64 %6014, i64* %PC
  %6015 = inttoptr i64 %6012 to i64*
  %6016 = load i64, i64* %6015
  store i64 %6016, i64* %RAX, align 8, !tbaa !2428
  %6017 = load i64, i64* %RBP
  %6018 = sub i64 %6017, 168
  %6019 = load i64, i64* %RAX
  %6020 = load i64, i64* %PC
  %6021 = add i64 %6020, 7
  store i64 %6021, i64* %PC
  %6022 = inttoptr i64 %6018 to i64*
  store i64 %6019, i64* %6022
  %6023 = load i64, i64* %RBP
  %6024 = sub i64 %6023, 172
  %6025 = load i64, i64* %PC
  %6026 = add i64 %6025, 10
  store i64 %6026, i64* %PC
  %6027 = inttoptr i64 %6024 to i32*
  store i32 1, i32* %6027
  %6028 = load i64, i64* %RBP
  %6029 = sub i64 %6028, 176
  %6030 = load i64, i64* %PC
  %6031 = add i64 %6030, 10
  store i64 %6031, i64* %PC
  %6032 = inttoptr i64 %6029 to i32*
  store i32 1, i32* %6032
  br label %block_4009eb

block_4015d9:                                     ; preds = %block_4015a0
  %6033 = load i64, i64* %RBP
  %6034 = sub i64 %6033, 4
  %6035 = load i64, i64* %PC
  %6036 = add i64 %6035, 7
  store i64 %6036, i64* %PC
  %6037 = inttoptr i64 %6034 to i32*
  store i32 0, i32* %6037
  br label %block_4015e0

block_40104b:                                     ; preds = %block_40103d
  %6038 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %6039 = load i64, i64* %PC
  %6040 = add i64 %6039, 8
  store i64 %6040, i64* %PC
  %6041 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_401900__rodata_type* @seg_401900__rodata to i64), i64 40) to double*)
  %6042 = bitcast i8* %6038 to double*
  store double %6041, double* %6042, align 1, !tbaa !2432
  %6043 = getelementptr inbounds i8, i8* %6038, i64 8
  %6044 = bitcast i8* %6043 to double*
  store double 0.000000e+00, double* %6044, align 1, !tbaa !2432
  %6045 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %6046 = load i64, i64* %PC
  %6047 = add i64 %6046, 9
  store i64 %6047, i64* %PC
  %6048 = load double, double* bitcast (%T_type* @T to double*)
  %6049 = bitcast i8* %6045 to double*
  store double %6048, double* %6049, align 1, !tbaa !2432
  %6050 = getelementptr inbounds i8, i8* %6045, i64 8
  %6051 = bitcast i8* %6050 to double*
  store double 0.000000e+00, double* %6051, align 1, !tbaa !2432
  %6052 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %6053 = load i64, i64* %PC
  %6054 = add i64 %6053, 9
  store i64 %6054, i64* %PC
  %6055 = load double, double* bitcast (%T2_type* @T2 to double*)
  %6056 = bitcast i8* %6052 to double*
  store double %6055, double* %6056, align 1, !tbaa !2432
  %6057 = getelementptr inbounds i8, i8* %6052, i64 8
  %6058 = bitcast i8* %6057 to double*
  store double 0.000000e+00, double* %6058, align 1, !tbaa !2432
  %6059 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %6060 = load i64, i64* %RBP
  %6061 = sub i64 %6060, 144
  %6062 = load i64, i64* %PC
  %6063 = add i64 %6062, 8
  store i64 %6063, i64* %PC
  %6064 = inttoptr i64 %6061 to double*
  %6065 = load double, double* %6064
  %6066 = bitcast i8* %6059 to double*
  store double %6065, double* %6066, align 1, !tbaa !2432
  %6067 = getelementptr inbounds i8, i8* %6059, i64 8
  %6068 = bitcast i8* %6067 to double*
  store double 0.000000e+00, double* %6068, align 1, !tbaa !2432
  %6069 = load i64, i64* %RBP
  %6070 = sub i64 %6069, 224
  %6071 = bitcast %union.vec128_t* %XMM0 to i8*
  %6072 = load i64, i64* %PC
  %6073 = add i64 %6072, 8
  store i64 %6073, i64* %PC
  %6074 = bitcast i8* %6071 to double*
  %6075 = load double, double* %6074, align 1
  %6076 = inttoptr i64 %6070 to double*
  store double %6075, double* %6076
  %6077 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %6078 = bitcast %union.vec128_t* %XMM3 to i8*
  %6079 = load i64, i64* %PC
  %6080 = add i64 %6079, 3
  store i64 %6080, i64* %PC
  %6081 = bitcast i8* %6078 to <2 x i32>*
  %6082 = load <2 x i32>, <2 x i32>* %6081, align 1
  %6083 = getelementptr inbounds i8, i8* %6078, i64 8
  %6084 = bitcast i8* %6083 to <2 x i32>*
  %6085 = load <2 x i32>, <2 x i32>* %6084, align 1
  %6086 = extractelement <2 x i32> %6082, i32 0
  %6087 = bitcast i8* %6077 to i32*
  store i32 %6086, i32* %6087, align 1, !tbaa !2460
  %6088 = extractelement <2 x i32> %6082, i32 1
  %6089 = getelementptr inbounds i8, i8* %6077, i64 4
  %6090 = bitcast i8* %6089 to i32*
  store i32 %6088, i32* %6090, align 1, !tbaa !2460
  %6091 = extractelement <2 x i32> %6085, i32 0
  %6092 = getelementptr inbounds i8, i8* %6077, i64 8
  %6093 = bitcast i8* %6092 to i32*
  store i32 %6091, i32* %6093, align 1, !tbaa !2460
  %6094 = extractelement <2 x i32> %6085, i32 1
  %6095 = getelementptr inbounds i8, i8* %6077, i64 12
  %6096 = bitcast i8* %6095 to i32*
  store i32 %6094, i32* %6096, align 1, !tbaa !2460
  %6097 = load i64, i64* %RBP
  %6098 = sub i64 %6097, 232
  %6099 = bitcast %union.vec128_t* %XMM2 to i8*
  %6100 = load i64, i64* %PC
  %6101 = add i64 %6100, 8
  store i64 %6101, i64* %PC
  %6102 = bitcast i8* %6099 to double*
  %6103 = load double, double* %6102, align 1
  %6104 = inttoptr i64 %6098 to double*
  store double %6103, double* %6104
  %6105 = load i64, i64* %RBP
  %6106 = sub i64 %6105, 240
  %6107 = bitcast %union.vec128_t* %XMM1 to i8*
  %6108 = load i64, i64* %PC
  %6109 = add i64 %6108, 8
  store i64 %6109, i64* %PC
  %6110 = bitcast i8* %6107 to double*
  %6111 = load double, double* %6110, align 1
  %6112 = inttoptr i64 %6106 to double*
  store double %6111, double* %6112
  %6113 = load i64, i64* %PC
  %6114 = sub i64 %6113, 2360
  %6115 = load i64, i64* %PC
  %6116 = add i64 %6115, 5
  %6117 = load i64, i64* %PC
  %6118 = add i64 %6117, 5
  store i64 %6118, i64* %PC
  %6119 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6120 = load i64, i64* %6119, align 8, !tbaa !2428
  %6121 = add i64 %6120, -8
  %6122 = inttoptr i64 %6121 to i64*
  store i64 %6116, i64* %6122
  store i64 %6121, i64* %6119, align 8, !tbaa !2428
  %6123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6114, i64* %6123, align 8, !tbaa !2428
  %6124 = load i64, i64* %PC
  %6125 = bitcast %struct.State** %state.i1273 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6125)
  %6126 = bitcast i64* %curr_pc.i1274 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6126)
  %6127 = bitcast %struct.Memory** %memory.i1275 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6127)
  call void @llvm.lifetime.start(i64 1, i8* %BRANCH_TAKEN.i1276)
  %6128 = bitcast i64* %SS_BASE.i1277 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6128)
  %6129 = bitcast i64* %ES_BASE.i1278 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6129)
  %6130 = bitcast i64* %DS_BASE.i1279 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6130)
  %6131 = bitcast i64* %CS_BASE.i1280 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6131)
  %6132 = bitcast %struct.State** %STATE.i1281 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6132)
  %6133 = bitcast %struct.Memory** %MEMORY.i1282 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6133)
  %6134 = bitcast i64** %_DR0.i1283 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6134)
  %6135 = bitcast i64** %_DR1.i1284 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6135)
  %6136 = bitcast i64** %_DR2.i1285 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6136)
  %6137 = bitcast i64** %_DR3.i1286 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6137)
  %6138 = bitcast i64** %_DR4.i1287 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6138)
  %6139 = bitcast i64** %_DR5.i1288 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6139)
  %6140 = bitcast i64** %_DR6.i1289 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6140)
  %6141 = bitcast i64** %_DR7.i1290 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6141)
  %6142 = bitcast i64** %CR0.i1291 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6142)
  %6143 = bitcast i64** %CR1.i1292 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6143)
  %6144 = bitcast i64** %CR2.i1293 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6144)
  %6145 = bitcast i64** %CR3.i1294 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6145)
  %6146 = bitcast i64** %CR4.i1295 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6146)
  %6147 = bitcast i64** %CR8.i1296 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6147)
  store %struct.State* %0, %struct.State** %state.i1273, align 8, !noalias !2462
  store i64 %6124, i64* %curr_pc.i1274, align 8, !noalias !2462
  store %struct.Memory* %MEMORY.9, %struct.Memory** %memory.i1275, align 8, !noalias !2462
  store i8 0, i8* %BRANCH_TAKEN.i1276, align 1, !noalias !2462
  store i64 0, i64* %SS_BASE.i1277, align 8, !noalias !2462
  store i64 0, i64* %ES_BASE.i1278, align 8, !noalias !2462
  store i64 0, i64* %DS_BASE.i1279, align 8, !noalias !2462
  store i64 0, i64* %CS_BASE.i1280, align 8, !noalias !2462
  store %struct.State* %0, %struct.State** %STATE.i1281, align 8, !noalias !2462
  store %struct.Memory* %MEMORY.9, %struct.Memory** %MEMORY.i1282, align 8, !noalias !2462
  %6148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6149 = getelementptr inbounds %struct.GPR, %struct.GPR* %6148, i32 0, i32 33
  %6150 = getelementptr inbounds %struct.Reg, %struct.Reg* %6149, i32 0, i32 0
  %PC.i1297 = bitcast %union.anon* %6150 to i64*
  store i64 %6124, i64* %PC.i1297, align 8, !alias.scope !2466, !noalias !2467
  %6151 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6152 = getelementptr inbounds %struct.GPR, %struct.GPR* %6151, i32 0, i32 1
  %6153 = getelementptr inbounds %struct.Reg, %struct.Reg* %6152, i32 0, i32 0
  %6154 = bitcast %union.anon* %6153 to %struct.anon.2*
  %AH.i1298 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6154, i32 0, i32 1
  %6155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6156 = getelementptr inbounds %struct.GPR, %struct.GPR* %6155, i32 0, i32 3
  %6157 = getelementptr inbounds %struct.Reg, %struct.Reg* %6156, i32 0, i32 0
  %6158 = bitcast %union.anon* %6157 to %struct.anon.2*
  %BH.i1299 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6158, i32 0, i32 1
  %6159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6160 = getelementptr inbounds %struct.GPR, %struct.GPR* %6159, i32 0, i32 5
  %6161 = getelementptr inbounds %struct.Reg, %struct.Reg* %6160, i32 0, i32 0
  %6162 = bitcast %union.anon* %6161 to %struct.anon.2*
  %CH.i1300 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6162, i32 0, i32 1
  %6163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6164 = getelementptr inbounds %struct.GPR, %struct.GPR* %6163, i32 0, i32 7
  %6165 = getelementptr inbounds %struct.Reg, %struct.Reg* %6164, i32 0, i32 0
  %6166 = bitcast %union.anon* %6165 to %struct.anon.2*
  %DH.i1301 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6166, i32 0, i32 1
  %6167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6168 = getelementptr inbounds %struct.GPR, %struct.GPR* %6167, i32 0, i32 1
  %6169 = getelementptr inbounds %struct.Reg, %struct.Reg* %6168, i32 0, i32 0
  %6170 = bitcast %union.anon* %6169 to %struct.anon.2*
  %AL.i1302 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6170, i32 0, i32 0
  %6171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6172 = getelementptr inbounds %struct.GPR, %struct.GPR* %6171, i32 0, i32 3
  %6173 = getelementptr inbounds %struct.Reg, %struct.Reg* %6172, i32 0, i32 0
  %6174 = bitcast %union.anon* %6173 to %struct.anon.2*
  %BL.i1303 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6174, i32 0, i32 0
  %6175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6176 = getelementptr inbounds %struct.GPR, %struct.GPR* %6175, i32 0, i32 5
  %6177 = getelementptr inbounds %struct.Reg, %struct.Reg* %6176, i32 0, i32 0
  %6178 = bitcast %union.anon* %6177 to %struct.anon.2*
  %CL.i1304 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6178, i32 0, i32 0
  %6179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6180 = getelementptr inbounds %struct.GPR, %struct.GPR* %6179, i32 0, i32 7
  %6181 = getelementptr inbounds %struct.Reg, %struct.Reg* %6180, i32 0, i32 0
  %6182 = bitcast %union.anon* %6181 to %struct.anon.2*
  %DL.i1305 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6182, i32 0, i32 0
  %6183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6184 = getelementptr inbounds %struct.GPR, %struct.GPR* %6183, i32 0, i32 9
  %6185 = getelementptr inbounds %struct.Reg, %struct.Reg* %6184, i32 0, i32 0
  %6186 = bitcast %union.anon* %6185 to %struct.anon.2*
  %SIL.i1306 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6186, i32 0, i32 0
  %6187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6188 = getelementptr inbounds %struct.GPR, %struct.GPR* %6187, i32 0, i32 11
  %6189 = getelementptr inbounds %struct.Reg, %struct.Reg* %6188, i32 0, i32 0
  %6190 = bitcast %union.anon* %6189 to %struct.anon.2*
  %DIL.i1307 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6190, i32 0, i32 0
  %6191 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6192 = getelementptr inbounds %struct.GPR, %struct.GPR* %6191, i32 0, i32 13
  %6193 = getelementptr inbounds %struct.Reg, %struct.Reg* %6192, i32 0, i32 0
  %6194 = bitcast %union.anon* %6193 to %struct.anon.2*
  %SPL.i1308 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6194, i32 0, i32 0
  %6195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6196 = getelementptr inbounds %struct.GPR, %struct.GPR* %6195, i32 0, i32 15
  %6197 = getelementptr inbounds %struct.Reg, %struct.Reg* %6196, i32 0, i32 0
  %6198 = bitcast %union.anon* %6197 to %struct.anon.2*
  %BPL.i1309 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6198, i32 0, i32 0
  %6199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6200 = getelementptr inbounds %struct.GPR, %struct.GPR* %6199, i32 0, i32 17
  %6201 = getelementptr inbounds %struct.Reg, %struct.Reg* %6200, i32 0, i32 0
  %6202 = bitcast %union.anon* %6201 to %struct.anon.2*
  %R8B.i1310 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6202, i32 0, i32 0
  %6203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6204 = getelementptr inbounds %struct.GPR, %struct.GPR* %6203, i32 0, i32 19
  %6205 = getelementptr inbounds %struct.Reg, %struct.Reg* %6204, i32 0, i32 0
  %6206 = bitcast %union.anon* %6205 to %struct.anon.2*
  %R9B.i1311 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6206, i32 0, i32 0
  %6207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6208 = getelementptr inbounds %struct.GPR, %struct.GPR* %6207, i32 0, i32 21
  %6209 = getelementptr inbounds %struct.Reg, %struct.Reg* %6208, i32 0, i32 0
  %6210 = bitcast %union.anon* %6209 to %struct.anon.2*
  %R10B.i1312 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6210, i32 0, i32 0
  %6211 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6212 = getelementptr inbounds %struct.GPR, %struct.GPR* %6211, i32 0, i32 23
  %6213 = getelementptr inbounds %struct.Reg, %struct.Reg* %6212, i32 0, i32 0
  %6214 = bitcast %union.anon* %6213 to %struct.anon.2*
  %R11B.i1313 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6214, i32 0, i32 0
  %6215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6216 = getelementptr inbounds %struct.GPR, %struct.GPR* %6215, i32 0, i32 25
  %6217 = getelementptr inbounds %struct.Reg, %struct.Reg* %6216, i32 0, i32 0
  %6218 = bitcast %union.anon* %6217 to %struct.anon.2*
  %R12B.i1314 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6218, i32 0, i32 0
  %6219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6220 = getelementptr inbounds %struct.GPR, %struct.GPR* %6219, i32 0, i32 27
  %6221 = getelementptr inbounds %struct.Reg, %struct.Reg* %6220, i32 0, i32 0
  %6222 = bitcast %union.anon* %6221 to %struct.anon.2*
  %R13B.i1315 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6222, i32 0, i32 0
  %6223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6224 = getelementptr inbounds %struct.GPR, %struct.GPR* %6223, i32 0, i32 29
  %6225 = getelementptr inbounds %struct.Reg, %struct.Reg* %6224, i32 0, i32 0
  %6226 = bitcast %union.anon* %6225 to %struct.anon.2*
  %R14B.i1316 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6226, i32 0, i32 0
  %6227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6228 = getelementptr inbounds %struct.GPR, %struct.GPR* %6227, i32 0, i32 31
  %6229 = getelementptr inbounds %struct.Reg, %struct.Reg* %6228, i32 0, i32 0
  %6230 = bitcast %union.anon* %6229 to %struct.anon.2*
  %R15B.i1317 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6230, i32 0, i32 0
  %6231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6232 = getelementptr inbounds %struct.GPR, %struct.GPR* %6231, i32 0, i32 1
  %6233 = getelementptr inbounds %struct.Reg, %struct.Reg* %6232, i32 0, i32 0
  %AX.i1318 = bitcast %union.anon* %6233 to i16*
  %6234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6235 = getelementptr inbounds %struct.GPR, %struct.GPR* %6234, i32 0, i32 3
  %6236 = getelementptr inbounds %struct.Reg, %struct.Reg* %6235, i32 0, i32 0
  %BX.i1319 = bitcast %union.anon* %6236 to i16*
  %6237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6238 = getelementptr inbounds %struct.GPR, %struct.GPR* %6237, i32 0, i32 5
  %6239 = getelementptr inbounds %struct.Reg, %struct.Reg* %6238, i32 0, i32 0
  %CX.i1320 = bitcast %union.anon* %6239 to i16*
  %6240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6241 = getelementptr inbounds %struct.GPR, %struct.GPR* %6240, i32 0, i32 7
  %6242 = getelementptr inbounds %struct.Reg, %struct.Reg* %6241, i32 0, i32 0
  %DX.i1321 = bitcast %union.anon* %6242 to i16*
  %6243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6244 = getelementptr inbounds %struct.GPR, %struct.GPR* %6243, i32 0, i32 9
  %6245 = getelementptr inbounds %struct.Reg, %struct.Reg* %6244, i32 0, i32 0
  %SI.i1322 = bitcast %union.anon* %6245 to i16*
  %6246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6247 = getelementptr inbounds %struct.GPR, %struct.GPR* %6246, i32 0, i32 11
  %6248 = getelementptr inbounds %struct.Reg, %struct.Reg* %6247, i32 0, i32 0
  %DI.i1323 = bitcast %union.anon* %6248 to i16*
  %6249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6250 = getelementptr inbounds %struct.GPR, %struct.GPR* %6249, i32 0, i32 13
  %6251 = getelementptr inbounds %struct.Reg, %struct.Reg* %6250, i32 0, i32 0
  %SP.i1324 = bitcast %union.anon* %6251 to i16*
  %6252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6253 = getelementptr inbounds %struct.GPR, %struct.GPR* %6252, i32 0, i32 15
  %6254 = getelementptr inbounds %struct.Reg, %struct.Reg* %6253, i32 0, i32 0
  %BP.i1325 = bitcast %union.anon* %6254 to i16*
  %6255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6256 = getelementptr inbounds %struct.GPR, %struct.GPR* %6255, i32 0, i32 17
  %6257 = getelementptr inbounds %struct.Reg, %struct.Reg* %6256, i32 0, i32 0
  %R8W.i1326 = bitcast %union.anon* %6257 to i16*
  %6258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6259 = getelementptr inbounds %struct.GPR, %struct.GPR* %6258, i32 0, i32 19
  %6260 = getelementptr inbounds %struct.Reg, %struct.Reg* %6259, i32 0, i32 0
  %R9W.i1327 = bitcast %union.anon* %6260 to i16*
  %6261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6262 = getelementptr inbounds %struct.GPR, %struct.GPR* %6261, i32 0, i32 21
  %6263 = getelementptr inbounds %struct.Reg, %struct.Reg* %6262, i32 0, i32 0
  %R10W.i1328 = bitcast %union.anon* %6263 to i16*
  %6264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6265 = getelementptr inbounds %struct.GPR, %struct.GPR* %6264, i32 0, i32 23
  %6266 = getelementptr inbounds %struct.Reg, %struct.Reg* %6265, i32 0, i32 0
  %R11W.i1329 = bitcast %union.anon* %6266 to i16*
  %6267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6268 = getelementptr inbounds %struct.GPR, %struct.GPR* %6267, i32 0, i32 25
  %6269 = getelementptr inbounds %struct.Reg, %struct.Reg* %6268, i32 0, i32 0
  %R12W.i1330 = bitcast %union.anon* %6269 to i16*
  %6270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6271 = getelementptr inbounds %struct.GPR, %struct.GPR* %6270, i32 0, i32 27
  %6272 = getelementptr inbounds %struct.Reg, %struct.Reg* %6271, i32 0, i32 0
  %R13W.i1331 = bitcast %union.anon* %6272 to i16*
  %6273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6274 = getelementptr inbounds %struct.GPR, %struct.GPR* %6273, i32 0, i32 29
  %6275 = getelementptr inbounds %struct.Reg, %struct.Reg* %6274, i32 0, i32 0
  %R14W.i1332 = bitcast %union.anon* %6275 to i16*
  %6276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6277 = getelementptr inbounds %struct.GPR, %struct.GPR* %6276, i32 0, i32 31
  %6278 = getelementptr inbounds %struct.Reg, %struct.Reg* %6277, i32 0, i32 0
  %R15W.i1333 = bitcast %union.anon* %6278 to i16*
  %6279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6280 = getelementptr inbounds %struct.GPR, %struct.GPR* %6279, i32 0, i32 33
  %6281 = getelementptr inbounds %struct.Reg, %struct.Reg* %6280, i32 0, i32 0
  %IP.i1334 = bitcast %union.anon* %6281 to i16*
  %6282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6283 = getelementptr inbounds %struct.GPR, %struct.GPR* %6282, i32 0, i32 1
  %6284 = getelementptr inbounds %struct.Reg, %struct.Reg* %6283, i32 0, i32 0
  %EAX.i1335 = bitcast %union.anon* %6284 to i32*
  %6285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6286 = getelementptr inbounds %struct.GPR, %struct.GPR* %6285, i32 0, i32 3
  %6287 = getelementptr inbounds %struct.Reg, %struct.Reg* %6286, i32 0, i32 0
  %EBX.i1336 = bitcast %union.anon* %6287 to i32*
  %6288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6289 = getelementptr inbounds %struct.GPR, %struct.GPR* %6288, i32 0, i32 5
  %6290 = getelementptr inbounds %struct.Reg, %struct.Reg* %6289, i32 0, i32 0
  %ECX.i1337 = bitcast %union.anon* %6290 to i32*
  %6291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6292 = getelementptr inbounds %struct.GPR, %struct.GPR* %6291, i32 0, i32 7
  %6293 = getelementptr inbounds %struct.Reg, %struct.Reg* %6292, i32 0, i32 0
  %EDX.i1338 = bitcast %union.anon* %6293 to i32*
  %6294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6295 = getelementptr inbounds %struct.GPR, %struct.GPR* %6294, i32 0, i32 9
  %6296 = getelementptr inbounds %struct.Reg, %struct.Reg* %6295, i32 0, i32 0
  %ESI.i1339 = bitcast %union.anon* %6296 to i32*
  %6297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6298 = getelementptr inbounds %struct.GPR, %struct.GPR* %6297, i32 0, i32 11
  %6299 = getelementptr inbounds %struct.Reg, %struct.Reg* %6298, i32 0, i32 0
  %EDI.i1340 = bitcast %union.anon* %6299 to i32*
  %6300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6301 = getelementptr inbounds %struct.GPR, %struct.GPR* %6300, i32 0, i32 13
  %6302 = getelementptr inbounds %struct.Reg, %struct.Reg* %6301, i32 0, i32 0
  %ESP.i1341 = bitcast %union.anon* %6302 to i32*
  %6303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6304 = getelementptr inbounds %struct.GPR, %struct.GPR* %6303, i32 0, i32 15
  %6305 = getelementptr inbounds %struct.Reg, %struct.Reg* %6304, i32 0, i32 0
  %EBP.i1342 = bitcast %union.anon* %6305 to i32*
  %6306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6307 = getelementptr inbounds %struct.GPR, %struct.GPR* %6306, i32 0, i32 33
  %6308 = getelementptr inbounds %struct.Reg, %struct.Reg* %6307, i32 0, i32 0
  %EIP.i1343 = bitcast %union.anon* %6308 to i32*
  %6309 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6310 = getelementptr inbounds %struct.GPR, %struct.GPR* %6309, i32 0, i32 17
  %6311 = getelementptr inbounds %struct.Reg, %struct.Reg* %6310, i32 0, i32 0
  %R8D.i1344 = bitcast %union.anon* %6311 to i32*
  %6312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6313 = getelementptr inbounds %struct.GPR, %struct.GPR* %6312, i32 0, i32 19
  %6314 = getelementptr inbounds %struct.Reg, %struct.Reg* %6313, i32 0, i32 0
  %R9D.i1345 = bitcast %union.anon* %6314 to i32*
  %6315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6316 = getelementptr inbounds %struct.GPR, %struct.GPR* %6315, i32 0, i32 21
  %6317 = getelementptr inbounds %struct.Reg, %struct.Reg* %6316, i32 0, i32 0
  %R10D.i1346 = bitcast %union.anon* %6317 to i32*
  %6318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6319 = getelementptr inbounds %struct.GPR, %struct.GPR* %6318, i32 0, i32 23
  %6320 = getelementptr inbounds %struct.Reg, %struct.Reg* %6319, i32 0, i32 0
  %R11D.i1347 = bitcast %union.anon* %6320 to i32*
  %6321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6322 = getelementptr inbounds %struct.GPR, %struct.GPR* %6321, i32 0, i32 25
  %6323 = getelementptr inbounds %struct.Reg, %struct.Reg* %6322, i32 0, i32 0
  %R12D.i1348 = bitcast %union.anon* %6323 to i32*
  %6324 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6325 = getelementptr inbounds %struct.GPR, %struct.GPR* %6324, i32 0, i32 27
  %6326 = getelementptr inbounds %struct.Reg, %struct.Reg* %6325, i32 0, i32 0
  %R13D.i1349 = bitcast %union.anon* %6326 to i32*
  %6327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6328 = getelementptr inbounds %struct.GPR, %struct.GPR* %6327, i32 0, i32 29
  %6329 = getelementptr inbounds %struct.Reg, %struct.Reg* %6328, i32 0, i32 0
  %R14D.i1350 = bitcast %union.anon* %6329 to i32*
  %6330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6331 = getelementptr inbounds %struct.GPR, %struct.GPR* %6330, i32 0, i32 31
  %6332 = getelementptr inbounds %struct.Reg, %struct.Reg* %6331, i32 0, i32 0
  %R15D.i1351 = bitcast %union.anon* %6332 to i32*
  %6333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6334 = getelementptr inbounds %struct.GPR, %struct.GPR* %6333, i32 0, i32 1
  %6335 = getelementptr inbounds %struct.Reg, %struct.Reg* %6334, i32 0, i32 0
  %RAX.i1352 = bitcast %union.anon* %6335 to i64*
  %6336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6337 = getelementptr inbounds %struct.GPR, %struct.GPR* %6336, i32 0, i32 3
  %6338 = getelementptr inbounds %struct.Reg, %struct.Reg* %6337, i32 0, i32 0
  %RBX.i1353 = bitcast %union.anon* %6338 to i64*
  %6339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6340 = getelementptr inbounds %struct.GPR, %struct.GPR* %6339, i32 0, i32 5
  %6341 = getelementptr inbounds %struct.Reg, %struct.Reg* %6340, i32 0, i32 0
  %RCX.i1354 = bitcast %union.anon* %6341 to i64*
  %6342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6343 = getelementptr inbounds %struct.GPR, %struct.GPR* %6342, i32 0, i32 7
  %6344 = getelementptr inbounds %struct.Reg, %struct.Reg* %6343, i32 0, i32 0
  %RDX.i1355 = bitcast %union.anon* %6344 to i64*
  %6345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6346 = getelementptr inbounds %struct.GPR, %struct.GPR* %6345, i32 0, i32 9
  %6347 = getelementptr inbounds %struct.Reg, %struct.Reg* %6346, i32 0, i32 0
  %RSI.i1356 = bitcast %union.anon* %6347 to i64*
  %6348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6349 = getelementptr inbounds %struct.GPR, %struct.GPR* %6348, i32 0, i32 11
  %6350 = getelementptr inbounds %struct.Reg, %struct.Reg* %6349, i32 0, i32 0
  %RDI.i1357 = bitcast %union.anon* %6350 to i64*
  %6351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6352 = getelementptr inbounds %struct.GPR, %struct.GPR* %6351, i32 0, i32 13
  %6353 = getelementptr inbounds %struct.Reg, %struct.Reg* %6352, i32 0, i32 0
  %RSP.i1358 = bitcast %union.anon* %6353 to i64*
  %6354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6355 = getelementptr inbounds %struct.GPR, %struct.GPR* %6354, i32 0, i32 15
  %6356 = getelementptr inbounds %struct.Reg, %struct.Reg* %6355, i32 0, i32 0
  %RBP.i1359 = bitcast %union.anon* %6356 to i64*
  %6357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6358 = getelementptr inbounds %struct.GPR, %struct.GPR* %6357, i32 0, i32 17
  %6359 = getelementptr inbounds %struct.Reg, %struct.Reg* %6358, i32 0, i32 0
  %R8.i1360 = bitcast %union.anon* %6359 to i64*
  %6360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6361 = getelementptr inbounds %struct.GPR, %struct.GPR* %6360, i32 0, i32 19
  %6362 = getelementptr inbounds %struct.Reg, %struct.Reg* %6361, i32 0, i32 0
  %R9.i1361 = bitcast %union.anon* %6362 to i64*
  %6363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6364 = getelementptr inbounds %struct.GPR, %struct.GPR* %6363, i32 0, i32 21
  %6365 = getelementptr inbounds %struct.Reg, %struct.Reg* %6364, i32 0, i32 0
  %R10.i1362 = bitcast %union.anon* %6365 to i64*
  %6366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6367 = getelementptr inbounds %struct.GPR, %struct.GPR* %6366, i32 0, i32 23
  %6368 = getelementptr inbounds %struct.Reg, %struct.Reg* %6367, i32 0, i32 0
  %R11.i1363 = bitcast %union.anon* %6368 to i64*
  %6369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6370 = getelementptr inbounds %struct.GPR, %struct.GPR* %6369, i32 0, i32 25
  %6371 = getelementptr inbounds %struct.Reg, %struct.Reg* %6370, i32 0, i32 0
  %R12.i1364 = bitcast %union.anon* %6371 to i64*
  %6372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6373 = getelementptr inbounds %struct.GPR, %struct.GPR* %6372, i32 0, i32 27
  %6374 = getelementptr inbounds %struct.Reg, %struct.Reg* %6373, i32 0, i32 0
  %R13.i1365 = bitcast %union.anon* %6374 to i64*
  %6375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6376 = getelementptr inbounds %struct.GPR, %struct.GPR* %6375, i32 0, i32 29
  %6377 = getelementptr inbounds %struct.Reg, %struct.Reg* %6376, i32 0, i32 0
  %R14.i1366 = bitcast %union.anon* %6377 to i64*
  %6378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6379 = getelementptr inbounds %struct.GPR, %struct.GPR* %6378, i32 0, i32 31
  %6380 = getelementptr inbounds %struct.Reg, %struct.Reg* %6379, i32 0, i32 0
  %R15.i1367 = bitcast %union.anon* %6380 to i64*
  %6381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6382 = getelementptr inbounds %struct.GPR, %struct.GPR* %6381, i32 0, i32 33
  %6383 = getelementptr inbounds %struct.Reg, %struct.Reg* %6382, i32 0, i32 0
  %RIP.i1368 = bitcast %union.anon* %6383 to i64*
  %6384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %6385 = getelementptr inbounds %struct.Segments, %struct.Segments* %6384, i32 0, i32 1
  %SS.i1369 = bitcast %union.SegmentSelector* %6385 to i16*
  %6386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %6387 = getelementptr inbounds %struct.Segments, %struct.Segments* %6386, i32 0, i32 3
  %ES.i1370 = bitcast %union.SegmentSelector* %6387 to i16*
  %6388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %6389 = getelementptr inbounds %struct.Segments, %struct.Segments* %6388, i32 0, i32 5
  %GS.i1371 = bitcast %union.SegmentSelector* %6389 to i16*
  %6390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %6391 = getelementptr inbounds %struct.Segments, %struct.Segments* %6390, i32 0, i32 7
  %FS.i1372 = bitcast %union.SegmentSelector* %6391 to i16*
  %6392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %6393 = getelementptr inbounds %struct.Segments, %struct.Segments* %6392, i32 0, i32 9
  %DS.i1373 = bitcast %union.SegmentSelector* %6393 to i16*
  %6394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %6395 = getelementptr inbounds %struct.Segments, %struct.Segments* %6394, i32 0, i32 11
  %CS.i1374 = bitcast %union.SegmentSelector* %6395 to i16*
  %6396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %6397 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %6396, i32 0, i32 5
  %6398 = getelementptr inbounds %struct.Reg, %struct.Reg* %6397, i32 0, i32 0
  %GS_BASE.i1375 = bitcast %union.anon* %6398 to i64*
  %6399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %6400 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %6399, i32 0, i32 7
  %6401 = getelementptr inbounds %struct.Reg, %struct.Reg* %6400, i32 0, i32 0
  %FS_BASE.i1376 = bitcast %union.anon* %6401 to i64*
  %6402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6403 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6402, i64 0, i64 0
  %YMM0.i1377 = bitcast %union.VectorReg* %6403 to %"class.std::bitset"*
  %6404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6405 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6404, i64 0, i64 1
  %YMM1.i1378 = bitcast %union.VectorReg* %6405 to %"class.std::bitset"*
  %6406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6407 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6406, i64 0, i64 2
  %YMM2.i1379 = bitcast %union.VectorReg* %6407 to %"class.std::bitset"*
  %6408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6409 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6408, i64 0, i64 3
  %YMM3.i1380 = bitcast %union.VectorReg* %6409 to %"class.std::bitset"*
  %6410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6411 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6410, i64 0, i64 4
  %YMM4.i1381 = bitcast %union.VectorReg* %6411 to %"class.std::bitset"*
  %6412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6413 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6412, i64 0, i64 5
  %YMM5.i1382 = bitcast %union.VectorReg* %6413 to %"class.std::bitset"*
  %6414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6415 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6414, i64 0, i64 6
  %YMM6.i1383 = bitcast %union.VectorReg* %6415 to %"class.std::bitset"*
  %6416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6417 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6416, i64 0, i64 7
  %YMM7.i1384 = bitcast %union.VectorReg* %6417 to %"class.std::bitset"*
  %6418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6419 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6418, i64 0, i64 8
  %YMM8.i1385 = bitcast %union.VectorReg* %6419 to %"class.std::bitset"*
  %6420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6421 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6420, i64 0, i64 9
  %YMM9.i1386 = bitcast %union.VectorReg* %6421 to %"class.std::bitset"*
  %6422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6423 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6422, i64 0, i64 10
  %YMM10.i1387 = bitcast %union.VectorReg* %6423 to %"class.std::bitset"*
  %6424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6425 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6424, i64 0, i64 11
  %YMM11.i1388 = bitcast %union.VectorReg* %6425 to %"class.std::bitset"*
  %6426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6427 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6426, i64 0, i64 12
  %YMM12.i1389 = bitcast %union.VectorReg* %6427 to %"class.std::bitset"*
  %6428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6429 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6428, i64 0, i64 13
  %YMM13.i1390 = bitcast %union.VectorReg* %6429 to %"class.std::bitset"*
  %6430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6431 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6430, i64 0, i64 14
  %YMM14.i1391 = bitcast %union.VectorReg* %6431 to %"class.std::bitset"*
  %6432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6433 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6432, i64 0, i64 15
  %YMM15.i1392 = bitcast %union.VectorReg* %6433 to %"class.std::bitset"*
  %6434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6435 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6434, i64 0, i64 0
  %XMM0.i1393 = bitcast %union.VectorReg* %6435 to %union.vec128_t*
  %6436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6437 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6436, i64 0, i64 1
  %XMM1.i1394 = bitcast %union.VectorReg* %6437 to %union.vec128_t*
  %6438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6439 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6438, i64 0, i64 2
  %XMM2.i1395 = bitcast %union.VectorReg* %6439 to %union.vec128_t*
  %6440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6441 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6440, i64 0, i64 3
  %XMM3.i1396 = bitcast %union.VectorReg* %6441 to %union.vec128_t*
  %6442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6443 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6442, i64 0, i64 4
  %XMM4.i1397 = bitcast %union.VectorReg* %6443 to %union.vec128_t*
  %6444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6445 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6444, i64 0, i64 5
  %XMM5.i1398 = bitcast %union.VectorReg* %6445 to %union.vec128_t*
  %6446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6447 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6446, i64 0, i64 6
  %XMM6.i1399 = bitcast %union.VectorReg* %6447 to %union.vec128_t*
  %6448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6449 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6448, i64 0, i64 7
  %XMM7.i1400 = bitcast %union.VectorReg* %6449 to %union.vec128_t*
  %6450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6451 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6450, i64 0, i64 8
  %XMM8.i1401 = bitcast %union.VectorReg* %6451 to %union.vec128_t*
  %6452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6453 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6452, i64 0, i64 9
  %XMM9.i1402 = bitcast %union.VectorReg* %6453 to %union.vec128_t*
  %6454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6455 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6454, i64 0, i64 10
  %XMM10.i1403 = bitcast %union.VectorReg* %6455 to %union.vec128_t*
  %6456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6457 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6456, i64 0, i64 11
  %XMM11.i1404 = bitcast %union.VectorReg* %6457 to %union.vec128_t*
  %6458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6459 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6458, i64 0, i64 12
  %XMM12.i1405 = bitcast %union.VectorReg* %6459 to %union.vec128_t*
  %6460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6461 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6460, i64 0, i64 13
  %XMM13.i1406 = bitcast %union.VectorReg* %6461 to %union.vec128_t*
  %6462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6463 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6462, i64 0, i64 14
  %XMM14.i1407 = bitcast %union.VectorReg* %6463 to %union.vec128_t*
  %6464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6465 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6464, i64 0, i64 15
  %XMM15.i1408 = bitcast %union.VectorReg* %6465 to %union.vec128_t*
  %6466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %6467 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %6466, i32 0, i32 0
  %6468 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %6467, i64 0, i64 0
  %ST0.i1409 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %6468, i32 0, i32 1
  %6469 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %6470 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %6469, i32 0, i32 0
  %6471 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %6470, i64 0, i64 1
  %ST1.i1410 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %6471, i32 0, i32 1
  %6472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %6473 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %6472, i32 0, i32 0
  %6474 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %6473, i64 0, i64 2
  %ST2.i1411 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %6474, i32 0, i32 1
  %6475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %6476 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %6475, i32 0, i32 0
  %6477 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %6476, i64 0, i64 3
  %ST3.i1412 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %6477, i32 0, i32 1
  %6478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %6479 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %6478, i32 0, i32 0
  %6480 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %6479, i64 0, i64 4
  %ST4.i1413 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %6480, i32 0, i32 1
  %6481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %6482 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %6481, i32 0, i32 0
  %6483 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %6482, i64 0, i64 5
  %ST5.i1414 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %6483, i32 0, i32 1
  %6484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %6485 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %6484, i32 0, i32 0
  %6486 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %6485, i64 0, i64 6
  %ST6.i1415 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %6486, i32 0, i32 1
  %6487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %6488 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %6487, i32 0, i32 0
  %6489 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %6488, i64 0, i64 7
  %ST7.i1416 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %6489, i32 0, i32 1
  %6490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %6491 = getelementptr inbounds %struct.MMX, %struct.MMX* %6490, i32 0, i32 0
  %6492 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %6491, i64 0, i64 0
  %6493 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %6492, i32 0, i32 1
  %6494 = bitcast %union.vec64_t* %6493 to %struct.uint64v1_t*
  %6495 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %6494, i32 0, i32 0
  %MM0.i1417 = getelementptr inbounds [1 x i64], [1 x i64]* %6495, i64 0, i64 0
  %6496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %6497 = getelementptr inbounds %struct.MMX, %struct.MMX* %6496, i32 0, i32 0
  %6498 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %6497, i64 0, i64 1
  %6499 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %6498, i32 0, i32 1
  %6500 = bitcast %union.vec64_t* %6499 to %struct.uint64v1_t*
  %6501 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %6500, i32 0, i32 0
  %MM1.i1418 = getelementptr inbounds [1 x i64], [1 x i64]* %6501, i64 0, i64 0
  %6502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %6503 = getelementptr inbounds %struct.MMX, %struct.MMX* %6502, i32 0, i32 0
  %6504 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %6503, i64 0, i64 2
  %6505 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %6504, i32 0, i32 1
  %6506 = bitcast %union.vec64_t* %6505 to %struct.uint64v1_t*
  %6507 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %6506, i32 0, i32 0
  %MM2.i1419 = getelementptr inbounds [1 x i64], [1 x i64]* %6507, i64 0, i64 0
  %6508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %6509 = getelementptr inbounds %struct.MMX, %struct.MMX* %6508, i32 0, i32 0
  %6510 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %6509, i64 0, i64 3
  %6511 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %6510, i32 0, i32 1
  %6512 = bitcast %union.vec64_t* %6511 to %struct.uint64v1_t*
  %6513 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %6512, i32 0, i32 0
  %MM3.i1420 = getelementptr inbounds [1 x i64], [1 x i64]* %6513, i64 0, i64 0
  %6514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %6515 = getelementptr inbounds %struct.MMX, %struct.MMX* %6514, i32 0, i32 0
  %6516 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %6515, i64 0, i64 4
  %6517 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %6516, i32 0, i32 1
  %6518 = bitcast %union.vec64_t* %6517 to %struct.uint64v1_t*
  %6519 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %6518, i32 0, i32 0
  %MM4.i1421 = getelementptr inbounds [1 x i64], [1 x i64]* %6519, i64 0, i64 0
  %6520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %6521 = getelementptr inbounds %struct.MMX, %struct.MMX* %6520, i32 0, i32 0
  %6522 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %6521, i64 0, i64 5
  %6523 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %6522, i32 0, i32 1
  %6524 = bitcast %union.vec64_t* %6523 to %struct.uint64v1_t*
  %6525 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %6524, i32 0, i32 0
  %MM5.i1422 = getelementptr inbounds [1 x i64], [1 x i64]* %6525, i64 0, i64 0
  %6526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %6527 = getelementptr inbounds %struct.MMX, %struct.MMX* %6526, i32 0, i32 0
  %6528 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %6527, i64 0, i64 6
  %6529 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %6528, i32 0, i32 1
  %6530 = bitcast %union.vec64_t* %6529 to %struct.uint64v1_t*
  %6531 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %6530, i32 0, i32 0
  %MM6.i1423 = getelementptr inbounds [1 x i64], [1 x i64]* %6531, i64 0, i64 0
  %6532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %6533 = getelementptr inbounds %struct.MMX, %struct.MMX* %6532, i32 0, i32 0
  %6534 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %6533, i64 0, i64 7
  %6535 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %6534, i32 0, i32 1
  %6536 = bitcast %union.vec64_t* %6535 to %struct.uint64v1_t*
  %6537 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %6536, i32 0, i32 0
  %MM7.i1424 = getelementptr inbounds [1 x i64], [1 x i64]* %6537, i64 0, i64 0
  %6538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF.i1425 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %6538, i32 0, i32 5
  %6539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF.i1426 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %6539, i32 0, i32 1
  %6540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF.i1427 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %6540, i32 0, i32 11
  %6541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF.i1428 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %6541, i32 0, i32 13
  %6542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF.i1429 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %6542, i32 0, i32 3
  %6543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF.i1430 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %6543, i32 0, i32 9
  %6544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF.i1431 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %6544, i32 0, i32 7
  store i64* @DR0, i64** %_DR0.i1283, align 8, !noalias !2462
  store i64* @DR1, i64** %_DR1.i1284, align 8, !noalias !2462
  store i64* @DR2, i64** %_DR2.i1285, align 8, !noalias !2462
  store i64* @DR3, i64** %_DR3.i1286, align 8, !noalias !2462
  store i64* @DR4, i64** %_DR4.i1287, align 8, !noalias !2462
  store i64* @DR5, i64** %_DR5.i1288, align 8, !noalias !2462
  store i64* @DR6, i64** %_DR6.i1289, align 8, !noalias !2462
  store i64* @DR7, i64** %_DR7.i1290, align 8, !noalias !2462
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0.i1291, align 8, !noalias !2462
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1.i1292, align 8, !noalias !2462
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2.i1293, align 8, !noalias !2462
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3.i1294, align 8, !noalias !2462
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4.i1295, align 8, !noalias !2462
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8.i1296, align 8, !noalias !2462
  %6545 = bitcast %"class.std::bitset"* %YMM0.i1377 to double*
  %6546 = load double, double* %6545, !alias.scope !2466, !noalias !2467
  %6547 = load i64, i64* %RSP.i1358, !alias.scope !2466, !noalias !2467
  %6548 = load %struct.Memory*, %struct.Memory** %MEMORY.i1282, !noalias !2462
  %6549 = inttoptr i64 %6547 to i64*
  %6550 = load i64, i64* %6549
  store i64 %6550, i64* %PC.i1297, !alias.scope !2466, !noalias !2467
  %6551 = add i64 %6547, 8
  store i64 %6551, i64* %RSP.i1358, !alias.scope !2466, !noalias !2467
  %6552 = call double @sin(double %6546)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0.i1377, !alias.scope !2466, !noalias !2467
  %6553 = bitcast %"class.std::bitset"* %YMM0.i1377 to double*
  store double %6552, double* %6553, !alias.scope !2466, !noalias !2467
  %6554 = load %struct.Memory*, %struct.Memory** %MEMORY.i1282, !noalias !2462
  %6555 = bitcast %struct.State** %state.i1273 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6555)
  %6556 = bitcast i64* %curr_pc.i1274 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6556)
  %6557 = bitcast %struct.Memory** %memory.i1275 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6557)
  call void @llvm.lifetime.end(i64 1, i8* %BRANCH_TAKEN.i1276)
  %6558 = bitcast i64* %SS_BASE.i1277 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6558)
  %6559 = bitcast i64* %ES_BASE.i1278 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6559)
  %6560 = bitcast i64* %DS_BASE.i1279 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6560)
  %6561 = bitcast i64* %CS_BASE.i1280 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6561)
  %6562 = bitcast %struct.State** %STATE.i1281 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6562)
  %6563 = bitcast %struct.Memory** %MEMORY.i1282 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6563)
  %6564 = bitcast i64** %_DR0.i1283 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6564)
  %6565 = bitcast i64** %_DR1.i1284 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6565)
  %6566 = bitcast i64** %_DR2.i1285 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6566)
  %6567 = bitcast i64** %_DR3.i1286 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6567)
  %6568 = bitcast i64** %_DR4.i1287 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6568)
  %6569 = bitcast i64** %_DR5.i1288 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6569)
  %6570 = bitcast i64** %_DR6.i1289 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6570)
  %6571 = bitcast i64** %_DR7.i1290 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6571)
  %6572 = bitcast i64** %CR0.i1291 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6572)
  %6573 = bitcast i64** %CR1.i1292 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6573)
  %6574 = bitcast i64** %CR2.i1293 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6574)
  %6575 = bitcast i64** %CR3.i1294 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6575)
  %6576 = bitcast i64** %CR4.i1295 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6576)
  %6577 = bitcast i64** %CR8.i1296 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6577)
  %6578 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %6579 = load i64, i64* %RBP
  %6580 = sub i64 %6579, 232
  %6581 = load i64, i64* %PC
  %6582 = add i64 %6581, 8
  store i64 %6582, i64* %PC
  %6583 = inttoptr i64 %6580 to double*
  %6584 = load double, double* %6583
  %6585 = bitcast i8* %6578 to double*
  store double %6584, double* %6585, align 1, !tbaa !2432
  %6586 = getelementptr inbounds i8, i8* %6578, i64 8
  %6587 = bitcast i8* %6586 to double*
  store double 0.000000e+00, double* %6587, align 1, !tbaa !2432
  %6588 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %6589 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %6590 = bitcast %union.vec128_t* %XMM0 to i8*
  %6591 = load i64, i64* %PC
  %6592 = add i64 %6591, 4
  store i64 %6592, i64* %PC
  %6593 = bitcast i8* %6589 to double*
  %6594 = load double, double* %6593, align 1
  %6595 = getelementptr inbounds i8, i8* %6589, i64 8
  %6596 = bitcast i8* %6595 to i64*
  %6597 = load i64, i64* %6596, align 1
  %6598 = bitcast i8* %6590 to double*
  %6599 = load double, double* %6598, align 1
  %6600 = fmul double %6594, %6599
  %6601 = bitcast i8* %6588 to double*
  store double %6600, double* %6601, align 1, !tbaa !2432
  %6602 = getelementptr inbounds i8, i8* %6588, i64 8
  %6603 = bitcast i8* %6602 to i64*
  store i64 %6597, i64* %6603, align 1, !tbaa !2432
  %6604 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %6605 = load i64, i64* %RBP
  %6606 = sub i64 %6605, 144
  %6607 = load i64, i64* %PC
  %6608 = add i64 %6607, 8
  store i64 %6608, i64* %PC
  %6609 = inttoptr i64 %6606 to double*
  %6610 = load double, double* %6609
  %6611 = bitcast i8* %6604 to double*
  store double %6610, double* %6611, align 1, !tbaa !2432
  %6612 = getelementptr inbounds i8, i8* %6604, i64 8
  %6613 = bitcast i8* %6612 to double*
  store double 0.000000e+00, double* %6613, align 1, !tbaa !2432
  %6614 = load i64, i64* %RBP
  %6615 = sub i64 %6614, 248
  %6616 = bitcast %union.vec128_t* %XMM1 to i8*
  %6617 = load i64, i64* %PC
  %6618 = add i64 %6617, 8
  store i64 %6618, i64* %PC
  %6619 = bitcast i8* %6616 to double*
  %6620 = load double, double* %6619, align 1
  %6621 = inttoptr i64 %6615 to double*
  store double %6620, double* %6621
  %6622 = load i64, i64* %PC
  %6623 = sub i64 %6622, 2457
  %6624 = load i64, i64* %PC
  %6625 = add i64 %6624, 5
  %6626 = load i64, i64* %PC
  %6627 = add i64 %6626, 5
  store i64 %6627, i64* %PC
  %6628 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6629 = load i64, i64* %6628, align 8, !tbaa !2428
  %6630 = add i64 %6629, -8
  %6631 = inttoptr i64 %6630 to i64*
  store i64 %6625, i64* %6631
  store i64 %6630, i64* %6628, align 8, !tbaa !2428
  %6632 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6623, i64* %6632, align 8, !tbaa !2428
  %6633 = load i64, i64* %PC
  %6634 = bitcast %struct.State** %state.i1114 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6634)
  %6635 = bitcast i64* %curr_pc.i1115 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6635)
  %6636 = bitcast %struct.Memory** %memory.i1116 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6636)
  call void @llvm.lifetime.start(i64 1, i8* %BRANCH_TAKEN.i1117)
  %6637 = bitcast i64* %SS_BASE.i1118 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6637)
  %6638 = bitcast i64* %ES_BASE.i1119 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6638)
  %6639 = bitcast i64* %DS_BASE.i1120 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6639)
  %6640 = bitcast i64* %CS_BASE.i1121 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6640)
  %6641 = bitcast %struct.State** %STATE.i1122 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6641)
  %6642 = bitcast %struct.Memory** %MEMORY.i1123 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6642)
  %6643 = bitcast i64** %_DR0.i1124 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6643)
  %6644 = bitcast i64** %_DR1.i1125 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6644)
  %6645 = bitcast i64** %_DR2.i1126 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6645)
  %6646 = bitcast i64** %_DR3.i1127 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6646)
  %6647 = bitcast i64** %_DR4.i1128 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6647)
  %6648 = bitcast i64** %_DR5.i1129 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6648)
  %6649 = bitcast i64** %_DR6.i1130 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6649)
  %6650 = bitcast i64** %_DR7.i1131 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6650)
  %6651 = bitcast i64** %CR0.i1132 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6651)
  %6652 = bitcast i64** %CR1.i1133 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6652)
  %6653 = bitcast i64** %CR2.i1134 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6653)
  %6654 = bitcast i64** %CR3.i1135 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6654)
  %6655 = bitcast i64** %CR4.i1136 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6655)
  %6656 = bitcast i64** %CR8.i1137 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6656)
  store %struct.State* %0, %struct.State** %state.i1114, align 8, !noalias !2468
  store i64 %6633, i64* %curr_pc.i1115, align 8, !noalias !2468
  store %struct.Memory* %6554, %struct.Memory** %memory.i1116, align 8, !noalias !2468
  store i8 0, i8* %BRANCH_TAKEN.i1117, align 1, !noalias !2468
  store i64 0, i64* %SS_BASE.i1118, align 8, !noalias !2468
  store i64 0, i64* %ES_BASE.i1119, align 8, !noalias !2468
  store i64 0, i64* %DS_BASE.i1120, align 8, !noalias !2468
  store i64 0, i64* %CS_BASE.i1121, align 8, !noalias !2468
  store %struct.State* %0, %struct.State** %STATE.i1122, align 8, !noalias !2468
  store %struct.Memory* %6554, %struct.Memory** %MEMORY.i1123, align 8, !noalias !2468
  %6657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6658 = getelementptr inbounds %struct.GPR, %struct.GPR* %6657, i32 0, i32 33
  %6659 = getelementptr inbounds %struct.Reg, %struct.Reg* %6658, i32 0, i32 0
  %PC.i1138 = bitcast %union.anon* %6659 to i64*
  store i64 %6633, i64* %PC.i1138, align 8, !alias.scope !2472, !noalias !2473
  %6660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6661 = getelementptr inbounds %struct.GPR, %struct.GPR* %6660, i32 0, i32 1
  %6662 = getelementptr inbounds %struct.Reg, %struct.Reg* %6661, i32 0, i32 0
  %6663 = bitcast %union.anon* %6662 to %struct.anon.2*
  %AH.i1139 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6663, i32 0, i32 1
  %6664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6665 = getelementptr inbounds %struct.GPR, %struct.GPR* %6664, i32 0, i32 3
  %6666 = getelementptr inbounds %struct.Reg, %struct.Reg* %6665, i32 0, i32 0
  %6667 = bitcast %union.anon* %6666 to %struct.anon.2*
  %BH.i1140 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6667, i32 0, i32 1
  %6668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6669 = getelementptr inbounds %struct.GPR, %struct.GPR* %6668, i32 0, i32 5
  %6670 = getelementptr inbounds %struct.Reg, %struct.Reg* %6669, i32 0, i32 0
  %6671 = bitcast %union.anon* %6670 to %struct.anon.2*
  %CH.i1141 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6671, i32 0, i32 1
  %6672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6673 = getelementptr inbounds %struct.GPR, %struct.GPR* %6672, i32 0, i32 7
  %6674 = getelementptr inbounds %struct.Reg, %struct.Reg* %6673, i32 0, i32 0
  %6675 = bitcast %union.anon* %6674 to %struct.anon.2*
  %DH.i1142 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6675, i32 0, i32 1
  %6676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6677 = getelementptr inbounds %struct.GPR, %struct.GPR* %6676, i32 0, i32 1
  %6678 = getelementptr inbounds %struct.Reg, %struct.Reg* %6677, i32 0, i32 0
  %6679 = bitcast %union.anon* %6678 to %struct.anon.2*
  %AL.i1143 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6679, i32 0, i32 0
  %6680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6681 = getelementptr inbounds %struct.GPR, %struct.GPR* %6680, i32 0, i32 3
  %6682 = getelementptr inbounds %struct.Reg, %struct.Reg* %6681, i32 0, i32 0
  %6683 = bitcast %union.anon* %6682 to %struct.anon.2*
  %BL.i1144 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6683, i32 0, i32 0
  %6684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6685 = getelementptr inbounds %struct.GPR, %struct.GPR* %6684, i32 0, i32 5
  %6686 = getelementptr inbounds %struct.Reg, %struct.Reg* %6685, i32 0, i32 0
  %6687 = bitcast %union.anon* %6686 to %struct.anon.2*
  %CL.i1145 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6687, i32 0, i32 0
  %6688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6689 = getelementptr inbounds %struct.GPR, %struct.GPR* %6688, i32 0, i32 7
  %6690 = getelementptr inbounds %struct.Reg, %struct.Reg* %6689, i32 0, i32 0
  %6691 = bitcast %union.anon* %6690 to %struct.anon.2*
  %DL.i1146 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6691, i32 0, i32 0
  %6692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6693 = getelementptr inbounds %struct.GPR, %struct.GPR* %6692, i32 0, i32 9
  %6694 = getelementptr inbounds %struct.Reg, %struct.Reg* %6693, i32 0, i32 0
  %6695 = bitcast %union.anon* %6694 to %struct.anon.2*
  %SIL.i1147 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6695, i32 0, i32 0
  %6696 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6697 = getelementptr inbounds %struct.GPR, %struct.GPR* %6696, i32 0, i32 11
  %6698 = getelementptr inbounds %struct.Reg, %struct.Reg* %6697, i32 0, i32 0
  %6699 = bitcast %union.anon* %6698 to %struct.anon.2*
  %DIL.i1148 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6699, i32 0, i32 0
  %6700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6701 = getelementptr inbounds %struct.GPR, %struct.GPR* %6700, i32 0, i32 13
  %6702 = getelementptr inbounds %struct.Reg, %struct.Reg* %6701, i32 0, i32 0
  %6703 = bitcast %union.anon* %6702 to %struct.anon.2*
  %SPL.i1149 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6703, i32 0, i32 0
  %6704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6705 = getelementptr inbounds %struct.GPR, %struct.GPR* %6704, i32 0, i32 15
  %6706 = getelementptr inbounds %struct.Reg, %struct.Reg* %6705, i32 0, i32 0
  %6707 = bitcast %union.anon* %6706 to %struct.anon.2*
  %BPL.i1150 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6707, i32 0, i32 0
  %6708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6709 = getelementptr inbounds %struct.GPR, %struct.GPR* %6708, i32 0, i32 17
  %6710 = getelementptr inbounds %struct.Reg, %struct.Reg* %6709, i32 0, i32 0
  %6711 = bitcast %union.anon* %6710 to %struct.anon.2*
  %R8B.i1151 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6711, i32 0, i32 0
  %6712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6713 = getelementptr inbounds %struct.GPR, %struct.GPR* %6712, i32 0, i32 19
  %6714 = getelementptr inbounds %struct.Reg, %struct.Reg* %6713, i32 0, i32 0
  %6715 = bitcast %union.anon* %6714 to %struct.anon.2*
  %R9B.i1152 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6715, i32 0, i32 0
  %6716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6717 = getelementptr inbounds %struct.GPR, %struct.GPR* %6716, i32 0, i32 21
  %6718 = getelementptr inbounds %struct.Reg, %struct.Reg* %6717, i32 0, i32 0
  %6719 = bitcast %union.anon* %6718 to %struct.anon.2*
  %R10B.i1153 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6719, i32 0, i32 0
  %6720 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6721 = getelementptr inbounds %struct.GPR, %struct.GPR* %6720, i32 0, i32 23
  %6722 = getelementptr inbounds %struct.Reg, %struct.Reg* %6721, i32 0, i32 0
  %6723 = bitcast %union.anon* %6722 to %struct.anon.2*
  %R11B.i1154 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6723, i32 0, i32 0
  %6724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6725 = getelementptr inbounds %struct.GPR, %struct.GPR* %6724, i32 0, i32 25
  %6726 = getelementptr inbounds %struct.Reg, %struct.Reg* %6725, i32 0, i32 0
  %6727 = bitcast %union.anon* %6726 to %struct.anon.2*
  %R12B.i1155 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6727, i32 0, i32 0
  %6728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6729 = getelementptr inbounds %struct.GPR, %struct.GPR* %6728, i32 0, i32 27
  %6730 = getelementptr inbounds %struct.Reg, %struct.Reg* %6729, i32 0, i32 0
  %6731 = bitcast %union.anon* %6730 to %struct.anon.2*
  %R13B.i1156 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6731, i32 0, i32 0
  %6732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6733 = getelementptr inbounds %struct.GPR, %struct.GPR* %6732, i32 0, i32 29
  %6734 = getelementptr inbounds %struct.Reg, %struct.Reg* %6733, i32 0, i32 0
  %6735 = bitcast %union.anon* %6734 to %struct.anon.2*
  %R14B.i1157 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6735, i32 0, i32 0
  %6736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6737 = getelementptr inbounds %struct.GPR, %struct.GPR* %6736, i32 0, i32 31
  %6738 = getelementptr inbounds %struct.Reg, %struct.Reg* %6737, i32 0, i32 0
  %6739 = bitcast %union.anon* %6738 to %struct.anon.2*
  %R15B.i1158 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6739, i32 0, i32 0
  %6740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6741 = getelementptr inbounds %struct.GPR, %struct.GPR* %6740, i32 0, i32 1
  %6742 = getelementptr inbounds %struct.Reg, %struct.Reg* %6741, i32 0, i32 0
  %AX.i1159 = bitcast %union.anon* %6742 to i16*
  %6743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6744 = getelementptr inbounds %struct.GPR, %struct.GPR* %6743, i32 0, i32 3
  %6745 = getelementptr inbounds %struct.Reg, %struct.Reg* %6744, i32 0, i32 0
  %BX.i1160 = bitcast %union.anon* %6745 to i16*
  %6746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6747 = getelementptr inbounds %struct.GPR, %struct.GPR* %6746, i32 0, i32 5
  %6748 = getelementptr inbounds %struct.Reg, %struct.Reg* %6747, i32 0, i32 0
  %CX.i1161 = bitcast %union.anon* %6748 to i16*
  %6749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6750 = getelementptr inbounds %struct.GPR, %struct.GPR* %6749, i32 0, i32 7
  %6751 = getelementptr inbounds %struct.Reg, %struct.Reg* %6750, i32 0, i32 0
  %DX.i1162 = bitcast %union.anon* %6751 to i16*
  %6752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6753 = getelementptr inbounds %struct.GPR, %struct.GPR* %6752, i32 0, i32 9
  %6754 = getelementptr inbounds %struct.Reg, %struct.Reg* %6753, i32 0, i32 0
  %SI.i1163 = bitcast %union.anon* %6754 to i16*
  %6755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6756 = getelementptr inbounds %struct.GPR, %struct.GPR* %6755, i32 0, i32 11
  %6757 = getelementptr inbounds %struct.Reg, %struct.Reg* %6756, i32 0, i32 0
  %DI.i1164 = bitcast %union.anon* %6757 to i16*
  %6758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6759 = getelementptr inbounds %struct.GPR, %struct.GPR* %6758, i32 0, i32 13
  %6760 = getelementptr inbounds %struct.Reg, %struct.Reg* %6759, i32 0, i32 0
  %SP.i1165 = bitcast %union.anon* %6760 to i16*
  %6761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6762 = getelementptr inbounds %struct.GPR, %struct.GPR* %6761, i32 0, i32 15
  %6763 = getelementptr inbounds %struct.Reg, %struct.Reg* %6762, i32 0, i32 0
  %BP.i1166 = bitcast %union.anon* %6763 to i16*
  %6764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6765 = getelementptr inbounds %struct.GPR, %struct.GPR* %6764, i32 0, i32 17
  %6766 = getelementptr inbounds %struct.Reg, %struct.Reg* %6765, i32 0, i32 0
  %R8W.i1167 = bitcast %union.anon* %6766 to i16*
  %6767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6768 = getelementptr inbounds %struct.GPR, %struct.GPR* %6767, i32 0, i32 19
  %6769 = getelementptr inbounds %struct.Reg, %struct.Reg* %6768, i32 0, i32 0
  %R9W.i1168 = bitcast %union.anon* %6769 to i16*
  %6770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6771 = getelementptr inbounds %struct.GPR, %struct.GPR* %6770, i32 0, i32 21
  %6772 = getelementptr inbounds %struct.Reg, %struct.Reg* %6771, i32 0, i32 0
  %R10W.i1169 = bitcast %union.anon* %6772 to i16*
  %6773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6774 = getelementptr inbounds %struct.GPR, %struct.GPR* %6773, i32 0, i32 23
  %6775 = getelementptr inbounds %struct.Reg, %struct.Reg* %6774, i32 0, i32 0
  %R11W.i1170 = bitcast %union.anon* %6775 to i16*
  %6776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6777 = getelementptr inbounds %struct.GPR, %struct.GPR* %6776, i32 0, i32 25
  %6778 = getelementptr inbounds %struct.Reg, %struct.Reg* %6777, i32 0, i32 0
  %R12W.i1171 = bitcast %union.anon* %6778 to i16*
  %6779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6780 = getelementptr inbounds %struct.GPR, %struct.GPR* %6779, i32 0, i32 27
  %6781 = getelementptr inbounds %struct.Reg, %struct.Reg* %6780, i32 0, i32 0
  %R13W.i1172 = bitcast %union.anon* %6781 to i16*
  %6782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6783 = getelementptr inbounds %struct.GPR, %struct.GPR* %6782, i32 0, i32 29
  %6784 = getelementptr inbounds %struct.Reg, %struct.Reg* %6783, i32 0, i32 0
  %R14W.i1173 = bitcast %union.anon* %6784 to i16*
  %6785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6786 = getelementptr inbounds %struct.GPR, %struct.GPR* %6785, i32 0, i32 31
  %6787 = getelementptr inbounds %struct.Reg, %struct.Reg* %6786, i32 0, i32 0
  %R15W.i1174 = bitcast %union.anon* %6787 to i16*
  %6788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6789 = getelementptr inbounds %struct.GPR, %struct.GPR* %6788, i32 0, i32 33
  %6790 = getelementptr inbounds %struct.Reg, %struct.Reg* %6789, i32 0, i32 0
  %IP.i1175 = bitcast %union.anon* %6790 to i16*
  %6791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6792 = getelementptr inbounds %struct.GPR, %struct.GPR* %6791, i32 0, i32 1
  %6793 = getelementptr inbounds %struct.Reg, %struct.Reg* %6792, i32 0, i32 0
  %EAX.i1176 = bitcast %union.anon* %6793 to i32*
  %6794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6795 = getelementptr inbounds %struct.GPR, %struct.GPR* %6794, i32 0, i32 3
  %6796 = getelementptr inbounds %struct.Reg, %struct.Reg* %6795, i32 0, i32 0
  %EBX.i1177 = bitcast %union.anon* %6796 to i32*
  %6797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6798 = getelementptr inbounds %struct.GPR, %struct.GPR* %6797, i32 0, i32 5
  %6799 = getelementptr inbounds %struct.Reg, %struct.Reg* %6798, i32 0, i32 0
  %ECX.i1178 = bitcast %union.anon* %6799 to i32*
  %6800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6801 = getelementptr inbounds %struct.GPR, %struct.GPR* %6800, i32 0, i32 7
  %6802 = getelementptr inbounds %struct.Reg, %struct.Reg* %6801, i32 0, i32 0
  %EDX.i1179 = bitcast %union.anon* %6802 to i32*
  %6803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6804 = getelementptr inbounds %struct.GPR, %struct.GPR* %6803, i32 0, i32 9
  %6805 = getelementptr inbounds %struct.Reg, %struct.Reg* %6804, i32 0, i32 0
  %ESI.i1180 = bitcast %union.anon* %6805 to i32*
  %6806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6807 = getelementptr inbounds %struct.GPR, %struct.GPR* %6806, i32 0, i32 11
  %6808 = getelementptr inbounds %struct.Reg, %struct.Reg* %6807, i32 0, i32 0
  %EDI.i1181 = bitcast %union.anon* %6808 to i32*
  %6809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6810 = getelementptr inbounds %struct.GPR, %struct.GPR* %6809, i32 0, i32 13
  %6811 = getelementptr inbounds %struct.Reg, %struct.Reg* %6810, i32 0, i32 0
  %ESP.i1182 = bitcast %union.anon* %6811 to i32*
  %6812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6813 = getelementptr inbounds %struct.GPR, %struct.GPR* %6812, i32 0, i32 15
  %6814 = getelementptr inbounds %struct.Reg, %struct.Reg* %6813, i32 0, i32 0
  %EBP.i1183 = bitcast %union.anon* %6814 to i32*
  %6815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6816 = getelementptr inbounds %struct.GPR, %struct.GPR* %6815, i32 0, i32 33
  %6817 = getelementptr inbounds %struct.Reg, %struct.Reg* %6816, i32 0, i32 0
  %EIP.i1184 = bitcast %union.anon* %6817 to i32*
  %6818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6819 = getelementptr inbounds %struct.GPR, %struct.GPR* %6818, i32 0, i32 17
  %6820 = getelementptr inbounds %struct.Reg, %struct.Reg* %6819, i32 0, i32 0
  %R8D.i1185 = bitcast %union.anon* %6820 to i32*
  %6821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6822 = getelementptr inbounds %struct.GPR, %struct.GPR* %6821, i32 0, i32 19
  %6823 = getelementptr inbounds %struct.Reg, %struct.Reg* %6822, i32 0, i32 0
  %R9D.i1186 = bitcast %union.anon* %6823 to i32*
  %6824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6825 = getelementptr inbounds %struct.GPR, %struct.GPR* %6824, i32 0, i32 21
  %6826 = getelementptr inbounds %struct.Reg, %struct.Reg* %6825, i32 0, i32 0
  %R10D.i1187 = bitcast %union.anon* %6826 to i32*
  %6827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6828 = getelementptr inbounds %struct.GPR, %struct.GPR* %6827, i32 0, i32 23
  %6829 = getelementptr inbounds %struct.Reg, %struct.Reg* %6828, i32 0, i32 0
  %R11D.i1188 = bitcast %union.anon* %6829 to i32*
  %6830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6831 = getelementptr inbounds %struct.GPR, %struct.GPR* %6830, i32 0, i32 25
  %6832 = getelementptr inbounds %struct.Reg, %struct.Reg* %6831, i32 0, i32 0
  %R12D.i1189 = bitcast %union.anon* %6832 to i32*
  %6833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6834 = getelementptr inbounds %struct.GPR, %struct.GPR* %6833, i32 0, i32 27
  %6835 = getelementptr inbounds %struct.Reg, %struct.Reg* %6834, i32 0, i32 0
  %R13D.i1190 = bitcast %union.anon* %6835 to i32*
  %6836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6837 = getelementptr inbounds %struct.GPR, %struct.GPR* %6836, i32 0, i32 29
  %6838 = getelementptr inbounds %struct.Reg, %struct.Reg* %6837, i32 0, i32 0
  %R14D.i1191 = bitcast %union.anon* %6838 to i32*
  %6839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6840 = getelementptr inbounds %struct.GPR, %struct.GPR* %6839, i32 0, i32 31
  %6841 = getelementptr inbounds %struct.Reg, %struct.Reg* %6840, i32 0, i32 0
  %R15D.i1192 = bitcast %union.anon* %6841 to i32*
  %6842 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6843 = getelementptr inbounds %struct.GPR, %struct.GPR* %6842, i32 0, i32 1
  %6844 = getelementptr inbounds %struct.Reg, %struct.Reg* %6843, i32 0, i32 0
  %RAX.i1193 = bitcast %union.anon* %6844 to i64*
  %6845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6846 = getelementptr inbounds %struct.GPR, %struct.GPR* %6845, i32 0, i32 3
  %6847 = getelementptr inbounds %struct.Reg, %struct.Reg* %6846, i32 0, i32 0
  %RBX.i1194 = bitcast %union.anon* %6847 to i64*
  %6848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6849 = getelementptr inbounds %struct.GPR, %struct.GPR* %6848, i32 0, i32 5
  %6850 = getelementptr inbounds %struct.Reg, %struct.Reg* %6849, i32 0, i32 0
  %RCX.i1195 = bitcast %union.anon* %6850 to i64*
  %6851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6852 = getelementptr inbounds %struct.GPR, %struct.GPR* %6851, i32 0, i32 7
  %6853 = getelementptr inbounds %struct.Reg, %struct.Reg* %6852, i32 0, i32 0
  %RDX.i1196 = bitcast %union.anon* %6853 to i64*
  %6854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6855 = getelementptr inbounds %struct.GPR, %struct.GPR* %6854, i32 0, i32 9
  %6856 = getelementptr inbounds %struct.Reg, %struct.Reg* %6855, i32 0, i32 0
  %RSI.i1197 = bitcast %union.anon* %6856 to i64*
  %6857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6858 = getelementptr inbounds %struct.GPR, %struct.GPR* %6857, i32 0, i32 11
  %6859 = getelementptr inbounds %struct.Reg, %struct.Reg* %6858, i32 0, i32 0
  %RDI.i1198 = bitcast %union.anon* %6859 to i64*
  %6860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6861 = getelementptr inbounds %struct.GPR, %struct.GPR* %6860, i32 0, i32 13
  %6862 = getelementptr inbounds %struct.Reg, %struct.Reg* %6861, i32 0, i32 0
  %RSP.i1199 = bitcast %union.anon* %6862 to i64*
  %6863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6864 = getelementptr inbounds %struct.GPR, %struct.GPR* %6863, i32 0, i32 15
  %6865 = getelementptr inbounds %struct.Reg, %struct.Reg* %6864, i32 0, i32 0
  %RBP.i1200 = bitcast %union.anon* %6865 to i64*
  %6866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6867 = getelementptr inbounds %struct.GPR, %struct.GPR* %6866, i32 0, i32 17
  %6868 = getelementptr inbounds %struct.Reg, %struct.Reg* %6867, i32 0, i32 0
  %R8.i1201 = bitcast %union.anon* %6868 to i64*
  %6869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6870 = getelementptr inbounds %struct.GPR, %struct.GPR* %6869, i32 0, i32 19
  %6871 = getelementptr inbounds %struct.Reg, %struct.Reg* %6870, i32 0, i32 0
  %R9.i1202 = bitcast %union.anon* %6871 to i64*
  %6872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6873 = getelementptr inbounds %struct.GPR, %struct.GPR* %6872, i32 0, i32 21
  %6874 = getelementptr inbounds %struct.Reg, %struct.Reg* %6873, i32 0, i32 0
  %R10.i1203 = bitcast %union.anon* %6874 to i64*
  %6875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6876 = getelementptr inbounds %struct.GPR, %struct.GPR* %6875, i32 0, i32 23
  %6877 = getelementptr inbounds %struct.Reg, %struct.Reg* %6876, i32 0, i32 0
  %R11.i1204 = bitcast %union.anon* %6877 to i64*
  %6878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6879 = getelementptr inbounds %struct.GPR, %struct.GPR* %6878, i32 0, i32 25
  %6880 = getelementptr inbounds %struct.Reg, %struct.Reg* %6879, i32 0, i32 0
  %R12.i1205 = bitcast %union.anon* %6880 to i64*
  %6881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6882 = getelementptr inbounds %struct.GPR, %struct.GPR* %6881, i32 0, i32 27
  %6883 = getelementptr inbounds %struct.Reg, %struct.Reg* %6882, i32 0, i32 0
  %R13.i1206 = bitcast %union.anon* %6883 to i64*
  %6884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6885 = getelementptr inbounds %struct.GPR, %struct.GPR* %6884, i32 0, i32 29
  %6886 = getelementptr inbounds %struct.Reg, %struct.Reg* %6885, i32 0, i32 0
  %R14.i1207 = bitcast %union.anon* %6886 to i64*
  %6887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6888 = getelementptr inbounds %struct.GPR, %struct.GPR* %6887, i32 0, i32 31
  %6889 = getelementptr inbounds %struct.Reg, %struct.Reg* %6888, i32 0, i32 0
  %R15.i1208 = bitcast %union.anon* %6889 to i64*
  %6890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6891 = getelementptr inbounds %struct.GPR, %struct.GPR* %6890, i32 0, i32 33
  %6892 = getelementptr inbounds %struct.Reg, %struct.Reg* %6891, i32 0, i32 0
  %RIP.i1209 = bitcast %union.anon* %6892 to i64*
  %6893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %6894 = getelementptr inbounds %struct.Segments, %struct.Segments* %6893, i32 0, i32 1
  %SS.i1210 = bitcast %union.SegmentSelector* %6894 to i16*
  %6895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %6896 = getelementptr inbounds %struct.Segments, %struct.Segments* %6895, i32 0, i32 3
  %ES.i1211 = bitcast %union.SegmentSelector* %6896 to i16*
  %6897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %6898 = getelementptr inbounds %struct.Segments, %struct.Segments* %6897, i32 0, i32 5
  %GS.i1212 = bitcast %union.SegmentSelector* %6898 to i16*
  %6899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %6900 = getelementptr inbounds %struct.Segments, %struct.Segments* %6899, i32 0, i32 7
  %FS.i1213 = bitcast %union.SegmentSelector* %6900 to i16*
  %6901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %6902 = getelementptr inbounds %struct.Segments, %struct.Segments* %6901, i32 0, i32 9
  %DS.i1214 = bitcast %union.SegmentSelector* %6902 to i16*
  %6903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %6904 = getelementptr inbounds %struct.Segments, %struct.Segments* %6903, i32 0, i32 11
  %CS.i1215 = bitcast %union.SegmentSelector* %6904 to i16*
  %6905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %6906 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %6905, i32 0, i32 5
  %6907 = getelementptr inbounds %struct.Reg, %struct.Reg* %6906, i32 0, i32 0
  %GS_BASE.i1216 = bitcast %union.anon* %6907 to i64*
  %6908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %6909 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %6908, i32 0, i32 7
  %6910 = getelementptr inbounds %struct.Reg, %struct.Reg* %6909, i32 0, i32 0
  %FS_BASE.i1217 = bitcast %union.anon* %6910 to i64*
  %6911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6912 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6911, i64 0, i64 0
  %YMM0.i1218 = bitcast %union.VectorReg* %6912 to %"class.std::bitset"*
  %6913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6914 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6913, i64 0, i64 1
  %YMM1.i1219 = bitcast %union.VectorReg* %6914 to %"class.std::bitset"*
  %6915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6916 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6915, i64 0, i64 2
  %YMM2.i1220 = bitcast %union.VectorReg* %6916 to %"class.std::bitset"*
  %6917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6918 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6917, i64 0, i64 3
  %YMM3.i1221 = bitcast %union.VectorReg* %6918 to %"class.std::bitset"*
  %6919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6920 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6919, i64 0, i64 4
  %YMM4.i1222 = bitcast %union.VectorReg* %6920 to %"class.std::bitset"*
  %6921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6922 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6921, i64 0, i64 5
  %YMM5.i1223 = bitcast %union.VectorReg* %6922 to %"class.std::bitset"*
  %6923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6924 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6923, i64 0, i64 6
  %YMM6.i1224 = bitcast %union.VectorReg* %6924 to %"class.std::bitset"*
  %6925 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6926 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6925, i64 0, i64 7
  %YMM7.i1225 = bitcast %union.VectorReg* %6926 to %"class.std::bitset"*
  %6927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6928 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6927, i64 0, i64 8
  %YMM8.i1226 = bitcast %union.VectorReg* %6928 to %"class.std::bitset"*
  %6929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6930 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6929, i64 0, i64 9
  %YMM9.i1227 = bitcast %union.VectorReg* %6930 to %"class.std::bitset"*
  %6931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6932 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6931, i64 0, i64 10
  %YMM10.i1228 = bitcast %union.VectorReg* %6932 to %"class.std::bitset"*
  %6933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6934 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6933, i64 0, i64 11
  %YMM11.i1229 = bitcast %union.VectorReg* %6934 to %"class.std::bitset"*
  %6935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6936 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6935, i64 0, i64 12
  %YMM12.i1230 = bitcast %union.VectorReg* %6936 to %"class.std::bitset"*
  %6937 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6938 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6937, i64 0, i64 13
  %YMM13.i1231 = bitcast %union.VectorReg* %6938 to %"class.std::bitset"*
  %6939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6940 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6939, i64 0, i64 14
  %YMM14.i1232 = bitcast %union.VectorReg* %6940 to %"class.std::bitset"*
  %6941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6942 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6941, i64 0, i64 15
  %YMM15.i1233 = bitcast %union.VectorReg* %6942 to %"class.std::bitset"*
  %6943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6944 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6943, i64 0, i64 0
  %XMM0.i1234 = bitcast %union.VectorReg* %6944 to %union.vec128_t*
  %6945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6946 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6945, i64 0, i64 1
  %XMM1.i1235 = bitcast %union.VectorReg* %6946 to %union.vec128_t*
  %6947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6948 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6947, i64 0, i64 2
  %XMM2.i1236 = bitcast %union.VectorReg* %6948 to %union.vec128_t*
  %6949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6950 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6949, i64 0, i64 3
  %XMM3.i1237 = bitcast %union.VectorReg* %6950 to %union.vec128_t*
  %6951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6952 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6951, i64 0, i64 4
  %XMM4.i1238 = bitcast %union.VectorReg* %6952 to %union.vec128_t*
  %6953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6954 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6953, i64 0, i64 5
  %XMM5.i1239 = bitcast %union.VectorReg* %6954 to %union.vec128_t*
  %6955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6956 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6955, i64 0, i64 6
  %XMM6.i1240 = bitcast %union.VectorReg* %6956 to %union.vec128_t*
  %6957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6958 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6957, i64 0, i64 7
  %XMM7.i1241 = bitcast %union.VectorReg* %6958 to %union.vec128_t*
  %6959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6960 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6959, i64 0, i64 8
  %XMM8.i1242 = bitcast %union.VectorReg* %6960 to %union.vec128_t*
  %6961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6962 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6961, i64 0, i64 9
  %XMM9.i1243 = bitcast %union.VectorReg* %6962 to %union.vec128_t*
  %6963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6964 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6963, i64 0, i64 10
  %XMM10.i1244 = bitcast %union.VectorReg* %6964 to %union.vec128_t*
  %6965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6966 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6965, i64 0, i64 11
  %XMM11.i1245 = bitcast %union.VectorReg* %6966 to %union.vec128_t*
  %6967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6968 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6967, i64 0, i64 12
  %XMM12.i1246 = bitcast %union.VectorReg* %6968 to %union.vec128_t*
  %6969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6970 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6969, i64 0, i64 13
  %XMM13.i1247 = bitcast %union.VectorReg* %6970 to %union.vec128_t*
  %6971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6972 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6971, i64 0, i64 14
  %XMM14.i1248 = bitcast %union.VectorReg* %6972 to %union.vec128_t*
  %6973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6974 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6973, i64 0, i64 15
  %XMM15.i1249 = bitcast %union.VectorReg* %6974 to %union.vec128_t*
  %6975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %6976 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %6975, i32 0, i32 0
  %6977 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %6976, i64 0, i64 0
  %ST0.i1250 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %6977, i32 0, i32 1
  %6978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %6979 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %6978, i32 0, i32 0
  %6980 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %6979, i64 0, i64 1
  %ST1.i1251 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %6980, i32 0, i32 1
  %6981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %6982 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %6981, i32 0, i32 0
  %6983 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %6982, i64 0, i64 2
  %ST2.i1252 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %6983, i32 0, i32 1
  %6984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %6985 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %6984, i32 0, i32 0
  %6986 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %6985, i64 0, i64 3
  %ST3.i1253 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %6986, i32 0, i32 1
  %6987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %6988 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %6987, i32 0, i32 0
  %6989 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %6988, i64 0, i64 4
  %ST4.i1254 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %6989, i32 0, i32 1
  %6990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %6991 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %6990, i32 0, i32 0
  %6992 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %6991, i64 0, i64 5
  %ST5.i1255 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %6992, i32 0, i32 1
  %6993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %6994 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %6993, i32 0, i32 0
  %6995 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %6994, i64 0, i64 6
  %ST6.i1256 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %6995, i32 0, i32 1
  %6996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %6997 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %6996, i32 0, i32 0
  %6998 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %6997, i64 0, i64 7
  %ST7.i1257 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %6998, i32 0, i32 1
  %6999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %7000 = getelementptr inbounds %struct.MMX, %struct.MMX* %6999, i32 0, i32 0
  %7001 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %7000, i64 0, i64 0
  %7002 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %7001, i32 0, i32 1
  %7003 = bitcast %union.vec64_t* %7002 to %struct.uint64v1_t*
  %7004 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %7003, i32 0, i32 0
  %MM0.i1258 = getelementptr inbounds [1 x i64], [1 x i64]* %7004, i64 0, i64 0
  %7005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %7006 = getelementptr inbounds %struct.MMX, %struct.MMX* %7005, i32 0, i32 0
  %7007 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %7006, i64 0, i64 1
  %7008 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %7007, i32 0, i32 1
  %7009 = bitcast %union.vec64_t* %7008 to %struct.uint64v1_t*
  %7010 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %7009, i32 0, i32 0
  %MM1.i1259 = getelementptr inbounds [1 x i64], [1 x i64]* %7010, i64 0, i64 0
  %7011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %7012 = getelementptr inbounds %struct.MMX, %struct.MMX* %7011, i32 0, i32 0
  %7013 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %7012, i64 0, i64 2
  %7014 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %7013, i32 0, i32 1
  %7015 = bitcast %union.vec64_t* %7014 to %struct.uint64v1_t*
  %7016 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %7015, i32 0, i32 0
  %MM2.i1260 = getelementptr inbounds [1 x i64], [1 x i64]* %7016, i64 0, i64 0
  %7017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %7018 = getelementptr inbounds %struct.MMX, %struct.MMX* %7017, i32 0, i32 0
  %7019 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %7018, i64 0, i64 3
  %7020 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %7019, i32 0, i32 1
  %7021 = bitcast %union.vec64_t* %7020 to %struct.uint64v1_t*
  %7022 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %7021, i32 0, i32 0
  %MM3.i1261 = getelementptr inbounds [1 x i64], [1 x i64]* %7022, i64 0, i64 0
  %7023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %7024 = getelementptr inbounds %struct.MMX, %struct.MMX* %7023, i32 0, i32 0
  %7025 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %7024, i64 0, i64 4
  %7026 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %7025, i32 0, i32 1
  %7027 = bitcast %union.vec64_t* %7026 to %struct.uint64v1_t*
  %7028 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %7027, i32 0, i32 0
  %MM4.i1262 = getelementptr inbounds [1 x i64], [1 x i64]* %7028, i64 0, i64 0
  %7029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %7030 = getelementptr inbounds %struct.MMX, %struct.MMX* %7029, i32 0, i32 0
  %7031 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %7030, i64 0, i64 5
  %7032 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %7031, i32 0, i32 1
  %7033 = bitcast %union.vec64_t* %7032 to %struct.uint64v1_t*
  %7034 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %7033, i32 0, i32 0
  %MM5.i1263 = getelementptr inbounds [1 x i64], [1 x i64]* %7034, i64 0, i64 0
  %7035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %7036 = getelementptr inbounds %struct.MMX, %struct.MMX* %7035, i32 0, i32 0
  %7037 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %7036, i64 0, i64 6
  %7038 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %7037, i32 0, i32 1
  %7039 = bitcast %union.vec64_t* %7038 to %struct.uint64v1_t*
  %7040 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %7039, i32 0, i32 0
  %MM6.i1264 = getelementptr inbounds [1 x i64], [1 x i64]* %7040, i64 0, i64 0
  %7041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %7042 = getelementptr inbounds %struct.MMX, %struct.MMX* %7041, i32 0, i32 0
  %7043 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %7042, i64 0, i64 7
  %7044 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %7043, i32 0, i32 1
  %7045 = bitcast %union.vec64_t* %7044 to %struct.uint64v1_t*
  %7046 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %7045, i32 0, i32 0
  %MM7.i1265 = getelementptr inbounds [1 x i64], [1 x i64]* %7046, i64 0, i64 0
  %7047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF.i1266 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %7047, i32 0, i32 5
  %7048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF.i1267 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %7048, i32 0, i32 1
  %7049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF.i1268 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %7049, i32 0, i32 11
  %7050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF.i1269 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %7050, i32 0, i32 13
  %7051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF.i1270 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %7051, i32 0, i32 3
  %7052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF.i1271 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %7052, i32 0, i32 9
  %7053 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF.i1272 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %7053, i32 0, i32 7
  store i64* @DR0, i64** %_DR0.i1124, align 8, !noalias !2468
  store i64* @DR1, i64** %_DR1.i1125, align 8, !noalias !2468
  store i64* @DR2, i64** %_DR2.i1126, align 8, !noalias !2468
  store i64* @DR3, i64** %_DR3.i1127, align 8, !noalias !2468
  store i64* @DR4, i64** %_DR4.i1128, align 8, !noalias !2468
  store i64* @DR5, i64** %_DR5.i1129, align 8, !noalias !2468
  store i64* @DR6, i64** %_DR6.i1130, align 8, !noalias !2468
  store i64* @DR7, i64** %_DR7.i1131, align 8, !noalias !2468
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0.i1132, align 8, !noalias !2468
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1.i1133, align 8, !noalias !2468
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2.i1134, align 8, !noalias !2468
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3.i1135, align 8, !noalias !2468
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4.i1136, align 8, !noalias !2468
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8.i1137, align 8, !noalias !2468
  %7054 = bitcast %"class.std::bitset"* %YMM0.i1218 to double*
  %7055 = load double, double* %7054, !alias.scope !2472, !noalias !2473
  %7056 = load i64, i64* %RSP.i1199, !alias.scope !2472, !noalias !2473
  %7057 = load %struct.Memory*, %struct.Memory** %MEMORY.i1123, !noalias !2468
  %7058 = inttoptr i64 %7056 to i64*
  %7059 = load i64, i64* %7058
  store i64 %7059, i64* %PC.i1138, !alias.scope !2472, !noalias !2473
  %7060 = add i64 %7056, 8
  store i64 %7060, i64* %RSP.i1199, !alias.scope !2472, !noalias !2473
  %7061 = call double @cos(double %7055)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0.i1218, !alias.scope !2472, !noalias !2473
  %7062 = bitcast %"class.std::bitset"* %YMM0.i1218 to double*
  store double %7061, double* %7062, !alias.scope !2472, !noalias !2473
  %7063 = load %struct.Memory*, %struct.Memory** %MEMORY.i1123, !noalias !2468
  %7064 = bitcast %struct.State** %state.i1114 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7064)
  %7065 = bitcast i64* %curr_pc.i1115 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7065)
  %7066 = bitcast %struct.Memory** %memory.i1116 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7066)
  call void @llvm.lifetime.end(i64 1, i8* %BRANCH_TAKEN.i1117)
  %7067 = bitcast i64* %SS_BASE.i1118 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7067)
  %7068 = bitcast i64* %ES_BASE.i1119 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7068)
  %7069 = bitcast i64* %DS_BASE.i1120 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7069)
  %7070 = bitcast i64* %CS_BASE.i1121 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7070)
  %7071 = bitcast %struct.State** %STATE.i1122 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7071)
  %7072 = bitcast %struct.Memory** %MEMORY.i1123 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7072)
  %7073 = bitcast i64** %_DR0.i1124 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7073)
  %7074 = bitcast i64** %_DR1.i1125 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7074)
  %7075 = bitcast i64** %_DR2.i1126 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7075)
  %7076 = bitcast i64** %_DR3.i1127 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7076)
  %7077 = bitcast i64** %_DR4.i1128 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7077)
  %7078 = bitcast i64** %_DR5.i1129 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7078)
  %7079 = bitcast i64** %_DR6.i1130 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7079)
  %7080 = bitcast i64** %_DR7.i1131 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7080)
  %7081 = bitcast i64** %CR0.i1132 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7081)
  %7082 = bitcast i64** %CR1.i1133 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7082)
  %7083 = bitcast i64** %CR2.i1134 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7083)
  %7084 = bitcast i64** %CR3.i1135 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7084)
  %7085 = bitcast i64** %CR4.i1136 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7085)
  %7086 = bitcast i64** %CR8.i1137 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7086)
  %7087 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %7088 = load i64, i64* %RBP
  %7089 = sub i64 %7088, 248
  %7090 = load i64, i64* %PC
  %7091 = add i64 %7090, 8
  store i64 %7091, i64* %PC
  %7092 = inttoptr i64 %7089 to double*
  %7093 = load double, double* %7092
  %7094 = bitcast i8* %7087 to double*
  store double %7093, double* %7094, align 1, !tbaa !2432
  %7095 = getelementptr inbounds i8, i8* %7087, i64 8
  %7096 = bitcast i8* %7095 to double*
  store double 0.000000e+00, double* %7096, align 1, !tbaa !2432
  %7097 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %7098 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %7099 = bitcast %union.vec128_t* %XMM0 to i8*
  %7100 = load i64, i64* %PC
  %7101 = add i64 %7100, 4
  store i64 %7101, i64* %PC
  %7102 = bitcast i8* %7098 to double*
  %7103 = load double, double* %7102, align 1
  %7104 = getelementptr inbounds i8, i8* %7098, i64 8
  %7105 = bitcast i8* %7104 to i64*
  %7106 = load i64, i64* %7105, align 1
  %7107 = bitcast i8* %7099 to double*
  %7108 = load double, double* %7107, align 1
  %7109 = fmul double %7103, %7108
  %7110 = bitcast i8* %7097 to double*
  store double %7109, double* %7110, align 1, !tbaa !2432
  %7111 = getelementptr inbounds i8, i8* %7097, i64 8
  %7112 = bitcast i8* %7111 to i64*
  store i64 %7106, i64* %7112, align 1, !tbaa !2432
  %7113 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %7114 = load i64, i64* %RBP
  %7115 = sub i64 %7114, 144
  %7116 = load i64, i64* %PC
  %7117 = add i64 %7116, 8
  store i64 %7117, i64* %PC
  %7118 = inttoptr i64 %7115 to double*
  %7119 = load double, double* %7118
  %7120 = bitcast i8* %7113 to double*
  store double %7119, double* %7120, align 1, !tbaa !2432
  %7121 = getelementptr inbounds i8, i8* %7113, i64 8
  %7122 = bitcast i8* %7121 to double*
  store double 0.000000e+00, double* %7122, align 1, !tbaa !2432
  %7123 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %7124 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %7125 = load i64, i64* %RBP
  %7126 = sub i64 %7125, 152
  %7127 = load i64, i64* %PC
  %7128 = add i64 %7127, 8
  store i64 %7128, i64* %PC
  %7129 = bitcast i8* %7124 to double*
  %7130 = load double, double* %7129, align 1
  %7131 = getelementptr inbounds i8, i8* %7124, i64 8
  %7132 = bitcast i8* %7131 to i64*
  %7133 = load i64, i64* %7132, align 1
  %7134 = inttoptr i64 %7126 to double*
  %7135 = load double, double* %7134
  %7136 = fadd double %7130, %7135
  %7137 = bitcast i8* %7123 to double*
  store double %7136, double* %7137, align 1, !tbaa !2432
  %7138 = getelementptr inbounds i8, i8* %7123, i64 8
  %7139 = bitcast i8* %7138 to i64*
  store i64 %7133, i64* %7139, align 1, !tbaa !2432
  %7140 = load i64, i64* %RBP
  %7141 = sub i64 %7140, 256
  %7142 = bitcast %union.vec128_t* %XMM1 to i8*
  %7143 = load i64, i64* %PC
  %7144 = add i64 %7143, 8
  store i64 %7144, i64* %PC
  %7145 = bitcast i8* %7142 to double*
  %7146 = load double, double* %7145, align 1
  %7147 = inttoptr i64 %7141 to double*
  store double %7146, double* %7147
  %7148 = load i64, i64* %PC
  %7149 = sub i64 %7148, 2498
  %7150 = load i64, i64* %PC
  %7151 = add i64 %7150, 5
  %7152 = load i64, i64* %PC
  %7153 = add i64 %7152, 5
  store i64 %7153, i64* %PC
  %7154 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7155 = load i64, i64* %7154, align 8, !tbaa !2428
  %7156 = add i64 %7155, -8
  %7157 = inttoptr i64 %7156 to i64*
  store i64 %7151, i64* %7157
  store i64 %7156, i64* %7154, align 8, !tbaa !2428
  %7158 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7149, i64* %7158, align 8, !tbaa !2428
  %7159 = load i64, i64* %PC
  %7160 = bitcast %struct.State** %state.i955 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7160)
  %7161 = bitcast i64* %curr_pc.i956 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7161)
  %7162 = bitcast %struct.Memory** %memory.i957 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7162)
  call void @llvm.lifetime.start(i64 1, i8* %BRANCH_TAKEN.i958)
  %7163 = bitcast i64* %SS_BASE.i959 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7163)
  %7164 = bitcast i64* %ES_BASE.i960 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7164)
  %7165 = bitcast i64* %DS_BASE.i961 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7165)
  %7166 = bitcast i64* %CS_BASE.i962 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7166)
  %7167 = bitcast %struct.State** %STATE.i963 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7167)
  %7168 = bitcast %struct.Memory** %MEMORY.i964 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7168)
  %7169 = bitcast i64** %_DR0.i965 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7169)
  %7170 = bitcast i64** %_DR1.i966 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7170)
  %7171 = bitcast i64** %_DR2.i967 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7171)
  %7172 = bitcast i64** %_DR3.i968 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7172)
  %7173 = bitcast i64** %_DR4.i969 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7173)
  %7174 = bitcast i64** %_DR5.i970 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7174)
  %7175 = bitcast i64** %_DR6.i971 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7175)
  %7176 = bitcast i64** %_DR7.i972 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7176)
  %7177 = bitcast i64** %CR0.i973 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7177)
  %7178 = bitcast i64** %CR1.i974 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7178)
  %7179 = bitcast i64** %CR2.i975 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7179)
  %7180 = bitcast i64** %CR3.i976 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7180)
  %7181 = bitcast i64** %CR4.i977 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7181)
  %7182 = bitcast i64** %CR8.i978 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7182)
  store %struct.State* %0, %struct.State** %state.i955, align 8, !noalias !2474
  store i64 %7159, i64* %curr_pc.i956, align 8, !noalias !2474
  store %struct.Memory* %7063, %struct.Memory** %memory.i957, align 8, !noalias !2474
  store i8 0, i8* %BRANCH_TAKEN.i958, align 1, !noalias !2474
  store i64 0, i64* %SS_BASE.i959, align 8, !noalias !2474
  store i64 0, i64* %ES_BASE.i960, align 8, !noalias !2474
  store i64 0, i64* %DS_BASE.i961, align 8, !noalias !2474
  store i64 0, i64* %CS_BASE.i962, align 8, !noalias !2474
  store %struct.State* %0, %struct.State** %STATE.i963, align 8, !noalias !2474
  store %struct.Memory* %7063, %struct.Memory** %MEMORY.i964, align 8, !noalias !2474
  %7183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7184 = getelementptr inbounds %struct.GPR, %struct.GPR* %7183, i32 0, i32 33
  %7185 = getelementptr inbounds %struct.Reg, %struct.Reg* %7184, i32 0, i32 0
  %PC.i979 = bitcast %union.anon* %7185 to i64*
  store i64 %7159, i64* %PC.i979, align 8, !alias.scope !2478, !noalias !2479
  %7186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7187 = getelementptr inbounds %struct.GPR, %struct.GPR* %7186, i32 0, i32 1
  %7188 = getelementptr inbounds %struct.Reg, %struct.Reg* %7187, i32 0, i32 0
  %7189 = bitcast %union.anon* %7188 to %struct.anon.2*
  %AH.i980 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7189, i32 0, i32 1
  %7190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7191 = getelementptr inbounds %struct.GPR, %struct.GPR* %7190, i32 0, i32 3
  %7192 = getelementptr inbounds %struct.Reg, %struct.Reg* %7191, i32 0, i32 0
  %7193 = bitcast %union.anon* %7192 to %struct.anon.2*
  %BH.i981 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7193, i32 0, i32 1
  %7194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7195 = getelementptr inbounds %struct.GPR, %struct.GPR* %7194, i32 0, i32 5
  %7196 = getelementptr inbounds %struct.Reg, %struct.Reg* %7195, i32 0, i32 0
  %7197 = bitcast %union.anon* %7196 to %struct.anon.2*
  %CH.i982 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7197, i32 0, i32 1
  %7198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7199 = getelementptr inbounds %struct.GPR, %struct.GPR* %7198, i32 0, i32 7
  %7200 = getelementptr inbounds %struct.Reg, %struct.Reg* %7199, i32 0, i32 0
  %7201 = bitcast %union.anon* %7200 to %struct.anon.2*
  %DH.i983 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7201, i32 0, i32 1
  %7202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7203 = getelementptr inbounds %struct.GPR, %struct.GPR* %7202, i32 0, i32 1
  %7204 = getelementptr inbounds %struct.Reg, %struct.Reg* %7203, i32 0, i32 0
  %7205 = bitcast %union.anon* %7204 to %struct.anon.2*
  %AL.i984 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7205, i32 0, i32 0
  %7206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7207 = getelementptr inbounds %struct.GPR, %struct.GPR* %7206, i32 0, i32 3
  %7208 = getelementptr inbounds %struct.Reg, %struct.Reg* %7207, i32 0, i32 0
  %7209 = bitcast %union.anon* %7208 to %struct.anon.2*
  %BL.i985 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7209, i32 0, i32 0
  %7210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7211 = getelementptr inbounds %struct.GPR, %struct.GPR* %7210, i32 0, i32 5
  %7212 = getelementptr inbounds %struct.Reg, %struct.Reg* %7211, i32 0, i32 0
  %7213 = bitcast %union.anon* %7212 to %struct.anon.2*
  %CL.i986 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7213, i32 0, i32 0
  %7214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7215 = getelementptr inbounds %struct.GPR, %struct.GPR* %7214, i32 0, i32 7
  %7216 = getelementptr inbounds %struct.Reg, %struct.Reg* %7215, i32 0, i32 0
  %7217 = bitcast %union.anon* %7216 to %struct.anon.2*
  %DL.i987 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7217, i32 0, i32 0
  %7218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7219 = getelementptr inbounds %struct.GPR, %struct.GPR* %7218, i32 0, i32 9
  %7220 = getelementptr inbounds %struct.Reg, %struct.Reg* %7219, i32 0, i32 0
  %7221 = bitcast %union.anon* %7220 to %struct.anon.2*
  %SIL.i988 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7221, i32 0, i32 0
  %7222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7223 = getelementptr inbounds %struct.GPR, %struct.GPR* %7222, i32 0, i32 11
  %7224 = getelementptr inbounds %struct.Reg, %struct.Reg* %7223, i32 0, i32 0
  %7225 = bitcast %union.anon* %7224 to %struct.anon.2*
  %DIL.i989 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7225, i32 0, i32 0
  %7226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7227 = getelementptr inbounds %struct.GPR, %struct.GPR* %7226, i32 0, i32 13
  %7228 = getelementptr inbounds %struct.Reg, %struct.Reg* %7227, i32 0, i32 0
  %7229 = bitcast %union.anon* %7228 to %struct.anon.2*
  %SPL.i990 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7229, i32 0, i32 0
  %7230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7231 = getelementptr inbounds %struct.GPR, %struct.GPR* %7230, i32 0, i32 15
  %7232 = getelementptr inbounds %struct.Reg, %struct.Reg* %7231, i32 0, i32 0
  %7233 = bitcast %union.anon* %7232 to %struct.anon.2*
  %BPL.i991 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7233, i32 0, i32 0
  %7234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7235 = getelementptr inbounds %struct.GPR, %struct.GPR* %7234, i32 0, i32 17
  %7236 = getelementptr inbounds %struct.Reg, %struct.Reg* %7235, i32 0, i32 0
  %7237 = bitcast %union.anon* %7236 to %struct.anon.2*
  %R8B.i992 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7237, i32 0, i32 0
  %7238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7239 = getelementptr inbounds %struct.GPR, %struct.GPR* %7238, i32 0, i32 19
  %7240 = getelementptr inbounds %struct.Reg, %struct.Reg* %7239, i32 0, i32 0
  %7241 = bitcast %union.anon* %7240 to %struct.anon.2*
  %R9B.i993 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7241, i32 0, i32 0
  %7242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7243 = getelementptr inbounds %struct.GPR, %struct.GPR* %7242, i32 0, i32 21
  %7244 = getelementptr inbounds %struct.Reg, %struct.Reg* %7243, i32 0, i32 0
  %7245 = bitcast %union.anon* %7244 to %struct.anon.2*
  %R10B.i994 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7245, i32 0, i32 0
  %7246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7247 = getelementptr inbounds %struct.GPR, %struct.GPR* %7246, i32 0, i32 23
  %7248 = getelementptr inbounds %struct.Reg, %struct.Reg* %7247, i32 0, i32 0
  %7249 = bitcast %union.anon* %7248 to %struct.anon.2*
  %R11B.i995 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7249, i32 0, i32 0
  %7250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7251 = getelementptr inbounds %struct.GPR, %struct.GPR* %7250, i32 0, i32 25
  %7252 = getelementptr inbounds %struct.Reg, %struct.Reg* %7251, i32 0, i32 0
  %7253 = bitcast %union.anon* %7252 to %struct.anon.2*
  %R12B.i996 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7253, i32 0, i32 0
  %7254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7255 = getelementptr inbounds %struct.GPR, %struct.GPR* %7254, i32 0, i32 27
  %7256 = getelementptr inbounds %struct.Reg, %struct.Reg* %7255, i32 0, i32 0
  %7257 = bitcast %union.anon* %7256 to %struct.anon.2*
  %R13B.i997 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7257, i32 0, i32 0
  %7258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7259 = getelementptr inbounds %struct.GPR, %struct.GPR* %7258, i32 0, i32 29
  %7260 = getelementptr inbounds %struct.Reg, %struct.Reg* %7259, i32 0, i32 0
  %7261 = bitcast %union.anon* %7260 to %struct.anon.2*
  %R14B.i998 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7261, i32 0, i32 0
  %7262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7263 = getelementptr inbounds %struct.GPR, %struct.GPR* %7262, i32 0, i32 31
  %7264 = getelementptr inbounds %struct.Reg, %struct.Reg* %7263, i32 0, i32 0
  %7265 = bitcast %union.anon* %7264 to %struct.anon.2*
  %R15B.i999 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7265, i32 0, i32 0
  %7266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7267 = getelementptr inbounds %struct.GPR, %struct.GPR* %7266, i32 0, i32 1
  %7268 = getelementptr inbounds %struct.Reg, %struct.Reg* %7267, i32 0, i32 0
  %AX.i1000 = bitcast %union.anon* %7268 to i16*
  %7269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7270 = getelementptr inbounds %struct.GPR, %struct.GPR* %7269, i32 0, i32 3
  %7271 = getelementptr inbounds %struct.Reg, %struct.Reg* %7270, i32 0, i32 0
  %BX.i1001 = bitcast %union.anon* %7271 to i16*
  %7272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7273 = getelementptr inbounds %struct.GPR, %struct.GPR* %7272, i32 0, i32 5
  %7274 = getelementptr inbounds %struct.Reg, %struct.Reg* %7273, i32 0, i32 0
  %CX.i1002 = bitcast %union.anon* %7274 to i16*
  %7275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7276 = getelementptr inbounds %struct.GPR, %struct.GPR* %7275, i32 0, i32 7
  %7277 = getelementptr inbounds %struct.Reg, %struct.Reg* %7276, i32 0, i32 0
  %DX.i1003 = bitcast %union.anon* %7277 to i16*
  %7278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7279 = getelementptr inbounds %struct.GPR, %struct.GPR* %7278, i32 0, i32 9
  %7280 = getelementptr inbounds %struct.Reg, %struct.Reg* %7279, i32 0, i32 0
  %SI.i1004 = bitcast %union.anon* %7280 to i16*
  %7281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7282 = getelementptr inbounds %struct.GPR, %struct.GPR* %7281, i32 0, i32 11
  %7283 = getelementptr inbounds %struct.Reg, %struct.Reg* %7282, i32 0, i32 0
  %DI.i1005 = bitcast %union.anon* %7283 to i16*
  %7284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7285 = getelementptr inbounds %struct.GPR, %struct.GPR* %7284, i32 0, i32 13
  %7286 = getelementptr inbounds %struct.Reg, %struct.Reg* %7285, i32 0, i32 0
  %SP.i1006 = bitcast %union.anon* %7286 to i16*
  %7287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7288 = getelementptr inbounds %struct.GPR, %struct.GPR* %7287, i32 0, i32 15
  %7289 = getelementptr inbounds %struct.Reg, %struct.Reg* %7288, i32 0, i32 0
  %BP.i1007 = bitcast %union.anon* %7289 to i16*
  %7290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7291 = getelementptr inbounds %struct.GPR, %struct.GPR* %7290, i32 0, i32 17
  %7292 = getelementptr inbounds %struct.Reg, %struct.Reg* %7291, i32 0, i32 0
  %R8W.i1008 = bitcast %union.anon* %7292 to i16*
  %7293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7294 = getelementptr inbounds %struct.GPR, %struct.GPR* %7293, i32 0, i32 19
  %7295 = getelementptr inbounds %struct.Reg, %struct.Reg* %7294, i32 0, i32 0
  %R9W.i1009 = bitcast %union.anon* %7295 to i16*
  %7296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7297 = getelementptr inbounds %struct.GPR, %struct.GPR* %7296, i32 0, i32 21
  %7298 = getelementptr inbounds %struct.Reg, %struct.Reg* %7297, i32 0, i32 0
  %R10W.i1010 = bitcast %union.anon* %7298 to i16*
  %7299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7300 = getelementptr inbounds %struct.GPR, %struct.GPR* %7299, i32 0, i32 23
  %7301 = getelementptr inbounds %struct.Reg, %struct.Reg* %7300, i32 0, i32 0
  %R11W.i1011 = bitcast %union.anon* %7301 to i16*
  %7302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7303 = getelementptr inbounds %struct.GPR, %struct.GPR* %7302, i32 0, i32 25
  %7304 = getelementptr inbounds %struct.Reg, %struct.Reg* %7303, i32 0, i32 0
  %R12W.i1012 = bitcast %union.anon* %7304 to i16*
  %7305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7306 = getelementptr inbounds %struct.GPR, %struct.GPR* %7305, i32 0, i32 27
  %7307 = getelementptr inbounds %struct.Reg, %struct.Reg* %7306, i32 0, i32 0
  %R13W.i1013 = bitcast %union.anon* %7307 to i16*
  %7308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7309 = getelementptr inbounds %struct.GPR, %struct.GPR* %7308, i32 0, i32 29
  %7310 = getelementptr inbounds %struct.Reg, %struct.Reg* %7309, i32 0, i32 0
  %R14W.i1014 = bitcast %union.anon* %7310 to i16*
  %7311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7312 = getelementptr inbounds %struct.GPR, %struct.GPR* %7311, i32 0, i32 31
  %7313 = getelementptr inbounds %struct.Reg, %struct.Reg* %7312, i32 0, i32 0
  %R15W.i1015 = bitcast %union.anon* %7313 to i16*
  %7314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7315 = getelementptr inbounds %struct.GPR, %struct.GPR* %7314, i32 0, i32 33
  %7316 = getelementptr inbounds %struct.Reg, %struct.Reg* %7315, i32 0, i32 0
  %IP.i1016 = bitcast %union.anon* %7316 to i16*
  %7317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7318 = getelementptr inbounds %struct.GPR, %struct.GPR* %7317, i32 0, i32 1
  %7319 = getelementptr inbounds %struct.Reg, %struct.Reg* %7318, i32 0, i32 0
  %EAX.i1017 = bitcast %union.anon* %7319 to i32*
  %7320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7321 = getelementptr inbounds %struct.GPR, %struct.GPR* %7320, i32 0, i32 3
  %7322 = getelementptr inbounds %struct.Reg, %struct.Reg* %7321, i32 0, i32 0
  %EBX.i1018 = bitcast %union.anon* %7322 to i32*
  %7323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7324 = getelementptr inbounds %struct.GPR, %struct.GPR* %7323, i32 0, i32 5
  %7325 = getelementptr inbounds %struct.Reg, %struct.Reg* %7324, i32 0, i32 0
  %ECX.i1019 = bitcast %union.anon* %7325 to i32*
  %7326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7327 = getelementptr inbounds %struct.GPR, %struct.GPR* %7326, i32 0, i32 7
  %7328 = getelementptr inbounds %struct.Reg, %struct.Reg* %7327, i32 0, i32 0
  %EDX.i1020 = bitcast %union.anon* %7328 to i32*
  %7329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7330 = getelementptr inbounds %struct.GPR, %struct.GPR* %7329, i32 0, i32 9
  %7331 = getelementptr inbounds %struct.Reg, %struct.Reg* %7330, i32 0, i32 0
  %ESI.i1021 = bitcast %union.anon* %7331 to i32*
  %7332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7333 = getelementptr inbounds %struct.GPR, %struct.GPR* %7332, i32 0, i32 11
  %7334 = getelementptr inbounds %struct.Reg, %struct.Reg* %7333, i32 0, i32 0
  %EDI.i1022 = bitcast %union.anon* %7334 to i32*
  %7335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7336 = getelementptr inbounds %struct.GPR, %struct.GPR* %7335, i32 0, i32 13
  %7337 = getelementptr inbounds %struct.Reg, %struct.Reg* %7336, i32 0, i32 0
  %ESP.i1023 = bitcast %union.anon* %7337 to i32*
  %7338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7339 = getelementptr inbounds %struct.GPR, %struct.GPR* %7338, i32 0, i32 15
  %7340 = getelementptr inbounds %struct.Reg, %struct.Reg* %7339, i32 0, i32 0
  %EBP.i1024 = bitcast %union.anon* %7340 to i32*
  %7341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7342 = getelementptr inbounds %struct.GPR, %struct.GPR* %7341, i32 0, i32 33
  %7343 = getelementptr inbounds %struct.Reg, %struct.Reg* %7342, i32 0, i32 0
  %EIP.i1025 = bitcast %union.anon* %7343 to i32*
  %7344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7345 = getelementptr inbounds %struct.GPR, %struct.GPR* %7344, i32 0, i32 17
  %7346 = getelementptr inbounds %struct.Reg, %struct.Reg* %7345, i32 0, i32 0
  %R8D.i1026 = bitcast %union.anon* %7346 to i32*
  %7347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7348 = getelementptr inbounds %struct.GPR, %struct.GPR* %7347, i32 0, i32 19
  %7349 = getelementptr inbounds %struct.Reg, %struct.Reg* %7348, i32 0, i32 0
  %R9D.i1027 = bitcast %union.anon* %7349 to i32*
  %7350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7351 = getelementptr inbounds %struct.GPR, %struct.GPR* %7350, i32 0, i32 21
  %7352 = getelementptr inbounds %struct.Reg, %struct.Reg* %7351, i32 0, i32 0
  %R10D.i1028 = bitcast %union.anon* %7352 to i32*
  %7353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7354 = getelementptr inbounds %struct.GPR, %struct.GPR* %7353, i32 0, i32 23
  %7355 = getelementptr inbounds %struct.Reg, %struct.Reg* %7354, i32 0, i32 0
  %R11D.i1029 = bitcast %union.anon* %7355 to i32*
  %7356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7357 = getelementptr inbounds %struct.GPR, %struct.GPR* %7356, i32 0, i32 25
  %7358 = getelementptr inbounds %struct.Reg, %struct.Reg* %7357, i32 0, i32 0
  %R12D.i1030 = bitcast %union.anon* %7358 to i32*
  %7359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7360 = getelementptr inbounds %struct.GPR, %struct.GPR* %7359, i32 0, i32 27
  %7361 = getelementptr inbounds %struct.Reg, %struct.Reg* %7360, i32 0, i32 0
  %R13D.i1031 = bitcast %union.anon* %7361 to i32*
  %7362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7363 = getelementptr inbounds %struct.GPR, %struct.GPR* %7362, i32 0, i32 29
  %7364 = getelementptr inbounds %struct.Reg, %struct.Reg* %7363, i32 0, i32 0
  %R14D.i1032 = bitcast %union.anon* %7364 to i32*
  %7365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7366 = getelementptr inbounds %struct.GPR, %struct.GPR* %7365, i32 0, i32 31
  %7367 = getelementptr inbounds %struct.Reg, %struct.Reg* %7366, i32 0, i32 0
  %R15D.i1033 = bitcast %union.anon* %7367 to i32*
  %7368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7369 = getelementptr inbounds %struct.GPR, %struct.GPR* %7368, i32 0, i32 1
  %7370 = getelementptr inbounds %struct.Reg, %struct.Reg* %7369, i32 0, i32 0
  %RAX.i1034 = bitcast %union.anon* %7370 to i64*
  %7371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7372 = getelementptr inbounds %struct.GPR, %struct.GPR* %7371, i32 0, i32 3
  %7373 = getelementptr inbounds %struct.Reg, %struct.Reg* %7372, i32 0, i32 0
  %RBX.i1035 = bitcast %union.anon* %7373 to i64*
  %7374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7375 = getelementptr inbounds %struct.GPR, %struct.GPR* %7374, i32 0, i32 5
  %7376 = getelementptr inbounds %struct.Reg, %struct.Reg* %7375, i32 0, i32 0
  %RCX.i1036 = bitcast %union.anon* %7376 to i64*
  %7377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7378 = getelementptr inbounds %struct.GPR, %struct.GPR* %7377, i32 0, i32 7
  %7379 = getelementptr inbounds %struct.Reg, %struct.Reg* %7378, i32 0, i32 0
  %RDX.i1037 = bitcast %union.anon* %7379 to i64*
  %7380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7381 = getelementptr inbounds %struct.GPR, %struct.GPR* %7380, i32 0, i32 9
  %7382 = getelementptr inbounds %struct.Reg, %struct.Reg* %7381, i32 0, i32 0
  %RSI.i1038 = bitcast %union.anon* %7382 to i64*
  %7383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7384 = getelementptr inbounds %struct.GPR, %struct.GPR* %7383, i32 0, i32 11
  %7385 = getelementptr inbounds %struct.Reg, %struct.Reg* %7384, i32 0, i32 0
  %RDI.i1039 = bitcast %union.anon* %7385 to i64*
  %7386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7387 = getelementptr inbounds %struct.GPR, %struct.GPR* %7386, i32 0, i32 13
  %7388 = getelementptr inbounds %struct.Reg, %struct.Reg* %7387, i32 0, i32 0
  %RSP.i1040 = bitcast %union.anon* %7388 to i64*
  %7389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7390 = getelementptr inbounds %struct.GPR, %struct.GPR* %7389, i32 0, i32 15
  %7391 = getelementptr inbounds %struct.Reg, %struct.Reg* %7390, i32 0, i32 0
  %RBP.i1041 = bitcast %union.anon* %7391 to i64*
  %7392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7393 = getelementptr inbounds %struct.GPR, %struct.GPR* %7392, i32 0, i32 17
  %7394 = getelementptr inbounds %struct.Reg, %struct.Reg* %7393, i32 0, i32 0
  %R8.i1042 = bitcast %union.anon* %7394 to i64*
  %7395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7396 = getelementptr inbounds %struct.GPR, %struct.GPR* %7395, i32 0, i32 19
  %7397 = getelementptr inbounds %struct.Reg, %struct.Reg* %7396, i32 0, i32 0
  %R9.i1043 = bitcast %union.anon* %7397 to i64*
  %7398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7399 = getelementptr inbounds %struct.GPR, %struct.GPR* %7398, i32 0, i32 21
  %7400 = getelementptr inbounds %struct.Reg, %struct.Reg* %7399, i32 0, i32 0
  %R10.i1044 = bitcast %union.anon* %7400 to i64*
  %7401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7402 = getelementptr inbounds %struct.GPR, %struct.GPR* %7401, i32 0, i32 23
  %7403 = getelementptr inbounds %struct.Reg, %struct.Reg* %7402, i32 0, i32 0
  %R11.i1045 = bitcast %union.anon* %7403 to i64*
  %7404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7405 = getelementptr inbounds %struct.GPR, %struct.GPR* %7404, i32 0, i32 25
  %7406 = getelementptr inbounds %struct.Reg, %struct.Reg* %7405, i32 0, i32 0
  %R12.i1046 = bitcast %union.anon* %7406 to i64*
  %7407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7408 = getelementptr inbounds %struct.GPR, %struct.GPR* %7407, i32 0, i32 27
  %7409 = getelementptr inbounds %struct.Reg, %struct.Reg* %7408, i32 0, i32 0
  %R13.i1047 = bitcast %union.anon* %7409 to i64*
  %7410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7411 = getelementptr inbounds %struct.GPR, %struct.GPR* %7410, i32 0, i32 29
  %7412 = getelementptr inbounds %struct.Reg, %struct.Reg* %7411, i32 0, i32 0
  %R14.i1048 = bitcast %union.anon* %7412 to i64*
  %7413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7414 = getelementptr inbounds %struct.GPR, %struct.GPR* %7413, i32 0, i32 31
  %7415 = getelementptr inbounds %struct.Reg, %struct.Reg* %7414, i32 0, i32 0
  %R15.i1049 = bitcast %union.anon* %7415 to i64*
  %7416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7417 = getelementptr inbounds %struct.GPR, %struct.GPR* %7416, i32 0, i32 33
  %7418 = getelementptr inbounds %struct.Reg, %struct.Reg* %7417, i32 0, i32 0
  %RIP.i1050 = bitcast %union.anon* %7418 to i64*
  %7419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %7420 = getelementptr inbounds %struct.Segments, %struct.Segments* %7419, i32 0, i32 1
  %SS.i1051 = bitcast %union.SegmentSelector* %7420 to i16*
  %7421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %7422 = getelementptr inbounds %struct.Segments, %struct.Segments* %7421, i32 0, i32 3
  %ES.i1052 = bitcast %union.SegmentSelector* %7422 to i16*
  %7423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %7424 = getelementptr inbounds %struct.Segments, %struct.Segments* %7423, i32 0, i32 5
  %GS.i1053 = bitcast %union.SegmentSelector* %7424 to i16*
  %7425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %7426 = getelementptr inbounds %struct.Segments, %struct.Segments* %7425, i32 0, i32 7
  %FS.i1054 = bitcast %union.SegmentSelector* %7426 to i16*
  %7427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %7428 = getelementptr inbounds %struct.Segments, %struct.Segments* %7427, i32 0, i32 9
  %DS.i1055 = bitcast %union.SegmentSelector* %7428 to i16*
  %7429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %7430 = getelementptr inbounds %struct.Segments, %struct.Segments* %7429, i32 0, i32 11
  %CS.i1056 = bitcast %union.SegmentSelector* %7430 to i16*
  %7431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %7432 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %7431, i32 0, i32 5
  %7433 = getelementptr inbounds %struct.Reg, %struct.Reg* %7432, i32 0, i32 0
  %GS_BASE.i1057 = bitcast %union.anon* %7433 to i64*
  %7434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %7435 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %7434, i32 0, i32 7
  %7436 = getelementptr inbounds %struct.Reg, %struct.Reg* %7435, i32 0, i32 0
  %FS_BASE.i1058 = bitcast %union.anon* %7436 to i64*
  %7437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7438 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7437, i64 0, i64 0
  %YMM0.i1059 = bitcast %union.VectorReg* %7438 to %"class.std::bitset"*
  %7439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7440 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7439, i64 0, i64 1
  %YMM1.i1060 = bitcast %union.VectorReg* %7440 to %"class.std::bitset"*
  %7441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7442 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7441, i64 0, i64 2
  %YMM2.i1061 = bitcast %union.VectorReg* %7442 to %"class.std::bitset"*
  %7443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7444 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7443, i64 0, i64 3
  %YMM3.i1062 = bitcast %union.VectorReg* %7444 to %"class.std::bitset"*
  %7445 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7446 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7445, i64 0, i64 4
  %YMM4.i1063 = bitcast %union.VectorReg* %7446 to %"class.std::bitset"*
  %7447 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7448 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7447, i64 0, i64 5
  %YMM5.i1064 = bitcast %union.VectorReg* %7448 to %"class.std::bitset"*
  %7449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7450 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7449, i64 0, i64 6
  %YMM6.i1065 = bitcast %union.VectorReg* %7450 to %"class.std::bitset"*
  %7451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7452 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7451, i64 0, i64 7
  %YMM7.i1066 = bitcast %union.VectorReg* %7452 to %"class.std::bitset"*
  %7453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7454 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7453, i64 0, i64 8
  %YMM8.i1067 = bitcast %union.VectorReg* %7454 to %"class.std::bitset"*
  %7455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7456 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7455, i64 0, i64 9
  %YMM9.i1068 = bitcast %union.VectorReg* %7456 to %"class.std::bitset"*
  %7457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7458 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7457, i64 0, i64 10
  %YMM10.i1069 = bitcast %union.VectorReg* %7458 to %"class.std::bitset"*
  %7459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7460 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7459, i64 0, i64 11
  %YMM11.i1070 = bitcast %union.VectorReg* %7460 to %"class.std::bitset"*
  %7461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7462 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7461, i64 0, i64 12
  %YMM12.i1071 = bitcast %union.VectorReg* %7462 to %"class.std::bitset"*
  %7463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7464 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7463, i64 0, i64 13
  %YMM13.i1072 = bitcast %union.VectorReg* %7464 to %"class.std::bitset"*
  %7465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7466 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7465, i64 0, i64 14
  %YMM14.i1073 = bitcast %union.VectorReg* %7466 to %"class.std::bitset"*
  %7467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7468 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7467, i64 0, i64 15
  %YMM15.i1074 = bitcast %union.VectorReg* %7468 to %"class.std::bitset"*
  %7469 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7470 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7469, i64 0, i64 0
  %XMM0.i1075 = bitcast %union.VectorReg* %7470 to %union.vec128_t*
  %7471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7472 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7471, i64 0, i64 1
  %XMM1.i1076 = bitcast %union.VectorReg* %7472 to %union.vec128_t*
  %7473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7474 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7473, i64 0, i64 2
  %XMM2.i1077 = bitcast %union.VectorReg* %7474 to %union.vec128_t*
  %7475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7476 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7475, i64 0, i64 3
  %XMM3.i1078 = bitcast %union.VectorReg* %7476 to %union.vec128_t*
  %7477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7478 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7477, i64 0, i64 4
  %XMM4.i1079 = bitcast %union.VectorReg* %7478 to %union.vec128_t*
  %7479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7480 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7479, i64 0, i64 5
  %XMM5.i1080 = bitcast %union.VectorReg* %7480 to %union.vec128_t*
  %7481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7482 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7481, i64 0, i64 6
  %XMM6.i1081 = bitcast %union.VectorReg* %7482 to %union.vec128_t*
  %7483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7484 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7483, i64 0, i64 7
  %XMM7.i1082 = bitcast %union.VectorReg* %7484 to %union.vec128_t*
  %7485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7486 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7485, i64 0, i64 8
  %XMM8.i1083 = bitcast %union.VectorReg* %7486 to %union.vec128_t*
  %7487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7488 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7487, i64 0, i64 9
  %XMM9.i1084 = bitcast %union.VectorReg* %7488 to %union.vec128_t*
  %7489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7490 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7489, i64 0, i64 10
  %XMM10.i1085 = bitcast %union.VectorReg* %7490 to %union.vec128_t*
  %7491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7492 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7491, i64 0, i64 11
  %XMM11.i1086 = bitcast %union.VectorReg* %7492 to %union.vec128_t*
  %7493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7494 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7493, i64 0, i64 12
  %XMM12.i1087 = bitcast %union.VectorReg* %7494 to %union.vec128_t*
  %7495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7496 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7495, i64 0, i64 13
  %XMM13.i1088 = bitcast %union.VectorReg* %7496 to %union.vec128_t*
  %7497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7498 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7497, i64 0, i64 14
  %XMM14.i1089 = bitcast %union.VectorReg* %7498 to %union.vec128_t*
  %7499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7500 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7499, i64 0, i64 15
  %XMM15.i1090 = bitcast %union.VectorReg* %7500 to %union.vec128_t*
  %7501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %7502 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %7501, i32 0, i32 0
  %7503 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %7502, i64 0, i64 0
  %ST0.i1091 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %7503, i32 0, i32 1
  %7504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %7505 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %7504, i32 0, i32 0
  %7506 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %7505, i64 0, i64 1
  %ST1.i1092 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %7506, i32 0, i32 1
  %7507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %7508 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %7507, i32 0, i32 0
  %7509 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %7508, i64 0, i64 2
  %ST2.i1093 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %7509, i32 0, i32 1
  %7510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %7511 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %7510, i32 0, i32 0
  %7512 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %7511, i64 0, i64 3
  %ST3.i1094 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %7512, i32 0, i32 1
  %7513 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %7514 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %7513, i32 0, i32 0
  %7515 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %7514, i64 0, i64 4
  %ST4.i1095 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %7515, i32 0, i32 1
  %7516 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %7517 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %7516, i32 0, i32 0
  %7518 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %7517, i64 0, i64 5
  %ST5.i1096 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %7518, i32 0, i32 1
  %7519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %7520 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %7519, i32 0, i32 0
  %7521 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %7520, i64 0, i64 6
  %ST6.i1097 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %7521, i32 0, i32 1
  %7522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %7523 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %7522, i32 0, i32 0
  %7524 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %7523, i64 0, i64 7
  %ST7.i1098 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %7524, i32 0, i32 1
  %7525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %7526 = getelementptr inbounds %struct.MMX, %struct.MMX* %7525, i32 0, i32 0
  %7527 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %7526, i64 0, i64 0
  %7528 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %7527, i32 0, i32 1
  %7529 = bitcast %union.vec64_t* %7528 to %struct.uint64v1_t*
  %7530 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %7529, i32 0, i32 0
  %MM0.i1099 = getelementptr inbounds [1 x i64], [1 x i64]* %7530, i64 0, i64 0
  %7531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %7532 = getelementptr inbounds %struct.MMX, %struct.MMX* %7531, i32 0, i32 0
  %7533 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %7532, i64 0, i64 1
  %7534 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %7533, i32 0, i32 1
  %7535 = bitcast %union.vec64_t* %7534 to %struct.uint64v1_t*
  %7536 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %7535, i32 0, i32 0
  %MM1.i1100 = getelementptr inbounds [1 x i64], [1 x i64]* %7536, i64 0, i64 0
  %7537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %7538 = getelementptr inbounds %struct.MMX, %struct.MMX* %7537, i32 0, i32 0
  %7539 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %7538, i64 0, i64 2
  %7540 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %7539, i32 0, i32 1
  %7541 = bitcast %union.vec64_t* %7540 to %struct.uint64v1_t*
  %7542 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %7541, i32 0, i32 0
  %MM2.i1101 = getelementptr inbounds [1 x i64], [1 x i64]* %7542, i64 0, i64 0
  %7543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %7544 = getelementptr inbounds %struct.MMX, %struct.MMX* %7543, i32 0, i32 0
  %7545 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %7544, i64 0, i64 3
  %7546 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %7545, i32 0, i32 1
  %7547 = bitcast %union.vec64_t* %7546 to %struct.uint64v1_t*
  %7548 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %7547, i32 0, i32 0
  %MM3.i1102 = getelementptr inbounds [1 x i64], [1 x i64]* %7548, i64 0, i64 0
  %7549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %7550 = getelementptr inbounds %struct.MMX, %struct.MMX* %7549, i32 0, i32 0
  %7551 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %7550, i64 0, i64 4
  %7552 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %7551, i32 0, i32 1
  %7553 = bitcast %union.vec64_t* %7552 to %struct.uint64v1_t*
  %7554 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %7553, i32 0, i32 0
  %MM4.i1103 = getelementptr inbounds [1 x i64], [1 x i64]* %7554, i64 0, i64 0
  %7555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %7556 = getelementptr inbounds %struct.MMX, %struct.MMX* %7555, i32 0, i32 0
  %7557 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %7556, i64 0, i64 5
  %7558 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %7557, i32 0, i32 1
  %7559 = bitcast %union.vec64_t* %7558 to %struct.uint64v1_t*
  %7560 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %7559, i32 0, i32 0
  %MM5.i1104 = getelementptr inbounds [1 x i64], [1 x i64]* %7560, i64 0, i64 0
  %7561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %7562 = getelementptr inbounds %struct.MMX, %struct.MMX* %7561, i32 0, i32 0
  %7563 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %7562, i64 0, i64 6
  %7564 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %7563, i32 0, i32 1
  %7565 = bitcast %union.vec64_t* %7564 to %struct.uint64v1_t*
  %7566 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %7565, i32 0, i32 0
  %MM6.i1105 = getelementptr inbounds [1 x i64], [1 x i64]* %7566, i64 0, i64 0
  %7567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %7568 = getelementptr inbounds %struct.MMX, %struct.MMX* %7567, i32 0, i32 0
  %7569 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %7568, i64 0, i64 7
  %7570 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %7569, i32 0, i32 1
  %7571 = bitcast %union.vec64_t* %7570 to %struct.uint64v1_t*
  %7572 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %7571, i32 0, i32 0
  %MM7.i1106 = getelementptr inbounds [1 x i64], [1 x i64]* %7572, i64 0, i64 0
  %7573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF.i1107 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %7573, i32 0, i32 5
  %7574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF.i1108 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %7574, i32 0, i32 1
  %7575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF.i1109 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %7575, i32 0, i32 11
  %7576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF.i1110 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %7576, i32 0, i32 13
  %7577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF.i1111 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %7577, i32 0, i32 3
  %7578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF.i1112 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %7578, i32 0, i32 9
  %7579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF.i1113 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %7579, i32 0, i32 7
  store i64* @DR0, i64** %_DR0.i965, align 8, !noalias !2474
  store i64* @DR1, i64** %_DR1.i966, align 8, !noalias !2474
  store i64* @DR2, i64** %_DR2.i967, align 8, !noalias !2474
  store i64* @DR3, i64** %_DR3.i968, align 8, !noalias !2474
  store i64* @DR4, i64** %_DR4.i969, align 8, !noalias !2474
  store i64* @DR5, i64** %_DR5.i970, align 8, !noalias !2474
  store i64* @DR6, i64** %_DR6.i971, align 8, !noalias !2474
  store i64* @DR7, i64** %_DR7.i972, align 8, !noalias !2474
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0.i973, align 8, !noalias !2474
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1.i974, align 8, !noalias !2474
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2.i975, align 8, !noalias !2474
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3.i976, align 8, !noalias !2474
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4.i977, align 8, !noalias !2474
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8.i978, align 8, !noalias !2474
  %7580 = bitcast %"class.std::bitset"* %YMM0.i1059 to double*
  %7581 = load double, double* %7580, !alias.scope !2478, !noalias !2479
  %7582 = load i64, i64* %RSP.i1040, !alias.scope !2478, !noalias !2479
  %7583 = load %struct.Memory*, %struct.Memory** %MEMORY.i964, !noalias !2474
  %7584 = inttoptr i64 %7582 to i64*
  %7585 = load i64, i64* %7584
  store i64 %7585, i64* %PC.i979, !alias.scope !2478, !noalias !2479
  %7586 = add i64 %7582, 8
  store i64 %7586, i64* %RSP.i1040, !alias.scope !2478, !noalias !2479
  %7587 = call double @cos(double %7581)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0.i1059, !alias.scope !2478, !noalias !2479
  %7588 = bitcast %"class.std::bitset"* %YMM0.i1059 to double*
  store double %7587, double* %7588, !alias.scope !2478, !noalias !2479
  %7589 = load %struct.Memory*, %struct.Memory** %MEMORY.i964, !noalias !2474
  %7590 = bitcast %struct.State** %state.i955 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7590)
  %7591 = bitcast i64* %curr_pc.i956 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7591)
  %7592 = bitcast %struct.Memory** %memory.i957 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7592)
  call void @llvm.lifetime.end(i64 1, i8* %BRANCH_TAKEN.i958)
  %7593 = bitcast i64* %SS_BASE.i959 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7593)
  %7594 = bitcast i64* %ES_BASE.i960 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7594)
  %7595 = bitcast i64* %DS_BASE.i961 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7595)
  %7596 = bitcast i64* %CS_BASE.i962 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7596)
  %7597 = bitcast %struct.State** %STATE.i963 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7597)
  %7598 = bitcast %struct.Memory** %MEMORY.i964 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7598)
  %7599 = bitcast i64** %_DR0.i965 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7599)
  %7600 = bitcast i64** %_DR1.i966 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7600)
  %7601 = bitcast i64** %_DR2.i967 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7601)
  %7602 = bitcast i64** %_DR3.i968 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7602)
  %7603 = bitcast i64** %_DR4.i969 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7603)
  %7604 = bitcast i64** %_DR5.i970 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7604)
  %7605 = bitcast i64** %_DR6.i971 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7605)
  %7606 = bitcast i64** %_DR7.i972 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7606)
  %7607 = bitcast i64** %CR0.i973 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7607)
  %7608 = bitcast i64** %CR1.i974 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7608)
  %7609 = bitcast i64** %CR2.i975 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7609)
  %7610 = bitcast i64** %CR3.i976 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7610)
  %7611 = bitcast i64** %CR4.i977 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7611)
  %7612 = bitcast i64** %CR8.i978 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7612)
  %7613 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %7614 = load i64, i64* %RBP
  %7615 = sub i64 %7614, 144
  %7616 = load i64, i64* %PC
  %7617 = add i64 %7616, 8
  store i64 %7617, i64* %PC
  %7618 = inttoptr i64 %7615 to double*
  %7619 = load double, double* %7618
  %7620 = bitcast i8* %7613 to double*
  store double %7619, double* %7620, align 1, !tbaa !2432
  %7621 = getelementptr inbounds i8, i8* %7613, i64 8
  %7622 = bitcast i8* %7621 to double*
  store double 0.000000e+00, double* %7622, align 1, !tbaa !2432
  %7623 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %7624 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %7625 = load i64, i64* %RBP
  %7626 = sub i64 %7625, 152
  %7627 = load i64, i64* %PC
  %7628 = add i64 %7627, 8
  store i64 %7628, i64* %PC
  %7629 = bitcast i8* %7624 to double*
  %7630 = load double, double* %7629, align 1
  %7631 = getelementptr inbounds i8, i8* %7624, i64 8
  %7632 = bitcast i8* %7631 to i64*
  %7633 = load i64, i64* %7632, align 1
  %7634 = inttoptr i64 %7626 to double*
  %7635 = load double, double* %7634
  %7636 = fsub double %7630, %7635
  %7637 = bitcast i8* %7623 to double*
  store double %7636, double* %7637, align 1, !tbaa !2432
  %7638 = getelementptr inbounds i8, i8* %7623, i64 8
  %7639 = bitcast i8* %7638 to i64*
  store i64 %7633, i64* %7639, align 1, !tbaa !2432
  %7640 = load i64, i64* %RBP
  %7641 = sub i64 %7640, 264
  %7642 = bitcast %union.vec128_t* %XMM0 to i8*
  %7643 = load i64, i64* %PC
  %7644 = add i64 %7643, 8
  store i64 %7644, i64* %PC
  %7645 = bitcast i8* %7642 to double*
  %7646 = load double, double* %7645, align 1
  %7647 = inttoptr i64 %7641 to double*
  store double %7646, double* %7647
  %7648 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %7649 = bitcast %union.vec128_t* %XMM1 to i8*
  %7650 = load i64, i64* %PC
  %7651 = add i64 %7650, 3
  store i64 %7651, i64* %PC
  %7652 = bitcast i8* %7649 to <2 x i32>*
  %7653 = load <2 x i32>, <2 x i32>* %7652, align 1
  %7654 = getelementptr inbounds i8, i8* %7649, i64 8
  %7655 = bitcast i8* %7654 to <2 x i32>*
  %7656 = load <2 x i32>, <2 x i32>* %7655, align 1
  %7657 = extractelement <2 x i32> %7653, i32 0
  %7658 = bitcast i8* %7648 to i32*
  store i32 %7657, i32* %7658, align 1, !tbaa !2460
  %7659 = extractelement <2 x i32> %7653, i32 1
  %7660 = getelementptr inbounds i8, i8* %7648, i64 4
  %7661 = bitcast i8* %7660 to i32*
  store i32 %7659, i32* %7661, align 1, !tbaa !2460
  %7662 = extractelement <2 x i32> %7656, i32 0
  %7663 = getelementptr inbounds i8, i8* %7648, i64 8
  %7664 = bitcast i8* %7663 to i32*
  store i32 %7662, i32* %7664, align 1, !tbaa !2460
  %7665 = extractelement <2 x i32> %7656, i32 1
  %7666 = getelementptr inbounds i8, i8* %7648, i64 12
  %7667 = bitcast i8* %7666 to i32*
  store i32 %7665, i32* %7667, align 1, !tbaa !2460
  %7668 = load i64, i64* %PC
  %7669 = sub i64 %7668, 2530
  %7670 = load i64, i64* %PC
  %7671 = add i64 %7670, 5
  %7672 = load i64, i64* %PC
  %7673 = add i64 %7672, 5
  store i64 %7673, i64* %PC
  %7674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7675 = load i64, i64* %7674, align 8, !tbaa !2428
  %7676 = add i64 %7675, -8
  %7677 = inttoptr i64 %7676 to i64*
  store i64 %7671, i64* %7677
  store i64 %7676, i64* %7674, align 8, !tbaa !2428
  %7678 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7669, i64* %7678, align 8, !tbaa !2428
  %7679 = load i64, i64* %PC
  %7680 = bitcast %struct.State** %state.i796 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7680)
  %7681 = bitcast i64* %curr_pc.i797 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7681)
  %7682 = bitcast %struct.Memory** %memory.i798 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7682)
  call void @llvm.lifetime.start(i64 1, i8* %BRANCH_TAKEN.i799)
  %7683 = bitcast i64* %SS_BASE.i800 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7683)
  %7684 = bitcast i64* %ES_BASE.i801 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7684)
  %7685 = bitcast i64* %DS_BASE.i802 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7685)
  %7686 = bitcast i64* %CS_BASE.i803 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7686)
  %7687 = bitcast %struct.State** %STATE.i804 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7687)
  %7688 = bitcast %struct.Memory** %MEMORY.i805 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7688)
  %7689 = bitcast i64** %_DR0.i806 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7689)
  %7690 = bitcast i64** %_DR1.i807 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7690)
  %7691 = bitcast i64** %_DR2.i808 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7691)
  %7692 = bitcast i64** %_DR3.i809 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7692)
  %7693 = bitcast i64** %_DR4.i810 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7693)
  %7694 = bitcast i64** %_DR5.i811 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7694)
  %7695 = bitcast i64** %_DR6.i812 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7695)
  %7696 = bitcast i64** %_DR7.i813 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7696)
  %7697 = bitcast i64** %CR0.i814 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7697)
  %7698 = bitcast i64** %CR1.i815 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7698)
  %7699 = bitcast i64** %CR2.i816 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7699)
  %7700 = bitcast i64** %CR3.i817 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7700)
  %7701 = bitcast i64** %CR4.i818 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7701)
  %7702 = bitcast i64** %CR8.i819 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7702)
  store %struct.State* %0, %struct.State** %state.i796, align 8, !noalias !2480
  store i64 %7679, i64* %curr_pc.i797, align 8, !noalias !2480
  store %struct.Memory* %7589, %struct.Memory** %memory.i798, align 8, !noalias !2480
  store i8 0, i8* %BRANCH_TAKEN.i799, align 1, !noalias !2480
  store i64 0, i64* %SS_BASE.i800, align 8, !noalias !2480
  store i64 0, i64* %ES_BASE.i801, align 8, !noalias !2480
  store i64 0, i64* %DS_BASE.i802, align 8, !noalias !2480
  store i64 0, i64* %CS_BASE.i803, align 8, !noalias !2480
  store %struct.State* %0, %struct.State** %STATE.i804, align 8, !noalias !2480
  store %struct.Memory* %7589, %struct.Memory** %MEMORY.i805, align 8, !noalias !2480
  %7703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7704 = getelementptr inbounds %struct.GPR, %struct.GPR* %7703, i32 0, i32 33
  %7705 = getelementptr inbounds %struct.Reg, %struct.Reg* %7704, i32 0, i32 0
  %PC.i820 = bitcast %union.anon* %7705 to i64*
  store i64 %7679, i64* %PC.i820, align 8, !alias.scope !2484, !noalias !2485
  %7706 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7707 = getelementptr inbounds %struct.GPR, %struct.GPR* %7706, i32 0, i32 1
  %7708 = getelementptr inbounds %struct.Reg, %struct.Reg* %7707, i32 0, i32 0
  %7709 = bitcast %union.anon* %7708 to %struct.anon.2*
  %AH.i821 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7709, i32 0, i32 1
  %7710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7711 = getelementptr inbounds %struct.GPR, %struct.GPR* %7710, i32 0, i32 3
  %7712 = getelementptr inbounds %struct.Reg, %struct.Reg* %7711, i32 0, i32 0
  %7713 = bitcast %union.anon* %7712 to %struct.anon.2*
  %BH.i822 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7713, i32 0, i32 1
  %7714 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7715 = getelementptr inbounds %struct.GPR, %struct.GPR* %7714, i32 0, i32 5
  %7716 = getelementptr inbounds %struct.Reg, %struct.Reg* %7715, i32 0, i32 0
  %7717 = bitcast %union.anon* %7716 to %struct.anon.2*
  %CH.i823 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7717, i32 0, i32 1
  %7718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7719 = getelementptr inbounds %struct.GPR, %struct.GPR* %7718, i32 0, i32 7
  %7720 = getelementptr inbounds %struct.Reg, %struct.Reg* %7719, i32 0, i32 0
  %7721 = bitcast %union.anon* %7720 to %struct.anon.2*
  %DH.i824 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7721, i32 0, i32 1
  %7722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7723 = getelementptr inbounds %struct.GPR, %struct.GPR* %7722, i32 0, i32 1
  %7724 = getelementptr inbounds %struct.Reg, %struct.Reg* %7723, i32 0, i32 0
  %7725 = bitcast %union.anon* %7724 to %struct.anon.2*
  %AL.i825 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7725, i32 0, i32 0
  %7726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7727 = getelementptr inbounds %struct.GPR, %struct.GPR* %7726, i32 0, i32 3
  %7728 = getelementptr inbounds %struct.Reg, %struct.Reg* %7727, i32 0, i32 0
  %7729 = bitcast %union.anon* %7728 to %struct.anon.2*
  %BL.i826 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7729, i32 0, i32 0
  %7730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7731 = getelementptr inbounds %struct.GPR, %struct.GPR* %7730, i32 0, i32 5
  %7732 = getelementptr inbounds %struct.Reg, %struct.Reg* %7731, i32 0, i32 0
  %7733 = bitcast %union.anon* %7732 to %struct.anon.2*
  %CL.i827 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7733, i32 0, i32 0
  %7734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7735 = getelementptr inbounds %struct.GPR, %struct.GPR* %7734, i32 0, i32 7
  %7736 = getelementptr inbounds %struct.Reg, %struct.Reg* %7735, i32 0, i32 0
  %7737 = bitcast %union.anon* %7736 to %struct.anon.2*
  %DL.i828 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7737, i32 0, i32 0
  %7738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7739 = getelementptr inbounds %struct.GPR, %struct.GPR* %7738, i32 0, i32 9
  %7740 = getelementptr inbounds %struct.Reg, %struct.Reg* %7739, i32 0, i32 0
  %7741 = bitcast %union.anon* %7740 to %struct.anon.2*
  %SIL.i829 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7741, i32 0, i32 0
  %7742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7743 = getelementptr inbounds %struct.GPR, %struct.GPR* %7742, i32 0, i32 11
  %7744 = getelementptr inbounds %struct.Reg, %struct.Reg* %7743, i32 0, i32 0
  %7745 = bitcast %union.anon* %7744 to %struct.anon.2*
  %DIL.i830 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7745, i32 0, i32 0
  %7746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7747 = getelementptr inbounds %struct.GPR, %struct.GPR* %7746, i32 0, i32 13
  %7748 = getelementptr inbounds %struct.Reg, %struct.Reg* %7747, i32 0, i32 0
  %7749 = bitcast %union.anon* %7748 to %struct.anon.2*
  %SPL.i831 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7749, i32 0, i32 0
  %7750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7751 = getelementptr inbounds %struct.GPR, %struct.GPR* %7750, i32 0, i32 15
  %7752 = getelementptr inbounds %struct.Reg, %struct.Reg* %7751, i32 0, i32 0
  %7753 = bitcast %union.anon* %7752 to %struct.anon.2*
  %BPL.i832 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7753, i32 0, i32 0
  %7754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7755 = getelementptr inbounds %struct.GPR, %struct.GPR* %7754, i32 0, i32 17
  %7756 = getelementptr inbounds %struct.Reg, %struct.Reg* %7755, i32 0, i32 0
  %7757 = bitcast %union.anon* %7756 to %struct.anon.2*
  %R8B.i833 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7757, i32 0, i32 0
  %7758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7759 = getelementptr inbounds %struct.GPR, %struct.GPR* %7758, i32 0, i32 19
  %7760 = getelementptr inbounds %struct.Reg, %struct.Reg* %7759, i32 0, i32 0
  %7761 = bitcast %union.anon* %7760 to %struct.anon.2*
  %R9B.i834 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7761, i32 0, i32 0
  %7762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7763 = getelementptr inbounds %struct.GPR, %struct.GPR* %7762, i32 0, i32 21
  %7764 = getelementptr inbounds %struct.Reg, %struct.Reg* %7763, i32 0, i32 0
  %7765 = bitcast %union.anon* %7764 to %struct.anon.2*
  %R10B.i835 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7765, i32 0, i32 0
  %7766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7767 = getelementptr inbounds %struct.GPR, %struct.GPR* %7766, i32 0, i32 23
  %7768 = getelementptr inbounds %struct.Reg, %struct.Reg* %7767, i32 0, i32 0
  %7769 = bitcast %union.anon* %7768 to %struct.anon.2*
  %R11B.i836 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7769, i32 0, i32 0
  %7770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7771 = getelementptr inbounds %struct.GPR, %struct.GPR* %7770, i32 0, i32 25
  %7772 = getelementptr inbounds %struct.Reg, %struct.Reg* %7771, i32 0, i32 0
  %7773 = bitcast %union.anon* %7772 to %struct.anon.2*
  %R12B.i837 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7773, i32 0, i32 0
  %7774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7775 = getelementptr inbounds %struct.GPR, %struct.GPR* %7774, i32 0, i32 27
  %7776 = getelementptr inbounds %struct.Reg, %struct.Reg* %7775, i32 0, i32 0
  %7777 = bitcast %union.anon* %7776 to %struct.anon.2*
  %R13B.i838 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7777, i32 0, i32 0
  %7778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7779 = getelementptr inbounds %struct.GPR, %struct.GPR* %7778, i32 0, i32 29
  %7780 = getelementptr inbounds %struct.Reg, %struct.Reg* %7779, i32 0, i32 0
  %7781 = bitcast %union.anon* %7780 to %struct.anon.2*
  %R14B.i839 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7781, i32 0, i32 0
  %7782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7783 = getelementptr inbounds %struct.GPR, %struct.GPR* %7782, i32 0, i32 31
  %7784 = getelementptr inbounds %struct.Reg, %struct.Reg* %7783, i32 0, i32 0
  %7785 = bitcast %union.anon* %7784 to %struct.anon.2*
  %R15B.i840 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7785, i32 0, i32 0
  %7786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7787 = getelementptr inbounds %struct.GPR, %struct.GPR* %7786, i32 0, i32 1
  %7788 = getelementptr inbounds %struct.Reg, %struct.Reg* %7787, i32 0, i32 0
  %AX.i841 = bitcast %union.anon* %7788 to i16*
  %7789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7790 = getelementptr inbounds %struct.GPR, %struct.GPR* %7789, i32 0, i32 3
  %7791 = getelementptr inbounds %struct.Reg, %struct.Reg* %7790, i32 0, i32 0
  %BX.i842 = bitcast %union.anon* %7791 to i16*
  %7792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7793 = getelementptr inbounds %struct.GPR, %struct.GPR* %7792, i32 0, i32 5
  %7794 = getelementptr inbounds %struct.Reg, %struct.Reg* %7793, i32 0, i32 0
  %CX.i843 = bitcast %union.anon* %7794 to i16*
  %7795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7796 = getelementptr inbounds %struct.GPR, %struct.GPR* %7795, i32 0, i32 7
  %7797 = getelementptr inbounds %struct.Reg, %struct.Reg* %7796, i32 0, i32 0
  %DX.i844 = bitcast %union.anon* %7797 to i16*
  %7798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7799 = getelementptr inbounds %struct.GPR, %struct.GPR* %7798, i32 0, i32 9
  %7800 = getelementptr inbounds %struct.Reg, %struct.Reg* %7799, i32 0, i32 0
  %SI.i845 = bitcast %union.anon* %7800 to i16*
  %7801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7802 = getelementptr inbounds %struct.GPR, %struct.GPR* %7801, i32 0, i32 11
  %7803 = getelementptr inbounds %struct.Reg, %struct.Reg* %7802, i32 0, i32 0
  %DI.i846 = bitcast %union.anon* %7803 to i16*
  %7804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7805 = getelementptr inbounds %struct.GPR, %struct.GPR* %7804, i32 0, i32 13
  %7806 = getelementptr inbounds %struct.Reg, %struct.Reg* %7805, i32 0, i32 0
  %SP.i847 = bitcast %union.anon* %7806 to i16*
  %7807 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7808 = getelementptr inbounds %struct.GPR, %struct.GPR* %7807, i32 0, i32 15
  %7809 = getelementptr inbounds %struct.Reg, %struct.Reg* %7808, i32 0, i32 0
  %BP.i848 = bitcast %union.anon* %7809 to i16*
  %7810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7811 = getelementptr inbounds %struct.GPR, %struct.GPR* %7810, i32 0, i32 17
  %7812 = getelementptr inbounds %struct.Reg, %struct.Reg* %7811, i32 0, i32 0
  %R8W.i849 = bitcast %union.anon* %7812 to i16*
  %7813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7814 = getelementptr inbounds %struct.GPR, %struct.GPR* %7813, i32 0, i32 19
  %7815 = getelementptr inbounds %struct.Reg, %struct.Reg* %7814, i32 0, i32 0
  %R9W.i850 = bitcast %union.anon* %7815 to i16*
  %7816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7817 = getelementptr inbounds %struct.GPR, %struct.GPR* %7816, i32 0, i32 21
  %7818 = getelementptr inbounds %struct.Reg, %struct.Reg* %7817, i32 0, i32 0
  %R10W.i851 = bitcast %union.anon* %7818 to i16*
  %7819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7820 = getelementptr inbounds %struct.GPR, %struct.GPR* %7819, i32 0, i32 23
  %7821 = getelementptr inbounds %struct.Reg, %struct.Reg* %7820, i32 0, i32 0
  %R11W.i852 = bitcast %union.anon* %7821 to i16*
  %7822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7823 = getelementptr inbounds %struct.GPR, %struct.GPR* %7822, i32 0, i32 25
  %7824 = getelementptr inbounds %struct.Reg, %struct.Reg* %7823, i32 0, i32 0
  %R12W.i853 = bitcast %union.anon* %7824 to i16*
  %7825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7826 = getelementptr inbounds %struct.GPR, %struct.GPR* %7825, i32 0, i32 27
  %7827 = getelementptr inbounds %struct.Reg, %struct.Reg* %7826, i32 0, i32 0
  %R13W.i854 = bitcast %union.anon* %7827 to i16*
  %7828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7829 = getelementptr inbounds %struct.GPR, %struct.GPR* %7828, i32 0, i32 29
  %7830 = getelementptr inbounds %struct.Reg, %struct.Reg* %7829, i32 0, i32 0
  %R14W.i855 = bitcast %union.anon* %7830 to i16*
  %7831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7832 = getelementptr inbounds %struct.GPR, %struct.GPR* %7831, i32 0, i32 31
  %7833 = getelementptr inbounds %struct.Reg, %struct.Reg* %7832, i32 0, i32 0
  %R15W.i856 = bitcast %union.anon* %7833 to i16*
  %7834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7835 = getelementptr inbounds %struct.GPR, %struct.GPR* %7834, i32 0, i32 33
  %7836 = getelementptr inbounds %struct.Reg, %struct.Reg* %7835, i32 0, i32 0
  %IP.i857 = bitcast %union.anon* %7836 to i16*
  %7837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7838 = getelementptr inbounds %struct.GPR, %struct.GPR* %7837, i32 0, i32 1
  %7839 = getelementptr inbounds %struct.Reg, %struct.Reg* %7838, i32 0, i32 0
  %EAX.i858 = bitcast %union.anon* %7839 to i32*
  %7840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7841 = getelementptr inbounds %struct.GPR, %struct.GPR* %7840, i32 0, i32 3
  %7842 = getelementptr inbounds %struct.Reg, %struct.Reg* %7841, i32 0, i32 0
  %EBX.i859 = bitcast %union.anon* %7842 to i32*
  %7843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7844 = getelementptr inbounds %struct.GPR, %struct.GPR* %7843, i32 0, i32 5
  %7845 = getelementptr inbounds %struct.Reg, %struct.Reg* %7844, i32 0, i32 0
  %ECX.i860 = bitcast %union.anon* %7845 to i32*
  %7846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7847 = getelementptr inbounds %struct.GPR, %struct.GPR* %7846, i32 0, i32 7
  %7848 = getelementptr inbounds %struct.Reg, %struct.Reg* %7847, i32 0, i32 0
  %EDX.i861 = bitcast %union.anon* %7848 to i32*
  %7849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7850 = getelementptr inbounds %struct.GPR, %struct.GPR* %7849, i32 0, i32 9
  %7851 = getelementptr inbounds %struct.Reg, %struct.Reg* %7850, i32 0, i32 0
  %ESI.i862 = bitcast %union.anon* %7851 to i32*
  %7852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7853 = getelementptr inbounds %struct.GPR, %struct.GPR* %7852, i32 0, i32 11
  %7854 = getelementptr inbounds %struct.Reg, %struct.Reg* %7853, i32 0, i32 0
  %EDI.i863 = bitcast %union.anon* %7854 to i32*
  %7855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7856 = getelementptr inbounds %struct.GPR, %struct.GPR* %7855, i32 0, i32 13
  %7857 = getelementptr inbounds %struct.Reg, %struct.Reg* %7856, i32 0, i32 0
  %ESP.i864 = bitcast %union.anon* %7857 to i32*
  %7858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7859 = getelementptr inbounds %struct.GPR, %struct.GPR* %7858, i32 0, i32 15
  %7860 = getelementptr inbounds %struct.Reg, %struct.Reg* %7859, i32 0, i32 0
  %EBP.i865 = bitcast %union.anon* %7860 to i32*
  %7861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7862 = getelementptr inbounds %struct.GPR, %struct.GPR* %7861, i32 0, i32 33
  %7863 = getelementptr inbounds %struct.Reg, %struct.Reg* %7862, i32 0, i32 0
  %EIP.i866 = bitcast %union.anon* %7863 to i32*
  %7864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7865 = getelementptr inbounds %struct.GPR, %struct.GPR* %7864, i32 0, i32 17
  %7866 = getelementptr inbounds %struct.Reg, %struct.Reg* %7865, i32 0, i32 0
  %R8D.i867 = bitcast %union.anon* %7866 to i32*
  %7867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7868 = getelementptr inbounds %struct.GPR, %struct.GPR* %7867, i32 0, i32 19
  %7869 = getelementptr inbounds %struct.Reg, %struct.Reg* %7868, i32 0, i32 0
  %R9D.i868 = bitcast %union.anon* %7869 to i32*
  %7870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7871 = getelementptr inbounds %struct.GPR, %struct.GPR* %7870, i32 0, i32 21
  %7872 = getelementptr inbounds %struct.Reg, %struct.Reg* %7871, i32 0, i32 0
  %R10D.i869 = bitcast %union.anon* %7872 to i32*
  %7873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7874 = getelementptr inbounds %struct.GPR, %struct.GPR* %7873, i32 0, i32 23
  %7875 = getelementptr inbounds %struct.Reg, %struct.Reg* %7874, i32 0, i32 0
  %R11D.i870 = bitcast %union.anon* %7875 to i32*
  %7876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7877 = getelementptr inbounds %struct.GPR, %struct.GPR* %7876, i32 0, i32 25
  %7878 = getelementptr inbounds %struct.Reg, %struct.Reg* %7877, i32 0, i32 0
  %R12D.i871 = bitcast %union.anon* %7878 to i32*
  %7879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7880 = getelementptr inbounds %struct.GPR, %struct.GPR* %7879, i32 0, i32 27
  %7881 = getelementptr inbounds %struct.Reg, %struct.Reg* %7880, i32 0, i32 0
  %R13D.i872 = bitcast %union.anon* %7881 to i32*
  %7882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7883 = getelementptr inbounds %struct.GPR, %struct.GPR* %7882, i32 0, i32 29
  %7884 = getelementptr inbounds %struct.Reg, %struct.Reg* %7883, i32 0, i32 0
  %R14D.i873 = bitcast %union.anon* %7884 to i32*
  %7885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7886 = getelementptr inbounds %struct.GPR, %struct.GPR* %7885, i32 0, i32 31
  %7887 = getelementptr inbounds %struct.Reg, %struct.Reg* %7886, i32 0, i32 0
  %R15D.i874 = bitcast %union.anon* %7887 to i32*
  %7888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7889 = getelementptr inbounds %struct.GPR, %struct.GPR* %7888, i32 0, i32 1
  %7890 = getelementptr inbounds %struct.Reg, %struct.Reg* %7889, i32 0, i32 0
  %RAX.i875 = bitcast %union.anon* %7890 to i64*
  %7891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7892 = getelementptr inbounds %struct.GPR, %struct.GPR* %7891, i32 0, i32 3
  %7893 = getelementptr inbounds %struct.Reg, %struct.Reg* %7892, i32 0, i32 0
  %RBX.i876 = bitcast %union.anon* %7893 to i64*
  %7894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7895 = getelementptr inbounds %struct.GPR, %struct.GPR* %7894, i32 0, i32 5
  %7896 = getelementptr inbounds %struct.Reg, %struct.Reg* %7895, i32 0, i32 0
  %RCX.i877 = bitcast %union.anon* %7896 to i64*
  %7897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7898 = getelementptr inbounds %struct.GPR, %struct.GPR* %7897, i32 0, i32 7
  %7899 = getelementptr inbounds %struct.Reg, %struct.Reg* %7898, i32 0, i32 0
  %RDX.i878 = bitcast %union.anon* %7899 to i64*
  %7900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7901 = getelementptr inbounds %struct.GPR, %struct.GPR* %7900, i32 0, i32 9
  %7902 = getelementptr inbounds %struct.Reg, %struct.Reg* %7901, i32 0, i32 0
  %RSI.i879 = bitcast %union.anon* %7902 to i64*
  %7903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7904 = getelementptr inbounds %struct.GPR, %struct.GPR* %7903, i32 0, i32 11
  %7905 = getelementptr inbounds %struct.Reg, %struct.Reg* %7904, i32 0, i32 0
  %RDI.i880 = bitcast %union.anon* %7905 to i64*
  %7906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7907 = getelementptr inbounds %struct.GPR, %struct.GPR* %7906, i32 0, i32 13
  %7908 = getelementptr inbounds %struct.Reg, %struct.Reg* %7907, i32 0, i32 0
  %RSP.i881 = bitcast %union.anon* %7908 to i64*
  %7909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7910 = getelementptr inbounds %struct.GPR, %struct.GPR* %7909, i32 0, i32 15
  %7911 = getelementptr inbounds %struct.Reg, %struct.Reg* %7910, i32 0, i32 0
  %RBP.i882 = bitcast %union.anon* %7911 to i64*
  %7912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7913 = getelementptr inbounds %struct.GPR, %struct.GPR* %7912, i32 0, i32 17
  %7914 = getelementptr inbounds %struct.Reg, %struct.Reg* %7913, i32 0, i32 0
  %R8.i883 = bitcast %union.anon* %7914 to i64*
  %7915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7916 = getelementptr inbounds %struct.GPR, %struct.GPR* %7915, i32 0, i32 19
  %7917 = getelementptr inbounds %struct.Reg, %struct.Reg* %7916, i32 0, i32 0
  %R9.i884 = bitcast %union.anon* %7917 to i64*
  %7918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7919 = getelementptr inbounds %struct.GPR, %struct.GPR* %7918, i32 0, i32 21
  %7920 = getelementptr inbounds %struct.Reg, %struct.Reg* %7919, i32 0, i32 0
  %R10.i885 = bitcast %union.anon* %7920 to i64*
  %7921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7922 = getelementptr inbounds %struct.GPR, %struct.GPR* %7921, i32 0, i32 23
  %7923 = getelementptr inbounds %struct.Reg, %struct.Reg* %7922, i32 0, i32 0
  %R11.i886 = bitcast %union.anon* %7923 to i64*
  %7924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7925 = getelementptr inbounds %struct.GPR, %struct.GPR* %7924, i32 0, i32 25
  %7926 = getelementptr inbounds %struct.Reg, %struct.Reg* %7925, i32 0, i32 0
  %R12.i887 = bitcast %union.anon* %7926 to i64*
  %7927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7928 = getelementptr inbounds %struct.GPR, %struct.GPR* %7927, i32 0, i32 27
  %7929 = getelementptr inbounds %struct.Reg, %struct.Reg* %7928, i32 0, i32 0
  %R13.i888 = bitcast %union.anon* %7929 to i64*
  %7930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7931 = getelementptr inbounds %struct.GPR, %struct.GPR* %7930, i32 0, i32 29
  %7932 = getelementptr inbounds %struct.Reg, %struct.Reg* %7931, i32 0, i32 0
  %R14.i889 = bitcast %union.anon* %7932 to i64*
  %7933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7934 = getelementptr inbounds %struct.GPR, %struct.GPR* %7933, i32 0, i32 31
  %7935 = getelementptr inbounds %struct.Reg, %struct.Reg* %7934, i32 0, i32 0
  %R15.i890 = bitcast %union.anon* %7935 to i64*
  %7936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7937 = getelementptr inbounds %struct.GPR, %struct.GPR* %7936, i32 0, i32 33
  %7938 = getelementptr inbounds %struct.Reg, %struct.Reg* %7937, i32 0, i32 0
  %RIP.i891 = bitcast %union.anon* %7938 to i64*
  %7939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %7940 = getelementptr inbounds %struct.Segments, %struct.Segments* %7939, i32 0, i32 1
  %SS.i892 = bitcast %union.SegmentSelector* %7940 to i16*
  %7941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %7942 = getelementptr inbounds %struct.Segments, %struct.Segments* %7941, i32 0, i32 3
  %ES.i893 = bitcast %union.SegmentSelector* %7942 to i16*
  %7943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %7944 = getelementptr inbounds %struct.Segments, %struct.Segments* %7943, i32 0, i32 5
  %GS.i894 = bitcast %union.SegmentSelector* %7944 to i16*
  %7945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %7946 = getelementptr inbounds %struct.Segments, %struct.Segments* %7945, i32 0, i32 7
  %FS.i895 = bitcast %union.SegmentSelector* %7946 to i16*
  %7947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %7948 = getelementptr inbounds %struct.Segments, %struct.Segments* %7947, i32 0, i32 9
  %DS.i896 = bitcast %union.SegmentSelector* %7948 to i16*
  %7949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %7950 = getelementptr inbounds %struct.Segments, %struct.Segments* %7949, i32 0, i32 11
  %CS.i897 = bitcast %union.SegmentSelector* %7950 to i16*
  %7951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %7952 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %7951, i32 0, i32 5
  %7953 = getelementptr inbounds %struct.Reg, %struct.Reg* %7952, i32 0, i32 0
  %GS_BASE.i898 = bitcast %union.anon* %7953 to i64*
  %7954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %7955 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %7954, i32 0, i32 7
  %7956 = getelementptr inbounds %struct.Reg, %struct.Reg* %7955, i32 0, i32 0
  %FS_BASE.i899 = bitcast %union.anon* %7956 to i64*
  %7957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7958 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7957, i64 0, i64 0
  %YMM0.i900 = bitcast %union.VectorReg* %7958 to %"class.std::bitset"*
  %7959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7960 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7959, i64 0, i64 1
  %YMM1.i901 = bitcast %union.VectorReg* %7960 to %"class.std::bitset"*
  %7961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7962 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7961, i64 0, i64 2
  %YMM2.i902 = bitcast %union.VectorReg* %7962 to %"class.std::bitset"*
  %7963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7964 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7963, i64 0, i64 3
  %YMM3.i903 = bitcast %union.VectorReg* %7964 to %"class.std::bitset"*
  %7965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7966 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7965, i64 0, i64 4
  %YMM4.i904 = bitcast %union.VectorReg* %7966 to %"class.std::bitset"*
  %7967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7968 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7967, i64 0, i64 5
  %YMM5.i905 = bitcast %union.VectorReg* %7968 to %"class.std::bitset"*
  %7969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7970 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7969, i64 0, i64 6
  %YMM6.i906 = bitcast %union.VectorReg* %7970 to %"class.std::bitset"*
  %7971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7972 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7971, i64 0, i64 7
  %YMM7.i907 = bitcast %union.VectorReg* %7972 to %"class.std::bitset"*
  %7973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7974 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7973, i64 0, i64 8
  %YMM8.i908 = bitcast %union.VectorReg* %7974 to %"class.std::bitset"*
  %7975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7976 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7975, i64 0, i64 9
  %YMM9.i909 = bitcast %union.VectorReg* %7976 to %"class.std::bitset"*
  %7977 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7978 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7977, i64 0, i64 10
  %YMM10.i910 = bitcast %union.VectorReg* %7978 to %"class.std::bitset"*
  %7979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7980 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7979, i64 0, i64 11
  %YMM11.i911 = bitcast %union.VectorReg* %7980 to %"class.std::bitset"*
  %7981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7982 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7981, i64 0, i64 12
  %YMM12.i912 = bitcast %union.VectorReg* %7982 to %"class.std::bitset"*
  %7983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7984 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7983, i64 0, i64 13
  %YMM13.i913 = bitcast %union.VectorReg* %7984 to %"class.std::bitset"*
  %7985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7986 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7985, i64 0, i64 14
  %YMM14.i914 = bitcast %union.VectorReg* %7986 to %"class.std::bitset"*
  %7987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7988 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7987, i64 0, i64 15
  %YMM15.i915 = bitcast %union.VectorReg* %7988 to %"class.std::bitset"*
  %7989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7990 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7989, i64 0, i64 0
  %XMM0.i916 = bitcast %union.VectorReg* %7990 to %union.vec128_t*
  %7991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7992 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7991, i64 0, i64 1
  %XMM1.i917 = bitcast %union.VectorReg* %7992 to %union.vec128_t*
  %7993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7994 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7993, i64 0, i64 2
  %XMM2.i918 = bitcast %union.VectorReg* %7994 to %union.vec128_t*
  %7995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7996 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7995, i64 0, i64 3
  %XMM3.i919 = bitcast %union.VectorReg* %7996 to %union.vec128_t*
  %7997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7998 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7997, i64 0, i64 4
  %XMM4.i920 = bitcast %union.VectorReg* %7998 to %union.vec128_t*
  %7999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8000 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7999, i64 0, i64 5
  %XMM5.i921 = bitcast %union.VectorReg* %8000 to %union.vec128_t*
  %8001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8002 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8001, i64 0, i64 6
  %XMM6.i922 = bitcast %union.VectorReg* %8002 to %union.vec128_t*
  %8003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8004 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8003, i64 0, i64 7
  %XMM7.i923 = bitcast %union.VectorReg* %8004 to %union.vec128_t*
  %8005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8006 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8005, i64 0, i64 8
  %XMM8.i924 = bitcast %union.VectorReg* %8006 to %union.vec128_t*
  %8007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8008 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8007, i64 0, i64 9
  %XMM9.i925 = bitcast %union.VectorReg* %8008 to %union.vec128_t*
  %8009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8010 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8009, i64 0, i64 10
  %XMM10.i926 = bitcast %union.VectorReg* %8010 to %union.vec128_t*
  %8011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8012 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8011, i64 0, i64 11
  %XMM11.i927 = bitcast %union.VectorReg* %8012 to %union.vec128_t*
  %8013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8014 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8013, i64 0, i64 12
  %XMM12.i928 = bitcast %union.VectorReg* %8014 to %union.vec128_t*
  %8015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8016 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8015, i64 0, i64 13
  %XMM13.i929 = bitcast %union.VectorReg* %8016 to %union.vec128_t*
  %8017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8018 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8017, i64 0, i64 14
  %XMM14.i930 = bitcast %union.VectorReg* %8018 to %union.vec128_t*
  %8019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8020 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8019, i64 0, i64 15
  %XMM15.i931 = bitcast %union.VectorReg* %8020 to %union.vec128_t*
  %8021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %8022 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %8021, i32 0, i32 0
  %8023 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %8022, i64 0, i64 0
  %ST0.i932 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %8023, i32 0, i32 1
  %8024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %8025 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %8024, i32 0, i32 0
  %8026 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %8025, i64 0, i64 1
  %ST1.i933 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %8026, i32 0, i32 1
  %8027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %8028 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %8027, i32 0, i32 0
  %8029 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %8028, i64 0, i64 2
  %ST2.i934 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %8029, i32 0, i32 1
  %8030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %8031 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %8030, i32 0, i32 0
  %8032 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %8031, i64 0, i64 3
  %ST3.i935 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %8032, i32 0, i32 1
  %8033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %8034 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %8033, i32 0, i32 0
  %8035 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %8034, i64 0, i64 4
  %ST4.i936 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %8035, i32 0, i32 1
  %8036 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %8037 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %8036, i32 0, i32 0
  %8038 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %8037, i64 0, i64 5
  %ST5.i937 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %8038, i32 0, i32 1
  %8039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %8040 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %8039, i32 0, i32 0
  %8041 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %8040, i64 0, i64 6
  %ST6.i938 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %8041, i32 0, i32 1
  %8042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %8043 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %8042, i32 0, i32 0
  %8044 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %8043, i64 0, i64 7
  %ST7.i939 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %8044, i32 0, i32 1
  %8045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %8046 = getelementptr inbounds %struct.MMX, %struct.MMX* %8045, i32 0, i32 0
  %8047 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %8046, i64 0, i64 0
  %8048 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %8047, i32 0, i32 1
  %8049 = bitcast %union.vec64_t* %8048 to %struct.uint64v1_t*
  %8050 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %8049, i32 0, i32 0
  %MM0.i940 = getelementptr inbounds [1 x i64], [1 x i64]* %8050, i64 0, i64 0
  %8051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %8052 = getelementptr inbounds %struct.MMX, %struct.MMX* %8051, i32 0, i32 0
  %8053 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %8052, i64 0, i64 1
  %8054 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %8053, i32 0, i32 1
  %8055 = bitcast %union.vec64_t* %8054 to %struct.uint64v1_t*
  %8056 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %8055, i32 0, i32 0
  %MM1.i941 = getelementptr inbounds [1 x i64], [1 x i64]* %8056, i64 0, i64 0
  %8057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %8058 = getelementptr inbounds %struct.MMX, %struct.MMX* %8057, i32 0, i32 0
  %8059 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %8058, i64 0, i64 2
  %8060 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %8059, i32 0, i32 1
  %8061 = bitcast %union.vec64_t* %8060 to %struct.uint64v1_t*
  %8062 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %8061, i32 0, i32 0
  %MM2.i942 = getelementptr inbounds [1 x i64], [1 x i64]* %8062, i64 0, i64 0
  %8063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %8064 = getelementptr inbounds %struct.MMX, %struct.MMX* %8063, i32 0, i32 0
  %8065 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %8064, i64 0, i64 3
  %8066 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %8065, i32 0, i32 1
  %8067 = bitcast %union.vec64_t* %8066 to %struct.uint64v1_t*
  %8068 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %8067, i32 0, i32 0
  %MM3.i943 = getelementptr inbounds [1 x i64], [1 x i64]* %8068, i64 0, i64 0
  %8069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %8070 = getelementptr inbounds %struct.MMX, %struct.MMX* %8069, i32 0, i32 0
  %8071 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %8070, i64 0, i64 4
  %8072 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %8071, i32 0, i32 1
  %8073 = bitcast %union.vec64_t* %8072 to %struct.uint64v1_t*
  %8074 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %8073, i32 0, i32 0
  %MM4.i944 = getelementptr inbounds [1 x i64], [1 x i64]* %8074, i64 0, i64 0
  %8075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %8076 = getelementptr inbounds %struct.MMX, %struct.MMX* %8075, i32 0, i32 0
  %8077 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %8076, i64 0, i64 5
  %8078 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %8077, i32 0, i32 1
  %8079 = bitcast %union.vec64_t* %8078 to %struct.uint64v1_t*
  %8080 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %8079, i32 0, i32 0
  %MM5.i945 = getelementptr inbounds [1 x i64], [1 x i64]* %8080, i64 0, i64 0
  %8081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %8082 = getelementptr inbounds %struct.MMX, %struct.MMX* %8081, i32 0, i32 0
  %8083 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %8082, i64 0, i64 6
  %8084 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %8083, i32 0, i32 1
  %8085 = bitcast %union.vec64_t* %8084 to %struct.uint64v1_t*
  %8086 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %8085, i32 0, i32 0
  %MM6.i946 = getelementptr inbounds [1 x i64], [1 x i64]* %8086, i64 0, i64 0
  %8087 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %8088 = getelementptr inbounds %struct.MMX, %struct.MMX* %8087, i32 0, i32 0
  %8089 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %8088, i64 0, i64 7
  %8090 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %8089, i32 0, i32 1
  %8091 = bitcast %union.vec64_t* %8090 to %struct.uint64v1_t*
  %8092 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %8091, i32 0, i32 0
  %MM7.i947 = getelementptr inbounds [1 x i64], [1 x i64]* %8092, i64 0, i64 0
  %8093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF.i948 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %8093, i32 0, i32 5
  %8094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF.i949 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %8094, i32 0, i32 1
  %8095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF.i950 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %8095, i32 0, i32 11
  %8096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF.i951 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %8096, i32 0, i32 13
  %8097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF.i952 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %8097, i32 0, i32 3
  %8098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF.i953 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %8098, i32 0, i32 9
  %8099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF.i954 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %8099, i32 0, i32 7
  store i64* @DR0, i64** %_DR0.i806, align 8, !noalias !2480
  store i64* @DR1, i64** %_DR1.i807, align 8, !noalias !2480
  store i64* @DR2, i64** %_DR2.i808, align 8, !noalias !2480
  store i64* @DR3, i64** %_DR3.i809, align 8, !noalias !2480
  store i64* @DR4, i64** %_DR4.i810, align 8, !noalias !2480
  store i64* @DR5, i64** %_DR5.i811, align 8, !noalias !2480
  store i64* @DR6, i64** %_DR6.i812, align 8, !noalias !2480
  store i64* @DR7, i64** %_DR7.i813, align 8, !noalias !2480
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0.i814, align 8, !noalias !2480
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1.i815, align 8, !noalias !2480
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2.i816, align 8, !noalias !2480
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3.i817, align 8, !noalias !2480
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4.i818, align 8, !noalias !2480
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8.i819, align 8, !noalias !2480
  %8100 = bitcast %"class.std::bitset"* %YMM0.i900 to double*
  %8101 = load double, double* %8100, !alias.scope !2484, !noalias !2485
  %8102 = load i64, i64* %RSP.i881, !alias.scope !2484, !noalias !2485
  %8103 = load %struct.Memory*, %struct.Memory** %MEMORY.i805, !noalias !2480
  %8104 = inttoptr i64 %8102 to i64*
  %8105 = load i64, i64* %8104
  store i64 %8105, i64* %PC.i820, !alias.scope !2484, !noalias !2485
  %8106 = add i64 %8102, 8
  store i64 %8106, i64* %RSP.i881, !alias.scope !2484, !noalias !2485
  %8107 = call double @cos(double %8101)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0.i900, !alias.scope !2484, !noalias !2485
  %8108 = bitcast %"class.std::bitset"* %YMM0.i900 to double*
  store double %8107, double* %8108, !alias.scope !2484, !noalias !2485
  %8109 = load %struct.Memory*, %struct.Memory** %MEMORY.i805, !noalias !2480
  %8110 = bitcast %struct.State** %state.i796 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8110)
  %8111 = bitcast i64* %curr_pc.i797 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8111)
  %8112 = bitcast %struct.Memory** %memory.i798 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8112)
  call void @llvm.lifetime.end(i64 1, i8* %BRANCH_TAKEN.i799)
  %8113 = bitcast i64* %SS_BASE.i800 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8113)
  %8114 = bitcast i64* %ES_BASE.i801 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8114)
  %8115 = bitcast i64* %DS_BASE.i802 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8115)
  %8116 = bitcast i64* %CS_BASE.i803 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8116)
  %8117 = bitcast %struct.State** %STATE.i804 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8117)
  %8118 = bitcast %struct.Memory** %MEMORY.i805 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8118)
  %8119 = bitcast i64** %_DR0.i806 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8119)
  %8120 = bitcast i64** %_DR1.i807 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8120)
  %8121 = bitcast i64** %_DR2.i808 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8121)
  %8122 = bitcast i64** %_DR3.i809 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8122)
  %8123 = bitcast i64** %_DR4.i810 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8123)
  %8124 = bitcast i64** %_DR5.i811 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8124)
  %8125 = bitcast i64** %_DR6.i812 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8125)
  %8126 = bitcast i64** %_DR7.i813 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8126)
  %8127 = bitcast i64** %CR0.i814 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8127)
  %8128 = bitcast i64** %CR1.i815 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8128)
  %8129 = bitcast i64** %CR2.i816 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8129)
  %8130 = bitcast i64** %CR3.i817 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8130)
  %8131 = bitcast i64** %CR4.i818 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8131)
  %8132 = bitcast i64** %CR8.i819 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8132)
  %8133 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %8134 = load i64, i64* %RBP
  %8135 = sub i64 %8134, 264
  %8136 = load i64, i64* %PC
  %8137 = add i64 %8136, 8
  store i64 %8137, i64* %PC
  %8138 = inttoptr i64 %8135 to double*
  %8139 = load double, double* %8138
  %8140 = bitcast i8* %8133 to double*
  store double %8139, double* %8140, align 1, !tbaa !2432
  %8141 = getelementptr inbounds i8, i8* %8133, i64 8
  %8142 = bitcast i8* %8141 to double*
  store double 0.000000e+00, double* %8142, align 1, !tbaa !2432
  %8143 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %8144 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %8145 = bitcast %union.vec128_t* %XMM0 to i8*
  %8146 = load i64, i64* %PC
  %8147 = add i64 %8146, 4
  store i64 %8147, i64* %PC
  %8148 = bitcast i8* %8144 to double*
  %8149 = load double, double* %8148, align 1
  %8150 = getelementptr inbounds i8, i8* %8144, i64 8
  %8151 = bitcast i8* %8150 to i64*
  %8152 = load i64, i64* %8151, align 1
  %8153 = bitcast i8* %8145 to double*
  %8154 = load double, double* %8153, align 1
  %8155 = fadd double %8149, %8154
  %8156 = bitcast i8* %8143 to double*
  store double %8155, double* %8156, align 1, !tbaa !2432
  %8157 = getelementptr inbounds i8, i8* %8143, i64 8
  %8158 = bitcast i8* %8157 to i64*
  store i64 %8152, i64* %8158, align 1, !tbaa !2432
  %8159 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %8160 = load i64, i64* %RBP
  %8161 = sub i64 %8160, 224
  %8162 = load i64, i64* %PC
  %8163 = add i64 %8162, 8
  store i64 %8163, i64* %PC
  %8164 = inttoptr i64 %8161 to double*
  %8165 = load double, double* %8164
  %8166 = bitcast i8* %8159 to double*
  store double %8165, double* %8166, align 1, !tbaa !2432
  %8167 = getelementptr inbounds i8, i8* %8159, i64 8
  %8168 = bitcast i8* %8167 to double*
  store double 0.000000e+00, double* %8168, align 1, !tbaa !2432
  %8169 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %8170 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %8171 = bitcast %union.vec128_t* %XMM0 to i8*
  %8172 = load i64, i64* %PC
  %8173 = add i64 %8172, 4
  store i64 %8173, i64* %PC
  %8174 = bitcast i8* %8170 to double*
  %8175 = load double, double* %8174, align 1
  %8176 = getelementptr inbounds i8, i8* %8170, i64 8
  %8177 = bitcast i8* %8176 to i64*
  %8178 = load i64, i64* %8177, align 1
  %8179 = bitcast i8* %8171 to double*
  %8180 = load double, double* %8179, align 1
  %8181 = fsub double %8175, %8180
  %8182 = bitcast i8* %8169 to double*
  store double %8181, double* %8182, align 1, !tbaa !2432
  %8183 = getelementptr inbounds i8, i8* %8169, i64 8
  %8184 = bitcast i8* %8183 to i64*
  store i64 %8178, i64* %8184, align 1, !tbaa !2432
  %8185 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %8186 = load i64, i64* %RBP
  %8187 = sub i64 %8186, 256
  %8188 = load i64, i64* %PC
  %8189 = add i64 %8188, 8
  store i64 %8189, i64* %PC
  %8190 = inttoptr i64 %8187 to double*
  %8191 = load double, double* %8190
  %8192 = bitcast i8* %8185 to double*
  store double %8191, double* %8192, align 1, !tbaa !2432
  %8193 = getelementptr inbounds i8, i8* %8185, i64 8
  %8194 = bitcast i8* %8193 to double*
  store double 0.000000e+00, double* %8194, align 1, !tbaa !2432
  %8195 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %8196 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %8197 = bitcast %union.vec128_t* %XMM1 to i8*
  %8198 = load i64, i64* %PC
  %8199 = add i64 %8198, 4
  store i64 %8199, i64* %PC
  %8200 = bitcast i8* %8196 to double*
  %8201 = load double, double* %8200, align 1
  %8202 = getelementptr inbounds i8, i8* %8196, i64 8
  %8203 = bitcast i8* %8202 to i64*
  %8204 = load i64, i64* %8203, align 1
  %8205 = bitcast i8* %8197 to double*
  %8206 = load double, double* %8205, align 1
  %8207 = fdiv double %8201, %8206
  %8208 = bitcast i8* %8195 to double*
  store double %8207, double* %8208, align 1, !tbaa !2432
  %8209 = getelementptr inbounds i8, i8* %8195, i64 8
  %8210 = bitcast i8* %8209 to i64*
  store i64 %8204, i64* %8210, align 1, !tbaa !2432
  %8211 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %8212 = bitcast %union.vec128_t* %XMM2 to i8*
  %8213 = load i64, i64* %PC
  %8214 = add i64 %8213, 3
  store i64 %8214, i64* %PC
  %8215 = bitcast i8* %8212 to <2 x i32>*
  %8216 = load <2 x i32>, <2 x i32>* %8215, align 1
  %8217 = getelementptr inbounds i8, i8* %8212, i64 8
  %8218 = bitcast i8* %8217 to <2 x i32>*
  %8219 = load <2 x i32>, <2 x i32>* %8218, align 1
  %8220 = extractelement <2 x i32> %8216, i32 0
  %8221 = bitcast i8* %8211 to i32*
  store i32 %8220, i32* %8221, align 1, !tbaa !2460
  %8222 = extractelement <2 x i32> %8216, i32 1
  %8223 = getelementptr inbounds i8, i8* %8211, i64 4
  %8224 = bitcast i8* %8223 to i32*
  store i32 %8222, i32* %8224, align 1, !tbaa !2460
  %8225 = extractelement <2 x i32> %8219, i32 0
  %8226 = getelementptr inbounds i8, i8* %8211, i64 8
  %8227 = bitcast i8* %8226 to i32*
  store i32 %8225, i32* %8227, align 1, !tbaa !2460
  %8228 = extractelement <2 x i32> %8219, i32 1
  %8229 = getelementptr inbounds i8, i8* %8211, i64 12
  %8230 = bitcast i8* %8229 to i32*
  store i32 %8228, i32* %8230, align 1, !tbaa !2460
  %8231 = load i64, i64* %PC
  %8232 = sub i64 %8231, 2622
  %8233 = load i64, i64* %PC
  %8234 = add i64 %8233, 5
  %8235 = load i64, i64* %PC
  %8236 = add i64 %8235, 5
  store i64 %8236, i64* %PC
  %8237 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %8238 = load i64, i64* %8237, align 8, !tbaa !2428
  %8239 = add i64 %8238, -8
  %8240 = inttoptr i64 %8239 to i64*
  store i64 %8234, i64* %8240
  store i64 %8239, i64* %8237, align 8, !tbaa !2428
  %8241 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8232, i64* %8241, align 8, !tbaa !2428
  %8242 = load i64, i64* %PC
  %8243 = bitcast %struct.State** %state.i637 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8243)
  %8244 = bitcast i64* %curr_pc.i638 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8244)
  %8245 = bitcast %struct.Memory** %memory.i639 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8245)
  call void @llvm.lifetime.start(i64 1, i8* %BRANCH_TAKEN.i640)
  %8246 = bitcast i64* %SS_BASE.i641 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8246)
  %8247 = bitcast i64* %ES_BASE.i642 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8247)
  %8248 = bitcast i64* %DS_BASE.i643 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8248)
  %8249 = bitcast i64* %CS_BASE.i644 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8249)
  %8250 = bitcast %struct.State** %STATE.i645 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8250)
  %8251 = bitcast %struct.Memory** %MEMORY.i646 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8251)
  %8252 = bitcast i64** %_DR0.i647 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8252)
  %8253 = bitcast i64** %_DR1.i648 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8253)
  %8254 = bitcast i64** %_DR2.i649 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8254)
  %8255 = bitcast i64** %_DR3.i650 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8255)
  %8256 = bitcast i64** %_DR4.i651 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8256)
  %8257 = bitcast i64** %_DR5.i652 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8257)
  %8258 = bitcast i64** %_DR6.i653 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8258)
  %8259 = bitcast i64** %_DR7.i654 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8259)
  %8260 = bitcast i64** %CR0.i655 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8260)
  %8261 = bitcast i64** %CR1.i656 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8261)
  %8262 = bitcast i64** %CR2.i657 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8262)
  %8263 = bitcast i64** %CR3.i658 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8263)
  %8264 = bitcast i64** %CR4.i659 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8264)
  %8265 = bitcast i64** %CR8.i660 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8265)
  store %struct.State* %0, %struct.State** %state.i637, align 8, !noalias !2486
  store i64 %8242, i64* %curr_pc.i638, align 8, !noalias !2486
  store %struct.Memory* %8109, %struct.Memory** %memory.i639, align 8, !noalias !2486
  store i8 0, i8* %BRANCH_TAKEN.i640, align 1, !noalias !2486
  store i64 0, i64* %SS_BASE.i641, align 8, !noalias !2486
  store i64 0, i64* %ES_BASE.i642, align 8, !noalias !2486
  store i64 0, i64* %DS_BASE.i643, align 8, !noalias !2486
  store i64 0, i64* %CS_BASE.i644, align 8, !noalias !2486
  store %struct.State* %0, %struct.State** %STATE.i645, align 8, !noalias !2486
  store %struct.Memory* %8109, %struct.Memory** %MEMORY.i646, align 8, !noalias !2486
  %8266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8267 = getelementptr inbounds %struct.GPR, %struct.GPR* %8266, i32 0, i32 33
  %8268 = getelementptr inbounds %struct.Reg, %struct.Reg* %8267, i32 0, i32 0
  %PC.i661 = bitcast %union.anon* %8268 to i64*
  store i64 %8242, i64* %PC.i661, align 8, !alias.scope !2490, !noalias !2491
  %8269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8270 = getelementptr inbounds %struct.GPR, %struct.GPR* %8269, i32 0, i32 1
  %8271 = getelementptr inbounds %struct.Reg, %struct.Reg* %8270, i32 0, i32 0
  %8272 = bitcast %union.anon* %8271 to %struct.anon.2*
  %AH.i662 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8272, i32 0, i32 1
  %8273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8274 = getelementptr inbounds %struct.GPR, %struct.GPR* %8273, i32 0, i32 3
  %8275 = getelementptr inbounds %struct.Reg, %struct.Reg* %8274, i32 0, i32 0
  %8276 = bitcast %union.anon* %8275 to %struct.anon.2*
  %BH.i663 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8276, i32 0, i32 1
  %8277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8278 = getelementptr inbounds %struct.GPR, %struct.GPR* %8277, i32 0, i32 5
  %8279 = getelementptr inbounds %struct.Reg, %struct.Reg* %8278, i32 0, i32 0
  %8280 = bitcast %union.anon* %8279 to %struct.anon.2*
  %CH.i664 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8280, i32 0, i32 1
  %8281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8282 = getelementptr inbounds %struct.GPR, %struct.GPR* %8281, i32 0, i32 7
  %8283 = getelementptr inbounds %struct.Reg, %struct.Reg* %8282, i32 0, i32 0
  %8284 = bitcast %union.anon* %8283 to %struct.anon.2*
  %DH.i665 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8284, i32 0, i32 1
  %8285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8286 = getelementptr inbounds %struct.GPR, %struct.GPR* %8285, i32 0, i32 1
  %8287 = getelementptr inbounds %struct.Reg, %struct.Reg* %8286, i32 0, i32 0
  %8288 = bitcast %union.anon* %8287 to %struct.anon.2*
  %AL.i666 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8288, i32 0, i32 0
  %8289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8290 = getelementptr inbounds %struct.GPR, %struct.GPR* %8289, i32 0, i32 3
  %8291 = getelementptr inbounds %struct.Reg, %struct.Reg* %8290, i32 0, i32 0
  %8292 = bitcast %union.anon* %8291 to %struct.anon.2*
  %BL.i667 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8292, i32 0, i32 0
  %8293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8294 = getelementptr inbounds %struct.GPR, %struct.GPR* %8293, i32 0, i32 5
  %8295 = getelementptr inbounds %struct.Reg, %struct.Reg* %8294, i32 0, i32 0
  %8296 = bitcast %union.anon* %8295 to %struct.anon.2*
  %CL.i668 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8296, i32 0, i32 0
  %8297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8298 = getelementptr inbounds %struct.GPR, %struct.GPR* %8297, i32 0, i32 7
  %8299 = getelementptr inbounds %struct.Reg, %struct.Reg* %8298, i32 0, i32 0
  %8300 = bitcast %union.anon* %8299 to %struct.anon.2*
  %DL.i669 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8300, i32 0, i32 0
  %8301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8302 = getelementptr inbounds %struct.GPR, %struct.GPR* %8301, i32 0, i32 9
  %8303 = getelementptr inbounds %struct.Reg, %struct.Reg* %8302, i32 0, i32 0
  %8304 = bitcast %union.anon* %8303 to %struct.anon.2*
  %SIL.i670 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8304, i32 0, i32 0
  %8305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8306 = getelementptr inbounds %struct.GPR, %struct.GPR* %8305, i32 0, i32 11
  %8307 = getelementptr inbounds %struct.Reg, %struct.Reg* %8306, i32 0, i32 0
  %8308 = bitcast %union.anon* %8307 to %struct.anon.2*
  %DIL.i671 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8308, i32 0, i32 0
  %8309 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8310 = getelementptr inbounds %struct.GPR, %struct.GPR* %8309, i32 0, i32 13
  %8311 = getelementptr inbounds %struct.Reg, %struct.Reg* %8310, i32 0, i32 0
  %8312 = bitcast %union.anon* %8311 to %struct.anon.2*
  %SPL.i672 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8312, i32 0, i32 0
  %8313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8314 = getelementptr inbounds %struct.GPR, %struct.GPR* %8313, i32 0, i32 15
  %8315 = getelementptr inbounds %struct.Reg, %struct.Reg* %8314, i32 0, i32 0
  %8316 = bitcast %union.anon* %8315 to %struct.anon.2*
  %BPL.i673 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8316, i32 0, i32 0
  %8317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8318 = getelementptr inbounds %struct.GPR, %struct.GPR* %8317, i32 0, i32 17
  %8319 = getelementptr inbounds %struct.Reg, %struct.Reg* %8318, i32 0, i32 0
  %8320 = bitcast %union.anon* %8319 to %struct.anon.2*
  %R8B.i674 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8320, i32 0, i32 0
  %8321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8322 = getelementptr inbounds %struct.GPR, %struct.GPR* %8321, i32 0, i32 19
  %8323 = getelementptr inbounds %struct.Reg, %struct.Reg* %8322, i32 0, i32 0
  %8324 = bitcast %union.anon* %8323 to %struct.anon.2*
  %R9B.i675 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8324, i32 0, i32 0
  %8325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8326 = getelementptr inbounds %struct.GPR, %struct.GPR* %8325, i32 0, i32 21
  %8327 = getelementptr inbounds %struct.Reg, %struct.Reg* %8326, i32 0, i32 0
  %8328 = bitcast %union.anon* %8327 to %struct.anon.2*
  %R10B.i676 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8328, i32 0, i32 0
  %8329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8330 = getelementptr inbounds %struct.GPR, %struct.GPR* %8329, i32 0, i32 23
  %8331 = getelementptr inbounds %struct.Reg, %struct.Reg* %8330, i32 0, i32 0
  %8332 = bitcast %union.anon* %8331 to %struct.anon.2*
  %R11B.i677 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8332, i32 0, i32 0
  %8333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8334 = getelementptr inbounds %struct.GPR, %struct.GPR* %8333, i32 0, i32 25
  %8335 = getelementptr inbounds %struct.Reg, %struct.Reg* %8334, i32 0, i32 0
  %8336 = bitcast %union.anon* %8335 to %struct.anon.2*
  %R12B.i678 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8336, i32 0, i32 0
  %8337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8338 = getelementptr inbounds %struct.GPR, %struct.GPR* %8337, i32 0, i32 27
  %8339 = getelementptr inbounds %struct.Reg, %struct.Reg* %8338, i32 0, i32 0
  %8340 = bitcast %union.anon* %8339 to %struct.anon.2*
  %R13B.i679 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8340, i32 0, i32 0
  %8341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8342 = getelementptr inbounds %struct.GPR, %struct.GPR* %8341, i32 0, i32 29
  %8343 = getelementptr inbounds %struct.Reg, %struct.Reg* %8342, i32 0, i32 0
  %8344 = bitcast %union.anon* %8343 to %struct.anon.2*
  %R14B.i680 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8344, i32 0, i32 0
  %8345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8346 = getelementptr inbounds %struct.GPR, %struct.GPR* %8345, i32 0, i32 31
  %8347 = getelementptr inbounds %struct.Reg, %struct.Reg* %8346, i32 0, i32 0
  %8348 = bitcast %union.anon* %8347 to %struct.anon.2*
  %R15B.i681 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8348, i32 0, i32 0
  %8349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8350 = getelementptr inbounds %struct.GPR, %struct.GPR* %8349, i32 0, i32 1
  %8351 = getelementptr inbounds %struct.Reg, %struct.Reg* %8350, i32 0, i32 0
  %AX.i682 = bitcast %union.anon* %8351 to i16*
  %8352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8353 = getelementptr inbounds %struct.GPR, %struct.GPR* %8352, i32 0, i32 3
  %8354 = getelementptr inbounds %struct.Reg, %struct.Reg* %8353, i32 0, i32 0
  %BX.i683 = bitcast %union.anon* %8354 to i16*
  %8355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8356 = getelementptr inbounds %struct.GPR, %struct.GPR* %8355, i32 0, i32 5
  %8357 = getelementptr inbounds %struct.Reg, %struct.Reg* %8356, i32 0, i32 0
  %CX.i684 = bitcast %union.anon* %8357 to i16*
  %8358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8359 = getelementptr inbounds %struct.GPR, %struct.GPR* %8358, i32 0, i32 7
  %8360 = getelementptr inbounds %struct.Reg, %struct.Reg* %8359, i32 0, i32 0
  %DX.i685 = bitcast %union.anon* %8360 to i16*
  %8361 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8362 = getelementptr inbounds %struct.GPR, %struct.GPR* %8361, i32 0, i32 9
  %8363 = getelementptr inbounds %struct.Reg, %struct.Reg* %8362, i32 0, i32 0
  %SI.i686 = bitcast %union.anon* %8363 to i16*
  %8364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8365 = getelementptr inbounds %struct.GPR, %struct.GPR* %8364, i32 0, i32 11
  %8366 = getelementptr inbounds %struct.Reg, %struct.Reg* %8365, i32 0, i32 0
  %DI.i687 = bitcast %union.anon* %8366 to i16*
  %8367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8368 = getelementptr inbounds %struct.GPR, %struct.GPR* %8367, i32 0, i32 13
  %8369 = getelementptr inbounds %struct.Reg, %struct.Reg* %8368, i32 0, i32 0
  %SP.i688 = bitcast %union.anon* %8369 to i16*
  %8370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8371 = getelementptr inbounds %struct.GPR, %struct.GPR* %8370, i32 0, i32 15
  %8372 = getelementptr inbounds %struct.Reg, %struct.Reg* %8371, i32 0, i32 0
  %BP.i689 = bitcast %union.anon* %8372 to i16*
  %8373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8374 = getelementptr inbounds %struct.GPR, %struct.GPR* %8373, i32 0, i32 17
  %8375 = getelementptr inbounds %struct.Reg, %struct.Reg* %8374, i32 0, i32 0
  %R8W.i690 = bitcast %union.anon* %8375 to i16*
  %8376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8377 = getelementptr inbounds %struct.GPR, %struct.GPR* %8376, i32 0, i32 19
  %8378 = getelementptr inbounds %struct.Reg, %struct.Reg* %8377, i32 0, i32 0
  %R9W.i691 = bitcast %union.anon* %8378 to i16*
  %8379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8380 = getelementptr inbounds %struct.GPR, %struct.GPR* %8379, i32 0, i32 21
  %8381 = getelementptr inbounds %struct.Reg, %struct.Reg* %8380, i32 0, i32 0
  %R10W.i692 = bitcast %union.anon* %8381 to i16*
  %8382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8383 = getelementptr inbounds %struct.GPR, %struct.GPR* %8382, i32 0, i32 23
  %8384 = getelementptr inbounds %struct.Reg, %struct.Reg* %8383, i32 0, i32 0
  %R11W.i693 = bitcast %union.anon* %8384 to i16*
  %8385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8386 = getelementptr inbounds %struct.GPR, %struct.GPR* %8385, i32 0, i32 25
  %8387 = getelementptr inbounds %struct.Reg, %struct.Reg* %8386, i32 0, i32 0
  %R12W.i694 = bitcast %union.anon* %8387 to i16*
  %8388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8389 = getelementptr inbounds %struct.GPR, %struct.GPR* %8388, i32 0, i32 27
  %8390 = getelementptr inbounds %struct.Reg, %struct.Reg* %8389, i32 0, i32 0
  %R13W.i695 = bitcast %union.anon* %8390 to i16*
  %8391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8392 = getelementptr inbounds %struct.GPR, %struct.GPR* %8391, i32 0, i32 29
  %8393 = getelementptr inbounds %struct.Reg, %struct.Reg* %8392, i32 0, i32 0
  %R14W.i696 = bitcast %union.anon* %8393 to i16*
  %8394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8395 = getelementptr inbounds %struct.GPR, %struct.GPR* %8394, i32 0, i32 31
  %8396 = getelementptr inbounds %struct.Reg, %struct.Reg* %8395, i32 0, i32 0
  %R15W.i697 = bitcast %union.anon* %8396 to i16*
  %8397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8398 = getelementptr inbounds %struct.GPR, %struct.GPR* %8397, i32 0, i32 33
  %8399 = getelementptr inbounds %struct.Reg, %struct.Reg* %8398, i32 0, i32 0
  %IP.i698 = bitcast %union.anon* %8399 to i16*
  %8400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8401 = getelementptr inbounds %struct.GPR, %struct.GPR* %8400, i32 0, i32 1
  %8402 = getelementptr inbounds %struct.Reg, %struct.Reg* %8401, i32 0, i32 0
  %EAX.i699 = bitcast %union.anon* %8402 to i32*
  %8403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8404 = getelementptr inbounds %struct.GPR, %struct.GPR* %8403, i32 0, i32 3
  %8405 = getelementptr inbounds %struct.Reg, %struct.Reg* %8404, i32 0, i32 0
  %EBX.i700 = bitcast %union.anon* %8405 to i32*
  %8406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8407 = getelementptr inbounds %struct.GPR, %struct.GPR* %8406, i32 0, i32 5
  %8408 = getelementptr inbounds %struct.Reg, %struct.Reg* %8407, i32 0, i32 0
  %ECX.i701 = bitcast %union.anon* %8408 to i32*
  %8409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8410 = getelementptr inbounds %struct.GPR, %struct.GPR* %8409, i32 0, i32 7
  %8411 = getelementptr inbounds %struct.Reg, %struct.Reg* %8410, i32 0, i32 0
  %EDX.i702 = bitcast %union.anon* %8411 to i32*
  %8412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8413 = getelementptr inbounds %struct.GPR, %struct.GPR* %8412, i32 0, i32 9
  %8414 = getelementptr inbounds %struct.Reg, %struct.Reg* %8413, i32 0, i32 0
  %ESI.i703 = bitcast %union.anon* %8414 to i32*
  %8415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8416 = getelementptr inbounds %struct.GPR, %struct.GPR* %8415, i32 0, i32 11
  %8417 = getelementptr inbounds %struct.Reg, %struct.Reg* %8416, i32 0, i32 0
  %EDI.i704 = bitcast %union.anon* %8417 to i32*
  %8418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8419 = getelementptr inbounds %struct.GPR, %struct.GPR* %8418, i32 0, i32 13
  %8420 = getelementptr inbounds %struct.Reg, %struct.Reg* %8419, i32 0, i32 0
  %ESP.i705 = bitcast %union.anon* %8420 to i32*
  %8421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8422 = getelementptr inbounds %struct.GPR, %struct.GPR* %8421, i32 0, i32 15
  %8423 = getelementptr inbounds %struct.Reg, %struct.Reg* %8422, i32 0, i32 0
  %EBP.i706 = bitcast %union.anon* %8423 to i32*
  %8424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8425 = getelementptr inbounds %struct.GPR, %struct.GPR* %8424, i32 0, i32 33
  %8426 = getelementptr inbounds %struct.Reg, %struct.Reg* %8425, i32 0, i32 0
  %EIP.i707 = bitcast %union.anon* %8426 to i32*
  %8427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8428 = getelementptr inbounds %struct.GPR, %struct.GPR* %8427, i32 0, i32 17
  %8429 = getelementptr inbounds %struct.Reg, %struct.Reg* %8428, i32 0, i32 0
  %R8D.i708 = bitcast %union.anon* %8429 to i32*
  %8430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8431 = getelementptr inbounds %struct.GPR, %struct.GPR* %8430, i32 0, i32 19
  %8432 = getelementptr inbounds %struct.Reg, %struct.Reg* %8431, i32 0, i32 0
  %R9D.i709 = bitcast %union.anon* %8432 to i32*
  %8433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8434 = getelementptr inbounds %struct.GPR, %struct.GPR* %8433, i32 0, i32 21
  %8435 = getelementptr inbounds %struct.Reg, %struct.Reg* %8434, i32 0, i32 0
  %R10D.i710 = bitcast %union.anon* %8435 to i32*
  %8436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8437 = getelementptr inbounds %struct.GPR, %struct.GPR* %8436, i32 0, i32 23
  %8438 = getelementptr inbounds %struct.Reg, %struct.Reg* %8437, i32 0, i32 0
  %R11D.i711 = bitcast %union.anon* %8438 to i32*
  %8439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8440 = getelementptr inbounds %struct.GPR, %struct.GPR* %8439, i32 0, i32 25
  %8441 = getelementptr inbounds %struct.Reg, %struct.Reg* %8440, i32 0, i32 0
  %R12D.i712 = bitcast %union.anon* %8441 to i32*
  %8442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8443 = getelementptr inbounds %struct.GPR, %struct.GPR* %8442, i32 0, i32 27
  %8444 = getelementptr inbounds %struct.Reg, %struct.Reg* %8443, i32 0, i32 0
  %R13D.i713 = bitcast %union.anon* %8444 to i32*
  %8445 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8446 = getelementptr inbounds %struct.GPR, %struct.GPR* %8445, i32 0, i32 29
  %8447 = getelementptr inbounds %struct.Reg, %struct.Reg* %8446, i32 0, i32 0
  %R14D.i714 = bitcast %union.anon* %8447 to i32*
  %8448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8449 = getelementptr inbounds %struct.GPR, %struct.GPR* %8448, i32 0, i32 31
  %8450 = getelementptr inbounds %struct.Reg, %struct.Reg* %8449, i32 0, i32 0
  %R15D.i715 = bitcast %union.anon* %8450 to i32*
  %8451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8452 = getelementptr inbounds %struct.GPR, %struct.GPR* %8451, i32 0, i32 1
  %8453 = getelementptr inbounds %struct.Reg, %struct.Reg* %8452, i32 0, i32 0
  %RAX.i716 = bitcast %union.anon* %8453 to i64*
  %8454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8455 = getelementptr inbounds %struct.GPR, %struct.GPR* %8454, i32 0, i32 3
  %8456 = getelementptr inbounds %struct.Reg, %struct.Reg* %8455, i32 0, i32 0
  %RBX.i717 = bitcast %union.anon* %8456 to i64*
  %8457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8458 = getelementptr inbounds %struct.GPR, %struct.GPR* %8457, i32 0, i32 5
  %8459 = getelementptr inbounds %struct.Reg, %struct.Reg* %8458, i32 0, i32 0
  %RCX.i718 = bitcast %union.anon* %8459 to i64*
  %8460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8461 = getelementptr inbounds %struct.GPR, %struct.GPR* %8460, i32 0, i32 7
  %8462 = getelementptr inbounds %struct.Reg, %struct.Reg* %8461, i32 0, i32 0
  %RDX.i719 = bitcast %union.anon* %8462 to i64*
  %8463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8464 = getelementptr inbounds %struct.GPR, %struct.GPR* %8463, i32 0, i32 9
  %8465 = getelementptr inbounds %struct.Reg, %struct.Reg* %8464, i32 0, i32 0
  %RSI.i720 = bitcast %union.anon* %8465 to i64*
  %8466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8467 = getelementptr inbounds %struct.GPR, %struct.GPR* %8466, i32 0, i32 11
  %8468 = getelementptr inbounds %struct.Reg, %struct.Reg* %8467, i32 0, i32 0
  %RDI.i721 = bitcast %union.anon* %8468 to i64*
  %8469 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8470 = getelementptr inbounds %struct.GPR, %struct.GPR* %8469, i32 0, i32 13
  %8471 = getelementptr inbounds %struct.Reg, %struct.Reg* %8470, i32 0, i32 0
  %RSP.i722 = bitcast %union.anon* %8471 to i64*
  %8472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8473 = getelementptr inbounds %struct.GPR, %struct.GPR* %8472, i32 0, i32 15
  %8474 = getelementptr inbounds %struct.Reg, %struct.Reg* %8473, i32 0, i32 0
  %RBP.i723 = bitcast %union.anon* %8474 to i64*
  %8475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8476 = getelementptr inbounds %struct.GPR, %struct.GPR* %8475, i32 0, i32 17
  %8477 = getelementptr inbounds %struct.Reg, %struct.Reg* %8476, i32 0, i32 0
  %R8.i724 = bitcast %union.anon* %8477 to i64*
  %8478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8479 = getelementptr inbounds %struct.GPR, %struct.GPR* %8478, i32 0, i32 19
  %8480 = getelementptr inbounds %struct.Reg, %struct.Reg* %8479, i32 0, i32 0
  %R9.i725 = bitcast %union.anon* %8480 to i64*
  %8481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8482 = getelementptr inbounds %struct.GPR, %struct.GPR* %8481, i32 0, i32 21
  %8483 = getelementptr inbounds %struct.Reg, %struct.Reg* %8482, i32 0, i32 0
  %R10.i726 = bitcast %union.anon* %8483 to i64*
  %8484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8485 = getelementptr inbounds %struct.GPR, %struct.GPR* %8484, i32 0, i32 23
  %8486 = getelementptr inbounds %struct.Reg, %struct.Reg* %8485, i32 0, i32 0
  %R11.i727 = bitcast %union.anon* %8486 to i64*
  %8487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8488 = getelementptr inbounds %struct.GPR, %struct.GPR* %8487, i32 0, i32 25
  %8489 = getelementptr inbounds %struct.Reg, %struct.Reg* %8488, i32 0, i32 0
  %R12.i728 = bitcast %union.anon* %8489 to i64*
  %8490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8491 = getelementptr inbounds %struct.GPR, %struct.GPR* %8490, i32 0, i32 27
  %8492 = getelementptr inbounds %struct.Reg, %struct.Reg* %8491, i32 0, i32 0
  %R13.i729 = bitcast %union.anon* %8492 to i64*
  %8493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8494 = getelementptr inbounds %struct.GPR, %struct.GPR* %8493, i32 0, i32 29
  %8495 = getelementptr inbounds %struct.Reg, %struct.Reg* %8494, i32 0, i32 0
  %R14.i730 = bitcast %union.anon* %8495 to i64*
  %8496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8497 = getelementptr inbounds %struct.GPR, %struct.GPR* %8496, i32 0, i32 31
  %8498 = getelementptr inbounds %struct.Reg, %struct.Reg* %8497, i32 0, i32 0
  %R15.i731 = bitcast %union.anon* %8498 to i64*
  %8499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8500 = getelementptr inbounds %struct.GPR, %struct.GPR* %8499, i32 0, i32 33
  %8501 = getelementptr inbounds %struct.Reg, %struct.Reg* %8500, i32 0, i32 0
  %RIP.i732 = bitcast %union.anon* %8501 to i64*
  %8502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %8503 = getelementptr inbounds %struct.Segments, %struct.Segments* %8502, i32 0, i32 1
  %SS.i733 = bitcast %union.SegmentSelector* %8503 to i16*
  %8504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %8505 = getelementptr inbounds %struct.Segments, %struct.Segments* %8504, i32 0, i32 3
  %ES.i734 = bitcast %union.SegmentSelector* %8505 to i16*
  %8506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %8507 = getelementptr inbounds %struct.Segments, %struct.Segments* %8506, i32 0, i32 5
  %GS.i735 = bitcast %union.SegmentSelector* %8507 to i16*
  %8508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %8509 = getelementptr inbounds %struct.Segments, %struct.Segments* %8508, i32 0, i32 7
  %FS.i736 = bitcast %union.SegmentSelector* %8509 to i16*
  %8510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %8511 = getelementptr inbounds %struct.Segments, %struct.Segments* %8510, i32 0, i32 9
  %DS.i737 = bitcast %union.SegmentSelector* %8511 to i16*
  %8512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %8513 = getelementptr inbounds %struct.Segments, %struct.Segments* %8512, i32 0, i32 11
  %CS.i738 = bitcast %union.SegmentSelector* %8513 to i16*
  %8514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %8515 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %8514, i32 0, i32 5
  %8516 = getelementptr inbounds %struct.Reg, %struct.Reg* %8515, i32 0, i32 0
  %GS_BASE.i739 = bitcast %union.anon* %8516 to i64*
  %8517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %8518 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %8517, i32 0, i32 7
  %8519 = getelementptr inbounds %struct.Reg, %struct.Reg* %8518, i32 0, i32 0
  %FS_BASE.i740 = bitcast %union.anon* %8519 to i64*
  %8520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8521 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8520, i64 0, i64 0
  %YMM0.i741 = bitcast %union.VectorReg* %8521 to %"class.std::bitset"*
  %8522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8523 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8522, i64 0, i64 1
  %YMM1.i742 = bitcast %union.VectorReg* %8523 to %"class.std::bitset"*
  %8524 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8525 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8524, i64 0, i64 2
  %YMM2.i743 = bitcast %union.VectorReg* %8525 to %"class.std::bitset"*
  %8526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8527 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8526, i64 0, i64 3
  %YMM3.i744 = bitcast %union.VectorReg* %8527 to %"class.std::bitset"*
  %8528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8529 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8528, i64 0, i64 4
  %YMM4.i745 = bitcast %union.VectorReg* %8529 to %"class.std::bitset"*
  %8530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8531 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8530, i64 0, i64 5
  %YMM5.i746 = bitcast %union.VectorReg* %8531 to %"class.std::bitset"*
  %8532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8533 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8532, i64 0, i64 6
  %YMM6.i747 = bitcast %union.VectorReg* %8533 to %"class.std::bitset"*
  %8534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8535 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8534, i64 0, i64 7
  %YMM7.i748 = bitcast %union.VectorReg* %8535 to %"class.std::bitset"*
  %8536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8537 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8536, i64 0, i64 8
  %YMM8.i749 = bitcast %union.VectorReg* %8537 to %"class.std::bitset"*
  %8538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8539 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8538, i64 0, i64 9
  %YMM9.i750 = bitcast %union.VectorReg* %8539 to %"class.std::bitset"*
  %8540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8541 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8540, i64 0, i64 10
  %YMM10.i751 = bitcast %union.VectorReg* %8541 to %"class.std::bitset"*
  %8542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8543 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8542, i64 0, i64 11
  %YMM11.i752 = bitcast %union.VectorReg* %8543 to %"class.std::bitset"*
  %8544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8545 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8544, i64 0, i64 12
  %YMM12.i753 = bitcast %union.VectorReg* %8545 to %"class.std::bitset"*
  %8546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8547 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8546, i64 0, i64 13
  %YMM13.i754 = bitcast %union.VectorReg* %8547 to %"class.std::bitset"*
  %8548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8549 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8548, i64 0, i64 14
  %YMM14.i755 = bitcast %union.VectorReg* %8549 to %"class.std::bitset"*
  %8550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8551 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8550, i64 0, i64 15
  %YMM15.i756 = bitcast %union.VectorReg* %8551 to %"class.std::bitset"*
  %8552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8553 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8552, i64 0, i64 0
  %XMM0.i757 = bitcast %union.VectorReg* %8553 to %union.vec128_t*
  %8554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8555 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8554, i64 0, i64 1
  %XMM1.i758 = bitcast %union.VectorReg* %8555 to %union.vec128_t*
  %8556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8557 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8556, i64 0, i64 2
  %XMM2.i759 = bitcast %union.VectorReg* %8557 to %union.vec128_t*
  %8558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8559 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8558, i64 0, i64 3
  %XMM3.i760 = bitcast %union.VectorReg* %8559 to %union.vec128_t*
  %8560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8561 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8560, i64 0, i64 4
  %XMM4.i761 = bitcast %union.VectorReg* %8561 to %union.vec128_t*
  %8562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8563 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8562, i64 0, i64 5
  %XMM5.i762 = bitcast %union.VectorReg* %8563 to %union.vec128_t*
  %8564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8565 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8564, i64 0, i64 6
  %XMM6.i763 = bitcast %union.VectorReg* %8565 to %union.vec128_t*
  %8566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8567 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8566, i64 0, i64 7
  %XMM7.i764 = bitcast %union.VectorReg* %8567 to %union.vec128_t*
  %8568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8569 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8568, i64 0, i64 8
  %XMM8.i765 = bitcast %union.VectorReg* %8569 to %union.vec128_t*
  %8570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8571 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8570, i64 0, i64 9
  %XMM9.i766 = bitcast %union.VectorReg* %8571 to %union.vec128_t*
  %8572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8573 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8572, i64 0, i64 10
  %XMM10.i767 = bitcast %union.VectorReg* %8573 to %union.vec128_t*
  %8574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8575 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8574, i64 0, i64 11
  %XMM11.i768 = bitcast %union.VectorReg* %8575 to %union.vec128_t*
  %8576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8577 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8576, i64 0, i64 12
  %XMM12.i769 = bitcast %union.VectorReg* %8577 to %union.vec128_t*
  %8578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8579 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8578, i64 0, i64 13
  %XMM13.i770 = bitcast %union.VectorReg* %8579 to %union.vec128_t*
  %8580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8581 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8580, i64 0, i64 14
  %XMM14.i771 = bitcast %union.VectorReg* %8581 to %union.vec128_t*
  %8582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8583 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8582, i64 0, i64 15
  %XMM15.i772 = bitcast %union.VectorReg* %8583 to %union.vec128_t*
  %8584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %8585 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %8584, i32 0, i32 0
  %8586 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %8585, i64 0, i64 0
  %ST0.i773 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %8586, i32 0, i32 1
  %8587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %8588 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %8587, i32 0, i32 0
  %8589 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %8588, i64 0, i64 1
  %ST1.i774 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %8589, i32 0, i32 1
  %8590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %8591 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %8590, i32 0, i32 0
  %8592 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %8591, i64 0, i64 2
  %ST2.i775 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %8592, i32 0, i32 1
  %8593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %8594 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %8593, i32 0, i32 0
  %8595 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %8594, i64 0, i64 3
  %ST3.i776 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %8595, i32 0, i32 1
  %8596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %8597 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %8596, i32 0, i32 0
  %8598 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %8597, i64 0, i64 4
  %ST4.i777 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %8598, i32 0, i32 1
  %8599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %8600 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %8599, i32 0, i32 0
  %8601 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %8600, i64 0, i64 5
  %ST5.i778 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %8601, i32 0, i32 1
  %8602 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %8603 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %8602, i32 0, i32 0
  %8604 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %8603, i64 0, i64 6
  %ST6.i779 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %8604, i32 0, i32 1
  %8605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %8606 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %8605, i32 0, i32 0
  %8607 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %8606, i64 0, i64 7
  %ST7.i780 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %8607, i32 0, i32 1
  %8608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %8609 = getelementptr inbounds %struct.MMX, %struct.MMX* %8608, i32 0, i32 0
  %8610 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %8609, i64 0, i64 0
  %8611 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %8610, i32 0, i32 1
  %8612 = bitcast %union.vec64_t* %8611 to %struct.uint64v1_t*
  %8613 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %8612, i32 0, i32 0
  %MM0.i781 = getelementptr inbounds [1 x i64], [1 x i64]* %8613, i64 0, i64 0
  %8614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %8615 = getelementptr inbounds %struct.MMX, %struct.MMX* %8614, i32 0, i32 0
  %8616 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %8615, i64 0, i64 1
  %8617 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %8616, i32 0, i32 1
  %8618 = bitcast %union.vec64_t* %8617 to %struct.uint64v1_t*
  %8619 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %8618, i32 0, i32 0
  %MM1.i782 = getelementptr inbounds [1 x i64], [1 x i64]* %8619, i64 0, i64 0
  %8620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %8621 = getelementptr inbounds %struct.MMX, %struct.MMX* %8620, i32 0, i32 0
  %8622 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %8621, i64 0, i64 2
  %8623 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %8622, i32 0, i32 1
  %8624 = bitcast %union.vec64_t* %8623 to %struct.uint64v1_t*
  %8625 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %8624, i32 0, i32 0
  %MM2.i783 = getelementptr inbounds [1 x i64], [1 x i64]* %8625, i64 0, i64 0
  %8626 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %8627 = getelementptr inbounds %struct.MMX, %struct.MMX* %8626, i32 0, i32 0
  %8628 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %8627, i64 0, i64 3
  %8629 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %8628, i32 0, i32 1
  %8630 = bitcast %union.vec64_t* %8629 to %struct.uint64v1_t*
  %8631 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %8630, i32 0, i32 0
  %MM3.i784 = getelementptr inbounds [1 x i64], [1 x i64]* %8631, i64 0, i64 0
  %8632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %8633 = getelementptr inbounds %struct.MMX, %struct.MMX* %8632, i32 0, i32 0
  %8634 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %8633, i64 0, i64 4
  %8635 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %8634, i32 0, i32 1
  %8636 = bitcast %union.vec64_t* %8635 to %struct.uint64v1_t*
  %8637 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %8636, i32 0, i32 0
  %MM4.i785 = getelementptr inbounds [1 x i64], [1 x i64]* %8637, i64 0, i64 0
  %8638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %8639 = getelementptr inbounds %struct.MMX, %struct.MMX* %8638, i32 0, i32 0
  %8640 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %8639, i64 0, i64 5
  %8641 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %8640, i32 0, i32 1
  %8642 = bitcast %union.vec64_t* %8641 to %struct.uint64v1_t*
  %8643 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %8642, i32 0, i32 0
  %MM5.i786 = getelementptr inbounds [1 x i64], [1 x i64]* %8643, i64 0, i64 0
  %8644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %8645 = getelementptr inbounds %struct.MMX, %struct.MMX* %8644, i32 0, i32 0
  %8646 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %8645, i64 0, i64 6
  %8647 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %8646, i32 0, i32 1
  %8648 = bitcast %union.vec64_t* %8647 to %struct.uint64v1_t*
  %8649 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %8648, i32 0, i32 0
  %MM6.i787 = getelementptr inbounds [1 x i64], [1 x i64]* %8649, i64 0, i64 0
  %8650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %8651 = getelementptr inbounds %struct.MMX, %struct.MMX* %8650, i32 0, i32 0
  %8652 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %8651, i64 0, i64 7
  %8653 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %8652, i32 0, i32 1
  %8654 = bitcast %union.vec64_t* %8653 to %struct.uint64v1_t*
  %8655 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %8654, i32 0, i32 0
  %MM7.i788 = getelementptr inbounds [1 x i64], [1 x i64]* %8655, i64 0, i64 0
  %8656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF.i789 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %8656, i32 0, i32 5
  %8657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF.i790 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %8657, i32 0, i32 1
  %8658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF.i791 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %8658, i32 0, i32 11
  %8659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF.i792 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %8659, i32 0, i32 13
  %8660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF.i793 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %8660, i32 0, i32 3
  %8661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF.i794 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %8661, i32 0, i32 9
  %8662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF.i795 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %8662, i32 0, i32 7
  store i64* @DR0, i64** %_DR0.i647, align 8, !noalias !2486
  store i64* @DR1, i64** %_DR1.i648, align 8, !noalias !2486
  store i64* @DR2, i64** %_DR2.i649, align 8, !noalias !2486
  store i64* @DR3, i64** %_DR3.i650, align 8, !noalias !2486
  store i64* @DR4, i64** %_DR4.i651, align 8, !noalias !2486
  store i64* @DR5, i64** %_DR5.i652, align 8, !noalias !2486
  store i64* @DR6, i64** %_DR6.i653, align 8, !noalias !2486
  store i64* @DR7, i64** %_DR7.i654, align 8, !noalias !2486
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0.i655, align 8, !noalias !2486
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1.i656, align 8, !noalias !2486
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2.i657, align 8, !noalias !2486
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3.i658, align 8, !noalias !2486
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4.i659, align 8, !noalias !2486
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8.i660, align 8, !noalias !2486
  %8663 = bitcast %"class.std::bitset"* %YMM0.i741 to double*
  %8664 = load double, double* %8663, !alias.scope !2490, !noalias !2491
  %8665 = load i64, i64* %RSP.i722, !alias.scope !2490, !noalias !2491
  %8666 = load %struct.Memory*, %struct.Memory** %MEMORY.i646, !noalias !2486
  %8667 = inttoptr i64 %8665 to i64*
  %8668 = load i64, i64* %8667
  store i64 %8668, i64* %PC.i661, !alias.scope !2490, !noalias !2491
  %8669 = add i64 %8665, 8
  store i64 %8669, i64* %RSP.i722, !alias.scope !2490, !noalias !2491
  %8670 = call double @atan(double %8664)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0.i741, !alias.scope !2490, !noalias !2491
  %8671 = bitcast %"class.std::bitset"* %YMM0.i741 to double*
  store double %8670, double* %8671, !alias.scope !2490, !noalias !2491
  %8672 = load %struct.Memory*, %struct.Memory** %MEMORY.i646, !noalias !2486
  %8673 = bitcast %struct.State** %state.i637 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8673)
  %8674 = bitcast i64* %curr_pc.i638 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8674)
  %8675 = bitcast %struct.Memory** %memory.i639 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8675)
  call void @llvm.lifetime.end(i64 1, i8* %BRANCH_TAKEN.i640)
  %8676 = bitcast i64* %SS_BASE.i641 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8676)
  %8677 = bitcast i64* %ES_BASE.i642 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8677)
  %8678 = bitcast i64* %DS_BASE.i643 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8678)
  %8679 = bitcast i64* %CS_BASE.i644 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8679)
  %8680 = bitcast %struct.State** %STATE.i645 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8680)
  %8681 = bitcast %struct.Memory** %MEMORY.i646 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8681)
  %8682 = bitcast i64** %_DR0.i647 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8682)
  %8683 = bitcast i64** %_DR1.i648 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8683)
  %8684 = bitcast i64** %_DR2.i649 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8684)
  %8685 = bitcast i64** %_DR3.i650 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8685)
  %8686 = bitcast i64** %_DR4.i651 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8686)
  %8687 = bitcast i64** %_DR5.i652 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8687)
  %8688 = bitcast i64** %_DR6.i653 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8688)
  %8689 = bitcast i64** %_DR7.i654 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8689)
  %8690 = bitcast i64** %CR0.i655 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8690)
  %8691 = bitcast i64** %CR1.i656 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8691)
  %8692 = bitcast i64** %CR2.i657 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8692)
  %8693 = bitcast i64** %CR3.i658 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8693)
  %8694 = bitcast i64** %CR4.i659 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8694)
  %8695 = bitcast i64** %CR8.i660 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8695)
  %8696 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %8697 = load i64, i64* %PC
  %8698 = add i64 %8697, 8
  store i64 %8698, i64* %PC
  %8699 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_401900__rodata_type* @seg_401900__rodata to i64), i64 40) to double*)
  %8700 = bitcast i8* %8696 to double*
  store double %8699, double* %8700, align 1, !tbaa !2432
  %8701 = getelementptr inbounds i8, i8* %8696, i64 8
  %8702 = bitcast i8* %8701 to double*
  store double 0.000000e+00, double* %8702, align 1, !tbaa !2432
  %8703 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %8704 = load i64, i64* %RBP
  %8705 = sub i64 %8704, 240
  %8706 = load i64, i64* %PC
  %8707 = add i64 %8706, 8
  store i64 %8707, i64* %PC
  %8708 = inttoptr i64 %8705 to double*
  %8709 = load double, double* %8708
  %8710 = bitcast i8* %8703 to double*
  store double %8709, double* %8710, align 1, !tbaa !2432
  %8711 = getelementptr inbounds i8, i8* %8703, i64 8
  %8712 = bitcast i8* %8711 to double*
  store double 0.000000e+00, double* %8712, align 1, !tbaa !2432
  %8713 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %8714 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %8715 = bitcast %union.vec128_t* %XMM0 to i8*
  %8716 = load i64, i64* %PC
  %8717 = add i64 %8716, 4
  store i64 %8717, i64* %PC
  %8718 = bitcast i8* %8714 to double*
  %8719 = load double, double* %8718, align 1
  %8720 = getelementptr inbounds i8, i8* %8714, i64 8
  %8721 = bitcast i8* %8720 to i64*
  %8722 = load i64, i64* %8721, align 1
  %8723 = bitcast i8* %8715 to double*
  %8724 = load double, double* %8723, align 1
  %8725 = fmul double %8719, %8724
  %8726 = bitcast i8* %8713 to double*
  store double %8725, double* %8726, align 1, !tbaa !2432
  %8727 = getelementptr inbounds i8, i8* %8713, i64 8
  %8728 = bitcast i8* %8727 to i64*
  store i64 %8722, i64* %8728, align 1, !tbaa !2432
  %8729 = load i64, i64* %RBP
  %8730 = sub i64 %8729, 144
  %8731 = bitcast %union.vec128_t* %XMM2 to i8*
  %8732 = load i64, i64* %PC
  %8733 = add i64 %8732, 8
  store i64 %8733, i64* %PC
  %8734 = bitcast i8* %8731 to double*
  %8735 = load double, double* %8734, align 1
  %8736 = inttoptr i64 %8730 to double*
  store double %8735, double* %8736
  %8737 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %8738 = load i64, i64* %PC
  %8739 = add i64 %8738, 9
  store i64 %8739, i64* %PC
  %8740 = load double, double* bitcast (%T_type* @T to double*)
  %8741 = bitcast i8* %8737 to double*
  store double %8740, double* %8741, align 1, !tbaa !2432
  %8742 = getelementptr inbounds i8, i8* %8737, i64 8
  %8743 = bitcast i8* %8742 to double*
  store double 0.000000e+00, double* %8743, align 1, !tbaa !2432
  %8744 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %8745 = load i64, i64* %PC
  %8746 = add i64 %8745, 9
  store i64 %8746, i64* %PC
  %8747 = load double, double* bitcast (%T2_type* @T2 to double*)
  %8748 = bitcast i8* %8744 to double*
  store double %8747, double* %8748, align 1, !tbaa !2432
  %8749 = getelementptr inbounds i8, i8* %8744, i64 8
  %8750 = bitcast i8* %8749 to double*
  store double 0.000000e+00, double* %8750, align 1, !tbaa !2432
  %8751 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %8752 = load i64, i64* %RBP
  %8753 = sub i64 %8752, 152
  %8754 = load i64, i64* %PC
  %8755 = add i64 %8754, 8
  store i64 %8755, i64* %PC
  %8756 = inttoptr i64 %8753 to double*
  %8757 = load double, double* %8756
  %8758 = bitcast i8* %8751 to double*
  store double %8757, double* %8758, align 1, !tbaa !2432
  %8759 = getelementptr inbounds i8, i8* %8751, i64 8
  %8760 = bitcast i8* %8759 to double*
  store double 0.000000e+00, double* %8760, align 1, !tbaa !2432
  %8761 = load i64, i64* %RBP
  %8762 = sub i64 %8761, 272
  %8763 = bitcast %union.vec128_t* %XMM0 to i8*
  %8764 = load i64, i64* %PC
  %8765 = add i64 %8764, 8
  store i64 %8765, i64* %PC
  %8766 = bitcast i8* %8763 to double*
  %8767 = load double, double* %8766, align 1
  %8768 = inttoptr i64 %8762 to double*
  store double %8767, double* %8768
  %8769 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %8770 = bitcast %union.vec128_t* %XMM3 to i8*
  %8771 = load i64, i64* %PC
  %8772 = add i64 %8771, 3
  store i64 %8772, i64* %PC
  %8773 = bitcast i8* %8770 to <2 x i32>*
  %8774 = load <2 x i32>, <2 x i32>* %8773, align 1
  %8775 = getelementptr inbounds i8, i8* %8770, i64 8
  %8776 = bitcast i8* %8775 to <2 x i32>*
  %8777 = load <2 x i32>, <2 x i32>* %8776, align 1
  %8778 = extractelement <2 x i32> %8774, i32 0
  %8779 = bitcast i8* %8769 to i32*
  store i32 %8778, i32* %8779, align 1, !tbaa !2460
  %8780 = extractelement <2 x i32> %8774, i32 1
  %8781 = getelementptr inbounds i8, i8* %8769, i64 4
  %8782 = bitcast i8* %8781 to i32*
  store i32 %8780, i32* %8782, align 1, !tbaa !2460
  %8783 = extractelement <2 x i32> %8777, i32 0
  %8784 = getelementptr inbounds i8, i8* %8769, i64 8
  %8785 = bitcast i8* %8784 to i32*
  store i32 %8783, i32* %8785, align 1, !tbaa !2460
  %8786 = extractelement <2 x i32> %8777, i32 1
  %8787 = getelementptr inbounds i8, i8* %8769, i64 12
  %8788 = bitcast i8* %8787 to i32*
  store i32 %8786, i32* %8788, align 1, !tbaa !2460
  %8789 = load i64, i64* %RBP
  %8790 = sub i64 %8789, 280
  %8791 = bitcast %union.vec128_t* %XMM1 to i8*
  %8792 = load i64, i64* %PC
  %8793 = add i64 %8792, 8
  store i64 %8793, i64* %PC
  %8794 = bitcast i8* %8791 to double*
  %8795 = load double, double* %8794, align 1
  %8796 = inttoptr i64 %8790 to double*
  store double %8795, double* %8796
  %8797 = load i64, i64* %RBP
  %8798 = sub i64 %8797, 288
  %8799 = bitcast %union.vec128_t* %XMM2 to i8*
  %8800 = load i64, i64* %PC
  %8801 = add i64 %8800, 8
  store i64 %8801, i64* %PC
  %8802 = bitcast i8* %8799 to double*
  %8803 = load double, double* %8802, align 1
  %8804 = inttoptr i64 %8798 to double*
  store double %8803, double* %8804
  %8805 = load i64, i64* %PC
  %8806 = sub i64 %8805, 2596
  %8807 = load i64, i64* %PC
  %8808 = add i64 %8807, 5
  %8809 = load i64, i64* %PC
  %8810 = add i64 %8809, 5
  store i64 %8810, i64* %PC
  %8811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %8812 = load i64, i64* %8811, align 8, !tbaa !2428
  %8813 = add i64 %8812, -8
  %8814 = inttoptr i64 %8813 to i64*
  store i64 %8808, i64* %8814
  store i64 %8813, i64* %8811, align 8, !tbaa !2428
  %8815 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8806, i64* %8815, align 8, !tbaa !2428
  %8816 = load i64, i64* %PC
  %8817 = bitcast %struct.State** %state.i478 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8817)
  %8818 = bitcast i64* %curr_pc.i479 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8818)
  %8819 = bitcast %struct.Memory** %memory.i480 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8819)
  call void @llvm.lifetime.start(i64 1, i8* %BRANCH_TAKEN.i481)
  %8820 = bitcast i64* %SS_BASE.i482 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8820)
  %8821 = bitcast i64* %ES_BASE.i483 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8821)
  %8822 = bitcast i64* %DS_BASE.i484 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8822)
  %8823 = bitcast i64* %CS_BASE.i485 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8823)
  %8824 = bitcast %struct.State** %STATE.i486 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8824)
  %8825 = bitcast %struct.Memory** %MEMORY.i487 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8825)
  %8826 = bitcast i64** %_DR0.i488 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8826)
  %8827 = bitcast i64** %_DR1.i489 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8827)
  %8828 = bitcast i64** %_DR2.i490 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8828)
  %8829 = bitcast i64** %_DR3.i491 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8829)
  %8830 = bitcast i64** %_DR4.i492 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8830)
  %8831 = bitcast i64** %_DR5.i493 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8831)
  %8832 = bitcast i64** %_DR6.i494 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8832)
  %8833 = bitcast i64** %_DR7.i495 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8833)
  %8834 = bitcast i64** %CR0.i496 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8834)
  %8835 = bitcast i64** %CR1.i497 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8835)
  %8836 = bitcast i64** %CR2.i498 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8836)
  %8837 = bitcast i64** %CR3.i499 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8837)
  %8838 = bitcast i64** %CR4.i500 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8838)
  %8839 = bitcast i64** %CR8.i501 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8839)
  store %struct.State* %0, %struct.State** %state.i478, align 8, !noalias !2492
  store i64 %8816, i64* %curr_pc.i479, align 8, !noalias !2492
  store %struct.Memory* %8672, %struct.Memory** %memory.i480, align 8, !noalias !2492
  store i8 0, i8* %BRANCH_TAKEN.i481, align 1, !noalias !2492
  store i64 0, i64* %SS_BASE.i482, align 8, !noalias !2492
  store i64 0, i64* %ES_BASE.i483, align 8, !noalias !2492
  store i64 0, i64* %DS_BASE.i484, align 8, !noalias !2492
  store i64 0, i64* %CS_BASE.i485, align 8, !noalias !2492
  store %struct.State* %0, %struct.State** %STATE.i486, align 8, !noalias !2492
  store %struct.Memory* %8672, %struct.Memory** %MEMORY.i487, align 8, !noalias !2492
  %8840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8841 = getelementptr inbounds %struct.GPR, %struct.GPR* %8840, i32 0, i32 33
  %8842 = getelementptr inbounds %struct.Reg, %struct.Reg* %8841, i32 0, i32 0
  %PC.i502 = bitcast %union.anon* %8842 to i64*
  store i64 %8816, i64* %PC.i502, align 8, !alias.scope !2496, !noalias !2497
  %8843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8844 = getelementptr inbounds %struct.GPR, %struct.GPR* %8843, i32 0, i32 1
  %8845 = getelementptr inbounds %struct.Reg, %struct.Reg* %8844, i32 0, i32 0
  %8846 = bitcast %union.anon* %8845 to %struct.anon.2*
  %AH.i503 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8846, i32 0, i32 1
  %8847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8848 = getelementptr inbounds %struct.GPR, %struct.GPR* %8847, i32 0, i32 3
  %8849 = getelementptr inbounds %struct.Reg, %struct.Reg* %8848, i32 0, i32 0
  %8850 = bitcast %union.anon* %8849 to %struct.anon.2*
  %BH.i504 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8850, i32 0, i32 1
  %8851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8852 = getelementptr inbounds %struct.GPR, %struct.GPR* %8851, i32 0, i32 5
  %8853 = getelementptr inbounds %struct.Reg, %struct.Reg* %8852, i32 0, i32 0
  %8854 = bitcast %union.anon* %8853 to %struct.anon.2*
  %CH.i505 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8854, i32 0, i32 1
  %8855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8856 = getelementptr inbounds %struct.GPR, %struct.GPR* %8855, i32 0, i32 7
  %8857 = getelementptr inbounds %struct.Reg, %struct.Reg* %8856, i32 0, i32 0
  %8858 = bitcast %union.anon* %8857 to %struct.anon.2*
  %DH.i506 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8858, i32 0, i32 1
  %8859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8860 = getelementptr inbounds %struct.GPR, %struct.GPR* %8859, i32 0, i32 1
  %8861 = getelementptr inbounds %struct.Reg, %struct.Reg* %8860, i32 0, i32 0
  %8862 = bitcast %union.anon* %8861 to %struct.anon.2*
  %AL.i507 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8862, i32 0, i32 0
  %8863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8864 = getelementptr inbounds %struct.GPR, %struct.GPR* %8863, i32 0, i32 3
  %8865 = getelementptr inbounds %struct.Reg, %struct.Reg* %8864, i32 0, i32 0
  %8866 = bitcast %union.anon* %8865 to %struct.anon.2*
  %BL.i508 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8866, i32 0, i32 0
  %8867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8868 = getelementptr inbounds %struct.GPR, %struct.GPR* %8867, i32 0, i32 5
  %8869 = getelementptr inbounds %struct.Reg, %struct.Reg* %8868, i32 0, i32 0
  %8870 = bitcast %union.anon* %8869 to %struct.anon.2*
  %CL.i509 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8870, i32 0, i32 0
  %8871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8872 = getelementptr inbounds %struct.GPR, %struct.GPR* %8871, i32 0, i32 7
  %8873 = getelementptr inbounds %struct.Reg, %struct.Reg* %8872, i32 0, i32 0
  %8874 = bitcast %union.anon* %8873 to %struct.anon.2*
  %DL.i510 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8874, i32 0, i32 0
  %8875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8876 = getelementptr inbounds %struct.GPR, %struct.GPR* %8875, i32 0, i32 9
  %8877 = getelementptr inbounds %struct.Reg, %struct.Reg* %8876, i32 0, i32 0
  %8878 = bitcast %union.anon* %8877 to %struct.anon.2*
  %SIL.i511 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8878, i32 0, i32 0
  %8879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8880 = getelementptr inbounds %struct.GPR, %struct.GPR* %8879, i32 0, i32 11
  %8881 = getelementptr inbounds %struct.Reg, %struct.Reg* %8880, i32 0, i32 0
  %8882 = bitcast %union.anon* %8881 to %struct.anon.2*
  %DIL.i512 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8882, i32 0, i32 0
  %8883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8884 = getelementptr inbounds %struct.GPR, %struct.GPR* %8883, i32 0, i32 13
  %8885 = getelementptr inbounds %struct.Reg, %struct.Reg* %8884, i32 0, i32 0
  %8886 = bitcast %union.anon* %8885 to %struct.anon.2*
  %SPL.i513 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8886, i32 0, i32 0
  %8887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8888 = getelementptr inbounds %struct.GPR, %struct.GPR* %8887, i32 0, i32 15
  %8889 = getelementptr inbounds %struct.Reg, %struct.Reg* %8888, i32 0, i32 0
  %8890 = bitcast %union.anon* %8889 to %struct.anon.2*
  %BPL.i514 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8890, i32 0, i32 0
  %8891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8892 = getelementptr inbounds %struct.GPR, %struct.GPR* %8891, i32 0, i32 17
  %8893 = getelementptr inbounds %struct.Reg, %struct.Reg* %8892, i32 0, i32 0
  %8894 = bitcast %union.anon* %8893 to %struct.anon.2*
  %R8B.i515 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8894, i32 0, i32 0
  %8895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8896 = getelementptr inbounds %struct.GPR, %struct.GPR* %8895, i32 0, i32 19
  %8897 = getelementptr inbounds %struct.Reg, %struct.Reg* %8896, i32 0, i32 0
  %8898 = bitcast %union.anon* %8897 to %struct.anon.2*
  %R9B.i516 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8898, i32 0, i32 0
  %8899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8900 = getelementptr inbounds %struct.GPR, %struct.GPR* %8899, i32 0, i32 21
  %8901 = getelementptr inbounds %struct.Reg, %struct.Reg* %8900, i32 0, i32 0
  %8902 = bitcast %union.anon* %8901 to %struct.anon.2*
  %R10B.i517 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8902, i32 0, i32 0
  %8903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8904 = getelementptr inbounds %struct.GPR, %struct.GPR* %8903, i32 0, i32 23
  %8905 = getelementptr inbounds %struct.Reg, %struct.Reg* %8904, i32 0, i32 0
  %8906 = bitcast %union.anon* %8905 to %struct.anon.2*
  %R11B.i518 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8906, i32 0, i32 0
  %8907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8908 = getelementptr inbounds %struct.GPR, %struct.GPR* %8907, i32 0, i32 25
  %8909 = getelementptr inbounds %struct.Reg, %struct.Reg* %8908, i32 0, i32 0
  %8910 = bitcast %union.anon* %8909 to %struct.anon.2*
  %R12B.i519 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8910, i32 0, i32 0
  %8911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8912 = getelementptr inbounds %struct.GPR, %struct.GPR* %8911, i32 0, i32 27
  %8913 = getelementptr inbounds %struct.Reg, %struct.Reg* %8912, i32 0, i32 0
  %8914 = bitcast %union.anon* %8913 to %struct.anon.2*
  %R13B.i520 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8914, i32 0, i32 0
  %8915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8916 = getelementptr inbounds %struct.GPR, %struct.GPR* %8915, i32 0, i32 29
  %8917 = getelementptr inbounds %struct.Reg, %struct.Reg* %8916, i32 0, i32 0
  %8918 = bitcast %union.anon* %8917 to %struct.anon.2*
  %R14B.i521 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8918, i32 0, i32 0
  %8919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8920 = getelementptr inbounds %struct.GPR, %struct.GPR* %8919, i32 0, i32 31
  %8921 = getelementptr inbounds %struct.Reg, %struct.Reg* %8920, i32 0, i32 0
  %8922 = bitcast %union.anon* %8921 to %struct.anon.2*
  %R15B.i522 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8922, i32 0, i32 0
  %8923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8924 = getelementptr inbounds %struct.GPR, %struct.GPR* %8923, i32 0, i32 1
  %8925 = getelementptr inbounds %struct.Reg, %struct.Reg* %8924, i32 0, i32 0
  %AX.i523 = bitcast %union.anon* %8925 to i16*
  %8926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8927 = getelementptr inbounds %struct.GPR, %struct.GPR* %8926, i32 0, i32 3
  %8928 = getelementptr inbounds %struct.Reg, %struct.Reg* %8927, i32 0, i32 0
  %BX.i524 = bitcast %union.anon* %8928 to i16*
  %8929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8930 = getelementptr inbounds %struct.GPR, %struct.GPR* %8929, i32 0, i32 5
  %8931 = getelementptr inbounds %struct.Reg, %struct.Reg* %8930, i32 0, i32 0
  %CX.i525 = bitcast %union.anon* %8931 to i16*
  %8932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8933 = getelementptr inbounds %struct.GPR, %struct.GPR* %8932, i32 0, i32 7
  %8934 = getelementptr inbounds %struct.Reg, %struct.Reg* %8933, i32 0, i32 0
  %DX.i526 = bitcast %union.anon* %8934 to i16*
  %8935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8936 = getelementptr inbounds %struct.GPR, %struct.GPR* %8935, i32 0, i32 9
  %8937 = getelementptr inbounds %struct.Reg, %struct.Reg* %8936, i32 0, i32 0
  %SI.i527 = bitcast %union.anon* %8937 to i16*
  %8938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8939 = getelementptr inbounds %struct.GPR, %struct.GPR* %8938, i32 0, i32 11
  %8940 = getelementptr inbounds %struct.Reg, %struct.Reg* %8939, i32 0, i32 0
  %DI.i528 = bitcast %union.anon* %8940 to i16*
  %8941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8942 = getelementptr inbounds %struct.GPR, %struct.GPR* %8941, i32 0, i32 13
  %8943 = getelementptr inbounds %struct.Reg, %struct.Reg* %8942, i32 0, i32 0
  %SP.i529 = bitcast %union.anon* %8943 to i16*
  %8944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8945 = getelementptr inbounds %struct.GPR, %struct.GPR* %8944, i32 0, i32 15
  %8946 = getelementptr inbounds %struct.Reg, %struct.Reg* %8945, i32 0, i32 0
  %BP.i530 = bitcast %union.anon* %8946 to i16*
  %8947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8948 = getelementptr inbounds %struct.GPR, %struct.GPR* %8947, i32 0, i32 17
  %8949 = getelementptr inbounds %struct.Reg, %struct.Reg* %8948, i32 0, i32 0
  %R8W.i531 = bitcast %union.anon* %8949 to i16*
  %8950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8951 = getelementptr inbounds %struct.GPR, %struct.GPR* %8950, i32 0, i32 19
  %8952 = getelementptr inbounds %struct.Reg, %struct.Reg* %8951, i32 0, i32 0
  %R9W.i532 = bitcast %union.anon* %8952 to i16*
  %8953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8954 = getelementptr inbounds %struct.GPR, %struct.GPR* %8953, i32 0, i32 21
  %8955 = getelementptr inbounds %struct.Reg, %struct.Reg* %8954, i32 0, i32 0
  %R10W.i533 = bitcast %union.anon* %8955 to i16*
  %8956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8957 = getelementptr inbounds %struct.GPR, %struct.GPR* %8956, i32 0, i32 23
  %8958 = getelementptr inbounds %struct.Reg, %struct.Reg* %8957, i32 0, i32 0
  %R11W.i534 = bitcast %union.anon* %8958 to i16*
  %8959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8960 = getelementptr inbounds %struct.GPR, %struct.GPR* %8959, i32 0, i32 25
  %8961 = getelementptr inbounds %struct.Reg, %struct.Reg* %8960, i32 0, i32 0
  %R12W.i535 = bitcast %union.anon* %8961 to i16*
  %8962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8963 = getelementptr inbounds %struct.GPR, %struct.GPR* %8962, i32 0, i32 27
  %8964 = getelementptr inbounds %struct.Reg, %struct.Reg* %8963, i32 0, i32 0
  %R13W.i536 = bitcast %union.anon* %8964 to i16*
  %8965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8966 = getelementptr inbounds %struct.GPR, %struct.GPR* %8965, i32 0, i32 29
  %8967 = getelementptr inbounds %struct.Reg, %struct.Reg* %8966, i32 0, i32 0
  %R14W.i537 = bitcast %union.anon* %8967 to i16*
  %8968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8969 = getelementptr inbounds %struct.GPR, %struct.GPR* %8968, i32 0, i32 31
  %8970 = getelementptr inbounds %struct.Reg, %struct.Reg* %8969, i32 0, i32 0
  %R15W.i538 = bitcast %union.anon* %8970 to i16*
  %8971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8972 = getelementptr inbounds %struct.GPR, %struct.GPR* %8971, i32 0, i32 33
  %8973 = getelementptr inbounds %struct.Reg, %struct.Reg* %8972, i32 0, i32 0
  %IP.i539 = bitcast %union.anon* %8973 to i16*
  %8974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8975 = getelementptr inbounds %struct.GPR, %struct.GPR* %8974, i32 0, i32 1
  %8976 = getelementptr inbounds %struct.Reg, %struct.Reg* %8975, i32 0, i32 0
  %EAX.i540 = bitcast %union.anon* %8976 to i32*
  %8977 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8978 = getelementptr inbounds %struct.GPR, %struct.GPR* %8977, i32 0, i32 3
  %8979 = getelementptr inbounds %struct.Reg, %struct.Reg* %8978, i32 0, i32 0
  %EBX.i541 = bitcast %union.anon* %8979 to i32*
  %8980 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8981 = getelementptr inbounds %struct.GPR, %struct.GPR* %8980, i32 0, i32 5
  %8982 = getelementptr inbounds %struct.Reg, %struct.Reg* %8981, i32 0, i32 0
  %ECX.i542 = bitcast %union.anon* %8982 to i32*
  %8983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8984 = getelementptr inbounds %struct.GPR, %struct.GPR* %8983, i32 0, i32 7
  %8985 = getelementptr inbounds %struct.Reg, %struct.Reg* %8984, i32 0, i32 0
  %EDX.i543 = bitcast %union.anon* %8985 to i32*
  %8986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8987 = getelementptr inbounds %struct.GPR, %struct.GPR* %8986, i32 0, i32 9
  %8988 = getelementptr inbounds %struct.Reg, %struct.Reg* %8987, i32 0, i32 0
  %ESI.i544 = bitcast %union.anon* %8988 to i32*
  %8989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8990 = getelementptr inbounds %struct.GPR, %struct.GPR* %8989, i32 0, i32 11
  %8991 = getelementptr inbounds %struct.Reg, %struct.Reg* %8990, i32 0, i32 0
  %EDI.i545 = bitcast %union.anon* %8991 to i32*
  %8992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8993 = getelementptr inbounds %struct.GPR, %struct.GPR* %8992, i32 0, i32 13
  %8994 = getelementptr inbounds %struct.Reg, %struct.Reg* %8993, i32 0, i32 0
  %ESP.i546 = bitcast %union.anon* %8994 to i32*
  %8995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8996 = getelementptr inbounds %struct.GPR, %struct.GPR* %8995, i32 0, i32 15
  %8997 = getelementptr inbounds %struct.Reg, %struct.Reg* %8996, i32 0, i32 0
  %EBP.i547 = bitcast %union.anon* %8997 to i32*
  %8998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8999 = getelementptr inbounds %struct.GPR, %struct.GPR* %8998, i32 0, i32 33
  %9000 = getelementptr inbounds %struct.Reg, %struct.Reg* %8999, i32 0, i32 0
  %EIP.i548 = bitcast %union.anon* %9000 to i32*
  %9001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9002 = getelementptr inbounds %struct.GPR, %struct.GPR* %9001, i32 0, i32 17
  %9003 = getelementptr inbounds %struct.Reg, %struct.Reg* %9002, i32 0, i32 0
  %R8D.i549 = bitcast %union.anon* %9003 to i32*
  %9004 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9005 = getelementptr inbounds %struct.GPR, %struct.GPR* %9004, i32 0, i32 19
  %9006 = getelementptr inbounds %struct.Reg, %struct.Reg* %9005, i32 0, i32 0
  %R9D.i550 = bitcast %union.anon* %9006 to i32*
  %9007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9008 = getelementptr inbounds %struct.GPR, %struct.GPR* %9007, i32 0, i32 21
  %9009 = getelementptr inbounds %struct.Reg, %struct.Reg* %9008, i32 0, i32 0
  %R10D.i551 = bitcast %union.anon* %9009 to i32*
  %9010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9011 = getelementptr inbounds %struct.GPR, %struct.GPR* %9010, i32 0, i32 23
  %9012 = getelementptr inbounds %struct.Reg, %struct.Reg* %9011, i32 0, i32 0
  %R11D.i552 = bitcast %union.anon* %9012 to i32*
  %9013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9014 = getelementptr inbounds %struct.GPR, %struct.GPR* %9013, i32 0, i32 25
  %9015 = getelementptr inbounds %struct.Reg, %struct.Reg* %9014, i32 0, i32 0
  %R12D.i553 = bitcast %union.anon* %9015 to i32*
  %9016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9017 = getelementptr inbounds %struct.GPR, %struct.GPR* %9016, i32 0, i32 27
  %9018 = getelementptr inbounds %struct.Reg, %struct.Reg* %9017, i32 0, i32 0
  %R13D.i554 = bitcast %union.anon* %9018 to i32*
  %9019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9020 = getelementptr inbounds %struct.GPR, %struct.GPR* %9019, i32 0, i32 29
  %9021 = getelementptr inbounds %struct.Reg, %struct.Reg* %9020, i32 0, i32 0
  %R14D.i555 = bitcast %union.anon* %9021 to i32*
  %9022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9023 = getelementptr inbounds %struct.GPR, %struct.GPR* %9022, i32 0, i32 31
  %9024 = getelementptr inbounds %struct.Reg, %struct.Reg* %9023, i32 0, i32 0
  %R15D.i556 = bitcast %union.anon* %9024 to i32*
  %9025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9026 = getelementptr inbounds %struct.GPR, %struct.GPR* %9025, i32 0, i32 1
  %9027 = getelementptr inbounds %struct.Reg, %struct.Reg* %9026, i32 0, i32 0
  %RAX.i557 = bitcast %union.anon* %9027 to i64*
  %9028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9029 = getelementptr inbounds %struct.GPR, %struct.GPR* %9028, i32 0, i32 3
  %9030 = getelementptr inbounds %struct.Reg, %struct.Reg* %9029, i32 0, i32 0
  %RBX.i558 = bitcast %union.anon* %9030 to i64*
  %9031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9032 = getelementptr inbounds %struct.GPR, %struct.GPR* %9031, i32 0, i32 5
  %9033 = getelementptr inbounds %struct.Reg, %struct.Reg* %9032, i32 0, i32 0
  %RCX.i559 = bitcast %union.anon* %9033 to i64*
  %9034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9035 = getelementptr inbounds %struct.GPR, %struct.GPR* %9034, i32 0, i32 7
  %9036 = getelementptr inbounds %struct.Reg, %struct.Reg* %9035, i32 0, i32 0
  %RDX.i560 = bitcast %union.anon* %9036 to i64*
  %9037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9038 = getelementptr inbounds %struct.GPR, %struct.GPR* %9037, i32 0, i32 9
  %9039 = getelementptr inbounds %struct.Reg, %struct.Reg* %9038, i32 0, i32 0
  %RSI.i561 = bitcast %union.anon* %9039 to i64*
  %9040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9041 = getelementptr inbounds %struct.GPR, %struct.GPR* %9040, i32 0, i32 11
  %9042 = getelementptr inbounds %struct.Reg, %struct.Reg* %9041, i32 0, i32 0
  %RDI.i562 = bitcast %union.anon* %9042 to i64*
  %9043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9044 = getelementptr inbounds %struct.GPR, %struct.GPR* %9043, i32 0, i32 13
  %9045 = getelementptr inbounds %struct.Reg, %struct.Reg* %9044, i32 0, i32 0
  %RSP.i563 = bitcast %union.anon* %9045 to i64*
  %9046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9047 = getelementptr inbounds %struct.GPR, %struct.GPR* %9046, i32 0, i32 15
  %9048 = getelementptr inbounds %struct.Reg, %struct.Reg* %9047, i32 0, i32 0
  %RBP.i564 = bitcast %union.anon* %9048 to i64*
  %9049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9050 = getelementptr inbounds %struct.GPR, %struct.GPR* %9049, i32 0, i32 17
  %9051 = getelementptr inbounds %struct.Reg, %struct.Reg* %9050, i32 0, i32 0
  %R8.i565 = bitcast %union.anon* %9051 to i64*
  %9052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9053 = getelementptr inbounds %struct.GPR, %struct.GPR* %9052, i32 0, i32 19
  %9054 = getelementptr inbounds %struct.Reg, %struct.Reg* %9053, i32 0, i32 0
  %R9.i566 = bitcast %union.anon* %9054 to i64*
  %9055 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9056 = getelementptr inbounds %struct.GPR, %struct.GPR* %9055, i32 0, i32 21
  %9057 = getelementptr inbounds %struct.Reg, %struct.Reg* %9056, i32 0, i32 0
  %R10.i567 = bitcast %union.anon* %9057 to i64*
  %9058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9059 = getelementptr inbounds %struct.GPR, %struct.GPR* %9058, i32 0, i32 23
  %9060 = getelementptr inbounds %struct.Reg, %struct.Reg* %9059, i32 0, i32 0
  %R11.i568 = bitcast %union.anon* %9060 to i64*
  %9061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9062 = getelementptr inbounds %struct.GPR, %struct.GPR* %9061, i32 0, i32 25
  %9063 = getelementptr inbounds %struct.Reg, %struct.Reg* %9062, i32 0, i32 0
  %R12.i569 = bitcast %union.anon* %9063 to i64*
  %9064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9065 = getelementptr inbounds %struct.GPR, %struct.GPR* %9064, i32 0, i32 27
  %9066 = getelementptr inbounds %struct.Reg, %struct.Reg* %9065, i32 0, i32 0
  %R13.i570 = bitcast %union.anon* %9066 to i64*
  %9067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9068 = getelementptr inbounds %struct.GPR, %struct.GPR* %9067, i32 0, i32 29
  %9069 = getelementptr inbounds %struct.Reg, %struct.Reg* %9068, i32 0, i32 0
  %R14.i571 = bitcast %union.anon* %9069 to i64*
  %9070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9071 = getelementptr inbounds %struct.GPR, %struct.GPR* %9070, i32 0, i32 31
  %9072 = getelementptr inbounds %struct.Reg, %struct.Reg* %9071, i32 0, i32 0
  %R15.i572 = bitcast %union.anon* %9072 to i64*
  %9073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9074 = getelementptr inbounds %struct.GPR, %struct.GPR* %9073, i32 0, i32 33
  %9075 = getelementptr inbounds %struct.Reg, %struct.Reg* %9074, i32 0, i32 0
  %RIP.i573 = bitcast %union.anon* %9075 to i64*
  %9076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %9077 = getelementptr inbounds %struct.Segments, %struct.Segments* %9076, i32 0, i32 1
  %SS.i574 = bitcast %union.SegmentSelector* %9077 to i16*
  %9078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %9079 = getelementptr inbounds %struct.Segments, %struct.Segments* %9078, i32 0, i32 3
  %ES.i575 = bitcast %union.SegmentSelector* %9079 to i16*
  %9080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %9081 = getelementptr inbounds %struct.Segments, %struct.Segments* %9080, i32 0, i32 5
  %GS.i576 = bitcast %union.SegmentSelector* %9081 to i16*
  %9082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %9083 = getelementptr inbounds %struct.Segments, %struct.Segments* %9082, i32 0, i32 7
  %FS.i577 = bitcast %union.SegmentSelector* %9083 to i16*
  %9084 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %9085 = getelementptr inbounds %struct.Segments, %struct.Segments* %9084, i32 0, i32 9
  %DS.i578 = bitcast %union.SegmentSelector* %9085 to i16*
  %9086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %9087 = getelementptr inbounds %struct.Segments, %struct.Segments* %9086, i32 0, i32 11
  %CS.i579 = bitcast %union.SegmentSelector* %9087 to i16*
  %9088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %9089 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %9088, i32 0, i32 5
  %9090 = getelementptr inbounds %struct.Reg, %struct.Reg* %9089, i32 0, i32 0
  %GS_BASE.i580 = bitcast %union.anon* %9090 to i64*
  %9091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %9092 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %9091, i32 0, i32 7
  %9093 = getelementptr inbounds %struct.Reg, %struct.Reg* %9092, i32 0, i32 0
  %FS_BASE.i581 = bitcast %union.anon* %9093 to i64*
  %9094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9095 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9094, i64 0, i64 0
  %YMM0.i582 = bitcast %union.VectorReg* %9095 to %"class.std::bitset"*
  %9096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9097 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9096, i64 0, i64 1
  %YMM1.i583 = bitcast %union.VectorReg* %9097 to %"class.std::bitset"*
  %9098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9099 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9098, i64 0, i64 2
  %YMM2.i584 = bitcast %union.VectorReg* %9099 to %"class.std::bitset"*
  %9100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9101 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9100, i64 0, i64 3
  %YMM3.i585 = bitcast %union.VectorReg* %9101 to %"class.std::bitset"*
  %9102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9103 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9102, i64 0, i64 4
  %YMM4.i586 = bitcast %union.VectorReg* %9103 to %"class.std::bitset"*
  %9104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9105 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9104, i64 0, i64 5
  %YMM5.i587 = bitcast %union.VectorReg* %9105 to %"class.std::bitset"*
  %9106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9107 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9106, i64 0, i64 6
  %YMM6.i588 = bitcast %union.VectorReg* %9107 to %"class.std::bitset"*
  %9108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9109 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9108, i64 0, i64 7
  %YMM7.i589 = bitcast %union.VectorReg* %9109 to %"class.std::bitset"*
  %9110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9111 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9110, i64 0, i64 8
  %YMM8.i590 = bitcast %union.VectorReg* %9111 to %"class.std::bitset"*
  %9112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9113 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9112, i64 0, i64 9
  %YMM9.i591 = bitcast %union.VectorReg* %9113 to %"class.std::bitset"*
  %9114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9115 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9114, i64 0, i64 10
  %YMM10.i592 = bitcast %union.VectorReg* %9115 to %"class.std::bitset"*
  %9116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9117 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9116, i64 0, i64 11
  %YMM11.i593 = bitcast %union.VectorReg* %9117 to %"class.std::bitset"*
  %9118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9119 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9118, i64 0, i64 12
  %YMM12.i594 = bitcast %union.VectorReg* %9119 to %"class.std::bitset"*
  %9120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9121 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9120, i64 0, i64 13
  %YMM13.i595 = bitcast %union.VectorReg* %9121 to %"class.std::bitset"*
  %9122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9123 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9122, i64 0, i64 14
  %YMM14.i596 = bitcast %union.VectorReg* %9123 to %"class.std::bitset"*
  %9124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9125 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9124, i64 0, i64 15
  %YMM15.i597 = bitcast %union.VectorReg* %9125 to %"class.std::bitset"*
  %9126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9127 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9126, i64 0, i64 0
  %XMM0.i598 = bitcast %union.VectorReg* %9127 to %union.vec128_t*
  %9128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9129 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9128, i64 0, i64 1
  %XMM1.i599 = bitcast %union.VectorReg* %9129 to %union.vec128_t*
  %9130 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9131 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9130, i64 0, i64 2
  %XMM2.i600 = bitcast %union.VectorReg* %9131 to %union.vec128_t*
  %9132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9133 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9132, i64 0, i64 3
  %XMM3.i601 = bitcast %union.VectorReg* %9133 to %union.vec128_t*
  %9134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9135 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9134, i64 0, i64 4
  %XMM4.i602 = bitcast %union.VectorReg* %9135 to %union.vec128_t*
  %9136 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9137 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9136, i64 0, i64 5
  %XMM5.i603 = bitcast %union.VectorReg* %9137 to %union.vec128_t*
  %9138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9139 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9138, i64 0, i64 6
  %XMM6.i604 = bitcast %union.VectorReg* %9139 to %union.vec128_t*
  %9140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9141 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9140, i64 0, i64 7
  %XMM7.i605 = bitcast %union.VectorReg* %9141 to %union.vec128_t*
  %9142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9143 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9142, i64 0, i64 8
  %XMM8.i606 = bitcast %union.VectorReg* %9143 to %union.vec128_t*
  %9144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9145 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9144, i64 0, i64 9
  %XMM9.i607 = bitcast %union.VectorReg* %9145 to %union.vec128_t*
  %9146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9147 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9146, i64 0, i64 10
  %XMM10.i608 = bitcast %union.VectorReg* %9147 to %union.vec128_t*
  %9148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9149 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9148, i64 0, i64 11
  %XMM11.i609 = bitcast %union.VectorReg* %9149 to %union.vec128_t*
  %9150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9151 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9150, i64 0, i64 12
  %XMM12.i610 = bitcast %union.VectorReg* %9151 to %union.vec128_t*
  %9152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9153 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9152, i64 0, i64 13
  %XMM13.i611 = bitcast %union.VectorReg* %9153 to %union.vec128_t*
  %9154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9155 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9154, i64 0, i64 14
  %XMM14.i612 = bitcast %union.VectorReg* %9155 to %union.vec128_t*
  %9156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9157 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9156, i64 0, i64 15
  %XMM15.i613 = bitcast %union.VectorReg* %9157 to %union.vec128_t*
  %9158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %9159 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %9158, i32 0, i32 0
  %9160 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %9159, i64 0, i64 0
  %ST0.i614 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %9160, i32 0, i32 1
  %9161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %9162 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %9161, i32 0, i32 0
  %9163 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %9162, i64 0, i64 1
  %ST1.i615 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %9163, i32 0, i32 1
  %9164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %9165 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %9164, i32 0, i32 0
  %9166 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %9165, i64 0, i64 2
  %ST2.i616 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %9166, i32 0, i32 1
  %9167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %9168 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %9167, i32 0, i32 0
  %9169 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %9168, i64 0, i64 3
  %ST3.i617 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %9169, i32 0, i32 1
  %9170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %9171 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %9170, i32 0, i32 0
  %9172 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %9171, i64 0, i64 4
  %ST4.i618 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %9172, i32 0, i32 1
  %9173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %9174 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %9173, i32 0, i32 0
  %9175 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %9174, i64 0, i64 5
  %ST5.i619 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %9175, i32 0, i32 1
  %9176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %9177 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %9176, i32 0, i32 0
  %9178 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %9177, i64 0, i64 6
  %ST6.i620 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %9178, i32 0, i32 1
  %9179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %9180 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %9179, i32 0, i32 0
  %9181 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %9180, i64 0, i64 7
  %ST7.i621 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %9181, i32 0, i32 1
  %9182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %9183 = getelementptr inbounds %struct.MMX, %struct.MMX* %9182, i32 0, i32 0
  %9184 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %9183, i64 0, i64 0
  %9185 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %9184, i32 0, i32 1
  %9186 = bitcast %union.vec64_t* %9185 to %struct.uint64v1_t*
  %9187 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %9186, i32 0, i32 0
  %MM0.i622 = getelementptr inbounds [1 x i64], [1 x i64]* %9187, i64 0, i64 0
  %9188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %9189 = getelementptr inbounds %struct.MMX, %struct.MMX* %9188, i32 0, i32 0
  %9190 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %9189, i64 0, i64 1
  %9191 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %9190, i32 0, i32 1
  %9192 = bitcast %union.vec64_t* %9191 to %struct.uint64v1_t*
  %9193 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %9192, i32 0, i32 0
  %MM1.i623 = getelementptr inbounds [1 x i64], [1 x i64]* %9193, i64 0, i64 0
  %9194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %9195 = getelementptr inbounds %struct.MMX, %struct.MMX* %9194, i32 0, i32 0
  %9196 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %9195, i64 0, i64 2
  %9197 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %9196, i32 0, i32 1
  %9198 = bitcast %union.vec64_t* %9197 to %struct.uint64v1_t*
  %9199 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %9198, i32 0, i32 0
  %MM2.i624 = getelementptr inbounds [1 x i64], [1 x i64]* %9199, i64 0, i64 0
  %9200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %9201 = getelementptr inbounds %struct.MMX, %struct.MMX* %9200, i32 0, i32 0
  %9202 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %9201, i64 0, i64 3
  %9203 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %9202, i32 0, i32 1
  %9204 = bitcast %union.vec64_t* %9203 to %struct.uint64v1_t*
  %9205 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %9204, i32 0, i32 0
  %MM3.i625 = getelementptr inbounds [1 x i64], [1 x i64]* %9205, i64 0, i64 0
  %9206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %9207 = getelementptr inbounds %struct.MMX, %struct.MMX* %9206, i32 0, i32 0
  %9208 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %9207, i64 0, i64 4
  %9209 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %9208, i32 0, i32 1
  %9210 = bitcast %union.vec64_t* %9209 to %struct.uint64v1_t*
  %9211 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %9210, i32 0, i32 0
  %MM4.i626 = getelementptr inbounds [1 x i64], [1 x i64]* %9211, i64 0, i64 0
  %9212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %9213 = getelementptr inbounds %struct.MMX, %struct.MMX* %9212, i32 0, i32 0
  %9214 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %9213, i64 0, i64 5
  %9215 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %9214, i32 0, i32 1
  %9216 = bitcast %union.vec64_t* %9215 to %struct.uint64v1_t*
  %9217 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %9216, i32 0, i32 0
  %MM5.i627 = getelementptr inbounds [1 x i64], [1 x i64]* %9217, i64 0, i64 0
  %9218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %9219 = getelementptr inbounds %struct.MMX, %struct.MMX* %9218, i32 0, i32 0
  %9220 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %9219, i64 0, i64 6
  %9221 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %9220, i32 0, i32 1
  %9222 = bitcast %union.vec64_t* %9221 to %struct.uint64v1_t*
  %9223 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %9222, i32 0, i32 0
  %MM6.i628 = getelementptr inbounds [1 x i64], [1 x i64]* %9223, i64 0, i64 0
  %9224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %9225 = getelementptr inbounds %struct.MMX, %struct.MMX* %9224, i32 0, i32 0
  %9226 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %9225, i64 0, i64 7
  %9227 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %9226, i32 0, i32 1
  %9228 = bitcast %union.vec64_t* %9227 to %struct.uint64v1_t*
  %9229 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %9228, i32 0, i32 0
  %MM7.i629 = getelementptr inbounds [1 x i64], [1 x i64]* %9229, i64 0, i64 0
  %9230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF.i630 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %9230, i32 0, i32 5
  %9231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF.i631 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %9231, i32 0, i32 1
  %9232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF.i632 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %9232, i32 0, i32 11
  %9233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF.i633 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %9233, i32 0, i32 13
  %9234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF.i634 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %9234, i32 0, i32 3
  %9235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF.i635 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %9235, i32 0, i32 9
  %9236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF.i636 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %9236, i32 0, i32 7
  store i64* @DR0, i64** %_DR0.i488, align 8, !noalias !2492
  store i64* @DR1, i64** %_DR1.i489, align 8, !noalias !2492
  store i64* @DR2, i64** %_DR2.i490, align 8, !noalias !2492
  store i64* @DR3, i64** %_DR3.i491, align 8, !noalias !2492
  store i64* @DR4, i64** %_DR4.i492, align 8, !noalias !2492
  store i64* @DR5, i64** %_DR5.i493, align 8, !noalias !2492
  store i64* @DR6, i64** %_DR6.i494, align 8, !noalias !2492
  store i64* @DR7, i64** %_DR7.i495, align 8, !noalias !2492
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0.i496, align 8, !noalias !2492
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1.i497, align 8, !noalias !2492
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2.i498, align 8, !noalias !2492
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3.i499, align 8, !noalias !2492
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4.i500, align 8, !noalias !2492
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8.i501, align 8, !noalias !2492
  %9237 = bitcast %"class.std::bitset"* %YMM0.i582 to double*
  %9238 = load double, double* %9237, !alias.scope !2496, !noalias !2497
  %9239 = load i64, i64* %RSP.i563, !alias.scope !2496, !noalias !2497
  %9240 = load %struct.Memory*, %struct.Memory** %MEMORY.i487, !noalias !2492
  %9241 = inttoptr i64 %9239 to i64*
  %9242 = load i64, i64* %9241
  store i64 %9242, i64* %PC.i502, !alias.scope !2496, !noalias !2497
  %9243 = add i64 %9239, 8
  store i64 %9243, i64* %RSP.i563, !alias.scope !2496, !noalias !2497
  %9244 = call double @sin(double %9238)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0.i582, !alias.scope !2496, !noalias !2497
  %9245 = bitcast %"class.std::bitset"* %YMM0.i582 to double*
  store double %9244, double* %9245, !alias.scope !2496, !noalias !2497
  %9246 = load %struct.Memory*, %struct.Memory** %MEMORY.i487, !noalias !2492
  %9247 = bitcast %struct.State** %state.i478 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %9247)
  %9248 = bitcast i64* %curr_pc.i479 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %9248)
  %9249 = bitcast %struct.Memory** %memory.i480 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %9249)
  call void @llvm.lifetime.end(i64 1, i8* %BRANCH_TAKEN.i481)
  %9250 = bitcast i64* %SS_BASE.i482 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %9250)
  %9251 = bitcast i64* %ES_BASE.i483 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %9251)
  %9252 = bitcast i64* %DS_BASE.i484 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %9252)
  %9253 = bitcast i64* %CS_BASE.i485 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %9253)
  %9254 = bitcast %struct.State** %STATE.i486 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %9254)
  %9255 = bitcast %struct.Memory** %MEMORY.i487 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %9255)
  %9256 = bitcast i64** %_DR0.i488 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %9256)
  %9257 = bitcast i64** %_DR1.i489 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %9257)
  %9258 = bitcast i64** %_DR2.i490 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %9258)
  %9259 = bitcast i64** %_DR3.i491 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %9259)
  %9260 = bitcast i64** %_DR4.i492 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %9260)
  %9261 = bitcast i64** %_DR5.i493 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %9261)
  %9262 = bitcast i64** %_DR6.i494 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %9262)
  %9263 = bitcast i64** %_DR7.i495 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %9263)
  %9264 = bitcast i64** %CR0.i496 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %9264)
  %9265 = bitcast i64** %CR1.i497 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %9265)
  %9266 = bitcast i64** %CR2.i498 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %9266)
  %9267 = bitcast i64** %CR3.i499 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %9267)
  %9268 = bitcast i64** %CR4.i500 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %9268)
  %9269 = bitcast i64** %CR8.i501 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %9269)
  %9270 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9271 = load i64, i64* %RBP
  %9272 = sub i64 %9271, 288
  %9273 = load i64, i64* %PC
  %9274 = add i64 %9273, 8
  store i64 %9274, i64* %PC
  %9275 = inttoptr i64 %9272 to double*
  %9276 = load double, double* %9275
  %9277 = bitcast i8* %9270 to double*
  store double %9276, double* %9277, align 1, !tbaa !2432
  %9278 = getelementptr inbounds i8, i8* %9270, i64 8
  %9279 = bitcast i8* %9278 to double*
  store double 0.000000e+00, double* %9279, align 1, !tbaa !2432
  %9280 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9281 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9282 = bitcast %union.vec128_t* %XMM0 to i8*
  %9283 = load i64, i64* %PC
  %9284 = add i64 %9283, 4
  store i64 %9284, i64* %PC
  %9285 = bitcast i8* %9281 to double*
  %9286 = load double, double* %9285, align 1
  %9287 = getelementptr inbounds i8, i8* %9281, i64 8
  %9288 = bitcast i8* %9287 to i64*
  %9289 = load i64, i64* %9288, align 1
  %9290 = bitcast i8* %9282 to double*
  %9291 = load double, double* %9290, align 1
  %9292 = fmul double %9286, %9291
  %9293 = bitcast i8* %9280 to double*
  store double %9292, double* %9293, align 1, !tbaa !2432
  %9294 = getelementptr inbounds i8, i8* %9280, i64 8
  %9295 = bitcast i8* %9294 to i64*
  store i64 %9289, i64* %9295, align 1, !tbaa !2432
  %9296 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9297 = load i64, i64* %RBP
  %9298 = sub i64 %9297, 152
  %9299 = load i64, i64* %PC
  %9300 = add i64 %9299, 8
  store i64 %9300, i64* %PC
  %9301 = inttoptr i64 %9298 to double*
  %9302 = load double, double* %9301
  %9303 = bitcast i8* %9296 to double*
  store double %9302, double* %9303, align 1, !tbaa !2432
  %9304 = getelementptr inbounds i8, i8* %9296, i64 8
  %9305 = bitcast i8* %9304 to double*
  store double 0.000000e+00, double* %9305, align 1, !tbaa !2432
  %9306 = load i64, i64* %RBP
  %9307 = sub i64 %9306, 296
  %9308 = bitcast %union.vec128_t* %XMM1 to i8*
  %9309 = load i64, i64* %PC
  %9310 = add i64 %9309, 8
  store i64 %9310, i64* %PC
  %9311 = bitcast i8* %9308 to double*
  %9312 = load double, double* %9311, align 1
  %9313 = inttoptr i64 %9307 to double*
  store double %9312, double* %9313
  %9314 = load i64, i64* %PC
  %9315 = sub i64 %9314, 2693
  %9316 = load i64, i64* %PC
  %9317 = add i64 %9316, 5
  %9318 = load i64, i64* %PC
  %9319 = add i64 %9318, 5
  store i64 %9319, i64* %PC
  %9320 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9321 = load i64, i64* %9320, align 8, !tbaa !2428
  %9322 = add i64 %9321, -8
  %9323 = inttoptr i64 %9322 to i64*
  store i64 %9317, i64* %9323
  store i64 %9322, i64* %9320, align 8, !tbaa !2428
  %9324 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9315, i64* %9324, align 8, !tbaa !2428
  %9325 = load i64, i64* %PC
  %9326 = bitcast %struct.State** %state.i319 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9326)
  %9327 = bitcast i64* %curr_pc.i320 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9327)
  %9328 = bitcast %struct.Memory** %memory.i321 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9328)
  call void @llvm.lifetime.start(i64 1, i8* %BRANCH_TAKEN.i322)
  %9329 = bitcast i64* %SS_BASE.i323 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9329)
  %9330 = bitcast i64* %ES_BASE.i324 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9330)
  %9331 = bitcast i64* %DS_BASE.i325 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9331)
  %9332 = bitcast i64* %CS_BASE.i326 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9332)
  %9333 = bitcast %struct.State** %STATE.i327 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9333)
  %9334 = bitcast %struct.Memory** %MEMORY.i328 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9334)
  %9335 = bitcast i64** %_DR0.i329 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9335)
  %9336 = bitcast i64** %_DR1.i330 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9336)
  %9337 = bitcast i64** %_DR2.i331 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9337)
  %9338 = bitcast i64** %_DR3.i332 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9338)
  %9339 = bitcast i64** %_DR4.i333 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9339)
  %9340 = bitcast i64** %_DR5.i334 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9340)
  %9341 = bitcast i64** %_DR6.i335 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9341)
  %9342 = bitcast i64** %_DR7.i336 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9342)
  %9343 = bitcast i64** %CR0.i337 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9343)
  %9344 = bitcast i64** %CR1.i338 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9344)
  %9345 = bitcast i64** %CR2.i339 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9345)
  %9346 = bitcast i64** %CR3.i340 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9346)
  %9347 = bitcast i64** %CR4.i341 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9347)
  %9348 = bitcast i64** %CR8.i342 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9348)
  store %struct.State* %0, %struct.State** %state.i319, align 8, !noalias !2498
  store i64 %9325, i64* %curr_pc.i320, align 8, !noalias !2498
  store %struct.Memory* %9246, %struct.Memory** %memory.i321, align 8, !noalias !2498
  store i8 0, i8* %BRANCH_TAKEN.i322, align 1, !noalias !2498
  store i64 0, i64* %SS_BASE.i323, align 8, !noalias !2498
  store i64 0, i64* %ES_BASE.i324, align 8, !noalias !2498
  store i64 0, i64* %DS_BASE.i325, align 8, !noalias !2498
  store i64 0, i64* %CS_BASE.i326, align 8, !noalias !2498
  store %struct.State* %0, %struct.State** %STATE.i327, align 8, !noalias !2498
  store %struct.Memory* %9246, %struct.Memory** %MEMORY.i328, align 8, !noalias !2498
  %9349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9350 = getelementptr inbounds %struct.GPR, %struct.GPR* %9349, i32 0, i32 33
  %9351 = getelementptr inbounds %struct.Reg, %struct.Reg* %9350, i32 0, i32 0
  %PC.i343 = bitcast %union.anon* %9351 to i64*
  store i64 %9325, i64* %PC.i343, align 8, !alias.scope !2502, !noalias !2503
  %9352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9353 = getelementptr inbounds %struct.GPR, %struct.GPR* %9352, i32 0, i32 1
  %9354 = getelementptr inbounds %struct.Reg, %struct.Reg* %9353, i32 0, i32 0
  %9355 = bitcast %union.anon* %9354 to %struct.anon.2*
  %AH.i344 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9355, i32 0, i32 1
  %9356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9357 = getelementptr inbounds %struct.GPR, %struct.GPR* %9356, i32 0, i32 3
  %9358 = getelementptr inbounds %struct.Reg, %struct.Reg* %9357, i32 0, i32 0
  %9359 = bitcast %union.anon* %9358 to %struct.anon.2*
  %BH.i345 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9359, i32 0, i32 1
  %9360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9361 = getelementptr inbounds %struct.GPR, %struct.GPR* %9360, i32 0, i32 5
  %9362 = getelementptr inbounds %struct.Reg, %struct.Reg* %9361, i32 0, i32 0
  %9363 = bitcast %union.anon* %9362 to %struct.anon.2*
  %CH.i346 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9363, i32 0, i32 1
  %9364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9365 = getelementptr inbounds %struct.GPR, %struct.GPR* %9364, i32 0, i32 7
  %9366 = getelementptr inbounds %struct.Reg, %struct.Reg* %9365, i32 0, i32 0
  %9367 = bitcast %union.anon* %9366 to %struct.anon.2*
  %DH.i347 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9367, i32 0, i32 1
  %9368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9369 = getelementptr inbounds %struct.GPR, %struct.GPR* %9368, i32 0, i32 1
  %9370 = getelementptr inbounds %struct.Reg, %struct.Reg* %9369, i32 0, i32 0
  %9371 = bitcast %union.anon* %9370 to %struct.anon.2*
  %AL.i348 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9371, i32 0, i32 0
  %9372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9373 = getelementptr inbounds %struct.GPR, %struct.GPR* %9372, i32 0, i32 3
  %9374 = getelementptr inbounds %struct.Reg, %struct.Reg* %9373, i32 0, i32 0
  %9375 = bitcast %union.anon* %9374 to %struct.anon.2*
  %BL.i349 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9375, i32 0, i32 0
  %9376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9377 = getelementptr inbounds %struct.GPR, %struct.GPR* %9376, i32 0, i32 5
  %9378 = getelementptr inbounds %struct.Reg, %struct.Reg* %9377, i32 0, i32 0
  %9379 = bitcast %union.anon* %9378 to %struct.anon.2*
  %CL.i350 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9379, i32 0, i32 0
  %9380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9381 = getelementptr inbounds %struct.GPR, %struct.GPR* %9380, i32 0, i32 7
  %9382 = getelementptr inbounds %struct.Reg, %struct.Reg* %9381, i32 0, i32 0
  %9383 = bitcast %union.anon* %9382 to %struct.anon.2*
  %DL.i351 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9383, i32 0, i32 0
  %9384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9385 = getelementptr inbounds %struct.GPR, %struct.GPR* %9384, i32 0, i32 9
  %9386 = getelementptr inbounds %struct.Reg, %struct.Reg* %9385, i32 0, i32 0
  %9387 = bitcast %union.anon* %9386 to %struct.anon.2*
  %SIL.i352 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9387, i32 0, i32 0
  %9388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9389 = getelementptr inbounds %struct.GPR, %struct.GPR* %9388, i32 0, i32 11
  %9390 = getelementptr inbounds %struct.Reg, %struct.Reg* %9389, i32 0, i32 0
  %9391 = bitcast %union.anon* %9390 to %struct.anon.2*
  %DIL.i353 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9391, i32 0, i32 0
  %9392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9393 = getelementptr inbounds %struct.GPR, %struct.GPR* %9392, i32 0, i32 13
  %9394 = getelementptr inbounds %struct.Reg, %struct.Reg* %9393, i32 0, i32 0
  %9395 = bitcast %union.anon* %9394 to %struct.anon.2*
  %SPL.i354 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9395, i32 0, i32 0
  %9396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9397 = getelementptr inbounds %struct.GPR, %struct.GPR* %9396, i32 0, i32 15
  %9398 = getelementptr inbounds %struct.Reg, %struct.Reg* %9397, i32 0, i32 0
  %9399 = bitcast %union.anon* %9398 to %struct.anon.2*
  %BPL.i355 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9399, i32 0, i32 0
  %9400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9401 = getelementptr inbounds %struct.GPR, %struct.GPR* %9400, i32 0, i32 17
  %9402 = getelementptr inbounds %struct.Reg, %struct.Reg* %9401, i32 0, i32 0
  %9403 = bitcast %union.anon* %9402 to %struct.anon.2*
  %R8B.i356 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9403, i32 0, i32 0
  %9404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9405 = getelementptr inbounds %struct.GPR, %struct.GPR* %9404, i32 0, i32 19
  %9406 = getelementptr inbounds %struct.Reg, %struct.Reg* %9405, i32 0, i32 0
  %9407 = bitcast %union.anon* %9406 to %struct.anon.2*
  %R9B.i357 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9407, i32 0, i32 0
  %9408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9409 = getelementptr inbounds %struct.GPR, %struct.GPR* %9408, i32 0, i32 21
  %9410 = getelementptr inbounds %struct.Reg, %struct.Reg* %9409, i32 0, i32 0
  %9411 = bitcast %union.anon* %9410 to %struct.anon.2*
  %R10B.i358 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9411, i32 0, i32 0
  %9412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9413 = getelementptr inbounds %struct.GPR, %struct.GPR* %9412, i32 0, i32 23
  %9414 = getelementptr inbounds %struct.Reg, %struct.Reg* %9413, i32 0, i32 0
  %9415 = bitcast %union.anon* %9414 to %struct.anon.2*
  %R11B.i359 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9415, i32 0, i32 0
  %9416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9417 = getelementptr inbounds %struct.GPR, %struct.GPR* %9416, i32 0, i32 25
  %9418 = getelementptr inbounds %struct.Reg, %struct.Reg* %9417, i32 0, i32 0
  %9419 = bitcast %union.anon* %9418 to %struct.anon.2*
  %R12B.i360 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9419, i32 0, i32 0
  %9420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9421 = getelementptr inbounds %struct.GPR, %struct.GPR* %9420, i32 0, i32 27
  %9422 = getelementptr inbounds %struct.Reg, %struct.Reg* %9421, i32 0, i32 0
  %9423 = bitcast %union.anon* %9422 to %struct.anon.2*
  %R13B.i361 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9423, i32 0, i32 0
  %9424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9425 = getelementptr inbounds %struct.GPR, %struct.GPR* %9424, i32 0, i32 29
  %9426 = getelementptr inbounds %struct.Reg, %struct.Reg* %9425, i32 0, i32 0
  %9427 = bitcast %union.anon* %9426 to %struct.anon.2*
  %R14B.i362 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9427, i32 0, i32 0
  %9428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9429 = getelementptr inbounds %struct.GPR, %struct.GPR* %9428, i32 0, i32 31
  %9430 = getelementptr inbounds %struct.Reg, %struct.Reg* %9429, i32 0, i32 0
  %9431 = bitcast %union.anon* %9430 to %struct.anon.2*
  %R15B.i363 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9431, i32 0, i32 0
  %9432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9433 = getelementptr inbounds %struct.GPR, %struct.GPR* %9432, i32 0, i32 1
  %9434 = getelementptr inbounds %struct.Reg, %struct.Reg* %9433, i32 0, i32 0
  %AX.i364 = bitcast %union.anon* %9434 to i16*
  %9435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9436 = getelementptr inbounds %struct.GPR, %struct.GPR* %9435, i32 0, i32 3
  %9437 = getelementptr inbounds %struct.Reg, %struct.Reg* %9436, i32 0, i32 0
  %BX.i365 = bitcast %union.anon* %9437 to i16*
  %9438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9439 = getelementptr inbounds %struct.GPR, %struct.GPR* %9438, i32 0, i32 5
  %9440 = getelementptr inbounds %struct.Reg, %struct.Reg* %9439, i32 0, i32 0
  %CX.i366 = bitcast %union.anon* %9440 to i16*
  %9441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9442 = getelementptr inbounds %struct.GPR, %struct.GPR* %9441, i32 0, i32 7
  %9443 = getelementptr inbounds %struct.Reg, %struct.Reg* %9442, i32 0, i32 0
  %DX.i367 = bitcast %union.anon* %9443 to i16*
  %9444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9445 = getelementptr inbounds %struct.GPR, %struct.GPR* %9444, i32 0, i32 9
  %9446 = getelementptr inbounds %struct.Reg, %struct.Reg* %9445, i32 0, i32 0
  %SI.i368 = bitcast %union.anon* %9446 to i16*
  %9447 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9448 = getelementptr inbounds %struct.GPR, %struct.GPR* %9447, i32 0, i32 11
  %9449 = getelementptr inbounds %struct.Reg, %struct.Reg* %9448, i32 0, i32 0
  %DI.i369 = bitcast %union.anon* %9449 to i16*
  %9450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9451 = getelementptr inbounds %struct.GPR, %struct.GPR* %9450, i32 0, i32 13
  %9452 = getelementptr inbounds %struct.Reg, %struct.Reg* %9451, i32 0, i32 0
  %SP.i370 = bitcast %union.anon* %9452 to i16*
  %9453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9454 = getelementptr inbounds %struct.GPR, %struct.GPR* %9453, i32 0, i32 15
  %9455 = getelementptr inbounds %struct.Reg, %struct.Reg* %9454, i32 0, i32 0
  %BP.i371 = bitcast %union.anon* %9455 to i16*
  %9456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9457 = getelementptr inbounds %struct.GPR, %struct.GPR* %9456, i32 0, i32 17
  %9458 = getelementptr inbounds %struct.Reg, %struct.Reg* %9457, i32 0, i32 0
  %R8W.i372 = bitcast %union.anon* %9458 to i16*
  %9459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9460 = getelementptr inbounds %struct.GPR, %struct.GPR* %9459, i32 0, i32 19
  %9461 = getelementptr inbounds %struct.Reg, %struct.Reg* %9460, i32 0, i32 0
  %R9W.i373 = bitcast %union.anon* %9461 to i16*
  %9462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9463 = getelementptr inbounds %struct.GPR, %struct.GPR* %9462, i32 0, i32 21
  %9464 = getelementptr inbounds %struct.Reg, %struct.Reg* %9463, i32 0, i32 0
  %R10W.i374 = bitcast %union.anon* %9464 to i16*
  %9465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9466 = getelementptr inbounds %struct.GPR, %struct.GPR* %9465, i32 0, i32 23
  %9467 = getelementptr inbounds %struct.Reg, %struct.Reg* %9466, i32 0, i32 0
  %R11W.i375 = bitcast %union.anon* %9467 to i16*
  %9468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9469 = getelementptr inbounds %struct.GPR, %struct.GPR* %9468, i32 0, i32 25
  %9470 = getelementptr inbounds %struct.Reg, %struct.Reg* %9469, i32 0, i32 0
  %R12W.i376 = bitcast %union.anon* %9470 to i16*
  %9471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9472 = getelementptr inbounds %struct.GPR, %struct.GPR* %9471, i32 0, i32 27
  %9473 = getelementptr inbounds %struct.Reg, %struct.Reg* %9472, i32 0, i32 0
  %R13W.i377 = bitcast %union.anon* %9473 to i16*
  %9474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9475 = getelementptr inbounds %struct.GPR, %struct.GPR* %9474, i32 0, i32 29
  %9476 = getelementptr inbounds %struct.Reg, %struct.Reg* %9475, i32 0, i32 0
  %R14W.i378 = bitcast %union.anon* %9476 to i16*
  %9477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9478 = getelementptr inbounds %struct.GPR, %struct.GPR* %9477, i32 0, i32 31
  %9479 = getelementptr inbounds %struct.Reg, %struct.Reg* %9478, i32 0, i32 0
  %R15W.i379 = bitcast %union.anon* %9479 to i16*
  %9480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9481 = getelementptr inbounds %struct.GPR, %struct.GPR* %9480, i32 0, i32 33
  %9482 = getelementptr inbounds %struct.Reg, %struct.Reg* %9481, i32 0, i32 0
  %IP.i380 = bitcast %union.anon* %9482 to i16*
  %9483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9484 = getelementptr inbounds %struct.GPR, %struct.GPR* %9483, i32 0, i32 1
  %9485 = getelementptr inbounds %struct.Reg, %struct.Reg* %9484, i32 0, i32 0
  %EAX.i381 = bitcast %union.anon* %9485 to i32*
  %9486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9487 = getelementptr inbounds %struct.GPR, %struct.GPR* %9486, i32 0, i32 3
  %9488 = getelementptr inbounds %struct.Reg, %struct.Reg* %9487, i32 0, i32 0
  %EBX.i382 = bitcast %union.anon* %9488 to i32*
  %9489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9490 = getelementptr inbounds %struct.GPR, %struct.GPR* %9489, i32 0, i32 5
  %9491 = getelementptr inbounds %struct.Reg, %struct.Reg* %9490, i32 0, i32 0
  %ECX.i383 = bitcast %union.anon* %9491 to i32*
  %9492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9493 = getelementptr inbounds %struct.GPR, %struct.GPR* %9492, i32 0, i32 7
  %9494 = getelementptr inbounds %struct.Reg, %struct.Reg* %9493, i32 0, i32 0
  %EDX.i384 = bitcast %union.anon* %9494 to i32*
  %9495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9496 = getelementptr inbounds %struct.GPR, %struct.GPR* %9495, i32 0, i32 9
  %9497 = getelementptr inbounds %struct.Reg, %struct.Reg* %9496, i32 0, i32 0
  %ESI.i385 = bitcast %union.anon* %9497 to i32*
  %9498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9499 = getelementptr inbounds %struct.GPR, %struct.GPR* %9498, i32 0, i32 11
  %9500 = getelementptr inbounds %struct.Reg, %struct.Reg* %9499, i32 0, i32 0
  %EDI.i386 = bitcast %union.anon* %9500 to i32*
  %9501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9502 = getelementptr inbounds %struct.GPR, %struct.GPR* %9501, i32 0, i32 13
  %9503 = getelementptr inbounds %struct.Reg, %struct.Reg* %9502, i32 0, i32 0
  %ESP.i387 = bitcast %union.anon* %9503 to i32*
  %9504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9505 = getelementptr inbounds %struct.GPR, %struct.GPR* %9504, i32 0, i32 15
  %9506 = getelementptr inbounds %struct.Reg, %struct.Reg* %9505, i32 0, i32 0
  %EBP.i388 = bitcast %union.anon* %9506 to i32*
  %9507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9508 = getelementptr inbounds %struct.GPR, %struct.GPR* %9507, i32 0, i32 33
  %9509 = getelementptr inbounds %struct.Reg, %struct.Reg* %9508, i32 0, i32 0
  %EIP.i389 = bitcast %union.anon* %9509 to i32*
  %9510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9511 = getelementptr inbounds %struct.GPR, %struct.GPR* %9510, i32 0, i32 17
  %9512 = getelementptr inbounds %struct.Reg, %struct.Reg* %9511, i32 0, i32 0
  %R8D.i390 = bitcast %union.anon* %9512 to i32*
  %9513 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9514 = getelementptr inbounds %struct.GPR, %struct.GPR* %9513, i32 0, i32 19
  %9515 = getelementptr inbounds %struct.Reg, %struct.Reg* %9514, i32 0, i32 0
  %R9D.i391 = bitcast %union.anon* %9515 to i32*
  %9516 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9517 = getelementptr inbounds %struct.GPR, %struct.GPR* %9516, i32 0, i32 21
  %9518 = getelementptr inbounds %struct.Reg, %struct.Reg* %9517, i32 0, i32 0
  %R10D.i392 = bitcast %union.anon* %9518 to i32*
  %9519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9520 = getelementptr inbounds %struct.GPR, %struct.GPR* %9519, i32 0, i32 23
  %9521 = getelementptr inbounds %struct.Reg, %struct.Reg* %9520, i32 0, i32 0
  %R11D.i393 = bitcast %union.anon* %9521 to i32*
  %9522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9523 = getelementptr inbounds %struct.GPR, %struct.GPR* %9522, i32 0, i32 25
  %9524 = getelementptr inbounds %struct.Reg, %struct.Reg* %9523, i32 0, i32 0
  %R12D.i394 = bitcast %union.anon* %9524 to i32*
  %9525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9526 = getelementptr inbounds %struct.GPR, %struct.GPR* %9525, i32 0, i32 27
  %9527 = getelementptr inbounds %struct.Reg, %struct.Reg* %9526, i32 0, i32 0
  %R13D.i395 = bitcast %union.anon* %9527 to i32*
  %9528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9529 = getelementptr inbounds %struct.GPR, %struct.GPR* %9528, i32 0, i32 29
  %9530 = getelementptr inbounds %struct.Reg, %struct.Reg* %9529, i32 0, i32 0
  %R14D.i396 = bitcast %union.anon* %9530 to i32*
  %9531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9532 = getelementptr inbounds %struct.GPR, %struct.GPR* %9531, i32 0, i32 31
  %9533 = getelementptr inbounds %struct.Reg, %struct.Reg* %9532, i32 0, i32 0
  %R15D.i397 = bitcast %union.anon* %9533 to i32*
  %9534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9535 = getelementptr inbounds %struct.GPR, %struct.GPR* %9534, i32 0, i32 1
  %9536 = getelementptr inbounds %struct.Reg, %struct.Reg* %9535, i32 0, i32 0
  %RAX.i398 = bitcast %union.anon* %9536 to i64*
  %9537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9538 = getelementptr inbounds %struct.GPR, %struct.GPR* %9537, i32 0, i32 3
  %9539 = getelementptr inbounds %struct.Reg, %struct.Reg* %9538, i32 0, i32 0
  %RBX.i399 = bitcast %union.anon* %9539 to i64*
  %9540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9541 = getelementptr inbounds %struct.GPR, %struct.GPR* %9540, i32 0, i32 5
  %9542 = getelementptr inbounds %struct.Reg, %struct.Reg* %9541, i32 0, i32 0
  %RCX.i400 = bitcast %union.anon* %9542 to i64*
  %9543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9544 = getelementptr inbounds %struct.GPR, %struct.GPR* %9543, i32 0, i32 7
  %9545 = getelementptr inbounds %struct.Reg, %struct.Reg* %9544, i32 0, i32 0
  %RDX.i401 = bitcast %union.anon* %9545 to i64*
  %9546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9547 = getelementptr inbounds %struct.GPR, %struct.GPR* %9546, i32 0, i32 9
  %9548 = getelementptr inbounds %struct.Reg, %struct.Reg* %9547, i32 0, i32 0
  %RSI.i402 = bitcast %union.anon* %9548 to i64*
  %9549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9550 = getelementptr inbounds %struct.GPR, %struct.GPR* %9549, i32 0, i32 11
  %9551 = getelementptr inbounds %struct.Reg, %struct.Reg* %9550, i32 0, i32 0
  %RDI.i403 = bitcast %union.anon* %9551 to i64*
  %9552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9553 = getelementptr inbounds %struct.GPR, %struct.GPR* %9552, i32 0, i32 13
  %9554 = getelementptr inbounds %struct.Reg, %struct.Reg* %9553, i32 0, i32 0
  %RSP.i404 = bitcast %union.anon* %9554 to i64*
  %9555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9556 = getelementptr inbounds %struct.GPR, %struct.GPR* %9555, i32 0, i32 15
  %9557 = getelementptr inbounds %struct.Reg, %struct.Reg* %9556, i32 0, i32 0
  %RBP.i405 = bitcast %union.anon* %9557 to i64*
  %9558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9559 = getelementptr inbounds %struct.GPR, %struct.GPR* %9558, i32 0, i32 17
  %9560 = getelementptr inbounds %struct.Reg, %struct.Reg* %9559, i32 0, i32 0
  %R8.i406 = bitcast %union.anon* %9560 to i64*
  %9561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9562 = getelementptr inbounds %struct.GPR, %struct.GPR* %9561, i32 0, i32 19
  %9563 = getelementptr inbounds %struct.Reg, %struct.Reg* %9562, i32 0, i32 0
  %R9.i407 = bitcast %union.anon* %9563 to i64*
  %9564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9565 = getelementptr inbounds %struct.GPR, %struct.GPR* %9564, i32 0, i32 21
  %9566 = getelementptr inbounds %struct.Reg, %struct.Reg* %9565, i32 0, i32 0
  %R10.i408 = bitcast %union.anon* %9566 to i64*
  %9567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9568 = getelementptr inbounds %struct.GPR, %struct.GPR* %9567, i32 0, i32 23
  %9569 = getelementptr inbounds %struct.Reg, %struct.Reg* %9568, i32 0, i32 0
  %R11.i409 = bitcast %union.anon* %9569 to i64*
  %9570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9571 = getelementptr inbounds %struct.GPR, %struct.GPR* %9570, i32 0, i32 25
  %9572 = getelementptr inbounds %struct.Reg, %struct.Reg* %9571, i32 0, i32 0
  %R12.i410 = bitcast %union.anon* %9572 to i64*
  %9573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9574 = getelementptr inbounds %struct.GPR, %struct.GPR* %9573, i32 0, i32 27
  %9575 = getelementptr inbounds %struct.Reg, %struct.Reg* %9574, i32 0, i32 0
  %R13.i411 = bitcast %union.anon* %9575 to i64*
  %9576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9577 = getelementptr inbounds %struct.GPR, %struct.GPR* %9576, i32 0, i32 29
  %9578 = getelementptr inbounds %struct.Reg, %struct.Reg* %9577, i32 0, i32 0
  %R14.i412 = bitcast %union.anon* %9578 to i64*
  %9579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9580 = getelementptr inbounds %struct.GPR, %struct.GPR* %9579, i32 0, i32 31
  %9581 = getelementptr inbounds %struct.Reg, %struct.Reg* %9580, i32 0, i32 0
  %R15.i413 = bitcast %union.anon* %9581 to i64*
  %9582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9583 = getelementptr inbounds %struct.GPR, %struct.GPR* %9582, i32 0, i32 33
  %9584 = getelementptr inbounds %struct.Reg, %struct.Reg* %9583, i32 0, i32 0
  %RIP.i414 = bitcast %union.anon* %9584 to i64*
  %9585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %9586 = getelementptr inbounds %struct.Segments, %struct.Segments* %9585, i32 0, i32 1
  %SS.i415 = bitcast %union.SegmentSelector* %9586 to i16*
  %9587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %9588 = getelementptr inbounds %struct.Segments, %struct.Segments* %9587, i32 0, i32 3
  %ES.i416 = bitcast %union.SegmentSelector* %9588 to i16*
  %9589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %9590 = getelementptr inbounds %struct.Segments, %struct.Segments* %9589, i32 0, i32 5
  %GS.i417 = bitcast %union.SegmentSelector* %9590 to i16*
  %9591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %9592 = getelementptr inbounds %struct.Segments, %struct.Segments* %9591, i32 0, i32 7
  %FS.i418 = bitcast %union.SegmentSelector* %9592 to i16*
  %9593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %9594 = getelementptr inbounds %struct.Segments, %struct.Segments* %9593, i32 0, i32 9
  %DS.i419 = bitcast %union.SegmentSelector* %9594 to i16*
  %9595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %9596 = getelementptr inbounds %struct.Segments, %struct.Segments* %9595, i32 0, i32 11
  %CS.i420 = bitcast %union.SegmentSelector* %9596 to i16*
  %9597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %9598 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %9597, i32 0, i32 5
  %9599 = getelementptr inbounds %struct.Reg, %struct.Reg* %9598, i32 0, i32 0
  %GS_BASE.i421 = bitcast %union.anon* %9599 to i64*
  %9600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %9601 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %9600, i32 0, i32 7
  %9602 = getelementptr inbounds %struct.Reg, %struct.Reg* %9601, i32 0, i32 0
  %FS_BASE.i422 = bitcast %union.anon* %9602 to i64*
  %9603 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9604 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9603, i64 0, i64 0
  %YMM0.i423 = bitcast %union.VectorReg* %9604 to %"class.std::bitset"*
  %9605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9606 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9605, i64 0, i64 1
  %YMM1.i424 = bitcast %union.VectorReg* %9606 to %"class.std::bitset"*
  %9607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9608 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9607, i64 0, i64 2
  %YMM2.i425 = bitcast %union.VectorReg* %9608 to %"class.std::bitset"*
  %9609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9610 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9609, i64 0, i64 3
  %YMM3.i426 = bitcast %union.VectorReg* %9610 to %"class.std::bitset"*
  %9611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9612 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9611, i64 0, i64 4
  %YMM4.i427 = bitcast %union.VectorReg* %9612 to %"class.std::bitset"*
  %9613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9614 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9613, i64 0, i64 5
  %YMM5.i428 = bitcast %union.VectorReg* %9614 to %"class.std::bitset"*
  %9615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9616 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9615, i64 0, i64 6
  %YMM6.i429 = bitcast %union.VectorReg* %9616 to %"class.std::bitset"*
  %9617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9618 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9617, i64 0, i64 7
  %YMM7.i430 = bitcast %union.VectorReg* %9618 to %"class.std::bitset"*
  %9619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9620 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9619, i64 0, i64 8
  %YMM8.i431 = bitcast %union.VectorReg* %9620 to %"class.std::bitset"*
  %9621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9622 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9621, i64 0, i64 9
  %YMM9.i432 = bitcast %union.VectorReg* %9622 to %"class.std::bitset"*
  %9623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9624 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9623, i64 0, i64 10
  %YMM10.i433 = bitcast %union.VectorReg* %9624 to %"class.std::bitset"*
  %9625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9626 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9625, i64 0, i64 11
  %YMM11.i434 = bitcast %union.VectorReg* %9626 to %"class.std::bitset"*
  %9627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9628 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9627, i64 0, i64 12
  %YMM12.i435 = bitcast %union.VectorReg* %9628 to %"class.std::bitset"*
  %9629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9630 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9629, i64 0, i64 13
  %YMM13.i436 = bitcast %union.VectorReg* %9630 to %"class.std::bitset"*
  %9631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9632 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9631, i64 0, i64 14
  %YMM14.i437 = bitcast %union.VectorReg* %9632 to %"class.std::bitset"*
  %9633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9634 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9633, i64 0, i64 15
  %YMM15.i438 = bitcast %union.VectorReg* %9634 to %"class.std::bitset"*
  %9635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9636 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9635, i64 0, i64 0
  %XMM0.i439 = bitcast %union.VectorReg* %9636 to %union.vec128_t*
  %9637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9638 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9637, i64 0, i64 1
  %XMM1.i440 = bitcast %union.VectorReg* %9638 to %union.vec128_t*
  %9639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9640 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9639, i64 0, i64 2
  %XMM2.i441 = bitcast %union.VectorReg* %9640 to %union.vec128_t*
  %9641 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9642 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9641, i64 0, i64 3
  %XMM3.i442 = bitcast %union.VectorReg* %9642 to %union.vec128_t*
  %9643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9644 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9643, i64 0, i64 4
  %XMM4.i443 = bitcast %union.VectorReg* %9644 to %union.vec128_t*
  %9645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9646 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9645, i64 0, i64 5
  %XMM5.i444 = bitcast %union.VectorReg* %9646 to %union.vec128_t*
  %9647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9648 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9647, i64 0, i64 6
  %XMM6.i445 = bitcast %union.VectorReg* %9648 to %union.vec128_t*
  %9649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9650 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9649, i64 0, i64 7
  %XMM7.i446 = bitcast %union.VectorReg* %9650 to %union.vec128_t*
  %9651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9652 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9651, i64 0, i64 8
  %XMM8.i447 = bitcast %union.VectorReg* %9652 to %union.vec128_t*
  %9653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9654 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9653, i64 0, i64 9
  %XMM9.i448 = bitcast %union.VectorReg* %9654 to %union.vec128_t*
  %9655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9656 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9655, i64 0, i64 10
  %XMM10.i449 = bitcast %union.VectorReg* %9656 to %union.vec128_t*
  %9657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9658 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9657, i64 0, i64 11
  %XMM11.i450 = bitcast %union.VectorReg* %9658 to %union.vec128_t*
  %9659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9660 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9659, i64 0, i64 12
  %XMM12.i451 = bitcast %union.VectorReg* %9660 to %union.vec128_t*
  %9661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9662 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9661, i64 0, i64 13
  %XMM13.i452 = bitcast %union.VectorReg* %9662 to %union.vec128_t*
  %9663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9664 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9663, i64 0, i64 14
  %XMM14.i453 = bitcast %union.VectorReg* %9664 to %union.vec128_t*
  %9665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9666 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9665, i64 0, i64 15
  %XMM15.i454 = bitcast %union.VectorReg* %9666 to %union.vec128_t*
  %9667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %9668 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %9667, i32 0, i32 0
  %9669 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %9668, i64 0, i64 0
  %ST0.i455 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %9669, i32 0, i32 1
  %9670 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %9671 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %9670, i32 0, i32 0
  %9672 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %9671, i64 0, i64 1
  %ST1.i456 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %9672, i32 0, i32 1
  %9673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %9674 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %9673, i32 0, i32 0
  %9675 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %9674, i64 0, i64 2
  %ST2.i457 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %9675, i32 0, i32 1
  %9676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %9677 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %9676, i32 0, i32 0
  %9678 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %9677, i64 0, i64 3
  %ST3.i458 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %9678, i32 0, i32 1
  %9679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %9680 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %9679, i32 0, i32 0
  %9681 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %9680, i64 0, i64 4
  %ST4.i459 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %9681, i32 0, i32 1
  %9682 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %9683 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %9682, i32 0, i32 0
  %9684 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %9683, i64 0, i64 5
  %ST5.i460 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %9684, i32 0, i32 1
  %9685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %9686 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %9685, i32 0, i32 0
  %9687 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %9686, i64 0, i64 6
  %ST6.i461 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %9687, i32 0, i32 1
  %9688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %9689 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %9688, i32 0, i32 0
  %9690 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %9689, i64 0, i64 7
  %ST7.i462 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %9690, i32 0, i32 1
  %9691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %9692 = getelementptr inbounds %struct.MMX, %struct.MMX* %9691, i32 0, i32 0
  %9693 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %9692, i64 0, i64 0
  %9694 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %9693, i32 0, i32 1
  %9695 = bitcast %union.vec64_t* %9694 to %struct.uint64v1_t*
  %9696 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %9695, i32 0, i32 0
  %MM0.i463 = getelementptr inbounds [1 x i64], [1 x i64]* %9696, i64 0, i64 0
  %9697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %9698 = getelementptr inbounds %struct.MMX, %struct.MMX* %9697, i32 0, i32 0
  %9699 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %9698, i64 0, i64 1
  %9700 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %9699, i32 0, i32 1
  %9701 = bitcast %union.vec64_t* %9700 to %struct.uint64v1_t*
  %9702 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %9701, i32 0, i32 0
  %MM1.i464 = getelementptr inbounds [1 x i64], [1 x i64]* %9702, i64 0, i64 0
  %9703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %9704 = getelementptr inbounds %struct.MMX, %struct.MMX* %9703, i32 0, i32 0
  %9705 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %9704, i64 0, i64 2
  %9706 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %9705, i32 0, i32 1
  %9707 = bitcast %union.vec64_t* %9706 to %struct.uint64v1_t*
  %9708 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %9707, i32 0, i32 0
  %MM2.i465 = getelementptr inbounds [1 x i64], [1 x i64]* %9708, i64 0, i64 0
  %9709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %9710 = getelementptr inbounds %struct.MMX, %struct.MMX* %9709, i32 0, i32 0
  %9711 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %9710, i64 0, i64 3
  %9712 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %9711, i32 0, i32 1
  %9713 = bitcast %union.vec64_t* %9712 to %struct.uint64v1_t*
  %9714 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %9713, i32 0, i32 0
  %MM3.i466 = getelementptr inbounds [1 x i64], [1 x i64]* %9714, i64 0, i64 0
  %9715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %9716 = getelementptr inbounds %struct.MMX, %struct.MMX* %9715, i32 0, i32 0
  %9717 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %9716, i64 0, i64 4
  %9718 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %9717, i32 0, i32 1
  %9719 = bitcast %union.vec64_t* %9718 to %struct.uint64v1_t*
  %9720 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %9719, i32 0, i32 0
  %MM4.i467 = getelementptr inbounds [1 x i64], [1 x i64]* %9720, i64 0, i64 0
  %9721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %9722 = getelementptr inbounds %struct.MMX, %struct.MMX* %9721, i32 0, i32 0
  %9723 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %9722, i64 0, i64 5
  %9724 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %9723, i32 0, i32 1
  %9725 = bitcast %union.vec64_t* %9724 to %struct.uint64v1_t*
  %9726 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %9725, i32 0, i32 0
  %MM5.i468 = getelementptr inbounds [1 x i64], [1 x i64]* %9726, i64 0, i64 0
  %9727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %9728 = getelementptr inbounds %struct.MMX, %struct.MMX* %9727, i32 0, i32 0
  %9729 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %9728, i64 0, i64 6
  %9730 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %9729, i32 0, i32 1
  %9731 = bitcast %union.vec64_t* %9730 to %struct.uint64v1_t*
  %9732 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %9731, i32 0, i32 0
  %MM6.i469 = getelementptr inbounds [1 x i64], [1 x i64]* %9732, i64 0, i64 0
  %9733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %9734 = getelementptr inbounds %struct.MMX, %struct.MMX* %9733, i32 0, i32 0
  %9735 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %9734, i64 0, i64 7
  %9736 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %9735, i32 0, i32 1
  %9737 = bitcast %union.vec64_t* %9736 to %struct.uint64v1_t*
  %9738 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %9737, i32 0, i32 0
  %MM7.i470 = getelementptr inbounds [1 x i64], [1 x i64]* %9738, i64 0, i64 0
  %9739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF.i471 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %9739, i32 0, i32 5
  %9740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF.i472 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %9740, i32 0, i32 1
  %9741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF.i473 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %9741, i32 0, i32 11
  %9742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF.i474 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %9742, i32 0, i32 13
  %9743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF.i475 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %9743, i32 0, i32 3
  %9744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF.i476 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %9744, i32 0, i32 9
  %9745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF.i477 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %9745, i32 0, i32 7
  store i64* @DR0, i64** %_DR0.i329, align 8, !noalias !2498
  store i64* @DR1, i64** %_DR1.i330, align 8, !noalias !2498
  store i64* @DR2, i64** %_DR2.i331, align 8, !noalias !2498
  store i64* @DR3, i64** %_DR3.i332, align 8, !noalias !2498
  store i64* @DR4, i64** %_DR4.i333, align 8, !noalias !2498
  store i64* @DR5, i64** %_DR5.i334, align 8, !noalias !2498
  store i64* @DR6, i64** %_DR6.i335, align 8, !noalias !2498
  store i64* @DR7, i64** %_DR7.i336, align 8, !noalias !2498
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0.i337, align 8, !noalias !2498
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1.i338, align 8, !noalias !2498
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2.i339, align 8, !noalias !2498
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3.i340, align 8, !noalias !2498
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4.i341, align 8, !noalias !2498
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8.i342, align 8, !noalias !2498
  %9746 = bitcast %"class.std::bitset"* %YMM0.i423 to double*
  %9747 = load double, double* %9746, !alias.scope !2502, !noalias !2503
  %9748 = load i64, i64* %RSP.i404, !alias.scope !2502, !noalias !2503
  %9749 = load %struct.Memory*, %struct.Memory** %MEMORY.i328, !noalias !2498
  %9750 = inttoptr i64 %9748 to i64*
  %9751 = load i64, i64* %9750
  store i64 %9751, i64* %PC.i343, !alias.scope !2502, !noalias !2503
  %9752 = add i64 %9748, 8
  store i64 %9752, i64* %RSP.i404, !alias.scope !2502, !noalias !2503
  %9753 = call double @cos(double %9747)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0.i423, !alias.scope !2502, !noalias !2503
  %9754 = bitcast %"class.std::bitset"* %YMM0.i423 to double*
  store double %9753, double* %9754, !alias.scope !2502, !noalias !2503
  %9755 = load %struct.Memory*, %struct.Memory** %MEMORY.i328, !noalias !2498
  %9756 = bitcast %struct.State** %state.i319 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %9756)
  %9757 = bitcast i64* %curr_pc.i320 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %9757)
  %9758 = bitcast %struct.Memory** %memory.i321 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %9758)
  call void @llvm.lifetime.end(i64 1, i8* %BRANCH_TAKEN.i322)
  %9759 = bitcast i64* %SS_BASE.i323 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %9759)
  %9760 = bitcast i64* %ES_BASE.i324 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %9760)
  %9761 = bitcast i64* %DS_BASE.i325 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %9761)
  %9762 = bitcast i64* %CS_BASE.i326 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %9762)
  %9763 = bitcast %struct.State** %STATE.i327 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %9763)
  %9764 = bitcast %struct.Memory** %MEMORY.i328 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %9764)
  %9765 = bitcast i64** %_DR0.i329 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %9765)
  %9766 = bitcast i64** %_DR1.i330 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %9766)
  %9767 = bitcast i64** %_DR2.i331 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %9767)
  %9768 = bitcast i64** %_DR3.i332 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %9768)
  %9769 = bitcast i64** %_DR4.i333 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %9769)
  %9770 = bitcast i64** %_DR5.i334 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %9770)
  %9771 = bitcast i64** %_DR6.i335 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %9771)
  %9772 = bitcast i64** %_DR7.i336 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %9772)
  %9773 = bitcast i64** %CR0.i337 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %9773)
  %9774 = bitcast i64** %CR1.i338 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %9774)
  %9775 = bitcast i64** %CR2.i339 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %9775)
  %9776 = bitcast i64** %CR3.i340 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %9776)
  %9777 = bitcast i64** %CR4.i341 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %9777)
  %9778 = bitcast i64** %CR8.i342 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %9778)
  %9779 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9780 = load i64, i64* %RBP
  %9781 = sub i64 %9780, 296
  %9782 = load i64, i64* %PC
  %9783 = add i64 %9782, 8
  store i64 %9783, i64* %PC
  %9784 = inttoptr i64 %9781 to double*
  %9785 = load double, double* %9784
  %9786 = bitcast i8* %9779 to double*
  store double %9785, double* %9786, align 1, !tbaa !2432
  %9787 = getelementptr inbounds i8, i8* %9779, i64 8
  %9788 = bitcast i8* %9787 to double*
  store double 0.000000e+00, double* %9788, align 1, !tbaa !2432
  %9789 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9790 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9791 = bitcast %union.vec128_t* %XMM0 to i8*
  %9792 = load i64, i64* %PC
  %9793 = add i64 %9792, 4
  store i64 %9793, i64* %PC
  %9794 = bitcast i8* %9790 to double*
  %9795 = load double, double* %9794, align 1
  %9796 = getelementptr inbounds i8, i8* %9790, i64 8
  %9797 = bitcast i8* %9796 to i64*
  %9798 = load i64, i64* %9797, align 1
  %9799 = bitcast i8* %9791 to double*
  %9800 = load double, double* %9799, align 1
  %9801 = fmul double %9795, %9800
  %9802 = bitcast i8* %9789 to double*
  store double %9801, double* %9802, align 1, !tbaa !2432
  %9803 = getelementptr inbounds i8, i8* %9789, i64 8
  %9804 = bitcast i8* %9803 to i64*
  store i64 %9798, i64* %9804, align 1, !tbaa !2432
  %9805 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9806 = load i64, i64* %RBP
  %9807 = sub i64 %9806, 144
  %9808 = load i64, i64* %PC
  %9809 = add i64 %9808, 8
  store i64 %9809, i64* %PC
  %9810 = inttoptr i64 %9807 to double*
  %9811 = load double, double* %9810
  %9812 = bitcast i8* %9805 to double*
  store double %9811, double* %9812, align 1, !tbaa !2432
  %9813 = getelementptr inbounds i8, i8* %9805, i64 8
  %9814 = bitcast i8* %9813 to double*
  store double 0.000000e+00, double* %9814, align 1, !tbaa !2432
  %9815 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9816 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9817 = load i64, i64* %RBP
  %9818 = sub i64 %9817, 152
  %9819 = load i64, i64* %PC
  %9820 = add i64 %9819, 8
  store i64 %9820, i64* %PC
  %9821 = bitcast i8* %9816 to double*
  %9822 = load double, double* %9821, align 1
  %9823 = getelementptr inbounds i8, i8* %9816, i64 8
  %9824 = bitcast i8* %9823 to i64*
  %9825 = load i64, i64* %9824, align 1
  %9826 = inttoptr i64 %9818 to double*
  %9827 = load double, double* %9826
  %9828 = fadd double %9822, %9827
  %9829 = bitcast i8* %9815 to double*
  store double %9828, double* %9829, align 1, !tbaa !2432
  %9830 = getelementptr inbounds i8, i8* %9815, i64 8
  %9831 = bitcast i8* %9830 to i64*
  store i64 %9825, i64* %9831, align 1, !tbaa !2432
  %9832 = load i64, i64* %RBP
  %9833 = sub i64 %9832, 304
  %9834 = bitcast %union.vec128_t* %XMM1 to i8*
  %9835 = load i64, i64* %PC
  %9836 = add i64 %9835, 8
  store i64 %9836, i64* %PC
  %9837 = bitcast i8* %9834 to double*
  %9838 = load double, double* %9837, align 1
  %9839 = inttoptr i64 %9833 to double*
  store double %9838, double* %9839
  %9840 = load i64, i64* %PC
  %9841 = sub i64 %9840, 2734
  %9842 = load i64, i64* %PC
  %9843 = add i64 %9842, 5
  %9844 = load i64, i64* %PC
  %9845 = add i64 %9844, 5
  store i64 %9845, i64* %PC
  %9846 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9847 = load i64, i64* %9846, align 8, !tbaa !2428
  %9848 = add i64 %9847, -8
  %9849 = inttoptr i64 %9848 to i64*
  store i64 %9843, i64* %9849
  store i64 %9848, i64* %9846, align 8, !tbaa !2428
  %9850 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9841, i64* %9850, align 8, !tbaa !2428
  %9851 = load i64, i64* %PC
  %9852 = bitcast %struct.State** %state.i160 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9852)
  %9853 = bitcast i64* %curr_pc.i161 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9853)
  %9854 = bitcast %struct.Memory** %memory.i162 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9854)
  call void @llvm.lifetime.start(i64 1, i8* %BRANCH_TAKEN.i163)
  %9855 = bitcast i64* %SS_BASE.i164 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9855)
  %9856 = bitcast i64* %ES_BASE.i165 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9856)
  %9857 = bitcast i64* %DS_BASE.i166 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9857)
  %9858 = bitcast i64* %CS_BASE.i167 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9858)
  %9859 = bitcast %struct.State** %STATE.i168 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9859)
  %9860 = bitcast %struct.Memory** %MEMORY.i169 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9860)
  %9861 = bitcast i64** %_DR0.i170 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9861)
  %9862 = bitcast i64** %_DR1.i171 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9862)
  %9863 = bitcast i64** %_DR2.i172 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9863)
  %9864 = bitcast i64** %_DR3.i173 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9864)
  %9865 = bitcast i64** %_DR4.i174 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9865)
  %9866 = bitcast i64** %_DR5.i175 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9866)
  %9867 = bitcast i64** %_DR6.i176 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9867)
  %9868 = bitcast i64** %_DR7.i177 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9868)
  %9869 = bitcast i64** %CR0.i178 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9869)
  %9870 = bitcast i64** %CR1.i179 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9870)
  %9871 = bitcast i64** %CR2.i180 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9871)
  %9872 = bitcast i64** %CR3.i181 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9872)
  %9873 = bitcast i64** %CR4.i182 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9873)
  %9874 = bitcast i64** %CR8.i183 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9874)
  store %struct.State* %0, %struct.State** %state.i160, align 8, !noalias !2504
  store i64 %9851, i64* %curr_pc.i161, align 8, !noalias !2504
  store %struct.Memory* %9755, %struct.Memory** %memory.i162, align 8, !noalias !2504
  store i8 0, i8* %BRANCH_TAKEN.i163, align 1, !noalias !2504
  store i64 0, i64* %SS_BASE.i164, align 8, !noalias !2504
  store i64 0, i64* %ES_BASE.i165, align 8, !noalias !2504
  store i64 0, i64* %DS_BASE.i166, align 8, !noalias !2504
  store i64 0, i64* %CS_BASE.i167, align 8, !noalias !2504
  store %struct.State* %0, %struct.State** %STATE.i168, align 8, !noalias !2504
  store %struct.Memory* %9755, %struct.Memory** %MEMORY.i169, align 8, !noalias !2504
  %9875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9876 = getelementptr inbounds %struct.GPR, %struct.GPR* %9875, i32 0, i32 33
  %9877 = getelementptr inbounds %struct.Reg, %struct.Reg* %9876, i32 0, i32 0
  %PC.i184 = bitcast %union.anon* %9877 to i64*
  store i64 %9851, i64* %PC.i184, align 8, !alias.scope !2508, !noalias !2509
  %9878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9879 = getelementptr inbounds %struct.GPR, %struct.GPR* %9878, i32 0, i32 1
  %9880 = getelementptr inbounds %struct.Reg, %struct.Reg* %9879, i32 0, i32 0
  %9881 = bitcast %union.anon* %9880 to %struct.anon.2*
  %AH.i185 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9881, i32 0, i32 1
  %9882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9883 = getelementptr inbounds %struct.GPR, %struct.GPR* %9882, i32 0, i32 3
  %9884 = getelementptr inbounds %struct.Reg, %struct.Reg* %9883, i32 0, i32 0
  %9885 = bitcast %union.anon* %9884 to %struct.anon.2*
  %BH.i186 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9885, i32 0, i32 1
  %9886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9887 = getelementptr inbounds %struct.GPR, %struct.GPR* %9886, i32 0, i32 5
  %9888 = getelementptr inbounds %struct.Reg, %struct.Reg* %9887, i32 0, i32 0
  %9889 = bitcast %union.anon* %9888 to %struct.anon.2*
  %CH.i187 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9889, i32 0, i32 1
  %9890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9891 = getelementptr inbounds %struct.GPR, %struct.GPR* %9890, i32 0, i32 7
  %9892 = getelementptr inbounds %struct.Reg, %struct.Reg* %9891, i32 0, i32 0
  %9893 = bitcast %union.anon* %9892 to %struct.anon.2*
  %DH.i188 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9893, i32 0, i32 1
  %9894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9895 = getelementptr inbounds %struct.GPR, %struct.GPR* %9894, i32 0, i32 1
  %9896 = getelementptr inbounds %struct.Reg, %struct.Reg* %9895, i32 0, i32 0
  %9897 = bitcast %union.anon* %9896 to %struct.anon.2*
  %AL.i189 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9897, i32 0, i32 0
  %9898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9899 = getelementptr inbounds %struct.GPR, %struct.GPR* %9898, i32 0, i32 3
  %9900 = getelementptr inbounds %struct.Reg, %struct.Reg* %9899, i32 0, i32 0
  %9901 = bitcast %union.anon* %9900 to %struct.anon.2*
  %BL.i190 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9901, i32 0, i32 0
  %9902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9903 = getelementptr inbounds %struct.GPR, %struct.GPR* %9902, i32 0, i32 5
  %9904 = getelementptr inbounds %struct.Reg, %struct.Reg* %9903, i32 0, i32 0
  %9905 = bitcast %union.anon* %9904 to %struct.anon.2*
  %CL.i191 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9905, i32 0, i32 0
  %9906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9907 = getelementptr inbounds %struct.GPR, %struct.GPR* %9906, i32 0, i32 7
  %9908 = getelementptr inbounds %struct.Reg, %struct.Reg* %9907, i32 0, i32 0
  %9909 = bitcast %union.anon* %9908 to %struct.anon.2*
  %DL.i192 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9909, i32 0, i32 0
  %9910 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9911 = getelementptr inbounds %struct.GPR, %struct.GPR* %9910, i32 0, i32 9
  %9912 = getelementptr inbounds %struct.Reg, %struct.Reg* %9911, i32 0, i32 0
  %9913 = bitcast %union.anon* %9912 to %struct.anon.2*
  %SIL.i193 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9913, i32 0, i32 0
  %9914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9915 = getelementptr inbounds %struct.GPR, %struct.GPR* %9914, i32 0, i32 11
  %9916 = getelementptr inbounds %struct.Reg, %struct.Reg* %9915, i32 0, i32 0
  %9917 = bitcast %union.anon* %9916 to %struct.anon.2*
  %DIL.i194 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9917, i32 0, i32 0
  %9918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9919 = getelementptr inbounds %struct.GPR, %struct.GPR* %9918, i32 0, i32 13
  %9920 = getelementptr inbounds %struct.Reg, %struct.Reg* %9919, i32 0, i32 0
  %9921 = bitcast %union.anon* %9920 to %struct.anon.2*
  %SPL.i195 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9921, i32 0, i32 0
  %9922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9923 = getelementptr inbounds %struct.GPR, %struct.GPR* %9922, i32 0, i32 15
  %9924 = getelementptr inbounds %struct.Reg, %struct.Reg* %9923, i32 0, i32 0
  %9925 = bitcast %union.anon* %9924 to %struct.anon.2*
  %BPL.i196 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9925, i32 0, i32 0
  %9926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9927 = getelementptr inbounds %struct.GPR, %struct.GPR* %9926, i32 0, i32 17
  %9928 = getelementptr inbounds %struct.Reg, %struct.Reg* %9927, i32 0, i32 0
  %9929 = bitcast %union.anon* %9928 to %struct.anon.2*
  %R8B.i197 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9929, i32 0, i32 0
  %9930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9931 = getelementptr inbounds %struct.GPR, %struct.GPR* %9930, i32 0, i32 19
  %9932 = getelementptr inbounds %struct.Reg, %struct.Reg* %9931, i32 0, i32 0
  %9933 = bitcast %union.anon* %9932 to %struct.anon.2*
  %R9B.i198 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9933, i32 0, i32 0
  %9934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9935 = getelementptr inbounds %struct.GPR, %struct.GPR* %9934, i32 0, i32 21
  %9936 = getelementptr inbounds %struct.Reg, %struct.Reg* %9935, i32 0, i32 0
  %9937 = bitcast %union.anon* %9936 to %struct.anon.2*
  %R10B.i199 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9937, i32 0, i32 0
  %9938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9939 = getelementptr inbounds %struct.GPR, %struct.GPR* %9938, i32 0, i32 23
  %9940 = getelementptr inbounds %struct.Reg, %struct.Reg* %9939, i32 0, i32 0
  %9941 = bitcast %union.anon* %9940 to %struct.anon.2*
  %R11B.i200 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9941, i32 0, i32 0
  %9942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9943 = getelementptr inbounds %struct.GPR, %struct.GPR* %9942, i32 0, i32 25
  %9944 = getelementptr inbounds %struct.Reg, %struct.Reg* %9943, i32 0, i32 0
  %9945 = bitcast %union.anon* %9944 to %struct.anon.2*
  %R12B.i201 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9945, i32 0, i32 0
  %9946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9947 = getelementptr inbounds %struct.GPR, %struct.GPR* %9946, i32 0, i32 27
  %9948 = getelementptr inbounds %struct.Reg, %struct.Reg* %9947, i32 0, i32 0
  %9949 = bitcast %union.anon* %9948 to %struct.anon.2*
  %R13B.i202 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9949, i32 0, i32 0
  %9950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9951 = getelementptr inbounds %struct.GPR, %struct.GPR* %9950, i32 0, i32 29
  %9952 = getelementptr inbounds %struct.Reg, %struct.Reg* %9951, i32 0, i32 0
  %9953 = bitcast %union.anon* %9952 to %struct.anon.2*
  %R14B.i203 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9953, i32 0, i32 0
  %9954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9955 = getelementptr inbounds %struct.GPR, %struct.GPR* %9954, i32 0, i32 31
  %9956 = getelementptr inbounds %struct.Reg, %struct.Reg* %9955, i32 0, i32 0
  %9957 = bitcast %union.anon* %9956 to %struct.anon.2*
  %R15B.i204 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9957, i32 0, i32 0
  %9958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9959 = getelementptr inbounds %struct.GPR, %struct.GPR* %9958, i32 0, i32 1
  %9960 = getelementptr inbounds %struct.Reg, %struct.Reg* %9959, i32 0, i32 0
  %AX.i205 = bitcast %union.anon* %9960 to i16*
  %9961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9962 = getelementptr inbounds %struct.GPR, %struct.GPR* %9961, i32 0, i32 3
  %9963 = getelementptr inbounds %struct.Reg, %struct.Reg* %9962, i32 0, i32 0
  %BX.i206 = bitcast %union.anon* %9963 to i16*
  %9964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9965 = getelementptr inbounds %struct.GPR, %struct.GPR* %9964, i32 0, i32 5
  %9966 = getelementptr inbounds %struct.Reg, %struct.Reg* %9965, i32 0, i32 0
  %CX.i207 = bitcast %union.anon* %9966 to i16*
  %9967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9968 = getelementptr inbounds %struct.GPR, %struct.GPR* %9967, i32 0, i32 7
  %9969 = getelementptr inbounds %struct.Reg, %struct.Reg* %9968, i32 0, i32 0
  %DX.i208 = bitcast %union.anon* %9969 to i16*
  %9970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9971 = getelementptr inbounds %struct.GPR, %struct.GPR* %9970, i32 0, i32 9
  %9972 = getelementptr inbounds %struct.Reg, %struct.Reg* %9971, i32 0, i32 0
  %SI.i209 = bitcast %union.anon* %9972 to i16*
  %9973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9974 = getelementptr inbounds %struct.GPR, %struct.GPR* %9973, i32 0, i32 11
  %9975 = getelementptr inbounds %struct.Reg, %struct.Reg* %9974, i32 0, i32 0
  %DI.i210 = bitcast %union.anon* %9975 to i16*
  %9976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9977 = getelementptr inbounds %struct.GPR, %struct.GPR* %9976, i32 0, i32 13
  %9978 = getelementptr inbounds %struct.Reg, %struct.Reg* %9977, i32 0, i32 0
  %SP.i211 = bitcast %union.anon* %9978 to i16*
  %9979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9980 = getelementptr inbounds %struct.GPR, %struct.GPR* %9979, i32 0, i32 15
  %9981 = getelementptr inbounds %struct.Reg, %struct.Reg* %9980, i32 0, i32 0
  %BP.i212 = bitcast %union.anon* %9981 to i16*
  %9982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9983 = getelementptr inbounds %struct.GPR, %struct.GPR* %9982, i32 0, i32 17
  %9984 = getelementptr inbounds %struct.Reg, %struct.Reg* %9983, i32 0, i32 0
  %R8W.i213 = bitcast %union.anon* %9984 to i16*
  %9985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9986 = getelementptr inbounds %struct.GPR, %struct.GPR* %9985, i32 0, i32 19
  %9987 = getelementptr inbounds %struct.Reg, %struct.Reg* %9986, i32 0, i32 0
  %R9W.i214 = bitcast %union.anon* %9987 to i16*
  %9988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9989 = getelementptr inbounds %struct.GPR, %struct.GPR* %9988, i32 0, i32 21
  %9990 = getelementptr inbounds %struct.Reg, %struct.Reg* %9989, i32 0, i32 0
  %R10W.i215 = bitcast %union.anon* %9990 to i16*
  %9991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9992 = getelementptr inbounds %struct.GPR, %struct.GPR* %9991, i32 0, i32 23
  %9993 = getelementptr inbounds %struct.Reg, %struct.Reg* %9992, i32 0, i32 0
  %R11W.i216 = bitcast %union.anon* %9993 to i16*
  %9994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9995 = getelementptr inbounds %struct.GPR, %struct.GPR* %9994, i32 0, i32 25
  %9996 = getelementptr inbounds %struct.Reg, %struct.Reg* %9995, i32 0, i32 0
  %R12W.i217 = bitcast %union.anon* %9996 to i16*
  %9997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9998 = getelementptr inbounds %struct.GPR, %struct.GPR* %9997, i32 0, i32 27
  %9999 = getelementptr inbounds %struct.Reg, %struct.Reg* %9998, i32 0, i32 0
  %R13W.i218 = bitcast %union.anon* %9999 to i16*
  %10000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10001 = getelementptr inbounds %struct.GPR, %struct.GPR* %10000, i32 0, i32 29
  %10002 = getelementptr inbounds %struct.Reg, %struct.Reg* %10001, i32 0, i32 0
  %R14W.i219 = bitcast %union.anon* %10002 to i16*
  %10003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10004 = getelementptr inbounds %struct.GPR, %struct.GPR* %10003, i32 0, i32 31
  %10005 = getelementptr inbounds %struct.Reg, %struct.Reg* %10004, i32 0, i32 0
  %R15W.i220 = bitcast %union.anon* %10005 to i16*
  %10006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10007 = getelementptr inbounds %struct.GPR, %struct.GPR* %10006, i32 0, i32 33
  %10008 = getelementptr inbounds %struct.Reg, %struct.Reg* %10007, i32 0, i32 0
  %IP.i221 = bitcast %union.anon* %10008 to i16*
  %10009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10010 = getelementptr inbounds %struct.GPR, %struct.GPR* %10009, i32 0, i32 1
  %10011 = getelementptr inbounds %struct.Reg, %struct.Reg* %10010, i32 0, i32 0
  %EAX.i222 = bitcast %union.anon* %10011 to i32*
  %10012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10013 = getelementptr inbounds %struct.GPR, %struct.GPR* %10012, i32 0, i32 3
  %10014 = getelementptr inbounds %struct.Reg, %struct.Reg* %10013, i32 0, i32 0
  %EBX.i223 = bitcast %union.anon* %10014 to i32*
  %10015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10016 = getelementptr inbounds %struct.GPR, %struct.GPR* %10015, i32 0, i32 5
  %10017 = getelementptr inbounds %struct.Reg, %struct.Reg* %10016, i32 0, i32 0
  %ECX.i224 = bitcast %union.anon* %10017 to i32*
  %10018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10019 = getelementptr inbounds %struct.GPR, %struct.GPR* %10018, i32 0, i32 7
  %10020 = getelementptr inbounds %struct.Reg, %struct.Reg* %10019, i32 0, i32 0
  %EDX.i225 = bitcast %union.anon* %10020 to i32*
  %10021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10022 = getelementptr inbounds %struct.GPR, %struct.GPR* %10021, i32 0, i32 9
  %10023 = getelementptr inbounds %struct.Reg, %struct.Reg* %10022, i32 0, i32 0
  %ESI.i226 = bitcast %union.anon* %10023 to i32*
  %10024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10025 = getelementptr inbounds %struct.GPR, %struct.GPR* %10024, i32 0, i32 11
  %10026 = getelementptr inbounds %struct.Reg, %struct.Reg* %10025, i32 0, i32 0
  %EDI.i227 = bitcast %union.anon* %10026 to i32*
  %10027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10028 = getelementptr inbounds %struct.GPR, %struct.GPR* %10027, i32 0, i32 13
  %10029 = getelementptr inbounds %struct.Reg, %struct.Reg* %10028, i32 0, i32 0
  %ESP.i228 = bitcast %union.anon* %10029 to i32*
  %10030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10031 = getelementptr inbounds %struct.GPR, %struct.GPR* %10030, i32 0, i32 15
  %10032 = getelementptr inbounds %struct.Reg, %struct.Reg* %10031, i32 0, i32 0
  %EBP.i229 = bitcast %union.anon* %10032 to i32*
  %10033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10034 = getelementptr inbounds %struct.GPR, %struct.GPR* %10033, i32 0, i32 33
  %10035 = getelementptr inbounds %struct.Reg, %struct.Reg* %10034, i32 0, i32 0
  %EIP.i230 = bitcast %union.anon* %10035 to i32*
  %10036 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10037 = getelementptr inbounds %struct.GPR, %struct.GPR* %10036, i32 0, i32 17
  %10038 = getelementptr inbounds %struct.Reg, %struct.Reg* %10037, i32 0, i32 0
  %R8D.i231 = bitcast %union.anon* %10038 to i32*
  %10039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10040 = getelementptr inbounds %struct.GPR, %struct.GPR* %10039, i32 0, i32 19
  %10041 = getelementptr inbounds %struct.Reg, %struct.Reg* %10040, i32 0, i32 0
  %R9D.i232 = bitcast %union.anon* %10041 to i32*
  %10042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10043 = getelementptr inbounds %struct.GPR, %struct.GPR* %10042, i32 0, i32 21
  %10044 = getelementptr inbounds %struct.Reg, %struct.Reg* %10043, i32 0, i32 0
  %R10D.i233 = bitcast %union.anon* %10044 to i32*
  %10045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10046 = getelementptr inbounds %struct.GPR, %struct.GPR* %10045, i32 0, i32 23
  %10047 = getelementptr inbounds %struct.Reg, %struct.Reg* %10046, i32 0, i32 0
  %R11D.i234 = bitcast %union.anon* %10047 to i32*
  %10048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10049 = getelementptr inbounds %struct.GPR, %struct.GPR* %10048, i32 0, i32 25
  %10050 = getelementptr inbounds %struct.Reg, %struct.Reg* %10049, i32 0, i32 0
  %R12D.i235 = bitcast %union.anon* %10050 to i32*
  %10051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10052 = getelementptr inbounds %struct.GPR, %struct.GPR* %10051, i32 0, i32 27
  %10053 = getelementptr inbounds %struct.Reg, %struct.Reg* %10052, i32 0, i32 0
  %R13D.i236 = bitcast %union.anon* %10053 to i32*
  %10054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10055 = getelementptr inbounds %struct.GPR, %struct.GPR* %10054, i32 0, i32 29
  %10056 = getelementptr inbounds %struct.Reg, %struct.Reg* %10055, i32 0, i32 0
  %R14D.i237 = bitcast %union.anon* %10056 to i32*
  %10057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10058 = getelementptr inbounds %struct.GPR, %struct.GPR* %10057, i32 0, i32 31
  %10059 = getelementptr inbounds %struct.Reg, %struct.Reg* %10058, i32 0, i32 0
  %R15D.i238 = bitcast %union.anon* %10059 to i32*
  %10060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10061 = getelementptr inbounds %struct.GPR, %struct.GPR* %10060, i32 0, i32 1
  %10062 = getelementptr inbounds %struct.Reg, %struct.Reg* %10061, i32 0, i32 0
  %RAX.i239 = bitcast %union.anon* %10062 to i64*
  %10063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10064 = getelementptr inbounds %struct.GPR, %struct.GPR* %10063, i32 0, i32 3
  %10065 = getelementptr inbounds %struct.Reg, %struct.Reg* %10064, i32 0, i32 0
  %RBX.i240 = bitcast %union.anon* %10065 to i64*
  %10066 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10067 = getelementptr inbounds %struct.GPR, %struct.GPR* %10066, i32 0, i32 5
  %10068 = getelementptr inbounds %struct.Reg, %struct.Reg* %10067, i32 0, i32 0
  %RCX.i241 = bitcast %union.anon* %10068 to i64*
  %10069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10070 = getelementptr inbounds %struct.GPR, %struct.GPR* %10069, i32 0, i32 7
  %10071 = getelementptr inbounds %struct.Reg, %struct.Reg* %10070, i32 0, i32 0
  %RDX.i242 = bitcast %union.anon* %10071 to i64*
  %10072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10073 = getelementptr inbounds %struct.GPR, %struct.GPR* %10072, i32 0, i32 9
  %10074 = getelementptr inbounds %struct.Reg, %struct.Reg* %10073, i32 0, i32 0
  %RSI.i243 = bitcast %union.anon* %10074 to i64*
  %10075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10076 = getelementptr inbounds %struct.GPR, %struct.GPR* %10075, i32 0, i32 11
  %10077 = getelementptr inbounds %struct.Reg, %struct.Reg* %10076, i32 0, i32 0
  %RDI.i244 = bitcast %union.anon* %10077 to i64*
  %10078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10079 = getelementptr inbounds %struct.GPR, %struct.GPR* %10078, i32 0, i32 13
  %10080 = getelementptr inbounds %struct.Reg, %struct.Reg* %10079, i32 0, i32 0
  %RSP.i245 = bitcast %union.anon* %10080 to i64*
  %10081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10082 = getelementptr inbounds %struct.GPR, %struct.GPR* %10081, i32 0, i32 15
  %10083 = getelementptr inbounds %struct.Reg, %struct.Reg* %10082, i32 0, i32 0
  %RBP.i246 = bitcast %union.anon* %10083 to i64*
  %10084 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10085 = getelementptr inbounds %struct.GPR, %struct.GPR* %10084, i32 0, i32 17
  %10086 = getelementptr inbounds %struct.Reg, %struct.Reg* %10085, i32 0, i32 0
  %R8.i247 = bitcast %union.anon* %10086 to i64*
  %10087 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10088 = getelementptr inbounds %struct.GPR, %struct.GPR* %10087, i32 0, i32 19
  %10089 = getelementptr inbounds %struct.Reg, %struct.Reg* %10088, i32 0, i32 0
  %R9.i248 = bitcast %union.anon* %10089 to i64*
  %10090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10091 = getelementptr inbounds %struct.GPR, %struct.GPR* %10090, i32 0, i32 21
  %10092 = getelementptr inbounds %struct.Reg, %struct.Reg* %10091, i32 0, i32 0
  %R10.i249 = bitcast %union.anon* %10092 to i64*
  %10093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10094 = getelementptr inbounds %struct.GPR, %struct.GPR* %10093, i32 0, i32 23
  %10095 = getelementptr inbounds %struct.Reg, %struct.Reg* %10094, i32 0, i32 0
  %R11.i250 = bitcast %union.anon* %10095 to i64*
  %10096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10097 = getelementptr inbounds %struct.GPR, %struct.GPR* %10096, i32 0, i32 25
  %10098 = getelementptr inbounds %struct.Reg, %struct.Reg* %10097, i32 0, i32 0
  %R12.i251 = bitcast %union.anon* %10098 to i64*
  %10099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10100 = getelementptr inbounds %struct.GPR, %struct.GPR* %10099, i32 0, i32 27
  %10101 = getelementptr inbounds %struct.Reg, %struct.Reg* %10100, i32 0, i32 0
  %R13.i252 = bitcast %union.anon* %10101 to i64*
  %10102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10103 = getelementptr inbounds %struct.GPR, %struct.GPR* %10102, i32 0, i32 29
  %10104 = getelementptr inbounds %struct.Reg, %struct.Reg* %10103, i32 0, i32 0
  %R14.i253 = bitcast %union.anon* %10104 to i64*
  %10105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10106 = getelementptr inbounds %struct.GPR, %struct.GPR* %10105, i32 0, i32 31
  %10107 = getelementptr inbounds %struct.Reg, %struct.Reg* %10106, i32 0, i32 0
  %R15.i254 = bitcast %union.anon* %10107 to i64*
  %10108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10109 = getelementptr inbounds %struct.GPR, %struct.GPR* %10108, i32 0, i32 33
  %10110 = getelementptr inbounds %struct.Reg, %struct.Reg* %10109, i32 0, i32 0
  %RIP.i255 = bitcast %union.anon* %10110 to i64*
  %10111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %10112 = getelementptr inbounds %struct.Segments, %struct.Segments* %10111, i32 0, i32 1
  %SS.i256 = bitcast %union.SegmentSelector* %10112 to i16*
  %10113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %10114 = getelementptr inbounds %struct.Segments, %struct.Segments* %10113, i32 0, i32 3
  %ES.i257 = bitcast %union.SegmentSelector* %10114 to i16*
  %10115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %10116 = getelementptr inbounds %struct.Segments, %struct.Segments* %10115, i32 0, i32 5
  %GS.i258 = bitcast %union.SegmentSelector* %10116 to i16*
  %10117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %10118 = getelementptr inbounds %struct.Segments, %struct.Segments* %10117, i32 0, i32 7
  %FS.i259 = bitcast %union.SegmentSelector* %10118 to i16*
  %10119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %10120 = getelementptr inbounds %struct.Segments, %struct.Segments* %10119, i32 0, i32 9
  %DS.i260 = bitcast %union.SegmentSelector* %10120 to i16*
  %10121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %10122 = getelementptr inbounds %struct.Segments, %struct.Segments* %10121, i32 0, i32 11
  %CS.i261 = bitcast %union.SegmentSelector* %10122 to i16*
  %10123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %10124 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %10123, i32 0, i32 5
  %10125 = getelementptr inbounds %struct.Reg, %struct.Reg* %10124, i32 0, i32 0
  %GS_BASE.i262 = bitcast %union.anon* %10125 to i64*
  %10126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %10127 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %10126, i32 0, i32 7
  %10128 = getelementptr inbounds %struct.Reg, %struct.Reg* %10127, i32 0, i32 0
  %FS_BASE.i263 = bitcast %union.anon* %10128 to i64*
  %10129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10130 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10129, i64 0, i64 0
  %YMM0.i264 = bitcast %union.VectorReg* %10130 to %"class.std::bitset"*
  %10131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10132 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10131, i64 0, i64 1
  %YMM1.i265 = bitcast %union.VectorReg* %10132 to %"class.std::bitset"*
  %10133 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10134 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10133, i64 0, i64 2
  %YMM2.i266 = bitcast %union.VectorReg* %10134 to %"class.std::bitset"*
  %10135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10136 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10135, i64 0, i64 3
  %YMM3.i267 = bitcast %union.VectorReg* %10136 to %"class.std::bitset"*
  %10137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10138 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10137, i64 0, i64 4
  %YMM4.i268 = bitcast %union.VectorReg* %10138 to %"class.std::bitset"*
  %10139 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10140 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10139, i64 0, i64 5
  %YMM5.i269 = bitcast %union.VectorReg* %10140 to %"class.std::bitset"*
  %10141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10142 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10141, i64 0, i64 6
  %YMM6.i270 = bitcast %union.VectorReg* %10142 to %"class.std::bitset"*
  %10143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10144 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10143, i64 0, i64 7
  %YMM7.i271 = bitcast %union.VectorReg* %10144 to %"class.std::bitset"*
  %10145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10146 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10145, i64 0, i64 8
  %YMM8.i272 = bitcast %union.VectorReg* %10146 to %"class.std::bitset"*
  %10147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10148 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10147, i64 0, i64 9
  %YMM9.i273 = bitcast %union.VectorReg* %10148 to %"class.std::bitset"*
  %10149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10150 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10149, i64 0, i64 10
  %YMM10.i274 = bitcast %union.VectorReg* %10150 to %"class.std::bitset"*
  %10151 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10152 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10151, i64 0, i64 11
  %YMM11.i275 = bitcast %union.VectorReg* %10152 to %"class.std::bitset"*
  %10153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10154 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10153, i64 0, i64 12
  %YMM12.i276 = bitcast %union.VectorReg* %10154 to %"class.std::bitset"*
  %10155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10156 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10155, i64 0, i64 13
  %YMM13.i277 = bitcast %union.VectorReg* %10156 to %"class.std::bitset"*
  %10157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10158 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10157, i64 0, i64 14
  %YMM14.i278 = bitcast %union.VectorReg* %10158 to %"class.std::bitset"*
  %10159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10160 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10159, i64 0, i64 15
  %YMM15.i279 = bitcast %union.VectorReg* %10160 to %"class.std::bitset"*
  %10161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10162 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10161, i64 0, i64 0
  %XMM0.i280 = bitcast %union.VectorReg* %10162 to %union.vec128_t*
  %10163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10164 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10163, i64 0, i64 1
  %XMM1.i281 = bitcast %union.VectorReg* %10164 to %union.vec128_t*
  %10165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10166 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10165, i64 0, i64 2
  %XMM2.i282 = bitcast %union.VectorReg* %10166 to %union.vec128_t*
  %10167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10168 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10167, i64 0, i64 3
  %XMM3.i283 = bitcast %union.VectorReg* %10168 to %union.vec128_t*
  %10169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10170 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10169, i64 0, i64 4
  %XMM4.i284 = bitcast %union.VectorReg* %10170 to %union.vec128_t*
  %10171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10172 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10171, i64 0, i64 5
  %XMM5.i285 = bitcast %union.VectorReg* %10172 to %union.vec128_t*
  %10173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10174 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10173, i64 0, i64 6
  %XMM6.i286 = bitcast %union.VectorReg* %10174 to %union.vec128_t*
  %10175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10176 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10175, i64 0, i64 7
  %XMM7.i287 = bitcast %union.VectorReg* %10176 to %union.vec128_t*
  %10177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10178 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10177, i64 0, i64 8
  %XMM8.i288 = bitcast %union.VectorReg* %10178 to %union.vec128_t*
  %10179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10180 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10179, i64 0, i64 9
  %XMM9.i289 = bitcast %union.VectorReg* %10180 to %union.vec128_t*
  %10181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10182 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10181, i64 0, i64 10
  %XMM10.i290 = bitcast %union.VectorReg* %10182 to %union.vec128_t*
  %10183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10184 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10183, i64 0, i64 11
  %XMM11.i291 = bitcast %union.VectorReg* %10184 to %union.vec128_t*
  %10185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10186 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10185, i64 0, i64 12
  %XMM12.i292 = bitcast %union.VectorReg* %10186 to %union.vec128_t*
  %10187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10188 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10187, i64 0, i64 13
  %XMM13.i293 = bitcast %union.VectorReg* %10188 to %union.vec128_t*
  %10189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10190 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10189, i64 0, i64 14
  %XMM14.i294 = bitcast %union.VectorReg* %10190 to %union.vec128_t*
  %10191 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10192 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10191, i64 0, i64 15
  %XMM15.i295 = bitcast %union.VectorReg* %10192 to %union.vec128_t*
  %10193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %10194 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %10193, i32 0, i32 0
  %10195 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %10194, i64 0, i64 0
  %ST0.i296 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %10195, i32 0, i32 1
  %10196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %10197 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %10196, i32 0, i32 0
  %10198 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %10197, i64 0, i64 1
  %ST1.i297 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %10198, i32 0, i32 1
  %10199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %10200 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %10199, i32 0, i32 0
  %10201 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %10200, i64 0, i64 2
  %ST2.i298 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %10201, i32 0, i32 1
  %10202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %10203 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %10202, i32 0, i32 0
  %10204 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %10203, i64 0, i64 3
  %ST3.i299 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %10204, i32 0, i32 1
  %10205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %10206 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %10205, i32 0, i32 0
  %10207 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %10206, i64 0, i64 4
  %ST4.i300 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %10207, i32 0, i32 1
  %10208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %10209 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %10208, i32 0, i32 0
  %10210 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %10209, i64 0, i64 5
  %ST5.i301 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %10210, i32 0, i32 1
  %10211 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %10212 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %10211, i32 0, i32 0
  %10213 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %10212, i64 0, i64 6
  %ST6.i302 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %10213, i32 0, i32 1
  %10214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %10215 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %10214, i32 0, i32 0
  %10216 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %10215, i64 0, i64 7
  %ST7.i303 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %10216, i32 0, i32 1
  %10217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %10218 = getelementptr inbounds %struct.MMX, %struct.MMX* %10217, i32 0, i32 0
  %10219 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %10218, i64 0, i64 0
  %10220 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %10219, i32 0, i32 1
  %10221 = bitcast %union.vec64_t* %10220 to %struct.uint64v1_t*
  %10222 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %10221, i32 0, i32 0
  %MM0.i304 = getelementptr inbounds [1 x i64], [1 x i64]* %10222, i64 0, i64 0
  %10223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %10224 = getelementptr inbounds %struct.MMX, %struct.MMX* %10223, i32 0, i32 0
  %10225 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %10224, i64 0, i64 1
  %10226 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %10225, i32 0, i32 1
  %10227 = bitcast %union.vec64_t* %10226 to %struct.uint64v1_t*
  %10228 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %10227, i32 0, i32 0
  %MM1.i305 = getelementptr inbounds [1 x i64], [1 x i64]* %10228, i64 0, i64 0
  %10229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %10230 = getelementptr inbounds %struct.MMX, %struct.MMX* %10229, i32 0, i32 0
  %10231 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %10230, i64 0, i64 2
  %10232 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %10231, i32 0, i32 1
  %10233 = bitcast %union.vec64_t* %10232 to %struct.uint64v1_t*
  %10234 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %10233, i32 0, i32 0
  %MM2.i306 = getelementptr inbounds [1 x i64], [1 x i64]* %10234, i64 0, i64 0
  %10235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %10236 = getelementptr inbounds %struct.MMX, %struct.MMX* %10235, i32 0, i32 0
  %10237 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %10236, i64 0, i64 3
  %10238 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %10237, i32 0, i32 1
  %10239 = bitcast %union.vec64_t* %10238 to %struct.uint64v1_t*
  %10240 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %10239, i32 0, i32 0
  %MM3.i307 = getelementptr inbounds [1 x i64], [1 x i64]* %10240, i64 0, i64 0
  %10241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %10242 = getelementptr inbounds %struct.MMX, %struct.MMX* %10241, i32 0, i32 0
  %10243 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %10242, i64 0, i64 4
  %10244 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %10243, i32 0, i32 1
  %10245 = bitcast %union.vec64_t* %10244 to %struct.uint64v1_t*
  %10246 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %10245, i32 0, i32 0
  %MM4.i308 = getelementptr inbounds [1 x i64], [1 x i64]* %10246, i64 0, i64 0
  %10247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %10248 = getelementptr inbounds %struct.MMX, %struct.MMX* %10247, i32 0, i32 0
  %10249 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %10248, i64 0, i64 5
  %10250 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %10249, i32 0, i32 1
  %10251 = bitcast %union.vec64_t* %10250 to %struct.uint64v1_t*
  %10252 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %10251, i32 0, i32 0
  %MM5.i309 = getelementptr inbounds [1 x i64], [1 x i64]* %10252, i64 0, i64 0
  %10253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %10254 = getelementptr inbounds %struct.MMX, %struct.MMX* %10253, i32 0, i32 0
  %10255 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %10254, i64 0, i64 6
  %10256 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %10255, i32 0, i32 1
  %10257 = bitcast %union.vec64_t* %10256 to %struct.uint64v1_t*
  %10258 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %10257, i32 0, i32 0
  %MM6.i310 = getelementptr inbounds [1 x i64], [1 x i64]* %10258, i64 0, i64 0
  %10259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %10260 = getelementptr inbounds %struct.MMX, %struct.MMX* %10259, i32 0, i32 0
  %10261 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %10260, i64 0, i64 7
  %10262 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %10261, i32 0, i32 1
  %10263 = bitcast %union.vec64_t* %10262 to %struct.uint64v1_t*
  %10264 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %10263, i32 0, i32 0
  %MM7.i311 = getelementptr inbounds [1 x i64], [1 x i64]* %10264, i64 0, i64 0
  %10265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF.i312 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %10265, i32 0, i32 5
  %10266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF.i313 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %10266, i32 0, i32 1
  %10267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF.i314 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %10267, i32 0, i32 11
  %10268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF.i315 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %10268, i32 0, i32 13
  %10269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF.i316 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %10269, i32 0, i32 3
  %10270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF.i317 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %10270, i32 0, i32 9
  %10271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF.i318 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %10271, i32 0, i32 7
  store i64* @DR0, i64** %_DR0.i170, align 8, !noalias !2504
  store i64* @DR1, i64** %_DR1.i171, align 8, !noalias !2504
  store i64* @DR2, i64** %_DR2.i172, align 8, !noalias !2504
  store i64* @DR3, i64** %_DR3.i173, align 8, !noalias !2504
  store i64* @DR4, i64** %_DR4.i174, align 8, !noalias !2504
  store i64* @DR5, i64** %_DR5.i175, align 8, !noalias !2504
  store i64* @DR6, i64** %_DR6.i176, align 8, !noalias !2504
  store i64* @DR7, i64** %_DR7.i177, align 8, !noalias !2504
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0.i178, align 8, !noalias !2504
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1.i179, align 8, !noalias !2504
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2.i180, align 8, !noalias !2504
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3.i181, align 8, !noalias !2504
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4.i182, align 8, !noalias !2504
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8.i183, align 8, !noalias !2504
  %10272 = bitcast %"class.std::bitset"* %YMM0.i264 to double*
  %10273 = load double, double* %10272, !alias.scope !2508, !noalias !2509
  %10274 = load i64, i64* %RSP.i245, !alias.scope !2508, !noalias !2509
  %10275 = load %struct.Memory*, %struct.Memory** %MEMORY.i169, !noalias !2504
  %10276 = inttoptr i64 %10274 to i64*
  %10277 = load i64, i64* %10276
  store i64 %10277, i64* %PC.i184, !alias.scope !2508, !noalias !2509
  %10278 = add i64 %10274, 8
  store i64 %10278, i64* %RSP.i245, !alias.scope !2508, !noalias !2509
  %10279 = call double @cos(double %10273)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0.i264, !alias.scope !2508, !noalias !2509
  %10280 = bitcast %"class.std::bitset"* %YMM0.i264 to double*
  store double %10279, double* %10280, !alias.scope !2508, !noalias !2509
  %10281 = load %struct.Memory*, %struct.Memory** %MEMORY.i169, !noalias !2504
  %10282 = bitcast %struct.State** %state.i160 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %10282)
  %10283 = bitcast i64* %curr_pc.i161 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %10283)
  %10284 = bitcast %struct.Memory** %memory.i162 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %10284)
  call void @llvm.lifetime.end(i64 1, i8* %BRANCH_TAKEN.i163)
  %10285 = bitcast i64* %SS_BASE.i164 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %10285)
  %10286 = bitcast i64* %ES_BASE.i165 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %10286)
  %10287 = bitcast i64* %DS_BASE.i166 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %10287)
  %10288 = bitcast i64* %CS_BASE.i167 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %10288)
  %10289 = bitcast %struct.State** %STATE.i168 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %10289)
  %10290 = bitcast %struct.Memory** %MEMORY.i169 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %10290)
  %10291 = bitcast i64** %_DR0.i170 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %10291)
  %10292 = bitcast i64** %_DR1.i171 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %10292)
  %10293 = bitcast i64** %_DR2.i172 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %10293)
  %10294 = bitcast i64** %_DR3.i173 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %10294)
  %10295 = bitcast i64** %_DR4.i174 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %10295)
  %10296 = bitcast i64** %_DR5.i175 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %10296)
  %10297 = bitcast i64** %_DR6.i176 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %10297)
  %10298 = bitcast i64** %_DR7.i177 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %10298)
  %10299 = bitcast i64** %CR0.i178 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %10299)
  %10300 = bitcast i64** %CR1.i179 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %10300)
  %10301 = bitcast i64** %CR2.i180 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %10301)
  %10302 = bitcast i64** %CR3.i181 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %10302)
  %10303 = bitcast i64** %CR4.i182 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %10303)
  %10304 = bitcast i64** %CR8.i183 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %10304)
  %10305 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %10306 = load i64, i64* %RBP
  %10307 = sub i64 %10306, 144
  %10308 = load i64, i64* %PC
  %10309 = add i64 %10308, 8
  store i64 %10309, i64* %PC
  %10310 = inttoptr i64 %10307 to double*
  %10311 = load double, double* %10310
  %10312 = bitcast i8* %10305 to double*
  store double %10311, double* %10312, align 1, !tbaa !2432
  %10313 = getelementptr inbounds i8, i8* %10305, i64 8
  %10314 = bitcast i8* %10313 to double*
  store double 0.000000e+00, double* %10314, align 1, !tbaa !2432
  %10315 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %10316 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %10317 = load i64, i64* %RBP
  %10318 = sub i64 %10317, 152
  %10319 = load i64, i64* %PC
  %10320 = add i64 %10319, 8
  store i64 %10320, i64* %PC
  %10321 = bitcast i8* %10316 to double*
  %10322 = load double, double* %10321, align 1
  %10323 = getelementptr inbounds i8, i8* %10316, i64 8
  %10324 = bitcast i8* %10323 to i64*
  %10325 = load i64, i64* %10324, align 1
  %10326 = inttoptr i64 %10318 to double*
  %10327 = load double, double* %10326
  %10328 = fsub double %10322, %10327
  %10329 = bitcast i8* %10315 to double*
  store double %10328, double* %10329, align 1, !tbaa !2432
  %10330 = getelementptr inbounds i8, i8* %10315, i64 8
  %10331 = bitcast i8* %10330 to i64*
  store i64 %10325, i64* %10331, align 1, !tbaa !2432
  %10332 = load i64, i64* %RBP
  %10333 = sub i64 %10332, 312
  %10334 = bitcast %union.vec128_t* %XMM0 to i8*
  %10335 = load i64, i64* %PC
  %10336 = add i64 %10335, 8
  store i64 %10336, i64* %PC
  %10337 = bitcast i8* %10334 to double*
  %10338 = load double, double* %10337, align 1
  %10339 = inttoptr i64 %10333 to double*
  store double %10338, double* %10339
  %10340 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10341 = bitcast %union.vec128_t* %XMM1 to i8*
  %10342 = load i64, i64* %PC
  %10343 = add i64 %10342, 3
  store i64 %10343, i64* %PC
  %10344 = bitcast i8* %10341 to <2 x i32>*
  %10345 = load <2 x i32>, <2 x i32>* %10344, align 1
  %10346 = getelementptr inbounds i8, i8* %10341, i64 8
  %10347 = bitcast i8* %10346 to <2 x i32>*
  %10348 = load <2 x i32>, <2 x i32>* %10347, align 1
  %10349 = extractelement <2 x i32> %10345, i32 0
  %10350 = bitcast i8* %10340 to i32*
  store i32 %10349, i32* %10350, align 1, !tbaa !2460
  %10351 = extractelement <2 x i32> %10345, i32 1
  %10352 = getelementptr inbounds i8, i8* %10340, i64 4
  %10353 = bitcast i8* %10352 to i32*
  store i32 %10351, i32* %10353, align 1, !tbaa !2460
  %10354 = extractelement <2 x i32> %10348, i32 0
  %10355 = getelementptr inbounds i8, i8* %10340, i64 8
  %10356 = bitcast i8* %10355 to i32*
  store i32 %10354, i32* %10356, align 1, !tbaa !2460
  %10357 = extractelement <2 x i32> %10348, i32 1
  %10358 = getelementptr inbounds i8, i8* %10340, i64 12
  %10359 = bitcast i8* %10358 to i32*
  store i32 %10357, i32* %10359, align 1, !tbaa !2460
  %10360 = load i64, i64* %PC
  %10361 = sub i64 %10360, 2766
  %10362 = load i64, i64* %PC
  %10363 = add i64 %10362, 5
  %10364 = load i64, i64* %PC
  %10365 = add i64 %10364, 5
  store i64 %10365, i64* %PC
  %10366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10367 = load i64, i64* %10366, align 8, !tbaa !2428
  %10368 = add i64 %10367, -8
  %10369 = inttoptr i64 %10368 to i64*
  store i64 %10363, i64* %10369
  store i64 %10368, i64* %10366, align 8, !tbaa !2428
  %10370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10361, i64* %10370, align 8, !tbaa !2428
  %10371 = load i64, i64* %PC
  %10372 = bitcast %struct.State** %state.i1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %10372)
  %10373 = bitcast i64* %curr_pc.i2 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %10373)
  %10374 = bitcast %struct.Memory** %memory.i3 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %10374)
  call void @llvm.lifetime.start(i64 1, i8* %BRANCH_TAKEN.i4)
  %10375 = bitcast i64* %SS_BASE.i5 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %10375)
  %10376 = bitcast i64* %ES_BASE.i6 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %10376)
  %10377 = bitcast i64* %DS_BASE.i7 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %10377)
  %10378 = bitcast i64* %CS_BASE.i8 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %10378)
  %10379 = bitcast %struct.State** %STATE.i9 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %10379)
  %10380 = bitcast %struct.Memory** %MEMORY.i10 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %10380)
  %10381 = bitcast i64** %_DR0.i11 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %10381)
  %10382 = bitcast i64** %_DR1.i12 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %10382)
  %10383 = bitcast i64** %_DR2.i13 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %10383)
  %10384 = bitcast i64** %_DR3.i14 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %10384)
  %10385 = bitcast i64** %_DR4.i15 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %10385)
  %10386 = bitcast i64** %_DR5.i16 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %10386)
  %10387 = bitcast i64** %_DR6.i17 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %10387)
  %10388 = bitcast i64** %_DR7.i18 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %10388)
  %10389 = bitcast i64** %CR0.i19 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %10389)
  %10390 = bitcast i64** %CR1.i20 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %10390)
  %10391 = bitcast i64** %CR2.i21 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %10391)
  %10392 = bitcast i64** %CR3.i22 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %10392)
  %10393 = bitcast i64** %CR4.i23 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %10393)
  %10394 = bitcast i64** %CR8.i24 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %10394)
  store %struct.State* %0, %struct.State** %state.i1, align 8, !noalias !2510
  store i64 %10371, i64* %curr_pc.i2, align 8, !noalias !2510
  store %struct.Memory* %10281, %struct.Memory** %memory.i3, align 8, !noalias !2510
  store i8 0, i8* %BRANCH_TAKEN.i4, align 1, !noalias !2510
  store i64 0, i64* %SS_BASE.i5, align 8, !noalias !2510
  store i64 0, i64* %ES_BASE.i6, align 8, !noalias !2510
  store i64 0, i64* %DS_BASE.i7, align 8, !noalias !2510
  store i64 0, i64* %CS_BASE.i8, align 8, !noalias !2510
  store %struct.State* %0, %struct.State** %STATE.i9, align 8, !noalias !2510
  store %struct.Memory* %10281, %struct.Memory** %MEMORY.i10, align 8, !noalias !2510
  %10395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10396 = getelementptr inbounds %struct.GPR, %struct.GPR* %10395, i32 0, i32 33
  %10397 = getelementptr inbounds %struct.Reg, %struct.Reg* %10396, i32 0, i32 0
  %PC.i25 = bitcast %union.anon* %10397 to i64*
  store i64 %10371, i64* %PC.i25, align 8, !alias.scope !2514, !noalias !2515
  %10398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10399 = getelementptr inbounds %struct.GPR, %struct.GPR* %10398, i32 0, i32 1
  %10400 = getelementptr inbounds %struct.Reg, %struct.Reg* %10399, i32 0, i32 0
  %10401 = bitcast %union.anon* %10400 to %struct.anon.2*
  %AH.i26 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10401, i32 0, i32 1
  %10402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10403 = getelementptr inbounds %struct.GPR, %struct.GPR* %10402, i32 0, i32 3
  %10404 = getelementptr inbounds %struct.Reg, %struct.Reg* %10403, i32 0, i32 0
  %10405 = bitcast %union.anon* %10404 to %struct.anon.2*
  %BH.i27 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10405, i32 0, i32 1
  %10406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10407 = getelementptr inbounds %struct.GPR, %struct.GPR* %10406, i32 0, i32 5
  %10408 = getelementptr inbounds %struct.Reg, %struct.Reg* %10407, i32 0, i32 0
  %10409 = bitcast %union.anon* %10408 to %struct.anon.2*
  %CH.i28 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10409, i32 0, i32 1
  %10410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10411 = getelementptr inbounds %struct.GPR, %struct.GPR* %10410, i32 0, i32 7
  %10412 = getelementptr inbounds %struct.Reg, %struct.Reg* %10411, i32 0, i32 0
  %10413 = bitcast %union.anon* %10412 to %struct.anon.2*
  %DH.i29 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10413, i32 0, i32 1
  %10414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10415 = getelementptr inbounds %struct.GPR, %struct.GPR* %10414, i32 0, i32 1
  %10416 = getelementptr inbounds %struct.Reg, %struct.Reg* %10415, i32 0, i32 0
  %10417 = bitcast %union.anon* %10416 to %struct.anon.2*
  %AL.i30 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10417, i32 0, i32 0
  %10418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10419 = getelementptr inbounds %struct.GPR, %struct.GPR* %10418, i32 0, i32 3
  %10420 = getelementptr inbounds %struct.Reg, %struct.Reg* %10419, i32 0, i32 0
  %10421 = bitcast %union.anon* %10420 to %struct.anon.2*
  %BL.i31 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10421, i32 0, i32 0
  %10422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10423 = getelementptr inbounds %struct.GPR, %struct.GPR* %10422, i32 0, i32 5
  %10424 = getelementptr inbounds %struct.Reg, %struct.Reg* %10423, i32 0, i32 0
  %10425 = bitcast %union.anon* %10424 to %struct.anon.2*
  %CL.i32 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10425, i32 0, i32 0
  %10426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10427 = getelementptr inbounds %struct.GPR, %struct.GPR* %10426, i32 0, i32 7
  %10428 = getelementptr inbounds %struct.Reg, %struct.Reg* %10427, i32 0, i32 0
  %10429 = bitcast %union.anon* %10428 to %struct.anon.2*
  %DL.i33 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10429, i32 0, i32 0
  %10430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10431 = getelementptr inbounds %struct.GPR, %struct.GPR* %10430, i32 0, i32 9
  %10432 = getelementptr inbounds %struct.Reg, %struct.Reg* %10431, i32 0, i32 0
  %10433 = bitcast %union.anon* %10432 to %struct.anon.2*
  %SIL.i34 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10433, i32 0, i32 0
  %10434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10435 = getelementptr inbounds %struct.GPR, %struct.GPR* %10434, i32 0, i32 11
  %10436 = getelementptr inbounds %struct.Reg, %struct.Reg* %10435, i32 0, i32 0
  %10437 = bitcast %union.anon* %10436 to %struct.anon.2*
  %DIL.i35 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10437, i32 0, i32 0
  %10438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10439 = getelementptr inbounds %struct.GPR, %struct.GPR* %10438, i32 0, i32 13
  %10440 = getelementptr inbounds %struct.Reg, %struct.Reg* %10439, i32 0, i32 0
  %10441 = bitcast %union.anon* %10440 to %struct.anon.2*
  %SPL.i36 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10441, i32 0, i32 0
  %10442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10443 = getelementptr inbounds %struct.GPR, %struct.GPR* %10442, i32 0, i32 15
  %10444 = getelementptr inbounds %struct.Reg, %struct.Reg* %10443, i32 0, i32 0
  %10445 = bitcast %union.anon* %10444 to %struct.anon.2*
  %BPL.i37 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10445, i32 0, i32 0
  %10446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10447 = getelementptr inbounds %struct.GPR, %struct.GPR* %10446, i32 0, i32 17
  %10448 = getelementptr inbounds %struct.Reg, %struct.Reg* %10447, i32 0, i32 0
  %10449 = bitcast %union.anon* %10448 to %struct.anon.2*
  %R8B.i38 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10449, i32 0, i32 0
  %10450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10451 = getelementptr inbounds %struct.GPR, %struct.GPR* %10450, i32 0, i32 19
  %10452 = getelementptr inbounds %struct.Reg, %struct.Reg* %10451, i32 0, i32 0
  %10453 = bitcast %union.anon* %10452 to %struct.anon.2*
  %R9B.i39 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10453, i32 0, i32 0
  %10454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10455 = getelementptr inbounds %struct.GPR, %struct.GPR* %10454, i32 0, i32 21
  %10456 = getelementptr inbounds %struct.Reg, %struct.Reg* %10455, i32 0, i32 0
  %10457 = bitcast %union.anon* %10456 to %struct.anon.2*
  %R10B.i40 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10457, i32 0, i32 0
  %10458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10459 = getelementptr inbounds %struct.GPR, %struct.GPR* %10458, i32 0, i32 23
  %10460 = getelementptr inbounds %struct.Reg, %struct.Reg* %10459, i32 0, i32 0
  %10461 = bitcast %union.anon* %10460 to %struct.anon.2*
  %R11B.i41 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10461, i32 0, i32 0
  %10462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10463 = getelementptr inbounds %struct.GPR, %struct.GPR* %10462, i32 0, i32 25
  %10464 = getelementptr inbounds %struct.Reg, %struct.Reg* %10463, i32 0, i32 0
  %10465 = bitcast %union.anon* %10464 to %struct.anon.2*
  %R12B.i42 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10465, i32 0, i32 0
  %10466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10467 = getelementptr inbounds %struct.GPR, %struct.GPR* %10466, i32 0, i32 27
  %10468 = getelementptr inbounds %struct.Reg, %struct.Reg* %10467, i32 0, i32 0
  %10469 = bitcast %union.anon* %10468 to %struct.anon.2*
  %R13B.i43 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10469, i32 0, i32 0
  %10470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10471 = getelementptr inbounds %struct.GPR, %struct.GPR* %10470, i32 0, i32 29
  %10472 = getelementptr inbounds %struct.Reg, %struct.Reg* %10471, i32 0, i32 0
  %10473 = bitcast %union.anon* %10472 to %struct.anon.2*
  %R14B.i44 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10473, i32 0, i32 0
  %10474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10475 = getelementptr inbounds %struct.GPR, %struct.GPR* %10474, i32 0, i32 31
  %10476 = getelementptr inbounds %struct.Reg, %struct.Reg* %10475, i32 0, i32 0
  %10477 = bitcast %union.anon* %10476 to %struct.anon.2*
  %R15B.i45 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10477, i32 0, i32 0
  %10478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10479 = getelementptr inbounds %struct.GPR, %struct.GPR* %10478, i32 0, i32 1
  %10480 = getelementptr inbounds %struct.Reg, %struct.Reg* %10479, i32 0, i32 0
  %AX.i46 = bitcast %union.anon* %10480 to i16*
  %10481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10482 = getelementptr inbounds %struct.GPR, %struct.GPR* %10481, i32 0, i32 3
  %10483 = getelementptr inbounds %struct.Reg, %struct.Reg* %10482, i32 0, i32 0
  %BX.i47 = bitcast %union.anon* %10483 to i16*
  %10484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10485 = getelementptr inbounds %struct.GPR, %struct.GPR* %10484, i32 0, i32 5
  %10486 = getelementptr inbounds %struct.Reg, %struct.Reg* %10485, i32 0, i32 0
  %CX.i48 = bitcast %union.anon* %10486 to i16*
  %10487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10488 = getelementptr inbounds %struct.GPR, %struct.GPR* %10487, i32 0, i32 7
  %10489 = getelementptr inbounds %struct.Reg, %struct.Reg* %10488, i32 0, i32 0
  %DX.i49 = bitcast %union.anon* %10489 to i16*
  %10490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10491 = getelementptr inbounds %struct.GPR, %struct.GPR* %10490, i32 0, i32 9
  %10492 = getelementptr inbounds %struct.Reg, %struct.Reg* %10491, i32 0, i32 0
  %SI.i50 = bitcast %union.anon* %10492 to i16*
  %10493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10494 = getelementptr inbounds %struct.GPR, %struct.GPR* %10493, i32 0, i32 11
  %10495 = getelementptr inbounds %struct.Reg, %struct.Reg* %10494, i32 0, i32 0
  %DI.i51 = bitcast %union.anon* %10495 to i16*
  %10496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10497 = getelementptr inbounds %struct.GPR, %struct.GPR* %10496, i32 0, i32 13
  %10498 = getelementptr inbounds %struct.Reg, %struct.Reg* %10497, i32 0, i32 0
  %SP.i52 = bitcast %union.anon* %10498 to i16*
  %10499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10500 = getelementptr inbounds %struct.GPR, %struct.GPR* %10499, i32 0, i32 15
  %10501 = getelementptr inbounds %struct.Reg, %struct.Reg* %10500, i32 0, i32 0
  %BP.i53 = bitcast %union.anon* %10501 to i16*
  %10502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10503 = getelementptr inbounds %struct.GPR, %struct.GPR* %10502, i32 0, i32 17
  %10504 = getelementptr inbounds %struct.Reg, %struct.Reg* %10503, i32 0, i32 0
  %R8W.i54 = bitcast %union.anon* %10504 to i16*
  %10505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10506 = getelementptr inbounds %struct.GPR, %struct.GPR* %10505, i32 0, i32 19
  %10507 = getelementptr inbounds %struct.Reg, %struct.Reg* %10506, i32 0, i32 0
  %R9W.i55 = bitcast %union.anon* %10507 to i16*
  %10508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10509 = getelementptr inbounds %struct.GPR, %struct.GPR* %10508, i32 0, i32 21
  %10510 = getelementptr inbounds %struct.Reg, %struct.Reg* %10509, i32 0, i32 0
  %R10W.i56 = bitcast %union.anon* %10510 to i16*
  %10511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10512 = getelementptr inbounds %struct.GPR, %struct.GPR* %10511, i32 0, i32 23
  %10513 = getelementptr inbounds %struct.Reg, %struct.Reg* %10512, i32 0, i32 0
  %R11W.i57 = bitcast %union.anon* %10513 to i16*
  %10514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10515 = getelementptr inbounds %struct.GPR, %struct.GPR* %10514, i32 0, i32 25
  %10516 = getelementptr inbounds %struct.Reg, %struct.Reg* %10515, i32 0, i32 0
  %R12W.i58 = bitcast %union.anon* %10516 to i16*
  %10517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10518 = getelementptr inbounds %struct.GPR, %struct.GPR* %10517, i32 0, i32 27
  %10519 = getelementptr inbounds %struct.Reg, %struct.Reg* %10518, i32 0, i32 0
  %R13W.i59 = bitcast %union.anon* %10519 to i16*
  %10520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10521 = getelementptr inbounds %struct.GPR, %struct.GPR* %10520, i32 0, i32 29
  %10522 = getelementptr inbounds %struct.Reg, %struct.Reg* %10521, i32 0, i32 0
  %R14W.i60 = bitcast %union.anon* %10522 to i16*
  %10523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10524 = getelementptr inbounds %struct.GPR, %struct.GPR* %10523, i32 0, i32 31
  %10525 = getelementptr inbounds %struct.Reg, %struct.Reg* %10524, i32 0, i32 0
  %R15W.i61 = bitcast %union.anon* %10525 to i16*
  %10526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10527 = getelementptr inbounds %struct.GPR, %struct.GPR* %10526, i32 0, i32 33
  %10528 = getelementptr inbounds %struct.Reg, %struct.Reg* %10527, i32 0, i32 0
  %IP.i62 = bitcast %union.anon* %10528 to i16*
  %10529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10530 = getelementptr inbounds %struct.GPR, %struct.GPR* %10529, i32 0, i32 1
  %10531 = getelementptr inbounds %struct.Reg, %struct.Reg* %10530, i32 0, i32 0
  %EAX.i63 = bitcast %union.anon* %10531 to i32*
  %10532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10533 = getelementptr inbounds %struct.GPR, %struct.GPR* %10532, i32 0, i32 3
  %10534 = getelementptr inbounds %struct.Reg, %struct.Reg* %10533, i32 0, i32 0
  %EBX.i64 = bitcast %union.anon* %10534 to i32*
  %10535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10536 = getelementptr inbounds %struct.GPR, %struct.GPR* %10535, i32 0, i32 5
  %10537 = getelementptr inbounds %struct.Reg, %struct.Reg* %10536, i32 0, i32 0
  %ECX.i65 = bitcast %union.anon* %10537 to i32*
  %10538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10539 = getelementptr inbounds %struct.GPR, %struct.GPR* %10538, i32 0, i32 7
  %10540 = getelementptr inbounds %struct.Reg, %struct.Reg* %10539, i32 0, i32 0
  %EDX.i66 = bitcast %union.anon* %10540 to i32*
  %10541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10542 = getelementptr inbounds %struct.GPR, %struct.GPR* %10541, i32 0, i32 9
  %10543 = getelementptr inbounds %struct.Reg, %struct.Reg* %10542, i32 0, i32 0
  %ESI.i67 = bitcast %union.anon* %10543 to i32*
  %10544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10545 = getelementptr inbounds %struct.GPR, %struct.GPR* %10544, i32 0, i32 11
  %10546 = getelementptr inbounds %struct.Reg, %struct.Reg* %10545, i32 0, i32 0
  %EDI.i68 = bitcast %union.anon* %10546 to i32*
  %10547 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10548 = getelementptr inbounds %struct.GPR, %struct.GPR* %10547, i32 0, i32 13
  %10549 = getelementptr inbounds %struct.Reg, %struct.Reg* %10548, i32 0, i32 0
  %ESP.i69 = bitcast %union.anon* %10549 to i32*
  %10550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10551 = getelementptr inbounds %struct.GPR, %struct.GPR* %10550, i32 0, i32 15
  %10552 = getelementptr inbounds %struct.Reg, %struct.Reg* %10551, i32 0, i32 0
  %EBP.i70 = bitcast %union.anon* %10552 to i32*
  %10553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10554 = getelementptr inbounds %struct.GPR, %struct.GPR* %10553, i32 0, i32 33
  %10555 = getelementptr inbounds %struct.Reg, %struct.Reg* %10554, i32 0, i32 0
  %EIP.i71 = bitcast %union.anon* %10555 to i32*
  %10556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10557 = getelementptr inbounds %struct.GPR, %struct.GPR* %10556, i32 0, i32 17
  %10558 = getelementptr inbounds %struct.Reg, %struct.Reg* %10557, i32 0, i32 0
  %R8D.i72 = bitcast %union.anon* %10558 to i32*
  %10559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10560 = getelementptr inbounds %struct.GPR, %struct.GPR* %10559, i32 0, i32 19
  %10561 = getelementptr inbounds %struct.Reg, %struct.Reg* %10560, i32 0, i32 0
  %R9D.i73 = bitcast %union.anon* %10561 to i32*
  %10562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10563 = getelementptr inbounds %struct.GPR, %struct.GPR* %10562, i32 0, i32 21
  %10564 = getelementptr inbounds %struct.Reg, %struct.Reg* %10563, i32 0, i32 0
  %R10D.i74 = bitcast %union.anon* %10564 to i32*
  %10565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10566 = getelementptr inbounds %struct.GPR, %struct.GPR* %10565, i32 0, i32 23
  %10567 = getelementptr inbounds %struct.Reg, %struct.Reg* %10566, i32 0, i32 0
  %R11D.i75 = bitcast %union.anon* %10567 to i32*
  %10568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10569 = getelementptr inbounds %struct.GPR, %struct.GPR* %10568, i32 0, i32 25
  %10570 = getelementptr inbounds %struct.Reg, %struct.Reg* %10569, i32 0, i32 0
  %R12D.i76 = bitcast %union.anon* %10570 to i32*
  %10571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10572 = getelementptr inbounds %struct.GPR, %struct.GPR* %10571, i32 0, i32 27
  %10573 = getelementptr inbounds %struct.Reg, %struct.Reg* %10572, i32 0, i32 0
  %R13D.i77 = bitcast %union.anon* %10573 to i32*
  %10574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10575 = getelementptr inbounds %struct.GPR, %struct.GPR* %10574, i32 0, i32 29
  %10576 = getelementptr inbounds %struct.Reg, %struct.Reg* %10575, i32 0, i32 0
  %R14D.i78 = bitcast %union.anon* %10576 to i32*
  %10577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10578 = getelementptr inbounds %struct.GPR, %struct.GPR* %10577, i32 0, i32 31
  %10579 = getelementptr inbounds %struct.Reg, %struct.Reg* %10578, i32 0, i32 0
  %R15D.i79 = bitcast %union.anon* %10579 to i32*
  %10580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10581 = getelementptr inbounds %struct.GPR, %struct.GPR* %10580, i32 0, i32 1
  %10582 = getelementptr inbounds %struct.Reg, %struct.Reg* %10581, i32 0, i32 0
  %RAX.i80 = bitcast %union.anon* %10582 to i64*
  %10583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10584 = getelementptr inbounds %struct.GPR, %struct.GPR* %10583, i32 0, i32 3
  %10585 = getelementptr inbounds %struct.Reg, %struct.Reg* %10584, i32 0, i32 0
  %RBX.i81 = bitcast %union.anon* %10585 to i64*
  %10586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10587 = getelementptr inbounds %struct.GPR, %struct.GPR* %10586, i32 0, i32 5
  %10588 = getelementptr inbounds %struct.Reg, %struct.Reg* %10587, i32 0, i32 0
  %RCX.i82 = bitcast %union.anon* %10588 to i64*
  %10589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10590 = getelementptr inbounds %struct.GPR, %struct.GPR* %10589, i32 0, i32 7
  %10591 = getelementptr inbounds %struct.Reg, %struct.Reg* %10590, i32 0, i32 0
  %RDX.i83 = bitcast %union.anon* %10591 to i64*
  %10592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10593 = getelementptr inbounds %struct.GPR, %struct.GPR* %10592, i32 0, i32 9
  %10594 = getelementptr inbounds %struct.Reg, %struct.Reg* %10593, i32 0, i32 0
  %RSI.i84 = bitcast %union.anon* %10594 to i64*
  %10595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10596 = getelementptr inbounds %struct.GPR, %struct.GPR* %10595, i32 0, i32 11
  %10597 = getelementptr inbounds %struct.Reg, %struct.Reg* %10596, i32 0, i32 0
  %RDI.i85 = bitcast %union.anon* %10597 to i64*
  %10598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10599 = getelementptr inbounds %struct.GPR, %struct.GPR* %10598, i32 0, i32 13
  %10600 = getelementptr inbounds %struct.Reg, %struct.Reg* %10599, i32 0, i32 0
  %RSP.i86 = bitcast %union.anon* %10600 to i64*
  %10601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10602 = getelementptr inbounds %struct.GPR, %struct.GPR* %10601, i32 0, i32 15
  %10603 = getelementptr inbounds %struct.Reg, %struct.Reg* %10602, i32 0, i32 0
  %RBP.i87 = bitcast %union.anon* %10603 to i64*
  %10604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10605 = getelementptr inbounds %struct.GPR, %struct.GPR* %10604, i32 0, i32 17
  %10606 = getelementptr inbounds %struct.Reg, %struct.Reg* %10605, i32 0, i32 0
  %R8.i88 = bitcast %union.anon* %10606 to i64*
  %10607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10608 = getelementptr inbounds %struct.GPR, %struct.GPR* %10607, i32 0, i32 19
  %10609 = getelementptr inbounds %struct.Reg, %struct.Reg* %10608, i32 0, i32 0
  %R9.i89 = bitcast %union.anon* %10609 to i64*
  %10610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10611 = getelementptr inbounds %struct.GPR, %struct.GPR* %10610, i32 0, i32 21
  %10612 = getelementptr inbounds %struct.Reg, %struct.Reg* %10611, i32 0, i32 0
  %R10.i90 = bitcast %union.anon* %10612 to i64*
  %10613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10614 = getelementptr inbounds %struct.GPR, %struct.GPR* %10613, i32 0, i32 23
  %10615 = getelementptr inbounds %struct.Reg, %struct.Reg* %10614, i32 0, i32 0
  %R11.i91 = bitcast %union.anon* %10615 to i64*
  %10616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10617 = getelementptr inbounds %struct.GPR, %struct.GPR* %10616, i32 0, i32 25
  %10618 = getelementptr inbounds %struct.Reg, %struct.Reg* %10617, i32 0, i32 0
  %R12.i92 = bitcast %union.anon* %10618 to i64*
  %10619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10620 = getelementptr inbounds %struct.GPR, %struct.GPR* %10619, i32 0, i32 27
  %10621 = getelementptr inbounds %struct.Reg, %struct.Reg* %10620, i32 0, i32 0
  %R13.i93 = bitcast %union.anon* %10621 to i64*
  %10622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10623 = getelementptr inbounds %struct.GPR, %struct.GPR* %10622, i32 0, i32 29
  %10624 = getelementptr inbounds %struct.Reg, %struct.Reg* %10623, i32 0, i32 0
  %R14.i94 = bitcast %union.anon* %10624 to i64*
  %10625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10626 = getelementptr inbounds %struct.GPR, %struct.GPR* %10625, i32 0, i32 31
  %10627 = getelementptr inbounds %struct.Reg, %struct.Reg* %10626, i32 0, i32 0
  %R15.i95 = bitcast %union.anon* %10627 to i64*
  %10628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10629 = getelementptr inbounds %struct.GPR, %struct.GPR* %10628, i32 0, i32 33
  %10630 = getelementptr inbounds %struct.Reg, %struct.Reg* %10629, i32 0, i32 0
  %RIP.i96 = bitcast %union.anon* %10630 to i64*
  %10631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %10632 = getelementptr inbounds %struct.Segments, %struct.Segments* %10631, i32 0, i32 1
  %SS.i97 = bitcast %union.SegmentSelector* %10632 to i16*
  %10633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %10634 = getelementptr inbounds %struct.Segments, %struct.Segments* %10633, i32 0, i32 3
  %ES.i98 = bitcast %union.SegmentSelector* %10634 to i16*
  %10635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %10636 = getelementptr inbounds %struct.Segments, %struct.Segments* %10635, i32 0, i32 5
  %GS.i99 = bitcast %union.SegmentSelector* %10636 to i16*
  %10637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %10638 = getelementptr inbounds %struct.Segments, %struct.Segments* %10637, i32 0, i32 7
  %FS.i100 = bitcast %union.SegmentSelector* %10638 to i16*
  %10639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %10640 = getelementptr inbounds %struct.Segments, %struct.Segments* %10639, i32 0, i32 9
  %DS.i101 = bitcast %union.SegmentSelector* %10640 to i16*
  %10641 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %10642 = getelementptr inbounds %struct.Segments, %struct.Segments* %10641, i32 0, i32 11
  %CS.i102 = bitcast %union.SegmentSelector* %10642 to i16*
  %10643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %10644 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %10643, i32 0, i32 5
  %10645 = getelementptr inbounds %struct.Reg, %struct.Reg* %10644, i32 0, i32 0
  %GS_BASE.i103 = bitcast %union.anon* %10645 to i64*
  %10646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %10647 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %10646, i32 0, i32 7
  %10648 = getelementptr inbounds %struct.Reg, %struct.Reg* %10647, i32 0, i32 0
  %FS_BASE.i104 = bitcast %union.anon* %10648 to i64*
  %10649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10650 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10649, i64 0, i64 0
  %YMM0.i105 = bitcast %union.VectorReg* %10650 to %"class.std::bitset"*
  %10651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10652 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10651, i64 0, i64 1
  %YMM1.i106 = bitcast %union.VectorReg* %10652 to %"class.std::bitset"*
  %10653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10654 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10653, i64 0, i64 2
  %YMM2.i107 = bitcast %union.VectorReg* %10654 to %"class.std::bitset"*
  %10655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10656 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10655, i64 0, i64 3
  %YMM3.i108 = bitcast %union.VectorReg* %10656 to %"class.std::bitset"*
  %10657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10658 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10657, i64 0, i64 4
  %YMM4.i109 = bitcast %union.VectorReg* %10658 to %"class.std::bitset"*
  %10659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10660 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10659, i64 0, i64 5
  %YMM5.i110 = bitcast %union.VectorReg* %10660 to %"class.std::bitset"*
  %10661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10662 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10661, i64 0, i64 6
  %YMM6.i111 = bitcast %union.VectorReg* %10662 to %"class.std::bitset"*
  %10663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10664 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10663, i64 0, i64 7
  %YMM7.i112 = bitcast %union.VectorReg* %10664 to %"class.std::bitset"*
  %10665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10666 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10665, i64 0, i64 8
  %YMM8.i113 = bitcast %union.VectorReg* %10666 to %"class.std::bitset"*
  %10667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10668 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10667, i64 0, i64 9
  %YMM9.i114 = bitcast %union.VectorReg* %10668 to %"class.std::bitset"*
  %10669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10670 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10669, i64 0, i64 10
  %YMM10.i115 = bitcast %union.VectorReg* %10670 to %"class.std::bitset"*
  %10671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10672 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10671, i64 0, i64 11
  %YMM11.i116 = bitcast %union.VectorReg* %10672 to %"class.std::bitset"*
  %10673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10674 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10673, i64 0, i64 12
  %YMM12.i117 = bitcast %union.VectorReg* %10674 to %"class.std::bitset"*
  %10675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10676 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10675, i64 0, i64 13
  %YMM13.i118 = bitcast %union.VectorReg* %10676 to %"class.std::bitset"*
  %10677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10678 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10677, i64 0, i64 14
  %YMM14.i119 = bitcast %union.VectorReg* %10678 to %"class.std::bitset"*
  %10679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10680 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10679, i64 0, i64 15
  %YMM15.i120 = bitcast %union.VectorReg* %10680 to %"class.std::bitset"*
  %10681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10682 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10681, i64 0, i64 0
  %XMM0.i121 = bitcast %union.VectorReg* %10682 to %union.vec128_t*
  %10683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10684 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10683, i64 0, i64 1
  %XMM1.i122 = bitcast %union.VectorReg* %10684 to %union.vec128_t*
  %10685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10686 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10685, i64 0, i64 2
  %XMM2.i123 = bitcast %union.VectorReg* %10686 to %union.vec128_t*
  %10687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10688 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10687, i64 0, i64 3
  %XMM3.i124 = bitcast %union.VectorReg* %10688 to %union.vec128_t*
  %10689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10690 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10689, i64 0, i64 4
  %XMM4.i125 = bitcast %union.VectorReg* %10690 to %union.vec128_t*
  %10691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10692 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10691, i64 0, i64 5
  %XMM5.i126 = bitcast %union.VectorReg* %10692 to %union.vec128_t*
  %10693 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10694 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10693, i64 0, i64 6
  %XMM6.i127 = bitcast %union.VectorReg* %10694 to %union.vec128_t*
  %10695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10696 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10695, i64 0, i64 7
  %XMM7.i128 = bitcast %union.VectorReg* %10696 to %union.vec128_t*
  %10697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10698 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10697, i64 0, i64 8
  %XMM8.i129 = bitcast %union.VectorReg* %10698 to %union.vec128_t*
  %10699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10700 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10699, i64 0, i64 9
  %XMM9.i130 = bitcast %union.VectorReg* %10700 to %union.vec128_t*
  %10701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10702 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10701, i64 0, i64 10
  %XMM10.i131 = bitcast %union.VectorReg* %10702 to %union.vec128_t*
  %10703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10704 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10703, i64 0, i64 11
  %XMM11.i132 = bitcast %union.VectorReg* %10704 to %union.vec128_t*
  %10705 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10706 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10705, i64 0, i64 12
  %XMM12.i133 = bitcast %union.VectorReg* %10706 to %union.vec128_t*
  %10707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10708 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10707, i64 0, i64 13
  %XMM13.i134 = bitcast %union.VectorReg* %10708 to %union.vec128_t*
  %10709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10710 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10709, i64 0, i64 14
  %XMM14.i135 = bitcast %union.VectorReg* %10710 to %union.vec128_t*
  %10711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10712 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10711, i64 0, i64 15
  %XMM15.i136 = bitcast %union.VectorReg* %10712 to %union.vec128_t*
  %10713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %10714 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %10713, i32 0, i32 0
  %10715 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %10714, i64 0, i64 0
  %ST0.i137 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %10715, i32 0, i32 1
  %10716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %10717 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %10716, i32 0, i32 0
  %10718 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %10717, i64 0, i64 1
  %ST1.i138 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %10718, i32 0, i32 1
  %10719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %10720 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %10719, i32 0, i32 0
  %10721 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %10720, i64 0, i64 2
  %ST2.i139 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %10721, i32 0, i32 1
  %10722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %10723 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %10722, i32 0, i32 0
  %10724 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %10723, i64 0, i64 3
  %ST3.i140 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %10724, i32 0, i32 1
  %10725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %10726 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %10725, i32 0, i32 0
  %10727 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %10726, i64 0, i64 4
  %ST4.i141 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %10727, i32 0, i32 1
  %10728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %10729 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %10728, i32 0, i32 0
  %10730 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %10729, i64 0, i64 5
  %ST5.i142 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %10730, i32 0, i32 1
  %10731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %10732 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %10731, i32 0, i32 0
  %10733 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %10732, i64 0, i64 6
  %ST6.i143 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %10733, i32 0, i32 1
  %10734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %10735 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %10734, i32 0, i32 0
  %10736 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %10735, i64 0, i64 7
  %ST7.i144 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %10736, i32 0, i32 1
  %10737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %10738 = getelementptr inbounds %struct.MMX, %struct.MMX* %10737, i32 0, i32 0
  %10739 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %10738, i64 0, i64 0
  %10740 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %10739, i32 0, i32 1
  %10741 = bitcast %union.vec64_t* %10740 to %struct.uint64v1_t*
  %10742 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %10741, i32 0, i32 0
  %MM0.i145 = getelementptr inbounds [1 x i64], [1 x i64]* %10742, i64 0, i64 0
  %10743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %10744 = getelementptr inbounds %struct.MMX, %struct.MMX* %10743, i32 0, i32 0
  %10745 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %10744, i64 0, i64 1
  %10746 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %10745, i32 0, i32 1
  %10747 = bitcast %union.vec64_t* %10746 to %struct.uint64v1_t*
  %10748 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %10747, i32 0, i32 0
  %MM1.i146 = getelementptr inbounds [1 x i64], [1 x i64]* %10748, i64 0, i64 0
  %10749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %10750 = getelementptr inbounds %struct.MMX, %struct.MMX* %10749, i32 0, i32 0
  %10751 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %10750, i64 0, i64 2
  %10752 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %10751, i32 0, i32 1
  %10753 = bitcast %union.vec64_t* %10752 to %struct.uint64v1_t*
  %10754 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %10753, i32 0, i32 0
  %MM2.i147 = getelementptr inbounds [1 x i64], [1 x i64]* %10754, i64 0, i64 0
  %10755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %10756 = getelementptr inbounds %struct.MMX, %struct.MMX* %10755, i32 0, i32 0
  %10757 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %10756, i64 0, i64 3
  %10758 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %10757, i32 0, i32 1
  %10759 = bitcast %union.vec64_t* %10758 to %struct.uint64v1_t*
  %10760 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %10759, i32 0, i32 0
  %MM3.i148 = getelementptr inbounds [1 x i64], [1 x i64]* %10760, i64 0, i64 0
  %10761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %10762 = getelementptr inbounds %struct.MMX, %struct.MMX* %10761, i32 0, i32 0
  %10763 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %10762, i64 0, i64 4
  %10764 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %10763, i32 0, i32 1
  %10765 = bitcast %union.vec64_t* %10764 to %struct.uint64v1_t*
  %10766 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %10765, i32 0, i32 0
  %MM4.i149 = getelementptr inbounds [1 x i64], [1 x i64]* %10766, i64 0, i64 0
  %10767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %10768 = getelementptr inbounds %struct.MMX, %struct.MMX* %10767, i32 0, i32 0
  %10769 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %10768, i64 0, i64 5
  %10770 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %10769, i32 0, i32 1
  %10771 = bitcast %union.vec64_t* %10770 to %struct.uint64v1_t*
  %10772 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %10771, i32 0, i32 0
  %MM5.i150 = getelementptr inbounds [1 x i64], [1 x i64]* %10772, i64 0, i64 0
  %10773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %10774 = getelementptr inbounds %struct.MMX, %struct.MMX* %10773, i32 0, i32 0
  %10775 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %10774, i64 0, i64 6
  %10776 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %10775, i32 0, i32 1
  %10777 = bitcast %union.vec64_t* %10776 to %struct.uint64v1_t*
  %10778 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %10777, i32 0, i32 0
  %MM6.i151 = getelementptr inbounds [1 x i64], [1 x i64]* %10778, i64 0, i64 0
  %10779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %10780 = getelementptr inbounds %struct.MMX, %struct.MMX* %10779, i32 0, i32 0
  %10781 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %10780, i64 0, i64 7
  %10782 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %10781, i32 0, i32 1
  %10783 = bitcast %union.vec64_t* %10782 to %struct.uint64v1_t*
  %10784 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %10783, i32 0, i32 0
  %MM7.i152 = getelementptr inbounds [1 x i64], [1 x i64]* %10784, i64 0, i64 0
  %10785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF.i153 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %10785, i32 0, i32 5
  %10786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF.i154 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %10786, i32 0, i32 1
  %10787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF.i155 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %10787, i32 0, i32 11
  %10788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF.i156 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %10788, i32 0, i32 13
  %10789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF.i157 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %10789, i32 0, i32 3
  %10790 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF.i158 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %10790, i32 0, i32 9
  %10791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF.i159 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %10791, i32 0, i32 7
  store i64* @DR0, i64** %_DR0.i11, align 8, !noalias !2510
  store i64* @DR1, i64** %_DR1.i12, align 8, !noalias !2510
  store i64* @DR2, i64** %_DR2.i13, align 8, !noalias !2510
  store i64* @DR3, i64** %_DR3.i14, align 8, !noalias !2510
  store i64* @DR4, i64** %_DR4.i15, align 8, !noalias !2510
  store i64* @DR5, i64** %_DR5.i16, align 8, !noalias !2510
  store i64* @DR6, i64** %_DR6.i17, align 8, !noalias !2510
  store i64* @DR7, i64** %_DR7.i18, align 8, !noalias !2510
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0.i19, align 8, !noalias !2510
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1.i20, align 8, !noalias !2510
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2.i21, align 8, !noalias !2510
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3.i22, align 8, !noalias !2510
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4.i23, align 8, !noalias !2510
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8.i24, align 8, !noalias !2510
  %10792 = bitcast %"class.std::bitset"* %YMM0.i105 to double*
  %10793 = load double, double* %10792, !alias.scope !2514, !noalias !2515
  %10794 = load i64, i64* %RSP.i86, !alias.scope !2514, !noalias !2515
  %10795 = load %struct.Memory*, %struct.Memory** %MEMORY.i10, !noalias !2510
  %10796 = inttoptr i64 %10794 to i64*
  %10797 = load i64, i64* %10796
  store i64 %10797, i64* %PC.i25, !alias.scope !2514, !noalias !2515
  %10798 = add i64 %10794, 8
  store i64 %10798, i64* %RSP.i86, !alias.scope !2514, !noalias !2515
  %10799 = call double @cos(double %10793)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0.i105, !alias.scope !2514, !noalias !2515
  %10800 = bitcast %"class.std::bitset"* %YMM0.i105 to double*
  store double %10799, double* %10800, !alias.scope !2514, !noalias !2515
  %10801 = load %struct.Memory*, %struct.Memory** %MEMORY.i10, !noalias !2510
  %10802 = bitcast %struct.State** %state.i1 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %10802)
  %10803 = bitcast i64* %curr_pc.i2 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %10803)
  %10804 = bitcast %struct.Memory** %memory.i3 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %10804)
  call void @llvm.lifetime.end(i64 1, i8* %BRANCH_TAKEN.i4)
  %10805 = bitcast i64* %SS_BASE.i5 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %10805)
  %10806 = bitcast i64* %ES_BASE.i6 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %10806)
  %10807 = bitcast i64* %DS_BASE.i7 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %10807)
  %10808 = bitcast i64* %CS_BASE.i8 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %10808)
  %10809 = bitcast %struct.State** %STATE.i9 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %10809)
  %10810 = bitcast %struct.Memory** %MEMORY.i10 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %10810)
  %10811 = bitcast i64** %_DR0.i11 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %10811)
  %10812 = bitcast i64** %_DR1.i12 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %10812)
  %10813 = bitcast i64** %_DR2.i13 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %10813)
  %10814 = bitcast i64** %_DR3.i14 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %10814)
  %10815 = bitcast i64** %_DR4.i15 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %10815)
  %10816 = bitcast i64** %_DR5.i16 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %10816)
  %10817 = bitcast i64** %_DR6.i17 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %10817)
  %10818 = bitcast i64** %_DR7.i18 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %10818)
  %10819 = bitcast i64** %CR0.i19 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %10819)
  %10820 = bitcast i64** %CR1.i20 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %10820)
  %10821 = bitcast i64** %CR2.i21 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %10821)
  %10822 = bitcast i64** %CR3.i22 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %10822)
  %10823 = bitcast i64** %CR4.i23 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %10823)
  %10824 = bitcast i64** %CR8.i24 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %10824)
  %10825 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %10826 = load i64, i64* %RBP
  %10827 = sub i64 %10826, 312
  %10828 = load i64, i64* %PC
  %10829 = add i64 %10828, 8
  store i64 %10829, i64* %PC
  %10830 = inttoptr i64 %10827 to double*
  %10831 = load double, double* %10830
  %10832 = bitcast i8* %10825 to double*
  store double %10831, double* %10832, align 1, !tbaa !2432
  %10833 = getelementptr inbounds i8, i8* %10825, i64 8
  %10834 = bitcast i8* %10833 to double*
  store double 0.000000e+00, double* %10834, align 1, !tbaa !2432
  %10835 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %10836 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %10837 = bitcast %union.vec128_t* %XMM0 to i8*
  %10838 = load i64, i64* %PC
  %10839 = add i64 %10838, 4
  store i64 %10839, i64* %PC
  %10840 = bitcast i8* %10836 to double*
  %10841 = load double, double* %10840, align 1
  %10842 = getelementptr inbounds i8, i8* %10836, i64 8
  %10843 = bitcast i8* %10842 to i64*
  %10844 = load i64, i64* %10843, align 1
  %10845 = bitcast i8* %10837 to double*
  %10846 = load double, double* %10845, align 1
  %10847 = fadd double %10841, %10846
  %10848 = bitcast i8* %10835 to double*
  store double %10847, double* %10848, align 1, !tbaa !2432
  %10849 = getelementptr inbounds i8, i8* %10835, i64 8
  %10850 = bitcast i8* %10849 to i64*
  store i64 %10844, i64* %10850, align 1, !tbaa !2432
  %10851 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10852 = load i64, i64* %RBP
  %10853 = sub i64 %10852, 280
  %10854 = load i64, i64* %PC
  %10855 = add i64 %10854, 8
  store i64 %10855, i64* %PC
  %10856 = inttoptr i64 %10853 to double*
  %10857 = load double, double* %10856
  %10858 = bitcast i8* %10851 to double*
  store double %10857, double* %10858, align 1, !tbaa !2432
  %10859 = getelementptr inbounds i8, i8* %10851, i64 8
  %10860 = bitcast i8* %10859 to double*
  store double 0.000000e+00, double* %10860, align 1, !tbaa !2432
  %10861 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %10862 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %10863 = bitcast %union.vec128_t* %XMM0 to i8*
  %10864 = load i64, i64* %PC
  %10865 = add i64 %10864, 4
  store i64 %10865, i64* %PC
  %10866 = bitcast i8* %10862 to double*
  %10867 = load double, double* %10866, align 1
  %10868 = getelementptr inbounds i8, i8* %10862, i64 8
  %10869 = bitcast i8* %10868 to i64*
  %10870 = load i64, i64* %10869, align 1
  %10871 = bitcast i8* %10863 to double*
  %10872 = load double, double* %10871, align 1
  %10873 = fsub double %10867, %10872
  %10874 = bitcast i8* %10861 to double*
  store double %10873, double* %10874, align 1, !tbaa !2432
  %10875 = getelementptr inbounds i8, i8* %10861, i64 8
  %10876 = bitcast i8* %10875 to i64*
  store i64 %10870, i64* %10876, align 1, !tbaa !2432
  %10877 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %10878 = load i64, i64* %RBP
  %10879 = sub i64 %10878, 304
  %10880 = load i64, i64* %PC
  %10881 = add i64 %10880, 8
  store i64 %10881, i64* %PC
  %10882 = inttoptr i64 %10879 to double*
  %10883 = load double, double* %10882
  %10884 = bitcast i8* %10877 to double*
  store double %10883, double* %10884, align 1, !tbaa !2432
  %10885 = getelementptr inbounds i8, i8* %10877, i64 8
  %10886 = bitcast i8* %10885 to double*
  store double 0.000000e+00, double* %10886, align 1, !tbaa !2432
  %10887 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %10888 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %10889 = bitcast %union.vec128_t* %XMM1 to i8*
  %10890 = load i64, i64* %PC
  %10891 = add i64 %10890, 4
  store i64 %10891, i64* %PC
  %10892 = bitcast i8* %10888 to double*
  %10893 = load double, double* %10892, align 1
  %10894 = getelementptr inbounds i8, i8* %10888, i64 8
  %10895 = bitcast i8* %10894 to i64*
  %10896 = load i64, i64* %10895, align 1
  %10897 = bitcast i8* %10889 to double*
  %10898 = load double, double* %10897, align 1
  %10899 = fdiv double %10893, %10898
  %10900 = bitcast i8* %10887 to double*
  store double %10899, double* %10900, align 1, !tbaa !2432
  %10901 = getelementptr inbounds i8, i8* %10887, i64 8
  %10902 = bitcast i8* %10901 to i64*
  store i64 %10896, i64* %10902, align 1, !tbaa !2432
  %10903 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10904 = bitcast %union.vec128_t* %XMM2 to i8*
  %10905 = load i64, i64* %PC
  %10906 = add i64 %10905, 3
  store i64 %10906, i64* %PC
  %10907 = bitcast i8* %10904 to <2 x i32>*
  %10908 = load <2 x i32>, <2 x i32>* %10907, align 1
  %10909 = getelementptr inbounds i8, i8* %10904, i64 8
  %10910 = bitcast i8* %10909 to <2 x i32>*
  %10911 = load <2 x i32>, <2 x i32>* %10910, align 1
  %10912 = extractelement <2 x i32> %10908, i32 0
  %10913 = bitcast i8* %10903 to i32*
  store i32 %10912, i32* %10913, align 1, !tbaa !2460
  %10914 = extractelement <2 x i32> %10908, i32 1
  %10915 = getelementptr inbounds i8, i8* %10903, i64 4
  %10916 = bitcast i8* %10915 to i32*
  store i32 %10914, i32* %10916, align 1, !tbaa !2460
  %10917 = extractelement <2 x i32> %10911, i32 0
  %10918 = getelementptr inbounds i8, i8* %10903, i64 8
  %10919 = bitcast i8* %10918 to i32*
  store i32 %10917, i32* %10919, align 1, !tbaa !2460
  %10920 = extractelement <2 x i32> %10911, i32 1
  %10921 = getelementptr inbounds i8, i8* %10903, i64 12
  %10922 = bitcast i8* %10921 to i32*
  store i32 %10920, i32* %10922, align 1, !tbaa !2460
  %10923 = load i64, i64* %PC
  %10924 = sub i64 %10923, 2858
  %10925 = load i64, i64* %PC
  %10926 = add i64 %10925, 5
  %10927 = load i64, i64* %PC
  %10928 = add i64 %10927, 5
  store i64 %10928, i64* %PC
  %10929 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10930 = load i64, i64* %10929, align 8, !tbaa !2428
  %10931 = add i64 %10930, -8
  %10932 = inttoptr i64 %10931 to i64*
  store i64 %10926, i64* %10932
  store i64 %10931, i64* %10929, align 8, !tbaa !2428
  %10933 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10924, i64* %10933, align 8, !tbaa !2428
  %10934 = load i64, i64* %PC
  %10935 = bitcast %struct.State** %state.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %10935)
  %10936 = bitcast i64* %curr_pc.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %10936)
  %10937 = bitcast %struct.Memory** %memory.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %10937)
  call void @llvm.lifetime.start(i64 1, i8* %BRANCH_TAKEN.i)
  %10938 = bitcast i64* %SS_BASE.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %10938)
  %10939 = bitcast i64* %ES_BASE.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %10939)
  %10940 = bitcast i64* %DS_BASE.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %10940)
  %10941 = bitcast i64* %CS_BASE.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %10941)
  %10942 = bitcast %struct.State** %STATE.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %10942)
  %10943 = bitcast %struct.Memory** %MEMORY.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %10943)
  %10944 = bitcast i64** %_DR0.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %10944)
  %10945 = bitcast i64** %_DR1.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %10945)
  %10946 = bitcast i64** %_DR2.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %10946)
  %10947 = bitcast i64** %_DR3.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %10947)
  %10948 = bitcast i64** %_DR4.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %10948)
  %10949 = bitcast i64** %_DR5.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %10949)
  %10950 = bitcast i64** %_DR6.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %10950)
  %10951 = bitcast i64** %_DR7.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %10951)
  %10952 = bitcast i64** %CR0.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %10952)
  %10953 = bitcast i64** %CR1.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %10953)
  %10954 = bitcast i64** %CR2.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %10954)
  %10955 = bitcast i64** %CR3.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %10955)
  %10956 = bitcast i64** %CR4.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %10956)
  %10957 = bitcast i64** %CR8.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %10957)
  store %struct.State* %0, %struct.State** %state.i, align 8, !noalias !2516
  store i64 %10934, i64* %curr_pc.i, align 8, !noalias !2516
  store %struct.Memory* %10801, %struct.Memory** %memory.i, align 8, !noalias !2516
  store i8 0, i8* %BRANCH_TAKEN.i, align 1, !noalias !2516
  store i64 0, i64* %SS_BASE.i, align 8, !noalias !2516
  store i64 0, i64* %ES_BASE.i, align 8, !noalias !2516
  store i64 0, i64* %DS_BASE.i, align 8, !noalias !2516
  store i64 0, i64* %CS_BASE.i, align 8, !noalias !2516
  store %struct.State* %0, %struct.State** %STATE.i, align 8, !noalias !2516
  store %struct.Memory* %10801, %struct.Memory** %MEMORY.i, align 8, !noalias !2516
  %10958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10959 = getelementptr inbounds %struct.GPR, %struct.GPR* %10958, i32 0, i32 33
  %10960 = getelementptr inbounds %struct.Reg, %struct.Reg* %10959, i32 0, i32 0
  %PC.i = bitcast %union.anon* %10960 to i64*
  store i64 %10934, i64* %PC.i, align 8, !alias.scope !2520, !noalias !2521
  %10961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10962 = getelementptr inbounds %struct.GPR, %struct.GPR* %10961, i32 0, i32 1
  %10963 = getelementptr inbounds %struct.Reg, %struct.Reg* %10962, i32 0, i32 0
  %10964 = bitcast %union.anon* %10963 to %struct.anon.2*
  %AH.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10964, i32 0, i32 1
  %10965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10966 = getelementptr inbounds %struct.GPR, %struct.GPR* %10965, i32 0, i32 3
  %10967 = getelementptr inbounds %struct.Reg, %struct.Reg* %10966, i32 0, i32 0
  %10968 = bitcast %union.anon* %10967 to %struct.anon.2*
  %BH.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10968, i32 0, i32 1
  %10969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10970 = getelementptr inbounds %struct.GPR, %struct.GPR* %10969, i32 0, i32 5
  %10971 = getelementptr inbounds %struct.Reg, %struct.Reg* %10970, i32 0, i32 0
  %10972 = bitcast %union.anon* %10971 to %struct.anon.2*
  %CH.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10972, i32 0, i32 1
  %10973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10974 = getelementptr inbounds %struct.GPR, %struct.GPR* %10973, i32 0, i32 7
  %10975 = getelementptr inbounds %struct.Reg, %struct.Reg* %10974, i32 0, i32 0
  %10976 = bitcast %union.anon* %10975 to %struct.anon.2*
  %DH.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10976, i32 0, i32 1
  %10977 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10978 = getelementptr inbounds %struct.GPR, %struct.GPR* %10977, i32 0, i32 1
  %10979 = getelementptr inbounds %struct.Reg, %struct.Reg* %10978, i32 0, i32 0
  %10980 = bitcast %union.anon* %10979 to %struct.anon.2*
  %AL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10980, i32 0, i32 0
  %10981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10982 = getelementptr inbounds %struct.GPR, %struct.GPR* %10981, i32 0, i32 3
  %10983 = getelementptr inbounds %struct.Reg, %struct.Reg* %10982, i32 0, i32 0
  %10984 = bitcast %union.anon* %10983 to %struct.anon.2*
  %BL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10984, i32 0, i32 0
  %10985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10986 = getelementptr inbounds %struct.GPR, %struct.GPR* %10985, i32 0, i32 5
  %10987 = getelementptr inbounds %struct.Reg, %struct.Reg* %10986, i32 0, i32 0
  %10988 = bitcast %union.anon* %10987 to %struct.anon.2*
  %CL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10988, i32 0, i32 0
  %10989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10990 = getelementptr inbounds %struct.GPR, %struct.GPR* %10989, i32 0, i32 7
  %10991 = getelementptr inbounds %struct.Reg, %struct.Reg* %10990, i32 0, i32 0
  %10992 = bitcast %union.anon* %10991 to %struct.anon.2*
  %DL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10992, i32 0, i32 0
  %10993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10994 = getelementptr inbounds %struct.GPR, %struct.GPR* %10993, i32 0, i32 9
  %10995 = getelementptr inbounds %struct.Reg, %struct.Reg* %10994, i32 0, i32 0
  %10996 = bitcast %union.anon* %10995 to %struct.anon.2*
  %SIL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10996, i32 0, i32 0
  %10997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10998 = getelementptr inbounds %struct.GPR, %struct.GPR* %10997, i32 0, i32 11
  %10999 = getelementptr inbounds %struct.Reg, %struct.Reg* %10998, i32 0, i32 0
  %11000 = bitcast %union.anon* %10999 to %struct.anon.2*
  %DIL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %11000, i32 0, i32 0
  %11001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11002 = getelementptr inbounds %struct.GPR, %struct.GPR* %11001, i32 0, i32 13
  %11003 = getelementptr inbounds %struct.Reg, %struct.Reg* %11002, i32 0, i32 0
  %11004 = bitcast %union.anon* %11003 to %struct.anon.2*
  %SPL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %11004, i32 0, i32 0
  %11005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11006 = getelementptr inbounds %struct.GPR, %struct.GPR* %11005, i32 0, i32 15
  %11007 = getelementptr inbounds %struct.Reg, %struct.Reg* %11006, i32 0, i32 0
  %11008 = bitcast %union.anon* %11007 to %struct.anon.2*
  %BPL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %11008, i32 0, i32 0
  %11009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11010 = getelementptr inbounds %struct.GPR, %struct.GPR* %11009, i32 0, i32 17
  %11011 = getelementptr inbounds %struct.Reg, %struct.Reg* %11010, i32 0, i32 0
  %11012 = bitcast %union.anon* %11011 to %struct.anon.2*
  %R8B.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %11012, i32 0, i32 0
  %11013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11014 = getelementptr inbounds %struct.GPR, %struct.GPR* %11013, i32 0, i32 19
  %11015 = getelementptr inbounds %struct.Reg, %struct.Reg* %11014, i32 0, i32 0
  %11016 = bitcast %union.anon* %11015 to %struct.anon.2*
  %R9B.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %11016, i32 0, i32 0
  %11017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11018 = getelementptr inbounds %struct.GPR, %struct.GPR* %11017, i32 0, i32 21
  %11019 = getelementptr inbounds %struct.Reg, %struct.Reg* %11018, i32 0, i32 0
  %11020 = bitcast %union.anon* %11019 to %struct.anon.2*
  %R10B.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %11020, i32 0, i32 0
  %11021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11022 = getelementptr inbounds %struct.GPR, %struct.GPR* %11021, i32 0, i32 23
  %11023 = getelementptr inbounds %struct.Reg, %struct.Reg* %11022, i32 0, i32 0
  %11024 = bitcast %union.anon* %11023 to %struct.anon.2*
  %R11B.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %11024, i32 0, i32 0
  %11025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11026 = getelementptr inbounds %struct.GPR, %struct.GPR* %11025, i32 0, i32 25
  %11027 = getelementptr inbounds %struct.Reg, %struct.Reg* %11026, i32 0, i32 0
  %11028 = bitcast %union.anon* %11027 to %struct.anon.2*
  %R12B.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %11028, i32 0, i32 0
  %11029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11030 = getelementptr inbounds %struct.GPR, %struct.GPR* %11029, i32 0, i32 27
  %11031 = getelementptr inbounds %struct.Reg, %struct.Reg* %11030, i32 0, i32 0
  %11032 = bitcast %union.anon* %11031 to %struct.anon.2*
  %R13B.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %11032, i32 0, i32 0
  %11033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11034 = getelementptr inbounds %struct.GPR, %struct.GPR* %11033, i32 0, i32 29
  %11035 = getelementptr inbounds %struct.Reg, %struct.Reg* %11034, i32 0, i32 0
  %11036 = bitcast %union.anon* %11035 to %struct.anon.2*
  %R14B.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %11036, i32 0, i32 0
  %11037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11038 = getelementptr inbounds %struct.GPR, %struct.GPR* %11037, i32 0, i32 31
  %11039 = getelementptr inbounds %struct.Reg, %struct.Reg* %11038, i32 0, i32 0
  %11040 = bitcast %union.anon* %11039 to %struct.anon.2*
  %R15B.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %11040, i32 0, i32 0
  %11041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11042 = getelementptr inbounds %struct.GPR, %struct.GPR* %11041, i32 0, i32 1
  %11043 = getelementptr inbounds %struct.Reg, %struct.Reg* %11042, i32 0, i32 0
  %AX.i = bitcast %union.anon* %11043 to i16*
  %11044 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11045 = getelementptr inbounds %struct.GPR, %struct.GPR* %11044, i32 0, i32 3
  %11046 = getelementptr inbounds %struct.Reg, %struct.Reg* %11045, i32 0, i32 0
  %BX.i = bitcast %union.anon* %11046 to i16*
  %11047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11048 = getelementptr inbounds %struct.GPR, %struct.GPR* %11047, i32 0, i32 5
  %11049 = getelementptr inbounds %struct.Reg, %struct.Reg* %11048, i32 0, i32 0
  %CX.i = bitcast %union.anon* %11049 to i16*
  %11050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11051 = getelementptr inbounds %struct.GPR, %struct.GPR* %11050, i32 0, i32 7
  %11052 = getelementptr inbounds %struct.Reg, %struct.Reg* %11051, i32 0, i32 0
  %DX.i = bitcast %union.anon* %11052 to i16*
  %11053 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11054 = getelementptr inbounds %struct.GPR, %struct.GPR* %11053, i32 0, i32 9
  %11055 = getelementptr inbounds %struct.Reg, %struct.Reg* %11054, i32 0, i32 0
  %SI.i = bitcast %union.anon* %11055 to i16*
  %11056 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11057 = getelementptr inbounds %struct.GPR, %struct.GPR* %11056, i32 0, i32 11
  %11058 = getelementptr inbounds %struct.Reg, %struct.Reg* %11057, i32 0, i32 0
  %DI.i = bitcast %union.anon* %11058 to i16*
  %11059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11060 = getelementptr inbounds %struct.GPR, %struct.GPR* %11059, i32 0, i32 13
  %11061 = getelementptr inbounds %struct.Reg, %struct.Reg* %11060, i32 0, i32 0
  %SP.i = bitcast %union.anon* %11061 to i16*
  %11062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11063 = getelementptr inbounds %struct.GPR, %struct.GPR* %11062, i32 0, i32 15
  %11064 = getelementptr inbounds %struct.Reg, %struct.Reg* %11063, i32 0, i32 0
  %BP.i = bitcast %union.anon* %11064 to i16*
  %11065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11066 = getelementptr inbounds %struct.GPR, %struct.GPR* %11065, i32 0, i32 17
  %11067 = getelementptr inbounds %struct.Reg, %struct.Reg* %11066, i32 0, i32 0
  %R8W.i = bitcast %union.anon* %11067 to i16*
  %11068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11069 = getelementptr inbounds %struct.GPR, %struct.GPR* %11068, i32 0, i32 19
  %11070 = getelementptr inbounds %struct.Reg, %struct.Reg* %11069, i32 0, i32 0
  %R9W.i = bitcast %union.anon* %11070 to i16*
  %11071 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11072 = getelementptr inbounds %struct.GPR, %struct.GPR* %11071, i32 0, i32 21
  %11073 = getelementptr inbounds %struct.Reg, %struct.Reg* %11072, i32 0, i32 0
  %R10W.i = bitcast %union.anon* %11073 to i16*
  %11074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11075 = getelementptr inbounds %struct.GPR, %struct.GPR* %11074, i32 0, i32 23
  %11076 = getelementptr inbounds %struct.Reg, %struct.Reg* %11075, i32 0, i32 0
  %R11W.i = bitcast %union.anon* %11076 to i16*
  %11077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11078 = getelementptr inbounds %struct.GPR, %struct.GPR* %11077, i32 0, i32 25
  %11079 = getelementptr inbounds %struct.Reg, %struct.Reg* %11078, i32 0, i32 0
  %R12W.i = bitcast %union.anon* %11079 to i16*
  %11080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11081 = getelementptr inbounds %struct.GPR, %struct.GPR* %11080, i32 0, i32 27
  %11082 = getelementptr inbounds %struct.Reg, %struct.Reg* %11081, i32 0, i32 0
  %R13W.i = bitcast %union.anon* %11082 to i16*
  %11083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11084 = getelementptr inbounds %struct.GPR, %struct.GPR* %11083, i32 0, i32 29
  %11085 = getelementptr inbounds %struct.Reg, %struct.Reg* %11084, i32 0, i32 0
  %R14W.i = bitcast %union.anon* %11085 to i16*
  %11086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11087 = getelementptr inbounds %struct.GPR, %struct.GPR* %11086, i32 0, i32 31
  %11088 = getelementptr inbounds %struct.Reg, %struct.Reg* %11087, i32 0, i32 0
  %R15W.i = bitcast %union.anon* %11088 to i16*
  %11089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11090 = getelementptr inbounds %struct.GPR, %struct.GPR* %11089, i32 0, i32 33
  %11091 = getelementptr inbounds %struct.Reg, %struct.Reg* %11090, i32 0, i32 0
  %IP.i = bitcast %union.anon* %11091 to i16*
  %11092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11093 = getelementptr inbounds %struct.GPR, %struct.GPR* %11092, i32 0, i32 1
  %11094 = getelementptr inbounds %struct.Reg, %struct.Reg* %11093, i32 0, i32 0
  %EAX.i = bitcast %union.anon* %11094 to i32*
  %11095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11096 = getelementptr inbounds %struct.GPR, %struct.GPR* %11095, i32 0, i32 3
  %11097 = getelementptr inbounds %struct.Reg, %struct.Reg* %11096, i32 0, i32 0
  %EBX.i = bitcast %union.anon* %11097 to i32*
  %11098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11099 = getelementptr inbounds %struct.GPR, %struct.GPR* %11098, i32 0, i32 5
  %11100 = getelementptr inbounds %struct.Reg, %struct.Reg* %11099, i32 0, i32 0
  %ECX.i = bitcast %union.anon* %11100 to i32*
  %11101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11102 = getelementptr inbounds %struct.GPR, %struct.GPR* %11101, i32 0, i32 7
  %11103 = getelementptr inbounds %struct.Reg, %struct.Reg* %11102, i32 0, i32 0
  %EDX.i = bitcast %union.anon* %11103 to i32*
  %11104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11105 = getelementptr inbounds %struct.GPR, %struct.GPR* %11104, i32 0, i32 9
  %11106 = getelementptr inbounds %struct.Reg, %struct.Reg* %11105, i32 0, i32 0
  %ESI.i = bitcast %union.anon* %11106 to i32*
  %11107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11108 = getelementptr inbounds %struct.GPR, %struct.GPR* %11107, i32 0, i32 11
  %11109 = getelementptr inbounds %struct.Reg, %struct.Reg* %11108, i32 0, i32 0
  %EDI.i = bitcast %union.anon* %11109 to i32*
  %11110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11111 = getelementptr inbounds %struct.GPR, %struct.GPR* %11110, i32 0, i32 13
  %11112 = getelementptr inbounds %struct.Reg, %struct.Reg* %11111, i32 0, i32 0
  %ESP.i = bitcast %union.anon* %11112 to i32*
  %11113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11114 = getelementptr inbounds %struct.GPR, %struct.GPR* %11113, i32 0, i32 15
  %11115 = getelementptr inbounds %struct.Reg, %struct.Reg* %11114, i32 0, i32 0
  %EBP.i = bitcast %union.anon* %11115 to i32*
  %11116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11117 = getelementptr inbounds %struct.GPR, %struct.GPR* %11116, i32 0, i32 33
  %11118 = getelementptr inbounds %struct.Reg, %struct.Reg* %11117, i32 0, i32 0
  %EIP.i = bitcast %union.anon* %11118 to i32*
  %11119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11120 = getelementptr inbounds %struct.GPR, %struct.GPR* %11119, i32 0, i32 17
  %11121 = getelementptr inbounds %struct.Reg, %struct.Reg* %11120, i32 0, i32 0
  %R8D.i = bitcast %union.anon* %11121 to i32*
  %11122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11123 = getelementptr inbounds %struct.GPR, %struct.GPR* %11122, i32 0, i32 19
  %11124 = getelementptr inbounds %struct.Reg, %struct.Reg* %11123, i32 0, i32 0
  %R9D.i = bitcast %union.anon* %11124 to i32*
  %11125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11126 = getelementptr inbounds %struct.GPR, %struct.GPR* %11125, i32 0, i32 21
  %11127 = getelementptr inbounds %struct.Reg, %struct.Reg* %11126, i32 0, i32 0
  %R10D.i = bitcast %union.anon* %11127 to i32*
  %11128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11129 = getelementptr inbounds %struct.GPR, %struct.GPR* %11128, i32 0, i32 23
  %11130 = getelementptr inbounds %struct.Reg, %struct.Reg* %11129, i32 0, i32 0
  %R11D.i = bitcast %union.anon* %11130 to i32*
  %11131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11132 = getelementptr inbounds %struct.GPR, %struct.GPR* %11131, i32 0, i32 25
  %11133 = getelementptr inbounds %struct.Reg, %struct.Reg* %11132, i32 0, i32 0
  %R12D.i = bitcast %union.anon* %11133 to i32*
  %11134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11135 = getelementptr inbounds %struct.GPR, %struct.GPR* %11134, i32 0, i32 27
  %11136 = getelementptr inbounds %struct.Reg, %struct.Reg* %11135, i32 0, i32 0
  %R13D.i = bitcast %union.anon* %11136 to i32*
  %11137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11138 = getelementptr inbounds %struct.GPR, %struct.GPR* %11137, i32 0, i32 29
  %11139 = getelementptr inbounds %struct.Reg, %struct.Reg* %11138, i32 0, i32 0
  %R14D.i = bitcast %union.anon* %11139 to i32*
  %11140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11141 = getelementptr inbounds %struct.GPR, %struct.GPR* %11140, i32 0, i32 31
  %11142 = getelementptr inbounds %struct.Reg, %struct.Reg* %11141, i32 0, i32 0
  %R15D.i = bitcast %union.anon* %11142 to i32*
  %11143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11144 = getelementptr inbounds %struct.GPR, %struct.GPR* %11143, i32 0, i32 1
  %11145 = getelementptr inbounds %struct.Reg, %struct.Reg* %11144, i32 0, i32 0
  %RAX.i = bitcast %union.anon* %11145 to i64*
  %11146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11147 = getelementptr inbounds %struct.GPR, %struct.GPR* %11146, i32 0, i32 3
  %11148 = getelementptr inbounds %struct.Reg, %struct.Reg* %11147, i32 0, i32 0
  %RBX.i = bitcast %union.anon* %11148 to i64*
  %11149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11150 = getelementptr inbounds %struct.GPR, %struct.GPR* %11149, i32 0, i32 5
  %11151 = getelementptr inbounds %struct.Reg, %struct.Reg* %11150, i32 0, i32 0
  %RCX.i = bitcast %union.anon* %11151 to i64*
  %11152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11153 = getelementptr inbounds %struct.GPR, %struct.GPR* %11152, i32 0, i32 7
  %11154 = getelementptr inbounds %struct.Reg, %struct.Reg* %11153, i32 0, i32 0
  %RDX.i = bitcast %union.anon* %11154 to i64*
  %11155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11156 = getelementptr inbounds %struct.GPR, %struct.GPR* %11155, i32 0, i32 9
  %11157 = getelementptr inbounds %struct.Reg, %struct.Reg* %11156, i32 0, i32 0
  %RSI.i = bitcast %union.anon* %11157 to i64*
  %11158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11159 = getelementptr inbounds %struct.GPR, %struct.GPR* %11158, i32 0, i32 11
  %11160 = getelementptr inbounds %struct.Reg, %struct.Reg* %11159, i32 0, i32 0
  %RDI.i = bitcast %union.anon* %11160 to i64*
  %11161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11162 = getelementptr inbounds %struct.GPR, %struct.GPR* %11161, i32 0, i32 13
  %11163 = getelementptr inbounds %struct.Reg, %struct.Reg* %11162, i32 0, i32 0
  %RSP.i = bitcast %union.anon* %11163 to i64*
  %11164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11165 = getelementptr inbounds %struct.GPR, %struct.GPR* %11164, i32 0, i32 15
  %11166 = getelementptr inbounds %struct.Reg, %struct.Reg* %11165, i32 0, i32 0
  %RBP.i = bitcast %union.anon* %11166 to i64*
  %11167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11168 = getelementptr inbounds %struct.GPR, %struct.GPR* %11167, i32 0, i32 17
  %11169 = getelementptr inbounds %struct.Reg, %struct.Reg* %11168, i32 0, i32 0
  %R8.i = bitcast %union.anon* %11169 to i64*
  %11170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11171 = getelementptr inbounds %struct.GPR, %struct.GPR* %11170, i32 0, i32 19
  %11172 = getelementptr inbounds %struct.Reg, %struct.Reg* %11171, i32 0, i32 0
  %R9.i = bitcast %union.anon* %11172 to i64*
  %11173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11174 = getelementptr inbounds %struct.GPR, %struct.GPR* %11173, i32 0, i32 21
  %11175 = getelementptr inbounds %struct.Reg, %struct.Reg* %11174, i32 0, i32 0
  %R10.i = bitcast %union.anon* %11175 to i64*
  %11176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11177 = getelementptr inbounds %struct.GPR, %struct.GPR* %11176, i32 0, i32 23
  %11178 = getelementptr inbounds %struct.Reg, %struct.Reg* %11177, i32 0, i32 0
  %R11.i = bitcast %union.anon* %11178 to i64*
  %11179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11180 = getelementptr inbounds %struct.GPR, %struct.GPR* %11179, i32 0, i32 25
  %11181 = getelementptr inbounds %struct.Reg, %struct.Reg* %11180, i32 0, i32 0
  %R12.i = bitcast %union.anon* %11181 to i64*
  %11182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11183 = getelementptr inbounds %struct.GPR, %struct.GPR* %11182, i32 0, i32 27
  %11184 = getelementptr inbounds %struct.Reg, %struct.Reg* %11183, i32 0, i32 0
  %R13.i = bitcast %union.anon* %11184 to i64*
  %11185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11186 = getelementptr inbounds %struct.GPR, %struct.GPR* %11185, i32 0, i32 29
  %11187 = getelementptr inbounds %struct.Reg, %struct.Reg* %11186, i32 0, i32 0
  %R14.i = bitcast %union.anon* %11187 to i64*
  %11188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11189 = getelementptr inbounds %struct.GPR, %struct.GPR* %11188, i32 0, i32 31
  %11190 = getelementptr inbounds %struct.Reg, %struct.Reg* %11189, i32 0, i32 0
  %R15.i = bitcast %union.anon* %11190 to i64*
  %11191 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11192 = getelementptr inbounds %struct.GPR, %struct.GPR* %11191, i32 0, i32 33
  %11193 = getelementptr inbounds %struct.Reg, %struct.Reg* %11192, i32 0, i32 0
  %RIP.i = bitcast %union.anon* %11193 to i64*
  %11194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %11195 = getelementptr inbounds %struct.Segments, %struct.Segments* %11194, i32 0, i32 1
  %SS.i = bitcast %union.SegmentSelector* %11195 to i16*
  %11196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %11197 = getelementptr inbounds %struct.Segments, %struct.Segments* %11196, i32 0, i32 3
  %ES.i = bitcast %union.SegmentSelector* %11197 to i16*
  %11198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %11199 = getelementptr inbounds %struct.Segments, %struct.Segments* %11198, i32 0, i32 5
  %GS.i = bitcast %union.SegmentSelector* %11199 to i16*
  %11200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %11201 = getelementptr inbounds %struct.Segments, %struct.Segments* %11200, i32 0, i32 7
  %FS.i = bitcast %union.SegmentSelector* %11201 to i16*
  %11202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %11203 = getelementptr inbounds %struct.Segments, %struct.Segments* %11202, i32 0, i32 9
  %DS.i = bitcast %union.SegmentSelector* %11203 to i16*
  %11204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %11205 = getelementptr inbounds %struct.Segments, %struct.Segments* %11204, i32 0, i32 11
  %CS.i = bitcast %union.SegmentSelector* %11205 to i16*
  %11206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %11207 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %11206, i32 0, i32 5
  %11208 = getelementptr inbounds %struct.Reg, %struct.Reg* %11207, i32 0, i32 0
  %GS_BASE.i = bitcast %union.anon* %11208 to i64*
  %11209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %11210 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %11209, i32 0, i32 7
  %11211 = getelementptr inbounds %struct.Reg, %struct.Reg* %11210, i32 0, i32 0
  %FS_BASE.i = bitcast %union.anon* %11211 to i64*
  %11212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %11213 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %11212, i64 0, i64 0
  %YMM0.i = bitcast %union.VectorReg* %11213 to %"class.std::bitset"*
  %11214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %11215 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %11214, i64 0, i64 1
  %YMM1.i = bitcast %union.VectorReg* %11215 to %"class.std::bitset"*
  %11216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %11217 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %11216, i64 0, i64 2
  %YMM2.i = bitcast %union.VectorReg* %11217 to %"class.std::bitset"*
  %11218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %11219 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %11218, i64 0, i64 3
  %YMM3.i = bitcast %union.VectorReg* %11219 to %"class.std::bitset"*
  %11220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %11221 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %11220, i64 0, i64 4
  %YMM4.i = bitcast %union.VectorReg* %11221 to %"class.std::bitset"*
  %11222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %11223 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %11222, i64 0, i64 5
  %YMM5.i = bitcast %union.VectorReg* %11223 to %"class.std::bitset"*
  %11224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %11225 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %11224, i64 0, i64 6
  %YMM6.i = bitcast %union.VectorReg* %11225 to %"class.std::bitset"*
  %11226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %11227 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %11226, i64 0, i64 7
  %YMM7.i = bitcast %union.VectorReg* %11227 to %"class.std::bitset"*
  %11228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %11229 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %11228, i64 0, i64 8
  %YMM8.i = bitcast %union.VectorReg* %11229 to %"class.std::bitset"*
  %11230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %11231 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %11230, i64 0, i64 9
  %YMM9.i = bitcast %union.VectorReg* %11231 to %"class.std::bitset"*
  %11232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %11233 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %11232, i64 0, i64 10
  %YMM10.i = bitcast %union.VectorReg* %11233 to %"class.std::bitset"*
  %11234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %11235 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %11234, i64 0, i64 11
  %YMM11.i = bitcast %union.VectorReg* %11235 to %"class.std::bitset"*
  %11236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %11237 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %11236, i64 0, i64 12
  %YMM12.i = bitcast %union.VectorReg* %11237 to %"class.std::bitset"*
  %11238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %11239 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %11238, i64 0, i64 13
  %YMM13.i = bitcast %union.VectorReg* %11239 to %"class.std::bitset"*
  %11240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %11241 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %11240, i64 0, i64 14
  %YMM14.i = bitcast %union.VectorReg* %11241 to %"class.std::bitset"*
  %11242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %11243 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %11242, i64 0, i64 15
  %YMM15.i = bitcast %union.VectorReg* %11243 to %"class.std::bitset"*
  %11244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %11245 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %11244, i64 0, i64 0
  %XMM0.i = bitcast %union.VectorReg* %11245 to %union.vec128_t*
  %11246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %11247 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %11246, i64 0, i64 1
  %XMM1.i = bitcast %union.VectorReg* %11247 to %union.vec128_t*
  %11248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %11249 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %11248, i64 0, i64 2
  %XMM2.i = bitcast %union.VectorReg* %11249 to %union.vec128_t*
  %11250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %11251 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %11250, i64 0, i64 3
  %XMM3.i = bitcast %union.VectorReg* %11251 to %union.vec128_t*
  %11252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %11253 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %11252, i64 0, i64 4
  %XMM4.i = bitcast %union.VectorReg* %11253 to %union.vec128_t*
  %11254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %11255 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %11254, i64 0, i64 5
  %XMM5.i = bitcast %union.VectorReg* %11255 to %union.vec128_t*
  %11256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %11257 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %11256, i64 0, i64 6
  %XMM6.i = bitcast %union.VectorReg* %11257 to %union.vec128_t*
  %11258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %11259 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %11258, i64 0, i64 7
  %XMM7.i = bitcast %union.VectorReg* %11259 to %union.vec128_t*
  %11260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %11261 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %11260, i64 0, i64 8
  %XMM8.i = bitcast %union.VectorReg* %11261 to %union.vec128_t*
  %11262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %11263 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %11262, i64 0, i64 9
  %XMM9.i = bitcast %union.VectorReg* %11263 to %union.vec128_t*
  %11264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %11265 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %11264, i64 0, i64 10
  %XMM10.i = bitcast %union.VectorReg* %11265 to %union.vec128_t*
  %11266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %11267 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %11266, i64 0, i64 11
  %XMM11.i = bitcast %union.VectorReg* %11267 to %union.vec128_t*
  %11268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %11269 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %11268, i64 0, i64 12
  %XMM12.i = bitcast %union.VectorReg* %11269 to %union.vec128_t*
  %11270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %11271 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %11270, i64 0, i64 13
  %XMM13.i = bitcast %union.VectorReg* %11271 to %union.vec128_t*
  %11272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %11273 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %11272, i64 0, i64 14
  %XMM14.i = bitcast %union.VectorReg* %11273 to %union.vec128_t*
  %11274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %11275 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %11274, i64 0, i64 15
  %XMM15.i = bitcast %union.VectorReg* %11275 to %union.vec128_t*
  %11276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %11277 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %11276, i32 0, i32 0
  %11278 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %11277, i64 0, i64 0
  %ST0.i = getelementptr inbounds %struct.anon.3, %struct.anon.3* %11278, i32 0, i32 1
  %11279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %11280 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %11279, i32 0, i32 0
  %11281 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %11280, i64 0, i64 1
  %ST1.i = getelementptr inbounds %struct.anon.3, %struct.anon.3* %11281, i32 0, i32 1
  %11282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %11283 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %11282, i32 0, i32 0
  %11284 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %11283, i64 0, i64 2
  %ST2.i = getelementptr inbounds %struct.anon.3, %struct.anon.3* %11284, i32 0, i32 1
  %11285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %11286 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %11285, i32 0, i32 0
  %11287 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %11286, i64 0, i64 3
  %ST3.i = getelementptr inbounds %struct.anon.3, %struct.anon.3* %11287, i32 0, i32 1
  %11288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %11289 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %11288, i32 0, i32 0
  %11290 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %11289, i64 0, i64 4
  %ST4.i = getelementptr inbounds %struct.anon.3, %struct.anon.3* %11290, i32 0, i32 1
  %11291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %11292 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %11291, i32 0, i32 0
  %11293 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %11292, i64 0, i64 5
  %ST5.i = getelementptr inbounds %struct.anon.3, %struct.anon.3* %11293, i32 0, i32 1
  %11294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %11295 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %11294, i32 0, i32 0
  %11296 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %11295, i64 0, i64 6
  %ST6.i = getelementptr inbounds %struct.anon.3, %struct.anon.3* %11296, i32 0, i32 1
  %11297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %11298 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %11297, i32 0, i32 0
  %11299 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %11298, i64 0, i64 7
  %ST7.i = getelementptr inbounds %struct.anon.3, %struct.anon.3* %11299, i32 0, i32 1
  %11300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %11301 = getelementptr inbounds %struct.MMX, %struct.MMX* %11300, i32 0, i32 0
  %11302 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %11301, i64 0, i64 0
  %11303 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %11302, i32 0, i32 1
  %11304 = bitcast %union.vec64_t* %11303 to %struct.uint64v1_t*
  %11305 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %11304, i32 0, i32 0
  %MM0.i = getelementptr inbounds [1 x i64], [1 x i64]* %11305, i64 0, i64 0
  %11306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %11307 = getelementptr inbounds %struct.MMX, %struct.MMX* %11306, i32 0, i32 0
  %11308 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %11307, i64 0, i64 1
  %11309 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %11308, i32 0, i32 1
  %11310 = bitcast %union.vec64_t* %11309 to %struct.uint64v1_t*
  %11311 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %11310, i32 0, i32 0
  %MM1.i = getelementptr inbounds [1 x i64], [1 x i64]* %11311, i64 0, i64 0
  %11312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %11313 = getelementptr inbounds %struct.MMX, %struct.MMX* %11312, i32 0, i32 0
  %11314 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %11313, i64 0, i64 2
  %11315 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %11314, i32 0, i32 1
  %11316 = bitcast %union.vec64_t* %11315 to %struct.uint64v1_t*
  %11317 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %11316, i32 0, i32 0
  %MM2.i = getelementptr inbounds [1 x i64], [1 x i64]* %11317, i64 0, i64 0
  %11318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %11319 = getelementptr inbounds %struct.MMX, %struct.MMX* %11318, i32 0, i32 0
  %11320 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %11319, i64 0, i64 3
  %11321 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %11320, i32 0, i32 1
  %11322 = bitcast %union.vec64_t* %11321 to %struct.uint64v1_t*
  %11323 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %11322, i32 0, i32 0
  %MM3.i = getelementptr inbounds [1 x i64], [1 x i64]* %11323, i64 0, i64 0
  %11324 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %11325 = getelementptr inbounds %struct.MMX, %struct.MMX* %11324, i32 0, i32 0
  %11326 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %11325, i64 0, i64 4
  %11327 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %11326, i32 0, i32 1
  %11328 = bitcast %union.vec64_t* %11327 to %struct.uint64v1_t*
  %11329 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %11328, i32 0, i32 0
  %MM4.i = getelementptr inbounds [1 x i64], [1 x i64]* %11329, i64 0, i64 0
  %11330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %11331 = getelementptr inbounds %struct.MMX, %struct.MMX* %11330, i32 0, i32 0
  %11332 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %11331, i64 0, i64 5
  %11333 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %11332, i32 0, i32 1
  %11334 = bitcast %union.vec64_t* %11333 to %struct.uint64v1_t*
  %11335 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %11334, i32 0, i32 0
  %MM5.i = getelementptr inbounds [1 x i64], [1 x i64]* %11335, i64 0, i64 0
  %11336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %11337 = getelementptr inbounds %struct.MMX, %struct.MMX* %11336, i32 0, i32 0
  %11338 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %11337, i64 0, i64 6
  %11339 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %11338, i32 0, i32 1
  %11340 = bitcast %union.vec64_t* %11339 to %struct.uint64v1_t*
  %11341 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %11340, i32 0, i32 0
  %MM6.i = getelementptr inbounds [1 x i64], [1 x i64]* %11341, i64 0, i64 0
  %11342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %11343 = getelementptr inbounds %struct.MMX, %struct.MMX* %11342, i32 0, i32 0
  %11344 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %11343, i64 0, i64 7
  %11345 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %11344, i32 0, i32 1
  %11346 = bitcast %union.vec64_t* %11345 to %struct.uint64v1_t*
  %11347 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %11346, i32 0, i32 0
  %MM7.i = getelementptr inbounds [1 x i64], [1 x i64]* %11347, i64 0, i64 0
  %11348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF.i = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %11348, i32 0, i32 5
  %11349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF.i = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %11349, i32 0, i32 1
  %11350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF.i = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %11350, i32 0, i32 11
  %11351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF.i = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %11351, i32 0, i32 13
  %11352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF.i = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %11352, i32 0, i32 3
  %11353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF.i = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %11353, i32 0, i32 9
  %11354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF.i = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %11354, i32 0, i32 7
  store i64* @DR0, i64** %_DR0.i, align 8, !noalias !2516
  store i64* @DR1, i64** %_DR1.i, align 8, !noalias !2516
  store i64* @DR2, i64** %_DR2.i, align 8, !noalias !2516
  store i64* @DR3, i64** %_DR3.i, align 8, !noalias !2516
  store i64* @DR4, i64** %_DR4.i, align 8, !noalias !2516
  store i64* @DR5, i64** %_DR5.i, align 8, !noalias !2516
  store i64* @DR6, i64** %_DR6.i, align 8, !noalias !2516
  store i64* @DR7, i64** %_DR7.i, align 8, !noalias !2516
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0.i, align 8, !noalias !2516
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1.i, align 8, !noalias !2516
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2.i, align 8, !noalias !2516
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3.i, align 8, !noalias !2516
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4.i, align 8, !noalias !2516
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8.i, align 8, !noalias !2516
  %11355 = bitcast %"class.std::bitset"* %YMM0.i to double*
  %11356 = load double, double* %11355, !alias.scope !2520, !noalias !2521
  %11357 = load i64, i64* %RSP.i, !alias.scope !2520, !noalias !2521
  %11358 = load %struct.Memory*, %struct.Memory** %MEMORY.i, !noalias !2516
  %11359 = inttoptr i64 %11357 to i64*
  %11360 = load i64, i64* %11359
  store i64 %11360, i64* %PC.i, !alias.scope !2520, !noalias !2521
  %11361 = add i64 %11357, 8
  store i64 %11361, i64* %RSP.i, !alias.scope !2520, !noalias !2521
  %11362 = call double @atan(double %11356)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0.i, !alias.scope !2520, !noalias !2521
  %11363 = bitcast %"class.std::bitset"* %YMM0.i to double*
  store double %11362, double* %11363, !alias.scope !2520, !noalias !2521
  %11364 = load %struct.Memory*, %struct.Memory** %MEMORY.i, !noalias !2516
  %11365 = bitcast %struct.State** %state.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %11365)
  %11366 = bitcast i64* %curr_pc.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %11366)
  %11367 = bitcast %struct.Memory** %memory.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %11367)
  call void @llvm.lifetime.end(i64 1, i8* %BRANCH_TAKEN.i)
  %11368 = bitcast i64* %SS_BASE.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %11368)
  %11369 = bitcast i64* %ES_BASE.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %11369)
  %11370 = bitcast i64* %DS_BASE.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %11370)
  %11371 = bitcast i64* %CS_BASE.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %11371)
  %11372 = bitcast %struct.State** %STATE.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %11372)
  %11373 = bitcast %struct.Memory** %MEMORY.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %11373)
  %11374 = bitcast i64** %_DR0.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %11374)
  %11375 = bitcast i64** %_DR1.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %11375)
  %11376 = bitcast i64** %_DR2.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %11376)
  %11377 = bitcast i64** %_DR3.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %11377)
  %11378 = bitcast i64** %_DR4.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %11378)
  %11379 = bitcast i64** %_DR5.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %11379)
  %11380 = bitcast i64** %_DR6.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %11380)
  %11381 = bitcast i64** %_DR7.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %11381)
  %11382 = bitcast i64** %CR0.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %11382)
  %11383 = bitcast i64** %CR1.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %11383)
  %11384 = bitcast i64** %CR2.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %11384)
  %11385 = bitcast i64** %CR3.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %11385)
  %11386 = bitcast i64** %CR4.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %11386)
  %11387 = bitcast i64** %CR8.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %11387)
  %11388 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11389 = load i64, i64* %RBP
  %11390 = sub i64 %11389, 272
  %11391 = load i64, i64* %PC
  %11392 = add i64 %11391, 8
  store i64 %11392, i64* %PC
  %11393 = inttoptr i64 %11390 to double*
  %11394 = load double, double* %11393
  %11395 = bitcast i8* %11388 to double*
  store double %11394, double* %11395, align 1, !tbaa !2432
  %11396 = getelementptr inbounds i8, i8* %11388, i64 8
  %11397 = bitcast i8* %11396 to double*
  store double 0.000000e+00, double* %11397, align 1, !tbaa !2432
  %11398 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11399 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11400 = bitcast %union.vec128_t* %XMM0 to i8*
  %11401 = load i64, i64* %PC
  %11402 = add i64 %11401, 4
  store i64 %11402, i64* %PC
  %11403 = bitcast i8* %11399 to double*
  %11404 = load double, double* %11403, align 1
  %11405 = getelementptr inbounds i8, i8* %11399, i64 8
  %11406 = bitcast i8* %11405 to i64*
  %11407 = load i64, i64* %11406, align 1
  %11408 = bitcast i8* %11400 to double*
  %11409 = load double, double* %11408, align 1
  %11410 = fmul double %11404, %11409
  %11411 = bitcast i8* %11398 to double*
  store double %11410, double* %11411, align 1, !tbaa !2432
  %11412 = getelementptr inbounds i8, i8* %11398, i64 8
  %11413 = bitcast i8* %11412 to i64*
  store i64 %11407, i64* %11413, align 1, !tbaa !2432
  %11414 = load i64, i64* %RBP
  %11415 = sub i64 %11414, 152
  %11416 = bitcast %union.vec128_t* %XMM1 to i8*
  %11417 = load i64, i64* %PC
  %11418 = add i64 %11417, 8
  store i64 %11418, i64* %PC
  %11419 = bitcast i8* %11416 to double*
  %11420 = load double, double* %11419, align 1
  %11421 = inttoptr i64 %11415 to double*
  store double %11420, double* %11421
  %11422 = load i64, i64* %RBP
  %11423 = sub i64 %11422, 24
  %11424 = load i64, i64* %PC
  %11425 = add i64 %11424, 4
  store i64 %11425, i64* %PC
  %11426 = inttoptr i64 %11423 to i64*
  %11427 = load i64, i64* %11426
  store i64 %11427, i64* %RAX, align 8, !tbaa !2428
  %11428 = load i64, i64* %RAX
  %11429 = load i64, i64* %PC
  %11430 = add i64 %11429, 4
  store i64 %11430, i64* %PC
  %11431 = add i64 1, %11428
  store i64 %11431, i64* %RAX, align 8, !tbaa !2428
  %11432 = icmp ult i64 %11431, %11428
  %11433 = icmp ult i64 %11431, 1
  %11434 = or i1 %11432, %11433
  %11435 = zext i1 %11434 to i8
  %11436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11435, i8* %11436, align 1, !tbaa !2434
  %11437 = trunc i64 %11431 to i32
  %11438 = and i32 %11437, 255
  %11439 = call i32 @llvm.ctpop.i32(i32 %11438) #17
  %11440 = trunc i32 %11439 to i8
  %11441 = and i8 %11440, 1
  %11442 = xor i8 %11441, 1
  %11443 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11442, i8* %11443, align 1, !tbaa !2448
  %11444 = xor i64 1, %11428
  %11445 = xor i64 %11444, %11431
  %11446 = lshr i64 %11445, 4
  %11447 = trunc i64 %11446 to i8
  %11448 = and i8 %11447, 1
  %11449 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11448, i8* %11449, align 1, !tbaa !2449
  %11450 = icmp eq i64 %11431, 0
  %11451 = zext i1 %11450 to i8
  %11452 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11451, i8* %11452, align 1, !tbaa !2450
  %11453 = lshr i64 %11431, 63
  %11454 = trunc i64 %11453 to i8
  %11455 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11454, i8* %11455, align 1, !tbaa !2451
  %11456 = lshr i64 %11428, 63
  %11457 = xor i64 %11453, %11456
  %11458 = add nuw nsw i64 %11457, %11453
  %11459 = icmp eq i64 %11458, 2
  %11460 = zext i1 %11459 to i8
  %11461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11460, i8* %11461, align 1, !tbaa !2452
  %11462 = load i64, i64* %RBP
  %11463 = sub i64 %11462, 24
  %11464 = load i64, i64* %RAX
  %11465 = load i64, i64* %PC
  %11466 = add i64 %11465, 4
  store i64 %11466, i64* %PC
  %11467 = inttoptr i64 %11463 to i64*
  store i64 %11464, i64* %11467
  %11468 = load i64, i64* %PC
  %11469 = sub i64 %11468, 498
  %11470 = load i64, i64* %PC
  %11471 = add i64 %11470, 5
  store i64 %11471, i64* %PC
  %11472 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11469, i64* %11472, align 8, !tbaa !2428
  br label %block_40103d

block_400981:                                     ; preds = %block_400898
  %11473 = add i64 %5158, 5
  %11474 = load i64, i64* %PC
  %11475 = add i64 %11474, 5
  store i64 %11475, i64* %PC
  %11476 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11473, i64* %11476, align 8, !tbaa !2428
  br label %block_400986

block_400ba0:                                     ; preds = %block_400b66, %block_400b78
  %MEMORY.27 = phi %struct.Memory* [ %MEMORY.17, %block_400b66 ], [ %2517, %block_400b78 ]
  %11477 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11478 = load i64, i64* %PC
  %11479 = add i64 %11478, 8
  store i64 %11479, i64* %PC
  %11480 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_401900__rodata_type* @seg_401900__rodata to i64), i64 32) to double*)
  %11481 = bitcast i8* %11477 to double*
  store double %11480, double* %11481, align 1, !tbaa !2432
  %11482 = getelementptr inbounds i8, i8* %11477, i64 8
  %11483 = bitcast i8* %11482 to double*
  store double 0.000000e+00, double* %11483, align 1, !tbaa !2432
  %11484 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11485 = load i64, i64* %PC
  %11486 = add i64 %11485, 8
  store i64 %11486, i64* %PC
  %11487 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_401900__rodata_type* @seg_401900__rodata to i64), i64 40) to double*)
  %11488 = bitcast i8* %11484 to double*
  store double %11487, double* %11488, align 1, !tbaa !2432
  %11489 = getelementptr inbounds i8, i8* %11484, i64 8
  %11490 = bitcast i8* %11489 to double*
  store double 0.000000e+00, double* %11490, align 1, !tbaa !2432
  %11491 = bitcast %union.vec128_t* %XMM1 to i8*
  %11492 = load i64, i64* %PC
  %11493 = add i64 %11492, 9
  store i64 %11493, i64* %PC
  %11494 = bitcast i8* %11491 to double*
  %11495 = load double, double* %11494, align 1
  store double %11495, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 8) to double*)
  %11496 = bitcast %union.vec128_t* %XMM0 to i8*
  %11497 = load i64, i64* %PC
  %11498 = add i64 %11497, 9
  store i64 %11498, i64* %PC
  %11499 = bitcast i8* %11496 to double*
  %11500 = load double, double* %11499, align 1
  store double %11500, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 16) to double*)
  %11501 = bitcast %union.vec128_t* %XMM0 to i8*
  %11502 = load i64, i64* %PC
  %11503 = add i64 %11502, 9
  store i64 %11503, i64* %PC
  %11504 = bitcast i8* %11501 to double*
  %11505 = load double, double* %11504, align 1
  store double %11505, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 24) to double*)
  %11506 = bitcast %union.vec128_t* %XMM0 to i8*
  %11507 = load i64, i64* %PC
  %11508 = add i64 %11507, 9
  store i64 %11508, i64* %PC
  %11509 = bitcast i8* %11506 to double*
  %11510 = load double, double* %11509, align 1
  store double %11510, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 32) to double*)
  %11511 = load i64, i64* %RBP
  %11512 = sub i64 %11511, 24
  %11513 = load i64, i64* %PC
  %11514 = add i64 %11513, 8
  store i64 %11514, i64* %PC
  %11515 = inttoptr i64 %11512 to i64*
  store i64 1, i64* %11515
  br label %block_400bdc

block_401580:                                     ; preds = %block_401547, %block_401535
  %MEMORY.28 = phi %struct.Memory* [ %MEMORY.3, %block_401535 ], [ %2833, %block_401547 ]
  %11516 = load i64, i64* %RBP
  %11517 = sub i64 %11516, 176
  %11518 = load i64, i64* %PC
  %11519 = add i64 %11518, 6
  store i64 %11519, i64* %PC
  %11520 = inttoptr i64 %11517 to i32*
  %11521 = load i32, i32* %11520
  %11522 = zext i32 %11521 to i64
  store i64 %11522, i64* %RAX, align 8, !tbaa !2428
  %11523 = load i64, i64* %RAX
  %11524 = load i64, i64* %PC
  %11525 = add i64 %11524, 3
  store i64 %11525, i64* %PC
  %11526 = trunc i64 %11523 to i32
  %11527 = add i32 1, %11526
  %11528 = zext i32 %11527 to i64
  store i64 %11528, i64* %RAX, align 8, !tbaa !2428
  %11529 = icmp ult i32 %11527, %11526
  %11530 = icmp ult i32 %11527, 1
  %11531 = or i1 %11529, %11530
  %11532 = zext i1 %11531 to i8
  %11533 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11532, i8* %11533, align 1, !tbaa !2434
  %11534 = and i32 %11527, 255
  %11535 = call i32 @llvm.ctpop.i32(i32 %11534) #17
  %11536 = trunc i32 %11535 to i8
  %11537 = and i8 %11536, 1
  %11538 = xor i8 %11537, 1
  %11539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11538, i8* %11539, align 1, !tbaa !2448
  %11540 = xor i64 1, %11523
  %11541 = trunc i64 %11540 to i32
  %11542 = xor i32 %11541, %11527
  %11543 = lshr i32 %11542, 4
  %11544 = trunc i32 %11543 to i8
  %11545 = and i8 %11544, 1
  %11546 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11545, i8* %11546, align 1, !tbaa !2449
  %11547 = icmp eq i32 %11527, 0
  %11548 = zext i1 %11547 to i8
  %11549 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11548, i8* %11549, align 1, !tbaa !2450
  %11550 = lshr i32 %11527, 31
  %11551 = trunc i32 %11550 to i8
  %11552 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11551, i8* %11552, align 1, !tbaa !2451
  %11553 = lshr i32 %11526, 31
  %11554 = xor i32 %11550, %11553
  %11555 = add nuw nsw i32 %11554, %11550
  %11556 = icmp eq i32 %11555, 2
  %11557 = zext i1 %11556 to i8
  %11558 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11557, i8* %11558, align 1, !tbaa !2452
  %11559 = load i64, i64* %RBP
  %11560 = sub i64 %11559, 176
  %11561 = load i32, i32* %EAX
  %11562 = zext i32 %11561 to i64
  %11563 = load i64, i64* %PC
  %11564 = add i64 %11563, 6
  store i64 %11564, i64* %PC
  %11565 = inttoptr i64 %11560 to i32*
  store i32 %11561, i32* %11565
  %11566 = load i32, i32* %EAX
  %11567 = zext i32 %11566 to i64
  %11568 = load i64, i64* %RBP
  %11569 = sub i64 %11568, 172
  %11570 = load i64, i64* %PC
  %11571 = add i64 %11570, 6
  store i64 %11571, i64* %PC
  %11572 = inttoptr i64 %11569 to i32*
  %11573 = load i32, i32* %11572
  %11574 = sub i32 %11566, %11573
  %11575 = icmp ult i32 %11566, %11573
  %11576 = zext i1 %11575 to i8
  %11577 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11576, i8* %11577, align 1, !tbaa !2434
  %11578 = and i32 %11574, 255
  %11579 = call i32 @llvm.ctpop.i32(i32 %11578) #17
  %11580 = trunc i32 %11579 to i8
  %11581 = and i8 %11580, 1
  %11582 = xor i8 %11581, 1
  %11583 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11582, i8* %11583, align 1, !tbaa !2448
  %11584 = xor i32 %11573, %11566
  %11585 = xor i32 %11584, %11574
  %11586 = lshr i32 %11585, 4
  %11587 = trunc i32 %11586 to i8
  %11588 = and i8 %11587, 1
  %11589 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11588, i8* %11589, align 1, !tbaa !2449
  %11590 = icmp eq i32 %11574, 0
  %11591 = zext i1 %11590 to i8
  %11592 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11591, i8* %11592, align 1, !tbaa !2450
  %11593 = lshr i32 %11574, 31
  %11594 = trunc i32 %11593 to i8
  %11595 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11594, i8* %11595, align 1, !tbaa !2451
  %11596 = lshr i32 %11566, 31
  %11597 = lshr i32 %11573, 31
  %11598 = xor i32 %11597, %11596
  %11599 = xor i32 %11593, %11596
  %11600 = add nuw nsw i32 %11599, %11598
  %11601 = icmp eq i32 %11600, 2
  %11602 = zext i1 %11601 to i8
  %11603 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11602, i8* %11603, align 1, !tbaa !2452
  %11604 = load i64, i64* %PC
  %11605 = add i64 %11604, 11
  %11606 = load i64, i64* %PC
  %11607 = add i64 %11606, 6
  %11608 = load i64, i64* %PC
  %11609 = add i64 %11608, 6
  store i64 %11609, i64* %PC
  %11610 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11611 = load i8, i8* %11610, align 1, !tbaa !2450
  %11612 = icmp eq i8 %11611, 0
  %11613 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11614 = load i8, i8* %11613, align 1, !tbaa !2451
  %11615 = icmp ne i8 %11614, 0
  %11616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %11617 = load i8, i8* %11616, align 1, !tbaa !2452
  %11618 = icmp ne i8 %11617, 0
  %11619 = xor i1 %11615, %11618
  %11620 = xor i1 %11619, true
  %11621 = and i1 %11612, %11620
  %11622 = zext i1 %11621 to i8
  store i8 %11622, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %11623 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11624 = select i1 %11621, i64 %11605, i64 %11607
  store i64 %11624, i64* %11623, align 8, !tbaa !2428
  %11625 = load i8, i8* %BRANCH_TAKEN
  %11626 = icmp eq i8 %11625, 1
  br i1 %11626, label %block_4015a0, label %block_40159b
}

; Function Attrs: noinline
define %struct.Memory* @sub_4018f0___libc_csu_fini(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_4018f0:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 2
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10 = load i64, i64* %9, align 8, !tbaa !2428
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11
  store i64 %12, i64* %8, align 8, !tbaa !2428
  %13 = add i64 %10, 8
  store i64 %13, i64* %9, align 8, !tbaa !2428
  ret %struct.Memory* %2
}

; Function Attrs: noinline
define %struct.Memory* @sub_400770__start(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_400770:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EBP = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 5
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RCX = bitcast %union.anon* %14 to i64*
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16 = getelementptr inbounds %struct.GPR, %struct.GPR* %15, i32 0, i32 7
  %17 = getelementptr inbounds %struct.Reg, %struct.Reg* %16, i32 0, i32 0
  %RDX = bitcast %union.anon* %17 to i64*
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19 = getelementptr inbounds %struct.GPR, %struct.GPR* %18, i32 0, i32 9
  %20 = getelementptr inbounds %struct.Reg, %struct.Reg* %19, i32 0, i32 0
  %RSI = bitcast %union.anon* %20 to i64*
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22 = getelementptr inbounds %struct.GPR, %struct.GPR* %21, i32 0, i32 11
  %23 = getelementptr inbounds %struct.Reg, %struct.Reg* %22, i32 0, i32 0
  %RDI = bitcast %union.anon* %23 to i64*
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25 = getelementptr inbounds %struct.GPR, %struct.GPR* %24, i32 0, i32 13
  %26 = getelementptr inbounds %struct.Reg, %struct.Reg* %25, i32 0, i32 0
  %RSP = bitcast %union.anon* %26 to i64*
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28 = getelementptr inbounds %struct.GPR, %struct.GPR* %27, i32 0, i32 15
  %29 = getelementptr inbounds %struct.Reg, %struct.Reg* %28, i32 0, i32 0
  %RBP = bitcast %union.anon* %29 to i64*
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31 = getelementptr inbounds %struct.GPR, %struct.GPR* %30, i32 0, i32 17
  %32 = getelementptr inbounds %struct.Reg, %struct.Reg* %31, i32 0, i32 0
  %R8 = bitcast %union.anon* %32 to i64*
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34 = getelementptr inbounds %struct.GPR, %struct.GPR* %33, i32 0, i32 19
  %35 = getelementptr inbounds %struct.Reg, %struct.Reg* %34, i32 0, i32 0
  %R9 = bitcast %union.anon* %35 to i64*
  %36 = load i64, i64* %RBP
  %37 = load i32, i32* %EBP
  %38 = zext i32 %37 to i64
  %39 = load i64, i64* %PC
  %40 = add i64 %39, 2
  store i64 %40, i64* %PC
  %41 = xor i64 %38, %36
  %42 = trunc i64 %41 to i32
  %43 = and i64 %41, 4294967295
  store i64 %43, i64* %RBP, align 8, !tbaa !2428
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %44, align 1, !tbaa !2434
  %45 = and i32 %42, 255
  %46 = call i32 @llvm.ctpop.i32(i32 %45) #17
  %47 = trunc i32 %46 to i8
  %48 = and i8 %47, 1
  %49 = xor i8 %48, 1
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %49, i8* %50, align 1, !tbaa !2448
  %51 = icmp eq i32 %42, 0
  %52 = zext i1 %51 to i8
  %53 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %52, i8* %53, align 1, !tbaa !2450
  %54 = lshr i32 %42, 31
  %55 = trunc i32 %54 to i8
  %56 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %55, i8* %56, align 1, !tbaa !2451
  %57 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %57, align 1, !tbaa !2452
  %58 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %58, align 1, !tbaa !2449
  %59 = load i64, i64* %RDX
  %60 = load i64, i64* %PC
  %61 = add i64 %60, 3
  store i64 %61, i64* %PC
  store i64 %59, i64* %R9, align 8, !tbaa !2428
  %62 = load i64, i64* %PC
  %63 = add i64 %62, 1
  store i64 %63, i64* %PC
  %64 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %65 = load i64, i64* %64, align 8, !tbaa !2428
  %66 = add i64 %65, 8
  %67 = inttoptr i64 %65 to i64*
  %68 = load i64, i64* %67
  store i64 %68, i64* %RSI, align 8, !tbaa !2428
  store i64 %66, i64* %64, align 8, !tbaa !2428
  %69 = load i64, i64* %RSP
  %70 = load i64, i64* %PC
  %71 = add i64 %70, 3
  store i64 %71, i64* %PC
  store i64 %69, i64* %RDX, align 8, !tbaa !2428
  %72 = load i64, i64* %RSP
  %73 = load i64, i64* %PC
  %74 = add i64 %73, 4
  store i64 %74, i64* %PC
  %75 = and i64 -16, %72
  store i64 %75, i64* %RSP, align 8, !tbaa !2428
  %76 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %76, align 1, !tbaa !2434
  %77 = trunc i64 %75 to i32
  %78 = and i32 %77, 255
  %79 = call i32 @llvm.ctpop.i32(i32 %78) #17
  %80 = trunc i32 %79 to i8
  %81 = and i8 %80, 1
  %82 = xor i8 %81, 1
  %83 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %82, i8* %83, align 1, !tbaa !2448
  %84 = icmp eq i64 %75, 0
  %85 = zext i1 %84 to i8
  %86 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %85, i8* %86, align 1, !tbaa !2450
  %87 = lshr i64 %75, 63
  %88 = trunc i64 %87 to i8
  %89 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %88, i8* %89, align 1, !tbaa !2451
  %90 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %90, align 1, !tbaa !2452
  %91 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %91, align 1, !tbaa !2449
  %92 = load i64, i64* %RAX
  %93 = load i64, i64* %PC
  %94 = add i64 %93, 1
  store i64 %94, i64* %PC
  %95 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %96 = load i64, i64* %95, align 8, !tbaa !2428
  %97 = add i64 %96, -8
  %98 = inttoptr i64 %97 to i64*
  store i64 %92, i64* %98
  store i64 %97, i64* %95, align 8, !tbaa !2428
  %99 = load i64, i64* %RSP
  %100 = load i64, i64* %PC
  %101 = add i64 %100, 1
  store i64 %101, i64* %PC
  %102 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %103 = load i64, i64* %102, align 8, !tbaa !2428
  %104 = add i64 %103, -8
  %105 = inttoptr i64 %104 to i64*
  store i64 %99, i64* %105
  store i64 %104, i64* %102, align 8, !tbaa !2428
  %106 = load i64, i64* %PC
  %107 = add i64 %106, 7
  store i64 %107, i64* %PC
  store i64 ptrtoint (void ()* @callback_sub_4018f0___libc_csu_fini to i64), i64* %R8, align 8, !tbaa !2428
  %108 = load i64, i64* %PC
  %109 = add i64 %108, 7
  store i64 %109, i64* %PC
  store i64 ptrtoint (void ()* @callback_sub_401880___libc_csu_init to i64), i64* %RCX, align 8, !tbaa !2428
  %110 = load i64, i64* %PC
  %111 = add i64 %110, 7
  store i64 %111, i64* %PC
  store i64 ptrtoint (void ()* @main to i64), i64* %RDI, align 8, !tbaa !2428
  %112 = load i64, i64* %PC
  %113 = add i64 %112, 6
  %114 = load i64, i64* %PC
  %115 = add i64 %114, 6
  store i64 %115, i64* %PC
  %116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %117 = load i64, i64* %116, align 8, !tbaa !2428
  %118 = add i64 %117, -8
  %119 = inttoptr i64 %118 to i64*
  store i64 %113, i64* %119
  store i64 %118, i64* %116, align 8, !tbaa !2428
  %120 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %121 = load i64, i64* getelementptr inbounds (%seg_601ff0__got_type, %seg_601ff0__got_type* @seg_601ff0__got, i32 0, i32 0)
  store i64 %121, i64* %120, align 8, !tbaa !2428
  %122 = load i64, i64* %PC
  %123 = call %struct.Memory* @ext_602178___libc_start_main(%struct.State* %0, i64 %122, %struct.Memory* %2)
  %124 = load i64, i64* %PC
  %125 = add i64 %124, 1
  store i64 %125, i64* %PC
  %126 = load i64, i64* %PC
  %127 = tail call %struct.Memory* @__remill_error(%struct.State* %0, i64 %126, %struct.Memory* %123)
  ret %struct.Memory* %127
}

; Function Attrs: noinline
define %struct.Memory* @sub_400850_frame_dummy(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_400850:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 1
  store i64 %14, i64* %PC
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %16 = load i64, i64* %15, align 8, !tbaa !2428
  %17 = add i64 %16, -8
  %18 = inttoptr i64 %17 to i64*
  store i64 %12, i64* %18
  store i64 %17, i64* %15, align 8, !tbaa !2428
  %19 = load i64, i64* %RSP
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 3
  store i64 %21, i64* %PC
  store i64 %19, i64* %RBP, align 8, !tbaa !2428
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 1
  store i64 %23, i64* %PC
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %25 = load i64, i64* %24, align 8, !tbaa !2428
  %26 = add i64 %25, 8
  %27 = inttoptr i64 %25 to i64*
  %28 = load i64, i64* %27
  store i64 %28, i64* %RBP, align 8, !tbaa !2428
  store i64 %26, i64* %24, align 8, !tbaa !2428
  %29 = load i64, i64* %PC
  %30 = sub i64 %29, 117
  %31 = load i64, i64* %PC
  %32 = add i64 %31, 2
  store i64 %32, i64* %PC
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %30, i64* %33, align 8, !tbaa !2428
  %34 = load i64, i64* %PC
  %35 = tail call %struct.Memory* @sub_4007e0_register_tm_clones(%struct.State* %0, i64 %34, %struct.Memory* %2)
  ret %struct.Memory* %35
}

; Function Attrs: noinline
declare void @__mcsema_attach_call() #13

; Function Attrs: naked nobuiltin noinline
define internal void @callback_sub_400850_frame_dummy() #15 {
  call void asm sideeffect "pushq $0;pushq $$0x400850;jmpq *$1;", "*m,*m,~{dirflag},~{fpsr},~{flags}"(%struct.Memory* (%struct.State*, i64, %struct.Memory*)** @1, void ()** @2)
  ret void
}

define internal %struct.Memory* @callback_sub_400850_frame_dummy_wrapper(%struct.State*, i64, %struct.Memory*) {
  %4 = load volatile i1, i1* @0
  br i1 %4, label %5, label %6

; <label>:5:                                      ; preds = %3
  br label %__mcsema_early_init.exit

; <label>:6:                                      ; preds = %3
  store volatile i1 true, i1* @0
  br label %__mcsema_early_init.exit

__mcsema_early_init.exit:                         ; preds = %6, %5
  %7 = tail call %struct.Memory* @sub_400850_frame_dummy(%struct.State* %0, i64 %1, %struct.Memory* %2)
  ret %struct.Memory* %7
}

; Function Attrs: naked nobuiltin noinline
define internal void @callback_sub_400820___do_global_dtors_aux() #15 {
  call void asm sideeffect "pushq $0;pushq $$0x400820;jmpq *$1;", "*m,*m,~{dirflag},~{fpsr},~{flags}"(%struct.Memory* (%struct.State*, i64, %struct.Memory*)** @3, void ()** @2)
  ret void
}

define internal %struct.Memory* @callback_sub_400820___do_global_dtors_aux_wrapper(%struct.State*, i64, %struct.Memory*) {
  %4 = load volatile i1, i1* @0
  br i1 %4, label %5, label %6

; <label>:5:                                      ; preds = %3
  br label %__mcsema_early_init.exit

; <label>:6:                                      ; preds = %3
  store volatile i1 true, i1* @0
  br label %__mcsema_early_init.exit

__mcsema_early_init.exit:                         ; preds = %6, %5
  %7 = tail call %struct.Memory* @sub_400820___do_global_dtors_aux(%struct.State* %0, i64 %1, %struct.Memory* %2)
  ret %struct.Memory* %7
}

; Function Attrs: noinline
define internal %struct.Memory* @ext_4006f0_printf(%struct.State*, i64, %struct.Memory*) #13 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

; Function Attrs: noinline
define internal %struct.Memory* @ext_602168_log(%struct.State*, i64, %struct.Memory*) #13 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @log to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

; Function Attrs: noinline
define internal %struct.Memory* @ext_6020f0_exp(%struct.State*, i64, %struct.Memory*) #13 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @exp to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

; Function Attrs: alwaysinline inlinehint
define %struct.Memory* @ext_400760_sqrt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #16 {
  %state = alloca %struct.State*, align 8
  %curr_pc = alloca i64, align 8
  %memory = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  %SS_BASE = alloca i64, align 8
  %ES_BASE = alloca i64, align 8
  %DS_BASE = alloca i64, align 8
  %CS_BASE = alloca i64, align 8
  %STATE = alloca %struct.State*, align 8
  %MEMORY = alloca %struct.Memory*, align 8
  %_DR0 = alloca i64*, align 8
  %_DR1 = alloca i64*, align 8
  %_DR2 = alloca i64*, align 8
  %_DR3 = alloca i64*, align 8
  %_DR4 = alloca i64*, align 8
  %_DR5 = alloca i64*, align 8
  %_DR6 = alloca i64*, align 8
  %_DR7 = alloca i64*, align 8
  %CR0 = alloca i64*, align 8
  %CR1 = alloca i64*, align 8
  %CR2 = alloca i64*, align 8
  %CR3 = alloca i64*, align 8
  %CR4 = alloca i64*, align 8
  %CR8 = alloca i64*, align 8
  store %struct.State* %0, %struct.State** %state, align 8
  store i64 %1, i64* %curr_pc, align 8
  store %struct.Memory* %2, %struct.Memory** %memory, align 8
  store i8 0, i8* %BRANCH_TAKEN, align 1
  store i64 0, i64* %SS_BASE, align 8
  store i64 0, i64* %ES_BASE, align 8
  store i64 0, i64* %DS_BASE, align 8
  store i64 0, i64* %CS_BASE, align 8
  store %struct.State* %0, %struct.State** %STATE, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0
  %PC = bitcast %union.anon* %6 to i64*
  store i64 %1, i64* %PC, align 8
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 1
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0
  %10 = bitcast %union.anon* %9 to %struct.anon.2*
  %AH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10, i32 0, i32 1
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12 = getelementptr inbounds %struct.GPR, %struct.GPR* %11, i32 0, i32 3
  %13 = getelementptr inbounds %struct.Reg, %struct.Reg* %12, i32 0, i32 0
  %14 = bitcast %union.anon* %13 to %struct.anon.2*
  %BH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %14, i32 0, i32 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16 = getelementptr inbounds %struct.GPR, %struct.GPR* %15, i32 0, i32 5
  %17 = getelementptr inbounds %struct.Reg, %struct.Reg* %16, i32 0, i32 0
  %18 = bitcast %union.anon* %17 to %struct.anon.2*
  %CH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %18, i32 0, i32 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20 = getelementptr inbounds %struct.GPR, %struct.GPR* %19, i32 0, i32 7
  %21 = getelementptr inbounds %struct.Reg, %struct.Reg* %20, i32 0, i32 0
  %22 = bitcast %union.anon* %21 to %struct.anon.2*
  %DH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %22, i32 0, i32 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 1
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0
  %26 = bitcast %union.anon* %25 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %26, i32 0, i32 0
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28 = getelementptr inbounds %struct.GPR, %struct.GPR* %27, i32 0, i32 3
  %29 = getelementptr inbounds %struct.Reg, %struct.Reg* %28, i32 0, i32 0
  %30 = bitcast %union.anon* %29 to %struct.anon.2*
  %BL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %30, i32 0, i32 0
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32 = getelementptr inbounds %struct.GPR, %struct.GPR* %31, i32 0, i32 5
  %33 = getelementptr inbounds %struct.Reg, %struct.Reg* %32, i32 0, i32 0
  %34 = bitcast %union.anon* %33 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %34, i32 0, i32 0
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36 = getelementptr inbounds %struct.GPR, %struct.GPR* %35, i32 0, i32 7
  %37 = getelementptr inbounds %struct.Reg, %struct.Reg* %36, i32 0, i32 0
  %38 = bitcast %union.anon* %37 to %struct.anon.2*
  %DL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %38, i32 0, i32 0
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %40 = getelementptr inbounds %struct.GPR, %struct.GPR* %39, i32 0, i32 9
  %41 = getelementptr inbounds %struct.Reg, %struct.Reg* %40, i32 0, i32 0
  %42 = bitcast %union.anon* %41 to %struct.anon.2*
  %SIL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %42, i32 0, i32 0
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %44 = getelementptr inbounds %struct.GPR, %struct.GPR* %43, i32 0, i32 11
  %45 = getelementptr inbounds %struct.Reg, %struct.Reg* %44, i32 0, i32 0
  %46 = bitcast %union.anon* %45 to %struct.anon.2*
  %DIL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %46, i32 0, i32 0
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %48 = getelementptr inbounds %struct.GPR, %struct.GPR* %47, i32 0, i32 13
  %49 = getelementptr inbounds %struct.Reg, %struct.Reg* %48, i32 0, i32 0
  %50 = bitcast %union.anon* %49 to %struct.anon.2*
  %SPL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %50, i32 0, i32 0
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %52 = getelementptr inbounds %struct.GPR, %struct.GPR* %51, i32 0, i32 15
  %53 = getelementptr inbounds %struct.Reg, %struct.Reg* %52, i32 0, i32 0
  %54 = bitcast %union.anon* %53 to %struct.anon.2*
  %BPL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %54, i32 0, i32 0
  %55 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %56 = getelementptr inbounds %struct.GPR, %struct.GPR* %55, i32 0, i32 17
  %57 = getelementptr inbounds %struct.Reg, %struct.Reg* %56, i32 0, i32 0
  %58 = bitcast %union.anon* %57 to %struct.anon.2*
  %R8B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %58, i32 0, i32 0
  %59 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %60 = getelementptr inbounds %struct.GPR, %struct.GPR* %59, i32 0, i32 19
  %61 = getelementptr inbounds %struct.Reg, %struct.Reg* %60, i32 0, i32 0
  %62 = bitcast %union.anon* %61 to %struct.anon.2*
  %R9B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %62, i32 0, i32 0
  %63 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %64 = getelementptr inbounds %struct.GPR, %struct.GPR* %63, i32 0, i32 21
  %65 = getelementptr inbounds %struct.Reg, %struct.Reg* %64, i32 0, i32 0
  %66 = bitcast %union.anon* %65 to %struct.anon.2*
  %R10B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %66, i32 0, i32 0
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %68 = getelementptr inbounds %struct.GPR, %struct.GPR* %67, i32 0, i32 23
  %69 = getelementptr inbounds %struct.Reg, %struct.Reg* %68, i32 0, i32 0
  %70 = bitcast %union.anon* %69 to %struct.anon.2*
  %R11B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %70, i32 0, i32 0
  %71 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %72 = getelementptr inbounds %struct.GPR, %struct.GPR* %71, i32 0, i32 25
  %73 = getelementptr inbounds %struct.Reg, %struct.Reg* %72, i32 0, i32 0
  %74 = bitcast %union.anon* %73 to %struct.anon.2*
  %R12B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %74, i32 0, i32 0
  %75 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %76 = getelementptr inbounds %struct.GPR, %struct.GPR* %75, i32 0, i32 27
  %77 = getelementptr inbounds %struct.Reg, %struct.Reg* %76, i32 0, i32 0
  %78 = bitcast %union.anon* %77 to %struct.anon.2*
  %R13B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %78, i32 0, i32 0
  %79 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %80 = getelementptr inbounds %struct.GPR, %struct.GPR* %79, i32 0, i32 29
  %81 = getelementptr inbounds %struct.Reg, %struct.Reg* %80, i32 0, i32 0
  %82 = bitcast %union.anon* %81 to %struct.anon.2*
  %R14B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %82, i32 0, i32 0
  %83 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %84 = getelementptr inbounds %struct.GPR, %struct.GPR* %83, i32 0, i32 31
  %85 = getelementptr inbounds %struct.Reg, %struct.Reg* %84, i32 0, i32 0
  %86 = bitcast %union.anon* %85 to %struct.anon.2*
  %R15B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %86, i32 0, i32 0
  %87 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %88 = getelementptr inbounds %struct.GPR, %struct.GPR* %87, i32 0, i32 1
  %89 = getelementptr inbounds %struct.Reg, %struct.Reg* %88, i32 0, i32 0
  %AX = bitcast %union.anon* %89 to i16*
  %90 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %91 = getelementptr inbounds %struct.GPR, %struct.GPR* %90, i32 0, i32 3
  %92 = getelementptr inbounds %struct.Reg, %struct.Reg* %91, i32 0, i32 0
  %BX = bitcast %union.anon* %92 to i16*
  %93 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %94 = getelementptr inbounds %struct.GPR, %struct.GPR* %93, i32 0, i32 5
  %95 = getelementptr inbounds %struct.Reg, %struct.Reg* %94, i32 0, i32 0
  %CX = bitcast %union.anon* %95 to i16*
  %96 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %97 = getelementptr inbounds %struct.GPR, %struct.GPR* %96, i32 0, i32 7
  %98 = getelementptr inbounds %struct.Reg, %struct.Reg* %97, i32 0, i32 0
  %DX = bitcast %union.anon* %98 to i16*
  %99 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %100 = getelementptr inbounds %struct.GPR, %struct.GPR* %99, i32 0, i32 9
  %101 = getelementptr inbounds %struct.Reg, %struct.Reg* %100, i32 0, i32 0
  %SI = bitcast %union.anon* %101 to i16*
  %102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %103 = getelementptr inbounds %struct.GPR, %struct.GPR* %102, i32 0, i32 11
  %104 = getelementptr inbounds %struct.Reg, %struct.Reg* %103, i32 0, i32 0
  %DI = bitcast %union.anon* %104 to i16*
  %105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %106 = getelementptr inbounds %struct.GPR, %struct.GPR* %105, i32 0, i32 13
  %107 = getelementptr inbounds %struct.Reg, %struct.Reg* %106, i32 0, i32 0
  %SP = bitcast %union.anon* %107 to i16*
  %108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %109 = getelementptr inbounds %struct.GPR, %struct.GPR* %108, i32 0, i32 15
  %110 = getelementptr inbounds %struct.Reg, %struct.Reg* %109, i32 0, i32 0
  %BP = bitcast %union.anon* %110 to i16*
  %111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %112 = getelementptr inbounds %struct.GPR, %struct.GPR* %111, i32 0, i32 17
  %113 = getelementptr inbounds %struct.Reg, %struct.Reg* %112, i32 0, i32 0
  %R8W = bitcast %union.anon* %113 to i16*
  %114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %115 = getelementptr inbounds %struct.GPR, %struct.GPR* %114, i32 0, i32 19
  %116 = getelementptr inbounds %struct.Reg, %struct.Reg* %115, i32 0, i32 0
  %R9W = bitcast %union.anon* %116 to i16*
  %117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %118 = getelementptr inbounds %struct.GPR, %struct.GPR* %117, i32 0, i32 21
  %119 = getelementptr inbounds %struct.Reg, %struct.Reg* %118, i32 0, i32 0
  %R10W = bitcast %union.anon* %119 to i16*
  %120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %121 = getelementptr inbounds %struct.GPR, %struct.GPR* %120, i32 0, i32 23
  %122 = getelementptr inbounds %struct.Reg, %struct.Reg* %121, i32 0, i32 0
  %R11W = bitcast %union.anon* %122 to i16*
  %123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %124 = getelementptr inbounds %struct.GPR, %struct.GPR* %123, i32 0, i32 25
  %125 = getelementptr inbounds %struct.Reg, %struct.Reg* %124, i32 0, i32 0
  %R12W = bitcast %union.anon* %125 to i16*
  %126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %127 = getelementptr inbounds %struct.GPR, %struct.GPR* %126, i32 0, i32 27
  %128 = getelementptr inbounds %struct.Reg, %struct.Reg* %127, i32 0, i32 0
  %R13W = bitcast %union.anon* %128 to i16*
  %129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %130 = getelementptr inbounds %struct.GPR, %struct.GPR* %129, i32 0, i32 29
  %131 = getelementptr inbounds %struct.Reg, %struct.Reg* %130, i32 0, i32 0
  %R14W = bitcast %union.anon* %131 to i16*
  %132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %133 = getelementptr inbounds %struct.GPR, %struct.GPR* %132, i32 0, i32 31
  %134 = getelementptr inbounds %struct.Reg, %struct.Reg* %133, i32 0, i32 0
  %R15W = bitcast %union.anon* %134 to i16*
  %135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %136 = getelementptr inbounds %struct.GPR, %struct.GPR* %135, i32 0, i32 33
  %137 = getelementptr inbounds %struct.Reg, %struct.Reg* %136, i32 0, i32 0
  %IP = bitcast %union.anon* %137 to i16*
  %138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %139 = getelementptr inbounds %struct.GPR, %struct.GPR* %138, i32 0, i32 1
  %140 = getelementptr inbounds %struct.Reg, %struct.Reg* %139, i32 0, i32 0
  %EAX = bitcast %union.anon* %140 to i32*
  %141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %142 = getelementptr inbounds %struct.GPR, %struct.GPR* %141, i32 0, i32 3
  %143 = getelementptr inbounds %struct.Reg, %struct.Reg* %142, i32 0, i32 0
  %EBX = bitcast %union.anon* %143 to i32*
  %144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %145 = getelementptr inbounds %struct.GPR, %struct.GPR* %144, i32 0, i32 5
  %146 = getelementptr inbounds %struct.Reg, %struct.Reg* %145, i32 0, i32 0
  %ECX = bitcast %union.anon* %146 to i32*
  %147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %148 = getelementptr inbounds %struct.GPR, %struct.GPR* %147, i32 0, i32 7
  %149 = getelementptr inbounds %struct.Reg, %struct.Reg* %148, i32 0, i32 0
  %EDX = bitcast %union.anon* %149 to i32*
  %150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %151 = getelementptr inbounds %struct.GPR, %struct.GPR* %150, i32 0, i32 9
  %152 = getelementptr inbounds %struct.Reg, %struct.Reg* %151, i32 0, i32 0
  %ESI = bitcast %union.anon* %152 to i32*
  %153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %154 = getelementptr inbounds %struct.GPR, %struct.GPR* %153, i32 0, i32 11
  %155 = getelementptr inbounds %struct.Reg, %struct.Reg* %154, i32 0, i32 0
  %EDI = bitcast %union.anon* %155 to i32*
  %156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %157 = getelementptr inbounds %struct.GPR, %struct.GPR* %156, i32 0, i32 13
  %158 = getelementptr inbounds %struct.Reg, %struct.Reg* %157, i32 0, i32 0
  %ESP = bitcast %union.anon* %158 to i32*
  %159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %160 = getelementptr inbounds %struct.GPR, %struct.GPR* %159, i32 0, i32 15
  %161 = getelementptr inbounds %struct.Reg, %struct.Reg* %160, i32 0, i32 0
  %EBP = bitcast %union.anon* %161 to i32*
  %162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %163 = getelementptr inbounds %struct.GPR, %struct.GPR* %162, i32 0, i32 33
  %164 = getelementptr inbounds %struct.Reg, %struct.Reg* %163, i32 0, i32 0
  %EIP = bitcast %union.anon* %164 to i32*
  %165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %166 = getelementptr inbounds %struct.GPR, %struct.GPR* %165, i32 0, i32 17
  %167 = getelementptr inbounds %struct.Reg, %struct.Reg* %166, i32 0, i32 0
  %R8D = bitcast %union.anon* %167 to i32*
  %168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %169 = getelementptr inbounds %struct.GPR, %struct.GPR* %168, i32 0, i32 19
  %170 = getelementptr inbounds %struct.Reg, %struct.Reg* %169, i32 0, i32 0
  %R9D = bitcast %union.anon* %170 to i32*
  %171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %172 = getelementptr inbounds %struct.GPR, %struct.GPR* %171, i32 0, i32 21
  %173 = getelementptr inbounds %struct.Reg, %struct.Reg* %172, i32 0, i32 0
  %R10D = bitcast %union.anon* %173 to i32*
  %174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %175 = getelementptr inbounds %struct.GPR, %struct.GPR* %174, i32 0, i32 23
  %176 = getelementptr inbounds %struct.Reg, %struct.Reg* %175, i32 0, i32 0
  %R11D = bitcast %union.anon* %176 to i32*
  %177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %178 = getelementptr inbounds %struct.GPR, %struct.GPR* %177, i32 0, i32 25
  %179 = getelementptr inbounds %struct.Reg, %struct.Reg* %178, i32 0, i32 0
  %R12D = bitcast %union.anon* %179 to i32*
  %180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %181 = getelementptr inbounds %struct.GPR, %struct.GPR* %180, i32 0, i32 27
  %182 = getelementptr inbounds %struct.Reg, %struct.Reg* %181, i32 0, i32 0
  %R13D = bitcast %union.anon* %182 to i32*
  %183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %184 = getelementptr inbounds %struct.GPR, %struct.GPR* %183, i32 0, i32 29
  %185 = getelementptr inbounds %struct.Reg, %struct.Reg* %184, i32 0, i32 0
  %R14D = bitcast %union.anon* %185 to i32*
  %186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %187 = getelementptr inbounds %struct.GPR, %struct.GPR* %186, i32 0, i32 31
  %188 = getelementptr inbounds %struct.Reg, %struct.Reg* %187, i32 0, i32 0
  %R15D = bitcast %union.anon* %188 to i32*
  %189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %190 = getelementptr inbounds %struct.GPR, %struct.GPR* %189, i32 0, i32 1
  %191 = getelementptr inbounds %struct.Reg, %struct.Reg* %190, i32 0, i32 0
  %RAX = bitcast %union.anon* %191 to i64*
  %192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %193 = getelementptr inbounds %struct.GPR, %struct.GPR* %192, i32 0, i32 3
  %194 = getelementptr inbounds %struct.Reg, %struct.Reg* %193, i32 0, i32 0
  %RBX = bitcast %union.anon* %194 to i64*
  %195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %196 = getelementptr inbounds %struct.GPR, %struct.GPR* %195, i32 0, i32 5
  %197 = getelementptr inbounds %struct.Reg, %struct.Reg* %196, i32 0, i32 0
  %RCX = bitcast %union.anon* %197 to i64*
  %198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %199 = getelementptr inbounds %struct.GPR, %struct.GPR* %198, i32 0, i32 7
  %200 = getelementptr inbounds %struct.Reg, %struct.Reg* %199, i32 0, i32 0
  %RDX = bitcast %union.anon* %200 to i64*
  %201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %202 = getelementptr inbounds %struct.GPR, %struct.GPR* %201, i32 0, i32 9
  %203 = getelementptr inbounds %struct.Reg, %struct.Reg* %202, i32 0, i32 0
  %RSI = bitcast %union.anon* %203 to i64*
  %204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %205 = getelementptr inbounds %struct.GPR, %struct.GPR* %204, i32 0, i32 11
  %206 = getelementptr inbounds %struct.Reg, %struct.Reg* %205, i32 0, i32 0
  %RDI = bitcast %union.anon* %206 to i64*
  %207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %208 = getelementptr inbounds %struct.GPR, %struct.GPR* %207, i32 0, i32 13
  %209 = getelementptr inbounds %struct.Reg, %struct.Reg* %208, i32 0, i32 0
  %RSP = bitcast %union.anon* %209 to i64*
  %210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %211 = getelementptr inbounds %struct.GPR, %struct.GPR* %210, i32 0, i32 15
  %212 = getelementptr inbounds %struct.Reg, %struct.Reg* %211, i32 0, i32 0
  %RBP = bitcast %union.anon* %212 to i64*
  %213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %214 = getelementptr inbounds %struct.GPR, %struct.GPR* %213, i32 0, i32 17
  %215 = getelementptr inbounds %struct.Reg, %struct.Reg* %214, i32 0, i32 0
  %R8 = bitcast %union.anon* %215 to i64*
  %216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %217 = getelementptr inbounds %struct.GPR, %struct.GPR* %216, i32 0, i32 19
  %218 = getelementptr inbounds %struct.Reg, %struct.Reg* %217, i32 0, i32 0
  %R9 = bitcast %union.anon* %218 to i64*
  %219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %220 = getelementptr inbounds %struct.GPR, %struct.GPR* %219, i32 0, i32 21
  %221 = getelementptr inbounds %struct.Reg, %struct.Reg* %220, i32 0, i32 0
  %R10 = bitcast %union.anon* %221 to i64*
  %222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %223 = getelementptr inbounds %struct.GPR, %struct.GPR* %222, i32 0, i32 23
  %224 = getelementptr inbounds %struct.Reg, %struct.Reg* %223, i32 0, i32 0
  %R11 = bitcast %union.anon* %224 to i64*
  %225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %226 = getelementptr inbounds %struct.GPR, %struct.GPR* %225, i32 0, i32 25
  %227 = getelementptr inbounds %struct.Reg, %struct.Reg* %226, i32 0, i32 0
  %R12 = bitcast %union.anon* %227 to i64*
  %228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %229 = getelementptr inbounds %struct.GPR, %struct.GPR* %228, i32 0, i32 27
  %230 = getelementptr inbounds %struct.Reg, %struct.Reg* %229, i32 0, i32 0
  %R13 = bitcast %union.anon* %230 to i64*
  %231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %232 = getelementptr inbounds %struct.GPR, %struct.GPR* %231, i32 0, i32 29
  %233 = getelementptr inbounds %struct.Reg, %struct.Reg* %232, i32 0, i32 0
  %R14 = bitcast %union.anon* %233 to i64*
  %234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %235 = getelementptr inbounds %struct.GPR, %struct.GPR* %234, i32 0, i32 31
  %236 = getelementptr inbounds %struct.Reg, %struct.Reg* %235, i32 0, i32 0
  %R15 = bitcast %union.anon* %236 to i64*
  %237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %238 = getelementptr inbounds %struct.GPR, %struct.GPR* %237, i32 0, i32 33
  %239 = getelementptr inbounds %struct.Reg, %struct.Reg* %238, i32 0, i32 0
  %RIP = bitcast %union.anon* %239 to i64*
  %240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %241 = getelementptr inbounds %struct.Segments, %struct.Segments* %240, i32 0, i32 1
  %SS = bitcast %union.SegmentSelector* %241 to i16*
  %242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %243 = getelementptr inbounds %struct.Segments, %struct.Segments* %242, i32 0, i32 3
  %ES = bitcast %union.SegmentSelector* %243 to i16*
  %244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %245 = getelementptr inbounds %struct.Segments, %struct.Segments* %244, i32 0, i32 5
  %GS = bitcast %union.SegmentSelector* %245 to i16*
  %246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %247 = getelementptr inbounds %struct.Segments, %struct.Segments* %246, i32 0, i32 7
  %FS = bitcast %union.SegmentSelector* %247 to i16*
  %248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %249 = getelementptr inbounds %struct.Segments, %struct.Segments* %248, i32 0, i32 9
  %DS = bitcast %union.SegmentSelector* %249 to i16*
  %250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %251 = getelementptr inbounds %struct.Segments, %struct.Segments* %250, i32 0, i32 11
  %CS = bitcast %union.SegmentSelector* %251 to i16*
  %252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %253 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %252, i32 0, i32 5
  %254 = getelementptr inbounds %struct.Reg, %struct.Reg* %253, i32 0, i32 0
  %GS_BASE = bitcast %union.anon* %254 to i64*
  %255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %256 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %255, i32 0, i32 7
  %257 = getelementptr inbounds %struct.Reg, %struct.Reg* %256, i32 0, i32 0
  %FS_BASE = bitcast %union.anon* %257 to i64*
  %258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %259 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %258, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %259 to %"class.std::bitset"*
  %260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %261 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %260, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %261 to %"class.std::bitset"*
  %262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %263 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %262, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %263 to %"class.std::bitset"*
  %264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %265 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %264, i64 0, i64 3
  %YMM3 = bitcast %union.VectorReg* %265 to %"class.std::bitset"*
  %266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %267 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %266, i64 0, i64 4
  %YMM4 = bitcast %union.VectorReg* %267 to %"class.std::bitset"*
  %268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %269 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %268, i64 0, i64 5
  %YMM5 = bitcast %union.VectorReg* %269 to %"class.std::bitset"*
  %270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %271 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %270, i64 0, i64 6
  %YMM6 = bitcast %union.VectorReg* %271 to %"class.std::bitset"*
  %272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %273 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %272, i64 0, i64 7
  %YMM7 = bitcast %union.VectorReg* %273 to %"class.std::bitset"*
  %274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %275 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %274, i64 0, i64 8
  %YMM8 = bitcast %union.VectorReg* %275 to %"class.std::bitset"*
  %276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %277 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %276, i64 0, i64 9
  %YMM9 = bitcast %union.VectorReg* %277 to %"class.std::bitset"*
  %278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %279 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %278, i64 0, i64 10
  %YMM10 = bitcast %union.VectorReg* %279 to %"class.std::bitset"*
  %280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %281 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %280, i64 0, i64 11
  %YMM11 = bitcast %union.VectorReg* %281 to %"class.std::bitset"*
  %282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %283 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %282, i64 0, i64 12
  %YMM12 = bitcast %union.VectorReg* %283 to %"class.std::bitset"*
  %284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %285 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %284, i64 0, i64 13
  %YMM13 = bitcast %union.VectorReg* %285 to %"class.std::bitset"*
  %286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %287 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %286, i64 0, i64 14
  %YMM14 = bitcast %union.VectorReg* %287 to %"class.std::bitset"*
  %288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %289 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %288, i64 0, i64 15
  %YMM15 = bitcast %union.VectorReg* %289 to %"class.std::bitset"*
  %290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %291 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %290, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %291 to %union.vec128_t*
  %292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %293 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %292, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %293 to %union.vec128_t*
  %294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %295 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %294, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %295 to %union.vec128_t*
  %296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %297 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %296, i64 0, i64 3
  %XMM3 = bitcast %union.VectorReg* %297 to %union.vec128_t*
  %298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %299 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %298, i64 0, i64 4
  %XMM4 = bitcast %union.VectorReg* %299 to %union.vec128_t*
  %300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %301 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %300, i64 0, i64 5
  %XMM5 = bitcast %union.VectorReg* %301 to %union.vec128_t*
  %302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %303 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %302, i64 0, i64 6
  %XMM6 = bitcast %union.VectorReg* %303 to %union.vec128_t*
  %304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %305 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %304, i64 0, i64 7
  %XMM7 = bitcast %union.VectorReg* %305 to %union.vec128_t*
  %306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %307 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %306, i64 0, i64 8
  %XMM8 = bitcast %union.VectorReg* %307 to %union.vec128_t*
  %308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %309 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %308, i64 0, i64 9
  %XMM9 = bitcast %union.VectorReg* %309 to %union.vec128_t*
  %310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %311 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %310, i64 0, i64 10
  %XMM10 = bitcast %union.VectorReg* %311 to %union.vec128_t*
  %312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %313 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %312, i64 0, i64 11
  %XMM11 = bitcast %union.VectorReg* %313 to %union.vec128_t*
  %314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %315 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %314, i64 0, i64 12
  %XMM12 = bitcast %union.VectorReg* %315 to %union.vec128_t*
  %316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %317 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %316, i64 0, i64 13
  %XMM13 = bitcast %union.VectorReg* %317 to %union.vec128_t*
  %318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %319 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %318, i64 0, i64 14
  %XMM14 = bitcast %union.VectorReg* %319 to %union.vec128_t*
  %320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %321 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %320, i64 0, i64 15
  %XMM15 = bitcast %union.VectorReg* %321 to %union.vec128_t*
  %322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %323 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %322, i32 0, i32 0
  %324 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %323, i64 0, i64 0
  %ST0 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %324, i32 0, i32 1
  %325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %326 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %325, i32 0, i32 0
  %327 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %326, i64 0, i64 1
  %ST1 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %327, i32 0, i32 1
  %328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %329 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %328, i32 0, i32 0
  %330 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %329, i64 0, i64 2
  %ST2 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %330, i32 0, i32 1
  %331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %332 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %331, i32 0, i32 0
  %333 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %332, i64 0, i64 3
  %ST3 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %333, i32 0, i32 1
  %334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %335 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %334, i32 0, i32 0
  %336 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %335, i64 0, i64 4
  %ST4 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %336, i32 0, i32 1
  %337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %338 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %337, i32 0, i32 0
  %339 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %338, i64 0, i64 5
  %ST5 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %339, i32 0, i32 1
  %340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %341 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %340, i32 0, i32 0
  %342 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %341, i64 0, i64 6
  %ST6 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %342, i32 0, i32 1
  %343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %344 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %343, i32 0, i32 0
  %345 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %344, i64 0, i64 7
  %ST7 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %345, i32 0, i32 1
  %346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %347 = getelementptr inbounds %struct.MMX, %struct.MMX* %346, i32 0, i32 0
  %348 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %347, i64 0, i64 0
  %349 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %348, i32 0, i32 1
  %350 = bitcast %union.vec64_t* %349 to %struct.uint64v1_t*
  %351 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %350, i32 0, i32 0
  %MM0 = getelementptr inbounds [1 x i64], [1 x i64]* %351, i64 0, i64 0
  %352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %353 = getelementptr inbounds %struct.MMX, %struct.MMX* %352, i32 0, i32 0
  %354 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %353, i64 0, i64 1
  %355 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %354, i32 0, i32 1
  %356 = bitcast %union.vec64_t* %355 to %struct.uint64v1_t*
  %357 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %356, i32 0, i32 0
  %MM1 = getelementptr inbounds [1 x i64], [1 x i64]* %357, i64 0, i64 0
  %358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %359 = getelementptr inbounds %struct.MMX, %struct.MMX* %358, i32 0, i32 0
  %360 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %359, i64 0, i64 2
  %361 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %360, i32 0, i32 1
  %362 = bitcast %union.vec64_t* %361 to %struct.uint64v1_t*
  %363 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %362, i32 0, i32 0
  %MM2 = getelementptr inbounds [1 x i64], [1 x i64]* %363, i64 0, i64 0
  %364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %365 = getelementptr inbounds %struct.MMX, %struct.MMX* %364, i32 0, i32 0
  %366 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %365, i64 0, i64 3
  %367 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %366, i32 0, i32 1
  %368 = bitcast %union.vec64_t* %367 to %struct.uint64v1_t*
  %369 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %368, i32 0, i32 0
  %MM3 = getelementptr inbounds [1 x i64], [1 x i64]* %369, i64 0, i64 0
  %370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %371 = getelementptr inbounds %struct.MMX, %struct.MMX* %370, i32 0, i32 0
  %372 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %371, i64 0, i64 4
  %373 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %372, i32 0, i32 1
  %374 = bitcast %union.vec64_t* %373 to %struct.uint64v1_t*
  %375 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %374, i32 0, i32 0
  %MM4 = getelementptr inbounds [1 x i64], [1 x i64]* %375, i64 0, i64 0
  %376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %377 = getelementptr inbounds %struct.MMX, %struct.MMX* %376, i32 0, i32 0
  %378 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %377, i64 0, i64 5
  %379 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %378, i32 0, i32 1
  %380 = bitcast %union.vec64_t* %379 to %struct.uint64v1_t*
  %381 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %380, i32 0, i32 0
  %MM5 = getelementptr inbounds [1 x i64], [1 x i64]* %381, i64 0, i64 0
  %382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %383 = getelementptr inbounds %struct.MMX, %struct.MMX* %382, i32 0, i32 0
  %384 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %383, i64 0, i64 6
  %385 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %384, i32 0, i32 1
  %386 = bitcast %union.vec64_t* %385 to %struct.uint64v1_t*
  %387 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %386, i32 0, i32 0
  %MM6 = getelementptr inbounds [1 x i64], [1 x i64]* %387, i64 0, i64 0
  %388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %389 = getelementptr inbounds %struct.MMX, %struct.MMX* %388, i32 0, i32 0
  %390 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %389, i64 0, i64 7
  %391 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %390, i32 0, i32 1
  %392 = bitcast %union.vec64_t* %391 to %struct.uint64v1_t*
  %393 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %392, i32 0, i32 0
  %MM7 = getelementptr inbounds [1 x i64], [1 x i64]* %393, i64 0, i64 0
  %394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %394, i32 0, i32 5
  %395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %395, i32 0, i32 1
  %396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %396, i32 0, i32 11
  %397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %397, i32 0, i32 13
  %398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %398, i32 0, i32 3
  %399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %399, i32 0, i32 9
  %400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %400, i32 0, i32 7
  store i64* @DR0, i64** %_DR0, align 8
  store i64* @DR1, i64** %_DR1, align 8
  store i64* @DR2, i64** %_DR2, align 8
  store i64* @DR3, i64** %_DR3, align 8
  store i64* @DR4, i64** %_DR4, align 8
  store i64* @DR5, i64** %_DR5, align 8
  store i64* @DR6, i64** %_DR6, align 8
  store i64* @DR7, i64** %_DR7, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8, align 8
  %401 = bitcast %"class.std::bitset"* %YMM0 to double*
  %402 = load double, double* %401
  %403 = load i64, i64* %RSP
  %404 = load %struct.Memory*, %struct.Memory** %MEMORY
  %405 = inttoptr i64 %403 to i64*
  %406 = load i64, i64* %405
  store i64 %406, i64* %PC
  %407 = add i64 %403, 8
  store i64 %407, i64* %RSP
  %408 = call double @sqrt(double %402)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0
  %409 = bitcast %"class.std::bitset"* %YMM0 to double*
  store double %408, double* %409
  %410 = load %struct.Memory*, %struct.Memory** %MEMORY
  ret %struct.Memory* %410
}

; Function Attrs: noinline
define internal %struct.Memory* @ext_602128_time(%struct.State*, i64, %struct.Memory*) #13 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @time to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

; Function Attrs: noinline
define internal %struct.Memory* @ext_602190_atol(%struct.State*, i64, %struct.Memory*) #13 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @atol to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

; Function Attrs: noinline
define internal %struct.Memory* @ext_6020e8_strncmp(%struct.State*, i64, %struct.Memory*) #13 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @strncmp to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

; Function Attrs: noinline
define internal %struct.Memory* @ext_400720_fprintf(%struct.State*, i64, %struct.Memory*) #13 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @fprintf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

; Function Attrs: alwaysinline inlinehint
define %struct.Memory* @ext_400750_sin(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #16 {
  %state = alloca %struct.State*, align 8
  %curr_pc = alloca i64, align 8
  %memory = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  %SS_BASE = alloca i64, align 8
  %ES_BASE = alloca i64, align 8
  %DS_BASE = alloca i64, align 8
  %CS_BASE = alloca i64, align 8
  %STATE = alloca %struct.State*, align 8
  %MEMORY = alloca %struct.Memory*, align 8
  %_DR0 = alloca i64*, align 8
  %_DR1 = alloca i64*, align 8
  %_DR2 = alloca i64*, align 8
  %_DR3 = alloca i64*, align 8
  %_DR4 = alloca i64*, align 8
  %_DR5 = alloca i64*, align 8
  %_DR6 = alloca i64*, align 8
  %_DR7 = alloca i64*, align 8
  %CR0 = alloca i64*, align 8
  %CR1 = alloca i64*, align 8
  %CR2 = alloca i64*, align 8
  %CR3 = alloca i64*, align 8
  %CR4 = alloca i64*, align 8
  %CR8 = alloca i64*, align 8
  store %struct.State* %0, %struct.State** %state, align 8
  store i64 %1, i64* %curr_pc, align 8
  store %struct.Memory* %2, %struct.Memory** %memory, align 8
  store i8 0, i8* %BRANCH_TAKEN, align 1
  store i64 0, i64* %SS_BASE, align 8
  store i64 0, i64* %ES_BASE, align 8
  store i64 0, i64* %DS_BASE, align 8
  store i64 0, i64* %CS_BASE, align 8
  store %struct.State* %0, %struct.State** %STATE, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0
  %PC = bitcast %union.anon* %6 to i64*
  store i64 %1, i64* %PC, align 8
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 1
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0
  %10 = bitcast %union.anon* %9 to %struct.anon.2*
  %AH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10, i32 0, i32 1
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12 = getelementptr inbounds %struct.GPR, %struct.GPR* %11, i32 0, i32 3
  %13 = getelementptr inbounds %struct.Reg, %struct.Reg* %12, i32 0, i32 0
  %14 = bitcast %union.anon* %13 to %struct.anon.2*
  %BH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %14, i32 0, i32 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16 = getelementptr inbounds %struct.GPR, %struct.GPR* %15, i32 0, i32 5
  %17 = getelementptr inbounds %struct.Reg, %struct.Reg* %16, i32 0, i32 0
  %18 = bitcast %union.anon* %17 to %struct.anon.2*
  %CH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %18, i32 0, i32 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20 = getelementptr inbounds %struct.GPR, %struct.GPR* %19, i32 0, i32 7
  %21 = getelementptr inbounds %struct.Reg, %struct.Reg* %20, i32 0, i32 0
  %22 = bitcast %union.anon* %21 to %struct.anon.2*
  %DH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %22, i32 0, i32 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 1
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0
  %26 = bitcast %union.anon* %25 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %26, i32 0, i32 0
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28 = getelementptr inbounds %struct.GPR, %struct.GPR* %27, i32 0, i32 3
  %29 = getelementptr inbounds %struct.Reg, %struct.Reg* %28, i32 0, i32 0
  %30 = bitcast %union.anon* %29 to %struct.anon.2*
  %BL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %30, i32 0, i32 0
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32 = getelementptr inbounds %struct.GPR, %struct.GPR* %31, i32 0, i32 5
  %33 = getelementptr inbounds %struct.Reg, %struct.Reg* %32, i32 0, i32 0
  %34 = bitcast %union.anon* %33 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %34, i32 0, i32 0
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36 = getelementptr inbounds %struct.GPR, %struct.GPR* %35, i32 0, i32 7
  %37 = getelementptr inbounds %struct.Reg, %struct.Reg* %36, i32 0, i32 0
  %38 = bitcast %union.anon* %37 to %struct.anon.2*
  %DL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %38, i32 0, i32 0
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %40 = getelementptr inbounds %struct.GPR, %struct.GPR* %39, i32 0, i32 9
  %41 = getelementptr inbounds %struct.Reg, %struct.Reg* %40, i32 0, i32 0
  %42 = bitcast %union.anon* %41 to %struct.anon.2*
  %SIL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %42, i32 0, i32 0
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %44 = getelementptr inbounds %struct.GPR, %struct.GPR* %43, i32 0, i32 11
  %45 = getelementptr inbounds %struct.Reg, %struct.Reg* %44, i32 0, i32 0
  %46 = bitcast %union.anon* %45 to %struct.anon.2*
  %DIL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %46, i32 0, i32 0
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %48 = getelementptr inbounds %struct.GPR, %struct.GPR* %47, i32 0, i32 13
  %49 = getelementptr inbounds %struct.Reg, %struct.Reg* %48, i32 0, i32 0
  %50 = bitcast %union.anon* %49 to %struct.anon.2*
  %SPL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %50, i32 0, i32 0
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %52 = getelementptr inbounds %struct.GPR, %struct.GPR* %51, i32 0, i32 15
  %53 = getelementptr inbounds %struct.Reg, %struct.Reg* %52, i32 0, i32 0
  %54 = bitcast %union.anon* %53 to %struct.anon.2*
  %BPL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %54, i32 0, i32 0
  %55 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %56 = getelementptr inbounds %struct.GPR, %struct.GPR* %55, i32 0, i32 17
  %57 = getelementptr inbounds %struct.Reg, %struct.Reg* %56, i32 0, i32 0
  %58 = bitcast %union.anon* %57 to %struct.anon.2*
  %R8B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %58, i32 0, i32 0
  %59 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %60 = getelementptr inbounds %struct.GPR, %struct.GPR* %59, i32 0, i32 19
  %61 = getelementptr inbounds %struct.Reg, %struct.Reg* %60, i32 0, i32 0
  %62 = bitcast %union.anon* %61 to %struct.anon.2*
  %R9B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %62, i32 0, i32 0
  %63 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %64 = getelementptr inbounds %struct.GPR, %struct.GPR* %63, i32 0, i32 21
  %65 = getelementptr inbounds %struct.Reg, %struct.Reg* %64, i32 0, i32 0
  %66 = bitcast %union.anon* %65 to %struct.anon.2*
  %R10B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %66, i32 0, i32 0
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %68 = getelementptr inbounds %struct.GPR, %struct.GPR* %67, i32 0, i32 23
  %69 = getelementptr inbounds %struct.Reg, %struct.Reg* %68, i32 0, i32 0
  %70 = bitcast %union.anon* %69 to %struct.anon.2*
  %R11B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %70, i32 0, i32 0
  %71 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %72 = getelementptr inbounds %struct.GPR, %struct.GPR* %71, i32 0, i32 25
  %73 = getelementptr inbounds %struct.Reg, %struct.Reg* %72, i32 0, i32 0
  %74 = bitcast %union.anon* %73 to %struct.anon.2*
  %R12B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %74, i32 0, i32 0
  %75 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %76 = getelementptr inbounds %struct.GPR, %struct.GPR* %75, i32 0, i32 27
  %77 = getelementptr inbounds %struct.Reg, %struct.Reg* %76, i32 0, i32 0
  %78 = bitcast %union.anon* %77 to %struct.anon.2*
  %R13B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %78, i32 0, i32 0
  %79 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %80 = getelementptr inbounds %struct.GPR, %struct.GPR* %79, i32 0, i32 29
  %81 = getelementptr inbounds %struct.Reg, %struct.Reg* %80, i32 0, i32 0
  %82 = bitcast %union.anon* %81 to %struct.anon.2*
  %R14B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %82, i32 0, i32 0
  %83 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %84 = getelementptr inbounds %struct.GPR, %struct.GPR* %83, i32 0, i32 31
  %85 = getelementptr inbounds %struct.Reg, %struct.Reg* %84, i32 0, i32 0
  %86 = bitcast %union.anon* %85 to %struct.anon.2*
  %R15B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %86, i32 0, i32 0
  %87 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %88 = getelementptr inbounds %struct.GPR, %struct.GPR* %87, i32 0, i32 1
  %89 = getelementptr inbounds %struct.Reg, %struct.Reg* %88, i32 0, i32 0
  %AX = bitcast %union.anon* %89 to i16*
  %90 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %91 = getelementptr inbounds %struct.GPR, %struct.GPR* %90, i32 0, i32 3
  %92 = getelementptr inbounds %struct.Reg, %struct.Reg* %91, i32 0, i32 0
  %BX = bitcast %union.anon* %92 to i16*
  %93 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %94 = getelementptr inbounds %struct.GPR, %struct.GPR* %93, i32 0, i32 5
  %95 = getelementptr inbounds %struct.Reg, %struct.Reg* %94, i32 0, i32 0
  %CX = bitcast %union.anon* %95 to i16*
  %96 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %97 = getelementptr inbounds %struct.GPR, %struct.GPR* %96, i32 0, i32 7
  %98 = getelementptr inbounds %struct.Reg, %struct.Reg* %97, i32 0, i32 0
  %DX = bitcast %union.anon* %98 to i16*
  %99 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %100 = getelementptr inbounds %struct.GPR, %struct.GPR* %99, i32 0, i32 9
  %101 = getelementptr inbounds %struct.Reg, %struct.Reg* %100, i32 0, i32 0
  %SI = bitcast %union.anon* %101 to i16*
  %102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %103 = getelementptr inbounds %struct.GPR, %struct.GPR* %102, i32 0, i32 11
  %104 = getelementptr inbounds %struct.Reg, %struct.Reg* %103, i32 0, i32 0
  %DI = bitcast %union.anon* %104 to i16*
  %105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %106 = getelementptr inbounds %struct.GPR, %struct.GPR* %105, i32 0, i32 13
  %107 = getelementptr inbounds %struct.Reg, %struct.Reg* %106, i32 0, i32 0
  %SP = bitcast %union.anon* %107 to i16*
  %108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %109 = getelementptr inbounds %struct.GPR, %struct.GPR* %108, i32 0, i32 15
  %110 = getelementptr inbounds %struct.Reg, %struct.Reg* %109, i32 0, i32 0
  %BP = bitcast %union.anon* %110 to i16*
  %111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %112 = getelementptr inbounds %struct.GPR, %struct.GPR* %111, i32 0, i32 17
  %113 = getelementptr inbounds %struct.Reg, %struct.Reg* %112, i32 0, i32 0
  %R8W = bitcast %union.anon* %113 to i16*
  %114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %115 = getelementptr inbounds %struct.GPR, %struct.GPR* %114, i32 0, i32 19
  %116 = getelementptr inbounds %struct.Reg, %struct.Reg* %115, i32 0, i32 0
  %R9W = bitcast %union.anon* %116 to i16*
  %117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %118 = getelementptr inbounds %struct.GPR, %struct.GPR* %117, i32 0, i32 21
  %119 = getelementptr inbounds %struct.Reg, %struct.Reg* %118, i32 0, i32 0
  %R10W = bitcast %union.anon* %119 to i16*
  %120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %121 = getelementptr inbounds %struct.GPR, %struct.GPR* %120, i32 0, i32 23
  %122 = getelementptr inbounds %struct.Reg, %struct.Reg* %121, i32 0, i32 0
  %R11W = bitcast %union.anon* %122 to i16*
  %123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %124 = getelementptr inbounds %struct.GPR, %struct.GPR* %123, i32 0, i32 25
  %125 = getelementptr inbounds %struct.Reg, %struct.Reg* %124, i32 0, i32 0
  %R12W = bitcast %union.anon* %125 to i16*
  %126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %127 = getelementptr inbounds %struct.GPR, %struct.GPR* %126, i32 0, i32 27
  %128 = getelementptr inbounds %struct.Reg, %struct.Reg* %127, i32 0, i32 0
  %R13W = bitcast %union.anon* %128 to i16*
  %129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %130 = getelementptr inbounds %struct.GPR, %struct.GPR* %129, i32 0, i32 29
  %131 = getelementptr inbounds %struct.Reg, %struct.Reg* %130, i32 0, i32 0
  %R14W = bitcast %union.anon* %131 to i16*
  %132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %133 = getelementptr inbounds %struct.GPR, %struct.GPR* %132, i32 0, i32 31
  %134 = getelementptr inbounds %struct.Reg, %struct.Reg* %133, i32 0, i32 0
  %R15W = bitcast %union.anon* %134 to i16*
  %135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %136 = getelementptr inbounds %struct.GPR, %struct.GPR* %135, i32 0, i32 33
  %137 = getelementptr inbounds %struct.Reg, %struct.Reg* %136, i32 0, i32 0
  %IP = bitcast %union.anon* %137 to i16*
  %138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %139 = getelementptr inbounds %struct.GPR, %struct.GPR* %138, i32 0, i32 1
  %140 = getelementptr inbounds %struct.Reg, %struct.Reg* %139, i32 0, i32 0
  %EAX = bitcast %union.anon* %140 to i32*
  %141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %142 = getelementptr inbounds %struct.GPR, %struct.GPR* %141, i32 0, i32 3
  %143 = getelementptr inbounds %struct.Reg, %struct.Reg* %142, i32 0, i32 0
  %EBX = bitcast %union.anon* %143 to i32*
  %144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %145 = getelementptr inbounds %struct.GPR, %struct.GPR* %144, i32 0, i32 5
  %146 = getelementptr inbounds %struct.Reg, %struct.Reg* %145, i32 0, i32 0
  %ECX = bitcast %union.anon* %146 to i32*
  %147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %148 = getelementptr inbounds %struct.GPR, %struct.GPR* %147, i32 0, i32 7
  %149 = getelementptr inbounds %struct.Reg, %struct.Reg* %148, i32 0, i32 0
  %EDX = bitcast %union.anon* %149 to i32*
  %150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %151 = getelementptr inbounds %struct.GPR, %struct.GPR* %150, i32 0, i32 9
  %152 = getelementptr inbounds %struct.Reg, %struct.Reg* %151, i32 0, i32 0
  %ESI = bitcast %union.anon* %152 to i32*
  %153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %154 = getelementptr inbounds %struct.GPR, %struct.GPR* %153, i32 0, i32 11
  %155 = getelementptr inbounds %struct.Reg, %struct.Reg* %154, i32 0, i32 0
  %EDI = bitcast %union.anon* %155 to i32*
  %156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %157 = getelementptr inbounds %struct.GPR, %struct.GPR* %156, i32 0, i32 13
  %158 = getelementptr inbounds %struct.Reg, %struct.Reg* %157, i32 0, i32 0
  %ESP = bitcast %union.anon* %158 to i32*
  %159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %160 = getelementptr inbounds %struct.GPR, %struct.GPR* %159, i32 0, i32 15
  %161 = getelementptr inbounds %struct.Reg, %struct.Reg* %160, i32 0, i32 0
  %EBP = bitcast %union.anon* %161 to i32*
  %162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %163 = getelementptr inbounds %struct.GPR, %struct.GPR* %162, i32 0, i32 33
  %164 = getelementptr inbounds %struct.Reg, %struct.Reg* %163, i32 0, i32 0
  %EIP = bitcast %union.anon* %164 to i32*
  %165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %166 = getelementptr inbounds %struct.GPR, %struct.GPR* %165, i32 0, i32 17
  %167 = getelementptr inbounds %struct.Reg, %struct.Reg* %166, i32 0, i32 0
  %R8D = bitcast %union.anon* %167 to i32*
  %168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %169 = getelementptr inbounds %struct.GPR, %struct.GPR* %168, i32 0, i32 19
  %170 = getelementptr inbounds %struct.Reg, %struct.Reg* %169, i32 0, i32 0
  %R9D = bitcast %union.anon* %170 to i32*
  %171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %172 = getelementptr inbounds %struct.GPR, %struct.GPR* %171, i32 0, i32 21
  %173 = getelementptr inbounds %struct.Reg, %struct.Reg* %172, i32 0, i32 0
  %R10D = bitcast %union.anon* %173 to i32*
  %174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %175 = getelementptr inbounds %struct.GPR, %struct.GPR* %174, i32 0, i32 23
  %176 = getelementptr inbounds %struct.Reg, %struct.Reg* %175, i32 0, i32 0
  %R11D = bitcast %union.anon* %176 to i32*
  %177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %178 = getelementptr inbounds %struct.GPR, %struct.GPR* %177, i32 0, i32 25
  %179 = getelementptr inbounds %struct.Reg, %struct.Reg* %178, i32 0, i32 0
  %R12D = bitcast %union.anon* %179 to i32*
  %180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %181 = getelementptr inbounds %struct.GPR, %struct.GPR* %180, i32 0, i32 27
  %182 = getelementptr inbounds %struct.Reg, %struct.Reg* %181, i32 0, i32 0
  %R13D = bitcast %union.anon* %182 to i32*
  %183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %184 = getelementptr inbounds %struct.GPR, %struct.GPR* %183, i32 0, i32 29
  %185 = getelementptr inbounds %struct.Reg, %struct.Reg* %184, i32 0, i32 0
  %R14D = bitcast %union.anon* %185 to i32*
  %186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %187 = getelementptr inbounds %struct.GPR, %struct.GPR* %186, i32 0, i32 31
  %188 = getelementptr inbounds %struct.Reg, %struct.Reg* %187, i32 0, i32 0
  %R15D = bitcast %union.anon* %188 to i32*
  %189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %190 = getelementptr inbounds %struct.GPR, %struct.GPR* %189, i32 0, i32 1
  %191 = getelementptr inbounds %struct.Reg, %struct.Reg* %190, i32 0, i32 0
  %RAX = bitcast %union.anon* %191 to i64*
  %192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %193 = getelementptr inbounds %struct.GPR, %struct.GPR* %192, i32 0, i32 3
  %194 = getelementptr inbounds %struct.Reg, %struct.Reg* %193, i32 0, i32 0
  %RBX = bitcast %union.anon* %194 to i64*
  %195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %196 = getelementptr inbounds %struct.GPR, %struct.GPR* %195, i32 0, i32 5
  %197 = getelementptr inbounds %struct.Reg, %struct.Reg* %196, i32 0, i32 0
  %RCX = bitcast %union.anon* %197 to i64*
  %198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %199 = getelementptr inbounds %struct.GPR, %struct.GPR* %198, i32 0, i32 7
  %200 = getelementptr inbounds %struct.Reg, %struct.Reg* %199, i32 0, i32 0
  %RDX = bitcast %union.anon* %200 to i64*
  %201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %202 = getelementptr inbounds %struct.GPR, %struct.GPR* %201, i32 0, i32 9
  %203 = getelementptr inbounds %struct.Reg, %struct.Reg* %202, i32 0, i32 0
  %RSI = bitcast %union.anon* %203 to i64*
  %204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %205 = getelementptr inbounds %struct.GPR, %struct.GPR* %204, i32 0, i32 11
  %206 = getelementptr inbounds %struct.Reg, %struct.Reg* %205, i32 0, i32 0
  %RDI = bitcast %union.anon* %206 to i64*
  %207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %208 = getelementptr inbounds %struct.GPR, %struct.GPR* %207, i32 0, i32 13
  %209 = getelementptr inbounds %struct.Reg, %struct.Reg* %208, i32 0, i32 0
  %RSP = bitcast %union.anon* %209 to i64*
  %210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %211 = getelementptr inbounds %struct.GPR, %struct.GPR* %210, i32 0, i32 15
  %212 = getelementptr inbounds %struct.Reg, %struct.Reg* %211, i32 0, i32 0
  %RBP = bitcast %union.anon* %212 to i64*
  %213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %214 = getelementptr inbounds %struct.GPR, %struct.GPR* %213, i32 0, i32 17
  %215 = getelementptr inbounds %struct.Reg, %struct.Reg* %214, i32 0, i32 0
  %R8 = bitcast %union.anon* %215 to i64*
  %216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %217 = getelementptr inbounds %struct.GPR, %struct.GPR* %216, i32 0, i32 19
  %218 = getelementptr inbounds %struct.Reg, %struct.Reg* %217, i32 0, i32 0
  %R9 = bitcast %union.anon* %218 to i64*
  %219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %220 = getelementptr inbounds %struct.GPR, %struct.GPR* %219, i32 0, i32 21
  %221 = getelementptr inbounds %struct.Reg, %struct.Reg* %220, i32 0, i32 0
  %R10 = bitcast %union.anon* %221 to i64*
  %222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %223 = getelementptr inbounds %struct.GPR, %struct.GPR* %222, i32 0, i32 23
  %224 = getelementptr inbounds %struct.Reg, %struct.Reg* %223, i32 0, i32 0
  %R11 = bitcast %union.anon* %224 to i64*
  %225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %226 = getelementptr inbounds %struct.GPR, %struct.GPR* %225, i32 0, i32 25
  %227 = getelementptr inbounds %struct.Reg, %struct.Reg* %226, i32 0, i32 0
  %R12 = bitcast %union.anon* %227 to i64*
  %228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %229 = getelementptr inbounds %struct.GPR, %struct.GPR* %228, i32 0, i32 27
  %230 = getelementptr inbounds %struct.Reg, %struct.Reg* %229, i32 0, i32 0
  %R13 = bitcast %union.anon* %230 to i64*
  %231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %232 = getelementptr inbounds %struct.GPR, %struct.GPR* %231, i32 0, i32 29
  %233 = getelementptr inbounds %struct.Reg, %struct.Reg* %232, i32 0, i32 0
  %R14 = bitcast %union.anon* %233 to i64*
  %234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %235 = getelementptr inbounds %struct.GPR, %struct.GPR* %234, i32 0, i32 31
  %236 = getelementptr inbounds %struct.Reg, %struct.Reg* %235, i32 0, i32 0
  %R15 = bitcast %union.anon* %236 to i64*
  %237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %238 = getelementptr inbounds %struct.GPR, %struct.GPR* %237, i32 0, i32 33
  %239 = getelementptr inbounds %struct.Reg, %struct.Reg* %238, i32 0, i32 0
  %RIP = bitcast %union.anon* %239 to i64*
  %240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %241 = getelementptr inbounds %struct.Segments, %struct.Segments* %240, i32 0, i32 1
  %SS = bitcast %union.SegmentSelector* %241 to i16*
  %242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %243 = getelementptr inbounds %struct.Segments, %struct.Segments* %242, i32 0, i32 3
  %ES = bitcast %union.SegmentSelector* %243 to i16*
  %244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %245 = getelementptr inbounds %struct.Segments, %struct.Segments* %244, i32 0, i32 5
  %GS = bitcast %union.SegmentSelector* %245 to i16*
  %246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %247 = getelementptr inbounds %struct.Segments, %struct.Segments* %246, i32 0, i32 7
  %FS = bitcast %union.SegmentSelector* %247 to i16*
  %248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %249 = getelementptr inbounds %struct.Segments, %struct.Segments* %248, i32 0, i32 9
  %DS = bitcast %union.SegmentSelector* %249 to i16*
  %250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %251 = getelementptr inbounds %struct.Segments, %struct.Segments* %250, i32 0, i32 11
  %CS = bitcast %union.SegmentSelector* %251 to i16*
  %252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %253 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %252, i32 0, i32 5
  %254 = getelementptr inbounds %struct.Reg, %struct.Reg* %253, i32 0, i32 0
  %GS_BASE = bitcast %union.anon* %254 to i64*
  %255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %256 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %255, i32 0, i32 7
  %257 = getelementptr inbounds %struct.Reg, %struct.Reg* %256, i32 0, i32 0
  %FS_BASE = bitcast %union.anon* %257 to i64*
  %258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %259 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %258, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %259 to %"class.std::bitset"*
  %260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %261 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %260, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %261 to %"class.std::bitset"*
  %262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %263 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %262, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %263 to %"class.std::bitset"*
  %264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %265 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %264, i64 0, i64 3
  %YMM3 = bitcast %union.VectorReg* %265 to %"class.std::bitset"*
  %266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %267 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %266, i64 0, i64 4
  %YMM4 = bitcast %union.VectorReg* %267 to %"class.std::bitset"*
  %268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %269 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %268, i64 0, i64 5
  %YMM5 = bitcast %union.VectorReg* %269 to %"class.std::bitset"*
  %270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %271 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %270, i64 0, i64 6
  %YMM6 = bitcast %union.VectorReg* %271 to %"class.std::bitset"*
  %272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %273 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %272, i64 0, i64 7
  %YMM7 = bitcast %union.VectorReg* %273 to %"class.std::bitset"*
  %274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %275 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %274, i64 0, i64 8
  %YMM8 = bitcast %union.VectorReg* %275 to %"class.std::bitset"*
  %276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %277 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %276, i64 0, i64 9
  %YMM9 = bitcast %union.VectorReg* %277 to %"class.std::bitset"*
  %278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %279 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %278, i64 0, i64 10
  %YMM10 = bitcast %union.VectorReg* %279 to %"class.std::bitset"*
  %280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %281 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %280, i64 0, i64 11
  %YMM11 = bitcast %union.VectorReg* %281 to %"class.std::bitset"*
  %282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %283 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %282, i64 0, i64 12
  %YMM12 = bitcast %union.VectorReg* %283 to %"class.std::bitset"*
  %284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %285 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %284, i64 0, i64 13
  %YMM13 = bitcast %union.VectorReg* %285 to %"class.std::bitset"*
  %286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %287 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %286, i64 0, i64 14
  %YMM14 = bitcast %union.VectorReg* %287 to %"class.std::bitset"*
  %288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %289 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %288, i64 0, i64 15
  %YMM15 = bitcast %union.VectorReg* %289 to %"class.std::bitset"*
  %290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %291 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %290, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %291 to %union.vec128_t*
  %292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %293 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %292, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %293 to %union.vec128_t*
  %294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %295 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %294, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %295 to %union.vec128_t*
  %296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %297 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %296, i64 0, i64 3
  %XMM3 = bitcast %union.VectorReg* %297 to %union.vec128_t*
  %298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %299 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %298, i64 0, i64 4
  %XMM4 = bitcast %union.VectorReg* %299 to %union.vec128_t*
  %300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %301 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %300, i64 0, i64 5
  %XMM5 = bitcast %union.VectorReg* %301 to %union.vec128_t*
  %302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %303 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %302, i64 0, i64 6
  %XMM6 = bitcast %union.VectorReg* %303 to %union.vec128_t*
  %304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %305 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %304, i64 0, i64 7
  %XMM7 = bitcast %union.VectorReg* %305 to %union.vec128_t*
  %306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %307 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %306, i64 0, i64 8
  %XMM8 = bitcast %union.VectorReg* %307 to %union.vec128_t*
  %308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %309 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %308, i64 0, i64 9
  %XMM9 = bitcast %union.VectorReg* %309 to %union.vec128_t*
  %310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %311 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %310, i64 0, i64 10
  %XMM10 = bitcast %union.VectorReg* %311 to %union.vec128_t*
  %312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %313 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %312, i64 0, i64 11
  %XMM11 = bitcast %union.VectorReg* %313 to %union.vec128_t*
  %314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %315 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %314, i64 0, i64 12
  %XMM12 = bitcast %union.VectorReg* %315 to %union.vec128_t*
  %316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %317 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %316, i64 0, i64 13
  %XMM13 = bitcast %union.VectorReg* %317 to %union.vec128_t*
  %318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %319 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %318, i64 0, i64 14
  %XMM14 = bitcast %union.VectorReg* %319 to %union.vec128_t*
  %320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %321 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %320, i64 0, i64 15
  %XMM15 = bitcast %union.VectorReg* %321 to %union.vec128_t*
  %322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %323 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %322, i32 0, i32 0
  %324 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %323, i64 0, i64 0
  %ST0 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %324, i32 0, i32 1
  %325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %326 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %325, i32 0, i32 0
  %327 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %326, i64 0, i64 1
  %ST1 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %327, i32 0, i32 1
  %328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %329 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %328, i32 0, i32 0
  %330 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %329, i64 0, i64 2
  %ST2 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %330, i32 0, i32 1
  %331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %332 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %331, i32 0, i32 0
  %333 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %332, i64 0, i64 3
  %ST3 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %333, i32 0, i32 1
  %334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %335 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %334, i32 0, i32 0
  %336 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %335, i64 0, i64 4
  %ST4 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %336, i32 0, i32 1
  %337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %338 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %337, i32 0, i32 0
  %339 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %338, i64 0, i64 5
  %ST5 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %339, i32 0, i32 1
  %340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %341 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %340, i32 0, i32 0
  %342 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %341, i64 0, i64 6
  %ST6 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %342, i32 0, i32 1
  %343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %344 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %343, i32 0, i32 0
  %345 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %344, i64 0, i64 7
  %ST7 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %345, i32 0, i32 1
  %346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %347 = getelementptr inbounds %struct.MMX, %struct.MMX* %346, i32 0, i32 0
  %348 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %347, i64 0, i64 0
  %349 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %348, i32 0, i32 1
  %350 = bitcast %union.vec64_t* %349 to %struct.uint64v1_t*
  %351 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %350, i32 0, i32 0
  %MM0 = getelementptr inbounds [1 x i64], [1 x i64]* %351, i64 0, i64 0
  %352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %353 = getelementptr inbounds %struct.MMX, %struct.MMX* %352, i32 0, i32 0
  %354 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %353, i64 0, i64 1
  %355 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %354, i32 0, i32 1
  %356 = bitcast %union.vec64_t* %355 to %struct.uint64v1_t*
  %357 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %356, i32 0, i32 0
  %MM1 = getelementptr inbounds [1 x i64], [1 x i64]* %357, i64 0, i64 0
  %358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %359 = getelementptr inbounds %struct.MMX, %struct.MMX* %358, i32 0, i32 0
  %360 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %359, i64 0, i64 2
  %361 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %360, i32 0, i32 1
  %362 = bitcast %union.vec64_t* %361 to %struct.uint64v1_t*
  %363 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %362, i32 0, i32 0
  %MM2 = getelementptr inbounds [1 x i64], [1 x i64]* %363, i64 0, i64 0
  %364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %365 = getelementptr inbounds %struct.MMX, %struct.MMX* %364, i32 0, i32 0
  %366 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %365, i64 0, i64 3
  %367 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %366, i32 0, i32 1
  %368 = bitcast %union.vec64_t* %367 to %struct.uint64v1_t*
  %369 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %368, i32 0, i32 0
  %MM3 = getelementptr inbounds [1 x i64], [1 x i64]* %369, i64 0, i64 0
  %370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %371 = getelementptr inbounds %struct.MMX, %struct.MMX* %370, i32 0, i32 0
  %372 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %371, i64 0, i64 4
  %373 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %372, i32 0, i32 1
  %374 = bitcast %union.vec64_t* %373 to %struct.uint64v1_t*
  %375 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %374, i32 0, i32 0
  %MM4 = getelementptr inbounds [1 x i64], [1 x i64]* %375, i64 0, i64 0
  %376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %377 = getelementptr inbounds %struct.MMX, %struct.MMX* %376, i32 0, i32 0
  %378 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %377, i64 0, i64 5
  %379 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %378, i32 0, i32 1
  %380 = bitcast %union.vec64_t* %379 to %struct.uint64v1_t*
  %381 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %380, i32 0, i32 0
  %MM5 = getelementptr inbounds [1 x i64], [1 x i64]* %381, i64 0, i64 0
  %382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %383 = getelementptr inbounds %struct.MMX, %struct.MMX* %382, i32 0, i32 0
  %384 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %383, i64 0, i64 6
  %385 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %384, i32 0, i32 1
  %386 = bitcast %union.vec64_t* %385 to %struct.uint64v1_t*
  %387 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %386, i32 0, i32 0
  %MM6 = getelementptr inbounds [1 x i64], [1 x i64]* %387, i64 0, i64 0
  %388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %389 = getelementptr inbounds %struct.MMX, %struct.MMX* %388, i32 0, i32 0
  %390 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %389, i64 0, i64 7
  %391 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %390, i32 0, i32 1
  %392 = bitcast %union.vec64_t* %391 to %struct.uint64v1_t*
  %393 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %392, i32 0, i32 0
  %MM7 = getelementptr inbounds [1 x i64], [1 x i64]* %393, i64 0, i64 0
  %394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %394, i32 0, i32 5
  %395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %395, i32 0, i32 1
  %396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %396, i32 0, i32 11
  %397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %397, i32 0, i32 13
  %398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %398, i32 0, i32 3
  %399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %399, i32 0, i32 9
  %400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %400, i32 0, i32 7
  store i64* @DR0, i64** %_DR0, align 8
  store i64* @DR1, i64** %_DR1, align 8
  store i64* @DR2, i64** %_DR2, align 8
  store i64* @DR3, i64** %_DR3, align 8
  store i64* @DR4, i64** %_DR4, align 8
  store i64* @DR5, i64** %_DR5, align 8
  store i64* @DR6, i64** %_DR6, align 8
  store i64* @DR7, i64** %_DR7, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8, align 8
  %401 = bitcast %"class.std::bitset"* %YMM0 to double*
  %402 = load double, double* %401
  %403 = load i64, i64* %RSP
  %404 = load %struct.Memory*, %struct.Memory** %MEMORY
  %405 = inttoptr i64 %403 to i64*
  %406 = load i64, i64* %405
  store i64 %406, i64* %PC
  %407 = add i64 %403, 8
  store i64 %407, i64* %RSP
  %408 = call double @sin(double %402)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0
  %409 = bitcast %"class.std::bitset"* %YMM0 to double*
  store double %408, double* %409
  %410 = load %struct.Memory*, %struct.Memory** %MEMORY
  ret %struct.Memory* %410
}

; Function Attrs: alwaysinline inlinehint
define %struct.Memory* @ext_602110_cos(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #16 {
  %state = alloca %struct.State*, align 8
  %curr_pc = alloca i64, align 8
  %memory = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  %SS_BASE = alloca i64, align 8
  %ES_BASE = alloca i64, align 8
  %DS_BASE = alloca i64, align 8
  %CS_BASE = alloca i64, align 8
  %STATE = alloca %struct.State*, align 8
  %MEMORY = alloca %struct.Memory*, align 8
  %_DR0 = alloca i64*, align 8
  %_DR1 = alloca i64*, align 8
  %_DR2 = alloca i64*, align 8
  %_DR3 = alloca i64*, align 8
  %_DR4 = alloca i64*, align 8
  %_DR5 = alloca i64*, align 8
  %_DR6 = alloca i64*, align 8
  %_DR7 = alloca i64*, align 8
  %CR0 = alloca i64*, align 8
  %CR1 = alloca i64*, align 8
  %CR2 = alloca i64*, align 8
  %CR3 = alloca i64*, align 8
  %CR4 = alloca i64*, align 8
  %CR8 = alloca i64*, align 8
  store %struct.State* %0, %struct.State** %state, align 8
  store i64 %1, i64* %curr_pc, align 8
  store %struct.Memory* %2, %struct.Memory** %memory, align 8
  store i8 0, i8* %BRANCH_TAKEN, align 1
  store i64 0, i64* %SS_BASE, align 8
  store i64 0, i64* %ES_BASE, align 8
  store i64 0, i64* %DS_BASE, align 8
  store i64 0, i64* %CS_BASE, align 8
  store %struct.State* %0, %struct.State** %STATE, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0
  %PC = bitcast %union.anon* %6 to i64*
  store i64 %1, i64* %PC, align 8
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 1
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0
  %10 = bitcast %union.anon* %9 to %struct.anon.2*
  %AH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10, i32 0, i32 1
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12 = getelementptr inbounds %struct.GPR, %struct.GPR* %11, i32 0, i32 3
  %13 = getelementptr inbounds %struct.Reg, %struct.Reg* %12, i32 0, i32 0
  %14 = bitcast %union.anon* %13 to %struct.anon.2*
  %BH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %14, i32 0, i32 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16 = getelementptr inbounds %struct.GPR, %struct.GPR* %15, i32 0, i32 5
  %17 = getelementptr inbounds %struct.Reg, %struct.Reg* %16, i32 0, i32 0
  %18 = bitcast %union.anon* %17 to %struct.anon.2*
  %CH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %18, i32 0, i32 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20 = getelementptr inbounds %struct.GPR, %struct.GPR* %19, i32 0, i32 7
  %21 = getelementptr inbounds %struct.Reg, %struct.Reg* %20, i32 0, i32 0
  %22 = bitcast %union.anon* %21 to %struct.anon.2*
  %DH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %22, i32 0, i32 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 1
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0
  %26 = bitcast %union.anon* %25 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %26, i32 0, i32 0
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28 = getelementptr inbounds %struct.GPR, %struct.GPR* %27, i32 0, i32 3
  %29 = getelementptr inbounds %struct.Reg, %struct.Reg* %28, i32 0, i32 0
  %30 = bitcast %union.anon* %29 to %struct.anon.2*
  %BL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %30, i32 0, i32 0
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32 = getelementptr inbounds %struct.GPR, %struct.GPR* %31, i32 0, i32 5
  %33 = getelementptr inbounds %struct.Reg, %struct.Reg* %32, i32 0, i32 0
  %34 = bitcast %union.anon* %33 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %34, i32 0, i32 0
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36 = getelementptr inbounds %struct.GPR, %struct.GPR* %35, i32 0, i32 7
  %37 = getelementptr inbounds %struct.Reg, %struct.Reg* %36, i32 0, i32 0
  %38 = bitcast %union.anon* %37 to %struct.anon.2*
  %DL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %38, i32 0, i32 0
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %40 = getelementptr inbounds %struct.GPR, %struct.GPR* %39, i32 0, i32 9
  %41 = getelementptr inbounds %struct.Reg, %struct.Reg* %40, i32 0, i32 0
  %42 = bitcast %union.anon* %41 to %struct.anon.2*
  %SIL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %42, i32 0, i32 0
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %44 = getelementptr inbounds %struct.GPR, %struct.GPR* %43, i32 0, i32 11
  %45 = getelementptr inbounds %struct.Reg, %struct.Reg* %44, i32 0, i32 0
  %46 = bitcast %union.anon* %45 to %struct.anon.2*
  %DIL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %46, i32 0, i32 0
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %48 = getelementptr inbounds %struct.GPR, %struct.GPR* %47, i32 0, i32 13
  %49 = getelementptr inbounds %struct.Reg, %struct.Reg* %48, i32 0, i32 0
  %50 = bitcast %union.anon* %49 to %struct.anon.2*
  %SPL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %50, i32 0, i32 0
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %52 = getelementptr inbounds %struct.GPR, %struct.GPR* %51, i32 0, i32 15
  %53 = getelementptr inbounds %struct.Reg, %struct.Reg* %52, i32 0, i32 0
  %54 = bitcast %union.anon* %53 to %struct.anon.2*
  %BPL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %54, i32 0, i32 0
  %55 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %56 = getelementptr inbounds %struct.GPR, %struct.GPR* %55, i32 0, i32 17
  %57 = getelementptr inbounds %struct.Reg, %struct.Reg* %56, i32 0, i32 0
  %58 = bitcast %union.anon* %57 to %struct.anon.2*
  %R8B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %58, i32 0, i32 0
  %59 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %60 = getelementptr inbounds %struct.GPR, %struct.GPR* %59, i32 0, i32 19
  %61 = getelementptr inbounds %struct.Reg, %struct.Reg* %60, i32 0, i32 0
  %62 = bitcast %union.anon* %61 to %struct.anon.2*
  %R9B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %62, i32 0, i32 0
  %63 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %64 = getelementptr inbounds %struct.GPR, %struct.GPR* %63, i32 0, i32 21
  %65 = getelementptr inbounds %struct.Reg, %struct.Reg* %64, i32 0, i32 0
  %66 = bitcast %union.anon* %65 to %struct.anon.2*
  %R10B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %66, i32 0, i32 0
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %68 = getelementptr inbounds %struct.GPR, %struct.GPR* %67, i32 0, i32 23
  %69 = getelementptr inbounds %struct.Reg, %struct.Reg* %68, i32 0, i32 0
  %70 = bitcast %union.anon* %69 to %struct.anon.2*
  %R11B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %70, i32 0, i32 0
  %71 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %72 = getelementptr inbounds %struct.GPR, %struct.GPR* %71, i32 0, i32 25
  %73 = getelementptr inbounds %struct.Reg, %struct.Reg* %72, i32 0, i32 0
  %74 = bitcast %union.anon* %73 to %struct.anon.2*
  %R12B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %74, i32 0, i32 0
  %75 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %76 = getelementptr inbounds %struct.GPR, %struct.GPR* %75, i32 0, i32 27
  %77 = getelementptr inbounds %struct.Reg, %struct.Reg* %76, i32 0, i32 0
  %78 = bitcast %union.anon* %77 to %struct.anon.2*
  %R13B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %78, i32 0, i32 0
  %79 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %80 = getelementptr inbounds %struct.GPR, %struct.GPR* %79, i32 0, i32 29
  %81 = getelementptr inbounds %struct.Reg, %struct.Reg* %80, i32 0, i32 0
  %82 = bitcast %union.anon* %81 to %struct.anon.2*
  %R14B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %82, i32 0, i32 0
  %83 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %84 = getelementptr inbounds %struct.GPR, %struct.GPR* %83, i32 0, i32 31
  %85 = getelementptr inbounds %struct.Reg, %struct.Reg* %84, i32 0, i32 0
  %86 = bitcast %union.anon* %85 to %struct.anon.2*
  %R15B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %86, i32 0, i32 0
  %87 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %88 = getelementptr inbounds %struct.GPR, %struct.GPR* %87, i32 0, i32 1
  %89 = getelementptr inbounds %struct.Reg, %struct.Reg* %88, i32 0, i32 0
  %AX = bitcast %union.anon* %89 to i16*
  %90 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %91 = getelementptr inbounds %struct.GPR, %struct.GPR* %90, i32 0, i32 3
  %92 = getelementptr inbounds %struct.Reg, %struct.Reg* %91, i32 0, i32 0
  %BX = bitcast %union.anon* %92 to i16*
  %93 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %94 = getelementptr inbounds %struct.GPR, %struct.GPR* %93, i32 0, i32 5
  %95 = getelementptr inbounds %struct.Reg, %struct.Reg* %94, i32 0, i32 0
  %CX = bitcast %union.anon* %95 to i16*
  %96 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %97 = getelementptr inbounds %struct.GPR, %struct.GPR* %96, i32 0, i32 7
  %98 = getelementptr inbounds %struct.Reg, %struct.Reg* %97, i32 0, i32 0
  %DX = bitcast %union.anon* %98 to i16*
  %99 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %100 = getelementptr inbounds %struct.GPR, %struct.GPR* %99, i32 0, i32 9
  %101 = getelementptr inbounds %struct.Reg, %struct.Reg* %100, i32 0, i32 0
  %SI = bitcast %union.anon* %101 to i16*
  %102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %103 = getelementptr inbounds %struct.GPR, %struct.GPR* %102, i32 0, i32 11
  %104 = getelementptr inbounds %struct.Reg, %struct.Reg* %103, i32 0, i32 0
  %DI = bitcast %union.anon* %104 to i16*
  %105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %106 = getelementptr inbounds %struct.GPR, %struct.GPR* %105, i32 0, i32 13
  %107 = getelementptr inbounds %struct.Reg, %struct.Reg* %106, i32 0, i32 0
  %SP = bitcast %union.anon* %107 to i16*
  %108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %109 = getelementptr inbounds %struct.GPR, %struct.GPR* %108, i32 0, i32 15
  %110 = getelementptr inbounds %struct.Reg, %struct.Reg* %109, i32 0, i32 0
  %BP = bitcast %union.anon* %110 to i16*
  %111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %112 = getelementptr inbounds %struct.GPR, %struct.GPR* %111, i32 0, i32 17
  %113 = getelementptr inbounds %struct.Reg, %struct.Reg* %112, i32 0, i32 0
  %R8W = bitcast %union.anon* %113 to i16*
  %114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %115 = getelementptr inbounds %struct.GPR, %struct.GPR* %114, i32 0, i32 19
  %116 = getelementptr inbounds %struct.Reg, %struct.Reg* %115, i32 0, i32 0
  %R9W = bitcast %union.anon* %116 to i16*
  %117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %118 = getelementptr inbounds %struct.GPR, %struct.GPR* %117, i32 0, i32 21
  %119 = getelementptr inbounds %struct.Reg, %struct.Reg* %118, i32 0, i32 0
  %R10W = bitcast %union.anon* %119 to i16*
  %120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %121 = getelementptr inbounds %struct.GPR, %struct.GPR* %120, i32 0, i32 23
  %122 = getelementptr inbounds %struct.Reg, %struct.Reg* %121, i32 0, i32 0
  %R11W = bitcast %union.anon* %122 to i16*
  %123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %124 = getelementptr inbounds %struct.GPR, %struct.GPR* %123, i32 0, i32 25
  %125 = getelementptr inbounds %struct.Reg, %struct.Reg* %124, i32 0, i32 0
  %R12W = bitcast %union.anon* %125 to i16*
  %126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %127 = getelementptr inbounds %struct.GPR, %struct.GPR* %126, i32 0, i32 27
  %128 = getelementptr inbounds %struct.Reg, %struct.Reg* %127, i32 0, i32 0
  %R13W = bitcast %union.anon* %128 to i16*
  %129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %130 = getelementptr inbounds %struct.GPR, %struct.GPR* %129, i32 0, i32 29
  %131 = getelementptr inbounds %struct.Reg, %struct.Reg* %130, i32 0, i32 0
  %R14W = bitcast %union.anon* %131 to i16*
  %132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %133 = getelementptr inbounds %struct.GPR, %struct.GPR* %132, i32 0, i32 31
  %134 = getelementptr inbounds %struct.Reg, %struct.Reg* %133, i32 0, i32 0
  %R15W = bitcast %union.anon* %134 to i16*
  %135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %136 = getelementptr inbounds %struct.GPR, %struct.GPR* %135, i32 0, i32 33
  %137 = getelementptr inbounds %struct.Reg, %struct.Reg* %136, i32 0, i32 0
  %IP = bitcast %union.anon* %137 to i16*
  %138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %139 = getelementptr inbounds %struct.GPR, %struct.GPR* %138, i32 0, i32 1
  %140 = getelementptr inbounds %struct.Reg, %struct.Reg* %139, i32 0, i32 0
  %EAX = bitcast %union.anon* %140 to i32*
  %141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %142 = getelementptr inbounds %struct.GPR, %struct.GPR* %141, i32 0, i32 3
  %143 = getelementptr inbounds %struct.Reg, %struct.Reg* %142, i32 0, i32 0
  %EBX = bitcast %union.anon* %143 to i32*
  %144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %145 = getelementptr inbounds %struct.GPR, %struct.GPR* %144, i32 0, i32 5
  %146 = getelementptr inbounds %struct.Reg, %struct.Reg* %145, i32 0, i32 0
  %ECX = bitcast %union.anon* %146 to i32*
  %147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %148 = getelementptr inbounds %struct.GPR, %struct.GPR* %147, i32 0, i32 7
  %149 = getelementptr inbounds %struct.Reg, %struct.Reg* %148, i32 0, i32 0
  %EDX = bitcast %union.anon* %149 to i32*
  %150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %151 = getelementptr inbounds %struct.GPR, %struct.GPR* %150, i32 0, i32 9
  %152 = getelementptr inbounds %struct.Reg, %struct.Reg* %151, i32 0, i32 0
  %ESI = bitcast %union.anon* %152 to i32*
  %153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %154 = getelementptr inbounds %struct.GPR, %struct.GPR* %153, i32 0, i32 11
  %155 = getelementptr inbounds %struct.Reg, %struct.Reg* %154, i32 0, i32 0
  %EDI = bitcast %union.anon* %155 to i32*
  %156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %157 = getelementptr inbounds %struct.GPR, %struct.GPR* %156, i32 0, i32 13
  %158 = getelementptr inbounds %struct.Reg, %struct.Reg* %157, i32 0, i32 0
  %ESP = bitcast %union.anon* %158 to i32*
  %159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %160 = getelementptr inbounds %struct.GPR, %struct.GPR* %159, i32 0, i32 15
  %161 = getelementptr inbounds %struct.Reg, %struct.Reg* %160, i32 0, i32 0
  %EBP = bitcast %union.anon* %161 to i32*
  %162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %163 = getelementptr inbounds %struct.GPR, %struct.GPR* %162, i32 0, i32 33
  %164 = getelementptr inbounds %struct.Reg, %struct.Reg* %163, i32 0, i32 0
  %EIP = bitcast %union.anon* %164 to i32*
  %165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %166 = getelementptr inbounds %struct.GPR, %struct.GPR* %165, i32 0, i32 17
  %167 = getelementptr inbounds %struct.Reg, %struct.Reg* %166, i32 0, i32 0
  %R8D = bitcast %union.anon* %167 to i32*
  %168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %169 = getelementptr inbounds %struct.GPR, %struct.GPR* %168, i32 0, i32 19
  %170 = getelementptr inbounds %struct.Reg, %struct.Reg* %169, i32 0, i32 0
  %R9D = bitcast %union.anon* %170 to i32*
  %171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %172 = getelementptr inbounds %struct.GPR, %struct.GPR* %171, i32 0, i32 21
  %173 = getelementptr inbounds %struct.Reg, %struct.Reg* %172, i32 0, i32 0
  %R10D = bitcast %union.anon* %173 to i32*
  %174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %175 = getelementptr inbounds %struct.GPR, %struct.GPR* %174, i32 0, i32 23
  %176 = getelementptr inbounds %struct.Reg, %struct.Reg* %175, i32 0, i32 0
  %R11D = bitcast %union.anon* %176 to i32*
  %177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %178 = getelementptr inbounds %struct.GPR, %struct.GPR* %177, i32 0, i32 25
  %179 = getelementptr inbounds %struct.Reg, %struct.Reg* %178, i32 0, i32 0
  %R12D = bitcast %union.anon* %179 to i32*
  %180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %181 = getelementptr inbounds %struct.GPR, %struct.GPR* %180, i32 0, i32 27
  %182 = getelementptr inbounds %struct.Reg, %struct.Reg* %181, i32 0, i32 0
  %R13D = bitcast %union.anon* %182 to i32*
  %183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %184 = getelementptr inbounds %struct.GPR, %struct.GPR* %183, i32 0, i32 29
  %185 = getelementptr inbounds %struct.Reg, %struct.Reg* %184, i32 0, i32 0
  %R14D = bitcast %union.anon* %185 to i32*
  %186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %187 = getelementptr inbounds %struct.GPR, %struct.GPR* %186, i32 0, i32 31
  %188 = getelementptr inbounds %struct.Reg, %struct.Reg* %187, i32 0, i32 0
  %R15D = bitcast %union.anon* %188 to i32*
  %189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %190 = getelementptr inbounds %struct.GPR, %struct.GPR* %189, i32 0, i32 1
  %191 = getelementptr inbounds %struct.Reg, %struct.Reg* %190, i32 0, i32 0
  %RAX = bitcast %union.anon* %191 to i64*
  %192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %193 = getelementptr inbounds %struct.GPR, %struct.GPR* %192, i32 0, i32 3
  %194 = getelementptr inbounds %struct.Reg, %struct.Reg* %193, i32 0, i32 0
  %RBX = bitcast %union.anon* %194 to i64*
  %195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %196 = getelementptr inbounds %struct.GPR, %struct.GPR* %195, i32 0, i32 5
  %197 = getelementptr inbounds %struct.Reg, %struct.Reg* %196, i32 0, i32 0
  %RCX = bitcast %union.anon* %197 to i64*
  %198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %199 = getelementptr inbounds %struct.GPR, %struct.GPR* %198, i32 0, i32 7
  %200 = getelementptr inbounds %struct.Reg, %struct.Reg* %199, i32 0, i32 0
  %RDX = bitcast %union.anon* %200 to i64*
  %201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %202 = getelementptr inbounds %struct.GPR, %struct.GPR* %201, i32 0, i32 9
  %203 = getelementptr inbounds %struct.Reg, %struct.Reg* %202, i32 0, i32 0
  %RSI = bitcast %union.anon* %203 to i64*
  %204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %205 = getelementptr inbounds %struct.GPR, %struct.GPR* %204, i32 0, i32 11
  %206 = getelementptr inbounds %struct.Reg, %struct.Reg* %205, i32 0, i32 0
  %RDI = bitcast %union.anon* %206 to i64*
  %207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %208 = getelementptr inbounds %struct.GPR, %struct.GPR* %207, i32 0, i32 13
  %209 = getelementptr inbounds %struct.Reg, %struct.Reg* %208, i32 0, i32 0
  %RSP = bitcast %union.anon* %209 to i64*
  %210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %211 = getelementptr inbounds %struct.GPR, %struct.GPR* %210, i32 0, i32 15
  %212 = getelementptr inbounds %struct.Reg, %struct.Reg* %211, i32 0, i32 0
  %RBP = bitcast %union.anon* %212 to i64*
  %213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %214 = getelementptr inbounds %struct.GPR, %struct.GPR* %213, i32 0, i32 17
  %215 = getelementptr inbounds %struct.Reg, %struct.Reg* %214, i32 0, i32 0
  %R8 = bitcast %union.anon* %215 to i64*
  %216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %217 = getelementptr inbounds %struct.GPR, %struct.GPR* %216, i32 0, i32 19
  %218 = getelementptr inbounds %struct.Reg, %struct.Reg* %217, i32 0, i32 0
  %R9 = bitcast %union.anon* %218 to i64*
  %219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %220 = getelementptr inbounds %struct.GPR, %struct.GPR* %219, i32 0, i32 21
  %221 = getelementptr inbounds %struct.Reg, %struct.Reg* %220, i32 0, i32 0
  %R10 = bitcast %union.anon* %221 to i64*
  %222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %223 = getelementptr inbounds %struct.GPR, %struct.GPR* %222, i32 0, i32 23
  %224 = getelementptr inbounds %struct.Reg, %struct.Reg* %223, i32 0, i32 0
  %R11 = bitcast %union.anon* %224 to i64*
  %225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %226 = getelementptr inbounds %struct.GPR, %struct.GPR* %225, i32 0, i32 25
  %227 = getelementptr inbounds %struct.Reg, %struct.Reg* %226, i32 0, i32 0
  %R12 = bitcast %union.anon* %227 to i64*
  %228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %229 = getelementptr inbounds %struct.GPR, %struct.GPR* %228, i32 0, i32 27
  %230 = getelementptr inbounds %struct.Reg, %struct.Reg* %229, i32 0, i32 0
  %R13 = bitcast %union.anon* %230 to i64*
  %231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %232 = getelementptr inbounds %struct.GPR, %struct.GPR* %231, i32 0, i32 29
  %233 = getelementptr inbounds %struct.Reg, %struct.Reg* %232, i32 0, i32 0
  %R14 = bitcast %union.anon* %233 to i64*
  %234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %235 = getelementptr inbounds %struct.GPR, %struct.GPR* %234, i32 0, i32 31
  %236 = getelementptr inbounds %struct.Reg, %struct.Reg* %235, i32 0, i32 0
  %R15 = bitcast %union.anon* %236 to i64*
  %237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %238 = getelementptr inbounds %struct.GPR, %struct.GPR* %237, i32 0, i32 33
  %239 = getelementptr inbounds %struct.Reg, %struct.Reg* %238, i32 0, i32 0
  %RIP = bitcast %union.anon* %239 to i64*
  %240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %241 = getelementptr inbounds %struct.Segments, %struct.Segments* %240, i32 0, i32 1
  %SS = bitcast %union.SegmentSelector* %241 to i16*
  %242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %243 = getelementptr inbounds %struct.Segments, %struct.Segments* %242, i32 0, i32 3
  %ES = bitcast %union.SegmentSelector* %243 to i16*
  %244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %245 = getelementptr inbounds %struct.Segments, %struct.Segments* %244, i32 0, i32 5
  %GS = bitcast %union.SegmentSelector* %245 to i16*
  %246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %247 = getelementptr inbounds %struct.Segments, %struct.Segments* %246, i32 0, i32 7
  %FS = bitcast %union.SegmentSelector* %247 to i16*
  %248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %249 = getelementptr inbounds %struct.Segments, %struct.Segments* %248, i32 0, i32 9
  %DS = bitcast %union.SegmentSelector* %249 to i16*
  %250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %251 = getelementptr inbounds %struct.Segments, %struct.Segments* %250, i32 0, i32 11
  %CS = bitcast %union.SegmentSelector* %251 to i16*
  %252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %253 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %252, i32 0, i32 5
  %254 = getelementptr inbounds %struct.Reg, %struct.Reg* %253, i32 0, i32 0
  %GS_BASE = bitcast %union.anon* %254 to i64*
  %255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %256 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %255, i32 0, i32 7
  %257 = getelementptr inbounds %struct.Reg, %struct.Reg* %256, i32 0, i32 0
  %FS_BASE = bitcast %union.anon* %257 to i64*
  %258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %259 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %258, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %259 to %"class.std::bitset"*
  %260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %261 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %260, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %261 to %"class.std::bitset"*
  %262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %263 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %262, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %263 to %"class.std::bitset"*
  %264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %265 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %264, i64 0, i64 3
  %YMM3 = bitcast %union.VectorReg* %265 to %"class.std::bitset"*
  %266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %267 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %266, i64 0, i64 4
  %YMM4 = bitcast %union.VectorReg* %267 to %"class.std::bitset"*
  %268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %269 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %268, i64 0, i64 5
  %YMM5 = bitcast %union.VectorReg* %269 to %"class.std::bitset"*
  %270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %271 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %270, i64 0, i64 6
  %YMM6 = bitcast %union.VectorReg* %271 to %"class.std::bitset"*
  %272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %273 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %272, i64 0, i64 7
  %YMM7 = bitcast %union.VectorReg* %273 to %"class.std::bitset"*
  %274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %275 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %274, i64 0, i64 8
  %YMM8 = bitcast %union.VectorReg* %275 to %"class.std::bitset"*
  %276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %277 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %276, i64 0, i64 9
  %YMM9 = bitcast %union.VectorReg* %277 to %"class.std::bitset"*
  %278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %279 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %278, i64 0, i64 10
  %YMM10 = bitcast %union.VectorReg* %279 to %"class.std::bitset"*
  %280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %281 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %280, i64 0, i64 11
  %YMM11 = bitcast %union.VectorReg* %281 to %"class.std::bitset"*
  %282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %283 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %282, i64 0, i64 12
  %YMM12 = bitcast %union.VectorReg* %283 to %"class.std::bitset"*
  %284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %285 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %284, i64 0, i64 13
  %YMM13 = bitcast %union.VectorReg* %285 to %"class.std::bitset"*
  %286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %287 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %286, i64 0, i64 14
  %YMM14 = bitcast %union.VectorReg* %287 to %"class.std::bitset"*
  %288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %289 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %288, i64 0, i64 15
  %YMM15 = bitcast %union.VectorReg* %289 to %"class.std::bitset"*
  %290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %291 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %290, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %291 to %union.vec128_t*
  %292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %293 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %292, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %293 to %union.vec128_t*
  %294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %295 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %294, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %295 to %union.vec128_t*
  %296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %297 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %296, i64 0, i64 3
  %XMM3 = bitcast %union.VectorReg* %297 to %union.vec128_t*
  %298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %299 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %298, i64 0, i64 4
  %XMM4 = bitcast %union.VectorReg* %299 to %union.vec128_t*
  %300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %301 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %300, i64 0, i64 5
  %XMM5 = bitcast %union.VectorReg* %301 to %union.vec128_t*
  %302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %303 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %302, i64 0, i64 6
  %XMM6 = bitcast %union.VectorReg* %303 to %union.vec128_t*
  %304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %305 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %304, i64 0, i64 7
  %XMM7 = bitcast %union.VectorReg* %305 to %union.vec128_t*
  %306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %307 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %306, i64 0, i64 8
  %XMM8 = bitcast %union.VectorReg* %307 to %union.vec128_t*
  %308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %309 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %308, i64 0, i64 9
  %XMM9 = bitcast %union.VectorReg* %309 to %union.vec128_t*
  %310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %311 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %310, i64 0, i64 10
  %XMM10 = bitcast %union.VectorReg* %311 to %union.vec128_t*
  %312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %313 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %312, i64 0, i64 11
  %XMM11 = bitcast %union.VectorReg* %313 to %union.vec128_t*
  %314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %315 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %314, i64 0, i64 12
  %XMM12 = bitcast %union.VectorReg* %315 to %union.vec128_t*
  %316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %317 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %316, i64 0, i64 13
  %XMM13 = bitcast %union.VectorReg* %317 to %union.vec128_t*
  %318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %319 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %318, i64 0, i64 14
  %XMM14 = bitcast %union.VectorReg* %319 to %union.vec128_t*
  %320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %321 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %320, i64 0, i64 15
  %XMM15 = bitcast %union.VectorReg* %321 to %union.vec128_t*
  %322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %323 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %322, i32 0, i32 0
  %324 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %323, i64 0, i64 0
  %ST0 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %324, i32 0, i32 1
  %325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %326 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %325, i32 0, i32 0
  %327 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %326, i64 0, i64 1
  %ST1 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %327, i32 0, i32 1
  %328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %329 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %328, i32 0, i32 0
  %330 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %329, i64 0, i64 2
  %ST2 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %330, i32 0, i32 1
  %331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %332 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %331, i32 0, i32 0
  %333 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %332, i64 0, i64 3
  %ST3 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %333, i32 0, i32 1
  %334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %335 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %334, i32 0, i32 0
  %336 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %335, i64 0, i64 4
  %ST4 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %336, i32 0, i32 1
  %337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %338 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %337, i32 0, i32 0
  %339 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %338, i64 0, i64 5
  %ST5 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %339, i32 0, i32 1
  %340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %341 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %340, i32 0, i32 0
  %342 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %341, i64 0, i64 6
  %ST6 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %342, i32 0, i32 1
  %343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %344 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %343, i32 0, i32 0
  %345 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %344, i64 0, i64 7
  %ST7 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %345, i32 0, i32 1
  %346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %347 = getelementptr inbounds %struct.MMX, %struct.MMX* %346, i32 0, i32 0
  %348 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %347, i64 0, i64 0
  %349 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %348, i32 0, i32 1
  %350 = bitcast %union.vec64_t* %349 to %struct.uint64v1_t*
  %351 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %350, i32 0, i32 0
  %MM0 = getelementptr inbounds [1 x i64], [1 x i64]* %351, i64 0, i64 0
  %352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %353 = getelementptr inbounds %struct.MMX, %struct.MMX* %352, i32 0, i32 0
  %354 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %353, i64 0, i64 1
  %355 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %354, i32 0, i32 1
  %356 = bitcast %union.vec64_t* %355 to %struct.uint64v1_t*
  %357 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %356, i32 0, i32 0
  %MM1 = getelementptr inbounds [1 x i64], [1 x i64]* %357, i64 0, i64 0
  %358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %359 = getelementptr inbounds %struct.MMX, %struct.MMX* %358, i32 0, i32 0
  %360 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %359, i64 0, i64 2
  %361 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %360, i32 0, i32 1
  %362 = bitcast %union.vec64_t* %361 to %struct.uint64v1_t*
  %363 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %362, i32 0, i32 0
  %MM2 = getelementptr inbounds [1 x i64], [1 x i64]* %363, i64 0, i64 0
  %364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %365 = getelementptr inbounds %struct.MMX, %struct.MMX* %364, i32 0, i32 0
  %366 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %365, i64 0, i64 3
  %367 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %366, i32 0, i32 1
  %368 = bitcast %union.vec64_t* %367 to %struct.uint64v1_t*
  %369 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %368, i32 0, i32 0
  %MM3 = getelementptr inbounds [1 x i64], [1 x i64]* %369, i64 0, i64 0
  %370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %371 = getelementptr inbounds %struct.MMX, %struct.MMX* %370, i32 0, i32 0
  %372 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %371, i64 0, i64 4
  %373 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %372, i32 0, i32 1
  %374 = bitcast %union.vec64_t* %373 to %struct.uint64v1_t*
  %375 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %374, i32 0, i32 0
  %MM4 = getelementptr inbounds [1 x i64], [1 x i64]* %375, i64 0, i64 0
  %376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %377 = getelementptr inbounds %struct.MMX, %struct.MMX* %376, i32 0, i32 0
  %378 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %377, i64 0, i64 5
  %379 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %378, i32 0, i32 1
  %380 = bitcast %union.vec64_t* %379 to %struct.uint64v1_t*
  %381 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %380, i32 0, i32 0
  %MM5 = getelementptr inbounds [1 x i64], [1 x i64]* %381, i64 0, i64 0
  %382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %383 = getelementptr inbounds %struct.MMX, %struct.MMX* %382, i32 0, i32 0
  %384 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %383, i64 0, i64 6
  %385 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %384, i32 0, i32 1
  %386 = bitcast %union.vec64_t* %385 to %struct.uint64v1_t*
  %387 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %386, i32 0, i32 0
  %MM6 = getelementptr inbounds [1 x i64], [1 x i64]* %387, i64 0, i64 0
  %388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %389 = getelementptr inbounds %struct.MMX, %struct.MMX* %388, i32 0, i32 0
  %390 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %389, i64 0, i64 7
  %391 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %390, i32 0, i32 1
  %392 = bitcast %union.vec64_t* %391 to %struct.uint64v1_t*
  %393 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %392, i32 0, i32 0
  %MM7 = getelementptr inbounds [1 x i64], [1 x i64]* %393, i64 0, i64 0
  %394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %394, i32 0, i32 5
  %395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %395, i32 0, i32 1
  %396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %396, i32 0, i32 11
  %397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %397, i32 0, i32 13
  %398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %398, i32 0, i32 3
  %399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %399, i32 0, i32 9
  %400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %400, i32 0, i32 7
  store i64* @DR0, i64** %_DR0, align 8
  store i64* @DR1, i64** %_DR1, align 8
  store i64* @DR2, i64** %_DR2, align 8
  store i64* @DR3, i64** %_DR3, align 8
  store i64* @DR4, i64** %_DR4, align 8
  store i64* @DR5, i64** %_DR5, align 8
  store i64* @DR6, i64** %_DR6, align 8
  store i64* @DR7, i64** %_DR7, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8, align 8
  %401 = bitcast %"class.std::bitset"* %YMM0 to double*
  %402 = load double, double* %401
  %403 = load i64, i64* %RSP
  %404 = load %struct.Memory*, %struct.Memory** %MEMORY
  %405 = inttoptr i64 %403 to i64*
  %406 = load i64, i64* %405
  store i64 %406, i64* %PC
  %407 = add i64 %403, 8
  store i64 %407, i64* %RSP
  %408 = call double @cos(double %402)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0
  %409 = bitcast %"class.std::bitset"* %YMM0 to double*
  store double %408, double* %409
  %410 = load %struct.Memory*, %struct.Memory** %MEMORY
  ret %struct.Memory* %410
}

; Function Attrs: alwaysinline inlinehint
define %struct.Memory* @ext_6020f8_atan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #16 {
  %state = alloca %struct.State*, align 8
  %curr_pc = alloca i64, align 8
  %memory = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  %SS_BASE = alloca i64, align 8
  %ES_BASE = alloca i64, align 8
  %DS_BASE = alloca i64, align 8
  %CS_BASE = alloca i64, align 8
  %STATE = alloca %struct.State*, align 8
  %MEMORY = alloca %struct.Memory*, align 8
  %_DR0 = alloca i64*, align 8
  %_DR1 = alloca i64*, align 8
  %_DR2 = alloca i64*, align 8
  %_DR3 = alloca i64*, align 8
  %_DR4 = alloca i64*, align 8
  %_DR5 = alloca i64*, align 8
  %_DR6 = alloca i64*, align 8
  %_DR7 = alloca i64*, align 8
  %CR0 = alloca i64*, align 8
  %CR1 = alloca i64*, align 8
  %CR2 = alloca i64*, align 8
  %CR3 = alloca i64*, align 8
  %CR4 = alloca i64*, align 8
  %CR8 = alloca i64*, align 8
  store %struct.State* %0, %struct.State** %state, align 8
  store i64 %1, i64* %curr_pc, align 8
  store %struct.Memory* %2, %struct.Memory** %memory, align 8
  store i8 0, i8* %BRANCH_TAKEN, align 1
  store i64 0, i64* %SS_BASE, align 8
  store i64 0, i64* %ES_BASE, align 8
  store i64 0, i64* %DS_BASE, align 8
  store i64 0, i64* %CS_BASE, align 8
  store %struct.State* %0, %struct.State** %STATE, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0
  %PC = bitcast %union.anon* %6 to i64*
  store i64 %1, i64* %PC, align 8
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 1
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0
  %10 = bitcast %union.anon* %9 to %struct.anon.2*
  %AH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10, i32 0, i32 1
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12 = getelementptr inbounds %struct.GPR, %struct.GPR* %11, i32 0, i32 3
  %13 = getelementptr inbounds %struct.Reg, %struct.Reg* %12, i32 0, i32 0
  %14 = bitcast %union.anon* %13 to %struct.anon.2*
  %BH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %14, i32 0, i32 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16 = getelementptr inbounds %struct.GPR, %struct.GPR* %15, i32 0, i32 5
  %17 = getelementptr inbounds %struct.Reg, %struct.Reg* %16, i32 0, i32 0
  %18 = bitcast %union.anon* %17 to %struct.anon.2*
  %CH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %18, i32 0, i32 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20 = getelementptr inbounds %struct.GPR, %struct.GPR* %19, i32 0, i32 7
  %21 = getelementptr inbounds %struct.Reg, %struct.Reg* %20, i32 0, i32 0
  %22 = bitcast %union.anon* %21 to %struct.anon.2*
  %DH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %22, i32 0, i32 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 1
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0
  %26 = bitcast %union.anon* %25 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %26, i32 0, i32 0
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28 = getelementptr inbounds %struct.GPR, %struct.GPR* %27, i32 0, i32 3
  %29 = getelementptr inbounds %struct.Reg, %struct.Reg* %28, i32 0, i32 0
  %30 = bitcast %union.anon* %29 to %struct.anon.2*
  %BL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %30, i32 0, i32 0
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32 = getelementptr inbounds %struct.GPR, %struct.GPR* %31, i32 0, i32 5
  %33 = getelementptr inbounds %struct.Reg, %struct.Reg* %32, i32 0, i32 0
  %34 = bitcast %union.anon* %33 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %34, i32 0, i32 0
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36 = getelementptr inbounds %struct.GPR, %struct.GPR* %35, i32 0, i32 7
  %37 = getelementptr inbounds %struct.Reg, %struct.Reg* %36, i32 0, i32 0
  %38 = bitcast %union.anon* %37 to %struct.anon.2*
  %DL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %38, i32 0, i32 0
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %40 = getelementptr inbounds %struct.GPR, %struct.GPR* %39, i32 0, i32 9
  %41 = getelementptr inbounds %struct.Reg, %struct.Reg* %40, i32 0, i32 0
  %42 = bitcast %union.anon* %41 to %struct.anon.2*
  %SIL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %42, i32 0, i32 0
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %44 = getelementptr inbounds %struct.GPR, %struct.GPR* %43, i32 0, i32 11
  %45 = getelementptr inbounds %struct.Reg, %struct.Reg* %44, i32 0, i32 0
  %46 = bitcast %union.anon* %45 to %struct.anon.2*
  %DIL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %46, i32 0, i32 0
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %48 = getelementptr inbounds %struct.GPR, %struct.GPR* %47, i32 0, i32 13
  %49 = getelementptr inbounds %struct.Reg, %struct.Reg* %48, i32 0, i32 0
  %50 = bitcast %union.anon* %49 to %struct.anon.2*
  %SPL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %50, i32 0, i32 0
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %52 = getelementptr inbounds %struct.GPR, %struct.GPR* %51, i32 0, i32 15
  %53 = getelementptr inbounds %struct.Reg, %struct.Reg* %52, i32 0, i32 0
  %54 = bitcast %union.anon* %53 to %struct.anon.2*
  %BPL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %54, i32 0, i32 0
  %55 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %56 = getelementptr inbounds %struct.GPR, %struct.GPR* %55, i32 0, i32 17
  %57 = getelementptr inbounds %struct.Reg, %struct.Reg* %56, i32 0, i32 0
  %58 = bitcast %union.anon* %57 to %struct.anon.2*
  %R8B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %58, i32 0, i32 0
  %59 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %60 = getelementptr inbounds %struct.GPR, %struct.GPR* %59, i32 0, i32 19
  %61 = getelementptr inbounds %struct.Reg, %struct.Reg* %60, i32 0, i32 0
  %62 = bitcast %union.anon* %61 to %struct.anon.2*
  %R9B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %62, i32 0, i32 0
  %63 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %64 = getelementptr inbounds %struct.GPR, %struct.GPR* %63, i32 0, i32 21
  %65 = getelementptr inbounds %struct.Reg, %struct.Reg* %64, i32 0, i32 0
  %66 = bitcast %union.anon* %65 to %struct.anon.2*
  %R10B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %66, i32 0, i32 0
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %68 = getelementptr inbounds %struct.GPR, %struct.GPR* %67, i32 0, i32 23
  %69 = getelementptr inbounds %struct.Reg, %struct.Reg* %68, i32 0, i32 0
  %70 = bitcast %union.anon* %69 to %struct.anon.2*
  %R11B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %70, i32 0, i32 0
  %71 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %72 = getelementptr inbounds %struct.GPR, %struct.GPR* %71, i32 0, i32 25
  %73 = getelementptr inbounds %struct.Reg, %struct.Reg* %72, i32 0, i32 0
  %74 = bitcast %union.anon* %73 to %struct.anon.2*
  %R12B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %74, i32 0, i32 0
  %75 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %76 = getelementptr inbounds %struct.GPR, %struct.GPR* %75, i32 0, i32 27
  %77 = getelementptr inbounds %struct.Reg, %struct.Reg* %76, i32 0, i32 0
  %78 = bitcast %union.anon* %77 to %struct.anon.2*
  %R13B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %78, i32 0, i32 0
  %79 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %80 = getelementptr inbounds %struct.GPR, %struct.GPR* %79, i32 0, i32 29
  %81 = getelementptr inbounds %struct.Reg, %struct.Reg* %80, i32 0, i32 0
  %82 = bitcast %union.anon* %81 to %struct.anon.2*
  %R14B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %82, i32 0, i32 0
  %83 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %84 = getelementptr inbounds %struct.GPR, %struct.GPR* %83, i32 0, i32 31
  %85 = getelementptr inbounds %struct.Reg, %struct.Reg* %84, i32 0, i32 0
  %86 = bitcast %union.anon* %85 to %struct.anon.2*
  %R15B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %86, i32 0, i32 0
  %87 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %88 = getelementptr inbounds %struct.GPR, %struct.GPR* %87, i32 0, i32 1
  %89 = getelementptr inbounds %struct.Reg, %struct.Reg* %88, i32 0, i32 0
  %AX = bitcast %union.anon* %89 to i16*
  %90 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %91 = getelementptr inbounds %struct.GPR, %struct.GPR* %90, i32 0, i32 3
  %92 = getelementptr inbounds %struct.Reg, %struct.Reg* %91, i32 0, i32 0
  %BX = bitcast %union.anon* %92 to i16*
  %93 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %94 = getelementptr inbounds %struct.GPR, %struct.GPR* %93, i32 0, i32 5
  %95 = getelementptr inbounds %struct.Reg, %struct.Reg* %94, i32 0, i32 0
  %CX = bitcast %union.anon* %95 to i16*
  %96 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %97 = getelementptr inbounds %struct.GPR, %struct.GPR* %96, i32 0, i32 7
  %98 = getelementptr inbounds %struct.Reg, %struct.Reg* %97, i32 0, i32 0
  %DX = bitcast %union.anon* %98 to i16*
  %99 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %100 = getelementptr inbounds %struct.GPR, %struct.GPR* %99, i32 0, i32 9
  %101 = getelementptr inbounds %struct.Reg, %struct.Reg* %100, i32 0, i32 0
  %SI = bitcast %union.anon* %101 to i16*
  %102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %103 = getelementptr inbounds %struct.GPR, %struct.GPR* %102, i32 0, i32 11
  %104 = getelementptr inbounds %struct.Reg, %struct.Reg* %103, i32 0, i32 0
  %DI = bitcast %union.anon* %104 to i16*
  %105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %106 = getelementptr inbounds %struct.GPR, %struct.GPR* %105, i32 0, i32 13
  %107 = getelementptr inbounds %struct.Reg, %struct.Reg* %106, i32 0, i32 0
  %SP = bitcast %union.anon* %107 to i16*
  %108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %109 = getelementptr inbounds %struct.GPR, %struct.GPR* %108, i32 0, i32 15
  %110 = getelementptr inbounds %struct.Reg, %struct.Reg* %109, i32 0, i32 0
  %BP = bitcast %union.anon* %110 to i16*
  %111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %112 = getelementptr inbounds %struct.GPR, %struct.GPR* %111, i32 0, i32 17
  %113 = getelementptr inbounds %struct.Reg, %struct.Reg* %112, i32 0, i32 0
  %R8W = bitcast %union.anon* %113 to i16*
  %114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %115 = getelementptr inbounds %struct.GPR, %struct.GPR* %114, i32 0, i32 19
  %116 = getelementptr inbounds %struct.Reg, %struct.Reg* %115, i32 0, i32 0
  %R9W = bitcast %union.anon* %116 to i16*
  %117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %118 = getelementptr inbounds %struct.GPR, %struct.GPR* %117, i32 0, i32 21
  %119 = getelementptr inbounds %struct.Reg, %struct.Reg* %118, i32 0, i32 0
  %R10W = bitcast %union.anon* %119 to i16*
  %120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %121 = getelementptr inbounds %struct.GPR, %struct.GPR* %120, i32 0, i32 23
  %122 = getelementptr inbounds %struct.Reg, %struct.Reg* %121, i32 0, i32 0
  %R11W = bitcast %union.anon* %122 to i16*
  %123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %124 = getelementptr inbounds %struct.GPR, %struct.GPR* %123, i32 0, i32 25
  %125 = getelementptr inbounds %struct.Reg, %struct.Reg* %124, i32 0, i32 0
  %R12W = bitcast %union.anon* %125 to i16*
  %126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %127 = getelementptr inbounds %struct.GPR, %struct.GPR* %126, i32 0, i32 27
  %128 = getelementptr inbounds %struct.Reg, %struct.Reg* %127, i32 0, i32 0
  %R13W = bitcast %union.anon* %128 to i16*
  %129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %130 = getelementptr inbounds %struct.GPR, %struct.GPR* %129, i32 0, i32 29
  %131 = getelementptr inbounds %struct.Reg, %struct.Reg* %130, i32 0, i32 0
  %R14W = bitcast %union.anon* %131 to i16*
  %132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %133 = getelementptr inbounds %struct.GPR, %struct.GPR* %132, i32 0, i32 31
  %134 = getelementptr inbounds %struct.Reg, %struct.Reg* %133, i32 0, i32 0
  %R15W = bitcast %union.anon* %134 to i16*
  %135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %136 = getelementptr inbounds %struct.GPR, %struct.GPR* %135, i32 0, i32 33
  %137 = getelementptr inbounds %struct.Reg, %struct.Reg* %136, i32 0, i32 0
  %IP = bitcast %union.anon* %137 to i16*
  %138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %139 = getelementptr inbounds %struct.GPR, %struct.GPR* %138, i32 0, i32 1
  %140 = getelementptr inbounds %struct.Reg, %struct.Reg* %139, i32 0, i32 0
  %EAX = bitcast %union.anon* %140 to i32*
  %141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %142 = getelementptr inbounds %struct.GPR, %struct.GPR* %141, i32 0, i32 3
  %143 = getelementptr inbounds %struct.Reg, %struct.Reg* %142, i32 0, i32 0
  %EBX = bitcast %union.anon* %143 to i32*
  %144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %145 = getelementptr inbounds %struct.GPR, %struct.GPR* %144, i32 0, i32 5
  %146 = getelementptr inbounds %struct.Reg, %struct.Reg* %145, i32 0, i32 0
  %ECX = bitcast %union.anon* %146 to i32*
  %147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %148 = getelementptr inbounds %struct.GPR, %struct.GPR* %147, i32 0, i32 7
  %149 = getelementptr inbounds %struct.Reg, %struct.Reg* %148, i32 0, i32 0
  %EDX = bitcast %union.anon* %149 to i32*
  %150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %151 = getelementptr inbounds %struct.GPR, %struct.GPR* %150, i32 0, i32 9
  %152 = getelementptr inbounds %struct.Reg, %struct.Reg* %151, i32 0, i32 0
  %ESI = bitcast %union.anon* %152 to i32*
  %153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %154 = getelementptr inbounds %struct.GPR, %struct.GPR* %153, i32 0, i32 11
  %155 = getelementptr inbounds %struct.Reg, %struct.Reg* %154, i32 0, i32 0
  %EDI = bitcast %union.anon* %155 to i32*
  %156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %157 = getelementptr inbounds %struct.GPR, %struct.GPR* %156, i32 0, i32 13
  %158 = getelementptr inbounds %struct.Reg, %struct.Reg* %157, i32 0, i32 0
  %ESP = bitcast %union.anon* %158 to i32*
  %159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %160 = getelementptr inbounds %struct.GPR, %struct.GPR* %159, i32 0, i32 15
  %161 = getelementptr inbounds %struct.Reg, %struct.Reg* %160, i32 0, i32 0
  %EBP = bitcast %union.anon* %161 to i32*
  %162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %163 = getelementptr inbounds %struct.GPR, %struct.GPR* %162, i32 0, i32 33
  %164 = getelementptr inbounds %struct.Reg, %struct.Reg* %163, i32 0, i32 0
  %EIP = bitcast %union.anon* %164 to i32*
  %165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %166 = getelementptr inbounds %struct.GPR, %struct.GPR* %165, i32 0, i32 17
  %167 = getelementptr inbounds %struct.Reg, %struct.Reg* %166, i32 0, i32 0
  %R8D = bitcast %union.anon* %167 to i32*
  %168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %169 = getelementptr inbounds %struct.GPR, %struct.GPR* %168, i32 0, i32 19
  %170 = getelementptr inbounds %struct.Reg, %struct.Reg* %169, i32 0, i32 0
  %R9D = bitcast %union.anon* %170 to i32*
  %171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %172 = getelementptr inbounds %struct.GPR, %struct.GPR* %171, i32 0, i32 21
  %173 = getelementptr inbounds %struct.Reg, %struct.Reg* %172, i32 0, i32 0
  %R10D = bitcast %union.anon* %173 to i32*
  %174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %175 = getelementptr inbounds %struct.GPR, %struct.GPR* %174, i32 0, i32 23
  %176 = getelementptr inbounds %struct.Reg, %struct.Reg* %175, i32 0, i32 0
  %R11D = bitcast %union.anon* %176 to i32*
  %177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %178 = getelementptr inbounds %struct.GPR, %struct.GPR* %177, i32 0, i32 25
  %179 = getelementptr inbounds %struct.Reg, %struct.Reg* %178, i32 0, i32 0
  %R12D = bitcast %union.anon* %179 to i32*
  %180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %181 = getelementptr inbounds %struct.GPR, %struct.GPR* %180, i32 0, i32 27
  %182 = getelementptr inbounds %struct.Reg, %struct.Reg* %181, i32 0, i32 0
  %R13D = bitcast %union.anon* %182 to i32*
  %183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %184 = getelementptr inbounds %struct.GPR, %struct.GPR* %183, i32 0, i32 29
  %185 = getelementptr inbounds %struct.Reg, %struct.Reg* %184, i32 0, i32 0
  %R14D = bitcast %union.anon* %185 to i32*
  %186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %187 = getelementptr inbounds %struct.GPR, %struct.GPR* %186, i32 0, i32 31
  %188 = getelementptr inbounds %struct.Reg, %struct.Reg* %187, i32 0, i32 0
  %R15D = bitcast %union.anon* %188 to i32*
  %189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %190 = getelementptr inbounds %struct.GPR, %struct.GPR* %189, i32 0, i32 1
  %191 = getelementptr inbounds %struct.Reg, %struct.Reg* %190, i32 0, i32 0
  %RAX = bitcast %union.anon* %191 to i64*
  %192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %193 = getelementptr inbounds %struct.GPR, %struct.GPR* %192, i32 0, i32 3
  %194 = getelementptr inbounds %struct.Reg, %struct.Reg* %193, i32 0, i32 0
  %RBX = bitcast %union.anon* %194 to i64*
  %195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %196 = getelementptr inbounds %struct.GPR, %struct.GPR* %195, i32 0, i32 5
  %197 = getelementptr inbounds %struct.Reg, %struct.Reg* %196, i32 0, i32 0
  %RCX = bitcast %union.anon* %197 to i64*
  %198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %199 = getelementptr inbounds %struct.GPR, %struct.GPR* %198, i32 0, i32 7
  %200 = getelementptr inbounds %struct.Reg, %struct.Reg* %199, i32 0, i32 0
  %RDX = bitcast %union.anon* %200 to i64*
  %201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %202 = getelementptr inbounds %struct.GPR, %struct.GPR* %201, i32 0, i32 9
  %203 = getelementptr inbounds %struct.Reg, %struct.Reg* %202, i32 0, i32 0
  %RSI = bitcast %union.anon* %203 to i64*
  %204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %205 = getelementptr inbounds %struct.GPR, %struct.GPR* %204, i32 0, i32 11
  %206 = getelementptr inbounds %struct.Reg, %struct.Reg* %205, i32 0, i32 0
  %RDI = bitcast %union.anon* %206 to i64*
  %207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %208 = getelementptr inbounds %struct.GPR, %struct.GPR* %207, i32 0, i32 13
  %209 = getelementptr inbounds %struct.Reg, %struct.Reg* %208, i32 0, i32 0
  %RSP = bitcast %union.anon* %209 to i64*
  %210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %211 = getelementptr inbounds %struct.GPR, %struct.GPR* %210, i32 0, i32 15
  %212 = getelementptr inbounds %struct.Reg, %struct.Reg* %211, i32 0, i32 0
  %RBP = bitcast %union.anon* %212 to i64*
  %213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %214 = getelementptr inbounds %struct.GPR, %struct.GPR* %213, i32 0, i32 17
  %215 = getelementptr inbounds %struct.Reg, %struct.Reg* %214, i32 0, i32 0
  %R8 = bitcast %union.anon* %215 to i64*
  %216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %217 = getelementptr inbounds %struct.GPR, %struct.GPR* %216, i32 0, i32 19
  %218 = getelementptr inbounds %struct.Reg, %struct.Reg* %217, i32 0, i32 0
  %R9 = bitcast %union.anon* %218 to i64*
  %219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %220 = getelementptr inbounds %struct.GPR, %struct.GPR* %219, i32 0, i32 21
  %221 = getelementptr inbounds %struct.Reg, %struct.Reg* %220, i32 0, i32 0
  %R10 = bitcast %union.anon* %221 to i64*
  %222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %223 = getelementptr inbounds %struct.GPR, %struct.GPR* %222, i32 0, i32 23
  %224 = getelementptr inbounds %struct.Reg, %struct.Reg* %223, i32 0, i32 0
  %R11 = bitcast %union.anon* %224 to i64*
  %225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %226 = getelementptr inbounds %struct.GPR, %struct.GPR* %225, i32 0, i32 25
  %227 = getelementptr inbounds %struct.Reg, %struct.Reg* %226, i32 0, i32 0
  %R12 = bitcast %union.anon* %227 to i64*
  %228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %229 = getelementptr inbounds %struct.GPR, %struct.GPR* %228, i32 0, i32 27
  %230 = getelementptr inbounds %struct.Reg, %struct.Reg* %229, i32 0, i32 0
  %R13 = bitcast %union.anon* %230 to i64*
  %231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %232 = getelementptr inbounds %struct.GPR, %struct.GPR* %231, i32 0, i32 29
  %233 = getelementptr inbounds %struct.Reg, %struct.Reg* %232, i32 0, i32 0
  %R14 = bitcast %union.anon* %233 to i64*
  %234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %235 = getelementptr inbounds %struct.GPR, %struct.GPR* %234, i32 0, i32 31
  %236 = getelementptr inbounds %struct.Reg, %struct.Reg* %235, i32 0, i32 0
  %R15 = bitcast %union.anon* %236 to i64*
  %237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %238 = getelementptr inbounds %struct.GPR, %struct.GPR* %237, i32 0, i32 33
  %239 = getelementptr inbounds %struct.Reg, %struct.Reg* %238, i32 0, i32 0
  %RIP = bitcast %union.anon* %239 to i64*
  %240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %241 = getelementptr inbounds %struct.Segments, %struct.Segments* %240, i32 0, i32 1
  %SS = bitcast %union.SegmentSelector* %241 to i16*
  %242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %243 = getelementptr inbounds %struct.Segments, %struct.Segments* %242, i32 0, i32 3
  %ES = bitcast %union.SegmentSelector* %243 to i16*
  %244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %245 = getelementptr inbounds %struct.Segments, %struct.Segments* %244, i32 0, i32 5
  %GS = bitcast %union.SegmentSelector* %245 to i16*
  %246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %247 = getelementptr inbounds %struct.Segments, %struct.Segments* %246, i32 0, i32 7
  %FS = bitcast %union.SegmentSelector* %247 to i16*
  %248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %249 = getelementptr inbounds %struct.Segments, %struct.Segments* %248, i32 0, i32 9
  %DS = bitcast %union.SegmentSelector* %249 to i16*
  %250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %251 = getelementptr inbounds %struct.Segments, %struct.Segments* %250, i32 0, i32 11
  %CS = bitcast %union.SegmentSelector* %251 to i16*
  %252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %253 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %252, i32 0, i32 5
  %254 = getelementptr inbounds %struct.Reg, %struct.Reg* %253, i32 0, i32 0
  %GS_BASE = bitcast %union.anon* %254 to i64*
  %255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %256 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %255, i32 0, i32 7
  %257 = getelementptr inbounds %struct.Reg, %struct.Reg* %256, i32 0, i32 0
  %FS_BASE = bitcast %union.anon* %257 to i64*
  %258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %259 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %258, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %259 to %"class.std::bitset"*
  %260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %261 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %260, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %261 to %"class.std::bitset"*
  %262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %263 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %262, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %263 to %"class.std::bitset"*
  %264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %265 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %264, i64 0, i64 3
  %YMM3 = bitcast %union.VectorReg* %265 to %"class.std::bitset"*
  %266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %267 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %266, i64 0, i64 4
  %YMM4 = bitcast %union.VectorReg* %267 to %"class.std::bitset"*
  %268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %269 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %268, i64 0, i64 5
  %YMM5 = bitcast %union.VectorReg* %269 to %"class.std::bitset"*
  %270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %271 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %270, i64 0, i64 6
  %YMM6 = bitcast %union.VectorReg* %271 to %"class.std::bitset"*
  %272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %273 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %272, i64 0, i64 7
  %YMM7 = bitcast %union.VectorReg* %273 to %"class.std::bitset"*
  %274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %275 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %274, i64 0, i64 8
  %YMM8 = bitcast %union.VectorReg* %275 to %"class.std::bitset"*
  %276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %277 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %276, i64 0, i64 9
  %YMM9 = bitcast %union.VectorReg* %277 to %"class.std::bitset"*
  %278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %279 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %278, i64 0, i64 10
  %YMM10 = bitcast %union.VectorReg* %279 to %"class.std::bitset"*
  %280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %281 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %280, i64 0, i64 11
  %YMM11 = bitcast %union.VectorReg* %281 to %"class.std::bitset"*
  %282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %283 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %282, i64 0, i64 12
  %YMM12 = bitcast %union.VectorReg* %283 to %"class.std::bitset"*
  %284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %285 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %284, i64 0, i64 13
  %YMM13 = bitcast %union.VectorReg* %285 to %"class.std::bitset"*
  %286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %287 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %286, i64 0, i64 14
  %YMM14 = bitcast %union.VectorReg* %287 to %"class.std::bitset"*
  %288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %289 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %288, i64 0, i64 15
  %YMM15 = bitcast %union.VectorReg* %289 to %"class.std::bitset"*
  %290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %291 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %290, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %291 to %union.vec128_t*
  %292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %293 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %292, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %293 to %union.vec128_t*
  %294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %295 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %294, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %295 to %union.vec128_t*
  %296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %297 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %296, i64 0, i64 3
  %XMM3 = bitcast %union.VectorReg* %297 to %union.vec128_t*
  %298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %299 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %298, i64 0, i64 4
  %XMM4 = bitcast %union.VectorReg* %299 to %union.vec128_t*
  %300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %301 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %300, i64 0, i64 5
  %XMM5 = bitcast %union.VectorReg* %301 to %union.vec128_t*
  %302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %303 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %302, i64 0, i64 6
  %XMM6 = bitcast %union.VectorReg* %303 to %union.vec128_t*
  %304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %305 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %304, i64 0, i64 7
  %XMM7 = bitcast %union.VectorReg* %305 to %union.vec128_t*
  %306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %307 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %306, i64 0, i64 8
  %XMM8 = bitcast %union.VectorReg* %307 to %union.vec128_t*
  %308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %309 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %308, i64 0, i64 9
  %XMM9 = bitcast %union.VectorReg* %309 to %union.vec128_t*
  %310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %311 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %310, i64 0, i64 10
  %XMM10 = bitcast %union.VectorReg* %311 to %union.vec128_t*
  %312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %313 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %312, i64 0, i64 11
  %XMM11 = bitcast %union.VectorReg* %313 to %union.vec128_t*
  %314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %315 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %314, i64 0, i64 12
  %XMM12 = bitcast %union.VectorReg* %315 to %union.vec128_t*
  %316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %317 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %316, i64 0, i64 13
  %XMM13 = bitcast %union.VectorReg* %317 to %union.vec128_t*
  %318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %319 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %318, i64 0, i64 14
  %XMM14 = bitcast %union.VectorReg* %319 to %union.vec128_t*
  %320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %321 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %320, i64 0, i64 15
  %XMM15 = bitcast %union.VectorReg* %321 to %union.vec128_t*
  %322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %323 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %322, i32 0, i32 0
  %324 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %323, i64 0, i64 0
  %ST0 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %324, i32 0, i32 1
  %325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %326 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %325, i32 0, i32 0
  %327 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %326, i64 0, i64 1
  %ST1 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %327, i32 0, i32 1
  %328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %329 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %328, i32 0, i32 0
  %330 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %329, i64 0, i64 2
  %ST2 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %330, i32 0, i32 1
  %331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %332 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %331, i32 0, i32 0
  %333 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %332, i64 0, i64 3
  %ST3 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %333, i32 0, i32 1
  %334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %335 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %334, i32 0, i32 0
  %336 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %335, i64 0, i64 4
  %ST4 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %336, i32 0, i32 1
  %337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %338 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %337, i32 0, i32 0
  %339 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %338, i64 0, i64 5
  %ST5 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %339, i32 0, i32 1
  %340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %341 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %340, i32 0, i32 0
  %342 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %341, i64 0, i64 6
  %ST6 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %342, i32 0, i32 1
  %343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %344 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %343, i32 0, i32 0
  %345 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %344, i64 0, i64 7
  %ST7 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %345, i32 0, i32 1
  %346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %347 = getelementptr inbounds %struct.MMX, %struct.MMX* %346, i32 0, i32 0
  %348 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %347, i64 0, i64 0
  %349 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %348, i32 0, i32 1
  %350 = bitcast %union.vec64_t* %349 to %struct.uint64v1_t*
  %351 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %350, i32 0, i32 0
  %MM0 = getelementptr inbounds [1 x i64], [1 x i64]* %351, i64 0, i64 0
  %352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %353 = getelementptr inbounds %struct.MMX, %struct.MMX* %352, i32 0, i32 0
  %354 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %353, i64 0, i64 1
  %355 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %354, i32 0, i32 1
  %356 = bitcast %union.vec64_t* %355 to %struct.uint64v1_t*
  %357 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %356, i32 0, i32 0
  %MM1 = getelementptr inbounds [1 x i64], [1 x i64]* %357, i64 0, i64 0
  %358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %359 = getelementptr inbounds %struct.MMX, %struct.MMX* %358, i32 0, i32 0
  %360 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %359, i64 0, i64 2
  %361 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %360, i32 0, i32 1
  %362 = bitcast %union.vec64_t* %361 to %struct.uint64v1_t*
  %363 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %362, i32 0, i32 0
  %MM2 = getelementptr inbounds [1 x i64], [1 x i64]* %363, i64 0, i64 0
  %364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %365 = getelementptr inbounds %struct.MMX, %struct.MMX* %364, i32 0, i32 0
  %366 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %365, i64 0, i64 3
  %367 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %366, i32 0, i32 1
  %368 = bitcast %union.vec64_t* %367 to %struct.uint64v1_t*
  %369 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %368, i32 0, i32 0
  %MM3 = getelementptr inbounds [1 x i64], [1 x i64]* %369, i64 0, i64 0
  %370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %371 = getelementptr inbounds %struct.MMX, %struct.MMX* %370, i32 0, i32 0
  %372 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %371, i64 0, i64 4
  %373 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %372, i32 0, i32 1
  %374 = bitcast %union.vec64_t* %373 to %struct.uint64v1_t*
  %375 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %374, i32 0, i32 0
  %MM4 = getelementptr inbounds [1 x i64], [1 x i64]* %375, i64 0, i64 0
  %376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %377 = getelementptr inbounds %struct.MMX, %struct.MMX* %376, i32 0, i32 0
  %378 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %377, i64 0, i64 5
  %379 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %378, i32 0, i32 1
  %380 = bitcast %union.vec64_t* %379 to %struct.uint64v1_t*
  %381 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %380, i32 0, i32 0
  %MM5 = getelementptr inbounds [1 x i64], [1 x i64]* %381, i64 0, i64 0
  %382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %383 = getelementptr inbounds %struct.MMX, %struct.MMX* %382, i32 0, i32 0
  %384 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %383, i64 0, i64 6
  %385 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %384, i32 0, i32 1
  %386 = bitcast %union.vec64_t* %385 to %struct.uint64v1_t*
  %387 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %386, i32 0, i32 0
  %MM6 = getelementptr inbounds [1 x i64], [1 x i64]* %387, i64 0, i64 0
  %388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %389 = getelementptr inbounds %struct.MMX, %struct.MMX* %388, i32 0, i32 0
  %390 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %389, i64 0, i64 7
  %391 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %390, i32 0, i32 1
  %392 = bitcast %union.vec64_t* %391 to %struct.uint64v1_t*
  %393 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %392, i32 0, i32 0
  %MM7 = getelementptr inbounds [1 x i64], [1 x i64]* %393, i64 0, i64 0
  %394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %394, i32 0, i32 5
  %395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %395, i32 0, i32 1
  %396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %396, i32 0, i32 11
  %397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %397, i32 0, i32 13
  %398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %398, i32 0, i32 3
  %399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %399, i32 0, i32 9
  %400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %400, i32 0, i32 7
  store i64* @DR0, i64** %_DR0, align 8
  store i64* @DR1, i64** %_DR1, align 8
  store i64* @DR2, i64** %_DR2, align 8
  store i64* @DR3, i64** %_DR3, align 8
  store i64* @DR4, i64** %_DR4, align 8
  store i64* @DR5, i64** %_DR5, align 8
  store i64* @DR6, i64** %_DR6, align 8
  store i64* @DR7, i64** %_DR7, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8, align 8
  %401 = bitcast %"class.std::bitset"* %YMM0 to double*
  %402 = load double, double* %401
  %403 = load i64, i64* %RSP
  %404 = load %struct.Memory*, %struct.Memory** %MEMORY
  %405 = inttoptr i64 %403 to i64*
  %406 = load i64, i64* %405
  store i64 %406, i64* %PC
  %407 = add i64 %403, 8
  store i64 %407, i64* %RSP
  %408 = call double @atan(double %402)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0
  %409 = bitcast %"class.std::bitset"* %YMM0 to double*
  store double %408, double* %409
  %410 = load %struct.Memory*, %struct.Memory** %MEMORY
  ret %struct.Memory* %410
}

; Function Attrs: naked nobuiltin noinline
define internal void @callback_sub_4018f0___libc_csu_fini() #15 {
  call void asm sideeffect "pushq $0;pushq $$0x4018f0;jmpq *$1;", "*m,*m,~{dirflag},~{fpsr},~{flags}"(%struct.Memory* (%struct.State*, i64, %struct.Memory*)** @4, void ()** @2)
  ret void
}

define internal %struct.Memory* @callback_sub_4018f0___libc_csu_fini_wrapper(%struct.State*, i64, %struct.Memory*) {
  %4 = load volatile i1, i1* @0
  br i1 %4, label %5, label %6

; <label>:5:                                      ; preds = %3
  br label %__mcsema_early_init.exit

; <label>:6:                                      ; preds = %3
  store volatile i1 true, i1* @0
  br label %__mcsema_early_init.exit

__mcsema_early_init.exit:                         ; preds = %6, %5
  %7 = tail call %struct.Memory* @sub_4018f0___libc_csu_fini(%struct.State* %0, i64 %1, %struct.Memory* %2)
  ret %struct.Memory* %7
}

; Function Attrs: naked nobuiltin noinline
define internal void @callback_sub_401880___libc_csu_init() #15 {
  call void asm sideeffect "pushq $0;pushq $$0x401880;jmpq *$1;", "*m,*m,~{dirflag},~{fpsr},~{flags}"(%struct.Memory* (%struct.State*, i64, %struct.Memory*)** @5, void ()** @2)
  ret void
}

define internal %struct.Memory* @callback_sub_401880___libc_csu_init_wrapper(%struct.State*, i64, %struct.Memory*) {
  %4 = load volatile i1, i1* @0
  br i1 %4, label %5, label %6

; <label>:5:                                      ; preds = %3
  br label %__mcsema_early_init.exit

; <label>:6:                                      ; preds = %3
  store volatile i1 true, i1* @0
  br label %__mcsema_early_init.exit

__mcsema_early_init.exit:                         ; preds = %6, %5
  %7 = tail call %struct.Memory* @sub_401880___libc_csu_init(%struct.State* %0, i64 %1, %struct.Memory* %2)
  ret %struct.Memory* %7
}

; Function Attrs: naked nobuiltin noinline
define dllexport void @main() #15 {
  call void asm sideeffect "pushq $0;pushq $$0x400860;jmpq *$1;", "*m,*m,~{dirflag},~{fpsr},~{flags}"(%struct.Memory* (%struct.State*, i64, %struct.Memory*)** @6, void ()** @2)
  ret void
}

define internal %struct.Memory* @main_wrapper(%struct.State*, i64, %struct.Memory*) {
  %4 = load volatile i1, i1* @0
  br i1 %4, label %5, label %6

; <label>:5:                                      ; preds = %3
  br label %__mcsema_early_init.exit

; <label>:6:                                      ; preds = %3
  store volatile i1 true, i1* @0
  br label %__mcsema_early_init.exit

__mcsema_early_init.exit:                         ; preds = %6, %5
  %7 = tail call %struct.Memory* @sub_400860_main(%struct.State* %0, i64 %1, %struct.Memory* %2)
  ret %struct.Memory* %7
}

; Function Attrs: noinline
define internal %struct.Memory* @ext_602178___libc_start_main(%struct.State*, i64, %struct.Memory*) #13 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64)* @__libc_start_main to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

; Function Attrs: naked nobuiltin noinline
define dllexport void @PA() #15 {
  call void asm sideeffect "pushq $0;pushq $$0x401660;jmpq *$1;", "*m,*m,~{dirflag},~{fpsr},~{flags}"(%struct.Memory* (%struct.State*, i64, %struct.Memory*)** @7, void ()** @2)
  ret void
}

define internal %struct.Memory* @PA_wrapper(%struct.State*, i64, %struct.Memory*) {
  %4 = load volatile i1, i1* @0
  br i1 %4, label %5, label %6

; <label>:5:                                      ; preds = %3
  br label %__mcsema_early_init.exit

; <label>:6:                                      ; preds = %3
  store volatile i1 true, i1* @0
  br label %__mcsema_early_init.exit

__mcsema_early_init.exit:                         ; preds = %6, %5
  %7 = tail call %struct.Memory* @sub_401660_PA(%struct.State* %0, i64 %1, %struct.Memory* %2)
  ret %struct.Memory* %7
}

; Function Attrs: naked nobuiltin noinline
define dllexport void @.term_proc() #15 {
  call void asm sideeffect "pushq $0;pushq $$0x4018f4;jmpq *$1;", "*m,*m,~{dirflag},~{fpsr},~{flags}"(%struct.Memory* (%struct.State*, i64, %struct.Memory*)** @8, void ()** @2)
  ret void
}

define internal %struct.Memory* @.term_proc_wrapper(%struct.State*, i64, %struct.Memory*) {
  %4 = load volatile i1, i1* @0
  br i1 %4, label %5, label %6

; <label>:5:                                      ; preds = %3
  br label %__mcsema_early_init.exit

; <label>:6:                                      ; preds = %3
  store volatile i1 true, i1* @0
  br label %__mcsema_early_init.exit

__mcsema_early_init.exit:                         ; preds = %6, %5
  %7 = tail call %struct.Memory* @sub_4018f4__term_proc(%struct.State* %0, i64 %1, %struct.Memory* %2)
  ret %struct.Memory* %7
}

; Function Attrs: naked nobuiltin noinline
define dllexport void @.init_proc() #15 {
  call void asm sideeffect "pushq $0;pushq $$0x400698;jmpq *$1;", "*m,*m,~{dirflag},~{fpsr},~{flags}"(%struct.Memory* (%struct.State*, i64, %struct.Memory*)** @9, void ()** @2)
  ret void
}

define internal %struct.Memory* @.init_proc_wrapper(%struct.State*, i64, %struct.Memory*) {
  %4 = load volatile i1, i1* @0
  br i1 %4, label %5, label %6

; <label>:5:                                      ; preds = %3
  br label %__mcsema_early_init.exit

; <label>:6:                                      ; preds = %3
  store volatile i1 true, i1* @0
  br label %__mcsema_early_init.exit

__mcsema_early_init.exit:                         ; preds = %6, %5
  %7 = tail call %struct.Memory* @sub_400698__init_proc(%struct.State* %0, i64 %1, %struct.Memory* %2)
  ret %struct.Memory* %7
}

; Function Attrs: naked nobuiltin noinline
define dllexport void @P0() #15 {
  call void asm sideeffect "pushq $0;pushq $$0x401810;jmpq *$1;", "*m,*m,~{dirflag},~{fpsr},~{flags}"(%struct.Memory* (%struct.State*, i64, %struct.Memory*)** @10, void ()** @2)
  ret void
}

define internal %struct.Memory* @P0_wrapper(%struct.State*, i64, %struct.Memory*) {
  %4 = load volatile i1, i1* @0
  br i1 %4, label %5, label %6

; <label>:5:                                      ; preds = %3
  br label %__mcsema_early_init.exit

; <label>:6:                                      ; preds = %3
  store volatile i1 true, i1* @0
  br label %__mcsema_early_init.exit

__mcsema_early_init.exit:                         ; preds = %6, %5
  %7 = tail call %struct.Memory* @sub_401810_P0(%struct.State* %0, i64 %1, %struct.Memory* %2)
  ret %struct.Memory* %7
}

; Function Attrs: naked nobuiltin noinline
define dllexport void @POUT() #15 {
  call void asm sideeffect "pushq $0;pushq $$0x4015f0;jmpq *$1;", "*m,*m,~{dirflag},~{fpsr},~{flags}"(%struct.Memory* (%struct.State*, i64, %struct.Memory*)** @11, void ()** @2)
  ret void
}

define internal %struct.Memory* @POUT_wrapper(%struct.State*, i64, %struct.Memory*) {
  %4 = load volatile i1, i1* @0
  br i1 %4, label %5, label %6

; <label>:5:                                      ; preds = %3
  br label %__mcsema_early_init.exit

; <label>:6:                                      ; preds = %3
  store volatile i1 true, i1* @0
  br label %__mcsema_early_init.exit

__mcsema_early_init.exit:                         ; preds = %6, %5
  %7 = tail call %struct.Memory* @sub_4015f0_POUT(%struct.State* %0, i64 %1, %struct.Memory* %2)
  ret %struct.Memory* %7
}

; Function Attrs: naked nobuiltin noinline
define dllexport void @P3() #15 {
  call void asm sideeffect "pushq $0;pushq $$0x401790;jmpq *$1;", "*m,*m,~{dirflag},~{fpsr},~{flags}"(%struct.Memory* (%struct.State*, i64, %struct.Memory*)** @12, void ()** @2)
  ret void
}

define internal %struct.Memory* @P3_wrapper(%struct.State*, i64, %struct.Memory*) {
  %4 = load volatile i1, i1* @0
  br i1 %4, label %5, label %6

; <label>:5:                                      ; preds = %3
  br label %__mcsema_early_init.exit

; <label>:6:                                      ; preds = %3
  store volatile i1 true, i1* @0
  br label %__mcsema_early_init.exit

__mcsema_early_init.exit:                         ; preds = %6, %5
  %7 = tail call %struct.Memory* @sub_401790_P3(%struct.State* %0, i64 %1, %struct.Memory* %2)
  ret %struct.Memory* %7
}

define internal void @__mcsema_constructor() {
  %1 = load volatile i1, i1* @0
  br i1 %1, label %2, label %3

; <label>:2:                                      ; preds = %0
  br label %__mcsema_early_init.exit

; <label>:3:                                      ; preds = %0
  store volatile i1 true, i1* @0
  br label %__mcsema_early_init.exit

__mcsema_early_init.exit:                         ; preds = %3, %2
  call void @callback_sub_401880___libc_csu_init()
  ret void
}

define internal void @__mcsema_destructor() {
  call void @callback_sub_4018f0___libc_csu_fini()
  ret void
}

attributes #0 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { noduplicate noinline nounwind optnone readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone }
attributes #4 = { noduplicate noinline nounwind optnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noinline nounwind optnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noduplicate noinline nounwind optnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noduplicate noinline nounwind optnone readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noduplicate noinline nounwind optnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noinline }
attributes #14 = { noinline "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { naked nobuiltin noinline }
attributes #16 = { alwaysinline inlinehint "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #17 = { nounwind }

!llvm.ident = !{!0, !0}
!llvm.dbg.cu = !{!1}
!llvm.module.flags = !{!1259, !1260}

!0 = !{!"clang version 4.0.1 (tags/RELEASE_401/final)"}
!1 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus, file: !2, producer: "clang version 4.0.1 (tags/RELEASE_401/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !3, retainedTypes: !67, imports: !70)
!2 = !DIFile(filename: "/home/ubuntu/Github/remill/remill/Arch/X86/Runtime/BasicBlock.cpp", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!3 = !{!4, !26, !35, !39, !45, !51, !55, !61}
!4 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, name: "Name", scope: !6, file: !5, line: 70, baseType: !8, size: 32, elements: !11, identifier: "_ZTSN14AsyncHyperCall4NameE")
!5 = !DIFile(filename: "/home/ubuntu/Github/remill/remill/Arch/Runtime/HyperCall.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!6 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "AsyncHyperCall", file: !5, line: 68, size: 8, elements: !7, identifier: "_ZTS14AsyncHyperCall")
!7 = !{}
!8 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !9, line: 183, baseType: !10)
!9 = !DIFile(filename: "/home/ubuntu/Github/remill/remill-build/libraries/llvm/bin/../lib/clang/4.0.1/include/stdint.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!10 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!11 = !{!12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25}
!12 = !DIEnumerator(name: "kInvalid", value: 0)
!13 = !DIEnumerator(name: "kX86Int1", value: 1)
!14 = !DIEnumerator(name: "kX86Int3", value: 2)
!15 = !DIEnumerator(name: "kX86IntO", value: 3)
!16 = !DIEnumerator(name: "kX86IntN", value: 4)
!17 = !DIEnumerator(name: "kX86Bound", value: 5)
!18 = !DIEnumerator(name: "kX86IRet", value: 6)
!19 = !DIEnumerator(name: "kX86SysCall", value: 7)
!20 = !DIEnumerator(name: "kX86SysRet", value: 8)
!21 = !DIEnumerator(name: "kX86SysEnter", value: 9)
!22 = !DIEnumerator(name: "kX86SysExit", value: 10)
!23 = !DIEnumerator(name: "kX86JmpFar", value: 11)
!24 = !DIEnumerator(name: "kAArch64SupervisorCall", value: 12)
!25 = !DIEnumerator(name: "kInvalidInstruction", value: 13)
!26 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, name: "RequestPrivilegeLevel", file: !27, line: 64, baseType: !28, size: 16, elements: !30, identifier: "_ZTS21RequestPrivilegeLevel")
!27 = !DIFile(filename: "/home/ubuntu/Github/remill/remill/Arch/X86/Runtime/State.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!28 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !9, line: 218, baseType: !29)
!29 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!30 = !{!31, !32, !33, !34}
!31 = !DIEnumerator(name: "kRPLRingZero", value: 0)
!32 = !DIEnumerator(name: "kRPLRingOne", value: 1)
!33 = !DIEnumerator(name: "kRPLRingTwo", value: 2)
!34 = !DIEnumerator(name: "kRPLRingThree", value: 3)
!35 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, name: "TableIndicator", file: !27, line: 71, baseType: !28, size: 16, elements: !36, identifier: "_ZTS14TableIndicator")
!36 = !{!37, !38}
!37 = !DIEnumerator(name: "kGlobalDescriptorTable", value: 0)
!38 = !DIEnumerator(name: "kLocalDescriptorTable", value: 1)
!39 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, name: "FPUPrecisionControl", file: !27, line: 123, baseType: !28, size: 16, elements: !40, identifier: "_ZTS19FPUPrecisionControl")
!40 = !{!41, !42, !43, !44}
!41 = !DIEnumerator(name: "kPrecisionSingle", value: 0)
!42 = !DIEnumerator(name: "kPrecisionReserved", value: 1)
!43 = !DIEnumerator(name: "kPrecisionDouble", value: 2)
!44 = !DIEnumerator(name: "kPrecisionExtended", value: 3)
!45 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, name: "FPURoundingControl", file: !27, line: 130, baseType: !28, size: 16, elements: !46, identifier: "_ZTS18FPURoundingControl")
!46 = !{!47, !48, !49, !50}
!47 = !DIEnumerator(name: "kFPURoundToNearestEven", value: 0)
!48 = !DIEnumerator(name: "kFPURoundDownNegInf", value: 1)
!49 = !DIEnumerator(name: "kFPURoundUpInf", value: 2)
!50 = !DIEnumerator(name: "kFPURoundToZero", value: 3)
!51 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, name: "FPUInfinityControl", file: !27, line: 137, baseType: !28, size: 16, elements: !52, identifier: "_ZTS18FPUInfinityControl")
!52 = !{!53, !54}
!53 = !DIEnumerator(name: "kInfinityProjective", value: 0)
!54 = !DIEnumerator(name: "kInfinityAffine", value: 1)
!55 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, name: "FPUTag", file: !27, line: 214, baseType: !28, size: 16, elements: !56, identifier: "_ZTS6FPUTag")
!56 = !{!57, !58, !59, !60}
!57 = !DIEnumerator(name: "kFPUTagNonZero", value: 0)
!58 = !DIEnumerator(name: "kFPUTagZero", value: 1)
!59 = !DIEnumerator(name: "kFPUTagSpecial", value: 2)
!60 = !DIEnumerator(name: "kFPUTagEmpty", value: 3)
!61 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, name: "FPUAbridgedTag", file: !27, line: 221, baseType: !62, size: 8, elements: !64, identifier: "_ZTS14FPUAbridgedTag")
!62 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !9, line: 237, baseType: !63)
!63 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!64 = !{!65, !66}
!65 = !DIEnumerator(name: "kFPUAbridgedTagEmpty", value: 0)
!66 = !DIEnumerator(name: "kFPUAbridgedTagValid", value: 1)
!67 = !{!68}
!68 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !69, size: 64)
!69 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!70 = !{!71, !77, !83, !86, !93, !97, !102, !104, !112, !116, !120, !132, !136, !140, !144, !148, !153, !157, !161, !165, !169, !177, !181, !185, !187, !191, !195, !199, !205, !209, !213, !215, !223, !227, !235, !237, !241, !245, !249, !253, !258, !263, !268, !269, !270, !271, !274, !275, !276, !277, !278, !279, !280, !335, !339, !355, !358, !363, !371, !376, !380, !384, !388, !392, !394, !396, !400, !406, !410, !416, !422, !424, !428, !432, !436, !440, !451, !453, !457, !461, !465, !467, !471, !475, !479, !481, !483, !487, !495, !499, !503, !507, !509, !515, !517, !523, !527, !531, !535, !539, !543, !547, !549, !551, !555, !559, !563, !565, !569, !573, !575, !577, !581, !585, !589, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !606, !609, !611, !613, !615, !617, !619, !621, !623, !625, !627, !629, !631, !633, !634, !635, !636, !638, !640, !642, !644, !646, !648, !650, !652, !654, !656, !658, !660, !662, !665, !669, !674, !677, !679, !681, !683, !685, !687, !689, !691, !693, !695, !697, !699, !701, !703, !706, !712, !717, !721, !723, !725, !727, !729, !736, !740, !744, !748, !752, !756, !761, !765, !767, !771, !777, !781, !786, !788, !790, !794, !798, !802, !804, !806, !808, !810, !814, !816, !818, !822, !826, !830, !834, !838, !840, !842, !846, !850, !854, !858, !860, !862, !866, !870, !871, !872, !873, !874, !875, !880, !882, !884, !888, !890, !892, !894, !896, !898, !900, !902, !907, !911, !913, !915, !920, !922, !924, !926, !928, !930, !932, !935, !937, !939, !943, !947, !949, !951, !953, !955, !957, !959, !961, !963, !965, !967, !971, !975, !977, !979, !981, !983, !985, !987, !989, !991, !993, !995, !997, !999, !1001, !1003, !1005, !1009, !1013, !1017, !1019, !1021, !1023, !1025, !1027, !1029, !1031, !1033, !1035, !1039, !1043, !1047, !1049, !1051, !1053, !1057, !1061, !1065, !1067, !1069, !1071, !1073, !1075, !1077, !1079, !1081, !1083, !1085, !1087, !1089, !1093, !1097, !1101, !1103, !1105, !1107, !1109, !1113, !1117, !1119, !1121, !1123, !1125, !1127, !1129, !1133, !1137, !1139, !1141, !1143, !1145, !1149, !1153, !1157, !1159, !1161, !1163, !1165, !1167, !1169, !1173, !1177, !1181, !1183, !1187, !1191, !1193, !1195, !1197, !1199, !1201, !1203, !1207, !1209, !1212, !1217, !1219, !1225, !1227, !1229, !1231, !1236, !1238, !1244, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258}
!71 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !72, entity: !74, line: 58)
!72 = !DINamespace(name: "__gnu_debug", scope: null, file: !73, line: 56)
!73 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/debug/debug.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!74 = !DINamespace(name: "__debug", scope: !75, file: !73, line: 50)
!75 = !DINamespace(name: "std", scope: null, file: !76, line: 229)
!76 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/c++config.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!77 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !78, line: 52)
!78 = !DISubprogram(name: "abs", scope: !79, file: !79, line: 837, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!79 = !DIFile(filename: "/usr/include/stdlib.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!80 = !DISubroutineType(types: !81)
!81 = !{!82, !82}
!82 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!83 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !84, line: 127)
!84 = !DIDerivedType(tag: DW_TAG_typedef, name: "div_t", file: !79, line: 62, baseType: !85)
!85 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !79, line: 58, flags: DIFlagFwdDecl, identifier: "_ZTS5div_t")
!86 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !87, line: 128)
!87 = !DIDerivedType(tag: DW_TAG_typedef, name: "ldiv_t", file: !79, line: 70, baseType: !88)
!88 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !79, line: 66, size: 128, elements: !89, identifier: "_ZTS6ldiv_t")
!89 = !{!90, !92}
!90 = !DIDerivedType(tag: DW_TAG_member, name: "quot", scope: !88, file: !79, line: 68, baseType: !91, size: 64)
!91 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!92 = !DIDerivedType(tag: DW_TAG_member, name: "rem", scope: !88, file: !79, line: 69, baseType: !91, size: 64, offset: 64)
!93 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !94, line: 130)
!94 = !DISubprogram(name: "abort", scope: !79, file: !79, line: 588, type: !95, isLocal: false, isDefinition: false, flags: DIFlagPrototyped | DIFlagNoReturn, isOptimized: false)
!95 = !DISubroutineType(types: !96)
!96 = !{null}
!97 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !98, line: 134)
!98 = !DISubprogram(name: "atexit", scope: !79, file: !79, line: 592, type: !99, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!99 = !DISubroutineType(types: !100)
!100 = !{!82, !101}
!101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !95, size: 64)
!102 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !103, line: 137)
!103 = !DISubprogram(name: "at_quick_exit", scope: !79, file: !79, line: 597, type: !99, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!104 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !105, line: 140)
!105 = !DISubprogram(name: "atof", scope: !79, file: !79, line: 101, type: !106, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!106 = !DISubroutineType(types: !107)
!107 = !{!108, !109}
!108 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !110, size: 64)
!110 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !111)
!111 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!112 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !113, line: 141)
!113 = !DISubprogram(name: "atoi", scope: !79, file: !79, line: 104, type: !114, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!114 = !DISubroutineType(types: !115)
!115 = !{!82, !109}
!116 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !117, line: 142)
!117 = !DISubprogram(name: "atol", scope: !79, file: !79, line: 107, type: !118, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!118 = !DISubroutineType(types: !119)
!119 = !{!91, !109}
!120 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !121, line: 143)
!121 = !DISubprogram(name: "bsearch", scope: !79, file: !79, line: 817, type: !122, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!122 = !DISubroutineType(types: !123)
!123 = !{!124, !68, !68, !125, !125, !128}
!124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!125 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !126, line: 62, baseType: !127)
!126 = !DIFile(filename: "/home/ubuntu/Github/remill/remill-build/libraries/llvm/bin/../lib/clang/4.0.1/include/stddef.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!127 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!128 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !79, line: 805, baseType: !129)
!129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !130, size: 64)
!130 = !DISubroutineType(types: !131)
!131 = !{!82, !68, !68}
!132 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !133, line: 144)
!133 = !DISubprogram(name: "calloc", scope: !79, file: !79, line: 541, type: !134, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!134 = !DISubroutineType(types: !135)
!135 = !{!124, !125, !125}
!136 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !137, line: 145)
!137 = !DISubprogram(name: "div", scope: !79, file: !79, line: 849, type: !138, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!138 = !DISubroutineType(types: !139)
!139 = !{!84, !82, !82}
!140 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !141, line: 146)
!141 = !DISubprogram(name: "exit", scope: !79, file: !79, line: 614, type: !142, isLocal: false, isDefinition: false, flags: DIFlagPrototyped | DIFlagNoReturn, isOptimized: false)
!142 = !DISubroutineType(types: !143)
!143 = !{null, !82}
!144 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !145, line: 147)
!145 = !DISubprogram(name: "free", scope: !79, file: !79, line: 563, type: !146, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!146 = !DISubroutineType(types: !147)
!147 = !{null, !124}
!148 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !149, line: 148)
!149 = !DISubprogram(name: "getenv", scope: !79, file: !79, line: 631, type: !150, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!150 = !DISubroutineType(types: !151)
!151 = !{!152, !109}
!152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !111, size: 64)
!153 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !154, line: 149)
!154 = !DISubprogram(name: "labs", scope: !79, file: !79, line: 838, type: !155, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!155 = !DISubroutineType(types: !156)
!156 = !{!91, !91}
!157 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !158, line: 150)
!158 = !DISubprogram(name: "ldiv", scope: !79, file: !79, line: 851, type: !159, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!159 = !DISubroutineType(types: !160)
!160 = !{!87, !91, !91}
!161 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !162, line: 151)
!162 = !DISubprogram(name: "malloc", scope: !79, file: !79, line: 539, type: !163, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!163 = !DISubroutineType(types: !164)
!164 = !{!124, !125}
!165 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !166, line: 153)
!166 = !DISubprogram(name: "mblen", scope: !79, file: !79, line: 919, type: !167, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!167 = !DISubroutineType(types: !168)
!168 = !{!82, !109, !125}
!169 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !170, line: 154)
!170 = !DISubprogram(name: "mbstowcs", scope: !79, file: !79, line: 930, type: !171, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!171 = !DISubroutineType(types: !172)
!172 = !{!125, !173, !176, !125}
!173 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !174)
!174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !175, size: 64)
!175 = !DIBasicType(name: "wchar_t", size: 32, encoding: DW_ATE_signed)
!176 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !109)
!177 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !178, line: 155)
!178 = !DISubprogram(name: "mbtowc", scope: !79, file: !79, line: 922, type: !179, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!179 = !DISubroutineType(types: !180)
!180 = !{!82, !173, !176, !125}
!181 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !182, line: 157)
!182 = !DISubprogram(name: "qsort", scope: !79, file: !79, line: 827, type: !183, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!183 = !DISubroutineType(types: !184)
!184 = !{null, !124, !125, !125, !128}
!185 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !186, line: 160)
!186 = !DISubprogram(name: "quick_exit", scope: !79, file: !79, line: 620, type: !142, isLocal: false, isDefinition: false, flags: DIFlagPrototyped | DIFlagNoReturn, isOptimized: false)
!187 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !188, line: 163)
!188 = !DISubprogram(name: "rand", scope: !79, file: !79, line: 453, type: !189, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!189 = !DISubroutineType(types: !190)
!190 = !{!82}
!191 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !192, line: 164)
!192 = !DISubprogram(name: "realloc", scope: !79, file: !79, line: 549, type: !193, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!193 = !DISubroutineType(types: !194)
!194 = !{!124, !124, !125}
!195 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !196, line: 165)
!196 = !DISubprogram(name: "srand", scope: !79, file: !79, line: 455, type: !197, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!197 = !DISubroutineType(types: !198)
!198 = !{null, !10}
!199 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !200, line: 166)
!200 = !DISubprogram(name: "strtod", scope: !79, file: !79, line: 117, type: !201, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!201 = !DISubroutineType(types: !202)
!202 = !{!108, !176, !203}
!203 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !204)
!204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !152, size: 64)
!205 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !206, line: 167)
!206 = !DISubprogram(name: "strtol", scope: !79, file: !79, line: 176, type: !207, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!207 = !DISubroutineType(types: !208)
!208 = !{!91, !176, !203, !82}
!209 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !210, line: 168)
!210 = !DISubprogram(name: "strtoul", scope: !79, file: !79, line: 180, type: !211, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!211 = !DISubroutineType(types: !212)
!212 = !{!127, !176, !203, !82}
!213 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !214, line: 169)
!214 = !DISubprogram(name: "system", scope: !79, file: !79, line: 781, type: !114, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!215 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !216, line: 171)
!216 = !DISubprogram(name: "wcstombs", scope: !79, file: !79, line: 933, type: !217, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!217 = !DISubroutineType(types: !218)
!218 = !{!125, !219, !220, !125}
!219 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !152)
!220 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !221)
!221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !222, size: 64)
!222 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !175)
!223 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !224, line: 172)
!224 = !DISubprogram(name: "wctomb", scope: !79, file: !79, line: 926, type: !225, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!225 = !DISubroutineType(types: !226)
!226 = !{!82, !152, !175}
!227 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !229, line: 200)
!228 = !DINamespace(name: "__gnu_cxx", scope: null, file: !76, line: 255)
!229 = !DIDerivedType(tag: DW_TAG_typedef, name: "lldiv_t", file: !79, line: 80, baseType: !230)
!230 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !79, line: 76, size: 128, elements: !231, identifier: "_ZTS7lldiv_t")
!231 = !{!232, !234}
!232 = !DIDerivedType(tag: DW_TAG_member, name: "quot", scope: !230, file: !79, line: 78, baseType: !233, size: 64)
!233 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "rem", scope: !230, file: !79, line: 79, baseType: !233, size: 64, offset: 64)
!235 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !236, line: 206)
!236 = !DISubprogram(name: "_Exit", scope: !79, file: !79, line: 626, type: !142, isLocal: false, isDefinition: false, flags: DIFlagPrototyped | DIFlagNoReturn, isOptimized: false)
!237 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !238, line: 210)
!238 = !DISubprogram(name: "llabs", scope: !79, file: !79, line: 841, type: !239, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!239 = !DISubroutineType(types: !240)
!240 = !{!233, !233}
!241 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !242, line: 216)
!242 = !DISubprogram(name: "lldiv", scope: !79, file: !79, line: 855, type: !243, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!243 = !DISubroutineType(types: !244)
!244 = !{!229, !233, !233}
!245 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !246, line: 227)
!246 = !DISubprogram(name: "atoll", scope: !79, file: !79, line: 112, type: !247, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!247 = !DISubroutineType(types: !248)
!248 = !{!233, !109}
!249 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !250, line: 228)
!250 = !DISubprogram(name: "strtoll", scope: !79, file: !79, line: 200, type: !251, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!251 = !DISubroutineType(types: !252)
!252 = !{!233, !176, !203, !82}
!253 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !254, line: 229)
!254 = !DISubprogram(name: "strtoull", scope: !79, file: !79, line: 205, type: !255, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!255 = !DISubroutineType(types: !256)
!256 = !{!257, !176, !203, !82}
!257 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!258 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !259, line: 231)
!259 = !DISubprogram(name: "strtof", scope: !79, file: !79, line: 123, type: !260, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!260 = !DISubroutineType(types: !261)
!261 = !{!262, !176, !203}
!262 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!263 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !264, line: 232)
!264 = !DISubprogram(name: "strtold", scope: !79, file: !79, line: 126, type: !265, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!265 = !DISubroutineType(types: !266)
!266 = !{!267, !176, !203}
!267 = !DIBasicType(name: "long double", size: 128, encoding: DW_ATE_float)
!268 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !229, line: 240)
!269 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !236, line: 242)
!270 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !238, line: 244)
!271 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !272, line: 245)
!272 = !DISubprogram(name: "div", linkageName: "_ZN9__gnu_cxx3divExx", scope: !228, file: !273, line: 213, type: !243, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!273 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/cstdlib", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!274 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !242, line: 246)
!275 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !246, line: 248)
!276 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !259, line: 249)
!277 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !250, line: 250)
!278 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !254, line: 251)
!279 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !264, line: 252)
!280 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !281, line: 57)
!281 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "exception_ptr", scope: !283, file: !282, line: 79, size: 64, elements: !284, identifier: "_ZTSNSt15__exception_ptr13exception_ptrE")
!282 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/exception_ptr.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!283 = !DINamespace(name: "__exception_ptr", scope: !75, file: !282, line: 52)
!284 = !{!285, !286, !290, !293, !294, !299, !300, !304, !309, !313, !317, !320, !321, !324, !328}
!285 = !DIDerivedType(tag: DW_TAG_member, name: "_M_exception_object", scope: !281, file: !282, line: 81, baseType: !124, size: 64)
!286 = !DISubprogram(name: "exception_ptr", scope: !281, file: !282, line: 83, type: !287, isLocal: false, isDefinition: false, scopeLine: 83, flags: DIFlagExplicit | DIFlagPrototyped, isOptimized: false)
!287 = !DISubroutineType(types: !288)
!288 = !{null, !289, !124}
!289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !281, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!290 = !DISubprogram(name: "_M_addref", linkageName: "_ZNSt15__exception_ptr13exception_ptr9_M_addrefEv", scope: !281, file: !282, line: 85, type: !291, isLocal: false, isDefinition: false, scopeLine: 85, flags: DIFlagPrototyped, isOptimized: false)
!291 = !DISubroutineType(types: !292)
!292 = !{null, !289}
!293 = !DISubprogram(name: "_M_release", linkageName: "_ZNSt15__exception_ptr13exception_ptr10_M_releaseEv", scope: !281, file: !282, line: 86, type: !291, isLocal: false, isDefinition: false, scopeLine: 86, flags: DIFlagPrototyped, isOptimized: false)
!294 = !DISubprogram(name: "_M_get", linkageName: "_ZNKSt15__exception_ptr13exception_ptr6_M_getEv", scope: !281, file: !282, line: 88, type: !295, isLocal: false, isDefinition: false, scopeLine: 88, flags: DIFlagPrototyped, isOptimized: false)
!295 = !DISubroutineType(types: !296)
!296 = !{!124, !297}
!297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !298, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!298 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !281)
!299 = !DISubprogram(name: "exception_ptr", scope: !281, file: !282, line: 96, type: !291, isLocal: false, isDefinition: false, scopeLine: 96, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: false)
!300 = !DISubprogram(name: "exception_ptr", scope: !281, file: !282, line: 98, type: !301, isLocal: false, isDefinition: false, scopeLine: 98, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: false)
!301 = !DISubroutineType(types: !302)
!302 = !{null, !289, !303}
!303 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !298, size: 64)
!304 = !DISubprogram(name: "exception_ptr", scope: !281, file: !282, line: 101, type: !305, isLocal: false, isDefinition: false, scopeLine: 101, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: false)
!305 = !DISubroutineType(types: !306)
!306 = !{null, !289, !307}
!307 = !DIDerivedType(tag: DW_TAG_typedef, name: "nullptr_t", scope: !75, file: !76, line: 235, baseType: !308)
!308 = !DIBasicType(tag: DW_TAG_unspecified_type, name: "decltype(nullptr)")
!309 = !DISubprogram(name: "exception_ptr", scope: !281, file: !282, line: 105, type: !310, isLocal: false, isDefinition: false, scopeLine: 105, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: false)
!310 = !DISubroutineType(types: !311)
!311 = !{null, !289, !312}
!312 = !DIDerivedType(tag: DW_TAG_rvalue_reference_type, baseType: !281, size: 64)
!313 = !DISubprogram(name: "operator=", linkageName: "_ZNSt15__exception_ptr13exception_ptraSERKS0_", scope: !281, file: !282, line: 118, type: !314, isLocal: false, isDefinition: false, scopeLine: 118, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: false)
!314 = !DISubroutineType(types: !315)
!315 = !{!316, !289, !303}
!316 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !281, size: 64)
!317 = !DISubprogram(name: "operator=", linkageName: "_ZNSt15__exception_ptr13exception_ptraSEOS0_", scope: !281, file: !282, line: 122, type: !318, isLocal: false, isDefinition: false, scopeLine: 122, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: false)
!318 = !DISubroutineType(types: !319)
!319 = !{!316, !289, !312}
!320 = !DISubprogram(name: "~exception_ptr", scope: !281, file: !282, line: 129, type: !291, isLocal: false, isDefinition: false, scopeLine: 129, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: false)
!321 = !DISubprogram(name: "swap", linkageName: "_ZNSt15__exception_ptr13exception_ptr4swapERS0_", scope: !281, file: !282, line: 132, type: !322, isLocal: false, isDefinition: false, scopeLine: 132, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: false)
!322 = !DISubroutineType(types: !323)
!323 = !{null, !289, !316}
!324 = !DISubprogram(name: "operator bool", linkageName: "_ZNKSt15__exception_ptr13exception_ptrcvbEv", scope: !281, file: !282, line: 144, type: !325, isLocal: false, isDefinition: false, scopeLine: 144, flags: DIFlagPublic | DIFlagExplicit | DIFlagPrototyped, isOptimized: false)
!325 = !DISubroutineType(types: !326)
!326 = !{!327, !297}
!327 = !DIBasicType(name: "bool", size: 8, encoding: DW_ATE_boolean)
!328 = !DISubprogram(name: "__cxa_exception_type", linkageName: "_ZNKSt15__exception_ptr13exception_ptr20__cxa_exception_typeEv", scope: !281, file: !282, line: 153, type: !329, isLocal: false, isDefinition: false, scopeLine: 153, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: false)
!329 = !DISubroutineType(types: !330)
!330 = !{!331, !297}
!331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !332, size: 64)
!332 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !333)
!333 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "type_info", scope: !75, file: !334, line: 88, flags: DIFlagFwdDecl, identifier: "_ZTSSt9type_info")
!334 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/typeinfo", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!335 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !283, entity: !336, line: 73)
!336 = !DISubprogram(name: "rethrow_exception", linkageName: "_ZSt17rethrow_exceptionNSt15__exception_ptr13exception_ptrE", scope: !75, file: !282, line: 69, type: !337, isLocal: false, isDefinition: false, flags: DIFlagPrototyped | DIFlagNoReturn, isOptimized: false)
!337 = !DISubroutineType(types: !338)
!338 = !{null, !281}
!339 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !340, line: 64)
!340 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !341, line: 6, baseType: !342)
!341 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/mbstate_t.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!342 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !343, line: 21, baseType: !344)
!343 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!344 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !343, line: 13, size: 64, elements: !345, identifier: "_ZTS11__mbstate_t")
!345 = !{!346, !347}
!346 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !344, file: !343, line: 15, baseType: !82, size: 32)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !344, file: !343, line: 20, baseType: !348, size: 32, offset: 32)
!348 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !344, file: !343, line: 16, size: 32, elements: !349, identifier: "_ZTSN11__mbstate_tUt_E")
!349 = !{!350, !351}
!350 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !348, file: !343, line: 18, baseType: !10, size: 32)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !348, file: !343, line: 19, baseType: !352, size: 32)
!352 = !DICompositeType(tag: DW_TAG_array_type, baseType: !111, size: 32, elements: !353)
!353 = !{!354}
!354 = !DISubrange(count: 4)
!355 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !356, line: 139)
!356 = !DIDerivedType(tag: DW_TAG_typedef, name: "wint_t", file: !357, line: 20, baseType: !10)
!357 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/wint_t.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!358 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !359, line: 141)
!359 = !DISubprogram(name: "btowc", scope: !360, file: !360, line: 284, type: !361, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!360 = !DIFile(filename: "/usr/include/wchar.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!361 = !DISubroutineType(types: !362)
!362 = !{!356, !82}
!363 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !364, line: 142)
!364 = !DISubprogram(name: "fgetwc", scope: !360, file: !360, line: 727, type: !365, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!365 = !DISubroutineType(types: !366)
!366 = !{!356, !367}
!367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !368, size: 64)
!368 = !DIDerivedType(tag: DW_TAG_typedef, name: "__FILE", file: !369, line: 5, baseType: !370)
!369 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/__FILE.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !369, line: 4, flags: DIFlagFwdDecl, identifier: "_ZTS8_IO_FILE")
!371 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !372, line: 143)
!372 = !DISubprogram(name: "fgetws", scope: !360, file: !360, line: 756, type: !373, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!373 = !DISubroutineType(types: !374)
!374 = !{!174, !173, !82, !375}
!375 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !367)
!376 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !377, line: 144)
!377 = !DISubprogram(name: "fputwc", scope: !360, file: !360, line: 741, type: !378, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!378 = !DISubroutineType(types: !379)
!379 = !{!356, !175, !367}
!380 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !381, line: 145)
!381 = !DISubprogram(name: "fputws", scope: !360, file: !360, line: 763, type: !382, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!382 = !DISubroutineType(types: !383)
!383 = !{!82, !220, !375}
!384 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !385, line: 146)
!385 = !DISubprogram(name: "fwide", scope: !360, file: !360, line: 573, type: !386, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!386 = !DISubroutineType(types: !387)
!387 = !{!82, !367, !82}
!388 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !389, line: 147)
!389 = !DISubprogram(name: "fwprintf", scope: !360, file: !360, line: 580, type: !390, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!390 = !DISubroutineType(types: !391)
!391 = !{!82, !375, !220, null}
!392 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !393, line: 148)
!393 = !DISubprogram(name: "fwscanf", scope: !360, file: !360, line: 621, type: !390, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!394 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !395, line: 149)
!395 = !DISubprogram(name: "getwc", scope: !360, file: !360, line: 728, type: !365, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!396 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !397, line: 150)
!397 = !DISubprogram(name: "getwchar", scope: !360, file: !360, line: 734, type: !398, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!398 = !DISubroutineType(types: !399)
!399 = !{!356}
!400 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !401, line: 151)
!401 = !DISubprogram(name: "mbrlen", scope: !360, file: !360, line: 307, type: !402, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!402 = !DISubroutineType(types: !403)
!403 = !{!125, !176, !125, !404}
!404 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !405)
!405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !340, size: 64)
!406 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !407, line: 152)
!407 = !DISubprogram(name: "mbrtowc", scope: !360, file: !360, line: 296, type: !408, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!408 = !DISubroutineType(types: !409)
!409 = !{!125, !173, !176, !125, !404}
!410 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !411, line: 153)
!411 = !DISubprogram(name: "mbsinit", scope: !360, file: !360, line: 292, type: !412, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!412 = !DISubroutineType(types: !413)
!413 = !{!82, !414}
!414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !415, size: 64)
!415 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !340)
!416 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !417, line: 154)
!417 = !DISubprogram(name: "mbsrtowcs", scope: !360, file: !360, line: 337, type: !418, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!418 = !DISubroutineType(types: !419)
!419 = !{!125, !173, !420, !125, !404}
!420 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !421)
!421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !109, size: 64)
!422 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !423, line: 155)
!423 = !DISubprogram(name: "putwc", scope: !360, file: !360, line: 742, type: !378, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!424 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !425, line: 156)
!425 = !DISubprogram(name: "putwchar", scope: !360, file: !360, line: 748, type: !426, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!426 = !DISubroutineType(types: !427)
!427 = !{!356, !175}
!428 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !429, line: 158)
!429 = !DISubprogram(name: "swprintf", scope: !360, file: !360, line: 590, type: !430, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!430 = !DISubroutineType(types: !431)
!431 = !{!82, !173, !125, !220, null}
!432 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !433, line: 160)
!433 = !DISubprogram(name: "swscanf", scope: !360, file: !360, line: 631, type: !434, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!434 = !DISubroutineType(types: !435)
!435 = !{!82, !220, !220, null}
!436 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !437, line: 161)
!437 = !DISubprogram(name: "ungetwc", scope: !360, file: !360, line: 771, type: !438, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!438 = !DISubroutineType(types: !439)
!439 = !{!356, !356, !367}
!440 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !441, line: 162)
!441 = !DISubprogram(name: "vfwprintf", scope: !360, file: !360, line: 598, type: !442, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!442 = !DISubroutineType(types: !443)
!443 = !{!82, !375, !220, !444}
!444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !445, size: 64)
!445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !2, size: 192, elements: !446, identifier: "_ZTS13__va_list_tag")
!446 = !{!447, !448, !449, !450}
!447 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !445, file: !2, baseType: !10, size: 32)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !445, file: !2, baseType: !10, size: 32, offset: 32)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !445, file: !2, baseType: !124, size: 64, offset: 64)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !445, file: !2, baseType: !124, size: 64, offset: 128)
!451 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !452, line: 164)
!452 = !DISubprogram(name: "vfwscanf", scope: !360, file: !360, line: 673, type: !442, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!453 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !454, line: 167)
!454 = !DISubprogram(name: "vswprintf", scope: !360, file: !360, line: 611, type: !455, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!455 = !DISubroutineType(types: !456)
!456 = !{!82, !173, !125, !220, !444}
!457 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !458, line: 170)
!458 = !DISubprogram(name: "vswscanf", scope: !360, file: !360, line: 685, type: !459, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!459 = !DISubroutineType(types: !460)
!460 = !{!82, !220, !220, !444}
!461 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !462, line: 172)
!462 = !DISubprogram(name: "vwprintf", scope: !360, file: !360, line: 606, type: !463, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!463 = !DISubroutineType(types: !464)
!464 = !{!82, !220, !444}
!465 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !466, line: 174)
!466 = !DISubprogram(name: "vwscanf", scope: !360, file: !360, line: 681, type: !463, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!467 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !468, line: 176)
!468 = !DISubprogram(name: "wcrtomb", scope: !360, file: !360, line: 301, type: !469, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!469 = !DISubroutineType(types: !470)
!470 = !{!125, !219, !175, !404}
!471 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !472, line: 177)
!472 = !DISubprogram(name: "wcscat", scope: !360, file: !360, line: 97, type: !473, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!473 = !DISubroutineType(types: !474)
!474 = !{!174, !173, !220}
!475 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !476, line: 178)
!476 = !DISubprogram(name: "wcscmp", scope: !360, file: !360, line: 106, type: !477, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!477 = !DISubroutineType(types: !478)
!478 = !{!82, !221, !221}
!479 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !480, line: 179)
!480 = !DISubprogram(name: "wcscoll", scope: !360, file: !360, line: 131, type: !477, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!481 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !482, line: 180)
!482 = !DISubprogram(name: "wcscpy", scope: !360, file: !360, line: 87, type: !473, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!483 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !484, line: 181)
!484 = !DISubprogram(name: "wcscspn", scope: !360, file: !360, line: 187, type: !485, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!485 = !DISubroutineType(types: !486)
!486 = !{!125, !221, !221}
!487 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !488, line: 182)
!488 = !DISubprogram(name: "wcsftime", scope: !360, file: !360, line: 835, type: !489, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!489 = !DISubroutineType(types: !490)
!490 = !{!125, !173, !125, !220, !491}
!491 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !492)
!492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !493, size: 64)
!493 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !494)
!494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tm", file: !360, line: 83, flags: DIFlagFwdDecl, identifier: "_ZTS2tm")
!495 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !496, line: 183)
!496 = !DISubprogram(name: "wcslen", scope: !360, file: !360, line: 222, type: !497, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!497 = !DISubroutineType(types: !498)
!498 = !{!125, !221}
!499 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !500, line: 184)
!500 = !DISubprogram(name: "wcsncat", scope: !360, file: !360, line: 101, type: !501, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!501 = !DISubroutineType(types: !502)
!502 = !{!174, !173, !220, !125}
!503 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !504, line: 185)
!504 = !DISubprogram(name: "wcsncmp", scope: !360, file: !360, line: 109, type: !505, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!505 = !DISubroutineType(types: !506)
!506 = !{!82, !221, !221, !125}
!507 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !508, line: 186)
!508 = !DISubprogram(name: "wcsncpy", scope: !360, file: !360, line: 92, type: !501, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!509 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !510, line: 187)
!510 = !DISubprogram(name: "wcsrtombs", scope: !360, file: !360, line: 343, type: !511, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!511 = !DISubroutineType(types: !512)
!512 = !{!125, !219, !513, !125, !404}
!513 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !514)
!514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !221, size: 64)
!515 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !516, line: 188)
!516 = !DISubprogram(name: "wcsspn", scope: !360, file: !360, line: 191, type: !485, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!517 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !518, line: 189)
!518 = !DISubprogram(name: "wcstod", scope: !360, file: !360, line: 377, type: !519, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!519 = !DISubroutineType(types: !520)
!520 = !{!108, !220, !521}
!521 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !522)
!522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !174, size: 64)
!523 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !524, line: 191)
!524 = !DISubprogram(name: "wcstof", scope: !360, file: !360, line: 382, type: !525, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!525 = !DISubroutineType(types: !526)
!526 = !{!262, !220, !521}
!527 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !528, line: 193)
!528 = !DISubprogram(name: "wcstok", scope: !360, file: !360, line: 217, type: !529, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!529 = !DISubroutineType(types: !530)
!530 = !{!174, !173, !220, !521}
!531 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !532, line: 194)
!532 = !DISubprogram(name: "wcstol", scope: !360, file: !360, line: 428, type: !533, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!533 = !DISubroutineType(types: !534)
!534 = !{!91, !220, !521, !82}
!535 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !536, line: 195)
!536 = !DISubprogram(name: "wcstoul", scope: !360, file: !360, line: 433, type: !537, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!537 = !DISubroutineType(types: !538)
!538 = !{!127, !220, !521, !82}
!539 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !540, line: 196)
!540 = !DISubprogram(name: "wcsxfrm", scope: !360, file: !360, line: 135, type: !541, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!541 = !DISubroutineType(types: !542)
!542 = !{!125, !173, !220, !125}
!543 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !544, line: 197)
!544 = !DISubprogram(name: "wctob", scope: !360, file: !360, line: 288, type: !545, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!545 = !DISubroutineType(types: !546)
!546 = !{!82, !356}
!547 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !548, line: 198)
!548 = !DISubprogram(name: "wmemcmp", scope: !360, file: !360, line: 258, type: !505, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!549 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !550, line: 199)
!550 = !DISubprogram(name: "wmemcpy", scope: !360, file: !360, line: 262, type: !501, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!551 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !552, line: 200)
!552 = !DISubprogram(name: "wmemmove", scope: !360, file: !360, line: 267, type: !553, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!553 = !DISubroutineType(types: !554)
!554 = !{!174, !174, !221, !125}
!555 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !556, line: 201)
!556 = !DISubprogram(name: "wmemset", scope: !360, file: !360, line: 271, type: !557, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!557 = !DISubroutineType(types: !558)
!558 = !{!174, !174, !175, !125}
!559 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !560, line: 202)
!560 = !DISubprogram(name: "wprintf", scope: !360, file: !360, line: 587, type: !561, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!561 = !DISubroutineType(types: !562)
!562 = !{!82, !220, null}
!563 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !564, line: 203)
!564 = !DISubprogram(name: "wscanf", scope: !360, file: !360, line: 628, type: !561, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!565 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !566, line: 204)
!566 = !DISubprogram(name: "wcschr", scope: !360, file: !360, line: 164, type: !567, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!567 = !DISubroutineType(types: !568)
!568 = !{!174, !221, !175}
!569 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !570, line: 205)
!570 = !DISubprogram(name: "wcspbrk", scope: !360, file: !360, line: 201, type: !571, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!571 = !DISubroutineType(types: !572)
!572 = !{!174, !221, !221}
!573 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !574, line: 206)
!574 = !DISubprogram(name: "wcsrchr", scope: !360, file: !360, line: 174, type: !567, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!575 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !576, line: 207)
!576 = !DISubprogram(name: "wcsstr", scope: !360, file: !360, line: 212, type: !571, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!577 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !578, line: 208)
!578 = !DISubprogram(name: "wmemchr", scope: !360, file: !360, line: 253, type: !579, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!579 = !DISubroutineType(types: !580)
!580 = !{!174, !221, !175, !125}
!581 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !582, line: 248)
!582 = !DISubprogram(name: "wcstold", scope: !360, file: !360, line: 384, type: !583, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!583 = !DISubroutineType(types: !584)
!584 = !{!267, !220, !521}
!585 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !586, line: 257)
!586 = !DISubprogram(name: "wcstoll", scope: !360, file: !360, line: 441, type: !587, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!587 = !DISubroutineType(types: !588)
!588 = !{!233, !220, !521, !82}
!589 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !590, line: 258)
!590 = !DISubprogram(name: "wcstoull", scope: !360, file: !360, line: 448, type: !591, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!591 = !DISubroutineType(types: !592)
!592 = !{!257, !220, !521, !82}
!593 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !582, line: 264)
!594 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !586, line: 265)
!595 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !590, line: 266)
!596 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !524, line: 280)
!597 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !452, line: 283)
!598 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !458, line: 286)
!599 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !466, line: 289)
!600 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !582, line: 293)
!601 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !586, line: 294)
!602 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !590, line: 295)
!603 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !604, line: 48)
!604 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !9, line: 235, baseType: !605)
!605 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!606 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !607, line: 49)
!607 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !9, line: 216, baseType: !608)
!608 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!609 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !610, line: 50)
!610 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !9, line: 178, baseType: !82)
!611 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !612, line: 51)
!612 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !9, line: 107, baseType: !91)
!613 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !614, line: 53)
!614 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_fast8_t", file: !9, line: 245, baseType: !604)
!615 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !616, line: 54)
!616 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_fast16_t", file: !9, line: 228, baseType: !607)
!617 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !618, line: 55)
!618 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_fast32_t", file: !9, line: 197, baseType: !610)
!619 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !620, line: 56)
!620 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_fast64_t", file: !9, line: 123, baseType: !612)
!621 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !622, line: 58)
!622 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_least8_t", file: !9, line: 243, baseType: !604)
!623 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !624, line: 59)
!624 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_least16_t", file: !9, line: 226, baseType: !607)
!625 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !626, line: 60)
!626 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_least32_t", file: !9, line: 195, baseType: !610)
!627 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !628, line: 61)
!628 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_least64_t", file: !9, line: 121, baseType: !612)
!629 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !630, line: 63)
!630 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !9, line: 276, baseType: !91)
!631 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !632, line: 64)
!632 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !9, line: 263, baseType: !612)
!633 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !62, line: 66)
!634 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !28, line: 67)
!635 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !8, line: 68)
!636 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !637, line: 69)
!637 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !9, line: 109, baseType: !127)
!638 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !639, line: 71)
!639 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_fast8_t", file: !9, line: 246, baseType: !62)
!640 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !641, line: 72)
!641 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_fast16_t", file: !9, line: 229, baseType: !28)
!642 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !643, line: 73)
!643 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_fast32_t", file: !9, line: 198, baseType: !8)
!644 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !645, line: 74)
!645 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_fast64_t", file: !9, line: 124, baseType: !637)
!646 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !647, line: 76)
!647 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_least8_t", file: !9, line: 244, baseType: !62)
!648 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !649, line: 77)
!649 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_least16_t", file: !9, line: 227, baseType: !28)
!650 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !651, line: 78)
!651 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_least32_t", file: !9, line: 196, baseType: !8)
!652 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !653, line: 79)
!653 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_least64_t", file: !9, line: 122, baseType: !637)
!654 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !655, line: 81)
!655 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !9, line: 277, baseType: !127)
!656 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !657, line: 82)
!657 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !9, line: 270, baseType: !637)
!658 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !659, line: 44)
!659 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", scope: !75, file: !76, line: 231, baseType: !127)
!660 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !661, line: 45)
!661 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", scope: !75, file: !76, line: 232, baseType: !91)
!662 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !663, line: 53)
!663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lconv", file: !664, line: 51, flags: DIFlagFwdDecl, identifier: "_ZTS5lconv")
!664 = !DIFile(filename: "/usr/include/locale.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!665 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !666, line: 54)
!666 = !DISubprogram(name: "setlocale", scope: !664, file: !664, line: 122, type: !667, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!667 = !DISubroutineType(types: !668)
!668 = !{!152, !82, !109}
!669 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !670, line: 55)
!670 = !DISubprogram(name: "localeconv", scope: !664, file: !664, line: 125, type: !671, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!671 = !DISubroutineType(types: !672)
!672 = !{!673}
!673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !663, size: 64)
!674 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !675, line: 64)
!675 = !DISubprogram(name: "isalnum", scope: !676, file: !676, line: 108, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!676 = !DIFile(filename: "/usr/include/ctype.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!677 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !678, line: 65)
!678 = !DISubprogram(name: "isalpha", scope: !676, file: !676, line: 109, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!679 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !680, line: 66)
!680 = !DISubprogram(name: "iscntrl", scope: !676, file: !676, line: 110, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!681 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !682, line: 67)
!682 = !DISubprogram(name: "isdigit", scope: !676, file: !676, line: 111, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!683 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !684, line: 68)
!684 = !DISubprogram(name: "isgraph", scope: !676, file: !676, line: 113, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!685 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !686, line: 69)
!686 = !DISubprogram(name: "islower", scope: !676, file: !676, line: 112, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!687 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !688, line: 70)
!688 = !DISubprogram(name: "isprint", scope: !676, file: !676, line: 114, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!689 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !690, line: 71)
!690 = !DISubprogram(name: "ispunct", scope: !676, file: !676, line: 115, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!691 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !692, line: 72)
!692 = !DISubprogram(name: "isspace", scope: !676, file: !676, line: 116, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!693 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !694, line: 73)
!694 = !DISubprogram(name: "isupper", scope: !676, file: !676, line: 117, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!695 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !696, line: 74)
!696 = !DISubprogram(name: "isxdigit", scope: !676, file: !676, line: 118, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!697 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !698, line: 75)
!698 = !DISubprogram(name: "tolower", scope: !676, file: !676, line: 122, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!699 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !700, line: 76)
!700 = !DISubprogram(name: "toupper", scope: !676, file: !676, line: 125, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!701 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !702, line: 87)
!702 = !DISubprogram(name: "isblank", scope: !676, file: !676, line: 130, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!703 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !704, line: 98)
!704 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !705, line: 7, baseType: !370)
!705 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!706 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !707, line: 99)
!707 = !DIDerivedType(tag: DW_TAG_typedef, name: "fpos_t", file: !708, line: 78, baseType: !709)
!708 = !DIFile(filename: "/usr/include/stdio.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!709 = !DIDerivedType(tag: DW_TAG_typedef, name: "_G_fpos_t", file: !710, line: 30, baseType: !711)
!710 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/_G_config.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!711 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !710, line: 26, flags: DIFlagFwdDecl, identifier: "_ZTS9_G_fpos_t")
!712 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !713, line: 101)
!713 = !DISubprogram(name: "clearerr", scope: !708, file: !708, line: 757, type: !714, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!714 = !DISubroutineType(types: !715)
!715 = !{null, !716}
!716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !704, size: 64)
!717 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !718, line: 102)
!718 = !DISubprogram(name: "fclose", scope: !708, file: !708, line: 199, type: !719, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!719 = !DISubroutineType(types: !720)
!720 = !{!82, !716}
!721 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !722, line: 103)
!722 = !DISubprogram(name: "feof", scope: !708, file: !708, line: 759, type: !719, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!723 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !724, line: 104)
!724 = !DISubprogram(name: "ferror", scope: !708, file: !708, line: 761, type: !719, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!725 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !726, line: 105)
!726 = !DISubprogram(name: "fflush", scope: !708, file: !708, line: 204, type: !719, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!727 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !728, line: 106)
!728 = !DISubprogram(name: "fgetc", scope: !708, file: !708, line: 477, type: !719, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!729 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !730, line: 107)
!730 = !DISubprogram(name: "fgetpos", scope: !708, file: !708, line: 731, type: !731, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!731 = !DISubroutineType(types: !732)
!732 = !{!82, !733, !734}
!733 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !716)
!734 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !735)
!735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !707, size: 64)
!736 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !737, line: 108)
!737 = !DISubprogram(name: "fgets", scope: !708, file: !708, line: 564, type: !738, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!738 = !DISubroutineType(types: !739)
!739 = !{!152, !219, !82, !733}
!740 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !741, line: 109)
!741 = !DISubprogram(name: "fopen", scope: !708, file: !708, line: 232, type: !742, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!742 = !DISubroutineType(types: !743)
!743 = !{!716, !176, !176}
!744 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !745, line: 110)
!745 = !DISubprogram(name: "fprintf", scope: !708, file: !708, line: 312, type: !746, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!746 = !DISubroutineType(types: !747)
!747 = !{!82, !733, !176, null}
!748 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !749, line: 111)
!749 = !DISubprogram(name: "fputc", scope: !708, file: !708, line: 517, type: !750, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!750 = !DISubroutineType(types: !751)
!751 = !{!82, !82, !716}
!752 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !753, line: 112)
!753 = !DISubprogram(name: "fputs", scope: !708, file: !708, line: 626, type: !754, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!754 = !DISubroutineType(types: !755)
!755 = !{!82, !176, !733}
!756 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !757, line: 113)
!757 = !DISubprogram(name: "fread", scope: !708, file: !708, line: 646, type: !758, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!758 = !DISubroutineType(types: !759)
!759 = !{!125, !760, !125, !125, !733}
!760 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !124)
!761 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !762, line: 114)
!762 = !DISubprogram(name: "freopen", scope: !708, file: !708, line: 238, type: !763, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!763 = !DISubroutineType(types: !764)
!764 = !{!716, !176, !176, !733}
!765 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !766, line: 115)
!766 = !DISubprogram(name: "fscanf", scope: !708, file: !708, line: 377, type: !746, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!767 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !768, line: 116)
!768 = !DISubprogram(name: "fseek", scope: !708, file: !708, line: 684, type: !769, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!769 = !DISubroutineType(types: !770)
!770 = !{!82, !716, !91, !82}
!771 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !772, line: 117)
!772 = !DISubprogram(name: "fsetpos", scope: !708, file: !708, line: 736, type: !773, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!773 = !DISubroutineType(types: !774)
!774 = !{!82, !716, !775}
!775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !776, size: 64)
!776 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !707)
!777 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !778, line: 118)
!778 = !DISubprogram(name: "ftell", scope: !708, file: !708, line: 689, type: !779, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!779 = !DISubroutineType(types: !780)
!780 = !{!91, !716}
!781 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !782, line: 119)
!782 = !DISubprogram(name: "fwrite", scope: !708, file: !708, line: 652, type: !783, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!783 = !DISubroutineType(types: !784)
!784 = !{!125, !785, !125, !125, !733}
!785 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !68)
!786 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !787, line: 120)
!787 = !DISubprogram(name: "getc", scope: !708, file: !708, line: 478, type: !719, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!788 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !789, line: 121)
!789 = !DISubprogram(name: "getchar", scope: !708, file: !708, line: 484, type: !189, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!790 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !791, line: 124)
!791 = !DISubprogram(name: "gets", scope: !708, file: !708, line: 577, type: !792, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!792 = !DISubroutineType(types: !793)
!793 = !{!152, !152}
!794 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !795, line: 126)
!795 = !DISubprogram(name: "perror", scope: !708, file: !708, line: 775, type: !796, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!796 = !DISubroutineType(types: !797)
!797 = !{null, !109}
!798 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !799, line: 127)
!799 = !DISubprogram(name: "printf", scope: !708, file: !708, line: 318, type: !800, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!800 = !DISubroutineType(types: !801)
!801 = !{!82, !176, null}
!802 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !803, line: 128)
!803 = !DISubprogram(name: "putc", scope: !708, file: !708, line: 518, type: !750, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!804 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !805, line: 129)
!805 = !DISubprogram(name: "putchar", scope: !708, file: !708, line: 524, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!806 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !807, line: 130)
!807 = !DISubprogram(name: "puts", scope: !708, file: !708, line: 632, type: !114, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!808 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !809, line: 131)
!809 = !DISubprogram(name: "remove", scope: !708, file: !708, line: 144, type: !114, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!810 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !811, line: 132)
!811 = !DISubprogram(name: "rename", scope: !708, file: !708, line: 146, type: !812, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!812 = !DISubroutineType(types: !813)
!813 = !{!82, !109, !109}
!814 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !815, line: 133)
!815 = !DISubprogram(name: "rewind", scope: !708, file: !708, line: 694, type: !714, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!816 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !817, line: 134)
!817 = !DISubprogram(name: "scanf", scope: !708, file: !708, line: 383, type: !800, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!818 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !819, line: 135)
!819 = !DISubprogram(name: "setbuf", scope: !708, file: !708, line: 290, type: !820, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!820 = !DISubroutineType(types: !821)
!821 = !{null, !733, !219}
!822 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !823, line: 136)
!823 = !DISubprogram(name: "setvbuf", scope: !708, file: !708, line: 294, type: !824, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!824 = !DISubroutineType(types: !825)
!825 = !{!82, !733, !219, !82, !125}
!826 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !827, line: 137)
!827 = !DISubprogram(name: "sprintf", scope: !708, file: !708, line: 320, type: !828, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!828 = !DISubroutineType(types: !829)
!829 = !{!82, !219, !176, null}
!830 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !831, line: 138)
!831 = !DISubprogram(name: "sscanf", scope: !708, file: !708, line: 385, type: !832, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!832 = !DISubroutineType(types: !833)
!833 = !{!82, !176, !176, null}
!834 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !835, line: 139)
!835 = !DISubprogram(name: "tmpfile", scope: !708, file: !708, line: 159, type: !836, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!836 = !DISubroutineType(types: !837)
!837 = !{!716}
!838 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !839, line: 141)
!839 = !DISubprogram(name: "tmpnam", scope: !708, file: !708, line: 173, type: !792, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!840 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !841, line: 143)
!841 = !DISubprogram(name: "ungetc", scope: !708, file: !708, line: 639, type: !750, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!842 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !843, line: 144)
!843 = !DISubprogram(name: "vfprintf", scope: !708, file: !708, line: 327, type: !844, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!844 = !DISubroutineType(types: !845)
!845 = !{!82, !733, !176, !444}
!846 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !847, line: 145)
!847 = !DISubprogram(name: "vprintf", scope: !708, file: !708, line: 333, type: !848, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!848 = !DISubroutineType(types: !849)
!849 = !{!82, !176, !444}
!850 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !851, line: 146)
!851 = !DISubprogram(name: "vsprintf", scope: !708, file: !708, line: 335, type: !852, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!852 = !DISubroutineType(types: !853)
!853 = !{!82, !219, !176, !444}
!854 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !855, line: 175)
!855 = !DISubprogram(name: "snprintf", scope: !708, file: !708, line: 340, type: !856, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!856 = !DISubroutineType(types: !857)
!857 = !{!82, !219, !125, !176, null}
!858 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !859, line: 176)
!859 = !DISubprogram(name: "vfscanf", scope: !708, file: !708, line: 420, type: !844, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!860 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !861, line: 177)
!861 = !DISubprogram(name: "vscanf", scope: !708, file: !708, line: 428, type: !848, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!862 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !863, line: 178)
!863 = !DISubprogram(name: "vsnprintf", scope: !708, file: !708, line: 344, type: !864, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!864 = !DISubroutineType(types: !865)
!865 = !{!82, !219, !125, !176, !444}
!866 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !867, line: 179)
!867 = !DISubprogram(name: "vsscanf", scope: !708, file: !708, line: 432, type: !868, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!868 = !DISubroutineType(types: !869)
!869 = !{!82, !176, !176, !444}
!870 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !855, line: 185)
!871 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !859, line: 186)
!872 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !861, line: 187)
!873 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !863, line: 188)
!874 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !867, line: 189)
!875 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !876, line: 83)
!876 = !DISubprogram(name: "acos", scope: !877, file: !877, line: 53, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!877 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/mathcalls.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!878 = !DISubroutineType(types: !879)
!879 = !{!108, !108}
!880 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !881, line: 102)
!881 = !DISubprogram(name: "asin", scope: !877, file: !877, line: 55, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!882 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !883, line: 121)
!883 = !DISubprogram(name: "atan", scope: !877, file: !877, line: 57, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!884 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !885, line: 140)
!885 = !DISubprogram(name: "atan2", scope: !877, file: !877, line: 59, type: !886, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!886 = !DISubroutineType(types: !887)
!887 = !{!108, !108, !108}
!888 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !889, line: 161)
!889 = !DISubprogram(name: "ceil", scope: !877, file: !877, line: 159, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!890 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !891, line: 180)
!891 = !DISubprogram(name: "cos", scope: !877, file: !877, line: 62, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!892 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !893, line: 199)
!893 = !DISubprogram(name: "cosh", scope: !877, file: !877, line: 71, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!894 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !895, line: 218)
!895 = !DISubprogram(name: "exp", scope: !877, file: !877, line: 95, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!896 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !897, line: 237)
!897 = !DISubprogram(name: "fabs", scope: !877, file: !877, line: 162, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!898 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !899, line: 256)
!899 = !DISubprogram(name: "floor", scope: !877, file: !877, line: 165, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!900 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !901, line: 275)
!901 = !DISubprogram(name: "fmod", scope: !877, file: !877, line: 168, type: !886, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!902 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !903, line: 296)
!903 = !DISubprogram(name: "frexp", scope: !877, file: !877, line: 98, type: !904, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!904 = !DISubroutineType(types: !905)
!905 = !{!108, !108, !906}
!906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !82, size: 64)
!907 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !908, line: 315)
!908 = !DISubprogram(name: "ldexp", scope: !877, file: !877, line: 101, type: !909, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!909 = !DISubroutineType(types: !910)
!910 = !{!108, !108, !82}
!911 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !912, line: 334)
!912 = !DISubprogram(name: "log", scope: !877, file: !877, line: 104, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!913 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !914, line: 353)
!914 = !DISubprogram(name: "log10", scope: !877, file: !877, line: 107, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!915 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !916, line: 372)
!916 = !DISubprogram(name: "modf", scope: !877, file: !877, line: 110, type: !917, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!917 = !DISubroutineType(types: !918)
!918 = !{!108, !108, !919}
!919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !108, size: 64)
!920 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !921, line: 384)
!921 = !DISubprogram(name: "pow", scope: !877, file: !877, line: 140, type: !886, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!922 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !923, line: 421)
!923 = !DISubprogram(name: "sin", scope: !877, file: !877, line: 64, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!924 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !925, line: 440)
!925 = !DISubprogram(name: "sinh", scope: !877, file: !877, line: 73, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!926 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !927, line: 459)
!927 = !DISubprogram(name: "sqrt", scope: !877, file: !877, line: 143, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!928 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !929, line: 478)
!929 = !DISubprogram(name: "tan", scope: !877, file: !877, line: 66, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!930 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !931, line: 497)
!931 = !DISubprogram(name: "tanh", scope: !877, file: !877, line: 75, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!932 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !933, line: 1080)
!933 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_t", file: !934, line: 150, baseType: !108)
!934 = !DIFile(filename: "/usr/include/math.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!935 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !936, line: 1081)
!936 = !DIDerivedType(tag: DW_TAG_typedef, name: "float_t", file: !934, line: 149, baseType: !262)
!937 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !938, line: 1084)
!938 = !DISubprogram(name: "acosh", scope: !877, file: !877, line: 85, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!939 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !940, line: 1085)
!940 = !DISubprogram(name: "acoshf", scope: !877, file: !877, line: 85, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!941 = !DISubroutineType(types: !942)
!942 = !{!262, !262}
!943 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !944, line: 1086)
!944 = !DISubprogram(name: "acoshl", scope: !877, file: !877, line: 85, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!945 = !DISubroutineType(types: !946)
!946 = !{!267, !267}
!947 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !948, line: 1088)
!948 = !DISubprogram(name: "asinh", scope: !877, file: !877, line: 87, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!949 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !950, line: 1089)
!950 = !DISubprogram(name: "asinhf", scope: !877, file: !877, line: 87, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!951 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !952, line: 1090)
!952 = !DISubprogram(name: "asinhl", scope: !877, file: !877, line: 87, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!953 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !954, line: 1092)
!954 = !DISubprogram(name: "atanh", scope: !877, file: !877, line: 89, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!955 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !956, line: 1093)
!956 = !DISubprogram(name: "atanhf", scope: !877, file: !877, line: 89, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!957 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !958, line: 1094)
!958 = !DISubprogram(name: "atanhl", scope: !877, file: !877, line: 89, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!959 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !960, line: 1096)
!960 = !DISubprogram(name: "cbrt", scope: !877, file: !877, line: 152, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!961 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !962, line: 1097)
!962 = !DISubprogram(name: "cbrtf", scope: !877, file: !877, line: 152, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!963 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !964, line: 1098)
!964 = !DISubprogram(name: "cbrtl", scope: !877, file: !877, line: 152, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!965 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !966, line: 1100)
!966 = !DISubprogram(name: "copysign", scope: !877, file: !877, line: 196, type: !886, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!967 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !968, line: 1101)
!968 = !DISubprogram(name: "copysignf", scope: !877, file: !877, line: 196, type: !969, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!969 = !DISubroutineType(types: !970)
!970 = !{!262, !262, !262}
!971 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !972, line: 1102)
!972 = !DISubprogram(name: "copysignl", scope: !877, file: !877, line: 196, type: !973, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!973 = !DISubroutineType(types: !974)
!974 = !{!267, !267, !267}
!975 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !976, line: 1104)
!976 = !DISubprogram(name: "erf", scope: !877, file: !877, line: 228, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!977 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !978, line: 1105)
!978 = !DISubprogram(name: "erff", scope: !877, file: !877, line: 228, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!979 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !980, line: 1106)
!980 = !DISubprogram(name: "erfl", scope: !877, file: !877, line: 228, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!981 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !982, line: 1108)
!982 = !DISubprogram(name: "erfc", scope: !877, file: !877, line: 229, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!983 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !984, line: 1109)
!984 = !DISubprogram(name: "erfcf", scope: !877, file: !877, line: 229, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!985 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !986, line: 1110)
!986 = !DISubprogram(name: "erfcl", scope: !877, file: !877, line: 229, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!987 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !988, line: 1112)
!988 = !DISubprogram(name: "exp2", scope: !877, file: !877, line: 130, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!989 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !990, line: 1113)
!990 = !DISubprogram(name: "exp2f", scope: !877, file: !877, line: 130, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!991 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !992, line: 1114)
!992 = !DISubprogram(name: "exp2l", scope: !877, file: !877, line: 130, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!993 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !994, line: 1116)
!994 = !DISubprogram(name: "expm1", scope: !877, file: !877, line: 119, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!995 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !996, line: 1117)
!996 = !DISubprogram(name: "expm1f", scope: !877, file: !877, line: 119, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!997 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !998, line: 1118)
!998 = !DISubprogram(name: "expm1l", scope: !877, file: !877, line: 119, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!999 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1000, line: 1120)
!1000 = !DISubprogram(name: "fdim", scope: !877, file: !877, line: 326, type: !886, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1001 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1002, line: 1121)
!1002 = !DISubprogram(name: "fdimf", scope: !877, file: !877, line: 326, type: !969, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1003 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1004, line: 1122)
!1004 = !DISubprogram(name: "fdiml", scope: !877, file: !877, line: 326, type: !973, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1005 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1006, line: 1124)
!1006 = !DISubprogram(name: "fma", scope: !877, file: !877, line: 335, type: !1007, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1007 = !DISubroutineType(types: !1008)
!1008 = !{!108, !108, !108, !108}
!1009 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1010, line: 1125)
!1010 = !DISubprogram(name: "fmaf", scope: !877, file: !877, line: 335, type: !1011, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1011 = !DISubroutineType(types: !1012)
!1012 = !{!262, !262, !262, !262}
!1013 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1014, line: 1126)
!1014 = !DISubprogram(name: "fmal", scope: !877, file: !877, line: 335, type: !1015, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1015 = !DISubroutineType(types: !1016)
!1016 = !{!267, !267, !267, !267}
!1017 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1018, line: 1128)
!1018 = !DISubprogram(name: "fmax", scope: !877, file: !877, line: 329, type: !886, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1019 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1020, line: 1129)
!1020 = !DISubprogram(name: "fmaxf", scope: !877, file: !877, line: 329, type: !969, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1021 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1022, line: 1130)
!1022 = !DISubprogram(name: "fmaxl", scope: !877, file: !877, line: 329, type: !973, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1023 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1024, line: 1132)
!1024 = !DISubprogram(name: "fmin", scope: !877, file: !877, line: 332, type: !886, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1025 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1026, line: 1133)
!1026 = !DISubprogram(name: "fminf", scope: !877, file: !877, line: 332, type: !969, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1027 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1028, line: 1134)
!1028 = !DISubprogram(name: "fminl", scope: !877, file: !877, line: 332, type: !973, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1029 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1030, line: 1136)
!1030 = !DISubprogram(name: "hypot", scope: !877, file: !877, line: 147, type: !886, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1031 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1032, line: 1137)
!1032 = !DISubprogram(name: "hypotf", scope: !877, file: !877, line: 147, type: !969, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1033 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1034, line: 1138)
!1034 = !DISubprogram(name: "hypotl", scope: !877, file: !877, line: 147, type: !973, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1035 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1036, line: 1140)
!1036 = !DISubprogram(name: "ilogb", scope: !877, file: !877, line: 280, type: !1037, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1037 = !DISubroutineType(types: !1038)
!1038 = !{!82, !108}
!1039 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1040, line: 1141)
!1040 = !DISubprogram(name: "ilogbf", scope: !877, file: !877, line: 280, type: !1041, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1041 = !DISubroutineType(types: !1042)
!1042 = !{!82, !262}
!1043 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1044, line: 1142)
!1044 = !DISubprogram(name: "ilogbl", scope: !877, file: !877, line: 280, type: !1045, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1045 = !DISubroutineType(types: !1046)
!1046 = !{!82, !267}
!1047 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1048, line: 1144)
!1048 = !DISubprogram(name: "lgamma", scope: !877, file: !877, line: 230, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1049 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1050, line: 1145)
!1050 = !DISubprogram(name: "lgammaf", scope: !877, file: !877, line: 230, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1051 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1052, line: 1146)
!1052 = !DISubprogram(name: "lgammal", scope: !877, file: !877, line: 230, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1053 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1054, line: 1149)
!1054 = !DISubprogram(name: "llrint", scope: !877, file: !877, line: 316, type: !1055, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1055 = !DISubroutineType(types: !1056)
!1056 = !{!233, !108}
!1057 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1058, line: 1150)
!1058 = !DISubprogram(name: "llrintf", scope: !877, file: !877, line: 316, type: !1059, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1059 = !DISubroutineType(types: !1060)
!1060 = !{!233, !262}
!1061 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1062, line: 1151)
!1062 = !DISubprogram(name: "llrintl", scope: !877, file: !877, line: 316, type: !1063, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1063 = !DISubroutineType(types: !1064)
!1064 = !{!233, !267}
!1065 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1066, line: 1153)
!1066 = !DISubprogram(name: "llround", scope: !877, file: !877, line: 322, type: !1055, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1067 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1068, line: 1154)
!1068 = !DISubprogram(name: "llroundf", scope: !877, file: !877, line: 322, type: !1059, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1069 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1070, line: 1155)
!1070 = !DISubprogram(name: "llroundl", scope: !877, file: !877, line: 322, type: !1063, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1071 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1072, line: 1158)
!1072 = !DISubprogram(name: "log1p", scope: !877, file: !877, line: 122, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1073 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1074, line: 1159)
!1074 = !DISubprogram(name: "log1pf", scope: !877, file: !877, line: 122, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1075 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1076, line: 1160)
!1076 = !DISubprogram(name: "log1pl", scope: !877, file: !877, line: 122, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1077 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1078, line: 1162)
!1078 = !DISubprogram(name: "log2", scope: !877, file: !877, line: 133, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1079 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1080, line: 1163)
!1080 = !DISubprogram(name: "log2f", scope: !877, file: !877, line: 133, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1081 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1082, line: 1164)
!1082 = !DISubprogram(name: "log2l", scope: !877, file: !877, line: 133, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1083 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1084, line: 1166)
!1084 = !DISubprogram(name: "logb", scope: !877, file: !877, line: 125, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1085 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1086, line: 1167)
!1086 = !DISubprogram(name: "logbf", scope: !877, file: !877, line: 125, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1087 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1088, line: 1168)
!1088 = !DISubprogram(name: "logbl", scope: !877, file: !877, line: 125, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1089 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1090, line: 1170)
!1090 = !DISubprogram(name: "lrint", scope: !877, file: !877, line: 314, type: !1091, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1091 = !DISubroutineType(types: !1092)
!1092 = !{!91, !108}
!1093 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1094, line: 1171)
!1094 = !DISubprogram(name: "lrintf", scope: !877, file: !877, line: 314, type: !1095, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1095 = !DISubroutineType(types: !1096)
!1096 = !{!91, !262}
!1097 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1098, line: 1172)
!1098 = !DISubprogram(name: "lrintl", scope: !877, file: !877, line: 314, type: !1099, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1099 = !DISubroutineType(types: !1100)
!1100 = !{!91, !267}
!1101 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1102, line: 1174)
!1102 = !DISubprogram(name: "lround", scope: !877, file: !877, line: 320, type: !1091, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1103 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1104, line: 1175)
!1104 = !DISubprogram(name: "lroundf", scope: !877, file: !877, line: 320, type: !1095, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1105 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1106, line: 1176)
!1106 = !DISubprogram(name: "lroundl", scope: !877, file: !877, line: 320, type: !1099, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1107 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1108, line: 1178)
!1108 = !DISubprogram(name: "nan", scope: !877, file: !877, line: 201, type: !106, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1109 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1110, line: 1179)
!1110 = !DISubprogram(name: "nanf", scope: !877, file: !877, line: 201, type: !1111, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1111 = !DISubroutineType(types: !1112)
!1112 = !{!262, !109}
!1113 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1114, line: 1180)
!1114 = !DISubprogram(name: "nanl", scope: !877, file: !877, line: 201, type: !1115, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1115 = !DISubroutineType(types: !1116)
!1116 = !{!267, !109}
!1117 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1118, line: 1182)
!1118 = !DISubprogram(name: "nearbyint", scope: !877, file: !877, line: 294, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1119 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1120, line: 1183)
!1120 = !DISubprogram(name: "nearbyintf", scope: !877, file: !877, line: 294, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1121 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1122, line: 1184)
!1122 = !DISubprogram(name: "nearbyintl", scope: !877, file: !877, line: 294, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1123 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1124, line: 1186)
!1124 = !DISubprogram(name: "nextafter", scope: !877, file: !877, line: 259, type: !886, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1125 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1126, line: 1187)
!1126 = !DISubprogram(name: "nextafterf", scope: !877, file: !877, line: 259, type: !969, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1127 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1128, line: 1188)
!1128 = !DISubprogram(name: "nextafterl", scope: !877, file: !877, line: 259, type: !973, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1129 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1130, line: 1190)
!1130 = !DISubprogram(name: "nexttoward", scope: !877, file: !877, line: 261, type: !1131, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1131 = !DISubroutineType(types: !1132)
!1132 = !{!108, !108, !267}
!1133 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1134, line: 1191)
!1134 = !DISubprogram(name: "nexttowardf", scope: !877, file: !877, line: 261, type: !1135, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1135 = !DISubroutineType(types: !1136)
!1136 = !{!262, !262, !267}
!1137 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1138, line: 1192)
!1138 = !DISubprogram(name: "nexttowardl", scope: !877, file: !877, line: 261, type: !973, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1139 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1140, line: 1194)
!1140 = !DISubprogram(name: "remainder", scope: !877, file: !877, line: 272, type: !886, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1141 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1142, line: 1195)
!1142 = !DISubprogram(name: "remainderf", scope: !877, file: !877, line: 272, type: !969, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1143 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1144, line: 1196)
!1144 = !DISubprogram(name: "remainderl", scope: !877, file: !877, line: 272, type: !973, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1145 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1146, line: 1198)
!1146 = !DISubprogram(name: "remquo", scope: !877, file: !877, line: 307, type: !1147, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1147 = !DISubroutineType(types: !1148)
!1148 = !{!108, !108, !108, !906}
!1149 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1150, line: 1199)
!1150 = !DISubprogram(name: "remquof", scope: !877, file: !877, line: 307, type: !1151, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1151 = !DISubroutineType(types: !1152)
!1152 = !{!262, !262, !262, !906}
!1153 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1154, line: 1200)
!1154 = !DISubprogram(name: "remquol", scope: !877, file: !877, line: 307, type: !1155, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1155 = !DISubroutineType(types: !1156)
!1156 = !{!267, !267, !267, !906}
!1157 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1158, line: 1202)
!1158 = !DISubprogram(name: "rint", scope: !877, file: !877, line: 256, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1159 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1160, line: 1203)
!1160 = !DISubprogram(name: "rintf", scope: !877, file: !877, line: 256, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1161 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1162, line: 1204)
!1162 = !DISubprogram(name: "rintl", scope: !877, file: !877, line: 256, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1163 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1164, line: 1206)
!1164 = !DISubprogram(name: "round", scope: !877, file: !877, line: 298, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1165 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1166, line: 1207)
!1166 = !DISubprogram(name: "roundf", scope: !877, file: !877, line: 298, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1167 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1168, line: 1208)
!1168 = !DISubprogram(name: "roundl", scope: !877, file: !877, line: 298, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1169 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1170, line: 1210)
!1170 = !DISubprogram(name: "scalbln", scope: !877, file: !877, line: 290, type: !1171, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1171 = !DISubroutineType(types: !1172)
!1172 = !{!108, !108, !91}
!1173 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1174, line: 1211)
!1174 = !DISubprogram(name: "scalblnf", scope: !877, file: !877, line: 290, type: !1175, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1175 = !DISubroutineType(types: !1176)
!1176 = !{!262, !262, !91}
!1177 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1178, line: 1212)
!1178 = !DISubprogram(name: "scalblnl", scope: !877, file: !877, line: 290, type: !1179, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1179 = !DISubroutineType(types: !1180)
!1180 = !{!267, !267, !91}
!1181 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1182, line: 1214)
!1182 = !DISubprogram(name: "scalbn", scope: !877, file: !877, line: 276, type: !909, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1183 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1184, line: 1215)
!1184 = !DISubprogram(name: "scalbnf", scope: !877, file: !877, line: 276, type: !1185, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1185 = !DISubroutineType(types: !1186)
!1186 = !{!262, !262, !82}
!1187 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1188, line: 1216)
!1188 = !DISubprogram(name: "scalbnl", scope: !877, file: !877, line: 276, type: !1189, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1189 = !DISubroutineType(types: !1190)
!1190 = !{!267, !267, !82}
!1191 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1192, line: 1218)
!1192 = !DISubprogram(name: "tgamma", scope: !877, file: !877, line: 235, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1193 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1194, line: 1219)
!1194 = !DISubprogram(name: "tgammaf", scope: !877, file: !877, line: 235, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1195 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1196, line: 1220)
!1196 = !DISubprogram(name: "tgammal", scope: !877, file: !877, line: 235, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1197 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1198, line: 1222)
!1198 = !DISubprogram(name: "trunc", scope: !877, file: !877, line: 302, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1199 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1200, line: 1223)
!1200 = !DISubprogram(name: "truncf", scope: !877, file: !877, line: 302, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1201 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1202, line: 1224)
!1202 = !DISubprogram(name: "truncl", scope: !877, file: !877, line: 302, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1203 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1204, line: 58)
!1204 = !DIDerivedType(tag: DW_TAG_typedef, name: "fenv_t", file: !1205, line: 94, baseType: !1206)
!1205 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/fenv.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!1206 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1205, line: 75, flags: DIFlagFwdDecl, identifier: "_ZTS6fenv_t")
!1207 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1208, line: 59)
!1208 = !DIDerivedType(tag: DW_TAG_typedef, name: "fexcept_t", file: !1205, line: 68, baseType: !29)
!1209 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1210, line: 62)
!1210 = !DISubprogram(name: "feclearexcept", scope: !1211, file: !1211, line: 71, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1211 = !DIFile(filename: "/usr/include/fenv.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!1212 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1213, line: 63)
!1213 = !DISubprogram(name: "fegetexceptflag", scope: !1211, file: !1211, line: 75, type: !1214, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1214 = !DISubroutineType(types: !1215)
!1215 = !{!82, !1216, !82}
!1216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1208, size: 64)
!1217 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1218, line: 64)
!1218 = !DISubprogram(name: "feraiseexcept", scope: !1211, file: !1211, line: 78, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1219 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1220, line: 65)
!1220 = !DISubprogram(name: "fesetexceptflag", scope: !1211, file: !1211, line: 88, type: !1221, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1221 = !DISubroutineType(types: !1222)
!1222 = !{!82, !1223, !82}
!1223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1224, size: 64)
!1224 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1208)
!1225 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1226, line: 66)
!1226 = !DISubprogram(name: "fetestexcept", scope: !1211, file: !1211, line: 92, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1227 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1228, line: 68)
!1228 = !DISubprogram(name: "fegetround", scope: !1211, file: !1211, line: 104, type: !189, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1229 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1230, line: 69)
!1230 = !DISubprogram(name: "fesetround", scope: !1211, file: !1211, line: 107, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1231 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1232, line: 71)
!1232 = !DISubprogram(name: "fegetenv", scope: !1211, file: !1211, line: 114, type: !1233, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1233 = !DISubroutineType(types: !1234)
!1234 = !{!82, !1235}
!1235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1204, size: 64)
!1236 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1237, line: 72)
!1237 = !DISubprogram(name: "feholdexcept", scope: !1211, file: !1211, line: 119, type: !1233, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1238 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1239, line: 73)
!1239 = !DISubprogram(name: "fesetenv", scope: !1211, file: !1211, line: 123, type: !1240, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1240 = !DISubroutineType(types: !1241)
!1241 = !{!82, !1242}
!1242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1243, size: 64)
!1243 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1204)
!1244 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1245, line: 74)
!1245 = !DISubprogram(name: "feupdateenv", scope: !1211, file: !1211, line: 128, type: !1240, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1246 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1204, line: 61)
!1247 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1208, line: 62)
!1248 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1210, line: 65)
!1249 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1213, line: 66)
!1250 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1218, line: 67)
!1251 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1220, line: 68)
!1252 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1226, line: 69)
!1253 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1228, line: 71)
!1254 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1230, line: 72)
!1255 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1232, line: 74)
!1256 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1237, line: 75)
!1257 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1239, line: 76)
!1258 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1245, line: 77)
!1259 = !{i32 2, !"Dwarf Version", i32 4}
!1260 = !{i32 2, !"Debug Info Version", i32 3}
!1261 = distinct !DISubprogram(name: "__remill_basic_block", scope: !2, file: !2, line: 52, type: !1262, isLocal: false, isDefinition: true, scopeLine: 52, flags: DIFlagPrototyped, isOptimized: false, unit: !1, variables: !7)
!1262 = !DISubroutineType(types: !1263)
!1263 = !{!1264, !1267, !1950, !1264}
!1264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1265, size: 64)
!1265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Memory", file: !1266, line: 36, flags: DIFlagFwdDecl, identifier: "_ZTS6Memory")
!1266 = !DIFile(filename: "/home/ubuntu/Github/remill/remill/Arch/Runtime/Types.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!1267 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !1268, size: 64)
!1268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "State", file: !27, line: 742, size: 27008, align: 128, elements: !1269, identifier: "_ZTS5State")
!1269 = !{!1270, !1282, !1491, !1511, !1541, !1566, !1595, !1632, !1642, !1703, !1728, !1752, !1932}
!1270 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !1268, baseType: !1271)
!1271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ArchState", file: !1272, line: 21, size: 128, elements: !1273, identifier: "_ZTS9ArchState")
!1272 = !DIFile(filename: "/home/ubuntu/Github/remill/remill/Arch/Runtime/State.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!1273 = !{!1274, !1275, !1276}
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "hyper_call", scope: !1271, file: !1272, line: 23, baseType: !4, size: 32)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "_0", scope: !1271, file: !1272, line: 25, baseType: !8, size: 32, offset: 32)
!1276 = !DIDerivedType(tag: DW_TAG_member, scope: !1271, file: !1272, line: 31, baseType: !1277, size: 64, offset: 64)
!1277 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1271, file: !1272, line: 31, size: 64, elements: !1278, identifier: "_ZTSN9ArchStateUt_E")
!1278 = !{!1279, !1280, !1281}
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "addr_to_load", scope: !1277, file: !1272, line: 32, baseType: !637, size: 64)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "addr_to_store", scope: !1277, file: !1272, line: 33, baseType: !637, size: 64)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "hyper_call_vector", scope: !1277, file: !1272, line: 34, baseType: !8, size: 32)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1268, file: !27, line: 747, baseType: !1283, size: 16384, offset: 128)
!1283 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1284, size: 16384, elements: !1369)
!1284 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "VectorReg", file: !27, line: 636, size: 512, align: 128, elements: !1285, identifier: "_ZTS9VectorReg")
!1285 = !{!1286, !1361, !1426}
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "xmm", scope: !1284, file: !27, line: 637, baseType: !1287, size: 128, align: 128)
!1287 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "vec128_t", file: !1266, line: 317, size: 128, elements: !1288, identifier: "_ZTS8vec128_t")
!1288 = !{!1289, !1298, !1305, !1312, !1317, !1324, !1329, !1334, !1339, !1344, !1349, !1354}
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "dqwords", scope: !1287, file: !1266, line: 321, baseType: !1290, size: 128)
!1290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint128v1_t", file: !1266, line: 205, size: 128, elements: !1291, identifier: "_ZTS11uint128v1_t")
!1291 = !{!1292}
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1290, file: !1266, line: 205, baseType: !1293, size: 128)
!1293 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1294, size: 128, elements: !1296)
!1294 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint128_t", file: !1266, line: 46, baseType: !1295)
!1295 = !DIBasicType(name: "unsigned __int128", size: 128, encoding: DW_ATE_unsigned)
!1296 = !{!1297}
!1297 = !DISubrange(count: 1)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !1287, file: !1266, line: 323, baseType: !1299, size: 128)
!1299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint8v16_t", file: !1266, line: 182, size: 128, elements: !1300, identifier: "_ZTS10uint8v16_t")
!1300 = !{!1301}
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1299, file: !1266, line: 182, baseType: !1302, size: 128)
!1302 = !DICompositeType(tag: DW_TAG_array_type, baseType: !62, size: 128, elements: !1303)
!1303 = !{!1304}
!1304 = !DISubrange(count: 16)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !1287, file: !1266, line: 324, baseType: !1306, size: 128)
!1306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint16v8_t", file: !1266, line: 189, size: 128, elements: !1307, identifier: "_ZTS10uint16v8_t")
!1307 = !{!1308}
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1306, file: !1266, line: 189, baseType: !1309, size: 128)
!1309 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 128, elements: !1310)
!1310 = !{!1311}
!1311 = !DISubrange(count: 8)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "dwords", scope: !1287, file: !1266, line: 325, baseType: !1313, size: 128)
!1313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint32v4_t", file: !1266, line: 195, size: 128, elements: !1314, identifier: "_ZTS10uint32v4_t")
!1314 = !{!1315}
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1313, file: !1266, line: 195, baseType: !1316, size: 128)
!1316 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 128, elements: !353)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "qwords", scope: !1287, file: !1266, line: 326, baseType: !1318, size: 128)
!1318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint64v2_t", file: !1266, line: 200, size: 128, elements: !1319, identifier: "_ZTS10uint64v2_t")
!1319 = !{!1320}
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1318, file: !1266, line: 200, baseType: !1321, size: 128)
!1321 = !DICompositeType(tag: DW_TAG_array_type, baseType: !637, size: 128, elements: !1322)
!1322 = !{!1323}
!1323 = !DISubrange(count: 2)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "floats", scope: !1287, file: !1266, line: 327, baseType: !1325, size: 128)
!1325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "float32v4_t", file: !1266, line: 242, size: 128, elements: !1326, identifier: "_ZTS11float32v4_t")
!1326 = !{!1327}
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1325, file: !1266, line: 242, baseType: !1328, size: 128)
!1328 = !DICompositeType(tag: DW_TAG_array_type, baseType: !262, size: 128, elements: !353)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "doubles", scope: !1287, file: !1266, line: 328, baseType: !1330, size: 128)
!1330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "float64v2_t", file: !1266, line: 247, size: 128, elements: !1331, identifier: "_ZTS11float64v2_t")
!1331 = !{!1332}
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1330, file: !1266, line: 247, baseType: !1333, size: 128)
!1333 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 128, elements: !1322)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "sbytes", scope: !1287, file: !1266, line: 330, baseType: !1335, size: 128)
!1335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int8v16_t", file: !1266, line: 213, size: 128, elements: !1336, identifier: "_ZTS9int8v16_t")
!1336 = !{!1337}
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1335, file: !1266, line: 213, baseType: !1338, size: 128)
!1338 = !DICompositeType(tag: DW_TAG_array_type, baseType: !604, size: 128, elements: !1303)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "swords", scope: !1287, file: !1266, line: 331, baseType: !1340, size: 128)
!1340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int16v8_t", file: !1266, line: 220, size: 128, elements: !1341, identifier: "_ZTS9int16v8_t")
!1341 = !{!1342}
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1340, file: !1266, line: 220, baseType: !1343, size: 128)
!1343 = !DICompositeType(tag: DW_TAG_array_type, baseType: !607, size: 128, elements: !1310)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "sdwords", scope: !1287, file: !1266, line: 332, baseType: !1345, size: 128)
!1345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int32v4_t", file: !1266, line: 226, size: 128, elements: !1346, identifier: "_ZTS9int32v4_t")
!1346 = !{!1347}
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1345, file: !1266, line: 226, baseType: !1348, size: 128)
!1348 = !DICompositeType(tag: DW_TAG_array_type, baseType: !610, size: 128, elements: !353)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "sqwords", scope: !1287, file: !1266, line: 333, baseType: !1350, size: 128)
!1350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int64v2_t", file: !1266, line: 231, size: 128, elements: !1351, identifier: "_ZTS9int64v2_t")
!1351 = !{!1352}
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1350, file: !1266, line: 231, baseType: !1353, size: 128)
!1353 = !DICompositeType(tag: DW_TAG_array_type, baseType: !612, size: 128, elements: !1322)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "sdqwords", scope: !1287, file: !1266, line: 334, baseType: !1355, size: 128)
!1355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int128v1_t", file: !1266, line: 236, size: 128, elements: !1356, identifier: "_ZTS10int128v1_t")
!1356 = !{!1357}
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1355, file: !1266, line: 236, baseType: !1358, size: 128)
!1358 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1359, size: 128, elements: !1296)
!1359 = !DIDerivedType(tag: DW_TAG_typedef, name: "int128_t", file: !1266, line: 47, baseType: !1360)
!1360 = !DIBasicType(name: "__int128", size: 128, encoding: DW_ATE_signed)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "ymm", scope: !1284, file: !27, line: 638, baseType: !1362, size: 256, align: 128)
!1362 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "vec256_t", file: !1266, line: 340, size: 256, elements: !1363, identifier: "_ZTS8vec256_t")
!1363 = !{!1364, !1371, !1376, !1381, !1386, !1391, !1396, !1401, !1406, !1411, !1416, !1421}
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !1362, file: !1266, line: 341, baseType: !1365, size: 256)
!1365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint8v32_t", file: !1266, line: 183, size: 256, elements: !1366, identifier: "_ZTS10uint8v32_t")
!1366 = !{!1367}
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1365, file: !1266, line: 183, baseType: !1368, size: 256)
!1368 = !DICompositeType(tag: DW_TAG_array_type, baseType: !62, size: 256, elements: !1369)
!1369 = !{!1370}
!1370 = !DISubrange(count: 32)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !1362, file: !1266, line: 342, baseType: !1372, size: 256)
!1372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint16v16_t", file: !1266, line: 190, size: 256, elements: !1373, identifier: "_ZTS11uint16v16_t")
!1373 = !{!1374}
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1372, file: !1266, line: 190, baseType: !1375, size: 256)
!1375 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 256, elements: !1303)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "dwords", scope: !1362, file: !1266, line: 343, baseType: !1377, size: 256)
!1377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint32v8_t", file: !1266, line: 196, size: 256, elements: !1378, identifier: "_ZTS10uint32v8_t")
!1378 = !{!1379}
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1377, file: !1266, line: 196, baseType: !1380, size: 256)
!1380 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 256, elements: !1310)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "qwords", scope: !1362, file: !1266, line: 344, baseType: !1382, size: 256)
!1382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint64v4_t", file: !1266, line: 201, size: 256, elements: !1383, identifier: "_ZTS10uint64v4_t")
!1383 = !{!1384}
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1382, file: !1266, line: 201, baseType: !1385, size: 256)
!1385 = !DICompositeType(tag: DW_TAG_array_type, baseType: !637, size: 256, elements: !353)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "dqwords", scope: !1362, file: !1266, line: 345, baseType: !1387, size: 256)
!1387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint128v2_t", file: !1266, line: 206, size: 256, elements: !1388, identifier: "_ZTS11uint128v2_t")
!1388 = !{!1389}
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1387, file: !1266, line: 206, baseType: !1390, size: 256)
!1390 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1294, size: 256, elements: !1322)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "floats", scope: !1362, file: !1266, line: 346, baseType: !1392, size: 256)
!1392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "float32v8_t", file: !1266, line: 243, size: 256, elements: !1393, identifier: "_ZTS11float32v8_t")
!1393 = !{!1394}
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1392, file: !1266, line: 243, baseType: !1395, size: 256)
!1395 = !DICompositeType(tag: DW_TAG_array_type, baseType: !262, size: 256, elements: !1310)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "doubles", scope: !1362, file: !1266, line: 347, baseType: !1397, size: 256)
!1397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "float64v4_t", file: !1266, line: 248, size: 256, elements: !1398, identifier: "_ZTS11float64v4_t")
!1398 = !{!1399}
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1397, file: !1266, line: 248, baseType: !1400, size: 256)
!1400 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 256, elements: !353)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "sbytes", scope: !1362, file: !1266, line: 349, baseType: !1402, size: 256)
!1402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int8v32_t", file: !1266, line: 214, size: 256, elements: !1403, identifier: "_ZTS9int8v32_t")
!1403 = !{!1404}
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1402, file: !1266, line: 214, baseType: !1405, size: 256)
!1405 = !DICompositeType(tag: DW_TAG_array_type, baseType: !604, size: 256, elements: !1369)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "swords", scope: !1362, file: !1266, line: 350, baseType: !1407, size: 256)
!1407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int16v16_t", file: !1266, line: 221, size: 256, elements: !1408, identifier: "_ZTS10int16v16_t")
!1408 = !{!1409}
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1407, file: !1266, line: 221, baseType: !1410, size: 256)
!1410 = !DICompositeType(tag: DW_TAG_array_type, baseType: !607, size: 256, elements: !1303)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "sdwords", scope: !1362, file: !1266, line: 351, baseType: !1412, size: 256)
!1412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int32v8_t", file: !1266, line: 227, size: 256, elements: !1413, identifier: "_ZTS9int32v8_t")
!1413 = !{!1414}
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1412, file: !1266, line: 227, baseType: !1415, size: 256)
!1415 = !DICompositeType(tag: DW_TAG_array_type, baseType: !610, size: 256, elements: !1310)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "sqwords", scope: !1362, file: !1266, line: 352, baseType: !1417, size: 256)
!1417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int64v4_t", file: !1266, line: 232, size: 256, elements: !1418, identifier: "_ZTS9int64v4_t")
!1418 = !{!1419}
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1417, file: !1266, line: 232, baseType: !1420, size: 256)
!1420 = !DICompositeType(tag: DW_TAG_array_type, baseType: !612, size: 256, elements: !353)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "sdqwords", scope: !1362, file: !1266, line: 353, baseType: !1422, size: 256)
!1422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int128v2_t", file: !1266, line: 237, size: 256, elements: !1423, identifier: "_ZTS10int128v2_t")
!1423 = !{!1424}
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1422, file: !1266, line: 237, baseType: !1425, size: 256)
!1425 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1359, size: 256, elements: !1322)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "zmm", scope: !1284, file: !27, line: 639, baseType: !1427, size: 512, align: 128)
!1427 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "vec512_t", file: !1266, line: 359, size: 512, elements: !1428, identifier: "_ZTS8vec512_t")
!1428 = !{!1429, !1436, !1441, !1446, !1451, !1456, !1461, !1466, !1471, !1476, !1481, !1486}
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !1427, file: !1266, line: 360, baseType: !1430, size: 512)
!1430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint8v64_t", file: !1266, line: 184, size: 512, elements: !1431, identifier: "_ZTS10uint8v64_t")
!1431 = !{!1432}
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1430, file: !1266, line: 184, baseType: !1433, size: 512)
!1433 = !DICompositeType(tag: DW_TAG_array_type, baseType: !62, size: 512, elements: !1434)
!1434 = !{!1435}
!1435 = !DISubrange(count: 64)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !1427, file: !1266, line: 361, baseType: !1437, size: 512)
!1437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint16v32_t", file: !1266, line: 191, size: 512, elements: !1438, identifier: "_ZTS11uint16v32_t")
!1438 = !{!1439}
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1437, file: !1266, line: 191, baseType: !1440, size: 512)
!1440 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 512, elements: !1369)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "dwords", scope: !1427, file: !1266, line: 362, baseType: !1442, size: 512)
!1442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint32v16_t", file: !1266, line: 197, size: 512, elements: !1443, identifier: "_ZTS11uint32v16_t")
!1443 = !{!1444}
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1442, file: !1266, line: 197, baseType: !1445, size: 512)
!1445 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 512, elements: !1303)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "qwords", scope: !1427, file: !1266, line: 363, baseType: !1447, size: 512)
!1447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint64v8_t", file: !1266, line: 202, size: 512, elements: !1448, identifier: "_ZTS10uint64v8_t")
!1448 = !{!1449}
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1447, file: !1266, line: 202, baseType: !1450, size: 512)
!1450 = !DICompositeType(tag: DW_TAG_array_type, baseType: !637, size: 512, elements: !1310)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "dqwords", scope: !1427, file: !1266, line: 364, baseType: !1452, size: 512)
!1452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint128v4_t", file: !1266, line: 207, size: 512, elements: !1453, identifier: "_ZTS11uint128v4_t")
!1453 = !{!1454}
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1452, file: !1266, line: 207, baseType: !1455, size: 512)
!1455 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1294, size: 512, elements: !353)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "floats", scope: !1427, file: !1266, line: 365, baseType: !1457, size: 512)
!1457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "float32v16_t", file: !1266, line: 244, size: 512, elements: !1458, identifier: "_ZTS12float32v16_t")
!1458 = !{!1459}
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1457, file: !1266, line: 244, baseType: !1460, size: 512)
!1460 = !DICompositeType(tag: DW_TAG_array_type, baseType: !262, size: 512, elements: !1303)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "doubles", scope: !1427, file: !1266, line: 366, baseType: !1462, size: 512)
!1462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "float64v8_t", file: !1266, line: 249, size: 512, elements: !1463, identifier: "_ZTS11float64v8_t")
!1463 = !{!1464}
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1462, file: !1266, line: 249, baseType: !1465, size: 512)
!1465 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 512, elements: !1310)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "sbytes", scope: !1427, file: !1266, line: 368, baseType: !1467, size: 512)
!1467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int8v64_t", file: !1266, line: 215, size: 512, elements: !1468, identifier: "_ZTS9int8v64_t")
!1468 = !{!1469}
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1467, file: !1266, line: 215, baseType: !1470, size: 512)
!1470 = !DICompositeType(tag: DW_TAG_array_type, baseType: !604, size: 512, elements: !1434)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "swords", scope: !1427, file: !1266, line: 369, baseType: !1472, size: 512)
!1472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int16v32_t", file: !1266, line: 222, size: 512, elements: !1473, identifier: "_ZTS10int16v32_t")
!1473 = !{!1474}
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1472, file: !1266, line: 222, baseType: !1475, size: 512)
!1475 = !DICompositeType(tag: DW_TAG_array_type, baseType: !607, size: 512, elements: !1369)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "sdwords", scope: !1427, file: !1266, line: 370, baseType: !1477, size: 512)
!1477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int32v16_t", file: !1266, line: 228, size: 512, elements: !1478, identifier: "_ZTS10int32v16_t")
!1478 = !{!1479}
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1477, file: !1266, line: 228, baseType: !1480, size: 512)
!1480 = !DICompositeType(tag: DW_TAG_array_type, baseType: !610, size: 512, elements: !1303)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "sqwords", scope: !1427, file: !1266, line: 371, baseType: !1482, size: 512)
!1482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int64v8_t", file: !1266, line: 233, size: 512, elements: !1483, identifier: "_ZTS9int64v8_t")
!1483 = !{!1484}
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1482, file: !1266, line: 233, baseType: !1485, size: 512)
!1485 = !DICompositeType(tag: DW_TAG_array_type, baseType: !612, size: 512, elements: !1310)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "sdqwords", scope: !1427, file: !1266, line: 372, baseType: !1487, size: 512)
!1487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int128v4_t", file: !1266, line: 238, size: 512, elements: !1488, identifier: "_ZTS10int128v4_t")
!1488 = !{!1489}
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1487, file: !1266, line: 238, baseType: !1490, size: 512)
!1490 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1359, size: 512, elements: !353)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "aflag", scope: !1268, file: !27, line: 751, baseType: !1492, size: 128, align: 64, offset: 16512)
!1492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ArithFlags", file: !27, line: 402, size: 128, align: 64, elements: !1493, identifier: "_ZTS10ArithFlags")
!1493 = !{!1494, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510}
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "_0", scope: !1492, file: !27, line: 404, baseType: !1495, size: 8)
!1495 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !62)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "cf", scope: !1492, file: !27, line: 405, baseType: !62, size: 8, offset: 8)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "_1", scope: !1492, file: !27, line: 406, baseType: !1495, size: 8, offset: 16)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "pf", scope: !1492, file: !27, line: 407, baseType: !62, size: 8, offset: 24)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "_2", scope: !1492, file: !27, line: 408, baseType: !1495, size: 8, offset: 32)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "af", scope: !1492, file: !27, line: 409, baseType: !62, size: 8, offset: 40)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "_3", scope: !1492, file: !27, line: 410, baseType: !1495, size: 8, offset: 48)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "zf", scope: !1492, file: !27, line: 411, baseType: !62, size: 8, offset: 56)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "_4", scope: !1492, file: !27, line: 412, baseType: !1495, size: 8, offset: 64)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !1492, file: !27, line: 413, baseType: !62, size: 8, offset: 72)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "_5", scope: !1492, file: !27, line: 414, baseType: !1495, size: 8, offset: 80)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "df", scope: !1492, file: !27, line: 415, baseType: !62, size: 8, offset: 88)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "_6", scope: !1492, file: !27, line: 416, baseType: !1495, size: 8, offset: 96)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "of", scope: !1492, file: !27, line: 417, baseType: !62, size: 8, offset: 104)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "_7", scope: !1492, file: !27, line: 418, baseType: !1495, size: 8, offset: 112)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "_8", scope: !1492, file: !27, line: 419, baseType: !1495, size: 8, offset: 120)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "rflag", scope: !1268, file: !27, line: 752, baseType: !1512, size: 64, align: 64, offset: 16640)
!1512 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "Flags", file: !27, line: 366, size: 64, align: 64, elements: !1513, identifier: "_ZTS5Flags")
!1513 = !{!1514, !1515}
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "flat", scope: !1512, file: !27, line: 367, baseType: !637, size: 64)
!1515 = !DIDerivedType(tag: DW_TAG_member, scope: !1512, file: !27, line: 368, baseType: !1516, size: 64)
!1516 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1512, file: !27, line: 368, size: 64, elements: !1517, identifier: "_ZTSN5FlagsUt_E")
!1517 = !{!1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540}
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "cf", scope: !1516, file: !27, line: 369, baseType: !8, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "must_be_1", scope: !1516, file: !27, line: 370, baseType: !8, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "pf", scope: !1516, file: !27, line: 371, baseType: !8, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "must_be_0a", scope: !1516, file: !27, line: 372, baseType: !8, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "af", scope: !1516, file: !27, line: 374, baseType: !8, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "must_be_0b", scope: !1516, file: !27, line: 375, baseType: !8, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "zf", scope: !1516, file: !27, line: 376, baseType: !8, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !1516, file: !27, line: 377, baseType: !8, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "tf", scope: !1516, file: !27, line: 379, baseType: !8, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "_if", scope: !1516, file: !27, line: 380, baseType: !8, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "df", scope: !1516, file: !27, line: 381, baseType: !8, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "of", scope: !1516, file: !27, line: 382, baseType: !8, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "iopl", scope: !1516, file: !27, line: 384, baseType: !8, size: 2, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "nt", scope: !1516, file: !27, line: 385, baseType: !8, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "must_be_0c", scope: !1516, file: !27, line: 386, baseType: !8, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "rf", scope: !1516, file: !27, line: 388, baseType: !8, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "vm", scope: !1516, file: !27, line: 389, baseType: !8, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "ac", scope: !1516, file: !27, line: 390, baseType: !8, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "vif", scope: !1516, file: !27, line: 391, baseType: !8, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "vip", scope: !1516, file: !27, line: 393, baseType: !8, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1516, file: !27, line: 394, baseType: !8, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_eflags", scope: !1516, file: !27, line: 395, baseType: !8, size: 10, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_rflags", scope: !1516, file: !27, line: 396, baseType: !8, size: 32, offset: 32)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "seg", scope: !1268, file: !27, line: 753, baseType: !1542, size: 192, align: 64, offset: 16704)
!1542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Segments", file: !27, line: 451, size: 192, align: 64, elements: !1543, identifier: "_ZTS8Segments")
!1543 = !{!1544, !1546, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565}
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "_0", scope: !1542, file: !27, line: 452, baseType: !1545, size: 16)
!1545 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !28)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !1542, file: !27, line: 453, baseType: !1547, size: 16, offset: 16)
!1547 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "SegmentSelector", file: !27, line: 76, size: 16, elements: !1548, identifier: "_ZTS15SegmentSelector")
!1548 = !{!1549, !1550}
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "flat", scope: !1547, file: !27, line: 77, baseType: !28, size: 16)
!1550 = !DIDerivedType(tag: DW_TAG_member, scope: !1547, file: !27, line: 78, baseType: !1551, size: 16)
!1551 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1547, file: !27, line: 78, size: 16, elements: !1552, identifier: "_ZTSN15SegmentSelectorUt_E")
!1552 = !{!1553, !1554, !1555}
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "rpi", scope: !1551, file: !27, line: 79, baseType: !26, size: 2, flags: DIFlagBitField, extraData: i64 0)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "ti", scope: !1551, file: !27, line: 80, baseType: !35, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1551, file: !27, line: 81, baseType: !28, size: 13, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "_1", scope: !1542, file: !27, line: 454, baseType: !1545, size: 16, offset: 32)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !1542, file: !27, line: 455, baseType: !1547, size: 16, offset: 48)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "_2", scope: !1542, file: !27, line: 456, baseType: !1545, size: 16, offset: 64)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "gs", scope: !1542, file: !27, line: 457, baseType: !1547, size: 16, offset: 80)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "_3", scope: !1542, file: !27, line: 458, baseType: !1545, size: 16, offset: 96)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1542, file: !27, line: 459, baseType: !1547, size: 16, offset: 112)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "_4", scope: !1542, file: !27, line: 460, baseType: !1545, size: 16, offset: 128)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1542, file: !27, line: 461, baseType: !1547, size: 16, offset: 144)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "_5", scope: !1542, file: !27, line: 462, baseType: !1545, size: 16, offset: 160)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !1542, file: !27, line: 463, baseType: !1547, size: 16, offset: 176)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !1268, file: !27, line: 754, baseType: !1567, size: 768, align: 64, offset: 16896)
!1567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AddressSpace", file: !27, line: 654, size: 768, align: 64, elements: !1568, identifier: "_ZTS12AddressSpace")
!1568 = !{!1569, !1571, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594}
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "_0", scope: !1567, file: !27, line: 655, baseType: !1570, size: 64)
!1570 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !637)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "ss_base", scope: !1567, file: !27, line: 656, baseType: !1572, size: 64, offset: 64)
!1572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Reg", file: !27, line: 610, size: 64, elements: !1573, identifier: "_ZTS3Reg")
!1573 = !{!1574}
!1574 = !DIDerivedType(tag: DW_TAG_member, scope: !1572, file: !27, line: 611, baseType: !1575, size: 64)
!1575 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1572, file: !27, line: 611, size: 64, elements: !1576, identifier: "_ZTSN3RegUt_E")
!1576 = !{!1577, !1582, !1583, !1584}
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "byte", scope: !1575, file: !27, line: 615, baseType: !1578, size: 16, align: 8)
!1578 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1575, file: !27, line: 612, size: 16, elements: !1579, identifier: "_ZTSN3RegUt_Ut_E")
!1579 = !{!1580, !1581}
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !1578, file: !27, line: 613, baseType: !62, size: 8)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !1578, file: !27, line: 614, baseType: !62, size: 8, offset: 8)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "word", scope: !1575, file: !27, line: 616, baseType: !28, size: 16, align: 16)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "dword", scope: !1575, file: !27, line: 617, baseType: !8, size: 32, align: 32)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "qword", scope: !1575, file: !27, line: 618, baseType: !637, size: 64, align: 64)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "_1", scope: !1567, file: !27, line: 657, baseType: !1570, size: 64, offset: 128)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "es_base", scope: !1567, file: !27, line: 658, baseType: !1572, size: 64, offset: 192)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "_2", scope: !1567, file: !27, line: 659, baseType: !1570, size: 64, offset: 256)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "gs_base", scope: !1567, file: !27, line: 660, baseType: !1572, size: 64, offset: 320)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "_3", scope: !1567, file: !27, line: 661, baseType: !1570, size: 64, offset: 384)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "fs_base", scope: !1567, file: !27, line: 662, baseType: !1572, size: 64, offset: 448)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "_4", scope: !1567, file: !27, line: 663, baseType: !1570, size: 64, offset: 512)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "ds_base", scope: !1567, file: !27, line: 664, baseType: !1572, size: 64, offset: 576)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "_5", scope: !1567, file: !27, line: 665, baseType: !1570, size: 64, offset: 640)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "cs_base", scope: !1567, file: !27, line: 666, baseType: !1572, size: 64, offset: 704)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "gpr", scope: !1268, file: !27, line: 755, baseType: !1596, size: 2176, align: 64, offset: 17664)
!1596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GPR", file: !27, line: 677, size: 2176, align: 64, elements: !1597, identifier: "_ZTS3GPR")
!1597 = !{!1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1631}
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "_0", scope: !1596, file: !27, line: 679, baseType: !1570, size: 64)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "rax", scope: !1596, file: !27, line: 680, baseType: !1572, size: 64, offset: 64)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "_1", scope: !1596, file: !27, line: 681, baseType: !1570, size: 64, offset: 128)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "rbx", scope: !1596, file: !27, line: 682, baseType: !1572, size: 64, offset: 192)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "_2", scope: !1596, file: !27, line: 683, baseType: !1570, size: 64, offset: 256)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "rcx", scope: !1596, file: !27, line: 684, baseType: !1572, size: 64, offset: 320)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "_3", scope: !1596, file: !27, line: 685, baseType: !1570, size: 64, offset: 384)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "rdx", scope: !1596, file: !27, line: 686, baseType: !1572, size: 64, offset: 448)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "_4", scope: !1596, file: !27, line: 687, baseType: !1570, size: 64, offset: 512)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "rsi", scope: !1596, file: !27, line: 688, baseType: !1572, size: 64, offset: 576)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "_5", scope: !1596, file: !27, line: 689, baseType: !1570, size: 64, offset: 640)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "rdi", scope: !1596, file: !27, line: 690, baseType: !1572, size: 64, offset: 704)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "_6", scope: !1596, file: !27, line: 691, baseType: !1570, size: 64, offset: 768)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "rsp", scope: !1596, file: !27, line: 692, baseType: !1572, size: 64, offset: 832)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "_7", scope: !1596, file: !27, line: 693, baseType: !1570, size: 64, offset: 896)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "rbp", scope: !1596, file: !27, line: 694, baseType: !1572, size: 64, offset: 960)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "_8", scope: !1596, file: !27, line: 695, baseType: !1570, size: 64, offset: 1024)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !1596, file: !27, line: 696, baseType: !1572, size: 64, offset: 1088)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "_9", scope: !1596, file: !27, line: 697, baseType: !1570, size: 64, offset: 1152)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !1596, file: !27, line: 698, baseType: !1572, size: 64, offset: 1216)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "_10", scope: !1596, file: !27, line: 699, baseType: !1570, size: 64, offset: 1280)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !1596, file: !27, line: 700, baseType: !1572, size: 64, offset: 1344)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "_11", scope: !1596, file: !27, line: 701, baseType: !1570, size: 64, offset: 1408)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !1596, file: !27, line: 702, baseType: !1572, size: 64, offset: 1472)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "_12", scope: !1596, file: !27, line: 703, baseType: !1570, size: 64, offset: 1536)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !1596, file: !27, line: 704, baseType: !1572, size: 64, offset: 1600)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "_13", scope: !1596, file: !27, line: 705, baseType: !1570, size: 64, offset: 1664)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !1596, file: !27, line: 706, baseType: !1572, size: 64, offset: 1728)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "_14", scope: !1596, file: !27, line: 707, baseType: !1570, size: 64, offset: 1792)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !1596, file: !27, line: 708, baseType: !1572, size: 64, offset: 1856)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "_15", scope: !1596, file: !27, line: 709, baseType: !1570, size: 64, offset: 1920)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !1596, file: !27, line: 710, baseType: !1572, size: 64, offset: 1984)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "_16", scope: !1596, file: !27, line: 711, baseType: !1570, size: 64, offset: 2048)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !1596, file: !27, line: 714, baseType: !1572, size: 64, offset: 2112)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "st", scope: !1268, file: !27, line: 756, baseType: !1633, size: 1024, align: 64, offset: 19840)
!1633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "X87Stack", file: !27, line: 719, size: 1024, align: 64, elements: !1634, identifier: "_ZTS8X87Stack")
!1634 = !{!1635}
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1633, file: !27, line: 723, baseType: !1636, size: 1024)
!1636 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1637, size: 1024, elements: !1310)
!1637 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1633, file: !27, line: 720, size: 128, align: 64, elements: !1638, identifier: "_ZTSN8X87StackUt_E")
!1638 = !{!1639, !1640}
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "_0", scope: !1637, file: !27, line: 721, baseType: !637, size: 64)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1637, file: !27, line: 722, baseType: !1641, size: 64, offset: 64)
!1641 = !DIDerivedType(tag: DW_TAG_typedef, name: "float64_t", file: !1266, line: 61, baseType: !108)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "mmx", scope: !1268, file: !27, line: 757, baseType: !1643, size: 1024, align: 64, offset: 20864)
!1643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MMX", file: !27, line: 729, size: 1024, align: 64, elements: !1644, identifier: "_ZTS3MMX")
!1644 = !{!1645}
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1643, file: !27, line: 733, baseType: !1646, size: 1024)
!1646 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1647, size: 1024, elements: !1310)
!1647 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1643, file: !27, line: 730, size: 128, align: 64, elements: !1648, identifier: "_ZTSN3MMXUt_E")
!1648 = !{!1649, !1650}
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "_0", scope: !1647, file: !27, line: 731, baseType: !637, size: 64)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1647, file: !27, line: 732, baseType: !1651, size: 64, offset: 64)
!1651 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "vec64_t", file: !1266, line: 294, size: 64, elements: !1652, identifier: "_ZTS7vec64_t")
!1652 = !{!1653, !1658, !1663, !1668, !1673, !1678, !1683, !1688, !1693, !1698}
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "qwords", scope: !1651, file: !1266, line: 298, baseType: !1654, size: 64)
!1654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint64v1_t", file: !1266, line: 199, size: 64, elements: !1655, identifier: "_ZTS10uint64v1_t")
!1655 = !{!1656}
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1654, file: !1266, line: 199, baseType: !1657, size: 64)
!1657 = !DICompositeType(tag: DW_TAG_array_type, baseType: !637, size: 64, elements: !1296)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !1651, file: !1266, line: 300, baseType: !1659, size: 64)
!1659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint8v8_t", file: !1266, line: 181, size: 64, elements: !1660, identifier: "_ZTS9uint8v8_t")
!1660 = !{!1661}
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1659, file: !1266, line: 181, baseType: !1662, size: 64)
!1662 = !DICompositeType(tag: DW_TAG_array_type, baseType: !62, size: 64, elements: !1310)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !1651, file: !1266, line: 301, baseType: !1664, size: 64)
!1664 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint16v4_t", file: !1266, line: 188, size: 64, elements: !1665, identifier: "_ZTS10uint16v4_t")
!1665 = !{!1666}
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1664, file: !1266, line: 188, baseType: !1667, size: 64)
!1667 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 64, elements: !353)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "dwords", scope: !1651, file: !1266, line: 302, baseType: !1669, size: 64)
!1669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint32v2_t", file: !1266, line: 194, size: 64, elements: !1670, identifier: "_ZTS10uint32v2_t")
!1670 = !{!1671}
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1669, file: !1266, line: 194, baseType: !1672, size: 64)
!1672 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 64, elements: !1322)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "floats", scope: !1651, file: !1266, line: 303, baseType: !1674, size: 64)
!1674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "float32v2_t", file: !1266, line: 241, size: 64, elements: !1675, identifier: "_ZTS11float32v2_t")
!1675 = !{!1676}
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1674, file: !1266, line: 241, baseType: !1677, size: 64)
!1677 = !DICompositeType(tag: DW_TAG_array_type, baseType: !262, size: 64, elements: !1322)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "doubles", scope: !1651, file: !1266, line: 304, baseType: !1679, size: 64)
!1679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "float64v1_t", file: !1266, line: 246, size: 64, elements: !1680, identifier: "_ZTS11float64v1_t")
!1680 = !{!1681}
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1679, file: !1266, line: 246, baseType: !1682, size: 64)
!1682 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 64, elements: !1296)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "sbytes", scope: !1651, file: !1266, line: 306, baseType: !1684, size: 64)
!1684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int8v8_t", file: !1266, line: 212, size: 64, elements: !1685, identifier: "_ZTS8int8v8_t")
!1685 = !{!1686}
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1684, file: !1266, line: 212, baseType: !1687, size: 64)
!1687 = !DICompositeType(tag: DW_TAG_array_type, baseType: !604, size: 64, elements: !1310)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "swords", scope: !1651, file: !1266, line: 307, baseType: !1689, size: 64)
!1689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int16v4_t", file: !1266, line: 219, size: 64, elements: !1690, identifier: "_ZTS9int16v4_t")
!1690 = !{!1691}
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1689, file: !1266, line: 219, baseType: !1692, size: 64)
!1692 = !DICompositeType(tag: DW_TAG_array_type, baseType: !607, size: 64, elements: !353)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "sdwords", scope: !1651, file: !1266, line: 308, baseType: !1694, size: 64)
!1694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int32v2_t", file: !1266, line: 225, size: 64, elements: !1695, identifier: "_ZTS9int32v2_t")
!1695 = !{!1696}
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1694, file: !1266, line: 225, baseType: !1697, size: 64)
!1697 = !DICompositeType(tag: DW_TAG_array_type, baseType: !610, size: 64, elements: !1322)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "sqwords", scope: !1651, file: !1266, line: 309, baseType: !1699, size: 64)
!1699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int64v1_t", file: !1266, line: 230, size: 64, elements: !1700, identifier: "_ZTS9int64v1_t")
!1700 = !{!1701}
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1699, file: !1266, line: 230, baseType: !1702, size: 64)
!1702 = !DICompositeType(tag: DW_TAG_array_type, baseType: !612, size: 64, elements: !1296)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "sw", scope: !1268, file: !27, line: 758, baseType: !1704, size: 192, offset: 21888)
!1704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FPUStatusFlags", file: !27, line: 332, size: 192, elements: !1705, identifier: "_ZTS14FPUStatusFlags")
!1705 = !{!1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726}
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "_0", scope: !1704, file: !27, line: 333, baseType: !62, size: 8)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "c0", scope: !1704, file: !27, line: 334, baseType: !62, size: 8, offset: 8)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "_1", scope: !1704, file: !27, line: 335, baseType: !62, size: 8, offset: 16)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "c1", scope: !1704, file: !27, line: 336, baseType: !62, size: 8, offset: 24)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "_2", scope: !1704, file: !27, line: 337, baseType: !62, size: 8, offset: 32)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "c2", scope: !1704, file: !27, line: 338, baseType: !62, size: 8, offset: 40)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "_3", scope: !1704, file: !27, line: 339, baseType: !62, size: 8, offset: 48)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "c3", scope: !1704, file: !27, line: 340, baseType: !62, size: 8, offset: 56)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "_4", scope: !1704, file: !27, line: 342, baseType: !62, size: 8, offset: 64)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "pe", scope: !1704, file: !27, line: 343, baseType: !62, size: 8, offset: 72)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "_5", scope: !1704, file: !27, line: 345, baseType: !62, size: 8, offset: 80)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "ue", scope: !1704, file: !27, line: 346, baseType: !62, size: 8, offset: 88)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "_6", scope: !1704, file: !27, line: 348, baseType: !62, size: 8, offset: 96)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "oe", scope: !1704, file: !27, line: 349, baseType: !62, size: 8, offset: 104)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "_7", scope: !1704, file: !27, line: 351, baseType: !62, size: 8, offset: 112)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "ze", scope: !1704, file: !27, line: 352, baseType: !62, size: 8, offset: 120)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "_8", scope: !1704, file: !27, line: 354, baseType: !62, size: 8, offset: 128)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "de", scope: !1704, file: !27, line: 355, baseType: !62, size: 8, offset: 136)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "_9", scope: !1704, file: !27, line: 357, baseType: !62, size: 8, offset: 144)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "ie", scope: !1704, file: !27, line: 358, baseType: !62, size: 8, offset: 152)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "_padding", scope: !1704, file: !27, line: 360, baseType: !1727, size: 32, offset: 160)
!1727 = !DICompositeType(tag: DW_TAG_array_type, baseType: !62, size: 32, elements: !353)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "xcr0", scope: !1268, file: !27, line: 759, baseType: !1729, size: 64, offset: 22080)
!1729 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "XCR0", file: !27, line: 424, size: 64, elements: !1730, identifier: "_ZTS4XCR0")
!1730 = !{!1731, !1732, !1737}
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "flat", scope: !1729, file: !27, line: 425, baseType: !637, size: 64)
!1732 = !DIDerivedType(tag: DW_TAG_member, scope: !1729, file: !27, line: 427, baseType: !1733, size: 64)
!1733 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1729, file: !27, line: 427, size: 64, elements: !1734, identifier: "_ZTSN4XCR0Ut_E")
!1734 = !{!1735, !1736}
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "eax", scope: !1733, file: !27, line: 428, baseType: !8, size: 32)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "edx", scope: !1733, file: !27, line: 429, baseType: !8, size: 32, offset: 32)
!1737 = !DIDerivedType(tag: DW_TAG_member, scope: !1729, file: !27, line: 433, baseType: !1738, size: 64)
!1738 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1729, file: !27, line: 433, size: 64, elements: !1739, identifier: "_ZTSN4XCR0Ut0_E")
!1739 = !{!1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751}
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "x87_fpu_mmx", scope: !1738, file: !27, line: 434, baseType: !637, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "xmm", scope: !1738, file: !27, line: 435, baseType: !637, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "ymm", scope: !1738, file: !27, line: 436, baseType: !637, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "bndreg", scope: !1738, file: !27, line: 437, baseType: !637, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "bndcsr", scope: !1738, file: !27, line: 438, baseType: !637, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "opmask", scope: !1738, file: !27, line: 439, baseType: !637, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "zmm_hi256", scope: !1738, file: !27, line: 440, baseType: !637, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "hi16_zmm", scope: !1738, file: !27, line: 441, baseType: !637, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "pkru", scope: !1738, file: !27, line: 442, baseType: !637, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "_reserved0", scope: !1738, file: !27, line: 443, baseType: !637, size: 53, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "lwp", scope: !1738, file: !27, line: 444, baseType: !637, size: 1, offset: 62, flags: DIFlagBitField, extraData: i64 0)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "_reserved1", scope: !1738, file: !27, line: 445, baseType: !637, size: 1, offset: 63, flags: DIFlagBitField, extraData: i64 0)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "x87", scope: !1268, file: !27, line: 760, baseType: !1753, size: 4096, align: 128, offset: 22144)
!1753 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "FPU", file: !27, line: 314, size: 4096, align: 128, elements: !1754, identifier: "_ZTS3FPU")
!1754 = !{!1755, !1851, !1914}
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !1753, file: !27, line: 317, baseType: !1756, size: 4096)
!1756 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1753, file: !27, line: 315, size: 4096, elements: !1757, identifier: "_ZTSN3FPUUt_E")
!1757 = !{!1758, !1847}
!1758 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !1756, baseType: !1759)
!1759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FpuFSAVE", file: !27, line: 263, size: 1248, elements: !1760, identifier: "_ZTS8FpuFSAVE")
!1760 = !{!1761, !1779, !1780, !1801, !1802, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824}
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !1759, file: !27, line: 264, baseType: !1762, size: 16)
!1762 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "FPUControlWord", file: !27, line: 142, size: 16, elements: !1763, identifier: "_ZTS14FPUControlWord")
!1763 = !{!1764, !1765}
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "flat", scope: !1762, file: !27, line: 143, baseType: !28, size: 16)
!1765 = !DIDerivedType(tag: DW_TAG_member, scope: !1762, file: !27, line: 144, baseType: !1766, size: 16)
!1766 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1762, file: !27, line: 144, size: 16, elements: !1767, identifier: "_ZTSN14FPUControlWordUt_E")
!1767 = !{!1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778}
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "im", scope: !1766, file: !27, line: 145, baseType: !28, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "dm", scope: !1766, file: !27, line: 146, baseType: !28, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "zm", scope: !1766, file: !27, line: 147, baseType: !28, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "om", scope: !1766, file: !27, line: 148, baseType: !28, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "um", scope: !1766, file: !27, line: 149, baseType: !28, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !1766, file: !27, line: 150, baseType: !28, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd0", scope: !1766, file: !27, line: 151, baseType: !28, size: 2, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !1766, file: !27, line: 152, baseType: !39, size: 2, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "rc", scope: !1766, file: !27, line: 153, baseType: !45, size: 2, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1766, file: !27, line: 154, baseType: !51, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd1", scope: !1766, file: !27, line: 155, baseType: !28, size: 3, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd0", scope: !1759, file: !27, line: 265, baseType: !28, size: 16, offset: 16)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !1759, file: !27, line: 266, baseType: !1781, size: 16, offset: 32)
!1781 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "FPUStatusWord", file: !27, line: 100, size: 16, elements: !1782, identifier: "_ZTS13FPUStatusWord")
!1782 = !{!1783, !1784}
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "flat", scope: !1781, file: !27, line: 101, baseType: !28, size: 16)
!1784 = !DIDerivedType(tag: DW_TAG_member, scope: !1781, file: !27, line: 102, baseType: !1785, size: 16)
!1785 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1781, file: !27, line: 102, size: 16, elements: !1786, identifier: "_ZTSN13FPUStatusWordUt_E")
!1786 = !{!1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800}
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "ie", scope: !1785, file: !27, line: 103, baseType: !28, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "de", scope: !1785, file: !27, line: 104, baseType: !28, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "ze", scope: !1785, file: !27, line: 105, baseType: !28, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "oe", scope: !1785, file: !27, line: 106, baseType: !28, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "ue", scope: !1785, file: !27, line: 107, baseType: !28, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "pe", scope: !1785, file: !27, line: 108, baseType: !28, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !1785, file: !27, line: 109, baseType: !28, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !1785, file: !27, line: 110, baseType: !28, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "c0", scope: !1785, file: !27, line: 111, baseType: !28, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "c1", scope: !1785, file: !27, line: 112, baseType: !28, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "c2", scope: !1785, file: !27, line: 113, baseType: !28, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !1785, file: !27, line: 114, baseType: !28, size: 3, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "c3", scope: !1785, file: !27, line: 115, baseType: !28, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !1785, file: !27, line: 116, baseType: !28, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd1", scope: !1759, file: !27, line: 267, baseType: !28, size: 16, offset: 48)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "ftw", scope: !1759, file: !27, line: 268, baseType: !1803, size: 16, offset: 64)
!1803 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "FPUTagWord", file: !27, line: 227, size: 16, elements: !1804, identifier: "_ZTS10FPUTagWord")
!1804 = !{!1805, !1806}
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "flat", scope: !1803, file: !27, line: 228, baseType: !28, size: 16)
!1806 = !DIDerivedType(tag: DW_TAG_member, scope: !1803, file: !27, line: 229, baseType: !1807, size: 16)
!1807 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1803, file: !27, line: 229, size: 16, elements: !1808, identifier: "_ZTSN10FPUTagWordUt_E")
!1808 = !{!1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816}
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "tag0", scope: !1807, file: !27, line: 230, baseType: !55, size: 2, flags: DIFlagBitField, extraData: i64 0)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "tag1", scope: !1807, file: !27, line: 231, baseType: !55, size: 2, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "tag2", scope: !1807, file: !27, line: 232, baseType: !55, size: 2, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "tag3", scope: !1807, file: !27, line: 233, baseType: !55, size: 2, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "tag4", scope: !1807, file: !27, line: 234, baseType: !55, size: 2, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "tag5", scope: !1807, file: !27, line: 235, baseType: !55, size: 2, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "tag6", scope: !1807, file: !27, line: 236, baseType: !55, size: 2, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "tag7", scope: !1807, file: !27, line: 237, baseType: !55, size: 2, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !1759, file: !27, line: 269, baseType: !28, size: 16, offset: 80)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !1759, file: !27, line: 270, baseType: !8, size: 32, offset: 96)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !1759, file: !27, line: 271, baseType: !1547, size: 16, offset: 128)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd2", scope: !1759, file: !27, line: 272, baseType: !28, size: 16, offset: 144)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "dp", scope: !1759, file: !27, line: 273, baseType: !8, size: 32, offset: 160)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1759, file: !27, line: 274, baseType: !1547, size: 16, offset: 192)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd3", scope: !1759, file: !27, line: 275, baseType: !28, size: 16, offset: 208)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "st", scope: !1759, file: !27, line: 276, baseType: !1825, size: 1024, offset: 224)
!1825 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1826, size: 1024, elements: !1310)
!1826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FPUStackElem", file: !27, line: 162, size: 128, elements: !1827, identifier: "_ZTS12FPUStackElem")
!1827 = !{!1828, !1843}
!1828 = !DIDerivedType(tag: DW_TAG_member, scope: !1826, file: !27, line: 163, baseType: !1829, size: 80)
!1829 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1826, file: !27, line: 163, size: 80, elements: !1830, identifier: "_ZTSN12FPUStackElemUt_E")
!1830 = !{!1831, !1838}
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "st", scope: !1829, file: !27, line: 164, baseType: !1832, size: 80)
!1832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "float80_t", file: !1266, line: 65, size: 80, elements: !1833, identifier: "_ZTS9float80_t")
!1833 = !{!1834}
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1832, file: !1266, line: 66, baseType: !1835, size: 80)
!1835 = !DICompositeType(tag: DW_TAG_array_type, baseType: !62, size: 80, elements: !1836)
!1836 = !{!1837}
!1837 = !DISubrange(count: 10)
!1838 = !DIDerivedType(tag: DW_TAG_member, scope: !1829, file: !27, line: 165, baseType: !1839, size: 80)
!1839 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1829, file: !27, line: 165, size: 80, elements: !1840, identifier: "_ZTSN12FPUStackElemUt_Ut_E")
!1840 = !{!1841, !1842}
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "mmx", scope: !1839, file: !27, line: 166, baseType: !637, size: 64)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "infinity", scope: !1839, file: !27, line: 167, baseType: !28, size: 16, offset: 64)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd", scope: !1826, file: !27, line: 170, baseType: !1844, size: 48, offset: 80)
!1844 = !DICompositeType(tag: DW_TAG_array_type, baseType: !62, size: 48, elements: !1845)
!1845 = !{!1846}
!1846 = !DISubrange(count: 6)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "_padding0", scope: !1756, file: !27, line: 316, baseType: !1848, size: 2848, offset: 1248)
!1848 = !DICompositeType(tag: DW_TAG_array_type, baseType: !62, size: 2848, elements: !1849)
!1849 = !{!1850}
!1850 = !DISubrange(count: 356)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave32", scope: !1753, file: !27, line: 321, baseType: !1852, size: 4096)
!1852 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1753, file: !27, line: 319, size: 4096, elements: !1853, identifier: "_ZTSN3FPUUt0_E")
!1853 = !{!1854, !1910}
!1854 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !1852, baseType: !1855)
!1855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FpuFXSAVE", file: !27, line: 280, size: 3328, elements: !1856, identifier: "_ZTS9FpuFXSAVE")
!1856 = !{!1857, !1858, !1859, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1906, !1907, !1908}
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !1855, file: !27, line: 281, baseType: !1762, size: 16)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !1855, file: !27, line: 282, baseType: !1781, size: 16, offset: 16)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "ftw", scope: !1855, file: !27, line: 283, baseType: !1860, size: 8, offset: 32)
!1860 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "FPUAbridgedTagWord", file: !27, line: 245, size: 8, elements: !1861, identifier: "_ZTS18FPUAbridgedTagWord")
!1861 = !{!1862, !1863}
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "flat", scope: !1860, file: !27, line: 246, baseType: !62, size: 8)
!1863 = !DIDerivedType(tag: DW_TAG_member, scope: !1860, file: !27, line: 247, baseType: !1864, size: 8)
!1864 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1860, file: !27, line: 247, size: 8, elements: !1865, identifier: "_ZTSN18FPUAbridgedTagWordUt_E")
!1865 = !{!1866, !1867, !1868, !1869, !1870, !1871, !1872, !1873}
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !1864, file: !27, line: 248, baseType: !61, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !1864, file: !27, line: 249, baseType: !61, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !1864, file: !27, line: 250, baseType: !61, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !1864, file: !27, line: 251, baseType: !61, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "r4", scope: !1864, file: !27, line: 252, baseType: !61, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "r5", scope: !1864, file: !27, line: 253, baseType: !61, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "r6", scope: !1864, file: !27, line: 254, baseType: !61, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "r7", scope: !1864, file: !27, line: 255, baseType: !61, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd0", scope: !1855, file: !27, line: 284, baseType: !62, size: 8, offset: 40)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !1855, file: !27, line: 285, baseType: !28, size: 16, offset: 48)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !1855, file: !27, line: 286, baseType: !8, size: 32, offset: 64)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !1855, file: !27, line: 287, baseType: !1547, size: 16, offset: 96)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd1", scope: !1855, file: !27, line: 288, baseType: !28, size: 16, offset: 112)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "dp", scope: !1855, file: !27, line: 289, baseType: !8, size: 32, offset: 128)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1855, file: !27, line: 290, baseType: !1547, size: 16, offset: 160)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd2", scope: !1855, file: !27, line: 291, baseType: !28, size: 16, offset: 176)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !1855, file: !27, line: 292, baseType: !1883, size: 32, offset: 192)
!1883 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "FPUControlStatus", file: !27, line: 188, size: 32, elements: !1884, identifier: "_ZTS16FPUControlStatus")
!1884 = !{!1885, !1886}
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "flat", scope: !1883, file: !27, line: 189, baseType: !8, size: 32)
!1886 = !DIDerivedType(tag: DW_TAG_member, scope: !1883, file: !27, line: 190, baseType: !1887, size: 32)
!1887 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1883, file: !27, line: 190, size: 32, elements: !1888, identifier: "_ZTSN16FPUControlStatusUt_E")
!1888 = !{!1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905}
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "ie", scope: !1887, file: !27, line: 191, baseType: !8, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "de", scope: !1887, file: !27, line: 192, baseType: !8, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "ze", scope: !1887, file: !27, line: 193, baseType: !8, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "oe", scope: !1887, file: !27, line: 194, baseType: !8, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "ue", scope: !1887, file: !27, line: 195, baseType: !8, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "pe", scope: !1887, file: !27, line: 196, baseType: !8, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "daz", scope: !1887, file: !27, line: 197, baseType: !8, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "im", scope: !1887, file: !27, line: 198, baseType: !8, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "dm", scope: !1887, file: !27, line: 199, baseType: !8, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "zm", scope: !1887, file: !27, line: 200, baseType: !8, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "om", scope: !1887, file: !27, line: 201, baseType: !8, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "um", scope: !1887, file: !27, line: 202, baseType: !8, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !1887, file: !27, line: 203, baseType: !8, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "rn", scope: !1887, file: !27, line: 204, baseType: !8, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "rp", scope: !1887, file: !27, line: 205, baseType: !8, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "fz", scope: !1887, file: !27, line: 206, baseType: !8, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd", scope: !1887, file: !27, line: 207, baseType: !8, size: 16, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !1855, file: !27, line: 293, baseType: !1883, size: 32, offset: 224)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "st", scope: !1855, file: !27, line: 294, baseType: !1825, size: 1024, offset: 256)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "xmm", scope: !1855, file: !27, line: 295, baseType: !1909, size: 2048, offset: 1280)
!1909 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1287, size: 2048, elements: !1303)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "_padding0", scope: !1852, file: !27, line: 320, baseType: !1911, size: 768, offset: 3328)
!1911 = !DICompositeType(tag: DW_TAG_array_type, baseType: !62, size: 768, elements: !1912)
!1912 = !{!1913}
!1913 = !DISubrange(count: 96)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave64", scope: !1753, file: !27, line: 325, baseType: !1915, size: 4096)
!1915 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1753, file: !27, line: 323, size: 4096, elements: !1916, identifier: "_ZTSN3FPUUt1_E")
!1916 = !{!1917, !1931}
!1917 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !1915, baseType: !1918)
!1918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FpuFXSAVE64", file: !27, line: 299, size: 3328, elements: !1919, identifier: "_ZTS11FpuFXSAVE64")
!1919 = !{!1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930}
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !1918, file: !27, line: 300, baseType: !1762, size: 16)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !1918, file: !27, line: 301, baseType: !1781, size: 16, offset: 16)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "ftw", scope: !1918, file: !27, line: 302, baseType: !1860, size: 8, offset: 32)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd0", scope: !1918, file: !27, line: 303, baseType: !62, size: 8, offset: 40)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !1918, file: !27, line: 304, baseType: !28, size: 16, offset: 48)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !1918, file: !27, line: 305, baseType: !637, size: 64, offset: 64)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "dp", scope: !1918, file: !27, line: 306, baseType: !637, size: 64, offset: 128)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !1918, file: !27, line: 307, baseType: !1883, size: 32, offset: 192)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !1918, file: !27, line: 308, baseType: !1883, size: 32, offset: 224)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "st", scope: !1918, file: !27, line: 309, baseType: !1825, size: 1024, offset: 256)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "xmm", scope: !1918, file: !27, line: 310, baseType: !1909, size: 2048, offset: 1280)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "_padding0", scope: !1915, file: !27, line: 324, baseType: !1911, size: 768, offset: 3328)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "seg_caches", scope: !1268, file: !27, line: 761, baseType: !1933, size: 768, align: 64, offset: 26240)
!1933 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SegmentCaches", file: !27, line: 468, size: 768, align: 64, elements: !1934, identifier: "_ZTS13SegmentCaches")
!1934 = !{!1935, !1945, !1946, !1947, !1948, !1949}
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !1933, file: !27, line: 469, baseType: !1936, size: 128)
!1936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SegmentShadow", file: !27, line: 88, size: 128, elements: !1937, identifier: "_ZTS13SegmentShadow")
!1937 = !{!1938, !1943, !1944}
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1936, file: !27, line: 92, baseType: !1939, size: 64)
!1939 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1936, file: !27, line: 89, size: 64, elements: !1940, identifier: "_ZTSN13SegmentShadowUt_E")
!1940 = !{!1941, !1942}
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "dword", scope: !1939, file: !27, line: 90, baseType: !8, size: 32)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "qword", scope: !1939, file: !27, line: 91, baseType: !637, size: 64)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !1936, file: !27, line: 93, baseType: !8, size: 32, offset: 64)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1936, file: !27, line: 94, baseType: !8, size: 32, offset: 96)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !1933, file: !27, line: 470, baseType: !1936, size: 128, offset: 128)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1933, file: !27, line: 471, baseType: !1936, size: 128, offset: 256)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !1933, file: !27, line: 472, baseType: !1936, size: 128, offset: 384)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1933, file: !27, line: 473, baseType: !1936, size: 128, offset: 512)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "gs", scope: !1933, file: !27, line: 474, baseType: !1936, size: 128, offset: 640)
!1950 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_t", file: !1266, line: 42, baseType: !1951)
!1951 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr64_t", file: !1266, line: 41, baseType: !637)
!1952 = !DILocation(line: 54, column: 8, scope: !1261)
!1953 = !DILocation(line: 55, column: 10, scope: !1261)
!1954 = !DILocation(line: 56, column: 10, scope: !1261)
!1955 = !DILocation(line: 57, column: 10, scope: !1261)
!1956 = !DILocation(line: 58, column: 10, scope: !1261)
!1957 = !DILocation(line: 61, column: 9, scope: !1261)
!1958 = !DILocation(line: 62, column: 9, scope: !1261)
!1959 = !DILocation(line: 63, column: 20, scope: !1261)
!1960 = !DILocation(line: 63, column: 24, scope: !1261)
!1961 = !DILocation(line: 63, column: 28, scope: !1261)
!1962 = !DILocation(line: 69, column: 6, scope: !1261)
!1963 = !DILocation(line: 74, column: 20, scope: !1261)
!1964 = !DILocation(line: 74, column: 24, scope: !1261)
!1965 = !DILocation(line: 74, column: 28, scope: !1261)
!1966 = !DILocation(line: 74, column: 33, scope: !1261)
!1967 = !DILocation(line: 75, column: 20, scope: !1261)
!1968 = !DILocation(line: 75, column: 24, scope: !1261)
!1969 = !DILocation(line: 75, column: 28, scope: !1261)
!1970 = !DILocation(line: 75, column: 33, scope: !1261)
!1971 = !DILocation(line: 76, column: 20, scope: !1261)
!1972 = !DILocation(line: 76, column: 24, scope: !1261)
!1973 = !DILocation(line: 76, column: 28, scope: !1261)
!1974 = !DILocation(line: 76, column: 33, scope: !1261)
!1975 = !DILocation(line: 77, column: 20, scope: !1261)
!1976 = !DILocation(line: 77, column: 24, scope: !1261)
!1977 = !DILocation(line: 77, column: 28, scope: !1261)
!1978 = !DILocation(line: 77, column: 33, scope: !1261)
!1979 = !DILocation(line: 78, column: 20, scope: !1261)
!1980 = !DILocation(line: 78, column: 24, scope: !1261)
!1981 = !DILocation(line: 78, column: 28, scope: !1261)
!1982 = !DILocation(line: 78, column: 33, scope: !1261)
!1983 = !DILocation(line: 79, column: 20, scope: !1261)
!1984 = !DILocation(line: 79, column: 24, scope: !1261)
!1985 = !DILocation(line: 79, column: 28, scope: !1261)
!1986 = !DILocation(line: 79, column: 33, scope: !1261)
!1987 = !DILocation(line: 80, column: 20, scope: !1261)
!1988 = !DILocation(line: 80, column: 24, scope: !1261)
!1989 = !DILocation(line: 80, column: 28, scope: !1261)
!1990 = !DILocation(line: 80, column: 33, scope: !1261)
!1991 = !DILocation(line: 81, column: 20, scope: !1261)
!1992 = !DILocation(line: 81, column: 24, scope: !1261)
!1993 = !DILocation(line: 81, column: 28, scope: !1261)
!1994 = !DILocation(line: 81, column: 33, scope: !1261)
!1995 = !DILocation(line: 83, column: 21, scope: !1261)
!1996 = !DILocation(line: 83, column: 25, scope: !1261)
!1997 = !DILocation(line: 83, column: 29, scope: !1261)
!1998 = !DILocation(line: 83, column: 34, scope: !1261)
!1999 = !DILocation(line: 84, column: 21, scope: !1261)
!2000 = !DILocation(line: 84, column: 25, scope: !1261)
!2001 = !DILocation(line: 84, column: 29, scope: !1261)
!2002 = !DILocation(line: 84, column: 34, scope: !1261)
!2003 = !DILocation(line: 85, column: 21, scope: !1261)
!2004 = !DILocation(line: 85, column: 25, scope: !1261)
!2005 = !DILocation(line: 85, column: 29, scope: !1261)
!2006 = !DILocation(line: 85, column: 34, scope: !1261)
!2007 = !DILocation(line: 86, column: 21, scope: !1261)
!2008 = !DILocation(line: 86, column: 25, scope: !1261)
!2009 = !DILocation(line: 86, column: 29, scope: !1261)
!2010 = !DILocation(line: 86, column: 34, scope: !1261)
!2011 = !DILocation(line: 87, column: 21, scope: !1261)
!2012 = !DILocation(line: 87, column: 25, scope: !1261)
!2013 = !DILocation(line: 87, column: 28, scope: !1261)
!2014 = !DILocation(line: 87, column: 33, scope: !1261)
!2015 = !DILocation(line: 88, column: 21, scope: !1261)
!2016 = !DILocation(line: 88, column: 25, scope: !1261)
!2017 = !DILocation(line: 88, column: 28, scope: !1261)
!2018 = !DILocation(line: 88, column: 33, scope: !1261)
!2019 = !DILocation(line: 89, column: 22, scope: !1261)
!2020 = !DILocation(line: 89, column: 26, scope: !1261)
!2021 = !DILocation(line: 89, column: 30, scope: !1261)
!2022 = !DILocation(line: 89, column: 35, scope: !1261)
!2023 = !DILocation(line: 90, column: 22, scope: !1261)
!2024 = !DILocation(line: 90, column: 26, scope: !1261)
!2025 = !DILocation(line: 90, column: 30, scope: !1261)
!2026 = !DILocation(line: 90, column: 35, scope: !1261)
!2027 = !DILocation(line: 91, column: 22, scope: !1261)
!2028 = !DILocation(line: 91, column: 26, scope: !1261)
!2029 = !DILocation(line: 91, column: 30, scope: !1261)
!2030 = !DILocation(line: 91, column: 35, scope: !1261)
!2031 = !DILocation(line: 92, column: 22, scope: !1261)
!2032 = !DILocation(line: 92, column: 26, scope: !1261)
!2033 = !DILocation(line: 92, column: 30, scope: !1261)
!2034 = !DILocation(line: 92, column: 35, scope: !1261)
!2035 = !DILocation(line: 93, column: 22, scope: !1261)
!2036 = !DILocation(line: 93, column: 26, scope: !1261)
!2037 = !DILocation(line: 93, column: 30, scope: !1261)
!2038 = !DILocation(line: 93, column: 35, scope: !1261)
!2039 = !DILocation(line: 94, column: 22, scope: !1261)
!2040 = !DILocation(line: 94, column: 26, scope: !1261)
!2041 = !DILocation(line: 94, column: 30, scope: !1261)
!2042 = !DILocation(line: 94, column: 35, scope: !1261)
!2043 = !DILocation(line: 96, column: 20, scope: !1261)
!2044 = !DILocation(line: 96, column: 24, scope: !1261)
!2045 = !DILocation(line: 96, column: 28, scope: !1261)
!2046 = !DILocation(line: 97, column: 20, scope: !1261)
!2047 = !DILocation(line: 97, column: 24, scope: !1261)
!2048 = !DILocation(line: 97, column: 28, scope: !1261)
!2049 = !DILocation(line: 98, column: 20, scope: !1261)
!2050 = !DILocation(line: 98, column: 24, scope: !1261)
!2051 = !DILocation(line: 98, column: 28, scope: !1261)
!2052 = !DILocation(line: 99, column: 20, scope: !1261)
!2053 = !DILocation(line: 99, column: 24, scope: !1261)
!2054 = !DILocation(line: 99, column: 28, scope: !1261)
!2055 = !DILocation(line: 100, column: 20, scope: !1261)
!2056 = !DILocation(line: 100, column: 24, scope: !1261)
!2057 = !DILocation(line: 100, column: 28, scope: !1261)
!2058 = !DILocation(line: 101, column: 20, scope: !1261)
!2059 = !DILocation(line: 101, column: 24, scope: !1261)
!2060 = !DILocation(line: 101, column: 28, scope: !1261)
!2061 = !DILocation(line: 102, column: 20, scope: !1261)
!2062 = !DILocation(line: 102, column: 24, scope: !1261)
!2063 = !DILocation(line: 102, column: 28, scope: !1261)
!2064 = !DILocation(line: 103, column: 20, scope: !1261)
!2065 = !DILocation(line: 103, column: 24, scope: !1261)
!2066 = !DILocation(line: 103, column: 28, scope: !1261)
!2067 = !DILocation(line: 105, column: 21, scope: !1261)
!2068 = !DILocation(line: 105, column: 25, scope: !1261)
!2069 = !DILocation(line: 105, column: 28, scope: !1261)
!2070 = !DILocation(line: 106, column: 21, scope: !1261)
!2071 = !DILocation(line: 106, column: 25, scope: !1261)
!2072 = !DILocation(line: 106, column: 28, scope: !1261)
!2073 = !DILocation(line: 107, column: 22, scope: !1261)
!2074 = !DILocation(line: 107, column: 26, scope: !1261)
!2075 = !DILocation(line: 107, column: 30, scope: !1261)
!2076 = !DILocation(line: 108, column: 22, scope: !1261)
!2077 = !DILocation(line: 108, column: 26, scope: !1261)
!2078 = !DILocation(line: 108, column: 30, scope: !1261)
!2079 = !DILocation(line: 109, column: 22, scope: !1261)
!2080 = !DILocation(line: 109, column: 26, scope: !1261)
!2081 = !DILocation(line: 109, column: 30, scope: !1261)
!2082 = !DILocation(line: 110, column: 22, scope: !1261)
!2083 = !DILocation(line: 110, column: 26, scope: !1261)
!2084 = !DILocation(line: 110, column: 30, scope: !1261)
!2085 = !DILocation(line: 111, column: 22, scope: !1261)
!2086 = !DILocation(line: 111, column: 26, scope: !1261)
!2087 = !DILocation(line: 111, column: 30, scope: !1261)
!2088 = !DILocation(line: 112, column: 22, scope: !1261)
!2089 = !DILocation(line: 112, column: 26, scope: !1261)
!2090 = !DILocation(line: 112, column: 30, scope: !1261)
!2091 = !DILocation(line: 114, column: 20, scope: !1261)
!2092 = !DILocation(line: 114, column: 24, scope: !1261)
!2093 = !DILocation(line: 114, column: 28, scope: !1261)
!2094 = !DILocation(line: 116, column: 21, scope: !1261)
!2095 = !DILocation(line: 116, column: 25, scope: !1261)
!2096 = !DILocation(line: 116, column: 29, scope: !1261)
!2097 = !DILocation(line: 117, column: 21, scope: !1261)
!2098 = !DILocation(line: 117, column: 25, scope: !1261)
!2099 = !DILocation(line: 117, column: 29, scope: !1261)
!2100 = !DILocation(line: 118, column: 21, scope: !1261)
!2101 = !DILocation(line: 118, column: 25, scope: !1261)
!2102 = !DILocation(line: 118, column: 29, scope: !1261)
!2103 = !DILocation(line: 119, column: 21, scope: !1261)
!2104 = !DILocation(line: 119, column: 25, scope: !1261)
!2105 = !DILocation(line: 119, column: 29, scope: !1261)
!2106 = !DILocation(line: 120, column: 21, scope: !1261)
!2107 = !DILocation(line: 120, column: 25, scope: !1261)
!2108 = !DILocation(line: 120, column: 29, scope: !1261)
!2109 = !DILocation(line: 121, column: 21, scope: !1261)
!2110 = !DILocation(line: 121, column: 25, scope: !1261)
!2111 = !DILocation(line: 121, column: 29, scope: !1261)
!2112 = !DILocation(line: 122, column: 21, scope: !1261)
!2113 = !DILocation(line: 122, column: 25, scope: !1261)
!2114 = !DILocation(line: 122, column: 29, scope: !1261)
!2115 = !DILocation(line: 123, column: 21, scope: !1261)
!2116 = !DILocation(line: 123, column: 25, scope: !1261)
!2117 = !DILocation(line: 123, column: 29, scope: !1261)
!2118 = !DILocation(line: 124, column: 21, scope: !1261)
!2119 = !DILocation(line: 124, column: 25, scope: !1261)
!2120 = !DILocation(line: 124, column: 29, scope: !1261)
!2121 = !DILocation(line: 127, column: 21, scope: !1261)
!2122 = !DILocation(line: 127, column: 25, scope: !1261)
!2123 = !DILocation(line: 127, column: 28, scope: !1261)
!2124 = !DILocation(line: 128, column: 21, scope: !1261)
!2125 = !DILocation(line: 128, column: 25, scope: !1261)
!2126 = !DILocation(line: 128, column: 28, scope: !1261)
!2127 = !DILocation(line: 129, column: 22, scope: !1261)
!2128 = !DILocation(line: 129, column: 26, scope: !1261)
!2129 = !DILocation(line: 129, column: 30, scope: !1261)
!2130 = !DILocation(line: 130, column: 22, scope: !1261)
!2131 = !DILocation(line: 130, column: 26, scope: !1261)
!2132 = !DILocation(line: 130, column: 30, scope: !1261)
!2133 = !DILocation(line: 131, column: 22, scope: !1261)
!2134 = !DILocation(line: 131, column: 26, scope: !1261)
!2135 = !DILocation(line: 131, column: 30, scope: !1261)
!2136 = !DILocation(line: 132, column: 22, scope: !1261)
!2137 = !DILocation(line: 132, column: 26, scope: !1261)
!2138 = !DILocation(line: 132, column: 30, scope: !1261)
!2139 = !DILocation(line: 133, column: 22, scope: !1261)
!2140 = !DILocation(line: 133, column: 26, scope: !1261)
!2141 = !DILocation(line: 133, column: 30, scope: !1261)
!2142 = !DILocation(line: 134, column: 22, scope: !1261)
!2143 = !DILocation(line: 134, column: 26, scope: !1261)
!2144 = !DILocation(line: 134, column: 30, scope: !1261)
!2145 = !DILocation(line: 136, column: 21, scope: !1261)
!2146 = !DILocation(line: 136, column: 25, scope: !1261)
!2147 = !DILocation(line: 136, column: 29, scope: !1261)
!2148 = !DILocation(line: 137, column: 21, scope: !1261)
!2149 = !DILocation(line: 137, column: 25, scope: !1261)
!2150 = !DILocation(line: 137, column: 29, scope: !1261)
!2151 = !DILocation(line: 138, column: 21, scope: !1261)
!2152 = !DILocation(line: 138, column: 25, scope: !1261)
!2153 = !DILocation(line: 138, column: 29, scope: !1261)
!2154 = !DILocation(line: 139, column: 21, scope: !1261)
!2155 = !DILocation(line: 139, column: 25, scope: !1261)
!2156 = !DILocation(line: 139, column: 29, scope: !1261)
!2157 = !DILocation(line: 140, column: 21, scope: !1261)
!2158 = !DILocation(line: 140, column: 25, scope: !1261)
!2159 = !DILocation(line: 140, column: 29, scope: !1261)
!2160 = !DILocation(line: 141, column: 21, scope: !1261)
!2161 = !DILocation(line: 141, column: 25, scope: !1261)
!2162 = !DILocation(line: 141, column: 29, scope: !1261)
!2163 = !DILocation(line: 142, column: 21, scope: !1261)
!2164 = !DILocation(line: 142, column: 25, scope: !1261)
!2165 = !DILocation(line: 142, column: 29, scope: !1261)
!2166 = !DILocation(line: 143, column: 21, scope: !1261)
!2167 = !DILocation(line: 143, column: 25, scope: !1261)
!2168 = !DILocation(line: 143, column: 29, scope: !1261)
!2169 = !DILocation(line: 144, column: 20, scope: !1261)
!2170 = !DILocation(line: 144, column: 24, scope: !1261)
!2171 = !DILocation(line: 144, column: 27, scope: !1261)
!2172 = !DILocation(line: 145, column: 20, scope: !1261)
!2173 = !DILocation(line: 145, column: 24, scope: !1261)
!2174 = !DILocation(line: 145, column: 27, scope: !1261)
!2175 = !DILocation(line: 146, column: 21, scope: !1261)
!2176 = !DILocation(line: 146, column: 25, scope: !1261)
!2177 = !DILocation(line: 146, column: 29, scope: !1261)
!2178 = !DILocation(line: 147, column: 21, scope: !1261)
!2179 = !DILocation(line: 147, column: 25, scope: !1261)
!2180 = !DILocation(line: 147, column: 29, scope: !1261)
!2181 = !DILocation(line: 148, column: 21, scope: !1261)
!2182 = !DILocation(line: 148, column: 25, scope: !1261)
!2183 = !DILocation(line: 148, column: 29, scope: !1261)
!2184 = !DILocation(line: 149, column: 21, scope: !1261)
!2185 = !DILocation(line: 149, column: 25, scope: !1261)
!2186 = !DILocation(line: 149, column: 29, scope: !1261)
!2187 = !DILocation(line: 150, column: 21, scope: !1261)
!2188 = !DILocation(line: 150, column: 25, scope: !1261)
!2189 = !DILocation(line: 150, column: 29, scope: !1261)
!2190 = !DILocation(line: 151, column: 21, scope: !1261)
!2191 = !DILocation(line: 151, column: 25, scope: !1261)
!2192 = !DILocation(line: 151, column: 29, scope: !1261)
!2193 = !DILocation(line: 152, column: 21, scope: !1261)
!2194 = !DILocation(line: 152, column: 25, scope: !1261)
!2195 = !DILocation(line: 152, column: 29, scope: !1261)
!2196 = !DILocation(line: 155, column: 20, scope: !1261)
!2197 = !DILocation(line: 155, column: 24, scope: !1261)
!2198 = !DILocation(line: 155, column: 27, scope: !1261)
!2199 = !DILocation(line: 156, column: 20, scope: !1261)
!2200 = !DILocation(line: 156, column: 24, scope: !1261)
!2201 = !DILocation(line: 156, column: 27, scope: !1261)
!2202 = !DILocation(line: 157, column: 20, scope: !1261)
!2203 = !DILocation(line: 157, column: 24, scope: !1261)
!2204 = !DILocation(line: 157, column: 27, scope: !1261)
!2205 = !DILocation(line: 158, column: 20, scope: !1261)
!2206 = !DILocation(line: 158, column: 24, scope: !1261)
!2207 = !DILocation(line: 158, column: 27, scope: !1261)
!2208 = !DILocation(line: 159, column: 20, scope: !1261)
!2209 = !DILocation(line: 159, column: 24, scope: !1261)
!2210 = !DILocation(line: 159, column: 27, scope: !1261)
!2211 = !DILocation(line: 160, column: 20, scope: !1261)
!2212 = !DILocation(line: 160, column: 24, scope: !1261)
!2213 = !DILocation(line: 160, column: 27, scope: !1261)
!2214 = !DILocation(line: 164, column: 25, scope: !1261)
!2215 = !DILocation(line: 164, column: 30, scope: !1261)
!2216 = !DILocation(line: 164, column: 38, scope: !1261)
!2217 = !DILocation(line: 165, column: 25, scope: !1261)
!2218 = !DILocation(line: 165, column: 30, scope: !1261)
!2219 = !DILocation(line: 165, column: 38, scope: !1261)
!2220 = !DILocation(line: 205, column: 22, scope: !1261)
!2221 = !DILocation(line: 205, column: 16, scope: !1261)
!2222 = !DILocation(line: 205, column: 29, scope: !1261)
!2223 = !DILocation(line: 206, column: 22, scope: !1261)
!2224 = !DILocation(line: 206, column: 16, scope: !1261)
!2225 = !DILocation(line: 206, column: 29, scope: !1261)
!2226 = !DILocation(line: 207, column: 22, scope: !1261)
!2227 = !DILocation(line: 207, column: 16, scope: !1261)
!2228 = !DILocation(line: 207, column: 29, scope: !1261)
!2229 = !DILocation(line: 208, column: 22, scope: !1261)
!2230 = !DILocation(line: 208, column: 16, scope: !1261)
!2231 = !DILocation(line: 208, column: 29, scope: !1261)
!2232 = !DILocation(line: 209, column: 22, scope: !1261)
!2233 = !DILocation(line: 209, column: 16, scope: !1261)
!2234 = !DILocation(line: 209, column: 29, scope: !1261)
!2235 = !DILocation(line: 210, column: 22, scope: !1261)
!2236 = !DILocation(line: 210, column: 16, scope: !1261)
!2237 = !DILocation(line: 210, column: 29, scope: !1261)
!2238 = !DILocation(line: 211, column: 22, scope: !1261)
!2239 = !DILocation(line: 211, column: 16, scope: !1261)
!2240 = !DILocation(line: 211, column: 29, scope: !1261)
!2241 = !DILocation(line: 212, column: 22, scope: !1261)
!2242 = !DILocation(line: 212, column: 16, scope: !1261)
!2243 = !DILocation(line: 212, column: 29, scope: !1261)
!2244 = !DILocation(line: 214, column: 22, scope: !1261)
!2245 = !DILocation(line: 214, column: 16, scope: !1261)
!2246 = !DILocation(line: 214, column: 29, scope: !1261)
!2247 = !DILocation(line: 215, column: 22, scope: !1261)
!2248 = !DILocation(line: 215, column: 16, scope: !1261)
!2249 = !DILocation(line: 215, column: 29, scope: !1261)
!2250 = !DILocation(line: 216, column: 23, scope: !1261)
!2251 = !DILocation(line: 216, column: 17, scope: !1261)
!2252 = !DILocation(line: 216, column: 31, scope: !1261)
!2253 = !DILocation(line: 217, column: 23, scope: !1261)
!2254 = !DILocation(line: 217, column: 17, scope: !1261)
!2255 = !DILocation(line: 217, column: 31, scope: !1261)
!2256 = !DILocation(line: 218, column: 23, scope: !1261)
!2257 = !DILocation(line: 218, column: 17, scope: !1261)
!2258 = !DILocation(line: 218, column: 31, scope: !1261)
!2259 = !DILocation(line: 219, column: 23, scope: !1261)
!2260 = !DILocation(line: 219, column: 17, scope: !1261)
!2261 = !DILocation(line: 219, column: 31, scope: !1261)
!2262 = !DILocation(line: 220, column: 23, scope: !1261)
!2263 = !DILocation(line: 220, column: 17, scope: !1261)
!2264 = !DILocation(line: 220, column: 31, scope: !1261)
!2265 = !DILocation(line: 221, column: 23, scope: !1261)
!2266 = !DILocation(line: 221, column: 17, scope: !1261)
!2267 = !DILocation(line: 221, column: 31, scope: !1261)
!2268 = !DILocation(line: 245, column: 22, scope: !1261)
!2269 = !DILocation(line: 245, column: 16, scope: !1261)
!2270 = !DILocation(line: 245, column: 29, scope: !1261)
!2271 = !DILocation(line: 246, column: 22, scope: !1261)
!2272 = !DILocation(line: 246, column: 16, scope: !1261)
!2273 = !DILocation(line: 246, column: 29, scope: !1261)
!2274 = !DILocation(line: 247, column: 22, scope: !1261)
!2275 = !DILocation(line: 247, column: 16, scope: !1261)
!2276 = !DILocation(line: 247, column: 29, scope: !1261)
!2277 = !DILocation(line: 248, column: 22, scope: !1261)
!2278 = !DILocation(line: 248, column: 16, scope: !1261)
!2279 = !DILocation(line: 248, column: 29, scope: !1261)
!2280 = !DILocation(line: 249, column: 22, scope: !1261)
!2281 = !DILocation(line: 249, column: 16, scope: !1261)
!2282 = !DILocation(line: 249, column: 29, scope: !1261)
!2283 = !DILocation(line: 250, column: 22, scope: !1261)
!2284 = !DILocation(line: 250, column: 16, scope: !1261)
!2285 = !DILocation(line: 250, column: 29, scope: !1261)
!2286 = !DILocation(line: 251, column: 22, scope: !1261)
!2287 = !DILocation(line: 251, column: 16, scope: !1261)
!2288 = !DILocation(line: 251, column: 29, scope: !1261)
!2289 = !DILocation(line: 252, column: 22, scope: !1261)
!2290 = !DILocation(line: 252, column: 16, scope: !1261)
!2291 = !DILocation(line: 252, column: 29, scope: !1261)
!2292 = !DILocation(line: 255, column: 22, scope: !1261)
!2293 = !DILocation(line: 255, column: 16, scope: !1261)
!2294 = !DILocation(line: 255, column: 29, scope: !1261)
!2295 = !DILocation(line: 256, column: 22, scope: !1261)
!2296 = !DILocation(line: 256, column: 16, scope: !1261)
!2297 = !DILocation(line: 256, column: 29, scope: !1261)
!2298 = !DILocation(line: 257, column: 23, scope: !1261)
!2299 = !DILocation(line: 257, column: 17, scope: !1261)
!2300 = !DILocation(line: 257, column: 31, scope: !1261)
!2301 = !DILocation(line: 258, column: 23, scope: !1261)
!2302 = !DILocation(line: 258, column: 17, scope: !1261)
!2303 = !DILocation(line: 258, column: 31, scope: !1261)
!2304 = !DILocation(line: 259, column: 23, scope: !1261)
!2305 = !DILocation(line: 259, column: 17, scope: !1261)
!2306 = !DILocation(line: 259, column: 31, scope: !1261)
!2307 = !DILocation(line: 260, column: 23, scope: !1261)
!2308 = !DILocation(line: 260, column: 17, scope: !1261)
!2309 = !DILocation(line: 260, column: 31, scope: !1261)
!2310 = !DILocation(line: 261, column: 23, scope: !1261)
!2311 = !DILocation(line: 261, column: 17, scope: !1261)
!2312 = !DILocation(line: 261, column: 31, scope: !1261)
!2313 = !DILocation(line: 262, column: 23, scope: !1261)
!2314 = !DILocation(line: 262, column: 17, scope: !1261)
!2315 = !DILocation(line: 262, column: 31, scope: !1261)
!2316 = !DILocation(line: 285, column: 21, scope: !1261)
!2317 = !DILocation(line: 285, column: 24, scope: !1261)
!2318 = !DILocation(line: 285, column: 15, scope: !1261)
!2319 = !DILocation(line: 285, column: 33, scope: !1261)
!2320 = !DILocation(line: 286, column: 21, scope: !1261)
!2321 = !DILocation(line: 286, column: 24, scope: !1261)
!2322 = !DILocation(line: 286, column: 15, scope: !1261)
!2323 = !DILocation(line: 286, column: 33, scope: !1261)
!2324 = !DILocation(line: 287, column: 21, scope: !1261)
!2325 = !DILocation(line: 287, column: 24, scope: !1261)
!2326 = !DILocation(line: 287, column: 15, scope: !1261)
!2327 = !DILocation(line: 287, column: 33, scope: !1261)
!2328 = !DILocation(line: 288, column: 21, scope: !1261)
!2329 = !DILocation(line: 288, column: 24, scope: !1261)
!2330 = !DILocation(line: 288, column: 15, scope: !1261)
!2331 = !DILocation(line: 288, column: 33, scope: !1261)
!2332 = !DILocation(line: 289, column: 21, scope: !1261)
!2333 = !DILocation(line: 289, column: 24, scope: !1261)
!2334 = !DILocation(line: 289, column: 15, scope: !1261)
!2335 = !DILocation(line: 289, column: 33, scope: !1261)
!2336 = !DILocation(line: 290, column: 21, scope: !1261)
!2337 = !DILocation(line: 290, column: 24, scope: !1261)
!2338 = !DILocation(line: 290, column: 15, scope: !1261)
!2339 = !DILocation(line: 290, column: 33, scope: !1261)
!2340 = !DILocation(line: 291, column: 21, scope: !1261)
!2341 = !DILocation(line: 291, column: 24, scope: !1261)
!2342 = !DILocation(line: 291, column: 15, scope: !1261)
!2343 = !DILocation(line: 291, column: 33, scope: !1261)
!2344 = !DILocation(line: 292, column: 21, scope: !1261)
!2345 = !DILocation(line: 292, column: 24, scope: !1261)
!2346 = !DILocation(line: 292, column: 15, scope: !1261)
!2347 = !DILocation(line: 292, column: 33, scope: !1261)
!2348 = !DILocation(line: 318, column: 21, scope: !1261)
!2349 = !DILocation(line: 318, column: 25, scope: !1261)
!2350 = !DILocation(line: 318, column: 15, scope: !1261)
!2351 = !DILocation(line: 318, column: 34, scope: !1261)
!2352 = !DILocation(line: 318, column: 38, scope: !1261)
!2353 = !DILocation(line: 318, column: 45, scope: !1261)
!2354 = !DILocation(line: 319, column: 21, scope: !1261)
!2355 = !DILocation(line: 319, column: 25, scope: !1261)
!2356 = !DILocation(line: 319, column: 15, scope: !1261)
!2357 = !DILocation(line: 319, column: 34, scope: !1261)
!2358 = !DILocation(line: 319, column: 38, scope: !1261)
!2359 = !DILocation(line: 319, column: 45, scope: !1261)
!2360 = !DILocation(line: 320, column: 21, scope: !1261)
!2361 = !DILocation(line: 320, column: 25, scope: !1261)
!2362 = !DILocation(line: 320, column: 15, scope: !1261)
!2363 = !DILocation(line: 320, column: 34, scope: !1261)
!2364 = !DILocation(line: 320, column: 38, scope: !1261)
!2365 = !DILocation(line: 320, column: 45, scope: !1261)
!2366 = !DILocation(line: 321, column: 21, scope: !1261)
!2367 = !DILocation(line: 321, column: 25, scope: !1261)
!2368 = !DILocation(line: 321, column: 15, scope: !1261)
!2369 = !DILocation(line: 321, column: 34, scope: !1261)
!2370 = !DILocation(line: 321, column: 38, scope: !1261)
!2371 = !DILocation(line: 321, column: 45, scope: !1261)
!2372 = !DILocation(line: 322, column: 21, scope: !1261)
!2373 = !DILocation(line: 322, column: 25, scope: !1261)
!2374 = !DILocation(line: 322, column: 15, scope: !1261)
!2375 = !DILocation(line: 322, column: 34, scope: !1261)
!2376 = !DILocation(line: 322, column: 38, scope: !1261)
!2377 = !DILocation(line: 322, column: 45, scope: !1261)
!2378 = !DILocation(line: 323, column: 21, scope: !1261)
!2379 = !DILocation(line: 323, column: 25, scope: !1261)
!2380 = !DILocation(line: 323, column: 15, scope: !1261)
!2381 = !DILocation(line: 323, column: 34, scope: !1261)
!2382 = !DILocation(line: 323, column: 38, scope: !1261)
!2383 = !DILocation(line: 323, column: 45, scope: !1261)
!2384 = !DILocation(line: 324, column: 21, scope: !1261)
!2385 = !DILocation(line: 324, column: 25, scope: !1261)
!2386 = !DILocation(line: 324, column: 15, scope: !1261)
!2387 = !DILocation(line: 324, column: 34, scope: !1261)
!2388 = !DILocation(line: 324, column: 38, scope: !1261)
!2389 = !DILocation(line: 324, column: 45, scope: !1261)
!2390 = !DILocation(line: 325, column: 21, scope: !1261)
!2391 = !DILocation(line: 325, column: 25, scope: !1261)
!2392 = !DILocation(line: 325, column: 15, scope: !1261)
!2393 = !DILocation(line: 325, column: 34, scope: !1261)
!2394 = !DILocation(line: 325, column: 38, scope: !1261)
!2395 = !DILocation(line: 325, column: 45, scope: !1261)
!2396 = !DILocation(line: 328, column: 20, scope: !1261)
!2397 = !DILocation(line: 328, column: 26, scope: !1261)
!2398 = !DILocation(line: 329, column: 20, scope: !1261)
!2399 = !DILocation(line: 329, column: 26, scope: !1261)
!2400 = !DILocation(line: 330, column: 20, scope: !1261)
!2401 = !DILocation(line: 330, column: 26, scope: !1261)
!2402 = !DILocation(line: 331, column: 20, scope: !1261)
!2403 = !DILocation(line: 331, column: 26, scope: !1261)
!2404 = !DILocation(line: 332, column: 20, scope: !1261)
!2405 = !DILocation(line: 332, column: 26, scope: !1261)
!2406 = !DILocation(line: 333, column: 20, scope: !1261)
!2407 = !DILocation(line: 333, column: 26, scope: !1261)
!2408 = !DILocation(line: 334, column: 20, scope: !1261)
!2409 = !DILocation(line: 334, column: 26, scope: !1261)
!2410 = !DILocation(line: 337, column: 9, scope: !1261)
!2411 = !DILocation(line: 338, column: 9, scope: !1261)
!2412 = !DILocation(line: 339, column: 9, scope: !1261)
!2413 = !DILocation(line: 340, column: 9, scope: !1261)
!2414 = !DILocation(line: 341, column: 9, scope: !1261)
!2415 = !DILocation(line: 342, column: 9, scope: !1261)
!2416 = !DILocation(line: 343, column: 9, scope: !1261)
!2417 = !DILocation(line: 344, column: 9, scope: !1261)
!2418 = !DILocation(line: 347, column: 9, scope: !1261)
!2419 = !DILocation(line: 348, column: 9, scope: !1261)
!2420 = !DILocation(line: 349, column: 9, scope: !1261)
!2421 = !DILocation(line: 350, column: 9, scope: !1261)
!2422 = !DILocation(line: 351, column: 9, scope: !1261)
!2423 = !DILocation(line: 353, column: 9, scope: !1261)
!2424 = !DILocation(line: 357, column: 3, scope: !1261)
!2425 = distinct !DISubprogram(name: "__remill_intrinsics", scope: !2426, file: !2426, line: 35, type: !95, isLocal: false, isDefinition: true, scopeLine: 35, flags: DIFlagPrototyped, isOptimized: false, unit: !1, variables: !7)
!2426 = !DIFile(filename: "/home/ubuntu/Github/remill/remill/Arch/Runtime/Intrinsics.cpp", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!2427 = !DILocation(line: 116, column: 1, scope: !2425)
!2428 = !{!2429, !2429, i64 0}
!2429 = !{!"long", !2430, i64 0}
!2430 = !{!"omnipotent char", !2431, i64 0}
!2431 = !{!"Simple C++ TBAA"}
!2432 = !{!2433, !2433, i64 0}
!2433 = !{!"double", !2430, i64 0}
!2434 = !{!2435, !2430, i64 2065}
!2435 = !{!"_ZTS5State", !2430, i64 16, !2436, i64 2064, !2430, i64 2080, !2437, i64 2088, !2439, i64 2112, !2441, i64 2208, !2442, i64 2480, !2443, i64 2608, !2444, i64 2736, !2430, i64 2760, !2430, i64 2768, !2445, i64 3280}
!2436 = !{!"_ZTS10ArithFlags", !2430, i64 0, !2430, i64 1, !2430, i64 2, !2430, i64 3, !2430, i64 4, !2430, i64 5, !2430, i64 6, !2430, i64 7, !2430, i64 8, !2430, i64 9, !2430, i64 10, !2430, i64 11, !2430, i64 12, !2430, i64 13, !2430, i64 14, !2430, i64 15}
!2437 = !{!"_ZTS8Segments", !2438, i64 0, !2430, i64 2, !2438, i64 4, !2430, i64 6, !2438, i64 8, !2430, i64 10, !2438, i64 12, !2430, i64 14, !2438, i64 16, !2430, i64 18, !2438, i64 20, !2430, i64 22}
!2438 = !{!"short", !2430, i64 0}
!2439 = !{!"_ZTS12AddressSpace", !2429, i64 0, !2440, i64 8, !2429, i64 16, !2440, i64 24, !2429, i64 32, !2440, i64 40, !2429, i64 48, !2440, i64 56, !2429, i64 64, !2440, i64 72, !2429, i64 80, !2440, i64 88}
!2440 = !{!"_ZTS3Reg", !2430, i64 0}
!2441 = !{!"_ZTS3GPR", !2429, i64 0, !2440, i64 8, !2429, i64 16, !2440, i64 24, !2429, i64 32, !2440, i64 40, !2429, i64 48, !2440, i64 56, !2429, i64 64, !2440, i64 72, !2429, i64 80, !2440, i64 88, !2429, i64 96, !2440, i64 104, !2429, i64 112, !2440, i64 120, !2429, i64 128, !2440, i64 136, !2429, i64 144, !2440, i64 152, !2429, i64 160, !2440, i64 168, !2429, i64 176, !2440, i64 184, !2429, i64 192, !2440, i64 200, !2429, i64 208, !2440, i64 216, !2429, i64 224, !2440, i64 232, !2429, i64 240, !2440, i64 248, !2429, i64 256, !2440, i64 264}
!2442 = !{!"_ZTS8X87Stack", !2430, i64 0}
!2443 = !{!"_ZTS3MMX", !2430, i64 0}
!2444 = !{!"_ZTS14FPUStatusFlags", !2430, i64 0, !2430, i64 1, !2430, i64 2, !2430, i64 3, !2430, i64 4, !2430, i64 5, !2430, i64 6, !2430, i64 7, !2430, i64 8, !2430, i64 9, !2430, i64 10, !2430, i64 11, !2430, i64 12, !2430, i64 13, !2430, i64 14, !2430, i64 15, !2430, i64 16, !2430, i64 17, !2430, i64 18, !2430, i64 19, !2430, i64 20}
!2445 = !{!"_ZTS13SegmentCaches", !2446, i64 0, !2446, i64 16, !2446, i64 32, !2446, i64 48, !2446, i64 64, !2446, i64 80}
!2446 = !{!"_ZTS13SegmentShadow", !2430, i64 0, !2447, i64 8, !2447, i64 12}
!2447 = !{!"int", !2430, i64 0}
!2448 = !{!2435, !2430, i64 2067}
!2449 = !{!2435, !2430, i64 2069}
!2450 = !{!2435, !2430, i64 2071}
!2451 = !{!2435, !2430, i64 2073}
!2452 = !{!2435, !2430, i64 2077}
!2453 = !{!2430, !2430, i64 0}
!2454 = !{!2455, !2457}
!2455 = distinct !{!2455, !2456, !"ext_400760_sqrt: argument 0"}
!2456 = distinct !{!2456, !"ext_400760_sqrt"}
!2457 = distinct !{!2457, !2456, !"ext_400760_sqrt: argument 1"}
!2458 = !{!2455}
!2459 = !{!2457}
!2460 = !{!2461, !2461, i64 0}
!2461 = !{!"float", !2430, i64 0}
!2462 = !{!2463, !2465}
!2463 = distinct !{!2463, !2464, !"ext_400750_sin: argument 0"}
!2464 = distinct !{!2464, !"ext_400750_sin"}
!2465 = distinct !{!2465, !2464, !"ext_400750_sin: argument 1"}
!2466 = !{!2463}
!2467 = !{!2465}
!2468 = !{!2469, !2471}
!2469 = distinct !{!2469, !2470, !"ext_602110_cos: argument 0"}
!2470 = distinct !{!2470, !"ext_602110_cos"}
!2471 = distinct !{!2471, !2470, !"ext_602110_cos: argument 1"}
!2472 = !{!2469}
!2473 = !{!2471}
!2474 = !{!2475, !2477}
!2475 = distinct !{!2475, !2476, !"ext_602110_cos: argument 0"}
!2476 = distinct !{!2476, !"ext_602110_cos"}
!2477 = distinct !{!2477, !2476, !"ext_602110_cos: argument 1"}
!2478 = !{!2475}
!2479 = !{!2477}
!2480 = !{!2481, !2483}
!2481 = distinct !{!2481, !2482, !"ext_602110_cos: argument 0"}
!2482 = distinct !{!2482, !"ext_602110_cos"}
!2483 = distinct !{!2483, !2482, !"ext_602110_cos: argument 1"}
!2484 = !{!2481}
!2485 = !{!2483}
!2486 = !{!2487, !2489}
!2487 = distinct !{!2487, !2488, !"ext_6020f8_atan: argument 0"}
!2488 = distinct !{!2488, !"ext_6020f8_atan"}
!2489 = distinct !{!2489, !2488, !"ext_6020f8_atan: argument 1"}
!2490 = !{!2487}
!2491 = !{!2489}
!2492 = !{!2493, !2495}
!2493 = distinct !{!2493, !2494, !"ext_400750_sin: argument 0"}
!2494 = distinct !{!2494, !"ext_400750_sin"}
!2495 = distinct !{!2495, !2494, !"ext_400750_sin: argument 1"}
!2496 = !{!2493}
!2497 = !{!2495}
!2498 = !{!2499, !2501}
!2499 = distinct !{!2499, !2500, !"ext_602110_cos: argument 0"}
!2500 = distinct !{!2500, !"ext_602110_cos"}
!2501 = distinct !{!2501, !2500, !"ext_602110_cos: argument 1"}
!2502 = !{!2499}
!2503 = !{!2501}
!2504 = !{!2505, !2507}
!2505 = distinct !{!2505, !2506, !"ext_602110_cos: argument 0"}
!2506 = distinct !{!2506, !"ext_602110_cos"}
!2507 = distinct !{!2507, !2506, !"ext_602110_cos: argument 1"}
!2508 = !{!2505}
!2509 = !{!2507}
!2510 = !{!2511, !2513}
!2511 = distinct !{!2511, !2512, !"ext_602110_cos: argument 0"}
!2512 = distinct !{!2512, !"ext_602110_cos"}
!2513 = distinct !{!2513, !2512, !"ext_602110_cos: argument 1"}
!2514 = !{!2511}
!2515 = !{!2513}
!2516 = !{!2517, !2519}
!2517 = distinct !{!2517, !2518, !"ext_6020f8_atan: argument 0"}
!2518 = distinct !{!2518, !"ext_6020f8_atan"}
!2519 = distinct !{!2519, !2518, !"ext_6020f8_atan: argument 1"}
!2520 = !{!2517}
!2521 = !{!2519}
